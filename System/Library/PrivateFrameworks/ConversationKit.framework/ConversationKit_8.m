uint64_t destroy for Participant(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  type metadata accessor for Participant.State(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 5u:
      v4 = type metadata accessor for Date();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
      break;
    case 4u:
      v12 = type metadata accessor for Date();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(a1, v12);
      v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      v14 = a1 + *(int *)(v13 + 48);
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v14 + 120) >= 2uLL)
        __swift_destroy_boxed_opaque_existential_1(v14 + 96);
      if (*(_QWORD *)(v14 + 312))
      {
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
      }
      if (*(_QWORD *)(a1 + *(int *)(v13 + 64) + 8))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      break;
    default:
      break;
  }
  v5 = a1 + a2[5];
  v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = (id *)(a1 + a2[7]);
  if (*v7)
  {

    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v8 = a1 + a2[14];
  v9 = type metadata accessor for Date();
  if (!__swift_getEnumTagSinglePayload(v8, 1, v9))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  v10 = v8 + *(int *)(type metadata accessor for Participant.CountdownInfo(0) + 20);
  if (!__swift_getEnumTagSinglePayload(v10, 1, v9))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v10, v9);
  return swift_release();
}

_BYTE *initializeWithCopy for Participant(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  size_t v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  char *v40;
  char *v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  __int128 v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;

  v6 = type metadata accessor for Participant.State(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 5u:
      v7 = type metadata accessor for Date();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      goto LABEL_16;
    case 4u:
      v8 = type metadata accessor for Date();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      v10 = *(int *)(v9 + 48);
      v11 = &a1[v10];
      v12 = &a2[v10];
      *(_OWORD *)v11 = *(_OWORD *)&a2[v10];
      v13 = *(_QWORD *)&a2[v10 + 16];
      v14 = *(_QWORD *)&a2[v10 + 24];
      *((_QWORD *)v11 + 2) = v13;
      *((_QWORD *)v11 + 3) = v14;
      *((_WORD *)v11 + 16) = *((_WORD *)v12 + 16);
      *((_QWORD *)v11 + 5) = *((_QWORD *)v12 + 5);
      v11[48] = v12[48];
      *(_OWORD *)(v11 + 56) = *(_OWORD *)(v12 + 56);
      *(_OWORD *)(v11 + 72) = *(_OWORD *)(v12 + 72);
      v11[88] = v12[88];
      v11[89] = v12[89];
      v15 = *((_QWORD *)v12 + 15);
      swift_bridgeObjectRetain();
      if (v15)
      {
        if (v15 == 1)
        {
          v16 = v11 + 96;
          v17 = v12 + 96;
          v18 = 209;
          goto LABEL_10;
        }
        v20 = *((_QWORD *)v12 + 16);
        *((_QWORD *)v11 + 15) = v15;
        *((_QWORD *)v11 + 16) = v20;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v15 - 8))((uint64_t)(v11 + 96), (uint64_t)(v12 + 96), v15);
      }
      else
      {
        v19 = *((_OWORD *)v12 + 7);
        *((_OWORD *)v11 + 6) = *((_OWORD *)v12 + 6);
        *((_OWORD *)v11 + 7) = v19;
        *((_QWORD *)v11 + 16) = *((_QWORD *)v12 + 16);
      }
      *((_DWORD *)v11 + 34) = *((_DWORD *)v12 + 34);
      v21 = *((_OWORD *)v12 + 10);
      *((_OWORD *)v11 + 9) = *((_OWORD *)v12 + 9);
      *((_OWORD *)v11 + 10) = v21;
      *((_OWORD *)v11 + 11) = *((_OWORD *)v12 + 11);
      v11[192] = v12[192];
      v16 = v11 + 208;
      v17 = v12 + 208;
      *((_QWORD *)v11 + 25) = *((_QWORD *)v12 + 25);
      v18 = 97;
LABEL_10:
      memcpy(v16, v17, v18);
      v22 = *((_QWORD *)v12 + 39);
      if (v22)
      {
        v23 = *((_QWORD *)v12 + 40);
        v24 = *((_QWORD *)v12 + 41);
        *((_QWORD *)v11 + 39) = v22;
        *((_QWORD *)v11 + 40) = v23;
        *((_QWORD *)v11 + 41) = v24;
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v11 + 312) = *(_OWORD *)(v12 + 312);
        *((_QWORD *)v11 + 41) = *((_QWORD *)v12 + 41);
      }
      v25 = *(int *)(v9 + 64);
      v26 = &a1[v25];
      v27 = &a2[v25];
      v28 = *((_QWORD *)v27 + 1);
      if (v28)
      {
        *(_QWORD *)v26 = *(_QWORD *)v27;
        *((_QWORD *)v26 + 1) = v28;
        v29 = *((_QWORD *)v27 + 3);
        *((_QWORD *)v26 + 2) = *((_QWORD *)v27 + 2);
        *((_QWORD *)v26 + 3) = v29;
        v26[32] = v27[32];
        *(_OWORD *)(v26 + 40) = *(_OWORD *)(v27 + 40);
        *((_QWORD *)v26 + 7) = *((_QWORD *)v27 + 7);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v30 = *((_OWORD *)v27 + 1);
        *(_OWORD *)v26 = *(_OWORD *)v27;
        *((_OWORD *)v26 + 1) = v30;
        v31 = *((_OWORD *)v27 + 3);
        *((_OWORD *)v26 + 2) = *((_OWORD *)v27 + 2);
        *((_OWORD *)v26 + 3) = v31;
      }
LABEL_16:
      swift_storeEnumTagMultiPayload();
LABEL_17:
      v32 = a3[5];
      v33 = &a1[v32];
      v34 = &a2[v32];
      v35 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
      v36 = a3[6];
      v37 = a3[7];
      v38 = &a1[v36];
      v39 = &a2[v36];
      *(_DWORD *)v38 = *(_DWORD *)v39;
      v38[4] = v39[4];
      v40 = &a1[v37];
      v41 = &a2[v37];
      v42 = *(void **)v41;
      if (*(_QWORD *)v41)
      {
        v43 = *((_QWORD *)v41 + 1);
        *(_QWORD *)v40 = v42;
        *((_QWORD *)v40 + 1) = v43;
        v40[16] = v41[16];
        v44 = *((_QWORD *)v41 + 4);
        *((_QWORD *)v40 + 3) = *((_QWORD *)v41 + 3);
        *((_QWORD *)v40 + 4) = v44;
        v45 = v42;
        swift_bridgeObjectRetain();
      }
      else
      {
        v46 = *((_OWORD *)v41 + 1);
        *(_OWORD *)v40 = *(_OWORD *)v41;
        *((_OWORD *)v40 + 1) = v46;
        *((_QWORD *)v40 + 4) = *((_QWORD *)v41 + 4);
      }
      v47 = a3[9];
      *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
      v48 = &a1[v47];
      v49 = &a2[v47];
      v50 = v49[1];
      *v48 = *v49;
      v48[1] = v50;
      v51 = a3[11];
      a1[a3[10]] = a2[a3[10]];
      *(_QWORD *)&a1[v51] = *(_QWORD *)&a2[v51];
      v52 = a3[12];
      v53 = a3[13];
      v54 = *(void **)&a2[v52];
      *(_QWORD *)&a1[v52] = v54;
      a1[v53] = a2[v53];
      v55 = a3[14];
      v56 = &a1[v55];
      v57 = &a2[v55];
      v58 = type metadata accessor for Date();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v59 = v54;
      if (__swift_getEnumTagSinglePayload((uint64_t)v57, 1, v58))
      {
        v60 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
        memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(v56, v57, v58);
        __swift_storeEnumTagSinglePayload((uint64_t)v56, 0, 1, v58);
      }
      v61 = type metadata accessor for Participant.CountdownInfo(0);
      v62 = *(int *)(v61 + 20);
      v63 = &v56[v62];
      v64 = &v57[v62];
      if (__swift_getEnumTagSinglePayload((uint64_t)&v57[v62], 1, v58))
      {
        v65 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
        memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(v63, v64, v58);
        __swift_storeEnumTagSinglePayload((uint64_t)v63, 0, 1, v58);
      }
      v56[*(int *)(v61 + 24)] = v57[*(int *)(v61 + 24)];
      v66 = a3[16];
      a1[a3[15]] = a2[a3[15]];
      *(_QWORD *)&a1[v66] = *(_QWORD *)&a2[v66];
      swift_retain();
      return a1;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      goto LABEL_17;
  }
}

char *assignWithCopy for Participant(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  void *v17;
  const void *v18;
  size_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  char *v28;
  char *v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  void *v43;
  void *v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  void *v57;
  void *v58;
  id v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  int EnumTagSinglePayload;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  int v72;
  int v73;
  uint64_t v74;
  uint64_t v75;

  if (a1 != a2)
  {
    outlined destroy of AccountUpdateNotice((uint64_t)a1, type metadata accessor for Participant.State);
    v6 = type metadata accessor for Participant.State(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        v7 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
        goto LABEL_17;
      case 4u:
        v8 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
        v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        v10 = *(int *)(v9 + 48);
        v11 = &a1[v10];
        v12 = &a2[v10];
        *(_OWORD *)v11 = *(_OWORD *)&a2[v10];
        *((_QWORD *)v11 + 2) = *(_QWORD *)&a2[v10 + 16];
        v13 = *(_QWORD *)&a2[v10 + 24];
        *((_WORD *)v11 + 16) = *((_WORD *)v12 + 16);
        *((_QWORD *)v11 + 3) = v13;
        *((_QWORD *)v11 + 5) = *((_QWORD *)v12 + 5);
        v11[48] = v12[48];
        v14 = *(_OWORD *)(v12 + 72);
        v15 = *(_OWORD *)(v12 + 56);
        v11[88] = v12[88];
        *(_OWORD *)(v11 + 56) = v15;
        *(_OWORD *)(v11 + 72) = v14;
        v11[89] = v12[89];
        v16 = *((_QWORD *)v12 + 15);
        swift_bridgeObjectRetain();
        if (v16)
        {
          if (v16 == 1)
          {
            v17 = v11 + 96;
            v18 = v12 + 96;
            v19 = 209;
            goto LABEL_11;
          }
          *((_QWORD *)v11 + 15) = v16;
          *((_QWORD *)v11 + 16) = *((_QWORD *)v12 + 16);
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v16 - 8))((uint64_t)(v11 + 96), (uint64_t)(v12 + 96), v16);
        }
        else
        {
          v20 = *((_OWORD *)v12 + 6);
          v21 = *((_OWORD *)v12 + 7);
          *((_QWORD *)v11 + 16) = *((_QWORD *)v12 + 16);
          *((_OWORD *)v11 + 6) = v20;
          *((_OWORD *)v11 + 7) = v21;
        }
        *((_DWORD *)v11 + 34) = *((_DWORD *)v12 + 34);
        *((_QWORD *)v11 + 18) = *((_QWORD *)v12 + 18);
        *((_QWORD *)v11 + 19) = *((_QWORD *)v12 + 19);
        v22 = *((_OWORD *)v12 + 10);
        v23 = *((_OWORD *)v12 + 11);
        v11[192] = v12[192];
        *((_OWORD *)v11 + 10) = v22;
        *((_OWORD *)v11 + 11) = v23;
        *((_QWORD *)v11 + 25) = *((_QWORD *)v12 + 25);
        v17 = v11 + 208;
        v18 = v12 + 208;
        v19 = 97;
LABEL_11:
        memcpy(v17, v18, v19);
        v24 = *((_QWORD *)v12 + 39);
        if (v24)
        {
          v25 = *((_QWORD *)v12 + 40);
          *((_QWORD *)v11 + 39) = v24;
          *((_QWORD *)v11 + 40) = v25;
          *((_QWORD *)v11 + 41) = *((_QWORD *)v12 + 41);
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v26 = *(_OWORD *)(v12 + 312);
          *((_QWORD *)v11 + 41) = *((_QWORD *)v12 + 41);
          *(_OWORD *)(v11 + 312) = v26;
        }
        v27 = *(int *)(v9 + 64);
        v28 = &a1[v27];
        v29 = &a2[v27];
        if (*((_QWORD *)v29 + 1))
        {
          *(_QWORD *)v28 = *(_QWORD *)v29;
          *((_QWORD *)v28 + 1) = *((_QWORD *)v29 + 1);
          *((_QWORD *)v28 + 2) = *((_QWORD *)v29 + 2);
          *((_QWORD *)v28 + 3) = *((_QWORD *)v29 + 3);
          v28[32] = v29[32];
          *((_QWORD *)v28 + 5) = *((_QWORD *)v29 + 5);
          *((_QWORD *)v28 + 6) = *((_QWORD *)v29 + 6);
          *((_QWORD *)v28 + 7) = *((_QWORD *)v29 + 7);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v30 = *(_OWORD *)v29;
          v31 = *((_OWORD *)v29 + 1);
          v32 = *((_OWORD *)v29 + 3);
          *((_OWORD *)v28 + 2) = *((_OWORD *)v29 + 2);
          *((_OWORD *)v28 + 3) = v32;
          *(_OWORD *)v28 = v30;
          *((_OWORD *)v28 + 1) = v31;
        }
LABEL_17:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        break;
    }
  }
  v33 = a3[5];
  v34 = &a1[v33];
  v35 = &a2[v33];
  v36 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 24))(v34, v35, v36);
  v37 = a3[6];
  v38 = &a1[v37];
  v39 = &a2[v37];
  *v38 = *v39;
  v38[1] = v39[1];
  v38[2] = v39[2];
  v38[3] = v39[3];
  v38[4] = v39[4];
  v40 = a3[7];
  v41 = &a1[v40];
  v42 = &a2[v40];
  v43 = *(void **)&a1[v40];
  v44 = *(void **)&a2[v40];
  if (v43)
  {
    if (v44)
    {
      *(_QWORD *)v41 = v44;
      v45 = v44;

      v46 = *((_QWORD *)v42 + 1);
      v41[16] = v42[16];
      *((_QWORD *)v41 + 1) = v46;
      *((_QWORD *)v41 + 3) = *((_QWORD *)v42 + 3);
      *((_QWORD *)v41 + 4) = *((_QWORD *)v42 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      outlined destroy of Participant.RemoteIdentifiers((id *)v41);
      v49 = *((_QWORD *)v42 + 4);
      v50 = *((_OWORD *)v42 + 1);
      *(_OWORD *)v41 = *(_OWORD *)v42;
      *((_OWORD *)v41 + 1) = v50;
      *((_QWORD *)v41 + 4) = v49;
    }
  }
  else if (v44)
  {
    *(_QWORD *)v41 = v44;
    v47 = *((_QWORD *)v42 + 1);
    v41[16] = v42[16];
    *((_QWORD *)v41 + 1) = v47;
    *((_QWORD *)v41 + 3) = *((_QWORD *)v42 + 3);
    *((_QWORD *)v41 + 4) = *((_QWORD *)v42 + 4);
    v48 = v44;
    swift_bridgeObjectRetain();
  }
  else
  {
    v51 = *(_OWORD *)v42;
    v52 = *((_OWORD *)v42 + 1);
    *((_QWORD *)v41 + 4) = *((_QWORD *)v42 + 4);
    *(_OWORD *)v41 = v51;
    *((_OWORD *)v41 + 1) = v52;
  }
  *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v53 = a3[9];
  v54 = &a1[v53];
  v55 = &a2[v53];
  *(_QWORD *)v54 = *(_QWORD *)v55;
  *((_QWORD *)v54 + 1) = *((_QWORD *)v55 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[a3[10]] = a2[a3[10]];
  *(_QWORD *)&a1[a3[11]] = *(_QWORD *)&a2[a3[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v56 = a3[12];
  v57 = *(void **)&a1[v56];
  v58 = *(void **)&a2[v56];
  *(_QWORD *)&a1[v56] = v58;
  v59 = v58;

  a1[a3[13]] = a2[a3[13]];
  v60 = a3[14];
  v61 = &a1[v60];
  v62 = &a2[v60];
  v63 = type metadata accessor for Date();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v61, 1, v63);
  v65 = __swift_getEnumTagSinglePayload((uint64_t)v62, 1, v63);
  if (EnumTagSinglePayload)
  {
    if (!v65)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 16))(v61, v62, v63);
      __swift_storeEnumTagSinglePayload((uint64_t)v61, 0, 1, v63);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  v66 = *(_QWORD *)(v63 - 8);
  if (v65)
  {
    (*(void (**)(char *, uint64_t))(v66 + 8))(v61, v63);
LABEL_30:
    v67 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v66 + 24))(v61, v62, v63);
LABEL_31:
  v68 = type metadata accessor for Participant.CountdownInfo(0);
  v69 = *(int *)(v68 + 20);
  v70 = &v61[v69];
  v71 = &v62[v69];
  v72 = __swift_getEnumTagSinglePayload((uint64_t)&v61[v69], 1, v63);
  v73 = __swift_getEnumTagSinglePayload((uint64_t)v71, 1, v63);
  if (!v72)
  {
    v74 = *(_QWORD *)(v63 - 8);
    if (!v73)
    {
      (*(void (**)(char *, char *, uint64_t))(v74 + 24))(v70, v71, v63);
      goto LABEL_37;
    }
    (*(void (**)(char *, uint64_t))(v74 + 8))(v70, v63);
    goto LABEL_36;
  }
  if (v73)
  {
LABEL_36:
    v75 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 16))(v70, v71, v63);
  __swift_storeEnumTagSinglePayload((uint64_t)v70, 0, 1, v63);
LABEL_37:
  v61[*(int *)(v68 + 24)] = v62[*(int *)(v68 + 24)];
  a1[a3[15]] = a2[a3[15]];
  *(_QWORD *)&a1[a3[16]] = *(_QWORD *)&a2[a3[16]];
  swift_retain();
  swift_release();
  return a1;
}

char *initializeWithTake for Participant(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;

  v6 = type metadata accessor for Participant.State(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 5u:
      v14 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a1, a2, v14);
      goto LABEL_5;
    case 4u:
      v7 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      memcpy(&a1[*(int *)(v8 + 48)], &a2[*(int *)(v8 + 48)], 0x150uLL);
      v9 = *(int *)(v8 + 64);
      v10 = &a1[v9];
      v11 = &a2[v9];
      v12 = *((_OWORD *)v11 + 1);
      *(_OWORD *)v10 = *(_OWORD *)v11;
      *((_OWORD *)v10 + 1) = v12;
      v13 = *((_OWORD *)v11 + 3);
      *((_OWORD *)v10 + 2) = *((_OWORD *)v11 + 2);
      *((_OWORD *)v10 + 3) = v13;
LABEL_5:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      break;
  }
  v15 = a3[5];
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[6];
  v20 = a3[7];
  v21 = &a1[v19];
  v22 = &a2[v19];
  *(_DWORD *)v21 = *(_DWORD *)v22;
  v21[4] = v22[4];
  v23 = &a1[v20];
  v24 = &a2[v20];
  v25 = *((_OWORD *)v24 + 1);
  *(_OWORD *)v23 = *(_OWORD *)v24;
  *((_OWORD *)v23 + 1) = v25;
  *((_QWORD *)v23 + 4) = *((_QWORD *)v24 + 4);
  v26 = a3[9];
  *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
  *(_OWORD *)&a1[v26] = *(_OWORD *)&a2[v26];
  v27 = a3[11];
  a1[a3[10]] = a2[a3[10]];
  *(_QWORD *)&a1[v27] = *(_QWORD *)&a2[v27];
  v28 = a3[13];
  *(_QWORD *)&a1[a3[12]] = *(_QWORD *)&a2[a3[12]];
  a1[v28] = a2[v28];
  v29 = a3[14];
  v30 = &a1[v29];
  v31 = &a2[v29];
  v32 = type metadata accessor for Date();
  if (__swift_getEnumTagSinglePayload((uint64_t)v31, 1, v32))
  {
    v33 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v30, v31, v32);
    __swift_storeEnumTagSinglePayload((uint64_t)v30, 0, 1, v32);
  }
  v34 = type metadata accessor for Participant.CountdownInfo(0);
  v35 = *(int *)(v34 + 20);
  v36 = &v30[v35];
  v37 = &v31[v35];
  if (__swift_getEnumTagSinglePayload((uint64_t)&v31[v35], 1, v32))
  {
    v38 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v36, v37, v32);
    __swift_storeEnumTagSinglePayload((uint64_t)v36, 0, 1, v32);
  }
  v30[*(int *)(v34 + 24)] = v31[*(int *)(v34 + 24)];
  v39 = a3[16];
  a1[a3[15]] = a2[a3[15]];
  *(_QWORD *)&a1[v39] = *(_QWORD *)&a2[v39];
  return a1;
}

char *assignWithTake for Participant(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  void *v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  int EnumTagSinglePayload;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  int v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  if (a1 != a2)
  {
    outlined destroy of AccountUpdateNotice((uint64_t)a1, type metadata accessor for Participant.State);
    v6 = type metadata accessor for Participant.State(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        v14 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a1, a2, v14);
        goto LABEL_5;
      case 4u:
        v7 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
        v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        memcpy(&a1[*(int *)(v8 + 48)], &a2[*(int *)(v8 + 48)], 0x150uLL);
        v9 = *(int *)(v8 + 64);
        v10 = &a1[v9];
        v11 = &a2[v9];
        v12 = *((_OWORD *)v11 + 1);
        *(_OWORD *)v10 = *(_OWORD *)v11;
        *((_OWORD *)v10 + 1) = v12;
        v13 = *((_OWORD *)v11 + 3);
        *((_OWORD *)v10 + 2) = *((_OWORD *)v11 + 2);
        *((_OWORD *)v10 + 3) = v13;
LABEL_5:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        break;
    }
  }
  v15 = a3[5];
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[6];
  v20 = a3[7];
  v21 = &a1[v19];
  v22 = &a2[v19];
  *v21 = *v22;
  v21[1] = v22[1];
  v21[2] = v22[2];
  v21[3] = v22[3];
  v21[4] = v22[4];
  v23 = &a1[v20];
  v24 = &a2[v20];
  v25 = *(void **)&a1[v20];
  if (v25)
  {
    if (*(_QWORD *)v24)
    {
      *(_QWORD *)v23 = *(_QWORD *)v24;

      *((_QWORD *)v23 + 1) = *((_QWORD *)v24 + 1);
      v23[16] = v24[16];
      v26 = *((_QWORD *)v24 + 4);
      *((_QWORD *)v23 + 3) = *((_QWORD *)v24 + 3);
      *((_QWORD *)v23 + 4) = v26;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    outlined destroy of Participant.RemoteIdentifiers((id *)v23);
  }
  v27 = *((_OWORD *)v24 + 1);
  *(_OWORD *)v23 = *(_OWORD *)v24;
  *((_OWORD *)v23 + 1) = v27;
  *((_QWORD *)v23 + 4) = *((_QWORD *)v24 + 4);
LABEL_11:
  *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
  swift_bridgeObjectRelease();
  v28 = a3[9];
  v29 = &a1[v28];
  v30 = &a2[v28];
  v32 = *(_QWORD *)v30;
  v31 = *((_QWORD *)v30 + 1);
  *(_QWORD *)v29 = v32;
  *((_QWORD *)v29 + 1) = v31;
  swift_bridgeObjectRelease();
  v33 = a3[11];
  a1[a3[10]] = a2[a3[10]];
  *(_QWORD *)&a1[v33] = *(_QWORD *)&a2[v33];
  swift_bridgeObjectRelease();
  v34 = a3[12];
  v35 = *(void **)&a1[v34];
  *(_QWORD *)&a1[v34] = *(_QWORD *)&a2[v34];

  v36 = a3[14];
  a1[a3[13]] = a2[a3[13]];
  v37 = &a1[v36];
  v38 = &a2[v36];
  v39 = type metadata accessor for Date();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v37, 1, v39);
  v41 = __swift_getEnumTagSinglePayload((uint64_t)v38, 1, v39);
  if (EnumTagSinglePayload)
  {
    if (!v41)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v37, v38, v39);
      __swift_storeEnumTagSinglePayload((uint64_t)v37, 0, 1, v39);
      goto LABEL_17;
    }
    goto LABEL_16;
  }
  v42 = *(_QWORD *)(v39 - 8);
  if (v41)
  {
    (*(void (**)(char *, uint64_t))(v42 + 8))(v37, v39);
LABEL_16:
    v43 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    goto LABEL_17;
  }
  (*(void (**)(char *, char *, uint64_t))(v42 + 40))(v37, v38, v39);
LABEL_17:
  v44 = type metadata accessor for Participant.CountdownInfo(0);
  v45 = *(int *)(v44 + 20);
  v46 = &v37[v45];
  v47 = &v38[v45];
  v48 = __swift_getEnumTagSinglePayload((uint64_t)&v37[v45], 1, v39);
  v49 = __swift_getEnumTagSinglePayload((uint64_t)v47, 1, v39);
  if (!v48)
  {
    v50 = *(_QWORD *)(v39 - 8);
    if (!v49)
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 40))(v46, v47, v39);
      goto LABEL_23;
    }
    (*(void (**)(char *, uint64_t))(v50 + 8))(v46, v39);
    goto LABEL_22;
  }
  if (v49)
  {
LABEL_22:
    v51 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    goto LABEL_23;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v46, v47, v39);
  __swift_storeEnumTagSinglePayload((uint64_t)v46, 0, 1, v39);
LABEL_23:
  v37[*(int *)(v44 + 24)] = v38[*(int *)(v44 + 24)];
  v52 = a3[16];
  a1[a3[15]] = a2[a3[15]];
  *(_QWORD *)&a1[v52] = *(_QWORD *)&a2[v52];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for Participant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1BD40A9B0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;

  type metadata accessor for Participant.State(0);
  OUTLINED_FUNCTION_44_6();
  if (v9)
  {
    v7 = v6;
    v8 = a1;
  }
  else
  {
    OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_44_6();
    if (v9)
    {
      v7 = v10;
      v11 = a3[5];
    }
    else
    {
      if ((_DWORD)a2 == 0x7FFFFFFF)
      {
        OUTLINED_FUNCTION_93_0(*(_QWORD *)(a1 + a3[8]));
        OUTLINED_FUNCTION_18();
        return;
      }
      v7 = type metadata accessor for Participant.CountdownInfo(0);
      v11 = a3[14];
    }
    v8 = a1 + v11;
  }
  OUTLINED_FUNCTION_1_16(v8, a2, v7);
}

uint64_t storeEnumTagSinglePayload for Participant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1BD40AA4C()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_265_4();
  type metadata accessor for Participant.State(0);
  OUTLINED_FUNCTION_45_7();
  if (v7)
  {
    v5 = v4;
    v6 = v1;
  }
  else
  {
    OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_45_7();
    if (v7)
    {
      v5 = v8;
      v9 = v2[5];
    }
    else
    {
      if (v3 == 0x7FFFFFFF)
      {
        *(_QWORD *)(v1 + v2[8]) = (v0 - 1);
        OUTLINED_FUNCTION_18();
        return;
      }
      v5 = type metadata accessor for Participant.CountdownInfo(0);
      v9 = v2[14];
    }
    v6 = v1 + v9;
  }
  OUTLINED_FUNCTION_0_29(v6, v0, v0, v5);
}

uint64_t type metadata completion function for Participant()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = type metadata accessor for Participant.State(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for UUID();
    if (v2 <= 0x3F)
    {
      result = type metadata accessor for Participant.CountdownInfo(319);
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for Participant.State(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  const void *v18;
  size_t v19;
  __int128 v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        v7 = type metadata accessor for Date();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
        goto LABEL_18;
      case 4u:
        v9 = type metadata accessor for Date();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
        v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        v11 = *(int *)(v10 + 48);
        v12 = (char *)a1 + v11;
        v13 = (char *)a2 + v11;
        *(_OWORD *)v12 = *(_OWORD *)((char *)a2 + v11);
        v14 = *(uint64_t *)((char *)a2 + v11 + 16);
        v15 = *(uint64_t *)((char *)a2 + v11 + 24);
        *((_QWORD *)v12 + 2) = v14;
        *((_QWORD *)v12 + 3) = v15;
        *((_WORD *)v12 + 16) = *((_WORD *)v13 + 16);
        *((_QWORD *)v12 + 5) = *((_QWORD *)v13 + 5);
        v12[48] = v13[48];
        *(_OWORD *)(v12 + 56) = *(_OWORD *)(v13 + 56);
        *(_OWORD *)(v12 + 72) = *(_OWORD *)(v13 + 72);
        v12[88] = v13[88];
        v12[89] = v13[89];
        v16 = *((_QWORD *)v13 + 15);
        swift_bridgeObjectRetain();
        if (v16)
        {
          if (v16 == 1)
          {
            v17 = v12 + 96;
            v18 = v13 + 96;
            v19 = 209;
            goto LABEL_12;
          }
          v21 = *((_QWORD *)v13 + 16);
          *((_QWORD *)v12 + 15) = v16;
          *((_QWORD *)v12 + 16) = v21;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v16 - 8))((uint64_t)(v12 + 96), (uint64_t)(v13 + 96), v16);
        }
        else
        {
          v20 = *((_OWORD *)v13 + 7);
          *((_OWORD *)v12 + 6) = *((_OWORD *)v13 + 6);
          *((_OWORD *)v12 + 7) = v20;
          *((_QWORD *)v12 + 16) = *((_QWORD *)v13 + 16);
        }
        *((_DWORD *)v12 + 34) = *((_DWORD *)v13 + 34);
        v22 = *((_OWORD *)v13 + 10);
        *((_OWORD *)v12 + 9) = *((_OWORD *)v13 + 9);
        *((_OWORD *)v12 + 10) = v22;
        *((_OWORD *)v12 + 11) = *((_OWORD *)v13 + 11);
        v12[192] = v13[192];
        v17 = v12 + 208;
        v18 = v13 + 208;
        *((_QWORD *)v12 + 25) = *((_QWORD *)v13 + 25);
        v19 = 97;
LABEL_12:
        memcpy(v17, v18, v19);
        v23 = *((_QWORD *)v13 + 39);
        if (v23)
        {
          v24 = *((_QWORD *)v13 + 40);
          v25 = *((_QWORD *)v13 + 41);
          *((_QWORD *)v12 + 39) = v23;
          *((_QWORD *)v12 + 40) = v24;
          *((_QWORD *)v12 + 41) = v25;
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v12 + 312) = *(_OWORD *)(v13 + 312);
          *((_QWORD *)v12 + 41) = *((_QWORD *)v13 + 41);
        }
        v26 = *(int *)(v10 + 64);
        v27 = (char *)a1 + v26;
        v28 = (char *)a2 + v26;
        v29 = *((_QWORD *)v28 + 1);
        if (v29)
        {
          *(_QWORD *)v27 = *(_QWORD *)v28;
          *((_QWORD *)v27 + 1) = v29;
          v30 = *((_QWORD *)v28 + 3);
          *((_QWORD *)v27 + 2) = *((_QWORD *)v28 + 2);
          *((_QWORD *)v27 + 3) = v30;
          v27[32] = v28[32];
          *(_OWORD *)(v27 + 40) = *(_OWORD *)(v28 + 40);
          *((_QWORD *)v27 + 7) = *((_QWORD *)v28 + 7);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v31 = *((_OWORD *)v28 + 1);
          *(_OWORD *)v27 = *(_OWORD *)v28;
          *((_OWORD *)v27 + 1) = v31;
          v32 = *((_OWORD *)v28 + 3);
          *((_OWORD *)v27 + 2) = *((_OWORD *)v28 + 2);
          *((_OWORD *)v27 + 3) = v32;
        }
LABEL_18:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        return a1;
    }
  }
  return a1;
}

uint64_t destroy for Participant.State(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 5:
      v3 = type metadata accessor for Date();
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
      break;
    case 4:
      v4 = type metadata accessor for Date();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
      v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      v6 = a1 + *(int *)(v5 + 48);
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v6 + 120) >= 2uLL)
        __swift_destroy_boxed_opaque_existential_1(v6 + 96);
      if (*(_QWORD *)(v6 + 312))
      {
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
      }
      result = *(_QWORD *)(a1 + *(int *)(v5 + 64) + 8);
      if (result)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
      }
      break;
    default:
      return result;
  }
  return result;
}

char *initializeWithCopy for Participant.State(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  size_t v17;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 5u:
      v6 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      goto LABEL_16;
    case 4u:
      v7 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      v9 = *(int *)(v8 + 48);
      v10 = &a1[v9];
      v11 = &a2[v9];
      *(_OWORD *)v10 = *(_OWORD *)&a2[v9];
      v12 = *(_QWORD *)&a2[v9 + 16];
      v13 = *(_QWORD *)&a2[v9 + 24];
      *((_QWORD *)v10 + 2) = v12;
      *((_QWORD *)v10 + 3) = v13;
      *((_WORD *)v10 + 16) = *((_WORD *)v11 + 16);
      *((_QWORD *)v10 + 5) = *((_QWORD *)v11 + 5);
      v10[48] = v11[48];
      *(_OWORD *)(v10 + 56) = *(_OWORD *)(v11 + 56);
      *(_OWORD *)(v10 + 72) = *(_OWORD *)(v11 + 72);
      v10[88] = v11[88];
      v10[89] = v11[89];
      v14 = *((_QWORD *)v11 + 15);
      swift_bridgeObjectRetain();
      if (v14)
      {
        if (v14 == 1)
        {
          v15 = v10 + 96;
          v16 = v11 + 96;
          v17 = 209;
          goto LABEL_10;
        }
        v19 = *((_QWORD *)v11 + 16);
        *((_QWORD *)v10 + 15) = v14;
        *((_QWORD *)v10 + 16) = v19;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v14 - 8))((uint64_t)(v10 + 96), (uint64_t)(v11 + 96), v14);
      }
      else
      {
        v18 = *((_OWORD *)v11 + 7);
        *((_OWORD *)v10 + 6) = *((_OWORD *)v11 + 6);
        *((_OWORD *)v10 + 7) = v18;
        *((_QWORD *)v10 + 16) = *((_QWORD *)v11 + 16);
      }
      *((_DWORD *)v10 + 34) = *((_DWORD *)v11 + 34);
      v20 = *((_OWORD *)v11 + 10);
      *((_OWORD *)v10 + 9) = *((_OWORD *)v11 + 9);
      *((_OWORD *)v10 + 10) = v20;
      *((_OWORD *)v10 + 11) = *((_OWORD *)v11 + 11);
      v10[192] = v11[192];
      v15 = v10 + 208;
      v16 = v11 + 208;
      *((_QWORD *)v10 + 25) = *((_QWORD *)v11 + 25);
      v17 = 97;
LABEL_10:
      memcpy(v15, v16, v17);
      v21 = *((_QWORD *)v11 + 39);
      if (v21)
      {
        v22 = *((_QWORD *)v11 + 40);
        v23 = *((_QWORD *)v11 + 41);
        *((_QWORD *)v10 + 39) = v21;
        *((_QWORD *)v10 + 40) = v22;
        *((_QWORD *)v10 + 41) = v23;
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v10 + 312) = *(_OWORD *)(v11 + 312);
        *((_QWORD *)v10 + 41) = *((_QWORD *)v11 + 41);
      }
      v24 = *(int *)(v8 + 64);
      v25 = &a1[v24];
      v26 = &a2[v24];
      v27 = *((_QWORD *)v26 + 1);
      if (v27)
      {
        *(_QWORD *)v25 = *(_QWORD *)v26;
        *((_QWORD *)v25 + 1) = v27;
        v28 = *((_QWORD *)v26 + 3);
        *((_QWORD *)v25 + 2) = *((_QWORD *)v26 + 2);
        *((_QWORD *)v25 + 3) = v28;
        v25[32] = v26[32];
        *(_OWORD *)(v25 + 40) = *(_OWORD *)(v26 + 40);
        *((_QWORD *)v25 + 7) = *((_QWORD *)v26 + 7);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v29 = *((_OWORD *)v26 + 1);
        *(_OWORD *)v25 = *(_OWORD *)v26;
        *((_OWORD *)v25 + 1) = v29;
        v30 = *((_OWORD *)v26 + 3);
        *((_OWORD *)v25 + 2) = *((_OWORD *)v26 + 2);
        *((_OWORD *)v25 + 3) = v30;
      }
LABEL_16:
      swift_storeEnumTagMultiPayload();
      return a1;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      return a1;
  }
}

char *assignWithCopy for Participant.State(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  size_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  char *v27;
  char *v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;

  if (a1 != a2)
  {
    outlined destroy of AccountUpdateNotice((uint64_t)a1, type metadata accessor for Participant.State);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        v6 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
        goto LABEL_17;
      case 4u:
        v7 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
        v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        v9 = *(int *)(v8 + 48);
        v10 = &a1[v9];
        v11 = &a2[v9];
        *(_OWORD *)v10 = *(_OWORD *)&a2[v9];
        *((_QWORD *)v10 + 2) = *(_QWORD *)&a2[v9 + 16];
        v12 = *(_QWORD *)&a2[v9 + 24];
        *((_WORD *)v10 + 16) = *((_WORD *)v11 + 16);
        *((_QWORD *)v10 + 3) = v12;
        *((_QWORD *)v10 + 5) = *((_QWORD *)v11 + 5);
        v10[48] = v11[48];
        v13 = *(_OWORD *)(v11 + 72);
        v14 = *(_OWORD *)(v11 + 56);
        v10[88] = v11[88];
        *(_OWORD *)(v10 + 56) = v14;
        *(_OWORD *)(v10 + 72) = v13;
        v10[89] = v11[89];
        v15 = *((_QWORD *)v11 + 15);
        swift_bridgeObjectRetain();
        if (v15)
        {
          if (v15 == 1)
          {
            v16 = v10 + 96;
            v17 = v11 + 96;
            v18 = 209;
            goto LABEL_11;
          }
          *((_QWORD *)v10 + 15) = v15;
          *((_QWORD *)v10 + 16) = *((_QWORD *)v11 + 16);
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v15 - 8))((uint64_t)(v10 + 96), (uint64_t)(v11 + 96), v15);
        }
        else
        {
          v19 = *((_OWORD *)v11 + 6);
          v20 = *((_OWORD *)v11 + 7);
          *((_QWORD *)v10 + 16) = *((_QWORD *)v11 + 16);
          *((_OWORD *)v10 + 6) = v19;
          *((_OWORD *)v10 + 7) = v20;
        }
        *((_DWORD *)v10 + 34) = *((_DWORD *)v11 + 34);
        *((_QWORD *)v10 + 18) = *((_QWORD *)v11 + 18);
        *((_QWORD *)v10 + 19) = *((_QWORD *)v11 + 19);
        v21 = *((_OWORD *)v11 + 10);
        v22 = *((_OWORD *)v11 + 11);
        v10[192] = v11[192];
        *((_OWORD *)v10 + 10) = v21;
        *((_OWORD *)v10 + 11) = v22;
        *((_QWORD *)v10 + 25) = *((_QWORD *)v11 + 25);
        v16 = v10 + 208;
        v17 = v11 + 208;
        v18 = 97;
LABEL_11:
        memcpy(v16, v17, v18);
        v23 = *((_QWORD *)v11 + 39);
        if (v23)
        {
          v24 = *((_QWORD *)v11 + 40);
          *((_QWORD *)v10 + 39) = v23;
          *((_QWORD *)v10 + 40) = v24;
          *((_QWORD *)v10 + 41) = *((_QWORD *)v11 + 41);
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v25 = *(_OWORD *)(v11 + 312);
          *((_QWORD *)v10 + 41) = *((_QWORD *)v11 + 41);
          *(_OWORD *)(v10 + 312) = v25;
        }
        v26 = *(int *)(v8 + 64);
        v27 = &a1[v26];
        v28 = &a2[v26];
        if (*((_QWORD *)v28 + 1))
        {
          *(_QWORD *)v27 = *(_QWORD *)v28;
          *((_QWORD *)v27 + 1) = *((_QWORD *)v28 + 1);
          *((_QWORD *)v27 + 2) = *((_QWORD *)v28 + 2);
          *((_QWORD *)v27 + 3) = *((_QWORD *)v28 + 3);
          v27[32] = v28[32];
          *((_QWORD *)v27 + 5) = *((_QWORD *)v28 + 5);
          *((_QWORD *)v27 + 6) = *((_QWORD *)v28 + 6);
          *((_QWORD *)v27 + 7) = *((_QWORD *)v28 + 7);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v29 = *(_OWORD *)v28;
          v30 = *((_OWORD *)v28 + 1);
          v31 = *((_OWORD *)v28 + 3);
          *((_OWORD *)v27 + 2) = *((_OWORD *)v28 + 2);
          *((_OWORD *)v27 + 3) = v31;
          *(_OWORD *)v27 = v29;
          *((_OWORD *)v27 + 1) = v30;
        }
LABEL_17:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        return a1;
    }
  }
  return a1;
}

char *initializeWithTake for Participant.State(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 5u:
      v13 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a1, a2, v13);
      goto LABEL_5;
    case 4u:
      v6 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      memcpy(&a1[*(int *)(v7 + 48)], &a2[*(int *)(v7 + 48)], 0x150uLL);
      v8 = *(int *)(v7 + 64);
      v9 = &a1[v8];
      v10 = &a2[v8];
      v11 = *((_OWORD *)v10 + 1);
      *(_OWORD *)v9 = *(_OWORD *)v10;
      *((_OWORD *)v9 + 1) = v11;
      v12 = *((_OWORD *)v10 + 3);
      *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
      *((_OWORD *)v9 + 3) = v12;
LABEL_5:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *assignWithTake for Participant.State(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;

  if (a1 != a2)
  {
    outlined destroy of AccountUpdateNotice((uint64_t)a1, type metadata accessor for Participant.State);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        v13 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a1, a2, v13);
        goto LABEL_5;
      case 4u:
        v6 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
        v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        memcpy(&a1[*(int *)(v7 + 48)], &a2[*(int *)(v7 + 48)], 0x150uLL);
        v8 = *(int *)(v7 + 64);
        v9 = &a1[v8];
        v10 = &a2[v8];
        v11 = *((_OWORD *)v10 + 1);
        *(_OWORD *)v9 = *(_OWORD *)v10;
        *((_OWORD *)v9 + 1) = v11;
        v12 = *((_OWORD *)v10 + 3);
        *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
        *((_OWORD *)v9 + 3) = v12;
LABEL_5:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t type metadata completion function for Participant.State()
{
  uint64_t result;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;

  result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    v3 = *(_QWORD *)(result - 8) + 64;
    v4 = v3;
    v5 = v3;
    v6 = v3;
    swift_getTupleTypeLayout3();
    v7 = &v2;
    v8 = v3;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t initializeWithCopy for Participant.RemoteIdentifiers(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  v6 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Participant.RemoteIdentifiers(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v7;
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for Participant.RemoteIdentifiers(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for Participant.RemoteIdentifiers()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t __swift_memcpy5_1(uint64_t result, int *a2)
{
  int v2;

  v2 = *a2;
  *(_BYTE *)(result + 4) = *((_BYTE *)a2 + 4);
  *(_DWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for Participant.Capabilities(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  BOOL v4;

  if (a2)
  {
    if (a2 >= 0xFF && a1[5])
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *a1;
      v4 = v3 >= 2;
      v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Participant.Capabilities(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 4) = 0;
    *(_DWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 5) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 5) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

void type metadata accessor for Participant.Capabilities()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t destroy for Participant.MediaInfo(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 120) >= 2uLL)
    __swift_destroy_boxed_opaque_existential_1(a1 + 96);
  result = *(_QWORD *)(a1 + 312);
  if (result)
  {
    swift_unknownObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for Participant.MediaInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _OWORD *v5;
  _OWORD *v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  size_t v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_BYTE *)(a1 + 89) = *(_BYTE *)(a2 + 89);
  v5 = (_OWORD *)(a1 + 96);
  v6 = (_OWORD *)(a2 + 96);
  v7 = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRetain();
  if (v7)
  {
    if (v7 == 1)
    {
      v8 = (void *)(a1 + 96);
      v9 = v6;
      v10 = 209;
      goto LABEL_7;
    }
    v12 = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 120) = v7;
    *(_QWORD *)(a1 + 128) = v12;
    (**(void (***)(uint64_t, _OWORD *, uint64_t))(v7 - 8))(a1 + 96, v6, v7);
  }
  else
  {
    v11 = v6[1];
    *v5 = *v6;
    *(_OWORD *)(a1 + 112) = v11;
    *(_QWORD *)(a1 + 128) = *((_QWORD *)v6 + 4);
  }
  *(_DWORD *)(a1 + 136) = *(_DWORD *)(a2 + 136);
  v13 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v13;
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
  v8 = (void *)(a1 + 208);
  v9 = (const void *)(a2 + 208);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  v10 = 97;
LABEL_7:
  memcpy(v8, v9, v10);
  v14 = *(_QWORD *)(a2 + 312);
  if (v14)
  {
    v15 = *(_QWORD *)(a2 + 320);
    v16 = *(_QWORD *)(a2 + 328);
    *(_QWORD *)(a1 + 312) = v14;
    *(_QWORD *)(a1 + 320) = v15;
    *(_QWORD *)(a1 + 328) = v16;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 312) = *(_OWORD *)(a2 + 312);
    *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
  }
  return a1;
}

uint64_t assignWithCopy for Participant.MediaInfo(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  _OWORD *v6;
  __int128 *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  size_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _OWORD *v21;
  _OWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  *(_BYTE *)(a1 + 27) = *(_BYTE *)(a2 + 27);
  *(_BYTE *)(a1 + 28) = *(_BYTE *)(a2 + 28);
  *(_BYTE *)(a1 + 29) = *(_BYTE *)(a2 + 29);
  *(_BYTE *)(a1 + 30) = *(_BYTE *)(a2 + 30);
  *(_BYTE *)(a1 + 31) = *(_BYTE *)(a2 + 31);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v4 = *(_OWORD *)(a2 + 56);
  v5 = *(_OWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = v5;
  *(_OWORD *)(a1 + 56) = v4;
  *(_BYTE *)(a1 + 89) = *(_BYTE *)(a2 + 89);
  v6 = (_OWORD *)(a1 + 96);
  v7 = (__int128 *)(a2 + 96);
  v8 = *(_QWORD *)(a1 + 120);
  v9 = *(_QWORD *)(a2 + 120);
  if (v8 != 1)
  {
    if (v9 == 1)
    {
      outlined destroy of Participant.ScreenInfo(a1 + 96);
      goto LABEL_7;
    }
    if (v8)
    {
      if (v9)
      {
        __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 96), (uint64_t *)(a2 + 96));
LABEL_17:
        *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
        *(_BYTE *)(a1 + 137) = *(_BYTE *)(a2 + 137);
        *(_BYTE *)(a1 + 138) = *(_BYTE *)(a2 + 138);
        *(_BYTE *)(a1 + 139) = *(_BYTE *)(a2 + 139);
        *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
        *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
        v19 = *(_OWORD *)(a2 + 160);
        v20 = *(_OWORD *)(a2 + 176);
        *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
        *(_OWORD *)(a1 + 160) = v19;
        *(_OWORD *)(a1 + 176) = v20;
        *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
        goto LABEL_18;
      }
      __swift_destroy_boxed_opaque_existential_1(a1 + 96);
    }
    else if (v9)
    {
      *(_QWORD *)(a1 + 120) = v9;
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 96, a2 + 96);
      goto LABEL_17;
    }
    v17 = *v7;
    v18 = *(_OWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    *v6 = v17;
    *(_OWORD *)(a1 + 112) = v18;
    goto LABEL_17;
  }
  if (!v9)
  {
    v13 = *v7;
    v14 = *(_OWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    *v6 = v13;
    *(_OWORD *)(a1 + 112) = v14;
    goto LABEL_12;
  }
  if (v9 == 1)
  {
LABEL_7:
    v10 = (void *)(a1 + 96);
    v11 = (const void *)(a2 + 96);
    v12 = 209;
    goto LABEL_19;
  }
  *(_QWORD *)(a1 + 120) = v9;
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 96, a2 + 96);
LABEL_12:
  *(_DWORD *)(a1 + 136) = *(_DWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  v15 = *(_OWORD *)(a2 + 160);
  v16 = *(_OWORD *)(a2 + 176);
  *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
  *(_OWORD *)(a1 + 160) = v15;
  *(_OWORD *)(a1 + 176) = v16;
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
LABEL_18:
  v10 = (void *)(a1 + 208);
  v11 = (const void *)(a2 + 208);
  v12 = 97;
LABEL_19:
  memcpy(v10, v11, v12);
  v21 = (_OWORD *)(a1 + 312);
  v22 = (_OWORD *)(a2 + 312);
  v23 = *(_QWORD *)(a2 + 312);
  if (*(_QWORD *)(a1 + 312))
  {
    if (v23)
    {
      v24 = *(_QWORD *)(a2 + 320);
      *(_QWORD *)(a1 + 312) = v23;
      swift_unknownObjectRetain();
      swift_unknownObjectRelease();
      *(_QWORD *)(a1 + 320) = v24;
      *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      outlined destroy of Participant.CaptionInfo(a1 + 312);
      v26 = *(_QWORD *)(a2 + 328);
      *v21 = *v22;
      *(_QWORD *)(a1 + 328) = v26;
    }
  }
  else if (v23)
  {
    v25 = *(_QWORD *)(a2 + 320);
    *(_QWORD *)(a1 + 312) = v23;
    *(_QWORD *)(a1 + 320) = v25;
    *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v27 = *v22;
    *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
    *v21 = v27;
  }
  return a1;
}

uint64_t outlined destroy of Participant.CaptionInfo(uint64_t a1)
{
  destroy for Participant.CaptionInfo();
  return a1;
}

void *__swift_memcpy336_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x150uLL);
}

uint64_t assignWithTake for Participant.MediaInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  const void *v7;
  size_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  *(_BYTE *)(a1 + 27) = *(_BYTE *)(a2 + 27);
  *(_BYTE *)(a1 + 28) = *(_BYTE *)(a2 + 28);
  *(_BYTE *)(a1 + 29) = *(_BYTE *)(a2 + 29);
  *(_BYTE *)(a1 + 30) = *(_BYTE *)(a2 + 30);
  *(_BYTE *)(a1 + 31) = *(_BYTE *)(a2 + 31);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_BYTE *)(a1 + 89) = *(_BYTE *)(a2 + 89);
  v5 = *(_QWORD *)(a1 + 120);
  if (v5 == 1)
    goto LABEL_4;
  if (*(_QWORD *)(a2 + 120) == 1)
  {
    outlined destroy of Participant.ScreenInfo(a1 + 96);
LABEL_4:
    v6 = (void *)(a1 + 96);
    v7 = (const void *)(a2 + 96);
    v8 = 209;
    goto LABEL_8;
  }
  if (v5)
    __swift_destroy_boxed_opaque_existential_1(a1 + 96);
  v9 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v9;
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  *(_BYTE *)(a1 + 137) = *(_BYTE *)(a2 + 137);
  *(_BYTE *)(a1 + 138) = *(_BYTE *)(a2 + 138);
  *(_BYTE *)(a1 + 139) = *(_BYTE *)(a2 + 139);
  v10 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v10;
  v11 = *(_OWORD *)(a2 + 144);
  *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
  *(_OWORD *)(a1 + 144) = v11;
  v6 = (void *)(a1 + 208);
  v7 = (const void *)(a2 + 208);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  v8 = 97;
LABEL_8:
  memcpy(v6, v7, v8);
  if (!*(_QWORD *)(a1 + 312))
  {
LABEL_12:
    *(_OWORD *)(a1 + 312) = *(_OWORD *)(a2 + 312);
    *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
    return a1;
  }
  v12 = *(_QWORD *)(a2 + 312);
  if (!v12)
  {
    outlined destroy of Participant.CaptionInfo(a1 + 312);
    goto LABEL_12;
  }
  *(_QWORD *)(a1 + 312) = v12;
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Participant.MediaInfo(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 336))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 16);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Participant.MediaInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 328) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 336) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 336) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

void type metadata accessor for Participant.MediaInfo()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for Participant.VideoDegradedState()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t __swift_memcpy10_1(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_WORD *)(result + 8) = *((_WORD *)a2 + 4);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for Participant.VideoState(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  BOOL v4;

  if (a2)
  {
    if (a2 >= 0xFF && a1[10])
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *a1;
      v4 = v3 >= 2;
      v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Participant.VideoState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 10) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 10) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

void type metadata accessor for Participant.VideoState()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t getEnumTagSinglePayload for Participant.ScreenState(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  BOOL v4;

  if (a2)
  {
    if (a2 >= 0xFF && a1[4])
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *a1;
      v4 = v3 >= 2;
      v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Participant.ScreenState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_DWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 4) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 4) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

void type metadata accessor for Participant.ScreenState()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t storeEnumTagSinglePayload for Participant.VideoDegradedState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BD40C658 + 4 * byte_1BD65E1C0[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BD40C68C + 4 * byte_1BD65E1BB[v4]))();
}

uint64_t sub_1BD40C68C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD40C694(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD40C69CLL);
  return result;
}

uint64_t sub_1BD40C6A8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD40C6B0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BD40C6B4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD40C6BC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for Participant.VideoProviderType()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t destroy for Participant.CopresenceInfo()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Participant.CopresenceInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Participant.CopresenceInfo(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for Participant.CopresenceInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Participant.CopresenceInfo(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 64))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Participant.CopresenceInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for Participant.CopresenceInfo()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t getEnumTagSinglePayload for Participant.AVInfo(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  BOOL v4;

  if (a2)
  {
    if (a2 >= 0xFF && a1[16])
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *a1;
      v4 = v3 >= 2;
      v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Participant.AVInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

void type metadata accessor for Participant.AVInfo()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t initializeWithCopy for Participant.VideoInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_WORD *)(a1 + 72) = *(_WORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Participant.VideoInfo(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_BYTE *)(a1 + 10) = *(_BYTE *)(a2 + 10);
  *(_BYTE *)(a1 + 11) = *(_BYTE *)(a2 + 11);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  *(_BYTE *)(a1 + 13) = *(_BYTE *)(a2 + 13);
  *(_BYTE *)(a1 + 14) = *(_BYTE *)(a2 + 14);
  *(_BYTE *)(a1 + 15) = *(_BYTE *)(a2 + 15);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 40);
  v5 = *(_OWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = v5;
  *(_OWORD *)(a1 + 40) = v4;
  *(_BYTE *)(a1 + 73) = *(_BYTE *)(a2 + 73);
  return a1;
}

uint64_t assignWithTake for Participant.VideoInfo(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_BYTE *)(a1 + 10) = *(_BYTE *)(a2 + 10);
  *(_BYTE *)(a1 + 11) = *(_BYTE *)(a2 + 11);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  *(_BYTE *)(a1 + 13) = *(_BYTE *)(a2 + 13);
  *(_BYTE *)(a1 + 14) = *(_BYTE *)(a2 + 14);
  *(_BYTE *)(a1 + 15) = *(_BYTE *)(a2 + 15);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_BYTE *)(a1 + 73) = *(_BYTE *)(a2 + 73);
  return a1;
}

uint64_t getEnumTagSinglePayload for Participant.VideoInfo(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 74))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Participant.VideoInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 72) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 74) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 74) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for Participant.VideoInfo()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t storeEnumTagSinglePayload for Participant.VideoInfo.CameraType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BD40CC5C + 4 * byte_1BD65E1CA[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BD40CC90 + 4 * byte_1BD65E1C5[v4]))();
}

uint64_t sub_1BD40CC90(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD40CC98(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD40CCA0);
  return result;
}

uint64_t sub_1BD40CCAC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD40CCB4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BD40CCB8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD40CCC0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for Participant.VideoInfo.CameraType()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t getEnumTagSinglePayload for Participant.ScreenShareAttributes(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 96))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for Participant.ScreenShareAttributes(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 96) = v3;
  return result;
}

void type metadata accessor for Participant.ScreenShareAttributes()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t initializeWithCopy for Participant.ScreenInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;

  v4 = *(_QWORD *)(a2 + 24);
  if (v4)
  {
    v5 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v4;
    *(_QWORD *)(a1 + 32) = v5;
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
  }
  else
  {
    v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  }
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v7;
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  memcpy((void *)(a1 + 112), (const void *)(a2 + 112), 0x61uLL);
  return a1;
}

uint64_t assignWithCopy for Participant.ScreenInfo(uint64_t a1, __int128 *a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  v4 = *((_QWORD *)a2 + 3);
  if (!*(_QWORD *)(a1 + 24))
  {
    if (v4)
    {
      *(_QWORD *)(a1 + 24) = v4;
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      (**(void (***)(uint64_t, __int128 *))(v4 - 8))(a1, a2);
      goto LABEL_8;
    }
LABEL_7:
    v5 = *a2;
    v6 = a2[1];
    *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
    *(_OWORD *)a1 = v5;
    *(_OWORD *)(a1 + 16) = v6;
    goto LABEL_8;
  }
  if (!v4)
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
LABEL_8:
  *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
  *(_BYTE *)(a1 + 41) = *((_BYTE *)a2 + 41);
  *(_BYTE *)(a1 + 42) = *((_BYTE *)a2 + 42);
  *(_BYTE *)(a1 + 43) = *((_BYTE *)a2 + 43);
  *(_QWORD *)(a1 + 48) = *((_QWORD *)a2 + 6);
  *(_QWORD *)(a1 + 56) = *((_QWORD *)a2 + 7);
  v7 = a2[4];
  v8 = a2[5];
  *(_BYTE *)(a1 + 96) = *((_BYTE *)a2 + 96);
  *(_OWORD *)(a1 + 64) = v7;
  *(_OWORD *)(a1 + 80) = v8;
  *(_QWORD *)(a1 + 104) = *((_QWORD *)a2 + 13);
  memcpy((void *)(a1 + 112), a2 + 7, 0x61uLL);
  return a1;
}

void *__swift_memcpy209_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xD1uLL);
}

uint64_t assignWithTake for Participant.ScreenInfo(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;

  if (*(_QWORD *)(a1 + 24))
    __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  *(_BYTE *)(a1 + 42) = *(_BYTE *)(a2 + 42);
  *(_BYTE *)(a1 + 43) = *(_BYTE *)(a2 + 43);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  v6 = *(_OWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_OWORD *)(a1 + 48) = v6;
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  memcpy((void *)(a1 + 112), (const void *)(a2 + 112), 0x61uLL);
  return a1;
}

uint64_t getEnumTagSinglePayload for Participant.ScreenInfo(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 209))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 24);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Participant.ScreenInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 200) = 0;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 208) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 209) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 209) = 0;
    if (a2)
      *(_QWORD *)(result + 24) = a2;
  }
  return result;
}

void type metadata accessor for Participant.ScreenInfo()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t *initializeBufferWithCopyOfBuffer for Participant.CountdownInfo(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for Date();
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v7))
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v7);
    }
    v10 = *(int *)(a3 + 20);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v10, 1, v7))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v11, v12, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v7);
    }
    *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  }
  return a1;
}

uint64_t destroy for Participant.CountdownInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v4 = type metadata accessor for Date();
  if (!__swift_getEnumTagSinglePayload(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  result = __swift_getEnumTagSinglePayload(v5, 1, v4);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v5, v4);
  return result;
}

char *initializeWithCopy for Participant.CountdownInfo(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = type metadata accessor for Date();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v8], 1, v6))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v9, v10, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v6);
  }
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

char *assignWithCopy for Participant.CountdownInfo(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;

  v6 = type metadata accessor for Date();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v9 = *(_QWORD *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 24))(a1, a2, v6);
LABEL_7:
  v11 = *(int *)(a3 + 20);
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v11], 1, v6);
  v15 = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v6);
  if (!v14)
  {
    v16 = *(_QWORD *)(v6 - 8);
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 24))(v12, v13, v6);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v12, v6);
    goto LABEL_12;
  }
  if (v15)
  {
LABEL_12:
    v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v12, v13, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v6);
LABEL_13:
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

char *initializeWithTake for Participant.CountdownInfo(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = type metadata accessor for Date();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v8], 1, v6))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v9, v10, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v6);
  }
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

char *assignWithTake for Participant.CountdownInfo(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;

  v6 = type metadata accessor for Date();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v9 = *(_QWORD *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 40))(a1, a2, v6);
LABEL_7:
  v11 = *(int *)(a3 + 20);
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v11], 1, v6);
  v15 = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v6);
  if (!v14)
  {
    v16 = *(_QWORD *)(v6 - 8);
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v12, v13, v6);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v12, v6);
    goto LABEL_12;
  }
  if (v15)
  {
LABEL_12:
    v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v12, v13, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v6);
LABEL_13:
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

uint64_t getEnumTagSinglePayload for Participant.CountdownInfo()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1BD40D7F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  if (*(_DWORD *)(*(_QWORD *)(v4 - 8) + 84) == (_DWORD)a2)
    OUTLINED_FUNCTION_1_16(a1, a2, v4);
  else
    OUTLINED_FUNCTION_18();
}

uint64_t storeEnumTagSinglePayload for Participant.CountdownInfo()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1BD40D878()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  OUTLINED_FUNCTION_265_4();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  OUTLINED_FUNCTION_45_7();
  if (v4)
  {
    OUTLINED_FUNCTION_0_29(v1, v0, v0, v3);
  }
  else
  {
    *(_BYTE *)(v1 + *(int *)(v2 + 24)) = v0 + 1;
    OUTLINED_FUNCTION_18();
  }
}

void type metadata completion function for Participant.CountdownInfo()
{
  unint64_t v0;

  type metadata accessor for Date?();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void type metadata accessor for Date?()
{
  unint64_t v0;
  uint64_t v1;

  if (!lazy cache variable for type metadata for Date?)
  {
    type metadata accessor for Date();
    v0 = type metadata accessor for Optional();
    if (!v1)
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for Date?);
  }
}

uint64_t destroy for Participant.CaptionInfo()
{
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

void initializeBufferWithCopyOfBuffer for Participant.CaptionInfo(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_unknownObjectRetain();
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_0();
}

_QWORD *assignWithCopy for Participant.CaptionInfo(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  v4 = a2[1];
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = v4;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for Participant.CaptionInfo(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for Participant.CaptionInfo()
{
  OUTLINED_FUNCTION_34_0();
}

char *initializeBufferWithCopyOfBuffer for Participant.Caption(char *a1, char *a2, int *a3)
{
  char *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *(_QWORD *)a2;
    *(_QWORD *)v4 = *(_QWORD *)a2;
    v4 = (char *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    v7 = a3[5];
    v8 = &a1[v7];
    v9 = &a2[v7];
    v10 = type metadata accessor for Date();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    v11(v8, v9, v10);
    v11(&v4[a3[6]], &a2[a3[6]], v10);
    v12 = a3[7];
    v13 = a3[8];
    v14 = &v4[v12];
    v15 = &a2[v12];
    v16 = *((_QWORD *)v15 + 1);
    *(_QWORD *)v14 = *(_QWORD *)v15;
    *((_QWORD *)v14 + 1) = v16;
    v4[v13] = a2[v13];
    *(_QWORD *)&v4[a3[9]] = *(_QWORD *)&a2[a3[9]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for Participant.Caption(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);

  v4 = a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for Date();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v6(v4, v5);
  v6(a1 + *(int *)(a2 + 24), v5);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

char *initializeWithCopy for Participant.Caption(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for Date();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  v11 = a3[7];
  v12 = a3[8];
  v13 = &a1[v11];
  v14 = &a2[v11];
  v15 = *((_QWORD *)v14 + 1);
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *((_QWORD *)v13 + 1) = v15;
  a1[v12] = a2[v12];
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

char *assignWithCopy for Participant.Caption(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for Date();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  v11 = a3[7];
  v12 = &a1[v11];
  v13 = &a2[v11];
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *((_QWORD *)v12 + 1) = *((_QWORD *)v13 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[a3[8]] = a2[a3[8]];
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *initializeWithTake for Participant.Caption(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for Date();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  v11 = a3[8];
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  a1[v11] = a2[v11];
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  return a1;
}

char *assignWithTake for Participant.Caption(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for Date();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40);
  v10(v7, v8, v9);
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  v11 = a3[7];
  v12 = &a1[v11];
  v13 = (uint64_t *)&a2[v11];
  v15 = *v13;
  v14 = v13[1];
  *(_QWORD *)v12 = v15;
  *((_QWORD *)v12 + 1) = v14;
  swift_bridgeObjectRelease();
  v16 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  *(_QWORD *)&a1[v16] = *(_QWORD *)&a2[v16];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Participant.Caption()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1BD40DF30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;

  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_44_6();
  if (v7)
  {
    OUTLINED_FUNCTION_1_16(a1 + *(int *)(a3 + 20), a2, v6);
  }
  else
  {
    OUTLINED_FUNCTION_93_0(*(_QWORD *)(a1 + *(int *)(a3 + 28) + 8));
    OUTLINED_FUNCTION_18();
  }
}

uint64_t storeEnumTagSinglePayload for Participant.Caption()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1BD40DF94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  char v8;

  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_45_7();
  if (v8)
  {
    OUTLINED_FUNCTION_0_29(a1 + *(int *)(a4 + 20), a2, a2, v7);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 28) + 8) = (a2 - 1);
    OUTLINED_FUNCTION_18();
  }
}

uint64_t type metadata completion function for Participant.Caption()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t dispatch thunk of HasSortableHandle.sortableHandle.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

id outlined copy of Participant.RemoteIdentifiers??(id result)
{
  if (result != (id)1)
    return outlined copy of Participant.RemoteIdentifiers?(result);
  return result;
}

uint64_t outlined copy of String??(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
    return swift_bridgeObjectRetain();
  return result;
}

double OUTLINED_FUNCTION_75_18(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double result;

  __swift_storeEnumTagSinglePayload(v1, 1, 1, a1);
  *(_QWORD *)(v3 - 104) = v2;
  result = 0.0;
  *(_OWORD *)(v3 - 96) = 0u;
  *(_OWORD *)(v3 - 80) = 0u;
  return result;
}

uint64_t OUTLINED_FUNCTION_89_21()
{
  return type metadata accessor for Participant(0);
}

double OUTLINED_FUNCTION_93_10()
{
  uint64_t v0;
  double result;

  result = 0.0;
  *(_OWORD *)(v0 - 112) = 0u;
  *(_OWORD *)(v0 - 96) = 0u;
  return result;
}

uint64_t OUTLINED_FUNCTION_106_13()
{
  return _print_unlocked<A, B>(_:_:)();
}

void OUTLINED_FUNCTION_111_9()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 96) = v0;
  specialized __RawDictionaryStorage.find<A>(_:)();
}

uint64_t OUTLINED_FUNCTION_117_11(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
}

uint64_t OUTLINED_FUNCTION_124_9()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_130_6(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

void OUTLINED_FUNCTION_134_7()
{
  Swift::String v0;

  v0._countAndFlagsBits = 0x3A656C797473202CLL;
  v0._object = (void *)0xE900000000000020;
  String.append(_:)(v0);
}

void OUTLINED_FUNCTION_138_8()
{
  Participant.screenInfo.getter();
}

uint64_t OUTLINED_FUNCTION_139_9(uint64_t a1, uint64_t a2)
{
  return outlined consume of Participant.CopresenceInfo?(a1, a2);
}

uint64_t OUTLINED_FUNCTION_146_3()
{
  return type metadata accessor for Participant.State(0);
}

uint64_t OUTLINED_FUNCTION_159_6()
{
  return type metadata accessor for Participant.State(0);
}

uint64_t OUTLINED_FUNCTION_161_6()
{
  uint64_t v0;

  return outlined copy of Participant.CaptionInfo?(*(_QWORD *)(v0 + 312));
}

void OUTLINED_FUNCTION_162_5(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  outlined destroy of AccountUpdateNotice(v2, a2);
}

int8x8_t OUTLINED_FUNCTION_167_5@<D0>(uint64_t a1@<X8>, uint64x2_t a2@<Q0>, int32x4_t a3@<Q1>, uint64x2_t a4@<Q2>)
{
  int16x8_t v4;
  int8x8_t result;

  v4 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(a2, a4), a3);
  *(int8x8_t *)v4.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v4), (int8x8_t)0x1000100010001);
  result = vmovn_s16(v4);
  *(_DWORD *)(a1 + 1) = result.i32[0];
  return result;
}

uint64_t OUTLINED_FUNCTION_168_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return outlined init with copy of Participant.MediaInfo(v2, a2);
}

uint64_t OUTLINED_FUNCTION_172_3()
{
  return String.init<A>(describing:)();
}

void OUTLINED_FUNCTION_173_5(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = v1;
  String.append(_:)(*(Swift::String *)&a1);
}

void OUTLINED_FUNCTION_175_2()
{
  JUMPOUT(0x1C3B73D24);
}

void OUTLINED_FUNCTION_180_0(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 168) = (v1 - 1) & v1;
  *(_QWORD *)(v2 - 160) = a1;
}

uint64_t OUTLINED_FUNCTION_183_2()
{
  uint64_t v0;

  return outlined init with copy of Participant.MediaInfo(v0, (uint64_t)&STACK[0x3C8]);
}

uint64_t OUTLINED_FUNCTION_192_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return __swift_storeEnumTagSinglePayload(v2, a2, 1, *(_QWORD *)(v3 - 128));
}

uint64_t OUTLINED_FUNCTION_193_3()
{
  return String.init<A>(describing:)();
}

uint64_t OUTLINED_FUNCTION_199_2()
{
  return swift_getEnumCaseMultiPayload();
}

void OUTLINED_FUNCTION_203_3()
{
  uint64_t *v0;
  uint64_t v1;

  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v1, v0);
}

double OUTLINED_FUNCTION_206_2()
{
  return 1.0;
}

uint64_t OUTLINED_FUNCTION_208_1()
{
  uint64_t v0;

  return outlined destroy of Participant.MediaInfo(v0 + 952);
}

uint64_t OUTLINED_FUNCTION_209_1()
{
  uint64_t v0;

  return outlined destroy of Participant.MediaInfo(v0 + 1288);
}

uint64_t OUTLINED_FUNCTION_211_3@<X0>(uint64_t a1@<X8>)
{
  return a1 + 8 * *(_QWORD *)(a1 + 16) + 32;
}

uint64_t OUTLINED_FUNCTION_212_3()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_216_4(uint64_t a1, uint64_t a2)
{
  return outlined consume of Participant.CopresenceInfo?(a1, a2);
}

uint64_t OUTLINED_FUNCTION_220_2()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_221_3()
{
  return outlined destroy of Participant.MediaInfo((uint64_t)&STACK[0x3C8]);
}

uint64_t OUTLINED_FUNCTION_222_4()
{
  uint64_t *v0;

  return __swift_instantiateConcreteTypeFromMangledName(v0);
}

uint64_t OUTLINED_FUNCTION_223_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_225_4()
{
  return outlined destroy of Participant.MediaInfo((uint64_t)&STACK[0x7B8]);
}

uint64_t OUTLINED_FUNCTION_226_0()
{
  return outlined destroy of Participant.MediaInfo((uint64_t)&STACK[0x668]);
}

uint64_t OUTLINED_FUNCTION_227_0(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 8) = result;
  *(_BYTE *)(v2 + 16) = a2 & 1;
  return result;
}

uint64_t OUTLINED_FUNCTION_229_5()
{
  uint64_t *v0;

  return __swift_instantiateConcreteTypeFromMangledName(v0);
}

uint64_t OUTLINED_FUNCTION_230_1(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t OUTLINED_FUNCTION_232_3()
{
  return 0x6469766F7270202CLL;
}

void OUTLINED_FUNCTION_233_2(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v2;

  v2 = (a2 - 32) | 0x8000000000000000;
  String.append(_:)(*(Swift::String *)&a1);
}

void OUTLINED_FUNCTION_236_5(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;

  Participant.with(state:identifier:capabilities:remoteIdentifiers:gradient:nickname:countdownInfo:isAuthorizedToChangeGroupMembership:cache:associatedParticipants:)(a1, a2, a3, a4, a5, 0, 1, v23, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23);
}

uint64_t OUTLINED_FUNCTION_237_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_239_4()
{
  return outlined destroy of Participant.MediaInfo((uint64_t)&STACK[0x518]);
}

void OUTLINED_FUNCTION_242_4(uint64_t a1, uint64_t a2, ...)
{
  uint64_t v2;
  unint64_t v3;
  va_list va;

  va_start(va, a2);
  specialized Array.subscript.read((uint64_t *)va, v3, v2);
}

uint64_t OUTLINED_FUNCTION_244_0()
{
  return static CGAffineTransform.== infix(_:_:)();
}

uint64_t OUTLINED_FUNCTION_247_4()
{
  return type metadata accessor for Participant.Caption(0);
}

uint64_t OUTLINED_FUNCTION_248_3()
{
  return type metadata accessor for Participant.State(0);
}

uint64_t OUTLINED_FUNCTION_249_3()
{
  return type metadata accessor for Participant.State(0);
}

uint64_t OUTLINED_FUNCTION_250_1()
{
  return type metadata accessor for Participant.State(0);
}

uint64_t OUTLINED_FUNCTION_254_2()
{
  return dispatch thunk of Hashable.hash(into:)();
}

void OUTLINED_FUNCTION_260_3()
{
  Participant.screenInfo.getter();
}

double OUTLINED_FUNCTION_261_3(double a1)
{
  double v1;

  return a1 / v1;
}

uint64_t OUTLINED_FUNCTION_262_4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(int *)(a1 + 56);
  *(_QWORD *)(v2 - 128) = v1;
  return v1 + v3;
}

void OUTLINED_FUNCTION_264_2()
{
  Participant.screenInfo.getter();
}

void OUTLINED_FUNCTION_268_4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  outlined init with take of Any?(v3 + 416, v3 + 496, a3);
}

void OUTLINED_FUNCTION_270_1(uint64_t a1, uint64_t a2)
{
  unint64_t v2;

  v2 = a2 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
  String.append(_:)(*(Swift::String *)&a1);
}

void OUTLINED_FUNCTION_271_2(__n128 *a1@<X8>, __n128 a2@<Q0>, __n128 a3@<Q1>)
{
  unsigned __int8 v3;

  *a1 = a2;
  a1[1] = a3;
  a1[2].n128_u8[0] = v3;
}

uint64_t OUTLINED_FUNCTION_272_3(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 3) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_274_4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 696))();
}

uint64_t OUTLINED_FUNCTION_275_2(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 2) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_276_1(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_277_4(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_279_4()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_280_3(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v2 + 344, a2);
}

void OUTLINED_FUNCTION_281_4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  outlined init with copy of FeatureEligibility?(a1, v3 + 344, a3);
}

uint64_t OUTLINED_FUNCTION_283_1()
{
  uint64_t v0;

  return outlined destroy of Participant.MediaInfo(v0 + 8);
}

void OUTLINED_FUNCTION_284_1(uint64_t a1, uint64_t a2)
{
  unint64_t v2;

  v2 = a2 & 0xFFFFFFFFFFFFLL | 0xEE00000000000000;
  String.append(_:)(*(Swift::String *)&a1);
}

void OUTLINED_FUNCTION_288_1(uint64_t a1, uint64_t *a2)
{
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&STACK[0x218], a2);
}

uint64_t OUTLINED_FUNCTION_289_4()
{
  return dispatch thunk of CustomStringConvertible.description.getter();
}

uint64_t OUTLINED_FUNCTION_290_3()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_291_4()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_293_1()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

void OUTLINED_FUNCTION_297_2(uint64_t a1, uint64_t a2)
{
  unint64_t v2;

  v2 = a2 & 0xFFFF0000FFFFLL | 0xEC000000203A0000;
  String.append(_:)(*(Swift::String *)&a1);
}

uint64_t OUTLINED_FUNCTION_298_1()
{
  uint64_t v0;

  return outlined init with copy of Participant.MediaInfo(v0, (uint64_t)&STACK[0x668]);
}

void OUTLINED_FUNCTION_299_2(uint64_t a1)
{
  unint64_t v1;

  v1 = 0xE200000000000000;
  String.append(_:)(*(Swift::String *)&a1);
}

void OUTLINED_FUNCTION_302_1(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;

  outlined init with take of Any?(v3, a2, v2);
}

void OUTLINED_FUNCTION_304_2()
{
  uint64_t *v0;
  uint64_t v1;

  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v1, v0);
}

uint64_t OUTLINED_FUNCTION_305_1()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_306_1()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_307_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v10 - 160) = (char *)&a9 - v9;
}

uint64_t OUTLINED_FUNCTION_309_3()
{
  return 0x65746164202CLL;
}

void OUTLINED_FUNCTION_311_3(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  outlined init with copy of FeatureEligibility?(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_313_3()
{
  return Date.init()();
}

uint64_t OUTLINED_FUNCTION_315_4()
{
  return outlined destroy of Participant.ScreenInfo((uint64_t)&STACK[0x6C8]);
}

uint64_t OUTLINED_FUNCTION_316_3(uint64_t a1, uint64_t a2, ...)
{
  uint64_t (*v2)(char *, _QWORD);
  va_list va;

  va_start(va, a2);
  return v2(va, 0);
}

uint64_t OUTLINED_FUNCTION_317_2()
{
  return outlined destroy of Participant.ScreenInfo((uint64_t)&STACK[0x950]);
}

uint64_t OUTLINED_FUNCTION_318_1()
{
  return type metadata accessor for Participant.Caption(0);
}

uint64_t OUTLINED_FUNCTION_320_1()
{
  return outlined destroy of Participant.ScreenInfo((uint64_t)&STACK[0x7A0]);
}

void OUTLINED_FUNCTION_321_1()
{
  Swift::String v0;

  v0._countAndFlagsBits = 44;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
}

void OUTLINED_FUNCTION_322_2(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  outlined init with take of StagedCollaboration(a1, *(_QWORD *)(v3 - 112), a3);
}

void OUTLINED_FUNCTION_324_4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  outlined init with take of Any?(v3 + 552, v3, a3);
}

uint64_t OUTLINED_FUNCTION_326_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);

  return v4(v2, a2, v3);
}

uint64_t OUTLINED_FUNCTION_329_2()
{
  return swift_unknownObjectRelease();
}

void OUTLINED_FUNCTION_330_2()
{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t OUTLINED_FUNCTION_332_2()
{
  uint64_t v0;

  return outlined destroy of Participant.MediaInfo(v0);
}

uint64_t OUTLINED_FUNCTION_333_2()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t OUTLINED_FUNCTION_334_2()
{
  uint64_t v0;

  return outlined destroy of Participant.MediaInfo(v0);
}

uint64_t OUTLINED_FUNCTION_336_3()
{
  return 0;
}

ConversationKit::RemoteControlSuspensionReason_optional __swiftcall RemoteControlSuspensionReason.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 3;
  if ((unint64_t)rawValue < 3)
    v2 = rawValue;
  *v1 = v2;
  return (ConversationKit::RemoteControlSuspensionReason_optional)rawValue;
}

uint64_t RemoteControlState.requestedParticipant.getter@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (*v1 >> 61)
  {
    v6 = OUTLINED_FUNCTION_151();
    v4 = a1;
    v5 = 1;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (RemoteControlRequest, Participant, Bool));
    OUTLINED_FUNCTION_17_71();
    v3 = OUTLINED_FUNCTION_151();
    OUTLINED_FUNCTION_8_98(a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16));
    v4 = a1;
    v5 = 0;
    v6 = v3;
  }
  return __swift_storeEnumTagSinglePayload(v4, v5, 1, v6);
}

BOOL RemoteControlState.requiresControlMode.getter()
{
  _QWORD *v0;

  return (*v0 >> 61) - 2 < 3;
}

void RemoteControlStateMachine.state.getter(unint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(v1 + 8);
  os_unfair_lock_lock((os_unfair_lock_t)(v3 + 24));
  v4 = *(_QWORD *)(v3 + 16);
  *a1 = v4;
  outlined copy of RemoteControlState(v4);
  os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 24));
}

uint64_t RemoteControlState.remoteControlStatus.getter()
{
  _QWORD *v0;

  return ((uint64_t (*)(uint64_t))((char *)nullsub_2 + 4 * byte_1BD65EC80[*v0 >> 61]))(1);
}

uint64_t sub_1BD40E918()
{
  return 2;
}

uint64_t sub_1BD40E920@<X0>(uint64_t a1@<X8>)
{
  if (*(_QWORD *)(a1 + 16) >> 61 == 3)
    return 2;
  else
    return 1;
}

unint64_t RemoteControlStateMachine.init(isBroadcasting:)@<X0>(char a1@<W0>, unint64_t *a2@<X8>)
{
  unint64_t v3;
  uint64_t v4;

  if ((a1 & 1) != 0)
    v3 = 0xA000000000000008;
  else
    v3 = 0xA000000000000010;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ManagedBuffer<RemoteControlState, os_unfair_lock_s>);
  v4 = swift_allocObject();
  *(_DWORD *)(v4 + 24) = 0;
  *(_QWORD *)(v4 + 16) = v3;
  *a2 = v3;
  a2[1] = v4;
  return outlined copy of RemoteControlState(v3);
}

uint64_t RemoteControlStateMachine.presentOnboardingForRemoteControlRequest(_:from:)(uint64_t a1, uint64_t a2)
{
  unint64_t *v2;
  uint64_t v5;
  unint64_t v6;

  v6 = *v2;
  v5 = v2[1];
  OUTLINED_FUNCTION_2_116(v6);
  os_unfair_lock_lock((os_unfair_lock_t)(v5 + 24));
  closure #1 in RemoteControlStateMachine.presentRemoteControlOnboarding(_:from:)((unint64_t *)(v5 + 16), v6, v5, a1, a2);
  os_unfair_lock_unlock((os_unfair_lock_t)(v5 + 24));
  return OUTLINED_FUNCTION_1_132(v6);
}

void RemoteControlStateMachine.validateOutgoingMessage(_:to:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(_QWORD);
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_28_60(a1, a2);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_14_94(v3, v13);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_18_82();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_51_0();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_108_0();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_72_1();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_23_68();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_15_87(v10, v11, v14);
  v12 = (char *)sub_1BD40EAEC + 4 * byte_1BD65EC86[OUTLINED_FUNCTION_46_31()];
  __asm { BR              X10 }
}

void sub_1BD40EAEC()
{
  unint64_t *v0;
  uint64_t v1;
  os_unfair_lock_s *v2;
  unint64_t v3;
  unint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_36_47();
  v3 = *v0;
  v2 = (os_unfair_lock_s *)v0[1];
  OUTLINED_FUNCTION_2_116(v3);
  os_unfair_lock_lock(v2 + 6);
  v4 = (unint64_t *)OUTLINED_FUNCTION_24_59();
  closure #1 in RemoteControlStateMachine.validateOutgoingRemoteControlRequest(_:to:)(v4, v5, v6, v7, v8);
  OUTLINED_FUNCTION_49_43();
  OUTLINED_FUNCTION_1_132(v3);
  outlined destroy of RemoteControlRequest(v1, type metadata accessor for RemoteControlRequest);
  OUTLINED_FUNCTION_1_29();
}

void sub_1BD40ECE4()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_0_137();
  OUTLINED_FUNCTION_350();
  OUTLINED_FUNCTION_35_40(v1, v2, "Rejecting send to %s since it doesn't contain state's participant: %s");
  OUTLINED_FUNCTION_5_115();
  OUTLINED_FUNCTION_1_132(v0);
  JUMPOUT(0x1BD40ECD4);
}

BOOL RemoteControlState.isSuspended.getter()
{
  _QWORD *v0;

  return *v0 >> 61 == 4;
}

void RemoteControlStateMachine.validateIncomingMessage(_:from:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(_QWORD);
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_28_60(a1, a2);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_14_94(v3, v13);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_18_82();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_51_0();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_108_0();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_72_1();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_23_68();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_15_87(v10, v11, v14);
  v12 = (char *)sub_1BD40EDF4 + 4 * byte_1BD65EC8D[OUTLINED_FUNCTION_46_31()];
  __asm { BR              X10 }
}

void sub_1BD40EDF4()
{
  unint64_t *v0;
  uint64_t v1;
  os_unfair_lock_s *v2;
  unint64_t v3;
  unint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_36_47();
  v3 = *v0;
  v2 = (os_unfair_lock_s *)v0[1];
  OUTLINED_FUNCTION_2_116(v3);
  os_unfair_lock_lock(v2 + 6);
  v4 = (unint64_t *)OUTLINED_FUNCTION_24_59();
  closure #1 in RemoteControlStateMachine.validateIncomingRemoteControlRequest(_:from:)(v4, v5, v6, v7, v8);
  OUTLINED_FUNCTION_49_43();
  OUTLINED_FUNCTION_1_132(v3);
  outlined destroy of RemoteControlRequest(v1, type metadata accessor for RemoteControlRequest);
  OUTLINED_FUNCTION_1_29();
}

void sub_1BD40EFE0()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_0_137();
  OUTLINED_FUNCTION_350();
  OUTLINED_FUNCTION_35_40(v1, v2, "Rejecting incoming message from %s since it mismatches our current state's participant %s");
  OUTLINED_FUNCTION_5_115();
  OUTLINED_FUNCTION_1_132(v0);
  JUMPOUT(0x1BD40EFD0);
}

uint64_t RemoteControlSuspensionReason.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

ConversationKit::RemoteControlSuspensionReason_optional protocol witness for RawRepresentable.init(rawValue:) in conformance RemoteControlSuspensionReason(Swift::Int *a1)
{
  return RemoteControlSuspensionReason.init(rawValue:)(*a1);
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance RemoteControlSuspensionReason@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = RemoteControlSuspensionReason.rawValue.getter();
  *a1 = result;
  return result;
}

void RemoteControlState.hash(into:)()
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = OUTLINED_FUNCTION_151();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_79();
  MEMORY[0x1E0C80A78](v2);
  type metadata accessor for RemoteControlRequest(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_79();
  MEMORY[0x1E0C80A78](v4);
  __asm { BR              X10 }
}

void sub_1BD40F110()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Swift::UInt8 v6;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (RemoteControlRequest, Participant, Bool));
  v5 = OUTLINED_FUNCTION_17_71();
  v6 = *(_BYTE *)(v5 + *(int *)(v4 + 64));
  outlined init with copy of ConversationControlsAppLaunchButtonType(v5, v2, type metadata accessor for RemoteControlRequest);
  OUTLINED_FUNCTION_8_98(v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16));
  OUTLINED_FUNCTION_57(3uLL);
  type metadata accessor for UUID();
  _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  OUTLINED_FUNCTION_53_38();
  dispatch thunk of Hashable.hash(into:)();
  type metadata accessor for Date();
  _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type Date and conformance Date, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  OUTLINED_FUNCTION_40_47();
  _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type Participant and conformance Participant, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB4250], MEMORY[0x1E0CB4260]);
  OUTLINED_FUNCTION_53_38();
  dispatch thunk of Hashable.hash(into:)();
  Hasher._combine(_:)(v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v0);
  outlined destroy of RemoteControlRequest(v2, type metadata accessor for RemoteControlRequest);
}

void static RemoteControlState.== infix(_:_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[12];

  v2 = OUTLINED_FUNCTION_151();
  v27[8] = *(_QWORD *)(v2 - 8);
  v27[9] = v2;
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_79();
  v27[7] = v3 - v4;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_18_0();
  v27[5] = v6;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_18_0();
  v27[4] = v8;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_18_0();
  v27[6] = v10;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_18_0();
  v27[2] = v12;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_18_0();
  v27[3] = v14;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_18_0();
  v27[0] = v16;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v17);
  v27[1] = (char *)v27 - v18;
  type metadata accessor for RemoteControlRequest(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v19);
  OUTLINED_FUNCTION_79();
  MEMORY[0x1E0C80A78](v20);
  MEMORY[0x1E0C80A78](v21);
  MEMORY[0x1E0C80A78](v22);
  MEMORY[0x1E0C80A78](v23);
  OUTLINED_FUNCTION_108_0();
  MEMORY[0x1E0C80A78](v24);
  OUTLINED_FUNCTION_81_2();
  MEMORY[0x1E0C80A78](v25);
  MEMORY[0x1E0C80A78](v26);
  __asm { BR              X10 }
}

uint64_t sub_1BD40F644(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t);
  int v21;
  void (*v22)(uint64_t, uint64_t);

  *(_QWORD *)(v4 - 120) = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (RemoteControlRequest, Participant, Bool));
  v6 = swift_projectBox();
  if (v3 >> 61)
  {
    OUTLINED_FUNCTION_6_95();
    goto LABEL_8;
  }
  v7 = v6;
  v8 = *(int *)(v5 + 64);
  *(_DWORD *)(v4 - 128) = *(unsigned __int8 *)(v6 + v8);
  v9 = *(int *)(v5 + 48);
  v10 = v6 + v9;
  v11 = swift_projectBox();
  v12 = v11 + v9;
  *(_DWORD *)(v4 - 136) = *(unsigned __int8 *)(v11 + v8);
  OUTLINED_FUNCTION_122(v7, v1);
  OUTLINED_FUNCTION_122(v11, v2);
  v14 = *(_QWORD *)(v4 - 112);
  v13 = *(_QWORD *)(v4 - 104);
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16);
  v16 = *(_QWORD *)(v4 - 168);
  v15(v16, v10, v13);
  v17 = *(_QWORD *)(v4 - 176);
  v15(v17, v12, v13);
  OUTLINED_FUNCTION_6_95();
  if ((static UUID.== infix(_:_:)() & 1) == 0 || (static Date.== infix(_:_:)() & 1) == 0)
  {
    v22 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    v22(v17, v13);
    v22(v16, v13);
    OUTLINED_FUNCTION_14_21(v2);
    outlined destroy of RemoteControlRequest(v1, type metadata accessor for RemoteControlRequest);
LABEL_8:
    OUTLINED_FUNCTION_12_99();
    goto LABEL_9;
  }
  v18 = MEMORY[0x1C3B705D4](v16, v17);
  v19 = v17;
  v20 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
  v20(v19, v13);
  v20(v16, v13);
  outlined destroy of RemoteControlRequest(v2, type metadata accessor for RemoteControlRequest);
  outlined destroy of RemoteControlRequest(v1, type metadata accessor for RemoteControlRequest);
  OUTLINED_FUNCTION_12_99();
  if ((v18 & 1) == 0)
  {
LABEL_9:
    LOBYTE(v21) = 0;
    return v21 & 1;
  }
  v21 = *(_DWORD *)(v4 - 128) ^ *(_DWORD *)(v4 - 136) ^ 1;
  return v21 & 1;
}

void RemoteControlState.hashValue.getter()
{
  Hasher.init(_seed:)();
  RemoteControlState.hash(into:)();
  Hasher._finalize()();
  OUTLINED_FUNCTION_2();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance RemoteControlState()
{
  Hasher.init(_seed:)();
  RemoteControlState.hash(into:)();
  return Hasher._finalize()();
}

void RemoteControlStateMachine.Errors.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
  Hasher._combine(_:)(a2);
}

BOOL static RemoteControlStateMachine.Errors.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

void RemoteControlStateMachine.Errors.hashValue.getter(unsigned __int8 a1)
{
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1);
  Hasher._finalize()();
  OUTLINED_FUNCTION_2();
}

void protocol witness for Hashable.hashValue.getter in conformance RemoteControlStateMachine.Errors()
{
  unsigned __int8 *v0;

  RemoteControlStateMachine.Errors.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance RemoteControlStateMachine.Errors(uint64_t a1)
{
  unsigned __int8 *v1;

  RemoteControlStateMachine.Errors.hash(into:)(a1, *v1);
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance RemoteControlStateMachine.Errors(char *a1, char *a2)
{
  return static RemoteControlStateMachine.Errors.== infix(_:_:)(*a1, *a2);
}

unint64_t closure #1 in RemoteControlStateMachine.state.getter@<X0>(unint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  unint64_t v2;

  v2 = *a1;
  *a2 = v2;
  return outlined copy of RemoteControlState(v2);
}

Swift::Void __swiftcall RemoteControlStateMachine.reset()()
{
  unint64_t *v0;
  unint64_t v1;
  unint64_t v2;

  v1 = *v0;
  v2 = v0[1];
  os_unfair_lock_lock((os_unfair_lock_t)(v2 + 24));
  closure #1 in RemoteControlStateMachine.reset()((unint64_t *)(v2 + 16), v1);
  os_unfair_lock_unlock((os_unfair_lock_t)(v2 + 24));
}

unint64_t closure #1 in RemoteControlStateMachine.reset()(unint64_t *a1, unint64_t a2)
{
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  uint64_t v12[2];
  uint64_t v13;

  if (one-time initialization token for screenSharing != -1)
    swift_once();
  v4 = type metadata accessor for Logger();
  __swift_project_value_buffer(v4, (uint64_t)&static Log.screenSharing);
  outlined copy of RemoteControlState(a2);
  swift_retain();
  outlined copy of RemoteControlState(a2);
  swift_retain();
  v5 = Logger.logObject.getter();
  v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = swift_slowAlloc();
    v11 = swift_slowAlloc();
    v12[0] = v11;
    *(_DWORD *)v7 = 136315394;
    v13 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000019, 0x80000001BD65EEE0, v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v7 + 12) = 2080;
    v13 = a2;
    outlined copy of RemoteControlState(a2);
    v8 = String.init<A>(reflecting:)();
    v13 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v8, v9, v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    outlined consume of RemoteControlState(a2);
    swift_release();
    outlined consume of RemoteControlState(a2);
    swift_release();
    _os_log_impl(&dword_1BD004000, v5, v6, "Resetting %s to initial state %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v11, -1, -1);
    MEMORY[0x1C3B751B8](v7, -1, -1);

  }
  else
  {
    outlined consume of RemoteControlState(a2);
    swift_release();
    outlined consume of RemoteControlState(a2);

    swift_release();
  }
  v13 = a2;
  return RemoteControlStateMachine.transformState(_:to:)(a1, (unint64_t *)&v13);
}

unint64_t RemoteControlStateMachine.transformState(_:to:)(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v15;

  v3 = *a2;
  v4 = *a1;
  if (one-time initialization token for screenSharing != -1)
    swift_once();
  v5 = type metadata accessor for Logger();
  __swift_project_value_buffer(v5, (uint64_t)&static Log.screenSharing);
  outlined copy of RemoteControlState(v4);
  outlined copy of RemoteControlState(v3);
  outlined copy of RemoteControlState(v4);
  outlined copy of RemoteControlState(v3);
  v6 = Logger.logObject.getter();
  v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc();
    v9 = swift_slowAlloc();
    v15 = v9;
    *(_DWORD *)v8 = 136315394;
    outlined copy of RemoteControlState(v4);
    v10 = String.init<A>(reflecting:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v10, v11, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    outlined consume of RemoteControlState(v4);
    outlined consume of RemoteControlState(v4);
    *(_WORD *)(v8 + 12) = 2080;
    outlined copy of RemoteControlState(v3);
    v12 = String.init<A>(reflecting:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v12, v13, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    outlined consume of RemoteControlState(v3);
    outlined consume of RemoteControlState(v3);
    _os_log_impl(&dword_1BD004000, v6, v7, "Transforming state machine from %s to %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v9, -1, -1);
    MEMORY[0x1C3B751B8](v8, -1, -1);

    outlined consume of RemoteControlState(v4);
  }
  else
  {
    outlined consume of RemoteControlState(v4);
    outlined consume of RemoteControlState(v4);
    outlined consume of RemoteControlState(v4);
    outlined consume of RemoteControlState(v3);
    outlined consume of RemoteControlState(v3);

  }
  *a1 = v3;
  return outlined copy of RemoteControlState(v3);
}

uint64_t closure #1 in RemoteControlStateMachine.validateIncomingRemoteControlRequest(_:from:)(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _BYTE *v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;

  if (*a1 == 0xA000000000000008 && (*a1 >> 61) > 4)
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (RemoteControlRequest, Participant, Bool));
    v12 = swift_allocBox();
    v14 = v13;
    v15 = v13 + *(int *)(v11 + 48);
    v16 = *(int *)(v11 + 64);
    outlined init with copy of ConversationControlsAppLaunchButtonType(a4, v13, type metadata accessor for RemoteControlRequest);
    v17 = type metadata accessor for Participant();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, a5, v17);
    *(_BYTE *)(v14 + v16) = 0;
    v18 = v12;
    RemoteControlStateMachine.transformState(_:to:)(a1, &v18);
    return swift_release();
  }
  else
  {
    v18 = *a1;
    RemoteControlStateMachine.logInvalidTransition(_:)(&v18);
    lazy protocol witness table accessor for type RemoteControlStateMachine.Errors and conformance RemoteControlStateMachine.Errors();
    swift_allocError();
    *v6 = 2;
    return swift_willThrow();
  }
}

void RemoteControlStateMachine.logInvalidTransition(_:)(unint64_t *a1)
{
  unint64_t v1;
  uint64_t v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  NSObject *oslog;
  uint64_t v9;

  v1 = *a1;
  if (one-time initialization token for screenSharing != -1)
    swift_once();
  v2 = type metadata accessor for Logger();
  __swift_project_value_buffer(v2, (uint64_t)&static Log.screenSharing);
  outlined copy of RemoteControlState(v1);
  outlined copy of RemoteControlState(v1);
  oslog = Logger.logObject.getter();
  v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(oslog, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v9 = v5;
    *(_DWORD *)v4 = 136315138;
    outlined copy of RemoteControlState(v1);
    v6 = String.init<A>(reflecting:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v6, v7, &v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    outlined consume of RemoteControlState(v1);
    outlined consume of RemoteControlState(v1);
    _os_log_impl(&dword_1BD004000, oslog, v3, "Invalid state transition request actual:%s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v5, -1, -1);
    MEMORY[0x1C3B751B8](v4, -1, -1);

  }
  else
  {
    outlined consume of RemoteControlState(v1);
    outlined consume of RemoteControlState(v1);

  }
}

uint64_t closure #1 in RemoteControlStateMachine.presentRemoteControlOnboarding(_:from:)(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v16;
  unint64_t v17;

  if (*a1 >> 61)
  {
    v17 = *a1;
    RemoteControlStateMachine.logInvalidTransition(_:)(&v17);
    lazy protocol witness table accessor for type RemoteControlStateMachine.Errors and conformance RemoteControlStateMachine.Errors();
    swift_allocError();
    *v16 = 2;
    return swift_willThrow();
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (RemoteControlRequest, Participant, Bool));
    v9 = swift_allocBox();
    v11 = v10;
    v12 = v10 + *(int *)(v8 + 48);
    v13 = *(int *)(v8 + 64);
    outlined init with copy of ConversationControlsAppLaunchButtonType(a4, v10, type metadata accessor for RemoteControlRequest);
    v14 = type metadata accessor for Participant();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, a5, v14);
    *(_BYTE *)(v11 + v13) = 1;
    v17 = v9;
    RemoteControlStateMachine.transformState(_:to:)(a1, &v17);
    return swift_release();
  }
}

unint64_t closure #1 in RemoteControlStateMachine.validateIncomingRemoteControlResponse(_:from:)(unint64_t *a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  unint64_t *v60;
  os_log_type_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  void (*v70)(char *, uint64_t);
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  char *v78;
  _BYTE *v79;
  uint64_t v80;
  _BYTE *v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void (*v91)(uint64_t, char *, uint64_t);
  unint64_t *v92;
  char *v93;
  char *v94;
  char *v95;
  char *v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;

  v90 = a5;
  v89 = a4;
  v95 = a3;
  v7 = type metadata accessor for RemoteControlResponse(0);
  MEMORY[0x1E0C80A78](v7);
  v96 = (char *)&v82 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v82 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Participant();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v82 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v93 = (char *)&v82 - v17;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v82 - v19;
  v21 = type metadata accessor for RemoteControlRequest(0);
  MEMORY[0x1E0C80A78](v21);
  MEMORY[0x1E0C80A78](v22);
  v25 = (char *)&v82 - v24;
  v92 = a1;
  v26 = *a1;
  if (*a1 >> 61 == 1)
  {
    v84 = v15;
    v85 = v23;
    v83 = v11;
    v88 = v26;
    v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (RemoteControlRequest, Participant));
    v28 = swift_projectBox();
    v29 = *(int *)(v27 + 48);
    v97 = v12;
    v30 = v28 + v29;
    outlined init with copy of ConversationControlsAppLaunchButtonType(v28, (uint64_t)v25, type metadata accessor for RemoteControlRequest);
    v87 = v13;
    v31 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
    v32 = v30;
    v33 = v97;
    v31(v20, v32, v97);
    v86 = v7;
    v34 = a2;
    swift_retain();
    v94 = v25;
    if ((static UUID.== infix(_:_:)() & 1) != 0)
    {
      v35 = v95;
      v36 = v20;
      if ((MEMORY[0x1C3B705D4](v20, v95) & 1) != 0)
      {
        if (*(_BYTE *)(v34 + *(int *)(v86 + 28)) == 1)
        {
          v98 = (char *)v89;
          v99 = v90;
          v37 = swift_allocBox();
          v39 = v38 + *(int *)(v27 + 48);
          v40 = (void (*)(uint64_t, char *, uint64_t))v31;
          v41 = (uint64_t)v94;
          outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v94, v38, type metadata accessor for RemoteControlRequest);
          v40(v39, v36, v33);
          v100 = v37 | 0x4000000000000000;
          RemoteControlStateMachine.transformState(_:to:)(v92, (unint64_t *)&v100);
          swift_release();
          (*(void (**)(char *, uint64_t))(v87 + 8))(v36, v33);
          v42 = v41;
        }
        else
        {
          v98 = (char *)v89;
          v99 = v90;
          v100 = v89;
          RemoteControlStateMachine.transformState(_:to:)(v92, (unint64_t *)&v100);
          (*(void (**)(char *, uint64_t))(v87 + 8))(v20, v33);
          v42 = (uint64_t)v94;
        }
      }
      else
      {
        if (one-time initialization token for screenSharing != -1)
          swift_once();
        v57 = type metadata accessor for Logger();
        __swift_project_value_buffer(v57, (uint64_t)&static Log.screenSharing);
        v58 = v93;
        v31(v93, (uint64_t)v35, v33);
        v59 = v84;
        v31(v84, (uint64_t)v20, v33);
        v60 = (unint64_t *)Logger.logObject.getter();
        v61 = static os_log_type_t.error.getter();
        v62 = v61;
        if (os_log_type_enabled((os_log_t)v60, v61))
        {
          v63 = swift_slowAlloc();
          LODWORD(v95) = v62;
          v64 = v63;
          v96 = (char *)swift_slowAlloc();
          v98 = v96;
          *(_DWORD *)v64 = 136315394;
          v92 = v60;
          v65 = (uint64_t)v83;
          v31(v83, (uint64_t)v58, v97);
          __swift_storeEnumTagSinglePayload(v65, 0, 1, v97);
          specialized >> prefix<A>(_:)(v65);
          v67 = v66;
          v91 = (void (*)(uint64_t, char *, uint64_t))v31;
          v69 = v68;
          outlined destroy of Participant?(v65);
          v100 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v67, v69, (uint64_t *)&v98);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          v70 = *(void (**)(char *, uint64_t))(v87 + 8);
          v70(v58, v97);
          *(_WORD *)(v64 + 12) = 2080;
          v91(v65, v59, v97);
          __swift_storeEnumTagSinglePayload(v65, 0, 1, v97);
          specialized >> prefix<A>(_:)(v65);
          v72 = v71;
          v73 = v59;
          v74 = v36;
          v76 = v75;
          outlined destroy of Participant?(v65);
          v100 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v72, v76, (uint64_t *)&v98);
          v33 = v97;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          v36 = v74;
          swift_bridgeObjectRelease();
          v70(v73, v33);
          v60 = v92;
          _os_log_impl(&dword_1BD004000, (os_log_t)v92, (os_log_type_t)v95, "Rejecting remoteControlResponse from: %s since it mismatches the participant we requested control from: %s", (uint8_t *)v64, 0x16u);
          v77 = (uint64_t)v96;
          swift_arrayDestroy();
          MEMORY[0x1C3B751B8](v77, -1, -1);
          MEMORY[0x1C3B751B8](v64, -1, -1);
        }
        else
        {
          v70 = *(void (**)(char *, uint64_t))(v87 + 8);
          v70(v58, v33);
          v70(v59, v33);
        }

        v80 = (uint64_t)v94;
        lazy protocol witness table accessor for type RemoteControlStateMachine.Errors and conformance RemoteControlStateMachine.Errors();
        swift_allocError();
        *v81 = 0;
        swift_willThrow();
        v70(v36, v33);
        v42 = v80;
      }
    }
    else
    {
      v95 = v20;
      if (one-time initialization token for screenSharing != -1)
        swift_once();
      v45 = type metadata accessor for Logger();
      __swift_project_value_buffer(v45, (uint64_t)&static Log.screenSharing);
      v46 = (uint64_t)v96;
      outlined init with copy of ConversationControlsAppLaunchButtonType(a2, (uint64_t)v96, type metadata accessor for RemoteControlResponse);
      v47 = (uint64_t)v94;
      v48 = v85;
      outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v94, v85, type metadata accessor for RemoteControlRequest);
      v49 = Logger.logObject.getter();
      v50 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v49, v50))
      {
        v51 = swift_slowAlloc();
        v93 = (char *)swift_slowAlloc();
        v98 = v93;
        *(_DWORD *)v51 = 136315394;
        v92 = (unint64_t *)(v51 + 4);
        type metadata accessor for UUID();
        _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
        v52 = dispatch thunk of CustomStringConvertible.description.getter();
        v100 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v52, v53, (uint64_t *)&v98);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        outlined destroy of RemoteControlRequest(v46, type metadata accessor for RemoteControlResponse);
        *(_WORD *)(v51 + 12) = 2080;
        v47 = (uint64_t)v94;
        v54 = dispatch thunk of CustomStringConvertible.description.getter();
        v100 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v54, v55, (uint64_t *)&v98);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        outlined destroy of RemoteControlRequest(v48, type metadata accessor for RemoteControlRequest);
        _os_log_impl(&dword_1BD004000, v49, v50, "Response.requestUUID != request.uuid (%s != %s", (uint8_t *)v51, 0x16u);
        v56 = v93;
        swift_arrayDestroy();
        MEMORY[0x1C3B751B8](v56, -1, -1);
        MEMORY[0x1C3B751B8](v51, -1, -1);
      }
      else
      {
        outlined destroy of RemoteControlRequest(v46, type metadata accessor for RemoteControlResponse);
        outlined destroy of RemoteControlRequest(v48, type metadata accessor for RemoteControlRequest);
      }

      v78 = v95;
      lazy protocol witness table accessor for type RemoteControlStateMachine.Errors and conformance RemoteControlStateMachine.Errors();
      swift_allocError();
      *v79 = 1;
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v87 + 8))(v78, v97);
      v42 = v47;
    }
    outlined destroy of RemoteControlRequest(v42, type metadata accessor for RemoteControlRequest);
    return outlined consume of RemoteControlState(v88);
  }
  else
  {
    v100 = *a1;
    RemoteControlStateMachine.logInvalidTransition(_:)((unint64_t *)&v100);
    lazy protocol witness table accessor for type RemoteControlStateMachine.Errors and conformance RemoteControlStateMachine.Errors();
    swift_allocError();
    *v43 = 2;
    return swift_willThrow();
  }
}

unint64_t closure #1 in RemoteControlStateMachine.validateIncomingCancellation(_:from:)(unint64_t *a1, uint64_t a2, char *a3, uint64_t a4, NSObject *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  char *v33;
  _BYTE *v34;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char *v45;
  void (*v46)(char *, char *, uint64_t);
  uint64_t v47;
  char *v48;
  char *v49;
  NSObject *v50;
  os_log_type_t v51;
  int v52;
  _BOOL4 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  void (*v62)(char *, uint64_t);
  uint64_t v63;
  uint64_t v64;
  char *v65;
  unint64_t v66;
  unint64_t v67;
  os_log_t v68;
  uint64_t v69;
  uint64_t v70;
  _BYTE *v71;
  _BYTE *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  char *v77;
  os_log_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85[2];
  uint64_t v86;

  v78 = a5;
  v79 = a4;
  v82 = a3;
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v7);
  v77 = (char *)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Participant();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v81 = (char *)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v80 = (char *)&v73 - v13;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v73 - v15;
  v17 = type metadata accessor for RemoteControlRequest(0);
  MEMORY[0x1E0C80A78](v17);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v73 - v19;
  MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v73 - v23;
  v25 = *a1;
  if (*a1 >> 61)
  {
    v86 = *a1;
    RemoteControlStateMachine.logInvalidTransition(_:)((unint64_t *)&v86);
    lazy protocol witness table accessor for type RemoteControlStateMachine.Errors and conformance RemoteControlStateMachine.Errors();
    swift_allocError();
    *v34 = 2;
    return swift_willThrow();
  }
  else
  {
    v74 = v22;
    v26 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (RemoteControlRequest, Participant, Bool));
    v84 = v9;
    v27 = v26;
    v28 = swift_projectBox();
    v29 = v28 + *(int *)(v27 + 48);
    outlined init with copy of ConversationControlsAppLaunchButtonType(v28, (uint64_t)v24, type metadata accessor for RemoteControlRequest);
    v75 = v10;
    v30 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    v31 = v29;
    v32 = v84;
    v30(v16, v31, v84);
    v76 = v25;
    swift_retain();
    v83 = v24;
    if ((static UUID.== infix(_:_:)() & 1) != 0)
    {
      v33 = v82;
      if ((MEMORY[0x1C3B705D4](v16, v82) & 1) != 0)
      {
        v85[0] = v79;
        v85[1] = (uint64_t)v78;
        v86 = v79;
        RemoteControlStateMachine.transformState(_:to:)(a1, (unint64_t *)&v86);
        (*(void (**)(char *, uint64_t))(v75 + 8))(v16, v32);
      }
      else
      {
        v46 = (void (*)(char *, char *, uint64_t))v30;
        if (one-time initialization token for screenSharing != -1)
          swift_once();
        v47 = type metadata accessor for Logger();
        __swift_project_value_buffer(v47, (uint64_t)&static Log.screenSharing);
        v48 = v80;
        v46(v80, v33, v32);
        v49 = v81;
        v46(v81, v16, v32);
        v50 = Logger.logObject.getter();
        v51 = static os_log_type_t.error.getter();
        v52 = v51;
        v53 = os_log_type_enabled(v50, v51);
        v54 = v75;
        if (v53)
        {
          v55 = swift_slowAlloc();
          v78 = v50;
          v56 = v55;
          v79 = swift_slowAlloc();
          v85[0] = v79;
          *(_DWORD *)v56 = 136315394;
          v82 = v16;
          LODWORD(v74) = v52;
          v57 = (uint64_t)v77;
          v46(v77, v48, v32);
          __swift_storeEnumTagSinglePayload(v57, 0, 1, v32);
          specialized >> prefix<A>(_:)(v57);
          v59 = v58;
          v61 = v60;
          outlined destroy of Participant?(v57);
          v86 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v59, v61, v85);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          v62 = *(void (**)(char *, uint64_t))(v54 + 8);
          v62(v48, v84);
          *(_WORD *)(v56 + 12) = 2080;
          v46((char *)v57, v49, v84);
          __swift_storeEnumTagSinglePayload(v57, 0, 1, v84);
          specialized >> prefix<A>(_:)(v57);
          v64 = v63;
          v65 = v49;
          v67 = v66;
          outlined destroy of Participant?(v57);
          v86 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v64, v67, v85);
          v32 = v84;
          v16 = v82;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          v62(v65, v32);
          v68 = v78;
          _os_log_impl(&dword_1BD004000, v78, (os_log_type_t)v74, "Rejecting cancellationRequest from: %s since it mismatches the participant we requested control from: %s", (uint8_t *)v56, 0x16u);
          v69 = v79;
          swift_arrayDestroy();
          MEMORY[0x1C3B751B8](v69, -1, -1);
          MEMORY[0x1C3B751B8](v56, -1, -1);

        }
        else
        {
          v62 = *(void (**)(char *, uint64_t))(v75 + 8);
          v62(v48, v32);
          v62(v49, v32);

        }
        lazy protocol witness table accessor for type RemoteControlStateMachine.Errors and conformance RemoteControlStateMachine.Errors();
        swift_allocError();
        *v72 = 0;
        swift_willThrow();
        v62(v16, v32);
      }
    }
    else
    {
      v82 = v16;
      if (one-time initialization token for screenSharing != -1)
        swift_once();
      v36 = type metadata accessor for Logger();
      __swift_project_value_buffer(v36, (uint64_t)&static Log.screenSharing);
      outlined init with copy of ConversationControlsAppLaunchButtonType(a2, (uint64_t)v20, type metadata accessor for RemoteControlRequest);
      v37 = v74;
      outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v83, v74, type metadata accessor for RemoteControlRequest);
      v38 = Logger.logObject.getter();
      v39 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v38, v39))
      {
        v40 = swift_slowAlloc();
        v81 = (char *)swift_slowAlloc();
        v85[0] = (uint64_t)v81;
        *(_DWORD *)v40 = 136315394;
        v80 = (char *)(v40 + 4);
        type metadata accessor for UUID();
        _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
        v41 = dispatch thunk of CustomStringConvertible.description.getter();
        v86 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v41, v42, v85);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        outlined destroy of RemoteControlRequest((uint64_t)v20, type metadata accessor for RemoteControlRequest);
        *(_WORD *)(v40 + 12) = 2080;
        v32 = v84;
        v43 = dispatch thunk of CustomStringConvertible.description.getter();
        v86 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v43, v44, v85);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        outlined destroy of RemoteControlRequest(v37, type metadata accessor for RemoteControlRequest);
        _os_log_impl(&dword_1BD004000, v38, v39, "cancellationRequest.uuid != request.uuid (%s != %s", (uint8_t *)v40, 0x16u);
        v45 = v81;
        swift_arrayDestroy();
        MEMORY[0x1C3B751B8](v45, -1, -1);
        MEMORY[0x1C3B751B8](v40, -1, -1);
      }
      else
      {
        outlined destroy of RemoteControlRequest((uint64_t)v20, type metadata accessor for RemoteControlRequest);
        outlined destroy of RemoteControlRequest(v37, type metadata accessor for RemoteControlRequest);
      }

      v70 = v75;
      lazy protocol witness table accessor for type RemoteControlStateMachine.Errors and conformance RemoteControlStateMachine.Errors();
      swift_allocError();
      *v71 = 1;
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v70 + 8))(v82, v32);
    }
    outlined destroy of RemoteControlRequest((uint64_t)v83, type metadata accessor for RemoteControlRequest);
    return outlined consume of RemoteControlState(v76);
  }
}

void closure #1 in RemoteControlStateMachine.validateIncomingEndRequest(_:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[10];

  v13[4] = a4;
  v13[6] = a3;
  v13[7] = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v5);
  v6 = type metadata accessor for Participant();
  MEMORY[0x1E0C80A78](v6);
  MEMORY[0x1E0C80A78](v7);
  v13[5] = (char *)v13 - v8;
  MEMORY[0x1E0C80A78](v9);
  v10 = type metadata accessor for RemoteControlRequest(0);
  MEMORY[0x1E0C80A78](v10);
  MEMORY[0x1E0C80A78](v11);
  MEMORY[0x1E0C80A78](v12);
  __asm { BR              X11 }
}

uint64_t sub_1BD4118A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _BYTE *v2;

  *(_QWORD *)(v1 - 72) = a1;
  RemoteControlStateMachine.logInvalidTransition(_:)((unint64_t *)(v1 - 72));
  lazy protocol witness table accessor for type RemoteControlStateMachine.Errors and conformance RemoteControlStateMachine.Errors();
  swift_allocError();
  *v2 = 2;
  return swift_willThrow();
}

uint64_t closure #1 in RemoteControlStateMachine.validateIncomingSuspendRequest(_:from:)(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  unint64_t v23;
  char *v24;
  char v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  os_log_t v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t, uint64_t);
  char *v55;
  char *v56;
  NSObject *v57;
  os_log_type_t v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  unint64_t v67;
  unint64_t v68;
  void (*v69)(char *, uint64_t);
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  void (*v75)(char *, uint64_t);
  char *v76;
  char *v77;
  uint64_t v78;
  void (*v79)(char *, uint64_t, uint64_t);
  char *v80;
  os_log_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84[2];
  unint64_t v85;

  v82 = a3;
  v83 = a2;
  v4 = type metadata accessor for RemoteControlSuspendRequest(0);
  MEMORY[0x1E0C80A78](v4);
  v81 = (os_log_t)((char *)&v76 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v76 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Participant();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v76 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v80 = (char *)&v76 - v14;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v76 - v16;
  v18 = type metadata accessor for RemoteControlRequest(0);
  MEMORY[0x1E0C80A78](v18);
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v76 - v21;
  v23 = *a1 >> 61;
  if (((1 << v23) & 0x2B) != 0)
    goto LABEL_2;
  if ((_DWORD)v23 == 2)
  {
    v77 = v12;
    v78 = v20;
    v76 = v8;
  }
  else
  {
    if (*(_QWORD *)(*a1 + 16) >> 61 != 2)
    {
LABEL_2:
      v85 = *a1;
      RemoteControlStateMachine.logInvalidTransition(_:)(&v85);
      lazy protocol witness table accessor for type RemoteControlStateMachine.Errors and conformance RemoteControlStateMachine.Errors();
      swift_allocError();
      v25 = 2;
LABEL_3:
      *v24 = v25;
      return swift_willThrow();
    }
    v77 = v12;
    v78 = v20;
    v76 = v8;
  }
  v27 = v9;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (RemoteControlRequest, Participant));
  v29 = swift_projectBox();
  v30 = *(int *)(v28 + 48);
  v31 = v27;
  v32 = v29 + v30;
  outlined init with copy of ConversationControlsAppLaunchButtonType(v29, (uint64_t)v22, type metadata accessor for RemoteControlRequest);
  v79 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v79(v17, v32, v27);
  v33 = v83;
  v34 = static UUID.== infix(_:_:)();
  v35 = v82;
  if ((v34 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v17, v31);
    if (one-time initialization token for screenSharing != -1)
      swift_once();
    v41 = type metadata accessor for Logger();
    __swift_project_value_buffer(v41, (uint64_t)&static Log.screenSharing);
    v42 = v81;
    outlined init with copy of ConversationControlsAppLaunchButtonType(v33, (uint64_t)v81, type metadata accessor for RemoteControlSuspendRequest);
    v43 = v78;
    outlined init with take of StagedCollaboration((uint64_t)v22, v78, type metadata accessor for RemoteControlRequest);
    v44 = Logger.logObject.getter();
    v45 = static os_log_type_t.error.getter();
    v46 = v45;
    if (os_log_type_enabled(v44, v45))
    {
      v47 = swift_slowAlloc();
      v83 = swift_slowAlloc();
      v84[0] = v83;
      *(_DWORD *)v47 = 136315394;
      type metadata accessor for UUID();
      _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
      LODWORD(v82) = v46;
      v48 = dispatch thunk of CustomStringConvertible.description.getter();
      v85 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v48, v49, v84);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      outlined destroy of RemoteControlRequest((uint64_t)v42, type metadata accessor for RemoteControlSuspendRequest);
      *(_WORD *)(v47 + 12) = 2080;
      v50 = dispatch thunk of CustomStringConvertible.description.getter();
      v85 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v50, v51, v84);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      outlined destroy of RemoteControlRequest(v43, type metadata accessor for RemoteControlRequest);
      _os_log_impl(&dword_1BD004000, v44, (os_log_type_t)v82, "suspendRequest.uuid != request.uuid (%s != %s", (uint8_t *)v47, 0x16u);
      v52 = v83;
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v52, -1, -1);
      MEMORY[0x1C3B751B8](v47, -1, -1);
    }
    else
    {
      outlined destroy of RemoteControlRequest((uint64_t)v42, type metadata accessor for RemoteControlSuspendRequest);
      outlined destroy of RemoteControlRequest(v43, type metadata accessor for RemoteControlRequest);
    }

    lazy protocol witness table accessor for type RemoteControlStateMachine.Errors and conformance RemoteControlStateMachine.Errors();
    swift_allocError();
    v25 = 1;
    goto LABEL_3;
  }
  if ((MEMORY[0x1C3B705D4](v17, v82) & 1) == 0)
  {
    outlined destroy of RemoteControlRequest((uint64_t)v22, type metadata accessor for RemoteControlRequest);
    if (one-time initialization token for screenSharing != -1)
      swift_once();
    v53 = type metadata accessor for Logger();
    __swift_project_value_buffer(v53, (uint64_t)&static Log.screenSharing);
    v54 = v79;
    v55 = v80;
    v79(v80, v35, v31);
    v56 = v77;
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v77, v17, v31);
    v57 = Logger.logObject.getter();
    v58 = static os_log_type_t.error.getter();
    v59 = v58;
    if (os_log_type_enabled(v57, v58))
    {
      v60 = swift_slowAlloc();
      v79 = v54;
      LODWORD(v82) = v59;
      v61 = v60;
      v83 = swift_slowAlloc();
      v84[0] = v83;
      *(_DWORD *)v61 = 136315394;
      v62 = (uint64_t)v76;
      v54(v76, (uint64_t)v55, v31);
      __swift_storeEnumTagSinglePayload(v62, 0, 1, v31);
      specialized >> prefix<A>(_:)(v62);
      v63 = v55;
      v65 = v64;
      v81 = v57;
      v66 = v56;
      v68 = v67;
      outlined destroy of Participant?(v62);
      v85 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v65, v68, v84);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      v69 = *(void (**)(char *, uint64_t))(v10 + 8);
      v69(v63, v31);
      *(_WORD *)(v61 + 12) = 2080;
      v79((char *)v62, (uint64_t)v66, v31);
      __swift_storeEnumTagSinglePayload(v62, 0, 1, v31);
      specialized >> prefix<A>(_:)(v62);
      v71 = v70;
      v73 = v72;
      outlined destroy of Participant?(v62);
      v85 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v71, v73, v84);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      v69(v66, v31);
      v57 = v81;
      _os_log_impl(&dword_1BD004000, v81, (os_log_type_t)v82, "Rejecting suspendRequest from: %s since it mismatches the participant we requested control from: %s", (uint8_t *)v61, 0x16u);
      v74 = v83;
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v74, -1, -1);
      MEMORY[0x1C3B751B8](v61, -1, -1);
    }
    else
    {
      v75 = *(void (**)(char *, uint64_t))(v10 + 8);
      v75(v55, v31);
      v75(v56, v31);
    }

    lazy protocol witness table accessor for type RemoteControlStateMachine.Errors and conformance RemoteControlStateMachine.Errors();
    swift_allocError();
    v25 = 0;
    goto LABEL_3;
  }
  (*(void (**)(char *, uint64_t))(v10 + 8))(v17, v31);
  v36 = swift_allocObject();
  v37 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (RemoteControlRequest, Participant));
  v38 = swift_allocBox();
  v40 = v39 + *(int *)(v37 + 48);
  outlined init with take of StagedCollaboration((uint64_t)v22, v39, type metadata accessor for RemoteControlRequest);
  v79((char *)v40, v35, v31);
  *(_QWORD *)(v36 + 16) = v38 | 0x4000000000000000;
  *(_BYTE *)(v36 + 24) = *(_BYTE *)(v83 + *(int *)(v4 + 24));
  v85 = v36 | 0x8000000000000000;
  RemoteControlStateMachine.transformState(_:to:)(a1, &v85);
  return swift_release();
}

unint64_t closure #1 in RemoteControlStateMachine.validateIncomingResumeRequest(_:from:)(unint64_t *a1, uint64_t a2, char *a3, void (*a4)(uint64_t, char *, uint64_t), uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  _BOOL4 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  void (*v56)(char *, char *);
  uint64_t v57;
  char *v58;
  NSObject *v59;
  os_log_type_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  void (*v69)(char *, uint64_t);
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  _BYTE *v77;
  _BYTE *v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void (*v86)(uint64_t, char *, uint64_t);
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91[2];
  uint64_t v92;

  v86 = a4;
  v87 = a5;
  v89 = a3;
  v90 = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v79 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Participant();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v88 = (char *)&v79 - v14;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v79 - v16;
  v18 = type metadata accessor for RemoteControlRequest(0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v79 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v79 - v22;
  MEMORY[0x1E0C80A78](v24);
  v26 = *a1;
  if (*a1 >> 61 == 4 && *(_QWORD *)(v26 + 16) >> 61 == 2)
  {
    v80 = v8;
    v81 = v12;
    v83 = v26;
    v84 = (uint64_t)&v79 - v25;
    v85 = v9;
    v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (RemoteControlRequest, Participant));
    v28 = swift_projectBox();
    v29 = v28 + *(int *)(v27 + 48);
    outlined init with copy of ConversationControlsAppLaunchButtonType(v28, v84, type metadata accessor for RemoteControlRequest);
    v82 = v10;
    v30 = v29;
    v31 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    v31(v17, v30, v85);
    v32 = v84;
    swift_retain();
    if ((static UUID.== infix(_:_:)() & 1) != 0)
    {
      v33 = v89;
      if ((MEMORY[0x1C3B705D4](v17, v89) & 1) != 0)
      {
        v91[0] = (uint64_t)v86;
        v91[1] = v87;
        v34 = swift_allocBox();
        v36 = v35 + *(int *)(v27 + 48);
        outlined init with copy of ConversationControlsAppLaunchButtonType(v32, v35, type metadata accessor for RemoteControlRequest);
        v37 = v33;
        v38 = v85;
        v31((char *)v36, (uint64_t)v37, v85);
        v92 = v34 | 0x4000000000000000;
        RemoteControlStateMachine.transformState(_:to:)(a1, (unint64_t *)&v92);
        swift_release();
        (*(void (**)(char *, uint64_t))(v82 + 8))(v17, v38);
        v39 = v32;
      }
      else
      {
        if (one-time initialization token for screenSharing != -1)
          swift_once();
        v54 = type metadata accessor for Logger();
        __swift_project_value_buffer(v54, (uint64_t)&static Log.screenSharing);
        v55 = v88;
        v56 = (void (*)(char *, char *))v31;
        v57 = v85;
        v56(v88, v33);
        v58 = v81;
        ((void (*)(char *, char *, uint64_t))v56)(v81, v17, v57);
        v59 = Logger.logObject.getter();
        v60 = static os_log_type_t.error.getter();
        v61 = v60;
        if (os_log_type_enabled(v59, v60))
        {
          v62 = swift_slowAlloc();
          LODWORD(v87) = v61;
          v63 = v62;
          v90 = swift_slowAlloc();
          v91[0] = v90;
          *(_DWORD *)v63 = 136315394;
          v89 = v17;
          v64 = (uint64_t)v80;
          ((void (*)(char *, char *, uint64_t))v56)(v80, v55, v57);
          __swift_storeEnumTagSinglePayload(v64, 0, 1, v57);
          specialized >> prefix<A>(_:)(v64);
          v66 = v65;
          v86 = (void (*)(uint64_t, char *, uint64_t))v56;
          v68 = v67;
          outlined destroy of Participant?(v64);
          v92 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v66, v68, v91);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          v69 = *(void (**)(char *, uint64_t))(v82 + 8);
          v69(v55, v85);
          *(_WORD *)(v63 + 12) = 2080;
          v86(v64, v58, v85);
          __swift_storeEnumTagSinglePayload(v64, 0, 1, v85);
          specialized >> prefix<A>(_:)(v64);
          v71 = v70;
          v73 = v72;
          outlined destroy of Participant?(v64);
          v74 = v71;
          v17 = v89;
          v92 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v74, v73, v91);
          v57 = v85;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          v69(v58, v57);
          _os_log_impl(&dword_1BD004000, v59, (os_log_type_t)v87, "Rejecting resumeRequest from: %s since it mismatches the participant we requested control from: %s", (uint8_t *)v63, 0x16u);
          v75 = v90;
          swift_arrayDestroy();
          MEMORY[0x1C3B751B8](v75, -1, -1);
          MEMORY[0x1C3B751B8](v63, -1, -1);
        }
        else
        {
          v69 = *(void (**)(char *, uint64_t))(v82 + 8);
          v69(v55, v57);
          v69(v58, v57);
        }

        lazy protocol witness table accessor for type RemoteControlStateMachine.Errors and conformance RemoteControlStateMachine.Errors();
        swift_allocError();
        *v78 = 0;
        swift_willThrow();
        v69(v17, v57);
        v39 = v84;
      }
    }
    else
    {
      v89 = v17;
      if (one-time initialization token for screenSharing != -1)
        swift_once();
      v42 = type metadata accessor for Logger();
      __swift_project_value_buffer(v42, (uint64_t)&static Log.screenSharing);
      outlined init with copy of ConversationControlsAppLaunchButtonType(v90, (uint64_t)v23, type metadata accessor for RemoteControlRequest);
      outlined init with copy of ConversationControlsAppLaunchButtonType(v32, (uint64_t)v20, type metadata accessor for RemoteControlRequest);
      v43 = Logger.logObject.getter();
      v44 = static os_log_type_t.error.getter();
      v45 = os_log_type_enabled(v43, v44);
      v46 = v85;
      if (v45)
      {
        v47 = swift_slowAlloc();
        v90 = swift_slowAlloc();
        v91[0] = v90;
        *(_DWORD *)v47 = 136315394;
        v88 = (char *)(v47 + 4);
        type metadata accessor for UUID();
        _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
        v48 = dispatch thunk of CustomStringConvertible.description.getter();
        v92 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v48, v49, v91);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        outlined destroy of RemoteControlRequest((uint64_t)v23, type metadata accessor for RemoteControlRequest);
        *(_WORD *)(v47 + 12) = 2080;
        v50 = dispatch thunk of CustomStringConvertible.description.getter();
        v92 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v50, v51, v91);
        v46 = v85;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        outlined destroy of RemoteControlRequest((uint64_t)v20, type metadata accessor for RemoteControlRequest);
        _os_log_impl(&dword_1BD004000, v43, v44, "resumeRequest.uuid != request.uuid (%s != %s", (uint8_t *)v47, 0x16u);
        v52 = v90;
        swift_arrayDestroy();
        MEMORY[0x1C3B751B8](v52, -1, -1);
        v53 = v47;
        v32 = v84;
        MEMORY[0x1C3B751B8](v53, -1, -1);
      }
      else
      {
        outlined destroy of RemoteControlRequest((uint64_t)v23, type metadata accessor for RemoteControlRequest);
        outlined destroy of RemoteControlRequest((uint64_t)v20, type metadata accessor for RemoteControlRequest);
      }

      v76 = v89;
      lazy protocol witness table accessor for type RemoteControlStateMachine.Errors and conformance RemoteControlStateMachine.Errors();
      swift_allocError();
      *v77 = 1;
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v82 + 8))(v76, v46);
      v39 = v32;
    }
    outlined destroy of RemoteControlRequest(v39, type metadata accessor for RemoteControlRequest);
    return outlined consume of RemoteControlState(v83);
  }
  else
  {
    v92 = *a1;
    RemoteControlStateMachine.logInvalidTransition(_:)((unint64_t *)&v92);
    lazy protocol witness table accessor for type RemoteControlStateMachine.Errors and conformance RemoteControlStateMachine.Errors();
    swift_allocError();
    *v40 = 2;
    return swift_willThrow();
  }
}

uint64_t closure #1 in RemoteControlStateMachine.validateOutgoingRemoteControlRequest(_:to:)(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _BYTE *v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  if (*a1 == 0xA000000000000010 && (*a1 >> 61) > 4)
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (RemoteControlRequest, Participant));
    v12 = swift_allocBox();
    v14 = v13 + *(int *)(v11 + 48);
    outlined init with copy of ConversationControlsAppLaunchButtonType(a4, v13, type metadata accessor for RemoteControlRequest);
    v15 = type metadata accessor for Participant();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v14, a5, v15);
    v16 = v12 | 0x2000000000000000;
    RemoteControlStateMachine.transformState(_:to:)(a1, (unint64_t *)&v16);
    return swift_release();
  }
  else
  {
    v16 = *a1;
    RemoteControlStateMachine.logInvalidTransition(_:)((unint64_t *)&v16);
    lazy protocol witness table accessor for type RemoteControlStateMachine.Errors and conformance RemoteControlStateMachine.Errors();
    swift_allocError();
    *v6 = 2;
    return swift_willThrow();
  }
}

void closure #1 in RemoteControlStateMachine.validateOutgoingRemoteControlResponse(_:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[12];

  v14[4] = a4;
  v14[7] = a3;
  v14[9] = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v5);
  v6 = type metadata accessor for RemoteControlResponse(0);
  MEMORY[0x1E0C80A78](v6);
  v14[6] = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Participant();
  MEMORY[0x1E0C80A78](v8);
  v14[8] = (char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  MEMORY[0x1E0C80A78](v11);
  v12 = type metadata accessor for RemoteControlRequest(0);
  MEMORY[0x1E0C80A78](v12);
  MEMORY[0x1E0C80A78](v13);
  v14[5] = a1;
  __asm { BR              X10 }
}

uint64_t sub_1BD4131D0()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;

  *(_QWORD *)(v1 - 72) = v0;
  RemoteControlStateMachine.logInvalidTransition(_:)((unint64_t *)(v1 - 72));
  lazy protocol witness table accessor for type RemoteControlStateMachine.Errors and conformance RemoteControlStateMachine.Errors();
  swift_allocError();
  *v2 = 2;
  return swift_willThrow();
}

void sub_1BD413234()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  void (*v34)(uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t, uint64_t);
  unint64_t *v54;

  *(_QWORD *)(v8 - 168) = v0;
  *(_QWORD *)(v8 - 160) = v3;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (RemoteControlRequest, Participant, Bool));
  v10 = swift_projectBox();
  v11 = v10 + *(int *)(v9 + 48);
  outlined init with copy of ConversationControlsAppLaunchButtonType(v10, v2, type metadata accessor for RemoteControlRequest);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  *(_QWORD *)(v8 - 152) = v12;
  v12(v4, v11, v1);
  v13 = *(_QWORD *)(v8 - 104);
  if ((MEMORY[0x1C3B705D4](v4, v13) & 1) != 0)
  {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v1);
    v14 = *(_QWORD *)(v8 - 120);
    if ((static UUID.== infix(_:_:)() & 1) != 0)
    {
      if (*(_BYTE *)(v14 + *(int *)(v7 + 28)) == 1)
      {
        v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (RemoteControlRequest, Participant));
        v16 = swift_allocBox();
        v18 = v17 + *(int *)(v15 + 48);
        outlined init with take of StagedCollaboration(v2, v17, type metadata accessor for RemoteControlRequest);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 - 152))(v18, v13, v1);
        *(_QWORD *)(v8 - 72) = v16 | 0x6000000000000000;
        RemoteControlStateMachine.transformState(_:to:)(*(unint64_t **)(v8 - 136), (unint64_t *)(v8 - 72));
        swift_release();
      }
      else
      {
        outlined destroy of RemoteControlRequest(v2, type metadata accessor for RemoteControlRequest);
        v54 = *(unint64_t **)(v8 - 136);
        *(_QWORD *)(v8 - 72) = *(_QWORD *)(v8 - 144);
        RemoteControlStateMachine.transformState(_:to:)(v54, (unint64_t *)(v8 - 72));
      }
      JUMPOUT(0x1BD413210);
    }
    if (one-time initialization token for screenSharing != -1)
      swift_once();
    v40 = type metadata accessor for Logger();
    __swift_project_value_buffer(v40, (uint64_t)&static Log.screenSharing);
    v41 = *(_QWORD *)(v8 - 128);
    outlined init with copy of ConversationControlsAppLaunchButtonType(v14, v41, type metadata accessor for RemoteControlResponse);
    v42 = *(_QWORD *)(v8 - 168);
    outlined init with take of StagedCollaboration(v2, v42, type metadata accessor for RemoteControlRequest);
    v43 = Logger.logObject.getter();
    v44 = static os_log_type_t.error.getter();
    v45 = v44;
    if (os_log_type_enabled(v43, v44))
    {
      v46 = swift_slowAlloc();
      v47 = swift_slowAlloc();
      *(_QWORD *)(v8 - 104) = v47;
      *(_QWORD *)(v8 - 96) = v47;
      *(_DWORD *)v46 = 136315394;
      *(_DWORD *)(v8 - 112) = v45;
      type metadata accessor for UUID();
      _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
      v48 = dispatch thunk of CustomStringConvertible.description.getter();
      *(_QWORD *)(v8 - 72) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v48, v49, (uint64_t *)(v8 - 96));
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      outlined destroy of RemoteControlRequest(v41, type metadata accessor for RemoteControlResponse);
      *(_WORD *)(v46 + 12) = 2080;
      v50 = dispatch thunk of CustomStringConvertible.description.getter();
      *(_QWORD *)(v8 - 72) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v50, v51, (uint64_t *)(v8 - 96));
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      outlined destroy of RemoteControlRequest(v42, type metadata accessor for RemoteControlRequest);
      _os_log_impl(&dword_1BD004000, v43, (os_log_type_t)*(_DWORD *)(v8 - 112), "Response.requestUUID != request.uuid (%s != %s", (uint8_t *)v46, 0x16u);
      v52 = *(_QWORD *)(v8 - 104);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v52, -1, -1);
      MEMORY[0x1C3B751B8](v46, -1, -1);
    }
    else
    {
      outlined destroy of RemoteControlRequest(v41, type metadata accessor for RemoteControlResponse);
      outlined destroy of RemoteControlRequest(v42, type metadata accessor for RemoteControlRequest);
    }

    lazy protocol witness table accessor for type RemoteControlStateMachine.Errors and conformance RemoteControlStateMachine.Errors();
    swift_allocError();
  }
  else
  {
    outlined destroy of RemoteControlRequest(v2, type metadata accessor for RemoteControlRequest);
    if (one-time initialization token for screenSharing != -1)
      swift_once();
    v19 = type metadata accessor for Logger();
    __swift_project_value_buffer(v19, (uint64_t)&static Log.screenSharing);
    v20 = v13;
    v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 - 152);
    v21(v6, v20, v1);
    v22 = *(_QWORD *)(v8 - 112);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v22, v4, v1);
    v23 = Logger.logObject.getter();
    v24 = static os_log_type_t.error.getter();
    v25 = v24;
    if (os_log_type_enabled(v23, v24))
    {
      v26 = swift_slowAlloc();
      v27 = swift_slowAlloc();
      *(_QWORD *)(v8 - 104) = v27;
      *(_QWORD *)(v8 - 96) = v27;
      *(_DWORD *)v26 = 136315394;
      *(_DWORD *)(v8 - 120) = v25;
      *(_QWORD *)(v8 - 128) = v23;
      v28 = v22;
      v29 = *(_QWORD *)(v8 - 160);
      v21(v29, v6, v1);
      __swift_storeEnumTagSinglePayload(v29, 0, 1, v1);
      specialized >> prefix<A>(_:)(v29);
      *(_QWORD *)(v8 - 152) = v21;
      v31 = v30;
      v33 = v32;
      outlined destroy of Participant?(v29);
      *(_QWORD *)(v8 - 72) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v31, v33, (uint64_t *)(v8 - 96));
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      v34 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
      v34(v6, v1);
      *(_WORD *)(v26 + 12) = 2080;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 - 152))(v29, v28, v1);
      __swift_storeEnumTagSinglePayload(v29, 0, 1, v1);
      specialized >> prefix<A>(_:)(v29);
      v36 = v35;
      v38 = v37;
      outlined destroy of Participant?(v29);
      *(_QWORD *)(v8 - 72) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v36, v38, (uint64_t *)(v8 - 96));
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      v34(v28, v1);
      v23 = *(NSObject **)(v8 - 128);
      _os_log_impl(&dword_1BD004000, v23, (os_log_type_t)*(_DWORD *)(v8 - 120), "Rejecting remoteControlResponse from: %s since it mismatches the participant we requested control from: %s", (uint8_t *)v26, 0x16u);
      v39 = *(_QWORD *)(v8 - 104);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v39, -1, -1);
      MEMORY[0x1C3B751B8](v26, -1, -1);
    }
    else
    {
      v53 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
      v53(v6, v1);
      v53(v22, v1);
    }

    lazy protocol witness table accessor for type RemoteControlStateMachine.Errors and conformance RemoteControlStateMachine.Errors();
    swift_allocError();
  }
  JUMPOUT(0x1BD413204);
}

unint64_t closure #1 in RemoteControlStateMachine.validateOutgoingCancellation(_:to:)(unint64_t *a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  char *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  _BYTE *v34;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  NSObject *v39;
  os_log_type_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  void (*v49)(char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t, uint64_t);
  NSObject *v58;
  os_log_type_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  char *v66;
  uint64_t v67;
  _BYTE *v68;
  uint64_t v69;
  _BYTE *v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(char *, uint64_t, uint64_t);
  char *v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83[2];
  uint64_t v84;

  v77 = a5;
  v78 = a4;
  v80 = a3;
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v7);
  v79 = (char *)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Participant();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v71 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v71 - v14;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v71 - v17;
  v19 = type metadata accessor for RemoteControlRequest(0);
  MEMORY[0x1E0C80A78](v19);
  MEMORY[0x1E0C80A78](v20);
  MEMORY[0x1E0C80A78](v21);
  v25 = (char *)&v71 - v24;
  v26 = *a1;
  if (*a1 >> 61 == 1)
  {
    v72 = v23;
    v73 = v22;
    v74 = v12;
    v76 = v26;
    v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (RemoteControlRequest, Participant));
    v82 = v9;
    v28 = v27;
    v29 = swift_projectBox();
    v30 = v29 + *(int *)(v28 + 48);
    outlined init with copy of ConversationControlsAppLaunchButtonType(v29, (uint64_t)v25, type metadata accessor for RemoteControlRequest);
    v75 = v10;
    v31 = v30;
    v32 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    v32(v18, v31, v82);
    swift_retain();
    v81 = v18;
    if ((MEMORY[0x1C3B705D4](v18, a2) & 1) != 0)
    {
      v33 = (uint64_t)v80;
      if ((static UUID.== infix(_:_:)() & 1) != 0)
      {
        v83[0] = v78;
        v83[1] = v77;
        v84 = v78;
        RemoteControlStateMachine.transformState(_:to:)(a1, (unint64_t *)&v84);
        (*(void (**)(char *, uint64_t))(v75 + 8))(v81, v82);
      }
      else
      {
        if (one-time initialization token for screenSharing != -1)
          swift_once();
        v55 = type metadata accessor for Logger();
        __swift_project_value_buffer(v55, (uint64_t)&static Log.screenSharing);
        v56 = v72;
        outlined init with copy of ConversationControlsAppLaunchButtonType(v33, v72, type metadata accessor for RemoteControlRequest);
        v57 = v73;
        outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v25, (uint64_t)v73, type metadata accessor for RemoteControlRequest);
        v58 = Logger.logObject.getter();
        v59 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v58, v59))
        {
          v60 = swift_slowAlloc();
          v79 = (char *)swift_slowAlloc();
          v83[0] = (uint64_t)v79;
          *(_DWORD *)v60 = 136315394;
          v78 = v60 + 4;
          type metadata accessor for UUID();
          _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
          v61 = dispatch thunk of CustomStringConvertible.description.getter();
          v84 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v61, v62, v83);
          v80 = v25;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          outlined destroy of RemoteControlRequest(v56, type metadata accessor for RemoteControlRequest);
          *(_WORD *)(v60 + 12) = 2080;
          v63 = v82;
          v64 = dispatch thunk of CustomStringConvertible.description.getter();
          v84 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v64, v65, v83);
          v25 = v80;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          outlined destroy of RemoteControlRequest((uint64_t)v57, type metadata accessor for RemoteControlRequest);
          _os_log_impl(&dword_1BD004000, v58, v59, "cancellationRequest.uuid != request.uuid (%s != %s", (uint8_t *)v60, 0x16u);
          v66 = v79;
          swift_arrayDestroy();
          MEMORY[0x1C3B751B8](v66, -1, -1);
          MEMORY[0x1C3B751B8](v60, -1, -1);

          v67 = v75;
        }
        else
        {
          outlined destroy of RemoteControlRequest(v56, type metadata accessor for RemoteControlRequest);
          outlined destroy of RemoteControlRequest((uint64_t)v57, type metadata accessor for RemoteControlRequest);

          v67 = v75;
          v63 = v82;
        }
        lazy protocol witness table accessor for type RemoteControlStateMachine.Errors and conformance RemoteControlStateMachine.Errors();
        swift_allocError();
        *v70 = 1;
        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v67 + 8))(v81, v63);
      }
      v69 = (uint64_t)v25;
    }
    else
    {
      v80 = v25;
      if (one-time initialization token for screenSharing != -1)
        swift_once();
      v36 = type metadata accessor for Logger();
      __swift_project_value_buffer(v36, (uint64_t)&static Log.screenSharing);
      v37 = v82;
      v32(v15, a2, v82);
      v38 = v74;
      v32(v74, (uint64_t)v81, v37);
      v39 = Logger.logObject.getter();
      v40 = static os_log_type_t.error.getter();
      v41 = v40;
      if (os_log_type_enabled(v39, v40))
      {
        v42 = swift_slowAlloc();
        LODWORD(v77) = v41;
        v43 = v42;
        v78 = swift_slowAlloc();
        v83[0] = v78;
        *(_DWORD *)v43 = 136315394;
        v44 = (uint64_t)v79;
        v32(v79, (uint64_t)v15, v82);
        __swift_storeEnumTagSinglePayload(v44, 0, 1, v82);
        specialized >> prefix<A>(_:)(v44);
        v73 = v32;
        v46 = v45;
        v48 = v47;
        outlined destroy of Participant?(v44);
        v84 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v46, v48, v83);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        v49 = *(void (**)(char *, uint64_t))(v75 + 8);
        v49(v15, v82);
        *(_WORD *)(v43 + 12) = 2080;
        v73((char *)v44, (uint64_t)v38, v82);
        __swift_storeEnumTagSinglePayload(v44, 0, 1, v82);
        specialized >> prefix<A>(_:)(v44);
        v51 = v50;
        v53 = v52;
        outlined destroy of Participant?(v44);
        v37 = v82;
        v84 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v51, v53, v83);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        v49(v38, v37);
        _os_log_impl(&dword_1BD004000, v39, (os_log_type_t)v77, "Rejecting remoteControlResponse from: %s since it mismatches the participant we requested control from: %s", (uint8_t *)v43, 0x16u);
        v54 = v78;
        swift_arrayDestroy();
        MEMORY[0x1C3B751B8](v54, -1, -1);
        MEMORY[0x1C3B751B8](v43, -1, -1);
      }
      else
      {
        v49 = *(void (**)(char *, uint64_t))(v75 + 8);
        v49(v15, v37);
        v49(v38, v37);
      }

      lazy protocol witness table accessor for type RemoteControlStateMachine.Errors and conformance RemoteControlStateMachine.Errors();
      swift_allocError();
      *v68 = 0;
      swift_willThrow();
      v49(v81, v37);
      v69 = (uint64_t)v80;
    }
    outlined destroy of RemoteControlRequest(v69, type metadata accessor for RemoteControlRequest);
    return outlined consume of RemoteControlState(v76);
  }
  else
  {
    v84 = *a1;
    RemoteControlStateMachine.logInvalidTransition(_:)((unint64_t *)&v84);
    lazy protocol witness table accessor for type RemoteControlStateMachine.Errors and conformance RemoteControlStateMachine.Errors();
    swift_allocError();
    *v34 = 2;
    return swift_willThrow();
  }
}

void closure #1 in RemoteControlStateMachine.validateOutgoingEndRequest(_:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[10];

  v13[4] = a4;
  v13[6] = a3;
  v13[7] = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v5);
  v6 = type metadata accessor for Participant();
  MEMORY[0x1E0C80A78](v6);
  MEMORY[0x1E0C80A78](v7);
  v13[5] = (char *)v13 - v8;
  MEMORY[0x1E0C80A78](v9);
  v10 = type metadata accessor for RemoteControlRequest(0);
  MEMORY[0x1E0C80A78](v10);
  MEMORY[0x1E0C80A78](v11);
  MEMORY[0x1E0C80A78](v12);
  __asm { BR              X11 }
}

uint64_t sub_1BD4141B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _BYTE *v2;

  *(_QWORD *)(v1 - 72) = a1;
  RemoteControlStateMachine.logInvalidTransition(_:)((unint64_t *)(v1 - 72));
  lazy protocol witness table accessor for type RemoteControlStateMachine.Errors and conformance RemoteControlStateMachine.Errors();
  swift_allocError();
  *v2 = 2;
  return swift_willThrow();
}

void closure #1 in RemoteControlStateMachine.validateOutgoingSuspendRequest(_:to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[10];

  v13[6] = a3;
  v13[7] = a2;
  v4 = type metadata accessor for RemoteControlSuspendRequest(0);
  MEMORY[0x1E0C80A78](v4);
  v13[5] = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v6);
  v7 = type metadata accessor for Participant();
  MEMORY[0x1E0C80A78](v7);
  MEMORY[0x1E0C80A78](v8);
  v13[4] = (char *)v13 - v9;
  MEMORY[0x1E0C80A78](v10);
  v11 = type metadata accessor for RemoteControlRequest(0);
  MEMORY[0x1E0C80A78](v11);
  MEMORY[0x1E0C80A78](v12);
  __asm { BR              X11 }
}

uint64_t sub_1BD414964@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _BYTE *v2;

  *(_QWORD *)(v1 - 72) = a1;
  RemoteControlStateMachine.logInvalidTransition(_:)((unint64_t *)(v1 - 72));
  lazy protocol witness table accessor for type RemoteControlStateMachine.Errors and conformance RemoteControlStateMachine.Errors();
  swift_allocError();
  *v2 = 2;
  return swift_willThrow();
}

void sub_1BD4149C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  void (*v55)(uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  void (*v61)(uint64_t, uint64_t);

  *(_QWORD *)(v9 - 152) = v1;
  *(_QWORD *)(v9 - 144) = v0;
  *(_QWORD *)(v9 - 160) = v6;
  v10 = v5;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (RemoteControlRequest, Participant));
  v12 = swift_projectBox();
  v13 = *(int *)(v11 + 48);
  v14 = v10;
  v15 = v12 + v13;
  outlined init with copy of ConversationControlsAppLaunchButtonType(v12, v3, type metadata accessor for RemoteControlRequest);
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  *(_QWORD *)(v9 - 136) = v16;
  v16(v4, v15, v10);
  v17 = *(_QWORD *)(v9 - 104);
  v18 = static UUID.== infix(_:_:)();
  v19 = *(_QWORD *)(v9 - 112);
  if ((v18 & 1) != 0)
  {
    if ((MEMORY[0x1C3B705D4](v4, *(_QWORD *)(v9 - 112)) & 1) != 0)
    {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v4, v14);
      v20 = swift_allocObject();
      v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (RemoteControlRequest, Participant));
      v22 = swift_allocBox();
      v24 = v23 + *(int *)(v21 + 48);
      outlined init with take of StagedCollaboration(v3, v23, type metadata accessor for RemoteControlRequest);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 - 136))(v24, v19, v14);
      *(_QWORD *)(v20 + 16) = v22 | 0x6000000000000000;
      *(_BYTE *)(v20 + 24) = *(_BYTE *)(*(_QWORD *)(v9 - 104) + *(int *)(v2 + 24));
      *(_QWORD *)(v9 - 72) = v20 | 0x8000000000000000;
      RemoteControlStateMachine.transformState(_:to:)(v8, (unint64_t *)(v9 - 72));
      swift_release();
      JUMPOUT(0x1BD4149A4);
    }
    outlined destroy of RemoteControlRequest(v3, type metadata accessor for RemoteControlRequest);
    if (one-time initialization token for screenSharing != -1)
      swift_once();
    v38 = type metadata accessor for Logger();
    __swift_project_value_buffer(v38, (uint64_t)&static Log.screenSharing);
    v39 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 - 136);
    v40 = *(_QWORD *)(v9 - 128);
    v39(v40, v19, v14);
    v41 = *(_QWORD *)(v9 - 152);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v41, v4, v14);
    v42 = Logger.logObject.getter();
    v43 = static os_log_type_t.error.getter();
    v44 = v43;
    if (os_log_type_enabled(v42, v43))
    {
      v45 = swift_slowAlloc();
      *(_QWORD *)(v9 - 136) = v39;
      *(_DWORD *)(v9 - 112) = v44;
      v46 = v45;
      v47 = swift_slowAlloc();
      *(_QWORD *)(v9 - 104) = v47;
      *(_QWORD *)(v9 - 96) = v47;
      *(_DWORD *)v46 = 136315394;
      v48 = *(_QWORD *)(v9 - 160);
      v39(v48, v40, v14);
      __swift_storeEnumTagSinglePayload(v48, 0, 1, v14);
      specialized >> prefix<A>(_:)(v48);
      v49 = v40;
      v51 = v50;
      *(_QWORD *)(v9 - 120) = v42;
      v52 = v41;
      v54 = v53;
      outlined destroy of Participant?(v48);
      *(_QWORD *)(v9 - 72) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v51, v54, (uint64_t *)(v9 - 96));
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      v55 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
      v55(v49, v14);
      *(_WORD *)(v46 + 12) = 2080;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 - 136))(v48, v52, v14);
      __swift_storeEnumTagSinglePayload(v48, 0, 1, v14);
      specialized >> prefix<A>(_:)(v48);
      v57 = v56;
      v59 = v58;
      outlined destroy of Participant?(v48);
      *(_QWORD *)(v9 - 72) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v57, v59, (uint64_t *)(v9 - 96));
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      v55(v52, v14);
      v42 = *(NSObject **)(v9 - 120);
      _os_log_impl(&dword_1BD004000, v42, (os_log_type_t)*(_DWORD *)(v9 - 112), "Rejecting remoteControlResponse to: %s since it mismatches the participant we requested control from: %s", (uint8_t *)v46, 0x16u);
      v60 = *(_QWORD *)(v9 - 104);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v60, -1, -1);
      MEMORY[0x1C3B751B8](v46, -1, -1);
    }
    else
    {
      v61 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
      v61(v40, v14);
      v61(v41, v14);
    }

    lazy protocol witness table accessor for type RemoteControlStateMachine.Errors and conformance RemoteControlStateMachine.Errors();
    swift_allocError();
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v4, v14);
    if (one-time initialization token for screenSharing != -1)
      swift_once();
    v25 = type metadata accessor for Logger();
    __swift_project_value_buffer(v25, (uint64_t)&static Log.screenSharing);
    v26 = *(_QWORD *)(v9 - 120);
    outlined init with copy of ConversationControlsAppLaunchButtonType(v17, v26, type metadata accessor for RemoteControlSuspendRequest);
    v27 = *(_QWORD *)(v9 - 144);
    outlined init with take of StagedCollaboration(v3, v27, type metadata accessor for RemoteControlRequest);
    v28 = Logger.logObject.getter();
    v29 = static os_log_type_t.error.getter();
    v30 = v29;
    if (os_log_type_enabled(v28, v29))
    {
      v31 = swift_slowAlloc();
      v32 = swift_slowAlloc();
      *(_QWORD *)(v9 - 104) = v32;
      *(_QWORD *)(v9 - 96) = v32;
      *(_DWORD *)v31 = 136315394;
      type metadata accessor for UUID();
      _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
      *(_DWORD *)(v9 - 112) = v30;
      v33 = dispatch thunk of CustomStringConvertible.description.getter();
      *(_QWORD *)(v9 - 72) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v33, v34, (uint64_t *)(v9 - 96));
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      outlined destroy of RemoteControlRequest(v26, type metadata accessor for RemoteControlSuspendRequest);
      *(_WORD *)(v31 + 12) = 2080;
      v35 = dispatch thunk of CustomStringConvertible.description.getter();
      *(_QWORD *)(v9 - 72) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v35, v36, (uint64_t *)(v9 - 96));
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      outlined destroy of RemoteControlRequest(v27, type metadata accessor for RemoteControlRequest);
      _os_log_impl(&dword_1BD004000, v28, (os_log_type_t)*(_DWORD *)(v9 - 112), "suspendRequest.uuid != request.uuid (%s != %s", (uint8_t *)v31, 0x16u);
      v37 = *(_QWORD *)(v9 - 104);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v37, -1, -1);
      MEMORY[0x1C3B751B8](v31, -1, -1);
    }
    else
    {
      outlined destroy of RemoteControlRequest(v26, type metadata accessor for RemoteControlSuspendRequest);
      outlined destroy of RemoteControlRequest(v27, type metadata accessor for RemoteControlRequest);
    }

    lazy protocol witness table accessor for type RemoteControlStateMachine.Errors and conformance RemoteControlStateMachine.Errors();
    swift_allocError();
  }
  JUMPOUT(0x1BD414998);
}

unint64_t closure #1 in RemoteControlStateMachine.validateOutgoingResumeRequest(_:to:)(unint64_t *a1, uint64_t a2, char *a3, void (*a4)(uint64_t, char *, uint64_t), uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  _BOOL4 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  void (*v56)(char *, char *);
  uint64_t v57;
  char *v58;
  NSObject *v59;
  os_log_type_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  void (*v69)(char *, uint64_t);
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  _BYTE *v77;
  _BYTE *v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void (*v86)(uint64_t, char *, uint64_t);
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91[2];
  uint64_t v92;

  v86 = a4;
  v87 = a5;
  v89 = a3;
  v90 = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v79 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Participant();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v88 = (char *)&v79 - v14;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v79 - v16;
  v18 = type metadata accessor for RemoteControlRequest(0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v79 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v79 - v22;
  MEMORY[0x1E0C80A78](v24);
  v26 = *a1;
  if (*a1 >> 61 == 4 && *(_QWORD *)(v26 + 16) >> 61 == 3)
  {
    v80 = v8;
    v81 = v12;
    v83 = v26;
    v84 = (uint64_t)&v79 - v25;
    v85 = v9;
    v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (RemoteControlRequest, Participant));
    v28 = swift_projectBox();
    v29 = v28 + *(int *)(v27 + 48);
    outlined init with copy of ConversationControlsAppLaunchButtonType(v28, v84, type metadata accessor for RemoteControlRequest);
    v82 = v10;
    v30 = v29;
    v31 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    v31(v17, v30, v85);
    v32 = v84;
    swift_retain();
    if ((static UUID.== infix(_:_:)() & 1) != 0)
    {
      v33 = v89;
      if ((MEMORY[0x1C3B705D4](v17, v89) & 1) != 0)
      {
        v91[0] = (uint64_t)v86;
        v91[1] = v87;
        v34 = swift_allocBox();
        v36 = v35 + *(int *)(v27 + 48);
        outlined init with copy of ConversationControlsAppLaunchButtonType(v32, v35, type metadata accessor for RemoteControlRequest);
        v37 = v33;
        v38 = v85;
        v31((char *)v36, (uint64_t)v37, v85);
        v92 = v34 | 0x6000000000000000;
        RemoteControlStateMachine.transformState(_:to:)(a1, (unint64_t *)&v92);
        swift_release();
        (*(void (**)(char *, uint64_t))(v82 + 8))(v17, v38);
        v39 = v32;
      }
      else
      {
        if (one-time initialization token for screenSharing != -1)
          swift_once();
        v54 = type metadata accessor for Logger();
        __swift_project_value_buffer(v54, (uint64_t)&static Log.screenSharing);
        v55 = v88;
        v56 = (void (*)(char *, char *))v31;
        v57 = v85;
        v56(v88, v33);
        v58 = v81;
        ((void (*)(char *, char *, uint64_t))v56)(v81, v17, v57);
        v59 = Logger.logObject.getter();
        v60 = static os_log_type_t.error.getter();
        v61 = v60;
        if (os_log_type_enabled(v59, v60))
        {
          v62 = swift_slowAlloc();
          LODWORD(v87) = v61;
          v63 = v62;
          v90 = swift_slowAlloc();
          v91[0] = v90;
          *(_DWORD *)v63 = 136315394;
          v89 = v17;
          v64 = (uint64_t)v80;
          ((void (*)(char *, char *, uint64_t))v56)(v80, v55, v57);
          __swift_storeEnumTagSinglePayload(v64, 0, 1, v57);
          specialized >> prefix<A>(_:)(v64);
          v66 = v65;
          v86 = (void (*)(uint64_t, char *, uint64_t))v56;
          v68 = v67;
          outlined destroy of Participant?(v64);
          v92 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v66, v68, v91);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          v69 = *(void (**)(char *, uint64_t))(v82 + 8);
          v69(v55, v85);
          *(_WORD *)(v63 + 12) = 2080;
          v86(v64, v58, v85);
          __swift_storeEnumTagSinglePayload(v64, 0, 1, v85);
          specialized >> prefix<A>(_:)(v64);
          v71 = v70;
          v73 = v72;
          outlined destroy of Participant?(v64);
          v74 = v71;
          v17 = v89;
          v92 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v74, v73, v91);
          v57 = v85;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          v69(v58, v57);
          _os_log_impl(&dword_1BD004000, v59, (os_log_type_t)v87, "Rejecting resumeRequest to: %s since it mismatches the participant we requested control from: %s", (uint8_t *)v63, 0x16u);
          v75 = v90;
          swift_arrayDestroy();
          MEMORY[0x1C3B751B8](v75, -1, -1);
          MEMORY[0x1C3B751B8](v63, -1, -1);
        }
        else
        {
          v69 = *(void (**)(char *, uint64_t))(v82 + 8);
          v69(v55, v57);
          v69(v58, v57);
        }

        lazy protocol witness table accessor for type RemoteControlStateMachine.Errors and conformance RemoteControlStateMachine.Errors();
        swift_allocError();
        *v78 = 0;
        swift_willThrow();
        v69(v17, v57);
        v39 = v84;
      }
    }
    else
    {
      v89 = v17;
      if (one-time initialization token for screenSharing != -1)
        swift_once();
      v42 = type metadata accessor for Logger();
      __swift_project_value_buffer(v42, (uint64_t)&static Log.screenSharing);
      outlined init with copy of ConversationControlsAppLaunchButtonType(v90, (uint64_t)v23, type metadata accessor for RemoteControlRequest);
      outlined init with copy of ConversationControlsAppLaunchButtonType(v32, (uint64_t)v20, type metadata accessor for RemoteControlRequest);
      v43 = Logger.logObject.getter();
      v44 = static os_log_type_t.error.getter();
      v45 = os_log_type_enabled(v43, v44);
      v46 = v85;
      if (v45)
      {
        v47 = swift_slowAlloc();
        v90 = swift_slowAlloc();
        v91[0] = v90;
        *(_DWORD *)v47 = 136315394;
        v88 = (char *)(v47 + 4);
        type metadata accessor for UUID();
        _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
        v48 = dispatch thunk of CustomStringConvertible.description.getter();
        v92 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v48, v49, v91);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        outlined destroy of RemoteControlRequest((uint64_t)v23, type metadata accessor for RemoteControlRequest);
        *(_WORD *)(v47 + 12) = 2080;
        v50 = dispatch thunk of CustomStringConvertible.description.getter();
        v92 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v50, v51, v91);
        v46 = v85;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        outlined destroy of RemoteControlRequest((uint64_t)v20, type metadata accessor for RemoteControlRequest);
        _os_log_impl(&dword_1BD004000, v43, v44, "resumeRequest.uuid != request.uuid (%s != %s", (uint8_t *)v47, 0x16u);
        v52 = v90;
        swift_arrayDestroy();
        MEMORY[0x1C3B751B8](v52, -1, -1);
        v53 = v47;
        v32 = v84;
        MEMORY[0x1C3B751B8](v53, -1, -1);
      }
      else
      {
        outlined destroy of RemoteControlRequest((uint64_t)v23, type metadata accessor for RemoteControlRequest);
        outlined destroy of RemoteControlRequest((uint64_t)v20, type metadata accessor for RemoteControlRequest);
      }

      v76 = v89;
      lazy protocol witness table accessor for type RemoteControlStateMachine.Errors and conformance RemoteControlStateMachine.Errors();
      swift_allocError();
      *v77 = 1;
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v82 + 8))(v76, v46);
      v39 = v32;
    }
    outlined destroy of RemoteControlRequest(v39, type metadata accessor for RemoteControlRequest);
    return outlined consume of RemoteControlState(v83);
  }
  else
  {
    v92 = *a1;
    RemoteControlStateMachine.logInvalidTransition(_:)((unint64_t *)&v92);
    lazy protocol witness table accessor for type RemoteControlStateMachine.Errors and conformance RemoteControlStateMachine.Errors();
    swift_allocError();
    *v40 = 2;
    return swift_willThrow();
  }
}

void closure #1 in RemoteControlStateMachine.validateIncomingPlaybackServerMessage(from:)(_QWORD *a1, uint64_t a2, const char *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t);
  uint64_t v36;
  _BYTE *v37;
  uint64_t v38;
  uint64_t v39;
  os_log_t v40;
  int v41;
  uint64_t v42;
  const char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Participant();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_79();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_81_2();
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v38 - v15;
  v17 = *a1 >> 61;
  if (((1 << v17) & 0x33) == 0)
  {
    v43 = a3;
    v44 = v14;
    if ((_DWORD)v17 == 2)
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (RemoteControlRequest, Participant));
      v19 = swift_projectBox();
      v20 = *(int *)(v18 + 48);
    }
    else
    {
      v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (RemoteControlRequest, Participant));
      v19 = swift_projectBox();
      v20 = *(int *)(v21 + 48);
    }
    OUTLINED_FUNCTION_29_61((uint64_t)v16, v19 + v20);
    if ((MEMORY[0x1C3B705D4](v16, a2) & 1) != 0)
    {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
    }
    else
    {
      if (one-time initialization token for screenSharing != -1)
        swift_once();
      v22 = type metadata accessor for Logger();
      __swift_project_value_buffer(v22, (uint64_t)&static Log.screenSharing);
      OUTLINED_FUNCTION_29_61(v3, a2);
      v23 = v44;
      (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v44, v16, v10);
      v24 = Logger.logObject.getter();
      v25 = static os_log_type_t.error.getter();
      v26 = v25;
      if (os_log_type_enabled(v24, v25))
      {
        v27 = swift_slowAlloc();
        v42 = swift_slowAlloc();
        v46 = v42;
        *(_DWORD *)v27 = 136315394;
        v39 = v27 + 4;
        OUTLINED_FUNCTION_29_61((uint64_t)v9, v3);
        OUTLINED_FUNCTION_22_76();
        v41 = v26;
        v29 = v28;
        OUTLINED_FUNCTION_42_44();
        v45 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v29, (unint64_t)v16, &v46);
        v40 = v24;
        OUTLINED_FUNCTION_31_55();
        swift_bridgeObjectRelease();
        v30 = *(void (**)(uint64_t))(v11 + 8);
        v31 = OUTLINED_FUNCTION_43_51();
        v30(v31);
        *(_WORD *)(v27 + 12) = 2080;
        v39 = v27 + 14;
        v32 = v44;
        OUTLINED_FUNCTION_29_61((uint64_t)v9, v44);
        OUTLINED_FUNCTION_22_76();
        v34 = v33;
        OUTLINED_FUNCTION_42_44();
        v45 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v34, (unint64_t)v16, &v46);
        OUTLINED_FUNCTION_31_55();
        swift_bridgeObjectRelease();
        ((void (*)(uint64_t, uint64_t))v30)(v32, v10);
        _os_log_impl(&dword_1BD004000, v40, (os_log_type_t)v41, v43, (uint8_t *)v27, 0x16u);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_60();
      }
      v35 = *(void (**)(uint64_t))(v11 + 8);
      v36 = OUTLINED_FUNCTION_43_51();
      v35(v36);
      ((void (*)(uint64_t, uint64_t))v35)(v23, v10);

      lazy protocol witness table accessor for type RemoteControlStateMachine.Errors and conformance RemoteControlStateMachine.Errors();
      swift_allocError();
      *v37 = 0;
      swift_willThrow();
    }
  }
  OUTLINED_FUNCTION_1_29();
}

unint64_t lazy protocol witness table accessor for type RemoteControlState and conformance RemoteControlState()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type RemoteControlState and conformance RemoteControlState;
  if (!lazy protocol witness table cache variable for type RemoteControlState and conformance RemoteControlState)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for RemoteControlState, &type metadata for RemoteControlState);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RemoteControlState and conformance RemoteControlState);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type RemoteControlStateMachine.Errors and conformance RemoteControlStateMachine.Errors()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type RemoteControlStateMachine.Errors and conformance RemoteControlStateMachine.Errors;
  if (!lazy protocol witness table cache variable for type RemoteControlStateMachine.Errors and conformance RemoteControlStateMachine.Errors)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for RemoteControlStateMachine.Errors, &type metadata for RemoteControlStateMachine.Errors);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RemoteControlStateMachine.Errors and conformance RemoteControlStateMachine.Errors);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type RemoteControlStateMachine.Errors and conformance RemoteControlStateMachine.Errors;
  if (!lazy protocol witness table cache variable for type RemoteControlStateMachine.Errors and conformance RemoteControlStateMachine.Errors)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for RemoteControlStateMachine.Errors, &type metadata for RemoteControlStateMachine.Errors);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RemoteControlStateMachine.Errors and conformance RemoteControlStateMachine.Errors);
  }
  return result;
}

void type metadata accessor for RemoteControlSuspensionReason()
{
  OUTLINED_FUNCTION_34_0();
}

unint64_t *initializeBufferWithCopyOfBuffer for RemoteControlState(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;

  v3 = *a2;
  outlined copy of RemoteControlState(*a2);
  *a1 = v3;
  return a1;
}

unint64_t destroy for RemoteControlState(unint64_t *a1)
{
  return outlined consume of RemoteControlState(*a1);
}

unint64_t *assignWithCopy for RemoteControlState(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  unint64_t v4;

  v3 = *a2;
  outlined copy of RemoteControlState(*a2);
  v4 = *a1;
  *a1 = v3;
  outlined consume of RemoteControlState(v4);
  return a1;
}

unint64_t *assignWithTake for RemoteControlState(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;

  v3 = *a1;
  *a1 = *a2;
  outlined consume of RemoteControlState(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for RemoteControlState(uint64_t a1, unsigned int a2)
{
  unsigned int v2;

  if (a2)
  {
    if (a2 >= 0x7B && *(_BYTE *)(a1 + 8))
    {
      v2 = *(_DWORD *)a1 + 122;
    }
    else
    {
      v2 = (((*(_QWORD *)a1 >> 57) >> 4) | (8 * ((*(_QWORD *)a1 >> 57) & 8 | *(_QWORD *)a1 & 7))) ^ 0x7F;
      if (v2 >= 0x7A)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for RemoteControlState(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x7A)
  {
    *(_QWORD *)result = a2 - 123;
    if (a3 >= 0x7B)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7B)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 3) & 0xF | (16 * (-a2 & 0x7F));
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t getEnumTag for RemoteControlState(_QWORD *a1)
{
  uint64_t v1;

  v1 = *a1 >> 61;
  if (v1 <= 4)
    return v1;
  else
    return (*a1 >> 3) + 5;
}

_QWORD *destructiveProjectEnumData for RemoteControlState(_QWORD *result)
{
  *result &= 0x1FFFFFFFFFFFFFFFuLL;
  return result;
}

unint64_t *destructiveInjectEnumTag for RemoteControlState(unint64_t *result, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  if (a2 < 5)
  {
    v2 = *result & 0xFFFFFFFFFFFFFF8;
    v3 = a2 << 61;
  }
  else
  {
    v2 = 8 * (a2 - 5);
    v3 = 0xA000000000000000;
  }
  *result = v2 | v3;
  return result;
}

void type metadata accessor for RemoteControlState()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t destroy for RemoteControlStateMachine(unint64_t *a1)
{
  outlined consume of RemoteControlState(*a1);
  return swift_release();
}

unint64_t *initializeBufferWithCopyOfBuffer for RemoteControlStateMachine(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4;
  unint64_t v5;

  v4 = *a2;
  outlined copy of RemoteControlState(*a2);
  v5 = a2[1];
  *a1 = v4;
  a1[1] = v5;
  swift_retain();
  return a1;
}

unint64_t *assignWithCopy for RemoteControlStateMachine(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4;
  unint64_t v5;

  v4 = *a2;
  outlined copy of RemoteControlState(*a2);
  v5 = *a1;
  *a1 = v4;
  outlined consume of RemoteControlState(v5);
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

unint64_t *assignWithTake for RemoteControlStateMachine(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4;

  v4 = *a1;
  *a1 = *a2;
  outlined consume of RemoteControlState(v4);
  a1[1] = a2[1];
  swift_release();
  return a1;
}

void type metadata accessor for RemoteControlStateMachine()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t storeEnumTagSinglePayload for RemoteControlSuspensionReason(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BD415F98 + 4 * byte_1BD65ECCD[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BD415FCC + 4 * byte_1BD65ECC8[v4]))();
}

uint64_t sub_1BD415FCC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD415FD4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD415FDCLL);
  return result;
}

uint64_t sub_1BD415FE8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD415FF0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BD415FF4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD415FFC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for RemoteControlStateMachine.Errors()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t sub_1BD416090()
{
  uint64_t v0;

  outlined consume of RemoteControlState(*(_QWORD *)(v0 + 16));
  return swift_deallocObject();
}

void InCallControlsParticipantCellViewModel.init(participant:supportsMultiway:mode:isLocalMemberAuthorizedToChangeGroupMembership:)(uint64_t a1@<X0>, int a2@<W1>, unsigned __int8 a3@<W2>, int a4@<W3>, uint64_t a5@<X8>)
{
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  int *v35;
  char v36;
  char v37;
  char v38;
  objc_class *v39;
  NSBundle v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  BOOL v46;
  int v47;
  char v48;
  char v49;
  char v50;
  char v51;
  uint64_t *v52;
  void *v53;
  uint64_t v54;
  void *EnumTagSinglePayload;
  id v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  char v69;
  __int128 v70;
  uint64_t v71;
  _QWORD *v72;
  int v73;
  _BOOL8 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t EnumCaseMultiPayload;
  void *v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(uint64_t);
  uint64_t v85;
  uint64_t v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  int *v92;
  unsigned int v93;
  uint64_t v94;
  int v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  uint64_t v99;

  v87 = a4;
  v95 = a2;
  v7 = a3;
  v89 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Participant.State, Bool, Bool));
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_41();
  v90 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_41();
  v88 = v11;
  v12 = (int *)type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_79();
  v86 = v14 - v15;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v86 - v17;
  Participant.contactDetails.getter();
  v20 = v97;
  v19 = v98;
  v21 = v99;
  *(_OWORD *)a5 = v96;
  *(_OWORD *)(a5 + 16) = v20;
  *(_OWORD *)(a5 + 32) = v19;
  *(_QWORD *)(a5 + 48) = v21;
  v22 = a1 + v12[5];
  v23 = (int *)OUTLINED_FUNCTION_14_5();
  v24 = a5 + v23[5];
  v25 = OUTLINED_FUNCTION_33_0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v24, v22, v25);
  v93 = v7;
  LOBYTE(v24) = v7 < 0x20;
  Participant.actionForParticipantCell(isBuzzingAllowed:)();
  v27 = v26;
  v28 = v26;
  *(_BYTE *)(a5 + v23[8]) = v26;
  v91 = a1;
  outlined init with copy of RecentsCallItem(a1, (uint64_t)v18, (void (*)(_QWORD))type metadata accessor for Participant);
  InCallControlsParticipantCellViewModel.ButtonConfiguration.init(_:action:)((uint64_t)v18, v27);
  v30 = v29;
  v32 = v31;
  *(_BYTE *)(a5 + v23[11]) = v31 & 1;
  v33 = v23[9];
  v34 = v23[10];
  v92 = v23;
  v35 = (int *)(a5 + v33);
  v94 = a5;
  *(_BYTE *)(a5 + v34) = v95 & BYTE1(v31) & v24;
  if (!(_DWORD)v28)
  {
    v39 = (objc_class *)objc_msgSend((id)objc_opt_self(), sel_conversationKit, v86);
    OUTLINED_FUNCTION_18_3();
    OUTLINED_FUNCTION_7_14();
    v40.super.isa = v39;
    v27 = OUTLINED_FUNCTION_49_2(v41, v42, v43, v44, v40);
    v28 = v45;

    OUTLINED_FUNCTION_53();
    v36 = 0;
    *(_QWORD *)v35 = v27;
    *((_QWORD *)v35 + 1) = v28;
    goto LABEL_7;
  }
  v36 = v27;
  *(_QWORD *)v35 = 0;
  *((_QWORD *)v35 + 1) = 0;
  OUTLINED_FUNCTION_53();
  if ((_DWORD)v28 != 1)
  {
LABEL_7:
    OUTLINED_FUNCTION_25_59();
    goto LABEL_8;
  }
  OUTLINED_FUNCTION_25_59();
  if ((v32 & 0x100) != 0 && v93 < 0x20)
  {
    v36 = 1;
    v38 = v37;
    goto LABEL_9;
  }
LABEL_8:
  v38 = 0;
LABEL_9:
  v46 = v93 >= 0x20;
  *(_BYTE *)(v30 + v35[12]) = v38 & 1;
  v47 = ((v36 & 0xFE) == 2) & (v32 >> 8);
  if (v46)
    LOBYTE(v47) = 0;
  *(_BYTE *)(v30 + v35[13]) = v47 & v37;
  Participant.isDestinationTemporary.getter();
  v49 = v48;
  outlined init with copy of RecentsCallItem(v27, v28, (void (*)(_QWORD))type metadata accessor for Participant);
  if ((v49 & 1) != 0)
  {
    outlined destroy of RemoteControlRequest(v28, type metadata accessor for Participant);
    *(_BYTE *)(v30 + v35[14]) = 0;
  }
  else
  {
    Participant.isOtherInvitedParticipant.getter();
    v51 = v50;
    outlined destroy of RemoteControlRequest(v28, type metadata accessor for Participant);
    *(_BYTE *)(v30 + v35[14]) = (v51 & 1) == 0;
  }
  if ((v95 & 1) != 0)
  {
    if (one-time initialization token for tableViewCellTitleLabel != -1)
      swift_once();
    v87 = 1;
    v52 = &static Colors.InCallControls.tableViewCellTitleLabel;
  }
  else
  {
    if (one-time initialization token for tableViewCellSubtitleLabel != -1)
      swift_once();
    v87 = 0;
    v52 = &static Colors.InCallControls.tableViewCellSubtitleLabel;
  }
  v53 = (void *)*v52;
  *(_QWORD *)(v30 + v35[17]) = *v52;
  *(_QWORD *)(v30 + v35[16]) = *(_QWORD *)(v27 + v12[8]);
  v54 = v88;
  specialized Collection.first.getter(*(_QWORD *)(v27 + v12[11]), v88);
  EnumTagSinglePayload = (void *)__swift_getEnumTagSinglePayload(v54, 1, (uint64_t)v12);
  v56 = v53;
  swift_bridgeObjectRetain();
  outlined destroy of Participant?(v54);
  if (*(_QWORD *)(v27 + v12[9] + 8) && (_DWORD)EnumTagSinglePayload == 1)
  {
    v57 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
    OUTLINED_FUNCTION_6_96();
    OUTLINED_FUNCTION_18_3();
    OUTLINED_FUNCTION_0_3(v58, 0x80000001BD6804D0);

    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v59 = swift_allocObject();
    *(_OWORD *)(v59 + 16) = xmmword_1BD6441D0;
    OUTLINED_FUNCTION_26_59();
    v60 = v27;
    v62 = *((_QWORD *)&v96 + 1);
    v61 = (void *)v96;
    v63 = v97;
    OUTLINED_FUNCTION_27_58();
    swift_bridgeObjectRelease();

    *(_QWORD *)(v59 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v59 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v59 + 32) = v62;
    *(_QWORD *)(v59 + 40) = v63;
    v35 = v92;
    v64 = String.init(format:_:)();
    v66 = v65;
    OUTLINED_FUNCTION_53();
    v67 = v94;
    v68 = (uint64_t *)(v94 + v35[6]);
    *v68 = v64;
    v68[1] = v66;
    v69 = 1;
  }
  else
  {
    OUTLINED_FUNCTION_26_59();
    v70 = v96;
    v71 = v97;
    OUTLINED_FUNCTION_27_58();
    swift_bridgeObjectRelease();

    v69 = 0;
    v67 = v94;
    v72 = (_QWORD *)(v94 + v35[6]);
    *v72 = *((_QWORD *)&v70 + 1);
    v72[1] = v71;
    v60 = v27;
  }
  *(_BYTE *)(v67 + v35[15]) = v69;
  v73 = v93 & 0xE0;
  v74 = v73 == 32;
  v75 = v90;
  v76 = *(int *)(v89 + 48);
  v77 = *(int *)(v89 + 64);
  outlined init with copy of RecentsCallItem(v60, v90, (void (*)(_QWORD))type metadata accessor for Participant.State);
  *(_BYTE *)(v75 + v76) = v74;
  *(_BYTE *)(v75 + v77) = v95 & 1;
  type metadata accessor for Participant.State(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if ((_DWORD)EnumCaseMultiPayload == 2)
  {
    v79 = (void *)objc_opt_self();
    v80 = OUTLINED_FUNCTION_7_110(v79);
    OUTLINED_FUNCTION_6_96();
    OUTLINED_FUNCTION_18_3();
    OUTLINED_FUNCTION_0_3(v81, 0x80000001BD68B9E0);
    OUTLINED_FUNCTION_10_104();
    outlined destroy of RemoteControlRequest(v60, type metadata accessor for Participant);
    v82 = v67 + v35[7];
    *(_QWORD *)v82 = v74;
    *(_QWORD *)(v82 + 8) = v76;
    *(_BYTE *)(v82 + 16) = 96;
    OUTLINED_FUNCTION_33();
    v83 = OUTLINED_FUNCTION_37_46();
    v84(v83);
  }
  else
  {
    if (v73 != 32)
      __asm { BR              X10 }
    OUTLINED_FUNCTION_16_79(EnumCaseMultiPayload, type metadata accessor for Participant);
    v85 = v94 + v35[7];
    *(_QWORD *)v85 = 0;
    *(_QWORD *)(v85 + 8) = 0;
    *(_BYTE *)(v85 + 16) = 0x80;
    outlined destroy of RemoteControlRequest(v75, type metadata accessor for Participant.State);
  }
}

BOOL static InCallControlsParticipantCellViewModel.Action.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t InCallControlsParticipantCellViewModel.Action.description.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BD416AA8 + 4 * byte_1BD65EF30[a1]))(2054845794, 0xE400000000000000);
}

uint64_t sub_1BD416AA8()
{
  return 0x74756F206B63696BLL;
}

unint64_t sub_1BD416AC0()
{
  return 0xD000000000000011;
}

unint64_t sub_1BD416AE0()
{
  return 0xD000000000000010;
}

uint64_t sub_1BD416AFC()
{
  return 1701736302;
}

uint64_t InCallControlsParticipantCellViewModel.Action.buttonText.getter(char a1)
{
  objc_class *v1;
  NSBundle v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (!a1)
  {
    v1 = (objc_class *)objc_msgSend((id)objc_opt_self(), sel_conversationKit);
    OUTLINED_FUNCTION_7_14();
    v2.super.isa = v1;
    OUTLINED_FUNCTION_49_2(v3, v4, v5, v6, v2);

  }
  return OUTLINED_FUNCTION_50();
}

uint64_t type metadata accessor for InCallControlsParticipantCellViewModel()
{
  uint64_t result;

  result = type metadata singleton initialization cache for InCallControlsParticipantCellViewModel;
  if (!type metadata singleton initialization cache for InCallControlsParticipantCellViewModel)
    return swift_getSingletonMetadata();
  return result;
}

void InCallControlsParticipantCellViewModel.Action.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
  Hasher._combine(_:)(a2);
  OUTLINED_FUNCTION_0();
}

Swift::Int InCallControlsParticipantCellViewModel.Action.hashValue.getter(unsigned __int8 a1)
{
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1);
  return Hasher._finalize()();
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance InCallControlsParticipantCellViewModel.Action(char *a1, char *a2)
{
  return static InCallControlsParticipantCellViewModel.Action.== infix(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance InCallControlsParticipantCellViewModel.Action()
{
  unsigned __int8 *v0;

  return InCallControlsParticipantCellViewModel.Action.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance InCallControlsParticipantCellViewModel.Action(uint64_t a1)
{
  unsigned __int8 *v1;

  InCallControlsParticipantCellViewModel.Action.hash(into:)(a1, *v1);
}

void static InCallControlsParticipantCellViewModel.SubtitleState.== infix(_:_:)(uint64_t a1, uint64_t a2, char a3)
{
  __asm { BR              X10 }
}

uint64_t sub_1BD416C8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unsigned int v5;
  char v8;

  if (v5 < 0x20)
  {
    if (a1 != a4 || a2 != a5)
      return _stringCompareWithSmolCheck(_:_:expecting:)();
    v8 = 1;
  }
  else
  {
    v8 = 0;
  }
  return v8 & 1;
}

void protocol witness for static Equatable.== infix(_:_:) in conformance InCallControlsParticipantCellViewModel.SubtitleState(uint64_t a1)
{
  static InCallControlsParticipantCellViewModel.SubtitleState.== infix(_:_:)(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

void InCallControlsParticipantCellViewModel.ButtonConfiguration.label.getter()
{
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_0();
}

void InCallControlsParticipantCellViewModel.ButtonConfiguration.label.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  OUTLINED_FUNCTION_35_41();
  *v2 = a1;
  v2[1] = a2;
  OUTLINED_FUNCTION_18();
}

uint64_t (*InCallControlsParticipantCellViewModel.ButtonConfiguration.label.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t InCallControlsParticipantCellViewModel.ButtonConfiguration.enabled.getter(uint64_t a1, uint64_t a2, char a3)
{
  return a3 & 1;
}

uint64_t InCallControlsParticipantCellViewModel.ButtonConfiguration.enabled.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = result;
  return result;
}

uint64_t (*InCallControlsParticipantCellViewModel.ButtonConfiguration.enabled.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t InCallControlsParticipantCellViewModel.ButtonConfiguration.visible.getter(uint64_t a1, uint64_t a2, unsigned int a3)
{
  return (a3 >> 8) & 1;
}

uint64_t InCallControlsParticipantCellViewModel.ButtonConfiguration.visible.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 17) = result;
  return result;
}

uint64_t (*InCallControlsParticipantCellViewModel.ButtonConfiguration.visible.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void InCallControlsParticipantCellViewModel.ButtonConfiguration.init(_:action:)(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  type metadata accessor for Participant.State(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_79();
  MEMORY[0x1E0C80A78](v4);
  type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_79();
  MEMORY[0x1E0C80A78](v6);
  __asm { BR              X10 }
}

uint64_t sub_1BD416ED8()
{
  uint64_t v0;
  uint64_t v1;
  int EnumCaseMultiPayload;

  outlined init with copy of RecentsCallItem(v0, v1, (void (*)(_QWORD))type metadata accessor for Participant.State);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  return ((uint64_t (*)(void))((char *)&loc_1BD416F0C + dword_1BD417204[EnumCaseMultiPayload]))();
}

uint64_t sub_1BD416F1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  void (*v7)(_QWORD);
  unsigned int EnumCaseMultiPayload;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
  v2 = v0 + *(int *)(v1 + 48);
  OUTLINED_FUNCTION_7_2((uint64_t *)(v0 + *(int *)(v1 + 64)));
  outlined destroy of Participant.MediaInfo(v2);
  OUTLINED_FUNCTION_33();
  v3 = OUTLINED_FUNCTION_36_48();
  v4(v3);
  v5 = OUTLINED_FUNCTION_50();
  outlined init with copy of RecentsCallItem(v5, v6, v7);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  return ((uint64_t (*)(void))((char *)&loc_1BD416F88 + *((int *)qword_1BD417220 + EnumCaseMultiPayload)))();
}

uint64_t sub_1BD416F98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
  v2 = v0 + *(int *)(v1 + 48);
  OUTLINED_FUNCTION_7_2((uint64_t *)(v0 + *(int *)(v1 + 64)));
  outlined destroy of Participant.MediaInfo(v2);
  v3 = OUTLINED_FUNCTION_33();
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v0, v3);
  OUTLINED_FUNCTION_32_45(v4, type metadata accessor for Participant);
  return 0;
}

uint64_t static InCallControlsParticipantCellViewModel.ButtonConfiguration.== infix(_:_:)(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  char v9;
  uint64_t result;

  if (!a2)
  {
    result = 0;
    if (a5)
      return result;
    goto LABEL_10;
  }
  if (!a5)
    return 0;
  if (a1 == a4 && a2 == a5)
  {
    if (((a3 ^ a6) & 1) == 0)
      return ((a3 & 0x100) == 0) ^ ((unsigned __int16)(a6 & 0x100) >> 8);
    return 0;
  }
  v9 = OUTLINED_FUNCTION_13();
  result = 0;
  if ((v9 & 1) == 0)
    return result;
LABEL_10:
  if (((a3 ^ a6) & 1) == 0)
    return ((a3 & 0x100) == 0) ^ ((unsigned __int16)(a6 & 0x100) >> 8);
  return result;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance InCallControlsParticipantCellViewModel.ButtonConfiguration(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;

  if (*(_BYTE *)(a1 + 17))
    v2 = 256;
  else
    v2 = 0;
  if (*(_BYTE *)(a2 + 17))
    v3 = 256;
  else
    v3 = 0;
  return static InCallControlsParticipantCellViewModel.ButtonConfiguration.== infix(_:_:)(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), v2 | *(unsigned __int8 *)(a1 + 16), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), v3 | *(unsigned __int8 *)(a2 + 16));
}

uint64_t InCallControlsParticipantCellViewModel.contactDetails.getter@<X0>(uint64_t a1@<X8>)
{
  __int128 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  id v8;

  v3 = *((_QWORD *)v1 + 2);
  v2 = *((_QWORD *)v1 + 3);
  v5 = *((_QWORD *)v1 + 4);
  v4 = *((_QWORD *)v1 + 5);
  v6 = *((_QWORD *)v1 + 6);
  v7 = *v1;
  *(_OWORD *)a1 = *v1;
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v2;
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v4;
  *(_QWORD *)(a1 + 48) = v6;
  v8 = (id)v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 InCallControlsParticipantCellViewModel.contactDetails.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  __n128 result;
  __n128 v5;
  __int128 v6;
  __int128 v7;

  v6 = a1[1];
  v7 = *a1;
  v5 = (__n128)a1[2];
  v2 = *((_QWORD *)a1 + 6);
  v3 = *(void **)v1;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  *(_OWORD *)v1 = v7;
  *(_OWORD *)(v1 + 16) = v6;
  result = v5;
  *(__n128 *)(v1 + 32) = v5;
  *(_QWORD *)(v1 + 48) = v2;
  return result;
}

uint64_t (*InCallControlsParticipantCellViewModel.contactDetails.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t InCallControlsParticipantCellViewModel.participantIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_14_5();
  OUTLINED_FUNCTION_33_0();
  v0 = OUTLINED_FUNCTION_50();
  return OUTLINED_FUNCTION_31_0(v0, v1, v2, v3);
}

uint64_t InCallControlsParticipantCellViewModel.participantIdentifier.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(OUTLINED_FUNCTION_14_5() + 20);
  v4 = OUTLINED_FUNCTION_33_0();
  return OUTLINED_FUNCTION_31_0(v3, a1, v4, *(uint64_t (**)(void))(*(_QWORD *)(v4 - 8) + 40));
}

double (*InCallControlsParticipantCellViewModel.participantIdentifier.modify())(_QWORD)
{
  OUTLINED_FUNCTION_14_5();
  return TPNumberPadCharacter.rawValue.getter;
}

void InCallControlsParticipantCellViewModel.name.getter()
{
  OUTLINED_FUNCTION_14_5();
  OUTLINED_FUNCTION_52_4();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

void InCallControlsParticipantCellViewModel.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + *(int *)(OUTLINED_FUNCTION_14_5() + 24));
  OUTLINED_FUNCTION_35_41();
  *v5 = a1;
  v5[1] = a2;
  OUTLINED_FUNCTION_18();
}

double (*InCallControlsParticipantCellViewModel.name.modify())(_QWORD)
{
  OUTLINED_FUNCTION_14_5();
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t InCallControlsParticipantCellViewModel.subtitle.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(OUTLINED_FUNCTION_14_5() + 28);
  v2 = *(_QWORD *)v1;
  outlined copy of InCallControlsParticipantCellViewModel.SubtitleState(*(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_BYTE *)(v1 + 16));
  return v2;
}

void InCallControlsParticipantCellViewModel.subtitle.setter(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v7;

  v7 = v3 + *(int *)(OUTLINED_FUNCTION_14_5() + 28);
  outlined consume of InCallControlsParticipantCellViewModel.SubtitleState(*(_QWORD *)v7, *(_QWORD *)(v7 + 8), *(_BYTE *)(v7 + 16));
  *(_QWORD *)v7 = a1;
  *(_QWORD *)(v7 + 8) = a2;
  *(_BYTE *)(v7 + 16) = a3;
  OUTLINED_FUNCTION_18();
}

double (*InCallControlsParticipantCellViewModel.subtitle.modify())(_QWORD)
{
  OUTLINED_FUNCTION_14_5();
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t InCallControlsParticipantCellViewModel.action.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(OUTLINED_FUNCTION_14_5() + 32));
}

void InCallControlsParticipantCellViewModel.action.setter(char a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_14_5() + 32)) = a1;
  OUTLINED_FUNCTION_0();
}

double (*InCallControlsParticipantCellViewModel.action.modify())(_QWORD)
{
  OUTLINED_FUNCTION_14_5();
  return TPNumberPadCharacter.rawValue.getter;
}

void InCallControlsParticipantCellViewModel.actionButtonLabel.getter()
{
  OUTLINED_FUNCTION_14_5();
  OUTLINED_FUNCTION_52_4();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

void InCallControlsParticipantCellViewModel.actionButtonLabel.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + *(int *)(OUTLINED_FUNCTION_14_5() + 36));
  OUTLINED_FUNCTION_35_41();
  *v5 = a1;
  v5[1] = a2;
  OUTLINED_FUNCTION_18();
}

double (*InCallControlsParticipantCellViewModel.actionButtonLabel.modify())(_QWORD)
{
  OUTLINED_FUNCTION_14_5();
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t InCallControlsParticipantCellViewModel.shouldShowActionButton.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(OUTLINED_FUNCTION_14_5() + 40));
}

void InCallControlsParticipantCellViewModel.shouldShowActionButton.setter(char a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_14_5() + 40)) = a1;
  OUTLINED_FUNCTION_0();
}

double (*InCallControlsParticipantCellViewModel.shouldShowActionButton.modify())(_QWORD)
{
  OUTLINED_FUNCTION_14_5();
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t InCallControlsParticipantCellViewModel.shouldEnableActionButton.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(OUTLINED_FUNCTION_14_5() + 44));
}

void InCallControlsParticipantCellViewModel.shouldEnableActionButton.setter(char a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_14_5() + 44)) = a1;
  OUTLINED_FUNCTION_0();
}

double (*InCallControlsParticipantCellViewModel.shouldEnableActionButton.modify())(_QWORD)
{
  OUTLINED_FUNCTION_14_5();
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t InCallControlsParticipantCellViewModel.shouldShowKickMemberButton.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(OUTLINED_FUNCTION_14_5() + 48));
}

void InCallControlsParticipantCellViewModel.shouldShowKickMemberButton.setter(char a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_14_5() + 48)) = a1;
  OUTLINED_FUNCTION_0();
}

double (*InCallControlsParticipantCellViewModel.shouldShowKickMemberButton.modify())(_QWORD)
{
  OUTLINED_FUNCTION_14_5();
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t InCallControlsParticipantCellViewModel.shouldShowLMIButtons.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(OUTLINED_FUNCTION_14_5() + 52));
}

void InCallControlsParticipantCellViewModel.shouldShowLMIButtons.setter(char a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_14_5() + 52)) = a1;
  OUTLINED_FUNCTION_0();
}

double (*InCallControlsParticipantCellViewModel.shouldShowLMIButtons.modify())(_QWORD)
{
  OUTLINED_FUNCTION_14_5();
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t InCallControlsParticipantCellViewModel.shouldShowInfoButton.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(OUTLINED_FUNCTION_14_5() + 56));
}

void InCallControlsParticipantCellViewModel.shouldShowInfoButton.setter(char a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_14_5() + 56)) = a1;
  OUTLINED_FUNCTION_0();
}

double (*InCallControlsParticipantCellViewModel.shouldShowInfoButton.modify())(_QWORD)
{
  OUTLINED_FUNCTION_14_5();
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t InCallControlsParticipantCellViewModel.shouldUseExtendedHeight.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(OUTLINED_FUNCTION_14_5() + 60));
}

void InCallControlsParticipantCellViewModel.shouldUseExtendedHeight.setter(char a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_14_5() + 60)) = a1;
  OUTLINED_FUNCTION_0();
}

double (*InCallControlsParticipantCellViewModel.shouldUseExtendedHeight.modify())(_QWORD)
{
  OUTLINED_FUNCTION_14_5();
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t InCallControlsParticipantCellViewModel.contactGradient.getter()
{
  OUTLINED_FUNCTION_14_5();
  return swift_bridgeObjectRetain();
}

void InCallControlsParticipantCellViewModel.contactGradient.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(OUTLINED_FUNCTION_14_5() + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  OUTLINED_FUNCTION_18();
}

double (*InCallControlsParticipantCellViewModel.contactGradient.modify())(_QWORD)
{
  OUTLINED_FUNCTION_14_5();
  return TPNumberPadCharacter.rawValue.getter;
}

id InCallControlsParticipantCellViewModel.nameLabelColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + *(int *)(OUTLINED_FUNCTION_14_5() + 68));
}

void InCallControlsParticipantCellViewModel.nameLabelColor.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(OUTLINED_FUNCTION_14_5() + 68);

  *(_QWORD *)(v1 + v3) = a1;
  OUTLINED_FUNCTION_18();
}

double (*InCallControlsParticipantCellViewModel.nameLabelColor.modify())(_QWORD)
{
  OUTLINED_FUNCTION_14_5();
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t static InCallControlsParticipantCellViewModel.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  BOOL v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  BOOL v22;
  char v23;
  _OWORD v25[3];
  uint64_t v26;
  _OWORD v27[3];
  uint64_t v28;

  v5 = *(_OWORD *)(a1 + 16);
  v4 = *(_OWORD *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 48);
  v27[0] = *(_OWORD *)a1;
  v27[1] = v5;
  v27[2] = v4;
  v28 = v6;
  v8 = *(_OWORD *)(a2 + 16);
  v7 = *(_OWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 48);
  v25[0] = *(_OWORD *)a2;
  v25[1] = v8;
  v25[2] = v7;
  v26 = v9;
  if ((static ParticipantContactDetails.== infix(_:_:)((uint64_t)v27, (uint64_t)v25) & 1) == 0)
    return 0;
  v10 = (int *)OUTLINED_FUNCTION_14_5();
  if ((static UUID.== infix(_:_:)() & 1) == 0)
    return 0;
  v11 = v10[6];
  v12 = *(_QWORD *)(a1 + v11);
  v13 = *(_QWORD *)(a1 + v11 + 8);
  v14 = (_QWORD *)(a2 + v11);
  v15 = v12 == *v14 && v13 == v14[1];
  if (!v15 && (OUTLINED_FUNCTION_13() & 1) == 0)
    return 0;
  static InCallControlsParticipantCellViewModel.SubtitleState.== infix(_:_:)(*(_QWORD *)(a1 + v10[7]), *(_QWORD *)(a1 + v10[7] + 8), *(_BYTE *)(a1 + v10[7] + 16));
  if ((v16 & 1) == 0)
    return 0;
  OUTLINED_FUNCTION_15_7();
  if (!v15)
    return 0;
  v17 = v10[9];
  v18 = (_QWORD *)(a1 + v17);
  v19 = *(_QWORD *)(a1 + v17 + 8);
  v20 = (_QWORD *)(a2 + v17);
  v21 = v20[1];
  if (v19)
  {
    if (!v21)
      return 0;
    v22 = *v18 == *v20 && v19 == v21;
    if (!v22 && (OUTLINED_FUNCTION_13() & 1) == 0)
      return 0;
  }
  else if (v21)
  {
    return 0;
  }
  OUTLINED_FUNCTION_15_7();
  if (v15)
  {
    OUTLINED_FUNCTION_15_7();
    if (v15)
    {
      OUTLINED_FUNCTION_15_7();
      if (v15)
      {
        OUTLINED_FUNCTION_15_7();
        if (v15)
        {
          OUTLINED_FUNCTION_15_7();
          if (v15)
          {
            OUTLINED_FUNCTION_15_7();
            if (v15)
            {
              specialized static Array<A>.== infix(_:_:)();
              if ((v23 & 1) != 0)
              {
                type metadata accessor for NSObject();
                return static NSObject.== infix(_:_:)() & 1;
              }
            }
          }
        }
      }
    }
  }
  return 0;
}

uint64_t InCallControlsParticipantCellViewModel.init(contactDetails:participantIdentifier:name:subtitle:action:actionButtonLabel:shouldShowActionButton:shouldEnableActionButton:shouldShowKickMemberButton:shouldShowLMIButtons:shouldShowInfoButton:shouldUseExtendedHeight:contactGradient:nameLabelColor:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, char a8@<W7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, char a12, char a13, char a14, char a15, char a16, char a17, uint64_t a18, uint64_t a19)
{
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  int *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  _QWORD *v31;
  uint64_t v32;
  _QWORD *v33;

  v25 = *(_OWORD *)(a1 + 16);
  v24 = *(_OWORD *)(a1 + 32);
  v26 = *(_QWORD *)(a1 + 48);
  *(_OWORD *)a9 = *(_OWORD *)a1;
  *(_OWORD *)(a9 + 16) = v25;
  *(_OWORD *)(a9 + 32) = v24;
  *(_QWORD *)(a9 + 48) = v26;
  v27 = (int *)OUTLINED_FUNCTION_14_5();
  v28 = a9 + v27[5];
  v29 = OUTLINED_FUNCTION_33_0();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v28, a2, v29);
  v31 = (_QWORD *)(a9 + v27[6]);
  *v31 = a3;
  v31[1] = a4;
  v32 = a9 + v27[7];
  *(_QWORD *)v32 = a5;
  *(_QWORD *)(v32 + 8) = a6;
  *(_BYTE *)(v32 + 16) = a7;
  *(_BYTE *)(a9 + v27[8]) = a8;
  v33 = (_QWORD *)(a9 + v27[9]);
  *v33 = a10;
  v33[1] = a11;
  *(_BYTE *)(a9 + v27[10]) = a12;
  *(_BYTE *)(a9 + v27[11]) = a13;
  *(_BYTE *)(a9 + v27[12]) = a14;
  *(_BYTE *)(a9 + v27[13]) = a15;
  *(_BYTE *)(a9 + v27[14]) = a16;
  *(_BYTE *)(a9 + v27[15]) = a17;
  *(_QWORD *)(a9 + v27[16]) = a18;
  *(_QWORD *)(a9 + v27[17]) = a19;
  return result;
}

void Participant.actionForParticipantCell(isBuzzingAllowed:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(_QWORD);
  char *v7;
  uint64_t v8;

  v1 = type metadata accessor for Participant(0);
  v2 = MEMORY[0x1E0C80A78](v1);
  v3 = MEMORY[0x1E0C80A78](v2);
  MEMORY[0x1E0C80A78](v3);
  v4 = type metadata accessor for Participant.State(0);
  MEMORY[0x1E0C80A78](v4);
  outlined init with copy of RecentsCallItem(v0, (uint64_t)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  v7 = (char *)&loc_1BD417DF8 + dword_1BD41802C[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BD417E08()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  char v10;
  char v11;
  char v12;
  char v13;
  void *v14;
  id v15;
  uint64_t v16;
  unsigned __int8 v17;
  char v18;

  v7 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v1, v7);
  Participant.isNotActiveAndNotLocal.getter();
  v9 = v8;
  outlined init with copy of RecentsCallItem(v0, v6, (void (*)(_QWORD))type metadata accessor for Participant);
  if ((v9 & 1) != 0)
  {
    outlined destroy of RemoteControlRequest(v6, type metadata accessor for Participant);
    outlined init with copy of RecentsCallItem(v0, v5, (void (*)(_QWORD))type metadata accessor for Participant);
  }
  else
  {
    Participant.isBuzzable.getter();
    v11 = v10;
    outlined destroy of RemoteControlRequest(v6, type metadata accessor for Participant);
    outlined init with copy of RecentsCallItem(v0, v5, (void (*)(_QWORD))type metadata accessor for Participant);
    if ((v11 & 1) == 0)
    {
      outlined destroy of RemoteControlRequest(v5, type metadata accessor for Participant);
      outlined init with copy of RecentsCallItem(v0, v3, (void (*)(_QWORD))type metadata accessor for Participant);
      goto LABEL_12;
    }
  }
  Participant.isOtherInvitedParticipant.getter();
  v13 = v12;
  outlined destroy of RemoteControlRequest(v5, type metadata accessor for Participant);
  outlined init with copy of RecentsCallItem(v0, v3, (void (*)(_QWORD))type metadata accessor for Participant);
  if ((v13 & 1) != 0)
  {
LABEL_12:
    outlined destroy of RemoteControlRequest(v3, type metadata accessor for Participant);
    goto LABEL_13;
  }
  v14 = *(void **)(v3 + *(int *)(v4 + 28));
  if (v14)
  {
    v15 = objc_msgSend(v14, sel_value);
    if (!v15)
    {
      v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v15 = (id)MEMORY[0x1C3B72E00](v16);
      swift_bridgeObjectRelease();
    }
    v17 = objc_msgSend(v15, sel_destinationIdIsTemporary);

    outlined destroy of RemoteControlRequest(v3, type metadata accessor for Participant);
    if ((v17 & 1) != 0 || (v2 & 1) == 0)
      goto LABEL_13;
    return 0;
  }
  outlined destroy of RemoteControlRequest(v3, type metadata accessor for Participant);
  if ((v2 & 1) != 0)
    return 0;
LABEL_13:
  Participant.isKickingAvailable.getter();
  if ((v18 & 1) != 0)
    return 1;
  else
    return 4;
}

id InCallControlsParticipantCellViewModel.init()@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int *v6;
  _QWORD *v7;
  id v8;
  Class isa;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  char *v18;
  uint64_t v19;
  void *v20;
  _QWORD v22[3];

  v2 = type metadata accessor for PersonNameComponents();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (int *)OUTLINED_FUNCTION_14_5();
  v7 = (_QWORD *)((char *)a1 + v6[9]);
  *v7 = 0;
  v7[1] = 0;
  PersonNameComponents.init()();
  PersonNameComponents.givenName.setter();
  PersonNameComponents.familyName.setter();
  if (one-time initialization token for initials != -1)
    swift_once();
  OUTLINED_FUNCTION_1();
  v8 = (id)static NSPersonNameComponentsFormatter.initials;
  isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
  v10 = objc_msgSend(v8, sel_stringFromPersonNameComponents_, isa);

  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v13 = v12;

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v22[0] = v11;
  v22[1] = v13;
  lazy protocol witness table accessor for type String and conformance String();
  v14 = StringProtocol.localizedUppercase.getter();
  v16 = v15;
  swift_bridgeObjectRelease();
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0xE000000000000000;
  a1[3] = 0;
  a1[4] = 0xE000000000000000;
  a1[5] = v14;
  a1[6] = v16;
  UUID.init()();
  v17 = (_QWORD *)((char *)a1 + v6[6]);
  *v17 = 0;
  v17[1] = 0xE000000000000000;
  v18 = (char *)a1 + v6[7];
  *(_QWORD *)v18 = 0;
  *((_QWORD *)v18 + 1) = 0;
  v18[16] = 0x80;
  *((_BYTE *)a1 + v6[8]) = 4;
  *((_BYTE *)a1 + v6[10]) = 0;
  *((_BYTE *)a1 + v6[11]) = 0;
  *((_BYTE *)a1 + v6[12]) = 0;
  *((_BYTE *)a1 + v6[13]) = 0;
  *((_BYTE *)a1 + v6[14]) = 0;
  *((_BYTE *)a1 + v6[15]) = 0;
  if (one-time initialization token for default != -1)
    swift_once();
  OUTLINED_FUNCTION_1();
  *(_QWORD *)((char *)a1 + v6[16]) = static Colors.ParticipantGradients.default;
  v19 = one-time initialization token for tableViewCellTitleLabel;
  swift_bridgeObjectRetain();
  if (v19 != -1)
    swift_once();
  v20 = (void *)static Colors.InCallControls.tableViewCellTitleLabel;
  *(_QWORD *)((char *)a1 + v6[17]) = static Colors.InCallControls.tableViewCellTitleLabel;
  return v20;
}

unint64_t type metadata accessor for NSObject()
{
  unint64_t result;

  result = lazy cache variable for type metadata for NSObject;
  if (!lazy cache variable for type metadata for NSObject)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for NSObject);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type InCallControlsParticipantCellViewModel.Action and conformance InCallControlsParticipantCellViewModel.Action()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type InCallControlsParticipantCellViewModel.Action and conformance InCallControlsParticipantCellViewModel.Action;
  if (!lazy protocol witness table cache variable for type InCallControlsParticipantCellViewModel.Action and conformance InCallControlsParticipantCellViewModel.Action)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for InCallControlsParticipantCellViewModel.Action, &type metadata for InCallControlsParticipantCellViewModel.Action);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type InCallControlsParticipantCellViewModel.Action and conformance InCallControlsParticipantCellViewModel.Action);
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for InCallControlsParticipantCellViewModel(char *a1, char **a2, int *a3)
{
  int v3;
  char *v4;
  char *v7;
  char *v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  _QWORD *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  char *v35;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = a2[2];
    *((_QWORD *)a1 + 1) = a2[1];
    *((_QWORD *)a1 + 2) = v8;
    v9 = a2[4];
    *((_QWORD *)a1 + 3) = a2[3];
    *((_QWORD *)a1 + 4) = v9;
    v10 = a2[6];
    v11 = a3[5];
    v35 = &a1[v11];
    v12 = (uint64_t)a2 + v11;
    *((_QWORD *)a1 + 5) = a2[5];
    *((_QWORD *)a1 + 6) = v10;
    v13 = type metadata accessor for UUID();
    v14 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    v15 = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(v35, v12, v13);
    v16 = a3[6];
    v17 = a3[7];
    v18 = &v7[v16];
    v19 = (char **)((char *)a2 + v16);
    v20 = v19[1];
    *(_QWORD *)v18 = *v19;
    *((_QWORD *)v18 + 1) = v20;
    v21 = &v7[v17];
    v22 = *(uint64_t *)((char *)a2 + v17);
    v23 = *(uint64_t *)((char *)a2 + v17 + 8);
    LOBYTE(v9) = *((_BYTE *)a2 + v17 + 16);
    swift_bridgeObjectRetain();
    outlined copy of InCallControlsParticipantCellViewModel.SubtitleState(v22, v23, (char)v9);
    *(_QWORD *)v21 = v22;
    *((_QWORD *)v21 + 1) = v23;
    v21[16] = (char)v9;
    v24 = a3[9];
    v7[a3[8]] = *((_BYTE *)a2 + a3[8]);
    v25 = &v7[v24];
    v26 = (char **)((char *)a2 + v24);
    v27 = v26[1];
    *(_QWORD *)v25 = *v26;
    *((_QWORD *)v25 + 1) = v27;
    v28 = a3[11];
    v7[a3[10]] = *((_BYTE *)a2 + a3[10]);
    v7[v28] = *((_BYTE *)a2 + v28);
    v29 = a3[13];
    v7[a3[12]] = *((_BYTE *)a2 + a3[12]);
    v7[v29] = *((_BYTE *)a2 + v29);
    v30 = a3[15];
    v7[a3[14]] = *((_BYTE *)a2 + a3[14]);
    v7[v30] = *((_BYTE *)a2 + v30);
    v31 = a3[17];
    *(_QWORD *)&v7[a3[16]] = *(char **)((char *)a2 + a3[16]);
    v32 = *(char **)((char *)a2 + v31);
    *(_QWORD *)&v7[v31] = v32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v33 = v32;
  }
  return v7;
}

void destroy for InCallControlsParticipantCellViewModel(id *a1, int *a2)
{
  char *v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = (char *)a1 + a2[5];
  v5 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  outlined consume of InCallControlsParticipantCellViewModel.SubtitleState(*(uint64_t *)((char *)a1 + a2[7]), *(uint64_t *)((char *)a1 + a2[7] + 8), *((_BYTE *)a1 + a2[7] + 16));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

}

_QWORD *initializeWithCopy for InCallControlsParticipantCellViewModel(_QWORD *a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  id v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  char *v35;

  v7 = *(void **)a2;
  v6 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v6;
  v8 = *(_QWORD *)(a2 + 24);
  a1[2] = *(_QWORD *)(a2 + 16);
  a1[3] = v8;
  v9 = *(_QWORD *)(a2 + 40);
  a1[4] = *(_QWORD *)(a2 + 32);
  a1[5] = v9;
  v10 = a3[5];
  v35 = (char *)a1 + v10;
  v11 = a2 + v10;
  a1[6] = *(_QWORD *)(a2 + 48);
  v12 = type metadata accessor for UUID();
  v13 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  v14 = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13(v35, v11, v12);
  v15 = a3[6];
  v16 = a3[7];
  v17 = (_QWORD *)((char *)a1 + v15);
  v18 = (_QWORD *)(a2 + v15);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  v20 = (char *)a1 + v16;
  v21 = *(_QWORD *)(a2 + v16);
  v22 = *(_QWORD *)(a2 + v16 + 8);
  v23 = *(_BYTE *)(a2 + v16 + 16);
  swift_bridgeObjectRetain();
  outlined copy of InCallControlsParticipantCellViewModel.SubtitleState(v21, v22, v23);
  *(_QWORD *)v20 = v21;
  *((_QWORD *)v20 + 1) = v22;
  v20[16] = v23;
  v24 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v25 = (_QWORD *)((char *)a1 + v24);
  v26 = (_QWORD *)(a2 + v24);
  v27 = v26[1];
  *v25 = *v26;
  v25[1] = v27;
  v28 = a3[11];
  *((_BYTE *)a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *((_BYTE *)a1 + v28) = *(_BYTE *)(a2 + v28);
  v29 = a3[13];
  *((_BYTE *)a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  *((_BYTE *)a1 + v29) = *(_BYTE *)(a2 + v29);
  v30 = a3[15];
  *((_BYTE *)a1 + a3[14]) = *(_BYTE *)(a2 + a3[14]);
  *((_BYTE *)a1 + v30) = *(_BYTE *)(a2 + v30);
  v31 = a3[17];
  *(_QWORD *)((char *)a1 + a3[16]) = *(_QWORD *)(a2 + a3[16]);
  v32 = *(void **)(a2 + v31);
  *(_QWORD *)((char *)a1 + v31) = v32;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v33 = v32;
  return a1;
}

uint64_t assignWithCopy for InCallControlsParticipantCellViewModel(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  void *v29;
  void *v30;
  id v31;

  v6 = *(void **)a1;
  v7 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v7;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = a3[5];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  v13 = a3[6];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = a3[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = *(_QWORD *)v18;
  v20 = *(_QWORD *)(v18 + 8);
  v21 = *(_BYTE *)(v18 + 16);
  outlined copy of InCallControlsParticipantCellViewModel.SubtitleState(*(_QWORD *)v18, v20, v21);
  v22 = *(_QWORD *)v17;
  v23 = *(_QWORD *)(v17 + 8);
  *(_QWORD *)v17 = v19;
  *(_QWORD *)(v17 + 8) = v20;
  v24 = *(_BYTE *)(v17 + 16);
  *(_BYTE *)(v17 + 16) = v21;
  outlined consume of InCallControlsParticipantCellViewModel.SubtitleState(v22, v23, v24);
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v25 = a3[9];
  v26 = (_QWORD *)(a1 + v25);
  v27 = (_QWORD *)(a2 + v25);
  *v26 = *v27;
  v26[1] = v27[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  *(_BYTE *)(a1 + a3[14]) = *(_BYTE *)(a2 + a3[14]);
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  *(_QWORD *)(a1 + a3[16]) = *(_QWORD *)(a2 + a3[16]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v28 = a3[17];
  v29 = *(void **)(a2 + v28);
  v30 = *(void **)(a1 + v28);
  *(_QWORD *)(a1 + v28) = v29;
  v31 = v29;

  return a1;
}

uint64_t initializeWithTake for InCallControlsParticipantCellViewModel(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_BYTE *)(v12 + 16) = *(_BYTE *)(v13 + 16);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  v14 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_OWORD *)(a1 + v14) = *(_OWORD *)(a2 + v14);
  v15 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *(_BYTE *)(a1 + v15) = *(_BYTE *)(a2 + v15);
  v16 = a3[13];
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  *(_BYTE *)(a1 + v16) = *(_BYTE *)(a2 + v16);
  v17 = a3[15];
  *(_BYTE *)(a1 + a3[14]) = *(_BYTE *)(a2 + a3[14]);
  *(_BYTE *)(a1 + v17) = *(_BYTE *)(a2 + v17);
  v18 = a3[17];
  *(_QWORD *)(a1 + a3[16]) = *(_QWORD *)(a2 + a3[16]);
  *(_QWORD *)(a1 + v18) = *(_QWORD *)(a2 + v18);
  return a1;
}

uint64_t assignWithTake for InCallControlsParticipantCellViewModel(uint64_t a1, _QWORD *a2, int *a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  v7 = a2[2];
  *(_QWORD *)(a1 + 8) = a2[1];
  *(_QWORD *)(a1 + 16) = v7;
  swift_bridgeObjectRelease();
  v8 = a2[4];
  *(_QWORD *)(a1 + 24) = a2[3];
  *(_QWORD *)(a1 + 32) = v8;
  swift_bridgeObjectRelease();
  v9 = a2[6];
  *(_QWORD *)(a1 + 40) = a2[5];
  *(_QWORD *)(a1 + 48) = v9;
  swift_bridgeObjectRelease();
  v10 = a3[5];
  v11 = a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v11, v12, v13);
  v14 = a3[6];
  v15 = (_QWORD *)(a1 + v14);
  v16 = (_QWORD *)((char *)a2 + v14);
  v18 = *v16;
  v17 = v16[1];
  *v15 = v18;
  v15[1] = v17;
  swift_bridgeObjectRelease();
  v19 = a3[7];
  v20 = a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = v21[16];
  v23 = *(_QWORD *)v20;
  v24 = *(_QWORD *)(v20 + 8);
  *(_OWORD *)v20 = *(_OWORD *)v21;
  v25 = *(_BYTE *)(v20 + 16);
  *(_BYTE *)(v20 + 16) = v22;
  outlined consume of InCallControlsParticipantCellViewModel.SubtitleState(v23, v24, v25);
  v26 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  v27 = (_QWORD *)(a1 + v26);
  v28 = (_QWORD *)((char *)a2 + v26);
  v30 = *v28;
  v29 = v28[1];
  *v27 = v30;
  v27[1] = v29;
  swift_bridgeObjectRelease();
  v31 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  *(_BYTE *)(a1 + v31) = *((_BYTE *)a2 + v31);
  v32 = a3[13];
  *(_BYTE *)(a1 + a3[12]) = *((_BYTE *)a2 + a3[12]);
  *(_BYTE *)(a1 + v32) = *((_BYTE *)a2 + v32);
  v33 = a3[15];
  *(_BYTE *)(a1 + a3[14]) = *((_BYTE *)a2 + a3[14]);
  *(_BYTE *)(a1 + v33) = *((_BYTE *)a2 + v33);
  *(_QWORD *)(a1 + a3[16]) = *(_QWORD *)((char *)a2 + a3[16]);
  swift_bridgeObjectRelease();
  v34 = a3[17];
  v35 = *(void **)(a1 + v34);
  *(_QWORD *)(a1 + v34) = *(_QWORD *)((char *)a2 + v34);

  return a1;
}

uint64_t getEnumTagSinglePayload for InCallControlsParticipantCellViewModel()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BD418B84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = OUTLINED_FUNCTION_33_0();
    return __swift_getEnumTagSinglePayload(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for InCallControlsParticipantCellViewModel()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1BD418C00(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v7;

  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(a1 + 16) = (a2 - 1);
    OUTLINED_FUNCTION_18();
  }
  else
  {
    v7 = OUTLINED_FUNCTION_33_0();
    __swift_storeEnumTagSinglePayload(a1 + *(int *)(a4 + 20), a2, a2, v7);
  }
}

uint64_t type metadata completion function for InCallControlsParticipantCellViewModel()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for InCallControlsParticipantCellViewModel.Action(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1BD418D78 + 4 * byte_1BD65EF3F[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1BD418DAC + 4 * byte_1BD65EF3A[v4]))();
}

uint64_t sub_1BD418DAC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD418DB4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD418DBCLL);
  return result;
}

uint64_t sub_1BD418DC8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD418DD0);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1BD418DD4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD418DDC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for InCallControlsParticipantCellViewModel.Action()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t destroy for InCallControlsParticipantCellViewModel.SubtitleState(uint64_t a1)
{
  return outlined consume of InCallControlsParticipantCellViewModel.SubtitleState(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t initializeBufferWithCopyOfBuffer for InCallControlsParticipantCellViewModel.SubtitleState(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  outlined copy of InCallControlsParticipantCellViewModel.SubtitleState(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for InCallControlsParticipantCellViewModel.SubtitleState(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  outlined copy of InCallControlsParticipantCellViewModel.SubtitleState(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  outlined consume of InCallControlsParticipantCellViewModel.SubtitleState(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for InCallControlsParticipantCellViewModel.SubtitleState(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  outlined consume of InCallControlsParticipantCellViewModel.SubtitleState(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for InCallControlsParticipantCellViewModel.SubtitleState(uint64_t a1, unsigned int a2)
{
  unsigned int v2;

  if (a2)
  {
    if (a2 >= 0x7C && *(_BYTE *)(a1 + 17))
    {
      v2 = *(_DWORD *)a1 + 123;
    }
    else
    {
      v2 = ((*(unsigned __int8 *)(a1 + 16) >> 5) & 0xFFFFFF87 | (8 * ((*(unsigned __int8 *)(a1 + 16) >> 1) & 0xF))) ^ 0x7F;
      if (v2 >= 0x7B)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for InCallControlsParticipantCellViewModel.SubtitleState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7B)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 124;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7C)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0x7C)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 0;
      *(_BYTE *)(result + 16) = 2 * (((-a2 >> 3) & 0xF) - 16 * a2);
    }
  }
  return result;
}

uint64_t destructiveInjectEnumTag for InCallControlsParticipantCellViewModel.SubtitleState(uint64_t result, unsigned int a2)
{
  char v2;

  if (a2 < 4)
  {
    v2 = *(_BYTE *)(result + 16) & 1 | (32 * a2);
  }
  else
  {
    *(_QWORD *)result = a2 - 4;
    *(_QWORD *)(result + 8) = 0;
    v2 = 0x80;
  }
  *(_BYTE *)(result + 16) = v2;
  return result;
}

void type metadata accessor for InCallControlsParticipantCellViewModel.SubtitleState()
{
  OUTLINED_FUNCTION_34_0();
}

void initializeBufferWithCopyOfBuffer for InCallControlsParticipantCellViewModel.ButtonConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_0();
}

uint64_t assignWithCopy for InCallControlsParticipantCellViewModel.ButtonConfiguration(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  return a1;
}

uint64_t assignWithTake for InCallControlsParticipantCellViewModel.ButtonConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  return a1;
}

uint64_t getEnumTagSinglePayload for InCallControlsParticipantCellViewModel.ButtonConfiguration(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 18))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InCallControlsParticipantCellViewModel.ButtonConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_WORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 18) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 18) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

void type metadata accessor for InCallControlsParticipantCellViewModel.ButtonConfiguration()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t static ReuseIdentifiable.reuseIdentifier.getter()
{
  swift_getMetatypeMetadata();
  return String.init<A>(describing:)();
}

uint64_t dispatch thunk of static ReuseIdentifiable.reuseIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

void TUCallCenter.needsMultipleRejection.getter(uint64_t a1)
{
  unint64_t v1;
  uint64_t hasIncomingAudioOrVideo;
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  id v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;

  hasIncomingAudioOrVideo = TUCallCenter.cnk_hasIncomingAudioOrVideoCall.getter(a1);
  if ((hasIncomingAudioOrVideo & 1) == 0)
    goto LABEL_11;
  v3 = OUTLINED_FUNCTION_25_1(hasIncomingAudioOrVideo, sel_currentCallGroups);
  OUTLINED_FUNCTION_17_8((uint64_t)v3, (unint64_t *)&lazy cache variable for type metadata for TUCallGroup);
  OUTLINED_FUNCTION_6_97();
  OUTLINED_FUNCTION_14_6();
  if (!(v1 >> 62))
  {
    v4 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    OUTLINED_FUNCTION_8_8();
    if (v4)
      goto LABEL_4;
LABEL_10:
    OUTLINED_FUNCTION_12_15();
    goto LABEL_11;
  }
LABEL_24:
  OUTLINED_FUNCTION_44_0();
  v4 = OUTLINED_FUNCTION_175();
  if (!v4)
    goto LABEL_10;
LABEL_4:
  v5 = 4;
  while (1)
  {
    if ((v1 & 0xC000000000000001) != 0)
      OUTLINED_FUNCTION_1_14();
    v6 = *(id *)(v1 + 8 * v5);
    v7 = v6;
    v8 = v5 - 3;
    if (__OFADD__(v5 - 4, 1))
    {
      __break(1u);
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    v9 = objc_msgSend(v6, sel_status);

    if (v9 == 1)
      break;
    ++v5;
    if (v8 == v4)
      goto LABEL_10;
  }
  v10 = OUTLINED_FUNCTION_12_15();
  v11 = OUTLINED_FUNCTION_25_1(v10, sel_currentCallGroups);
  v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v12 >> 62)
  {
    OUTLINED_FUNCTION_124();
    v13 = _CocoaArrayWrapper.endIndex.getter();
    if (v13)
      goto LABEL_14;
  }
  else
  {
    v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    OUTLINED_FUNCTION_124();
    if (v13)
    {
LABEL_14:
      v14 = 4;
      do
      {
        v1 = v14 - 4;
        v15 = (v12 & 0xC000000000000001) != 0
            ? (id)MEMORY[0x1C3B73D18](v14 - 4, v12)
            : *(id *)(v12 + 8 * v14);
        v16 = v15;
        v17 = v14 - 3;
        if (__OFADD__(v1, 1))
          goto LABEL_23;
        if (objc_msgSend(v15, sel_status) == 2)
          goto LABEL_28;

        ++v14;
      }
      while (v17 != v13);
    }
  }
  v16 = 0;
LABEL_28:
  swift_bridgeObjectRelease_n();

LABEL_11:
  OUTLINED_FUNCTION_52_1();
}

uint64_t TUCallCenter.wantsCallWaiting.getter(uint64_t a1)
{
  uint64_t v1;

  v1 = (uint64_t)OUTLINED_FUNCTION_25_1(a1, sel_currentAudioAndVideoCallCount);
  if (v1 < 2)
    return 0;
  else
    return TUCallCenter.cnk_hasIncomingAudioOrVideoCall.getter(v1);
}

void TUCallCenter.hasMultipleActiveCalls.getter()
{
  void *v0;
  unint64_t v1;
  uint64_t v2;
  char **v3;
  id v4;
  uint64_t v5;
  id v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  unsigned int v14;
  id v15;
  unint64_t v16;
  uint64_t v17;
  id v18;
  unint64_t v19;
  uint64_t v20;

  v2 = (uint64_t)objc_msgSend(v0, sel_hasCurrentVideoCalls);
  v3 = &selRef__backlightLuminance;
  if ((v2 & 1) != 0)
    goto LABEL_27;
  v4 = OUTLINED_FUNCTION_25_1(v2, sel_currentCallGroups);
  OUTLINED_FUNCTION_17_8((uint64_t)v4, (unint64_t *)&lazy cache variable for type metadata for TUCallGroup);
  OUTLINED_FUNCTION_6_97();
  OUTLINED_FUNCTION_14_6();
  if (v1 >> 62)
    goto LABEL_24;
  v5 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v2 = OUTLINED_FUNCTION_2_1();
    if (v5 != 1)
      goto LABEL_27;
    v6 = OUTLINED_FUNCTION_25_1(v2, v3[386]);
    static Array._unconditionallyBridgeFromObjectiveC(_:)();
    OUTLINED_FUNCTION_14_6();
    if (v1 >> 62)
    {
      OUTLINED_FUNCTION_8_8();
      v17 = _CocoaArrayWrapper.endIndex.getter();
      OUTLINED_FUNCTION_2_1();
      if (!v17)
      {
LABEL_26:
        v2 = OUTLINED_FUNCTION_2_1();
LABEL_27:
        v18 = OUTLINED_FUNCTION_25_1(v2, v3[386]);
        OUTLINED_FUNCTION_17_8((uint64_t)v18, (unint64_t *)&lazy cache variable for type metadata for TUCallGroup);
        v19 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        if (v19 >> 62)
        {
          OUTLINED_FUNCTION_124();
          v1 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
        }
        else
        {
          v1 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        v20 = swift_bridgeObjectRelease();
        if (!__OFADD__(v1, OUTLINED_FUNCTION_25_1(v20, sel_currentVideoCallCount)))
          goto LABEL_30;
        __break(1u);
        goto LABEL_33;
      }
    }
    else if (!*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_26;
    }
    specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v1 & 0xC000000000000001) == 0, v1);
    if ((v1 & 0xC000000000000001) == 0)
    {
      v7 = *(id *)(v1 + 32);
      goto LABEL_9;
    }
LABEL_33:
    v7 = (id)MEMORY[0x1C3B73D18](0, v1);
LABEL_9:
    v8 = v7;
    OUTLINED_FUNCTION_2_1();
    OUTLINED_FUNCTION_17_8((uint64_t)objc_msgSend(v8, sel_calls), (unint64_t *)&lazy cache variable for type metadata for TUCall);
    static Array._unconditionallyBridgeFromObjectiveC(_:)();
    OUTLINED_FUNCTION_14_6();
    if (v1 >> 62)
      break;
    v9 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    OUTLINED_FUNCTION_8_8();
    if (!v9)
      goto LABEL_17;
LABEL_11:
    v10 = 4;
    while (1)
    {
      v3 = (char **)(v10 - 4);
      if ((v1 & 0xC000000000000001) != 0)
        OUTLINED_FUNCTION_1_14();
      v11 = *(id *)(v1 + 8 * v10);
      v12 = v11;
      v13 = v10 - 3;
      if (__OFADD__(v3, 1))
        break;
      v14 = objc_msgSend(v11, sel_wantsHoldMusic);

      if (v14)
      {

        OUTLINED_FUNCTION_12_15();
        goto LABEL_30;
      }
      ++v10;
      if (v13 == v9)
        goto LABEL_17;
    }
    __break(1u);
LABEL_24:
    OUTLINED_FUNCTION_44_0();
    v5 = OUTLINED_FUNCTION_175();
    OUTLINED_FUNCTION_2_1();
  }
  OUTLINED_FUNCTION_44_0();
  v9 = OUTLINED_FUNCTION_175();
  if (v9)
    goto LABEL_11;
LABEL_17:
  OUTLINED_FUNCTION_12_15();
  if (OUTLINED_FUNCTION_11_94() == 1 || OUTLINED_FUNCTION_11_94() == 2)
  {
    v15 = objc_msgSend(v8, sel_calls);
    v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v16 >> 62)
    {
      swift_bridgeObjectRetain();
      _CocoaArrayWrapper.endIndex.getter();

      swift_bridgeObjectRelease_n();
    }
    else
    {
      swift_bridgeObjectRelease();

    }
  }
  else
  {

  }
LABEL_30:
  OUTLINED_FUNCTION_52_1();
}

uint64_t TUCallCenter.cnk_hasIncomingAudioOrVideoCall.getter(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t result;

  v1 = OUTLINED_FUNCTION_25_1(a1, sel_incomingCall);

  if (!v1)
  {
    result = (uint64_t)OUTLINED_FUNCTION_25_1(v2, sel_incomingVideoCall);
    if (!result)
      return result;

  }
  return 1;
}

uint64_t @objc TUCallCenter.cnk_hasTooManyCallsForCallWaitingBanner.getter(void *a1)
{
  id v1;
  char v2;

  v1 = a1;
  v2 = TUCallCenter.cnk_hasTooManyCallsForCallWaitingBanner.getter((uint64_t)v1);

  return v2 & 1;
}

uint64_t TUCallCenter.cnk_hasTooManyCallsForCallWaitingBanner.getter(uint64_t a1)
{
  uint64_t v1;

  v1 = (uint64_t)OUTLINED_FUNCTION_25_1(a1, sel_currentAudioAndVideoCallCount);
  if (v1 < 3)
    return 0;
  else
    return TUCallCenter.cnk_hasIncomingAudioOrVideoCall.getter(v1);
}

BOOL SBUISystemApertureLayoutMode.isSystemApertureVisible.getter(uint64_t a1)
{
  return (unint64_t)(a1 - 2) < 3;
}

uint64_t SBUISystemApertureLayoutMode.debugName.getter()
{
  id v0;
  uint64_t v1;

  v0 = (id)SBUISystemApertureLayoutModeDescription();
  v1 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v1;
}

void ParticipantViewLabelContainerView.isCentered.setter(char a1)
{
  uint64_t v1;
  char *v3;
  char v4;

  v3 = (char *)(v1 + OBJC_IVAR____TtC15ConversationKit33ParticipantViewLabelContainerView_isCentered);
  swift_beginAccess();
  v4 = *v3;
  *v3 = a1;
  ParticipantViewLabelContainerView.isCentered.didset(v4);
}

double ParticipantViewLabelContainerView.intrinsicContentSize.getter(uint64_t a1)
{
  id v1;
  void *v2;
  id v3;
  double v4;
  double v5;

  v1 = OUTLINED_FUNCTION_123(a1, sel_font);
  if (v1)
  {
    v2 = v1;
    v3 = OUTLINED_FUNCTION_123((uint64_t)v1, sel_text);

  }
  OUTLINED_FUNCTION_15_88();
  v5 = v4;
  OUTLINED_FUNCTION_15_88();
  return v5;
}

id ParticipantViewLabelContainerView.label.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC15ConversationKit33ParticipantViewLabelContainerView_label);
}

uint64_t ParticipantViewLabelContainerView.isCentered.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC15ConversationKit33ParticipantViewLabelContainerView_isCentered);
  OUTLINED_FUNCTION_1();
  return *v1;
}

uint64_t key path getter for ParticipantViewLabelContainerView.isCentered : ParticipantViewLabelContainerView@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC15ConversationKit33ParticipantViewLabelContainerView_isCentered);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void ParticipantViewLabelContainerView.isCentered.didset(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  char v8;
  _BYTE *v9;
  void *v10;
  void *v11;
  Class isa;
  Class v13;
  uint64_t v14;

  v2 = v1;
  v4 = type metadata accessor for DispatchPredicate();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (uint64_t *)((char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v7 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DEF740], v4);
  v8 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) != 0)
  {
    v9 = (_BYTE *)(v2 + OBJC_IVAR____TtC15ConversationKit33ParticipantViewLabelContainerView_isCentered);
    swift_beginAccess();
    if (*v9 != (a1 & 1))
    {
      v10 = *(void **)(v2 + OBJC_IVAR____TtC15ConversationKit33ParticipantViewLabelContainerView_label);
      if (*v9)
        objc_msgSend(v10, sel_setTextAlignment_, 1);
      else
        objc_msgSend(v10, sel_setTextAlignment_, 4);
      v11 = (void *)objc_opt_self();
      _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
      swift_bridgeObjectRetain();
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      objc_msgSend(v11, sel_activateConstraints_, isa);

      swift_bridgeObjectRetain();
      v13 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      objc_msgSend(v11, sel_deactivateConstraints_, v13);

    }
  }
  else
  {
    __break(1u);
  }
}

void (*ParticipantViewLabelContainerView.isCentered.modify(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  _BYTE *v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit33ParticipantViewLabelContainerView_isCentered);
  OUTLINED_FUNCTION_1();
  *((_BYTE *)v3 + 32) = *v4;
  return ParticipantViewLabelContainerView.isCentered.modify;
}

void ParticipantViewLabelContainerView.isCentered.modify(uint64_t a1)
{
  void *v1;

  v1 = *(void **)a1;
  ParticipantViewLabelContainerView.isCentered.setter(*(_BYTE *)(*(_QWORD *)a1 + 32));
  free(v1);
}

id ParticipantViewLabelContainerView.__allocating_init(frame:)()
{
  Class v0;
  id v1;
  double v2;
  id v3;
  SEL v4;

  OUTLINED_FUNCTION_17_7();
  v1 = objc_allocWithZone(v0);
  v2 = OUTLINED_FUNCTION_15_0();
  return objc_msgSend(v3, v4, v2);
}

char *ParticipantViewLabelContainerView.init(frame:)()
{
  char *v0;
  uint64_t v1;
  id v2;
  char *v3;
  uint64_t v4;
  double v5;
  objc_super *v6;
  SEL v7;
  char *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  id v14;
  void *v15;
  unsigned __int8 *v16;
  double v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  _QWORD *v25;
  id v26;
  id v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  id v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  void *v54;
  Class isa;
  id v56;
  uint64_t v57;
  void *v58;
  id v59;
  void *v60;
  void *v61;
  uint64_t v62;
  id v63;
  id v64;
  id v65;
  uint64_t v66;
  id v67;
  id v68;
  id v69;
  uint64_t v70;
  id v71;
  id v72;
  id v73;
  uint64_t v74;
  id v75;
  id v76;
  Class v77;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  id v86;
  void *v87;
  __int128 v88;
  __int128 v89;
  uint64_t v90;

  OUTLINED_FUNCTION_17_7();
  swift_getObjectType();
  v1 = OBJC_IVAR____TtC15ConversationKit33ParticipantViewLabelContainerView_label;
  v2 = objc_allocWithZone(MEMORY[0x1E0DC3990]);
  v3 = v0;
  *(_QWORD *)&v0[v1] = objc_msgSend(v2, sel_init);
  v4 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v3[OBJC_IVAR____TtC15ConversationKit33ParticipantViewLabelContainerView_centerAlignedConstraints] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v3[OBJC_IVAR____TtC15ConversationKit33ParticipantViewLabelContainerView_leadingAlignedConstraints] = v4;
  v3[OBJC_IVAR____TtC15ConversationKit33ParticipantViewLabelContainerView_isCentered] = 1;

  v5 = OUTLINED_FUNCTION_15_0();
  v8 = (char *)objc_msgSendSuper2(v6, v7, v5);
  objc_msgSend(v8, sel_setClipsToBounds_, 1);
  v9 = OBJC_IVAR____TtC15ConversationKit33ParticipantViewLabelContainerView_label;
  v10 = *(void **)&v8[OBJC_IVAR____TtC15ConversationKit33ParticipantViewLabelContainerView_label];
  objc_msgSend(v10, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v11 = one-time initialization token for titleLabel;
  v12 = v10;
  if (v11 != -1)
    swift_once();
  objc_msgSend(v12, sel_setTextColor_, static Colors.ParticipantViews.titleLabel);

  v13 = one-time initialization token for title;
  v14 = *(id *)&v8[v9];
  if (v13 != -1)
    swift_once();
  objc_msgSend(v14, sel_setFont_, static Fonts.ParticipantViews.title);

  v15 = *(void **)&v8[v9];
  v16 = (unsigned __int8 *)&v8[OBJC_IVAR____TtC15ConversationKit33ParticipantViewLabelContainerView_isCentered];
  v83 = (uint64_t)&v8[OBJC_IVAR____TtC15ConversationKit33ParticipantViewLabelContainerView_isCentered];
  OUTLINED_FUNCTION_1();
  objc_msgSend(v15, sel_setTextAlignment_, *v16);
  objc_msgSend(v15, sel_setNumberOfLines_, 1);
  LODWORD(v17) = 1148846080;
  objc_msgSend(v15, sel_setContentHuggingPriority_forAxis_, 1, v17);
  objc_msgSend(v8, sel_addSubview_, v15);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v18 = OUTLINED_FUNCTION_13_13();
  *(_OWORD *)(v18 + 16) = xmmword_1BD6441C0;
  v19 = objc_msgSend(v15, sel_topAnchor);
  v20 = OUTLINED_FUNCTION_123((uint64_t)v19, sel_topAnchor);
  v21 = OUTLINED_FUNCTION_11_95(v19, sel_constraintEqualToAnchor_);

  *(_QWORD *)(v18 + 32) = v21;
  v22 = objc_msgSend(*(id *)&v8[v9], sel_bottomAnchor);
  v23 = OUTLINED_FUNCTION_123((uint64_t)v22, sel_bottomAnchor);
  v24 = OUTLINED_FUNCTION_11_95(v22, (SEL)&selRef_attemptToPlaySoundType_forCall_ + 6);

  *(_QWORD *)(v18 + 40) = v24;
  OUTLINED_FUNCTION_1_133();
  v25 = objc_msgSend(*(id *)&v8[v9], sel_centerXAnchor);
  v26 = OUTLINED_FUNCTION_123((uint64_t)v25, sel_centerXAnchor);
  v27 = OUTLINED_FUNCTION_11_95(v25, (SEL)&selRef_attemptToPlaySoundType_forCall_ + 6);

  LODWORD(v28) = 1132068864;
  objc_msgSend(v27, sel_setPriority_, v28);
  v29 = OUTLINED_FUNCTION_13_13();
  v37 = objc_msgSend((id)OUTLINED_FUNCTION_16_80(v29, v30, v31, v32, v33, v34, v35, v36, v79, v90, v83, v85, xmmword_1BD6441C0), sel_leadingAnchor);
  v38 = OUTLINED_FUNCTION_123((uint64_t)v37, sel_leadingAnchor);
  v39 = OUTLINED_FUNCTION_4_5((uint64_t)v38, sel_constraintGreaterThanOrEqualToAnchor_);
  OUTLINED_FUNCTION_8_5();

  v25[4] = &selRef_associatedAppBundleIdentifier;
  v25[5] = v27;
  OUTLINED_FUNCTION_1_133();
  v40 = *(_QWORD *)&v8[OBJC_IVAR____TtC15ConversationKit33ParticipantViewLabelContainerView_centerAlignedConstraints];
  *(_QWORD *)&v8[OBJC_IVAR____TtC15ConversationKit33ParticipantViewLabelContainerView_centerAlignedConstraints] = v90;
  v86 = v27;
  OUTLINED_FUNCTION_27();
  v41 = OUTLINED_FUNCTION_13_13();
  v49 = objc_msgSend((id)OUTLINED_FUNCTION_16_80(v41, v42, v43, v44, v45, v46, v47, v48, v80, v81, v84, (uint64_t)v86, v88), sel_leadingAnchor);
  v50 = OUTLINED_FUNCTION_123((uint64_t)v49, sel_leadingAnchor);
  v51 = OUTLINED_FUNCTION_4_5((uint64_t)v50, sel_constraintEqualToAnchor_);
  OUTLINED_FUNCTION_8_5();

  *(_QWORD *)(v40 + 32) = &selRef_associatedAppBundleIdentifier;
  v52 = OUTLINED_FUNCTION_123((uint64_t)objc_msgSend(*(id *)&v8[v9], sel_trailingAnchor), sel_trailingAnchor);
  v53 = OUTLINED_FUNCTION_4_5((uint64_t)v52, sel_constraintEqualToAnchor_);
  OUTLINED_FUNCTION_8_5();

  *(_QWORD *)(v40 + 40) = &selRef_associatedAppBundleIdentifier;
  OUTLINED_FUNCTION_1_133();
  *(_QWORD *)&v8[OBJC_IVAR____TtC15ConversationKit33ParticipantViewLabelContainerView_leadingAlignedConstraints] = v90;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v54 = (void *)objc_opt_self();
  specialized Array.append<A>(contentsOf:)();
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
  isa = OUTLINED_FUNCTION_9_94().super.isa;
  OUTLINED_FUNCTION_27();
  objc_msgSend(v54, sel_activateConstraints_, isa);

  if (one-time initialization token for shared != -1)
    swift_once();
  if ((OUTLINED_FUNCTION_40_6() & 1) != 0)
  {
    v56 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for GradientView()), sel_init);
    v57 = OUTLINED_FUNCTION_13_13();
    *(_OWORD *)(v57 + 16) = v89;
    if (one-time initialization token for background != -1)
      swift_once();
    v58 = (void *)static Colors.ParticipantViews.background;
    *(_QWORD *)(v57 + 32) = objc_msgSend((id)static Colors.ParticipantViews.background, sel_colorWithAlphaComponent_, 0.0);
    *(_QWORD *)(v57 + 40) = v58;
    OUTLINED_FUNCTION_1_133();
    v59 = v58;
    GradientView.colors.setter(v82);
    v60 = (void *)GradientView.gradientLayer.getter();
    objc_msgSend(v60, sel_setStartPoint_, 0.0, 0.0);

    v61 = (void *)GradientView.gradientLayer.getter();
    objc_msgSend(v61, sel_setEndPoint_, 1.0, 0.0);

    objc_msgSend(v56, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v8, sel_addSubview_, v56);
    v62 = swift_allocObject();
    *(_OWORD *)(v62 + 16) = xmmword_1BD644140;
    v63 = OUTLINED_FUNCTION_39(v62, sel_topAnchor);
    v64 = OUTLINED_FUNCTION_123((uint64_t)v63, sel_topAnchor);
    v65 = objc_msgSend(v63, (SEL)&selRef_attemptToPlaySoundType_forCall_ + 6, v64);
    OUTLINED_FUNCTION_12_100();

    *(_QWORD *)(v62 + 32) = &selRef_associatedAppBundleIdentifier;
    v67 = OUTLINED_FUNCTION_39(v66, sel_bottomAnchor);
    v68 = OUTLINED_FUNCTION_123((uint64_t)v67, sel_bottomAnchor);
    v69 = OUTLINED_FUNCTION_4_125((uint64_t)v68);
    OUTLINED_FUNCTION_12_100();

    *(_QWORD *)(v62 + 40) = &selRef_associatedAppBundleIdentifier;
    v71 = OUTLINED_FUNCTION_39(v70, sel_trailingAnchor);
    v72 = OUTLINED_FUNCTION_123((uint64_t)v71, sel_trailingAnchor);
    v73 = OUTLINED_FUNCTION_4_125((uint64_t)v72);
    OUTLINED_FUNCTION_12_100();

    *(_QWORD *)(v62 + 48) = &selRef_associatedAppBundleIdentifier;
    v75 = OUTLINED_FUNCTION_39(v74, sel_widthAnchor);
    v76 = objc_msgSend(v75, sel_constraintEqualToConstant_, 32.0);

    *(_QWORD *)(v62 + 56) = v76;
    OUTLINED_FUNCTION_1_133();
    v77 = OUTLINED_FUNCTION_9_94().super.isa;
    OUTLINED_FUNCTION_27();
    objc_msgSend(v54, sel_activateConstraints_, v77);

  }
  return v8;
}

id ParticipantViewLabelContainerView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void ParticipantViewLabelContainerView.init(coder:)()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OBJC_IVAR____TtC15ConversationKit33ParticipantViewLabelContainerView_label;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  v2 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit33ParticipantViewLabelContainerView_centerAlignedConstraints] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit33ParticipantViewLabelContainerView_leadingAlignedConstraints] = v2;
  v0[OBJC_IVAR____TtC15ConversationKit33ParticipantViewLabelContainerView_isCentered] = 1;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t static ParticipantViewLabelContainerView.layerClass.getter()
{
  if (one-time initialization token for shared != -1)
    swift_once();
  if ((OUTLINED_FUNCTION_40_6() & 1) != 0)
    return _sSo8NSObjectCMaTm_0(0, &lazy cache variable for type metadata for CALayer);
  else
    return type metadata accessor for ParticipantViewLabelContainerViewLayer();
}

id ParticipantViewLabelContainerViewLayer.init()()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  BOOL v13;
  double v14;
  double v15;
  objc_super v17;

  v17.receiver = v0;
  v17.super_class = (Class)swift_getObjectType();
  v1 = objc_msgSendSuper2(&v17, sel_init);
  v2 = objc_allocWithZone(MEMORY[0x1E0CD2790]);
  v3 = v1;
  v4 = objc_msgSend(v2, sel_init);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Any>);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1BD645380;
  v6 = (void *)objc_opt_self();
  v7 = objc_msgSend(v6, sel_whiteColor);
  v8 = objc_msgSend(v7, sel_CGColor);

  type metadata accessor for CGColorRef(0);
  v10 = v9;
  *(_QWORD *)(v5 + 56) = v9;
  *(_QWORD *)(v5 + 32) = v8;
  v11 = objc_msgSend(v6, sel_clearColor);
  v12 = objc_msgSend(v11, sel_CGColor);

  *(_QWORD *)(v5 + 88) = v10;
  *(_QWORD *)(v5 + 64) = v12;
  outlined bridged method (mbnn) of @objc CAGradientLayer.colors.setter(v5, v4);
  type metadata accessor for AppUtilities();
  v13 = static AppUtilities.isRTL.getter();
  if (v13)
    v14 = 1.0;
  else
    v14 = 0.0;
  if (v13)
    v15 = 0.0;
  else
    v15 = 1.0;
  objc_msgSend(v4, sel_setStartPoint_, v14);
  objc_msgSend(v4, sel_setEndPoint_, v15, 0.0);
  objc_msgSend(v3, sel_setMask_, v4);

  return v3;
}

uint64_t ParticipantViewLabelContainerViewLayer.init(layer:)(uint64_t a1)
{
  void *v1;
  objc_class *ObjectType;
  void *v4;
  id v5;
  uint64_t result;
  objc_super v7;
  void *v8;
  _BYTE v9[32];

  ObjectType = (objc_class *)swift_getObjectType();
  outlined init with copy of Any(a1, (uint64_t)v9);
  if (swift_dynamicCast())
  {
    v4 = v8;
    v7.receiver = v1;
    v7.super_class = ObjectType;
    v5 = objc_msgSendSuper2(&v7, sel_initWithLayer_, v8);

    __swift_destroy_boxed_opaque_existential_1(a1);
    return (uint64_t)v5;
  }
  else
  {
    result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

void ParticipantViewLabelContainerViewLayer.init(coder:)()
{
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_1BD41AA58(uint64_t a1)
{
  void *v1;
  id v3;

  v3 = v1;
  return a1;
}

void ParticipantViewLabelContainerViewLayer.layoutSublayers()()
{
  void *v0;
  id v1;
  void *v2;
  double v3;
  id v4;
  id v5;
  objc_super v6;

  v6.receiver = v0;
  v6.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v6, sel_layoutSublayers);
  v1 = objc_msgSend(v0, sel_mask);
  if (v1)
  {
    v2 = v1;
    objc_opt_self();
    if (swift_dynamicCastObjCClass())
    {
      objc_msgSend(v0, sel_bounds);
      if (v3 > 0.0)
      {
        v4 = v2;
        v5 = v0;
        specialized CALayer.coordinateAnimation(_:animations:)();
      }
    }

  }
}

id closure #1 in ParticipantViewLabelContainerViewLayer.layoutSublayers()(void *a1)
{
  double v2;
  double v3;
  double v4;
  BOOL v5;
  double v6;

  OUTLINED_FUNCTION_10_14();
  v2 = 0.0;
  objc_msgSend(a1, sel_setFrame_, 0.0, 0.0);
  OUTLINED_FUNCTION_10_14();
  v4 = fmin(32.0 / v3, 1.0);
  type metadata accessor for AppUtilities();
  v5 = static AppUtilities.isRTL.getter();
  v6 = 1.0 - v4;
  if (v5)
    v6 = v4;
  else
    v2 = 1.0;
  objc_msgSend(a1, sel_setStartPoint_, v6, 0.0);
  return objc_msgSend(a1, sel_setEndPoint_, v2, 0.0);
}

uint64_t type metadata accessor for ParticipantViewLabelContainerViewLayer()
{
  return objc_opt_self();
}

void sub_1BD41AC3C(char *a1)
{
  ParticipantViewLabelContainerView.isCentered.setter(*a1);
}

uint64_t type metadata accessor for ParticipantViewLabelContainerView()
{
  return objc_opt_self();
}

void outlined bridged method (mbnn) of @objc CAGradientLayer.colors.setter(uint64_t a1, void *a2)
{
  Class isa;

  isa = Array._bridgeToObjectiveC()().super.isa;
  OUTLINED_FUNCTION_27();
  objc_msgSend(a2, sel_setColors_, isa);

}

uint64_t static ViewControllerLayout.effectsConstraintManagers(with:layoutIdiom:controlsView:localParticipantView:effectsView:effectsBrowserView:)(void *a1, char *a2, void *a3, void *a4, void *a5, void *a6)
{
  id v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  id v27;
  Class isa;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  id v37;
  uint64_t v38;
  char v41;
  char v44;
  uint64_t v45;

  v41 = *a2;
  v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC39A0]), sel_init);
  objc_msgSend(a1, sel_addLayoutGuide_, v8);
  v9 = (void *)objc_opt_self();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v10 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v10 + 16) = xmmword_1BD644140;
  v11 = OUTLINED_FUNCTION_6_7(v10, sel_topAnchor);
  v12 = objc_msgSend(a1, sel_safeAreaLayoutGuide);
  v13 = objc_msgSend(v12, sel_topAnchor);

  v14 = objc_msgSend(v11, sel_constraintEqualToAnchor_, v13);
  OUTLINED_FUNCTION_21_1();

  *(_QWORD *)(v10 + 32) = v12;
  v16 = OUTLINED_FUNCTION_6_7(v15, sel_bottomAnchor);
  v17 = objc_msgSend(OUTLINED_FUNCTION_0_138(), sel_bottomAnchor);
  OUTLINED_FUNCTION_21_1();
  v18 = OUTLINED_FUNCTION_17_47();

  *(_QWORD *)(v10 + 40) = v18;
  v20 = OUTLINED_FUNCTION_6_7(v19, sel_leadingAnchor);
  v21 = objc_msgSend(OUTLINED_FUNCTION_0_138(), sel_leadingAnchor);
  OUTLINED_FUNCTION_21_1();
  v22 = OUTLINED_FUNCTION_17_47();

  *(_QWORD *)(v10 + 48) = v22;
  v24 = OUTLINED_FUNCTION_6_7(v23, sel_trailingAnchor);
  v25 = OUTLINED_FUNCTION_0_138();
  v26 = objc_msgSend(v25, sel_trailingAnchor);

  v27 = objc_msgSend(v13, sel_constraintEqualToAnchor_, v26);
  *(_QWORD *)(v10 + 56) = v27;
  v45 = v10;
  specialized Array._endMutation()();
  type metadata accessor for NSLayoutConstraint();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v9, sel_activateConstraints_, isa);

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ViewConstraintManager>);
  v29 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v29 + 16) = xmmword_1BD645380;
  v30 = type metadata accessor for EffectsViewConstraintManager();
  OUTLINED_FUNCTION_15();
  v31 = a4;
  v32 = a5;
  v33 = v8;
  v34 = EffectsViewConstraintManager.init(containingGuide:localParticipantView:effectsView:)(v33, a4, v32);
  *(_QWORD *)(v29 + 56) = v30;
  *(_QWORD *)(v29 + 64) = &protocol witness table for EffectsViewConstraintManager;
  *(_QWORD *)(v29 + 32) = v34;
  v44 = v41;
  v35 = type metadata accessor for EffectsBrowserViewConstraintManager();
  OUTLINED_FUNCTION_15();
  v36 = v33;
  v37 = v31;
  v38 = EffectsBrowserViewConstraintManager.init(layoutIdiom:containingGuide:effectsBrowserView:controlsView:localParticipantView:)(&v44, (uint64_t)v36, a6, a3, a4);
  *(_QWORD *)(v29 + 96) = v35;
  *(_QWORD *)(v29 + 104) = &protocol witness table for EffectsBrowserViewConstraintManager;
  *(_QWORD *)(v29 + 72) = v38;

  return v29;
}

uint64_t static ViewControllerLayout.constraints(with:layoutState:size:deviceOrientation:)(uint64_t a1, char *a2, uint64_t a3, double a4, double a5)
{
  uint64_t v6;
  char v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v22;
  char v23;
  char v24;
  char v25;
  uint64_t v26;
  char v27;
  _BYTE v29[8];
  uint64_t v30;
  char v31;
  char v32;
  char v33;
  char v34;
  char v35;
  char v36;
  char v37;
  _QWORD v38[3];
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  if (a1)
  {
    v6 = *(_QWORD *)(a1 + 16);
    if (v6)
    {
      v27 = *a2;
      v26 = *((_QWORD *)a2 + 1);
      v24 = a2[17];
      v25 = a2[16];
      v22 = a2[19];
      v23 = a2[18];
      v9 = a2[20];
      v10 = a2[21];
      v11 = a2[22];
      v41 = MEMORY[0x1E0DEE9D8];
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      v12 = a1 + 32;
      v13 = v41;
      do
      {
        outlined init with copy of IDSLookupManager(v12, (uint64_t)v38);
        v14 = v39;
        v15 = v40;
        __swift_project_boxed_opaque_existential_1(v38, v39);
        v29[0] = v27;
        v30 = v26;
        v31 = v25;
        v32 = v24;
        v33 = v23;
        v34 = v22;
        v35 = v9;
        v36 = v10;
        v37 = v11;
        v16 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t, double, double))(v15 + 8))(v29, a3, v14, v15, a4, a5);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          v13 = v41;
        }
        v17 = *(_QWORD *)(v13 + 16);
        v18 = v17 + 1;
        if (v17 >= *(_QWORD *)(v13 + 24) >> 1)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          v13 = v41;
        }
        *(_QWORD *)(v13 + 16) = v18;
        *(_QWORD *)(v13 + 8 * v17 + 32) = v16;
        v12 += 40;
        --v6;
      }
      while (v6);
    }
    else
    {
      v18 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v19 = MEMORY[0x1E0DEE9D8];
      if (!v18)
      {
LABEL_15:
        swift_bridgeObjectRelease();
        return v19;
      }
    }
    swift_bridgeObjectRetain();
    v20 = 0;
    v19 = MEMORY[0x1E0DEE9D8];
    do
    {
      ++v20;
      v38[0] = v19;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      specialized Array.append<A>(contentsOf:)();
      swift_bridgeObjectRelease();
      v19 = v38[0];
    }
    while (v18 != v20);
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  return MEMORY[0x1E0DEE9D8];
}

double static ViewControllerLayout.participantLabelsViewFrame(isDisplayedInBanner:isDisplayedInAmbient:containingView:participantLabelsView:)(uint64_t a1, char a2, id a3, void *a4)
{
  char v6;
  double v7;
  double v8;
  id v9;
  id v10;
  double v11;
  id v12;
  id v13;
  double v14;
  double v15;
  double v16;
  id v17;
  uint64_t v18;

  v6 = a1;
  if ((a1 & 1) != 0)
  {
    OUTLINED_FUNCTION_123(a1, sel_bounds);
    v8 = v7;
  }
  else
  {
    if ((a2 & 1) != 0)
      v9 = objc_msgSend(a3, sel_safeAreaLayoutGuide, a3);
    else
      v9 = objc_msgSend(a3, sel_readableContentGuide, a3);
    v10 = v9;
    objc_msgSend(v10, sel_layoutFrame);
    v8 = v11;

  }
  v12 = objc_msgSend(a4, sel_systemLayoutSizeFittingSize_, v8, 1.79769313e308);
  if ((a2 & 1) != 0)
  {
    v13 = OUTLINED_FUNCTION_123((uint64_t)v12, sel_safeAreaInsets);
    v15 = v14;
    if ((v6 & 1) == 0)
      return v15;
  }
  else
  {
    v13 = OUTLINED_FUNCTION_123((uint64_t)v12, sel_bounds);
    v15 = floor((v16 - v8) * 0.5);
    if ((v6 & 1) == 0)
    {
      v17 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
      objc_msgSend(v17, sel_bounds);

      OUTLINED_FUNCTION_123(v18, sel_safeAreaInsets);
      return v15;
    }
  }
  OUTLINED_FUNCTION_123((uint64_t)v13, sel_bounds);
  return v15;
}

uint64_t protocol witness for static ViewControllerLayout.effectsConstraintManagers(with:layoutIdiom:controlsView:localParticipantView:effectsView:effectsBrowserView:) in conformance LargeMultiwayControllerLayout(uint64_t a1, unsigned __int8 *a2)
{
  return specialized static ViewControllerLayout.effectsConstraintManagers(with:layoutIdiom:controlsView:localParticipantView:effectsView:effectsBrowserView:)(a1, *a2);
}

uint64_t protocol witness for static ViewControllerLayout.constraints(with:layoutState:size:deviceOrientation:) in conformance LargeMultiwayControllerLayout(uint64_t a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return protocol witness for static ViewControllerLayout.constraints(with:layoutState:size:deviceOrientation:) in conformance LargeMultiwayControllerLayout(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, _QWORD, _QWORD, unint64_t, uint64_t))specialized static ViewControllerLayout.constraints(with:layoutState:size:deviceOrientation:));
}

uint64_t protocol witness for ViewControllerLayout.localParticipantPreviewRegularSize.getter in conformance LargeMultiwayControllerLayout()
{
  return specialized ControlMenuDataSource.attachmentPoint(for:configuration:)();
}

uint64_t ViewControllerLayout.localParticipantPreviewRegularSize.getter()
{
  return 0;
}

uint64_t protocol witness for static ViewControllerLayout.constraints(with:layoutState:size:deviceOrientation:) in conformance LargeMultiwayControllerLayout(uint64_t a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, _QWORD, _QWORD, unint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = 0x10000;
  if (!a2[18])
    v6 = 0;
  v7 = *((unsigned __int16 *)a2 + 8) | (unint64_t)v6 | ((unint64_t)a2[19] << 24);
  v8 = 0x100000000;
  if (!a2[20])
    v8 = 0;
  v9 = 0x10000000000;
  if (!a2[21])
    v9 = 0;
  v10 = 0x1000000000000;
  if (!a2[22])
    v10 = 0;
  return a6(a1, *a2, *((_QWORD *)a2 + 1), v7 | v8 | v9 | v10, a3);
}

uint64_t ViewControllerLayout.bannerViewConstraintManager.getter()
{
  return 0;
}

double ViewControllerLayout.localParticipantViewRegularWidth.getter()
{
  return 0.0;
}

uint64_t dispatch thunk of ViewControllerLayout.update(for:with:deviceOrientation:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of ViewControllerLayout.update(localParticipantAspectRatio:layoutState:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v4;
  uint64_t (*v5)(_OWORD *);
  __int128 v6;
  _OWORD v8[2];
  char v9;

  v4 = *(_BYTE *)(a1 + 32);
  v5 = *(uint64_t (**)(_OWORD *))(a4 + 16);
  v6 = *(_OWORD *)(a1 + 16);
  v8[0] = *(_OWORD *)a1;
  v8[1] = v6;
  v9 = v4;
  return v5(v8);
}

uint64_t dispatch thunk of ViewControllerLayout.update(remoteParticipantAspectRatio:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of ViewControllerLayout.update(isDisplayedInBanner:containingView:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of ViewControllerLayout.update(localParticipantCorner:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of ViewControllerLayout.addEffectsConstraints(with:controlsView:localParticipantView:effectsView:effectsBrowserView:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 48))();
}

uint64_t dispatch thunk of ViewControllerLayout.updateLayoutWith(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of ViewControllerLayout.updateShutterButton(with:)(char a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(_QWORD))(a3 + 64))(a1 & 1);
}

uint64_t dispatch thunk of ViewControllerLayout.floatingControlsStateDidChange(from:to:)(char a1, char a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(a4 + 72))(a1 & 1, a2 & 1);
}

uint64_t dispatch thunk of ViewControllerLayout.updateLocalPreviewConstraintWhenExpanded()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of ViewControllerLayout.update(isLocalReactionActive:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

uint64_t dispatch thunk of ViewControllerLayout.updateCaptionsBubbleViewConstraints(forPosition:withSnapping:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

uint64_t dispatch thunk of ViewControllerLayout.resetCaptionsBubbleViewConstraints()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t dispatch thunk of ViewControllerLayout.removeEffectsConstraints()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t dispatch thunk of static ViewControllerLayout.effectsConstraintManagers(with:layoutIdiom:controlsView:localParticipantView:effectsView:effectsBrowserView:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 120))();
}

uint64_t dispatch thunk of static ViewControllerLayout.constraints(with:layoutState:size:deviceOrientation:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 128))();
}

uint64_t dispatch thunk of static ViewControllerLayout.participantLabelsViewFrame(isDisplayedInBanner:isDisplayedInAmbient:containingView:participantLabelsView:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 136))();
}

uint64_t dispatch thunk of ViewControllerLayout.handlesLocalParticipantConstraints.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 144))();
}

uint64_t dispatch thunk of ViewControllerLayout.localParticipantPreviewRegularSize.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 152))();
}

uint64_t dispatch thunk of ViewControllerLayout.bannerViewConstraintManager.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 160))();
}

uint64_t dispatch thunk of ViewControllerLayout.localParticipantViewRegularWidth.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 168))();
}

uint64_t LocalVideoRecordButtonViewModel.__allocating_init()()
{
  uint64_t result;

  OUTLINED_FUNCTION_58();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0;
  return result;
}

uint64_t LocalVideoRecordButtonViewModel.controlType.getter()
{
  return LocalVideoRecordButtonViewModel.config.getter();
}

uint64_t LocalVideoRecordButtonViewModel.config.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  Swift::String v20;
  Swift::String_optional v21;
  Swift::String v22;
  Swift::String v23;
  id v24;
  Swift::String v25;
  Swift::String_optional v26;
  Swift::String v27;
  Swift::String v28;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  _OWORD v37[5];
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  Swift::String v51;
  Swift::String v52;

  v1 = v0;
  v2 = type metadata accessor for Font.Leading();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Image.Scale();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(v1 + 16))
  {
    v10 = *(_QWORD *)(v1 + 16);
  }
  else
  {
    v11 = static Color.white.getter();
    if (one-time initialization token for callControlBackgroundOff != -1)
      swift_once();
    v12 = static SystemSymbol<A>.callControlBackgroundOff;
    (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0CDF7D8], v6);
    swift_retain();
    v13 = static Font.body.getter();
    static Font.Weight.regular.getter();
    static SystemSymbol<A>.catalystCallControl(name:color:backgroundColor:scale:font:weight:)(0x662E656C63726963, 0xEB000000006C6C69, v11, v12, (uint64_t)v9, v13, v37, v14);
    v36 = v37[3];
    v35 = v37[4];
    v34 = v38;
    v33 = v39;
    swift_release();
    swift_release();
    swift_release();
    v15 = *(void (**)(char *, uint64_t))(v7 + 8);
    v32 = v37[0];
    v31 = v37[1];
    v30 = v37[2];
    v15(v9, v6);
    v16 = static Color.white.getter();
    static Font.subheadline.getter();
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0CDD6D8], v2);
    v17 = Font.leading(_:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    v40 = xmmword_1BD6456D0;
    v41 = 0x401C000000000000;
    v42 = v16;
    v44 = v32;
    v45 = v31;
    v46 = v30;
    v47 = v36;
    v48 = v35;
    v43 = v17;
    v49 = v34;
    v50 = v33;
    v18 = (void *)objc_opt_self();
    v19 = objc_msgSend(v18, sel_conversationKit);
    v51._object = (void *)0xE000000000000000;
    v20._countAndFlagsBits = 0xD000000000000016;
    v20._object = (void *)0x80000001BD68BCA0;
    v21.value._countAndFlagsBits = 0x61737265766E6F43;
    v21.value._object = (void *)0xEF74694B6E6F6974;
    v22._countAndFlagsBits = 0;
    v22._object = (void *)0xE000000000000000;
    v51._countAndFlagsBits = 0;
    v23 = NSLocalizedString(_:tableName:bundle:value:comment:)(v20, v21, (NSBundle)v19, v22, v51);

    v24 = objc_msgSend(v18, sel_conversationKit);
    v52._object = (void *)0xE000000000000000;
    v25._countAndFlagsBits = 0xD000000000000016;
    v25._object = (void *)0x80000001BD68BCA0;
    v26.value._countAndFlagsBits = 0x61737265766E6F43;
    v26.value._object = (void *)0xEF74694B6E6F6974;
    v27._countAndFlagsBits = 0;
    v27._object = (void *)0xE000000000000000;
    v52._countAndFlagsBits = 0;
    v28 = NSLocalizedString(_:tableName:bundle:value:comment:)(v25, v26, (NSBundle)v24, v27, v52);

    swift_allocObject();
    swift_weakInit();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IconButtonConfig<()>);
    swift_allocObject();
    v10 = specialized IconButtonConfig.init(buttonStyle:title:hasBadge:accessibilityLabel:accessibilityIdentifier:state:enabled:didTap:)((uint64_t)&v40, v23._countAndFlagsBits, (uint64_t)v23._object, 0, v28._countAndFlagsBits, (uint64_t)v28._object, 0xD000000000000016, 0x80000001BD672530, 1);
    *(_QWORD *)(v1 + 16) = v10;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v10;
}

uint64_t LocalVideoRecordButtonViewModel.enabled(for:)()
{
  if (one-time initialization token for shared != -1)
    swift_once();
  return (*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 568))() & 1;
}

uint64_t closure #1 in LocalVideoRecordButtonViewModel.config.getter()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
    return swift_release();
  return result;
}

uint64_t LocalVideoRecordButtonViewModel.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t LocalVideoRecordButtonViewModel.__deallocating_deinit()
{
  swift_release();
  OUTLINED_FUNCTION_58();
  return swift_deallocClassInstance();
}

uint64_t LocalVideoRecordButtonViewModel.init()()
{
  uint64_t v0;
  uint64_t result;

  result = v0;
  *(_QWORD *)(v0 + 16) = 0;
  return result;
}

uint64_t protocol witness for CallControlsInCallButtonViewModel.enabled(for:) in conformance LocalVideoRecordButtonViewModel()
{
  return LocalVideoRecordButtonViewModel.enabled(for:)() & 1;
}

uint64_t protocol witness for CallControlsButtonViewModel.controlType.getter in conformance LocalVideoRecordButtonViewModel()
{
  return LocalVideoRecordButtonViewModel.controlType.getter();
}

uint64_t type metadata accessor for LocalVideoRecordButtonViewModel()
{
  return objc_opt_self();
}

uint64_t method lookup function for LocalVideoRecordButtonViewModel()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of LocalVideoRecordButtonViewModel.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_1BD41BBC8()
{
  swift_weakDestroy();
  OUTLINED_FUNCTION_58();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in LocalVideoRecordButtonViewModel.config.getter()
{
  return closure #1 in LocalVideoRecordButtonViewModel.config.getter();
}

uint64_t MockCaptionsProvider.__allocating_init()()
{
  uint64_t result;

  result = OUTLINED_FUNCTION_15();
  *(_QWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 32) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_BYTE *)(result + 40) = 0;
  return result;
}

uint64_t MockCaptionsProvider.token.getter()
{
  return -1;
}

uint64_t MockCaptionsProvider.participantCaptionsProviderDelegate.getter()
{
  OUTLINED_FUNCTION_2_0();
  return swift_unknownObjectRetain();
}

uint64_t MockCaptionsProvider.participantCaptionsProviderDelegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_unknownObjectRelease();
}

uint64_t (*MockCaptionsProvider.participantCaptionsProviderDelegate.modify())()
{
  OUTLINED_FUNCTION_2_0();
  return CallRecordingPillViewController.cancellable.modify;
}

uint64_t MockCaptionsProvider.captionsTask.getter()
{
  OUTLINED_FUNCTION_2_0();
  return swift_retain();
}

void MockCaptionsProvider.captionsTask.setter(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v1 + 32) = a1;
  swift_release();
  OUTLINED_FUNCTION_32();
}

uint64_t (*MockCaptionsProvider.captionsTask.modify())()
{
  OUTLINED_FUNCTION_2_0();
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t MockCaptionsProvider.captionsEnabled.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_2_0();
  return *(unsigned __int8 *)(v0 + 40);
}

uint64_t key path getter for MockCaptionsProvider.captionsEnabled : MockCaptionsProvider@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 40);
  return result;
}

void MockCaptionsProvider.captionsEnabled.setter(char a1)
{
  uint64_t v1;
  char v3;

  OUTLINED_FUNCTION_2_0();
  v3 = *(_BYTE *)(v1 + 40);
  *(_BYTE *)(v1 + 40) = a1;
  MockCaptionsProvider.captionsEnabled.didset(v3);
  OUTLINED_FUNCTION_32();
}

uint64_t MockCaptionsProvider.captionsEnabled.didset(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v12[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1E0C80A78](v3);
  v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  result = swift_beginAccess();
  if (*(_BYTE *)(v1 + 40) == 1)
  {
    if ((a1 & 1) != 0)
      return result;
    swift_beginAccess();
    if (*(_QWORD *)(v1 + 32))
    {
      v7 = swift_retain();
      MEMORY[0x1C3B73268](v7, MEMORY[0x1E0DEE9C0] + 8, MEMORY[0x1E0DEDCE8], MEMORY[0x1E0DEDD18]);
      swift_release();
    }
    static TaskPriority.userInitiated.getter();
    v8 = type metadata accessor for TaskPriority();
    __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, v8);
    v9 = (_QWORD *)swift_allocObject();
    v9[2] = 0;
    v9[3] = 0;
    v9[4] = v1;
    swift_retain();
    _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
    *(_QWORD *)(v1 + 32) = v10;
  }
  else
  {
    result = swift_beginAccess();
    if (!*(_QWORD *)(v1 + 32))
      return result;
    v11 = swift_retain();
    MEMORY[0x1C3B73268](v11, MEMORY[0x1E0DEE9C0] + 8, MEMORY[0x1E0DEDCE8], MEMORY[0x1E0DEDD18]);
  }
  return swift_release();
}

uint64_t closure #1 in MockCaptionsProvider.captionsEnabled.didset()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = partial apply for closure #1 in closure #1 in VideoMessageInboxController.markCallItemAsRead(_:completion:);
  return MockCaptionsProvider.start()();
}

uint64_t MockCaptionsProvider.start()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[22] = v0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  v1[23] = OUTLINED_FUNCTION_6_15();
  v1[24] = OUTLINED_FUNCTION_5_55();
  v2 = type metadata accessor for ContinuousClock.Instant();
  v1[25] = v2;
  v1[26] = *(_QWORD *)(v2 - 8);
  v1[27] = OUTLINED_FUNCTION_6_15();
  v1[28] = OUTLINED_FUNCTION_5_55();
  v1[29] = OUTLINED_FUNCTION_5_55();
  v3 = type metadata accessor for ContinuousClock();
  v1[30] = v3;
  v1[31] = *(_QWORD *)(v3 - 8);
  v1[32] = OUTLINED_FUNCTION_6_15();
  v1[33] = OUTLINED_FUNCTION_5_55();
  return swift_task_switch();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t result;
  uint64_t v5;
  void *rawValue;

  *(_QWORD *)(v0 + 168) = 0;
  if (one-time initialization token for phrases != -1)
    swift_once();
  for (*(_QWORD *)(v0 + 272) = 0; ; *(_QWORD *)(v0 + 272) = v2 + 1)
  {
    rawValue = phrases._rawValue;
    swift_bridgeObjectRetain();
    specialized MutableCollection<>.shuffle<A>(using:)();
    OUTLINED_FUNCTION_37_38((uint64_t)rawValue);
    if (v1)
      break;
    swift_release();
    OUTLINED_FUNCTION_36_5();
    if (v3)
    {
      OUTLINED_FUNCTION_0_139();
      OUTLINED_FUNCTION_29_0();
      OUTLINED_FUNCTION_12();
      OUTLINED_FUNCTION_81_0();
      OUTLINED_FUNCTION_625();
      OUTLINED_FUNCTION_633();
      OUTLINED_FUNCTION_575();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
  }
  result = OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v0 + 296) = 0;
  v5 = *(_QWORD *)(v0 + 280);
  if (*(_QWORD *)(v5 + 16))
  {
    OUTLINED_FUNCTION_8_99(v5);
    OUTLINED_FUNCTION_68_1();
    OUTLINED_FUNCTION_42_39();
    OUTLINED_FUNCTION_5_103();
  }
  __break(1u);
  return result;
}

{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 336) = v0;
  swift_task_dealloc();
  v3 = (void (*)(uint64_t, uint64_t))v2[40];
  if (v0)
  {
    v4 = v2[33];
    v5 = v2[30];
    v6 = v2[31];
    v7 = v2[29];
    v8 = v2[25];
    swift_bridgeObjectRelease();
    v3(v7, v8);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    swift_release();
  }
  else
  {
    v9 = v2[33];
    v10 = v2[30];
    v11 = v2[31];
    v3(v2[29], v2[25]);
    v12 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v2[43] = v12;
    v12(v9, v10);
  }
  return swift_task_switch();
}

{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  void (*v3)(uint64_t, uint64_t);
  void (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_58_3();
  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 384) = v0;
  swift_task_dealloc();
  if (v0)
  {
    v3 = (void (*)(uint64_t, uint64_t))v2[43];
    v4 = (void (*)(uint64_t, uint64_t))v2[40];
    v5 = v2[32];
    v6 = v2[30];
    v7 = v2[27];
    v8 = v2[25];
    swift_bridgeObjectRelease();
    v4(v7, v8);
    v3(v5, v6);
    OUTLINED_FUNCTION_27();
    swift_release();
    OUTLINED_FUNCTION_27();
  }
  else
  {
    v9 = (void (*)(uint64_t, uint64_t))v2[43];
    v10 = v2[32];
    v11 = v2[30];
    ((void (*)(_QWORD, _QWORD))v2[40])(v2[27], v2[25]);
    v9(v10, v11);
  }
  return swift_task_switch();
}

{
  uint64_t v0;

  OUTLINED_FUNCTION_0_139();
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_81_0();
  OUTLINED_FUNCTION_625();
  OUTLINED_FUNCTION_633();
  OUTLINED_FUNCTION_575();
  return OUTLINED_FUNCTION_11_7(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;

  OUTLINED_FUNCTION_0_139();
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_81_0();
  OUTLINED_FUNCTION_625();
  OUTLINED_FUNCTION_633();
  OUTLINED_FUNCTION_575();
  return OUTLINED_FUNCTION_11_7(*(uint64_t (**)(void))(v0 + 8));
}

void MockCaptionsProvider.start()()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  void *rawValue;

  OUTLINED_FUNCTION_58_3();
  *(_QWORD *)(v0 + 136) = *(_QWORD *)(v0 + 304);
  *(_QWORD *)(v0 + 152) = 0;
  v1 = *(_QWORD *)(v0 + 312);
  *(_QWORD *)(v0 + 160) = 0xE000000000000000;
  *(_QWORD *)(v0 + 144) = v1;
  v2 = lazy protocol witness table accessor for type String and conformance String();
  v3 = MEMORY[0x1C3B73B2C](32, 0xE100000000000000, 0x7FFFFFFFFFFFFFFFLL, 1, MEMORY[0x1E0DEA968], v2);
  *(_QWORD *)(v0 + 352) = v3;
  v4 = *(_QWORD *)(v3 + 16);
  *(_QWORD *)(v0 + 360) = v4;
  if (v4)
  {
    *(_QWORD *)(v0 + 368) = 0;
    OUTLINED_FUNCTION_50_36();
    v7 = *(_QWORD *)(v5 + 48);
    v6 = *(_QWORD *)(v5 + 56);
    *(_OWORD *)(v0 + 80) = *(_OWORD *)(v5 + 32);
    *(_QWORD *)(v0 + 96) = v7;
    *(_QWORD *)(v0 + 104) = v6;
    lazy protocol witness table accessor for type Substring and conformance Substring();
    OUTLINED_FUNCTION_48_43();
    ContinuousClock.init()();
    static ContinuousClock.Instant.now.getter();
    OUTLINED_FUNCTION_13_100();
  }
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(v0 + 304);
  v8 = *(_QWORD *)(v0 + 312);
  v11 = *(_QWORD *)(v0 + 176);
  v10 = *(_QWORD *)(v0 + 184);
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(v0 + 168);
  static TaskPriority.userInitiated.getter();
  v13 = type metadata accessor for TaskPriority();
  OUTLINED_FUNCTION_34_41(v10);
  OUTLINED_FUNCTION_26_22();
  swift_retain();
  v14 = static MainActor.shared.getter();
  v15 = OUTLINED_FUNCTION_15();
  v16 = MEMORY[0x1E0DF06E8];
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = v16;
  *(_QWORD *)(v15 + 32) = v12;
  *(_QWORD *)(v15 + 40) = v9;
  *(_QWORD *)(v15 + 48) = v8;
  *(_BYTE *)(v15 + 56) = 1;
  *(_QWORD *)(v15 + 64) = v11;
  v17 = OUTLINED_FUNCTION_46_7(v10);
  v18 = *(_QWORD *)(v0 + 184);
  if (v17 == 1)
  {
    outlined destroy of TaskPriority?(*(_QWORD *)(v0 + 184));
    if (v14)
    {
LABEL_5:
      OUTLINED_FUNCTION_15_6();
      OUTLINED_FUNCTION_38_53();
      v19 = dispatch thunk of Actor.unownedExecutor.getter();
      v21 = v20;
      OUTLINED_FUNCTION_10();
      goto LABEL_8;
    }
  }
  else
  {
    TaskPriority.rawValue.getter();
    OUTLINED_FUNCTION_52(v18, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8));
    if (*(_QWORD *)(v15 + 16))
      goto LABEL_5;
  }
  v19 = 0;
  v21 = 0;
LABEL_8:
  v22 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v22 + 16) = &closure #1 in sendUpdate #1 (_:complete:) in MockCaptionsProvider.start()partial apply;
  *(_QWORD *)(v22 + 24) = v15;
  if (v21 | v19)
  {
    *(_QWORD *)(v0 + 16) = 0;
    *(_QWORD *)(v0 + 24) = 0;
    *(_QWORD *)(v0 + 32) = v19;
    *(_QWORD *)(v0 + 40) = v21;
  }
  swift_task_create();
  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_11_0();
  if (__OFADD__(*(_QWORD *)(v0 + 168), 1))
  {
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_44_46();
    if (v24)
    {
      swift_release();
      OUTLINED_FUNCTION_36_5();
      if (v24)
      {
LABEL_17:
        OUTLINED_FUNCTION_0_139();
        OUTLINED_FUNCTION_29_0();
        OUTLINED_FUNCTION_12();
        OUTLINED_FUNCTION_81_0();
        OUTLINED_FUNCTION_625();
        OUTLINED_FUNCTION_633();
        OUTLINED_FUNCTION_575();
        OUTLINED_FUNCTION_21_2(*(uint64_t (**)(void))(v0 + 8));
        return;
      }
      while (1)
      {
        *(_QWORD *)(v0 + 272) = v25 + 1;
        rawValue = phrases._rawValue;
        swift_bridgeObjectRetain();
        specialized MutableCollection<>.shuffle<A>(using:)();
        OUTLINED_FUNCTION_37_38((uint64_t)rawValue);
        if (v26)
          break;
        swift_release();
        OUTLINED_FUNCTION_36_5();
        if (v24)
          goto LABEL_17;
      }
      OUTLINED_FUNCTION_2_0();
      v23 = 0;
    }
    OUTLINED_FUNCTION_40_48(v23);
    if (!v29)
    {
      OUTLINED_FUNCTION_8_99(v28 + 16 * v27);
      OUTLINED_FUNCTION_68_1();
      OUTLINED_FUNCTION_42_39();
      OUTLINED_FUNCTION_5_103();
    }
  }
  __break(1u);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  void *rawValue;

  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 192);
  v4 = *(_QWORD *)(v0 + 176);
  v5 = *(_QWORD *)(v0 + 160);
  OUTLINED_FUNCTION_26_22();
  static TaskPriority.userInitiated.getter();
  v6 = type metadata accessor for TaskPriority();
  OUTLINED_FUNCTION_34_41(v3);
  OUTLINED_FUNCTION_26_22();
  swift_retain();
  v7 = static MainActor.shared.getter();
  v8 = OUTLINED_FUNCTION_15();
  v9 = MEMORY[0x1E0DF06E8];
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v9;
  *(_QWORD *)(v8 + 32) = v2;
  *(_QWORD *)(v8 + 40) = v1;
  *(_QWORD *)(v8 + 48) = v5;
  *(_BYTE *)(v8 + 56) = 0;
  *(_QWORD *)(v8 + 64) = v4;
  v10 = OUTLINED_FUNCTION_46_7(v3);
  v11 = *(_QWORD *)(v0 + 192);
  if (v10 == 1)
  {
    outlined destroy of TaskPriority?(*(_QWORD *)(v0 + 192));
    if (v7)
    {
LABEL_3:
      OUTLINED_FUNCTION_15_6();
      swift_unknownObjectRetain();
      v12 = dispatch thunk of Actor.unownedExecutor.getter();
      v14 = v13;
      OUTLINED_FUNCTION_10();
      goto LABEL_6;
    }
  }
  else
  {
    TaskPriority.rawValue.getter();
    OUTLINED_FUNCTION_52(v11, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8));
    if (*(_QWORD *)(v8 + 16))
      goto LABEL_3;
  }
  v12 = 0;
  v14 = 0;
LABEL_6:
  v15 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v15 + 16) = &async function pointer to partial apply for closure #1 in sendUpdate #1 (_:complete:) in MockCaptionsProvider.start();
  *(_QWORD *)(v15 + 24) = v8;
  if (v14 | v12)
  {
    *(_QWORD *)(v0 + 48) = 0;
    *(_QWORD *)(v0 + 56) = 0;
    *(_QWORD *)(v0 + 64) = v12;
    *(_QWORD *)(v0 + 72) = v14;
  }
  v16 = *(_QWORD *)(v0 + 360);
  v17 = *(_QWORD *)(v0 + 368) + 1;
  swift_task_create();
  swift_bridgeObjectRelease();
  swift_release();
  if (v17 != v16)
  {
    ++*(_QWORD *)(v0 + 368);
    OUTLINED_FUNCTION_50_36();
    v29 = v28 + 32 * v27;
    v31 = *(_QWORD *)(v29 + 48);
    v30 = *(_QWORD *)(v29 + 56);
    *(_OWORD *)(v0 + 80) = *(_OWORD *)(v29 + 32);
    *(_QWORD *)(v0 + 96) = v31;
    *(_QWORD *)(v0 + 104) = v30;
    lazy protocol witness table accessor for type Substring and conformance Substring();
    OUTLINED_FUNCTION_48_43();
    ContinuousClock.init()();
    static ContinuousClock.Instant.now.getter();
    OUTLINED_FUNCTION_13_100();
  }
  swift_bridgeObjectRelease();
  v19 = *(_QWORD *)(v0 + 304);
  v18 = *(_QWORD *)(v0 + 312);
  v21 = *(_QWORD *)(v0 + 176);
  v20 = *(_QWORD *)(v0 + 184);
  swift_bridgeObjectRelease();
  v22 = *(_QWORD *)(v0 + 168);
  static TaskPriority.userInitiated.getter();
  __swift_storeEnumTagSinglePayload(v20, 0, 1, v6);
  swift_bridgeObjectRetain();
  swift_retain();
  v23 = static MainActor.shared.getter();
  v24 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v24 + 16) = v23;
  *(_QWORD *)(v24 + 24) = MEMORY[0x1E0DF06E8];
  *(_QWORD *)(v24 + 32) = v22;
  *(_QWORD *)(v24 + 40) = v19;
  *(_QWORD *)(v24 + 48) = v18;
  *(_BYTE *)(v24 + 56) = 1;
  *(_QWORD *)(v24 + 64) = v21;
  v25 = OUTLINED_FUNCTION_46_7(v20);
  v26 = *(_QWORD *)(v0 + 184);
  if (v25 == 1)
  {
    outlined destroy of TaskPriority?(*(_QWORD *)(v0 + 184));
  }
  else
  {
    TaskPriority.rawValue.getter();
    OUTLINED_FUNCTION_52(v26, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8));
    v23 = *(_QWORD *)(v24 + 16);
  }
  if (v23)
  {
    OUTLINED_FUNCTION_15_6();
    OUTLINED_FUNCTION_38_53();
    v32 = dispatch thunk of Actor.unownedExecutor.getter();
    v34 = v33;
    OUTLINED_FUNCTION_10();
  }
  else
  {
    v32 = 0;
    v34 = 0;
  }
  v35 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v35 + 16) = &closure #1 in sendUpdate #1 (_:complete:) in MockCaptionsProvider.start()partial apply;
  *(_QWORD *)(v35 + 24) = v24;
  if (v34 | v32)
  {
    *(_QWORD *)(v0 + 16) = 0;
    *(_QWORD *)(v0 + 24) = 0;
    *(_QWORD *)(v0 + 32) = v32;
    *(_QWORD *)(v0 + 40) = v34;
  }
  swift_task_create();
  OUTLINED_FUNCTION_27();
  swift_release();
  if (__OFADD__(*(_QWORD *)(v0 + 168), 1))
  {
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_44_46();
    if (v37)
    {
      swift_release();
      OUTLINED_FUNCTION_36_5();
      if (v37)
      {
LABEL_25:
        OUTLINED_FUNCTION_0_139();
        OUTLINED_FUNCTION_29_0();
        OUTLINED_FUNCTION_12();
        OUTLINED_FUNCTION_81_0();
        OUTLINED_FUNCTION_625();
        OUTLINED_FUNCTION_633();
        OUTLINED_FUNCTION_575();
        (*(void (**)(void))(v0 + 8))();
        return;
      }
      while (1)
      {
        *(_QWORD *)(v0 + 272) = v38 + 1;
        rawValue = phrases._rawValue;
        swift_bridgeObjectRetain();
        specialized MutableCollection<>.shuffle<A>(using:)();
        OUTLINED_FUNCTION_37_38((uint64_t)rawValue);
        if (v39)
          break;
        swift_release();
        OUTLINED_FUNCTION_36_5();
        if (v37)
          goto LABEL_25;
      }
      OUTLINED_FUNCTION_2_0();
      v36 = 0;
    }
    OUTLINED_FUNCTION_40_48(v36);
    if (!v42)
    {
      OUTLINED_FUNCTION_8_99(v41 + 16 * v40);
      OUTLINED_FUNCTION_68_1();
      OUTLINED_FUNCTION_42_39();
      OUTLINED_FUNCTION_5_103();
    }
  }
  __break(1u);
}

void (*MockCaptionsProvider.captionsEnabled.modify(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[3] = v1;
  OUTLINED_FUNCTION_2_0();
  *((_BYTE *)v3 + 32) = *(_BYTE *)(v1 + 40);
  return MockCaptionsProvider.captionsEnabled.modify;
}

void MockCaptionsProvider.captionsEnabled.modify(uint64_t a1)
{
  void *v1;

  OUTLINED_FUNCTION_30_61(a1);
  OUTLINED_FUNCTION_11(v1);
}

uint64_t closure #1 in sendUpdate #1 (_:complete:) in MockCaptionsProvider.start()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;

  *(_BYTE *)(v8 + 104) = a7;
  *(_QWORD *)(v8 + 56) = a6;
  *(_QWORD *)(v8 + 64) = a8;
  *(_QWORD *)(v8 + 40) = a4;
  *(_QWORD *)(v8 + 48) = a5;
  v9 = type metadata accessor for Participant.Caption(0);
  *(_QWORD *)(v8 + 72) = v9;
  *(_QWORD *)(v8 + 80) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v8 + 88) = swift_task_alloc();
  type metadata accessor for MainActor();
  *(_QWORD *)(v8 + 96) = static MainActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  return swift_task_switch();
}

uint64_t closure #1 in sendUpdate #1 (_:complete:) in MockCaptionsProvider.start()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  int *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  void (*v17)(uint64_t, _UNKNOWN **, uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t);

  OUTLINED_FUNCTION_58_3();
  v1 = *(_QWORD **)(v0 + 88);
  v3 = *(int **)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 80);
  v4 = *(_BYTE *)(v0 + 104);
  v6 = *(_QWORD *)(v0 + 56);
  v5 = *(_QWORD *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 40);
  v7 = *(_QWORD *)(v0 + 48);
  swift_release();
  Date.init()();
  Date.init()();
  *v1 = v8;
  v9 = (_QWORD *)((char *)v1 + v3[7]);
  *v9 = v7;
  v9[1] = v6;
  *((_BYTE *)v1 + v3[8]) = v4;
  *(_QWORD *)((char *)v1 + v3[9]) = MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Participant.Caption>);
  v10 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1BD6441D0;
  outlined init with copy of Participant.Caption((uint64_t)v1, v11 + v10);
  OUTLINED_FUNCTION_2_0();
  v12 = *(_QWORD *)(v5 + 16);
  v13 = *(_QWORD *)(v0 + 88);
  v14 = *(_QWORD *)(v0 + 64);
  if (v12)
  {
    v15 = *(_QWORD *)(v14 + 24);
    swift_endAccess();
    ObjectType = swift_getObjectType();
    v17 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v15 + 8);
    OUTLINED_FUNCTION_26_22();
    swift_retain();
    swift_unknownObjectRetain();
    v17(v14, &protocol witness table for MockCaptionsProvider, v14, &protocol witness table for MockCaptionsProvider, v11, ObjectType, v15);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_11_0();
    outlined destroy of Participant.Caption(v13);
  }
  else
  {
    OUTLINED_FUNCTION_26_22();
    swift_retain();
    outlined destroy of Participant.Caption(v13);
    swift_endAccess();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_11_0();
  }
  swift_task_dealloc();
  return OUTLINED_FUNCTION_21_2(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t MockCaptionsProvider.deinit()
{
  uint64_t v0;

  OUTLINED_FUNCTION_67_1();
  swift_release();
  return v0;
}

uint64_t MockCaptionsProvider.__deallocating_deinit()
{
  MockCaptionsProvider.deinit();
  return swift_deallocClassInstance();
}

uint64_t MockCaptionsProvider.init()()
{
  uint64_t v0;
  uint64_t result;

  result = v0;
  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0;
  *(_BYTE *)(v0 + 40) = 0;
  *(_QWORD *)(v0 + 32) = 0;
  return result;
}

uint64_t protocol witness for ParticipantCaptionsProvider.token.getter in conformance MockCaptionsProvider()
{
  return -1;
}

uint64_t protocol witness for ParticipantCaptionsProvider.participantCaptionsProviderDelegate.getter in conformance MockCaptionsProvider()
{
  swift_beginAccess();
  return swift_unknownObjectRetain();
}

uint64_t protocol witness for ParticipantCaptionsProvider.participantCaptionsProviderDelegate.setter in conformance MockCaptionsProvider(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_unknownObjectRelease();
}

uint64_t (*protocol witness for ParticipantCaptionsProvider.participantCaptionsProviderDelegate.modify in conformance MockCaptionsProvider())()
{
  swift_beginAccess();
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t protocol witness for ParticipantCaptionsProvider.captionsEnabled.getter in conformance MockCaptionsProvider()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 40);
}

void (*protocol witness for ParticipantCaptionsProvider.captionsEnabled.modify in conformance MockCaptionsProvider(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[3] = v1;
  swift_beginAccess();
  *((_BYTE *)v3 + 32) = *(_BYTE *)(v1 + 40);
  return MockCaptionsProvider.captionsEnabled.modify;
}

uint64_t _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tg5(uint64_t a1, int *a2)
{
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t);

  v7 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = swift_task_alloc();
  v5 = (_QWORD *)OUTLINED_FUNCTION_61_5(v4);
  *v5 = v2;
  v5[1] = _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tg5TQ0_;
  return v7(a1);
}

uint64_t _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tg5TQ0_()
{
  uint64_t v0;

  OUTLINED_FUNCTION_0_2();
  return OUTLINED_FUNCTION_16(*(uint64_t (**)(void))(v0 + 8));
}

void specialized MutableCollection<>.shuffle<A>(using:)()
{
  uint64_t v0;

  if (*(_QWORD *)(*(_QWORD *)v0 + 16) >= 2uLL)
    OUTLINED_FUNCTION_32_46();
}

uint64_t partial apply for closure #1 in sendUpdate #1 (_:complete:) in MockCaptionsProvider.start()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;

  OUTLINED_FUNCTION_28_61();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_61_5(v0);
  v2 = OUTLINED_FUNCTION_9_95(v1);
  return OUTLINED_FUNCTION_5_116(v2, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t objectdestroyTm_15()
{
  OUTLINED_FUNCTION_67_1();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BD41D388()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tg5TA_16()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_61_5(v0);
  v2 = OUTLINED_FUNCTION_7_19(v1);
  return OUTLINED_FUNCTION_2_21(v2, v3, v4, v5);
}

void sub_1BD41D3F8(char *a1)
{
  MockCaptionsProvider.captionsEnabled.setter(*a1);
}

uint64_t type metadata accessor for MockCaptionsProvider()
{
  return objc_opt_self();
}

uint64_t method lookup function for MockCaptionsProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MockCaptionsProvider.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t outlined init with copy of Participant.Caption(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Participant.Caption(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of Participant.Caption(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Participant.Caption(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BD41D4D0()
{
  OUTLINED_FUNCTION_67_1();
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in MockCaptionsProvider.captionsEnabled.didset()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = swift_task_alloc();
  v2 = (_QWORD *)OUTLINED_FUNCTION_61_5(v1);
  *v2 = v0;
  v2[1] = partial apply for closure #1 in SyncedScreeningAlphaGradientView.gradient(for:);
  return closure #1 in MockCaptionsProvider.captionsEnabled.didset();
}

uint64_t OUTLINED_FUNCTION_39_56()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v0, v1);
}

_QWORD *VideoMessagePlayerViewModel.__allocating_init(videoMessageURL:playerSpaciality:)()
{
  objc_class *v0;
  id v1;

  OUTLINED_FUNCTION_6_6();
  v1 = objc_allocWithZone(v0);
  return VideoMessagePlayerViewModel.init(videoMessageURL:playerSpaciality:)();
}

BOOL static VideoMessagePlayerViewModel.PlayerSpatiality.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

BOOL static VideoMessageControlsView.PlayState.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

void VideoMessageControlsView.PlayState.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
  Hasher._combine(_:)(a2);
  OUTLINED_FUNCTION_0();
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance VideoMessageControlsView.PlayState(char *a1, char *a2)
{
  return static VideoMessageControlsView.PlayState.== infix(_:_:)(*a1, *a2);
}

uint64_t protocol witness for Hashable.hashValue.getter in conformance VideoMessageControlsView.PlayState()
{
  unsigned __int8 *v0;

  return VideoMessageControlsView.PlayState.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance VideoMessageControlsView.PlayState(uint64_t a1)
{
  unsigned __int8 *v1;

  VideoMessageControlsView.PlayState.hash(into:)(a1, *v1);
}

void VideoMessageControlsView.verticalSizeClass.getter()
{
  OUTLINED_FUNCTION_39_57();
  OUTLINED_FUNCTION_83_22();
  OUTLINED_FUNCTION_0();
}

void VideoMessageControlsView.horizontalSizeClass.getter()
{
  OUTLINED_FUNCTION_39_57();
  OUTLINED_FUNCTION_83_22();
  OUTLINED_FUNCTION_0();
}

id VideoMessageControlsView.videoMessageViewModel.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_67_20();
  return *(id *)(v0 + 8);
}

void key path setter for VideoMessageControlsView.videoMessageViewModel : VideoMessageControlsView(id *a1)
{
  VideoMessageControlsView.videoMessageViewModel.setter((uint64_t)*a1);
}

void VideoMessageControlsView.videoMessageViewModel.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for VideoMessageControlsView(0) + 28);

  *(_QWORD *)(v3 + 8) = a1;
  OUTLINED_FUNCTION_0();
}

double (*VideoMessageControlsView.videoMessageViewModel.modify())(_QWORD)
{
  OUTLINED_FUNCTION_67_20();
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t VideoMessageControlsView.$videoMessageViewModel.getter()
{
  OUTLINED_FUNCTION_67_20();
  type metadata accessor for VideoMessagePlayerViewModel(0);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type VideoMessagePlayerViewModel and conformance VideoMessagePlayerViewModel, (void (*)(uint64_t))type metadata accessor for VideoMessagePlayerViewModel);
  OUTLINED_FUNCTION_50();
  return OUTLINED_FUNCTION_42_45();
}

void VideoMessageControlsView.player.getter()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(v0 + *(int *)(OUTLINED_FUNCTION_39_57() + 36));
  OUTLINED_FUNCTION_0();
}

double VideoMessageControlsView.buttonBottomPaddingDivisor.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  void (*v27)(_BYTE *, uint64_t, uint64_t);
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  _BYTE *v31;
  void (*v32)(_BYTE *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  uint64_t v36;
  _BYTE *v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  char v41;
  void (*v42)(_BYTE *, uint64_t);
  _BYTE v44[12];
  int v45;
  _BYTE *v46;
  _BYTE *v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE *v50;
  _BYTE *v51;
  _BYTE *v52;
  uint64_t v53;
  uint64_t v54;
  _BYTE *v55;

  v1 = type metadata accessor for VideoMessageControlsView(0);
  MEMORY[0x1E0C80A78](v1);
  v55 = &v44[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for UserInterfaceSizeClass();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v47 = &v44[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (UserInterfaceSizeClass?, UserInterfaceSizeClass?));
  MEMORY[0x1E0C80A78](v6);
  v52 = &v44[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v8);
  v10 = &v44[-v9];
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UserInterfaceSizeClass?);
  MEMORY[0x1E0C80A78](v11);
  v46 = &v44[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v13);
  v50 = &v44[-v14];
  MEMORY[0x1E0C80A78](v15);
  v51 = &v44[-v16];
  MEMORY[0x1E0C80A78](v17);
  v19 = &v44[-v18];
  MEMORY[0x1E0C80A78](v20);
  v22 = &v44[-v21];
  MEMORY[0x1E0C80A78](v23);
  v25 = &v44[-v24];
  v49 = v1;
  v54 = v0;
  specialized Environment.wrappedValue.getter();
  v26 = *MEMORY[0x1E0CDC160];
  v53 = v4;
  v27 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v4 + 104);
  v27(v22, v26, v3);
  __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v3);
  v48 = v6;
  v28 = (uint64_t)&v10[*(int *)(v6 + 48)];
  outlined init with copy of Participant.ScreenInfo?((uint64_t)v25, (uint64_t)v10, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  outlined init with copy of Participant.ScreenInfo?((uint64_t)v22, v28, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v3) != 1)
  {
    outlined init with copy of Participant.ScreenInfo?((uint64_t)v10, (uint64_t)v19, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    if (__swift_getEnumTagSinglePayload(v28, 1, v3) != 1)
    {
      v30 = v53;
      v31 = v47;
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v53 + 32))(v47, v28, v3);
      lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UserInterfaceSizeClass and conformance UserInterfaceSizeClass, (void (*)(uint64_t))MEMORY[0x1E0CDC170]);
      v45 = dispatch thunk of static Equatable.== infix(_:_:)();
      v32 = *(void (**)(_BYTE *, uint64_t))(v30 + 8);
      v32(v31, v3);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v22, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v25, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
      v32(v19, v3);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v10, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
      v29 = v55;
      _s15ConversationKit11ParticipantVWOcTm_2(v54, (uint64_t)v55, type metadata accessor for VideoMessageControlsView);
      if ((v45 & 1) != 0)
        goto LABEL_9;
LABEL_7:
      outlined destroy of AccountUpdateNotice((uint64_t)v29, type metadata accessor for VideoMessageControlsView);
      return 0.0725;
    }
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v22, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v25, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    (*(void (**)(_BYTE *, uint64_t))(v53 + 8))(v19, v3);
LABEL_6:
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v10, &demangling cache variable for type metadata for (UserInterfaceSizeClass?, UserInterfaceSizeClass?));
    v29 = v55;
    _s15ConversationKit11ParticipantVWOcTm_2(v54, (uint64_t)v55, type metadata accessor for VideoMessageControlsView);
    goto LABEL_7;
  }
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v22, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v25, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  if (__swift_getEnumTagSinglePayload(v28, 1, v3) != 1)
    goto LABEL_6;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v10, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  v29 = v55;
  _s15ConversationKit11ParticipantVWOcTm_2(v54, (uint64_t)v55, type metadata accessor for VideoMessageControlsView);
LABEL_9:
  v33 = (uint64_t)v51;
  specialized Environment.wrappedValue.getter();
  v34 = (uint64_t)v50;
  v27(v50, v26, v3);
  __swift_storeEnumTagSinglePayload(v34, 0, 1, v3);
  v35 = v52;
  v36 = (uint64_t)&v52[*(int *)(v48 + 48)];
  outlined init with copy of Participant.ScreenInfo?(v33, (uint64_t)v52, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  outlined init with copy of Participant.ScreenInfo?(v34, v36, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v35, 1, v3) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v34, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v33, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    outlined destroy of AccountUpdateNotice((uint64_t)v29, type metadata accessor for VideoMessageControlsView);
    if (__swift_getEnumTagSinglePayload(v36, 1, v3) == 1)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v35, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
      return 0.055;
    }
    goto LABEL_14;
  }
  v37 = v46;
  outlined init with copy of Participant.ScreenInfo?((uint64_t)v35, (uint64_t)v46, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  if (__swift_getEnumTagSinglePayload(v36, 1, v3) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v34, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v33, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    outlined destroy of AccountUpdateNotice((uint64_t)v29, type metadata accessor for VideoMessageControlsView);
    (*(void (**)(_BYTE *, uint64_t))(v53 + 8))(v37, v3);
LABEL_14:
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v35, &demangling cache variable for type metadata for (UserInterfaceSizeClass?, UserInterfaceSizeClass?));
    return 0.0725;
  }
  v38 = v53;
  v39 = v34;
  v40 = v47;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v53 + 32))(v47, v36, v3);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UserInterfaceSizeClass and conformance UserInterfaceSizeClass, (void (*)(uint64_t))MEMORY[0x1E0CDC170]);
  v41 = dispatch thunk of static Equatable.== infix(_:_:)();
  v42 = *(void (**)(_BYTE *, uint64_t))(v38 + 8);
  v42(v40, v3);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v39, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v33, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  outlined destroy of AccountUpdateNotice((uint64_t)v29, type metadata accessor for VideoMessageControlsView);
  v42(v37, v3);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v35, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  if ((v41 & 1) != 0)
    return 0.055;
  return 0.0725;
}

void VideoMessageControlsView.body.getter()
{
  uint64_t *v0;
  uint64_t (**v1)@<X0>(uint64_t@<X0>, uint64_t@<X8>);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t KeyPath;
  _BYTE v18[16];
  uint64_t v19;
  uint64_t v20;

  OUTLINED_FUNCTION_93();
  v20 = v2;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<ColorScheme>);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_16_2();
  v4 = type metadata accessor for ColorScheme();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v18[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = OUTLINED_FUNCTION_39_57();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x1E0C80A78](v8);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<GeometryReader<<<opaque return type of View.onTapGesture(count:perform:)>>.0>, _EnvironmentKeyWritingModifier<ColorScheme>>);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_83_4();
  v13 = OUTLINED_FUNCTION_64();
  _s15ConversationKit11ParticipantVWOcTm_2(v13, v14, type metadata accessor for VideoMessageControlsView);
  v15 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v16 = swift_allocObject();
  outlined init with take of VideoMessageControlsView((uint64_t)&v18[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)], v16 + v15);
  KeyPath = swift_getKeyPath();
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0CD86D0], v4);
  (*(void (**)(char *, _BYTE *, uint64_t))(v5 + 16))((char *)v0 + *(int *)(v19 + 28), v7, v4);
  *v0 = KeyPath;
  outlined init with copy of Participant.ScreenInfo?((uint64_t)v0, (uint64_t)v1 + *(int *)(v11 + 36), &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<ColorScheme>);
  *v1 = partial apply for closure #1 in VideoMessageControlsView.body.getter;
  v1[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v16;
  OUTLINED_FUNCTION_11_8();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v0, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<ColorScheme>);
  OUTLINED_FUNCTION_52((uint64_t)v7, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  OUTLINED_FUNCTION_19();
  specialized VideoMessageControlsView.backgroundOrCurtainAppliedToView<A>(_:)((uint64_t)v1, v20);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v1, &demangling cache variable for type metadata for ModifiedContent<GeometryReader<<<opaque return type of View.onTapGesture(count:perform:)>>.0>, _EnvironmentKeyWritingModifier<ColorScheme>>);
  OUTLINED_FUNCTION_52_1();
}

uint64_t closure #1 in VideoMessageControlsView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  void (*v27)(uint64_t *__return_ptr);
  _QWORD *v28;
  uint64_t v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  double v34;
  double v35;
  uint64_t v36;
  char v37;
  char *v38;
  uint64_t v39;
  char v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  double v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __int128 v77;
  uint64_t v78;
  uint64_t v79;

  v75 = a3;
  v5 = type metadata accessor for VideoMessageControlsView(0);
  v72 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v73 = v6;
  v74 = (uint64_t)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ZStack<TupleView<(VStack<_ConditionalContent<TupleView<(ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, _FlexFrameLayout>, _OpacityEffect>, Spacer)>, TupleView<(ModifiedContent<HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>)>>, _FlexFrameLayout>, Spacer)>>>, _ConditionalContent<HStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>>)>>, VStack<T);
  MEMORY[0x1E0C80A78](v7);
  v9 = (uint64_t *)((char *)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ZStack<TupleView<(VStack<_ConditionalContent<TupleView<(ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, _FlexFrameLayout>, _OpacityEffect>, Spacer)>, TupleView<(ModifiedContent<HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>)>>, _FlexFrameLayout>, Spacer)>>>, _ConditionalContent<HStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayou);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ZStack<TupleView<(VStack<_ConditionalContent<TupleView<(ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, _FlexFrameLayout>, _OpacityEffect>, Spacer)>, TupleView<(ModifiedContent<HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>)>>, _FlexFrameLayout>, Spacer)>>>, _ConditionalContent<HStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>,);
  MEMORY[0x1E0C80A78](v64);
  v14 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ZStack<TupleView<(VStack<_ConditionalContent<TupleView<(ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, _FlexFrameLayout>, _OpacityEffect>, Spacer)>, TupleView<(ModifiedContent<HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>)>>, _FlexFrameLayout>, Spacer)>>>, _ConditionalContent<HStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>,);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v63 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v65 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ZStack<TupleView<(VStack<_ConditionalContent<TupleView<(ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, _FlexFrameLayout>, _OpacityEffect>, Spacer)>, TupleView<(ModifiedContent<HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>)>>, _FlexFrameLayout>, Spacer)>>>, _ConditionalContent<HStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _);
  MEMORY[0x1E0C80A78](v65);
  v19 = (char *)&v63 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ZStack<TupleView<(VStack<_ConditionalContent<TupleView<(ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, _FlexFrameLayout>, _OpacityEffect>, Spacer)>, TupleView<(ModifiedContent<HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>)>>, _FlexFrameLayout>, Spacer)>>>, _ConditionalContent<HStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBotto);
  MEMORY[0x1E0C80A78](v71);
  v21 = (char *)&v63 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.onTapGesture(count:perform:)>>.0);
  v69 = *(_QWORD *)(v22 - 8);
  v70 = v22;
  MEMORY[0x1E0C80A78](v22);
  v68 = (char *)&v63 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  *v9 = static Alignment.center.getter();
  v9[1] = v24;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_ZStackLayout, TupleView<(VStack<_ConditionalContent<TupleView<(ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, _FlexFrameLayout>, _OpacityEffect>, Spacer)>, TupleView<(ModifiedContent<HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>)>>, _FlexFrameLayout>, Spacer)>>>, _ConditionalContent<HStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _Fle);
  closure #1 in closure #1 in VideoMessageControlsView.body.getter(a2, a1, (char *)v9 + *(int *)(v25 + 44));
  v67 = a2 + *(int *)(v5 + 28);
  v26 = *(_QWORD **)(v67 + 8);
  v27 = *(void (**)(uint64_t *__return_ptr))((*MEMORY[0x1E0DEEDD8] & *v26) + 0x120);
  v28 = v26;
  v27(&v76);

  v66 = a2;
  if ((v76 & 1) != 0)
  {
    v29 = 0;
    v30 = 0.0;
    v31 = 0;
  }
  else
  {
    v32 = *(_QWORD *)a2;
    v33 = *(_BYTE *)(a2 + 8);
    outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(*(_QWORD *)a2, v33);
    specialized Environment.wrappedValue.getter();
    v35 = v34;
    outlined consume of Environment<CGFloat>.Content(v32, v33);
    v30 = v35 + v35;
    outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(v32, v33);
    specialized Environment.wrappedValue.getter();
    v31 = v36;
    outlined consume of Environment<CGFloat>.Content(v32, v33);
    v29 = 0x4030000000000000;
  }
  v37 = static Edge.Set.all.getter();
  outlined init with copy of Participant.ScreenInfo?((uint64_t)v9, (uint64_t)v12, &demangling cache variable for type metadata for ZStack<TupleView<(VStack<_ConditionalContent<TupleView<(ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, _FlexFrameLayout>, _OpacityEffect>, Spacer)>, TupleView<(ModifiedContent<HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>)>>, _FlexFrameLayout>, Spacer)>>>, _ConditionalContent<HStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>>)>>, VStack<T);
  v38 = &v12[*(int *)(v10 + 36)];
  *v38 = v37;
  *((double *)v38 + 1) = v30;
  *((_QWORD *)v38 + 2) = v29;
  *((_QWORD *)v38 + 3) = v31;
  *((_QWORD *)v38 + 4) = v29;
  v38[40] = 0;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v9, &demangling cache variable for type metadata for ZStack<TupleView<(VStack<_ConditionalContent<TupleView<(ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, _FlexFrameLayout>, _OpacityEffect>, Spacer)>, TupleView<(ModifiedContent<HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>)>>, _FlexFrameLayout>, Spacer)>>>, _ConditionalContent<HStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>>)>>, VStack<T);
  v39 = static SafeAreaRegions.all.getter();
  v40 = static Edge.Set.all.getter();
  outlined init with copy of Participant.ScreenInfo?((uint64_t)v12, (uint64_t)v14, &demangling cache variable for type metadata for ModifiedContent<ZStack<TupleView<(VStack<_ConditionalContent<TupleView<(ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, _FlexFrameLayout>, _OpacityEffect>, Spacer)>, TupleView<(ModifiedContent<HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>)>>, _FlexFrameLayout>, Spacer)>>>, _ConditionalContent<HStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayou);
  v41 = &v14[*(int *)(v64 + 36)];
  *(_QWORD *)v41 = v39;
  v41[8] = v40;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v12, &demangling cache variable for type metadata for ModifiedContent<ZStack<TupleView<(VStack<_ConditionalContent<TupleView<(ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, _FlexFrameLayout>, _OpacityEffect>, Spacer)>, TupleView<(ModifiedContent<HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>)>>, _FlexFrameLayout>, Spacer)>>>, _ConditionalContent<HStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayou);
  v42 = static Alignment.center.getter();
  specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(0, 1, 0, 1, 0x7FF0000000000000, 0, 0, 1, 0, 1, 0, 1, v42, v43);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v14, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ZStack<TupleView<(VStack<_ConditionalContent<TupleView<(ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, _FlexFrameLayout>, _OpacityEffect>, Spacer)>, TupleView<(ModifiedContent<HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>)>>, _FlexFrameLayout>, Spacer)>>>, _ConditionalContent<HStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>,);
  outlined init with copy of Participant.ScreenInfo?((uint64_t)v17, (uint64_t)v19, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ZStack<TupleView<(VStack<_ConditionalContent<TupleView<(ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, _FlexFrameLayout>, _OpacityEffect>, Spacer)>, TupleView<(ModifiedContent<HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>)>>, _FlexFrameLayout>, Spacer)>>>, _ConditionalContent<HStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>,);
  v19[*(int *)(v65 + 36)] = 0;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v17, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ZStack<TupleView<(VStack<_ConditionalContent<TupleView<(ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, _FlexFrameLayout>, _OpacityEffect>, Spacer)>, TupleView<(ModifiedContent<HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>)>>, _FlexFrameLayout>, Spacer)>>>, _ConditionalContent<HStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>,);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Color>);
  v44 = swift_allocObject();
  *(_OWORD *)(v44 + 16) = xmmword_1BD646740;
  static Color.black.getter();
  v45 = Color.opacity(_:)();
  swift_release();
  *(_QWORD *)(v44 + 32) = v45;
  static Color.black.getter();
  v46 = Color.opacity(_:)();
  swift_release();
  *(_QWORD *)(v44 + 40) = v46;
  static Color.black.getter();
  v47 = Color.opacity(_:)();
  swift_release();
  *(_QWORD *)(v44 + 48) = v47;
  v76 = v44;
  specialized Array._endMutation()();
  MEMORY[0x1C3B72974](v76);
  static UnitPoint.top.getter();
  static UnitPoint.bottom.getter();
  LinearGradient.init(gradient:startPoint:endPoint:)();
  v48 = v76;
  v65 = v77;
  v49 = v78;
  v50 = v79;
  v51 = static SafeAreaRegions.all.getter();
  LOBYTE(v47) = static Edge.Set.all.getter();
  v52 = *(id *)(v67 + 8);
  v53 = VideoMessagePlayerViewModel.playButtonOpacity.getter();

  v54 = static Alignment.center.getter();
  v56 = v55;
  outlined init with copy of Participant.ScreenInfo?((uint64_t)v19, (uint64_t)v21, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ZStack<TupleView<(VStack<_ConditionalContent<TupleView<(ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, _FlexFrameLayout>, _OpacityEffect>, Spacer)>, TupleView<(ModifiedContent<HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>)>>, _FlexFrameLayout>, Spacer)>>>, _ConditionalContent<HStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _);
  v57 = &v21[*(int *)(v71 + 36)];
  *(_QWORD *)v57 = v48;
  *(_OWORD *)(v57 + 8) = v65;
  *((_QWORD *)v57 + 3) = v49;
  *((_QWORD *)v57 + 4) = v50;
  *((_QWORD *)v57 + 5) = v51;
  v57[48] = v47;
  *((double *)v57 + 7) = v53;
  *((_QWORD *)v57 + 8) = v54;
  *((_QWORD *)v57 + 9) = v56;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v19, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ZStack<TupleView<(VStack<_ConditionalContent<TupleView<(ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, _FlexFrameLayout>, _OpacityEffect>, Spacer)>, TupleView<(ModifiedContent<HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>)>>, _FlexFrameLayout>, Spacer)>>>, _ConditionalContent<HStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _);
  v58 = v74;
  _s15ConversationKit11ParticipantVWOcTm_2(v66, v74, type metadata accessor for VideoMessageControlsView);
  v59 = (*(unsigned __int8 *)(v72 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80);
  v60 = swift_allocObject();
  outlined init with take of VideoMessageControlsView(v58, v60 + v59);
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ZStack<TupleView<(VStack<_ConditionalContent<TupleView<(ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, _FlexFrameLayout>, _OpacityEffect>, Spacer)>, TupleView<(ModifiedContent<HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>)>>, _FlexFrameLayout>, Spacer)>>>, _ConditionalContent<HStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomC();
  v61 = v68;
  View.onTapGesture(count:perform:)();
  swift_release();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v21, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ZStack<TupleView<(VStack<_ConditionalContent<TupleView<(ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, _FlexFrameLayout>, _OpacityEffect>, Spacer)>, TupleView<(ModifiedContent<HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>)>>, _FlexFrameLayout>, Spacer)>>>, _ConditionalContent<HStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBotto);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v69 + 32))(v75, v61, v70);
}

void closure #1 in closure #1 in VideoMessageControlsView.body.getter(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  unsigned __int8 (*v46)(void);
  _QWORD *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  char *v59;
  _QWORD *v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unsigned int v68;
  int v69;
  int v70;
  _QWORD *v71;
  void (*v72)(uint64_t *__return_ptr);
  _QWORD *v73;
  double v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void *v95;
  id v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char v109;
  void *v110;
  uint64_t v111;
  int v112;
  int v113;
  _QWORD v114[2];
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  char *v127;
  char *v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  int v137;
  void *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  _QWORD v142[40];
  uint64_t v143;
  uint64_t v144;
  char v145;
  _BYTE v146[297];
  _BYTE v147[296];
  _BYTE v148[312];
  _BYTE v149[297];

  v138 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier>, ModifiedContent<ModifiedContent<ModifiedContent<MovieScrubber, _ClipEffect<RoundedRectangle>>, _FixedSizeLayout>, _FrameLayout>)>>);
  MEMORY[0x1E0C80A78](v5);
  v129 = (char *)v114 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier>, ModifiedContent<ModifiedContent<ModifiedContent<MovieScrubber, _ClipEffect<RoundedRectangle>>, _FixedSizeLayout>, _FrameLayout>)>>, _SafeAreaRegionsIgnoringLayout>);
  MEMORY[0x1E0C80A78](v117);
  v118 = (uint64_t)v114 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier>, ModifiedContent<ModifiedContent<ModifiedContent<MovieScrubber, _ClipEffect<RoundedRectangle>>, _FixedSizeLayout>, _FrameLayout>)>>, _SafeAreaRegionsIgnoringLayout>, _FlexFrameLayout>);
  MEMORY[0x1E0C80A78](v8);
  v119 = (char *)v114 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v120 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier>, ModifiedContent<ModifiedContent<ModifiedContent<MovieScrubber, _ClipEffect<RoundedRectangle>>, _FixedSizeLayout>, _FrameLayout>)>>, _SafeAreaRegionsIgnoringLayout>, _FlexFrameLayout>, _PaddingLayout>);
  MEMORY[0x1E0C80A78](v120);
  v131 = (uint64_t)v114 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v124 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier>, ModifiedContent<ModifiedContent<ModifiedContent<MovieScrubber, _ClipEffect<RoundedRectangle>>, _FixedSizeLayout>, _FrameLayout>)>>, _SafeAreaRegionsIgnoringLayout>, _FlexFrameLayout>, _PaddingLayout>, _OpacityEffect>);
  MEMORY[0x1E0C80A78](v124);
  v122 = (uint64_t)v114 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v121 = (uint64_t)v114 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier>, ModifiedContent<ModifiedContent<ModifiedContent<MovieScrubber, _ClipEffect<RoundedRectangle>>, _FixedSizeLayout>, _FrameLayout>)>>, _SafeAreaRegionsIgnoringLayout>, _FlexFrameLayout>, _PaddingLayout>, _OpacityEffect>?);
  MEMORY[0x1E0C80A78](v14);
  v125 = (char *)v114 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v123 = (char *)v114 - v17;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>>>>, Spacer)>>);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)v114 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>>>>, Spacer)>>, _SafeAreaRegionsIgnoringLayout>);
  MEMORY[0x1E0C80A78](v126);
  v128 = (char *)v114 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>>>>, Spacer)>>, _SafeAreaRegionsIgnoringLayout>, _FlexFrameLayout>);
  MEMORY[0x1E0C80A78](v22);
  v130 = (uint64_t)v114 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v127 = (char *)v114 - v25;
  MEMORY[0x1E0C80A78](v26);
  v134 = (uint64_t)v114 - v27;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>>>>, Spacer)>>, _SafeAreaRegionsIgnoringLayout>, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_Conditi);
  MEMORY[0x1E0C80A78](v28);
  v133 = (char *)v114 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v30);
  v32 = (char *)v114 - v31;
  v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<HStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>>)>>, VStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>>)>>>);
  MEMORY[0x1E0C80A78](v33);
  v132 = (char *)v114 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v35);
  v37 = (char *)v114 - v36;
  MEMORY[0x1E0C80A78](v38);
  v40 = (char *)v114 - v39;
  v136 = static HorizontalAlignment.center.getter();
  closure #1 in closure #1 in closure #1 in VideoMessageControlsView.body.getter(a1, v147);
  v41 = 1;
  v148[304] = 1;
  memcpy(&v148[7], v147, 0x122uLL);
  v137 = 1;
  memcpy(v149, v148, sizeof(v149));
  v140 = a1;
  v141 = a2;
  v42 = a2;
  v139 = a1;
  specialized View.conditionallyStacked<A>(with:condition:)((void (*)(void))partial apply for closure #2 in closure #1 in closure #1 in VideoMessageControlsView.body.getter, (void (*)(__n128))partial apply for closure #3 in closure #1 in closure #1 in VideoMessageControlsView.body.getter, (uint64_t)v37);
  v135 = v40;
  outlined init with take of Participant.VideoInfo?((uint64_t)v37, (uint64_t)v40, &demangling cache variable for type metadata for _ConditionalContent<HStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>>)>>, VStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>>)>>>);
  v43 = type metadata accessor for VideoMessageControlsView(0);
  v44 = a1 + *(int *)(v43 + 28);
  v45 = *(_QWORD **)(v44 + 8);
  v46 = *(unsigned __int8 (**)(void))((*MEMORY[0x1E0DEEDD8] & *v45) + 0xC0);
  v47 = v45;
  LODWORD(v46) = v46();

  if ((_DWORD)v46 == 1)
  {
    v115 = v44;
    v116 = v32;
    v48 = (uint64_t)v129;
    *(_QWORD *)v20 = static HorizontalAlignment.center.getter();
    *((_QWORD *)v20 + 1) = 0;
    v20[16] = 1;
    v49 = &v20[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_VStackLayout, TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>>>>, Spacer)>>)
                      + 44)];
    v114[1] = v42;
    closure #4 in closure #1 in closure #1 in VideoMessageControlsView.body.getter(a1, v42, v49);
    v50 = static SafeAreaRegions.all.getter();
    v51 = static Edge.Set.all.getter();
    v52 = v43;
    v53 = (uint64_t)v128;
    outlined init with copy of Participant.ScreenInfo?((uint64_t)v20, (uint64_t)v128, &demangling cache variable for type metadata for VStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>>>>, Spacer)>>);
    v54 = v53 + *(int *)(v126 + 36);
    *(_QWORD *)v54 = v50;
    *(_BYTE *)(v54 + 8) = v51;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v20, &demangling cache variable for type metadata for VStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>>>>, Spacer)>>);
    v55 = static Alignment.center.getter();
    v56 = (uint64_t)v127;
    specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(0, 1, 0, 1, 0x7FF0000000000000, 0, 0, 1, 0, 1, 0x7FF0000000000000, 0, v55, v57);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v53, &demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>>>>, Spacer)>>, _SafeAreaRegionsIgnoringLayout>);
    outlined init with take of Participant.VideoInfo?(v56, v134, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>>>>, Spacer)>>, _SafeAreaRegionsIgnoringLayout>, _FlexFrameLayout>);
    v58 = *(void **)(a1 + *(int *)(v43 + 36));
    if (v58)
    {
      v59 = v58;
      *(_QWORD *)v48 = static HorizontalAlignment.center.getter();
      *(_QWORD *)(v48 + 8) = 0x4018000000000000;
      *(_BYTE *)(v48 + 16) = 0;
      v60 = (_QWORD *)(v48
                     + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_VStackLayout, TupleView<(Spacer, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier>, ModifiedContent<ModifiedContent<ModifiedContent<MovieScrubber, _ClipEffect<RoundedRectangle>>, _FixedSizeLayout>, _FrameLayout>)>>)
                              + 44));
      v128 = v59;
      closure #5 in closure #1 in closure #1 in VideoMessageControlsView.body.getter(a1, v59, v60);
      v61 = static SafeAreaRegions.all.getter();
      v62 = static Edge.Set.all.getter();
      v63 = v118;
      outlined init with copy of Participant.ScreenInfo?(v48, v118, &demangling cache variable for type metadata for VStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier>, ModifiedContent<ModifiedContent<ModifiedContent<MovieScrubber, _ClipEffect<RoundedRectangle>>, _FixedSizeLayout>, _FrameLayout>)>>);
      v64 = v63 + *(int *)(v117 + 36);
      *(_QWORD *)v64 = v61;
      *(_BYTE *)(v64 + 8) = v62;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v48, &demangling cache variable for type metadata for VStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier>, ModifiedContent<ModifiedContent<ModifiedContent<MovieScrubber, _ClipEffect<RoundedRectangle>>, _FixedSizeLayout>, _FrameLayout>)>>);
      v65 = static Alignment.center.getter();
      LOBYTE(v113) = 0;
      LOBYTE(v112) = 1;
      v66 = (uint64_t)v119;
      specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(0, 1, 0, 1, 0x7FF0000000000000, 0, 0, 1, 0, v112, 0x7FF0000000000000, v113, v65, v67);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v63, &demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier>, ModifiedContent<ModifiedContent<ModifiedContent<MovieScrubber, _ClipEffect<RoundedRectangle>>, _FixedSizeLayout>, _FrameLayout>)>>, _SafeAreaRegionsIgnoringLayout>);
      v68 = static Edge.Set.bottom.getter();
      v69 = MEMORY[0x1C3B71FFC](0);
      v70 = MEMORY[0x1C3B71FFC]();
      if (MEMORY[0x1C3B71FFC](v70 & v68) != v68)
        LOBYTE(v69) = MEMORY[0x1C3B71FFC](v69 | v68);
      GeometryProxy.size.getter();
      v71 = *(_QWORD **)(v115 + 8);
      v72 = *(void (**)(uint64_t *__return_ptr))((*MEMORY[0x1E0DEEDD8] & *v71) + 0x120);
      v73 = v71;
      v72(&v143);

      v74 = 0.0;
      v75 = v131;
      v76 = v120;
      if ((v143 & 1) != 0)
      {
        v77 = *(_QWORD *)a1;
        v78 = *(_BYTE *)(a1 + 8);
        outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(*(_QWORD *)a1, v78);
        specialized Environment.wrappedValue.getter();
        outlined consume of Environment<CGFloat>.Content(v77, v78);
      }
      EdgeInsets.init(_all:)();
      v80 = v79;
      v82 = v81;
      v84 = v83;
      v86 = v85;
      outlined init with copy of Participant.ScreenInfo?(v66, v75, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier>, ModifiedContent<ModifiedContent<ModifiedContent<MovieScrubber, _ClipEffect<RoundedRectangle>>, _FixedSizeLayout>, _FrameLayout>)>>, _SafeAreaRegionsIgnoringLayout>, _FlexFrameLayout>);
      v87 = v75 + *(int *)(v76 + 36);
      *(_BYTE *)v87 = v69;
      *(_QWORD *)(v87 + 8) = v80;
      *(_QWORD *)(v87 + 16) = v82;
      *(_QWORD *)(v87 + 24) = v84;
      *(_QWORD *)(v87 + 32) = v86;
      *(_BYTE *)(v87 + 40) = 0;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v66, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier>, ModifiedContent<ModifiedContent<ModifiedContent<MovieScrubber, _ClipEffect<RoundedRectangle>>, _FixedSizeLayout>, _FrameLayout>)>>, _SafeAreaRegionsIgnoringLayout>, _FlexFrameLayout>);
      v88 = a1 + *(int *)(v52 + 32);
      v89 = *(_BYTE *)v88;
      v90 = *(_QWORD *)(v88 + 8);
      LOBYTE(v143) = v89;
      v144 = v90;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
      State.wrappedValue.getter();
      v92 = (uint64_t)v132;
      v91 = (uint64_t)v133;
      v32 = v116;
      v93 = (uint64_t)v125;
      v94 = (uint64_t)v123;
      v95 = v128;
      if (LOBYTE(v142[0]) == 1)
      {
        v96 = *(id *)(v115 + 8);
        v74 = VideoMessagePlayerViewModel.sendButtonOpacity.getter();

        v95 = v96;
      }

      v97 = v131;
      v98 = v122;
      outlined init with copy of Participant.ScreenInfo?(v131, v122, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier>, ModifiedContent<ModifiedContent<ModifiedContent<MovieScrubber, _ClipEffect<RoundedRectangle>>, _FixedSizeLayout>, _FrameLayout>)>>, _SafeAreaRegionsIgnoringLayout>, _FlexFrameLayout>, _PaddingLayout>);
      v99 = v124;
      *(double *)(v98 + *(int *)(v124 + 36)) = v74;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v97, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier>, ModifiedContent<ModifiedContent<ModifiedContent<MovieScrubber, _ClipEffect<RoundedRectangle>>, _FixedSizeLayout>, _FrameLayout>)>>, _SafeAreaRegionsIgnoringLayout>, _FlexFrameLayout>, _PaddingLayout>);
      v100 = v98;
      v101 = v121;
      outlined init with take of Participant.VideoInfo?(v100, v121, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier>, ModifiedContent<ModifiedContent<ModifiedContent<MovieScrubber, _ClipEffect<RoundedRectangle>>, _FixedSizeLayout>, _FrameLayout>)>>, _SafeAreaRegionsIgnoringLayout>, _FlexFrameLayout>, _PaddingLayout>, _OpacityEffect>);
      outlined init with take of Participant.VideoInfo?(v101, v94, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier>, ModifiedContent<ModifiedContent<ModifiedContent<MovieScrubber, _ClipEffect<RoundedRectangle>>, _FixedSizeLayout>, _FrameLayout>)>>, _SafeAreaRegionsIgnoringLayout>, _FlexFrameLayout>, _PaddingLayout>, _OpacityEffect>);
      v41 = 0;
    }
    else
    {
      v92 = (uint64_t)v132;
      v91 = (uint64_t)v133;
      v32 = v116;
      v99 = v124;
      v93 = (uint64_t)v125;
      v94 = (uint64_t)v123;
    }
    __swift_storeEnumTagSinglePayload(v94, v41, 1, v99);
    v103 = v134;
    v104 = v130;
    outlined init with copy of Participant.ScreenInfo?(v134, v130, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>>>>, Spacer)>>, _SafeAreaRegionsIgnoringLayout>, _FlexFrameLayout>);
    outlined init with copy of Participant.ScreenInfo?(v94, v93, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier>, ModifiedContent<ModifiedContent<ModifiedContent<MovieScrubber, _ClipEffect<RoundedRectangle>>, _FixedSizeLayout>, _FrameLayout>)>>, _SafeAreaRegionsIgnoringLayout>, _FlexFrameLayout>, _PaddingLayout>, _OpacityEffect>?);
    outlined init with copy of Participant.ScreenInfo?(v104, v91, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>>>>, Spacer)>>, _SafeAreaRegionsIgnoringLayout>, _FlexFrameLayout>);
    v105 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>>>>, Spacer)>>, _SafeAreaRegionsIgnoringLayout>, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalConten);
    outlined init with copy of Participant.ScreenInfo?(v93, v91 + *(int *)(v105 + 48), &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier>, ModifiedContent<ModifiedContent<ModifiedContent<MovieScrubber, _ClipEffect<RoundedRectangle>>, _FixedSizeLayout>, _FrameLayout>)>>, _SafeAreaRegionsIgnoringLayout>, _FlexFrameLayout>, _PaddingLayout>, _OpacityEffect>?);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v94, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier>, ModifiedContent<ModifiedContent<ModifiedContent<MovieScrubber, _ClipEffect<RoundedRectangle>>, _FixedSizeLayout>, _FrameLayout>)>>, _SafeAreaRegionsIgnoringLayout>, _FlexFrameLayout>, _PaddingLayout>, _OpacityEffect>?);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v103, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>>>>, Spacer)>>, _SafeAreaRegionsIgnoringLayout>, _FlexFrameLayout>);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v93, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier>, ModifiedContent<ModifiedContent<ModifiedContent<MovieScrubber, _ClipEffect<RoundedRectangle>>, _FixedSizeLayout>, _FrameLayout>)>>, _SafeAreaRegionsIgnoringLayout>, _FlexFrameLayout>, _PaddingLayout>, _OpacityEffect>?);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v104, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>>>>, Spacer)>>, _SafeAreaRegionsIgnoringLayout>, _FlexFrameLayout>);
    v106 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>>>>, Spacer)>>, _SafeAreaRegionsIgnoringLayout>, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_Conditi);
    __swift_storeEnumTagSinglePayload(v91, 0, 1, v106);
    outlined init with take of Participant.VideoInfo?(v91, (uint64_t)v32, &demangling cache variable for type metadata for TupleView<(ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>>>>, Spacer)>>, _SafeAreaRegionsIgnoringLayout>, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_Conditi);
  }
  else
  {
    v102 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>>>>, Spacer)>>, _SafeAreaRegionsIgnoringLayout>, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_Conditi);
    __swift_storeEnumTagSinglePayload((uint64_t)v32, 1, 1, v102);
    v92 = (uint64_t)v132;
    v91 = (uint64_t)v133;
  }
  v108 = (uint64_t)v135;
  v107 = v136;
  outlined init with copy of Participant.ScreenInfo?((uint64_t)v135, v92, &demangling cache variable for type metadata for _ConditionalContent<HStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>>)>>, VStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>>)>>>);
  outlined init with copy of Participant.ScreenInfo?((uint64_t)v32, v91, &demangling cache variable for type metadata for TupleView<(ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>>>>, Spacer)>>, _SafeAreaRegionsIgnoringLayout>, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_Conditi);
  v142[0] = v107;
  v142[1] = 0;
  v109 = v137;
  LOBYTE(v142[2]) = v137;
  memcpy((char *)&v142[2] + 1, v149, 0x129uLL);
  v110 = v138;
  memcpy(v138, v142, 0x13AuLL);
  v111 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (VStack<_ConditionalContent<TupleView<(ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, _FlexFrameLayout>, _OpacityEffect>, Spacer)>, TupleView<(ModifiedContent<HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>)>>, _FlexFrameLayout>, Spacer)>>>, _ConditionalContent<HStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>>)>>, VStack<TupleView<(Spacer,);
  outlined init with copy of Participant.ScreenInfo?(v92, (uint64_t)v110 + *(int *)(v111 + 48), &demangling cache variable for type metadata for _ConditionalContent<HStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>>)>>, VStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>>)>>>);
  outlined init with copy of Participant.ScreenInfo?(v91, (uint64_t)v110 + *(int *)(v111 + 64), &demangling cache variable for type metadata for TupleView<(ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>>>>, Spacer)>>, _SafeAreaRegionsIgnoringLayout>, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_Conditi);
  outlined retain of VStack<_ConditionalContent<TupleView<(ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, _FlexFrameLayout>, _OpacityEffect>, Spacer)>, TupleView<(ModifiedContent<HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>)>>, _FlexFrameLayout>, Spacer)>>>((uint64_t)v142, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, _QWORD, _QWORD, _QWORD, _QWORD))outlined copy of _ConditionalContent<TupleView<(ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, _FlexFrameLayout>, _OpacityEffect>, Spacer)>, TupleView<(ModifiedContent<HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>)>>, _FlexFrameLayout>, Spacer)>>.Storage);
  outlined retain of _ConditionalContent<TupleView<(ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, _FlexFrameLayout>, _OpacityEffect>, Spacer)>, TupleView<(ModifiedContent<HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>)>>, _FlexFrameLayout>, Spacer)>>((uint64_t)v147);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v32, &demangling cache variable for type metadata for TupleView<(ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>>>>, Spacer)>>, _SafeAreaRegionsIgnoringLayout>, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_Conditi);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v108, &demangling cache variable for type metadata for _ConditionalContent<HStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>>)>>, VStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>>)>>>);
  outlined retain of _ConditionalContent<TupleView<(ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, _FlexFrameLayout>, _OpacityEffect>, Spacer)>, TupleView<(ModifiedContent<HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>)>>, _FlexFrameLayout>, Spacer)>>((uint64_t)v147);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v91, &demangling cache variable for type metadata for TupleView<(ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>>>>, Spacer)>>, _SafeAreaRegionsIgnoringLayout>, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_Conditi);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v92, &demangling cache variable for type metadata for _ConditionalContent<HStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>>)>>, VStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>>)>>>);
  v143 = v107;
  v144 = 0;
  v145 = v109;
  memcpy(v146, v149, sizeof(v146));
  outlined retain of VStack<_ConditionalContent<TupleView<(ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, _FlexFrameLayout>, _OpacityEffect>, Spacer)>, TupleView<(ModifiedContent<HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>)>>, _FlexFrameLayout>, Spacer)>>>((uint64_t)&v143, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, _QWORD, _QWORD, _QWORD, _QWORD))outlined consume of _ConditionalContent<TupleView<(ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, _FlexFrameLayout>, _OpacityEffect>, Spacer)>, TupleView<(ModifiedContent<HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>)>>, _FlexFrameLayout>, Spacer)>>.Storage);
}

void *closure #1 in closure #1 in closure #1 in VideoMessageControlsView.body.getter@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4;
  _QWORD *v5;
  void (*v6)(_QWORD *__return_ptr);
  _QWORD *v7;
  _QWORD *v8;
  double v9;
  double v10;
  uint64_t KeyPath;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v23;
  char v24;
  char v25;
  char v26;
  _BYTE v27[290];
  _BYTE v28[144];
  _QWORD v29[18];
  char v30;
  _BYTE v31[280];
  _QWORD v32[35];
  char v33;
  _BYTE v34[280];
  _QWORD v35[35];
  _QWORD __src[36];
  char v37;
  _QWORD __dst[21];
  _QWORD v39[37];

  v4 = a1 + *(int *)(type metadata accessor for VideoMessageControlsView(0) + 28);
  v5 = *(_QWORD **)(v4 + 8);
  v6 = *(void (**)(_QWORD *__return_ptr))((*MEMORY[0x1E0DEEDD8] & *v5) + 0x120);
  v7 = v5;
  v6(v39);

  if (LOBYTE(v39[0]) == 1 && static Platform.current.getter() != 1)
  {
    v19 = static VerticalAlignment.center.getter();
    closure #1 in closure #1 in closure #1 in closure #1 in VideoMessageControlsView.body.getter(a1, (uint64_t)v28);
    v30 = 1;
    memcpy((char *)v29 + 7, v28, 0x89uLL);
    __dst[0] = v19;
    __dst[1] = 0;
    LOBYTE(__dst[2]) = 1;
    memcpy((char *)&__dst[2] + 1, v29, 0x90uLL);
    v20 = static Alignment.center.getter();
    v26 = 1;
    v24 = 1;
    specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v39, 0, 1, 0, 1, 0x7FF0000000000000, 0, 0, 1, 0, v24, 0, v26, v20, v21);
    outlined release of TupleView<(Spacer, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>)>((uint64_t)v28);
    memcpy(v31, v39, sizeof(v31));
    memcpy(v35, v31, sizeof(v35));
    memcpy(v32, v31, sizeof(v32));
    memcpy(v34, v31, sizeof(v34));
    v33 = 1;
    outlined retain of HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>)>>((uint64_t)v32);
    outlined retain of HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>)>>((uint64_t)v31);
    outlined release of ModifiedContent<HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>)>>, _FlexFrameLayout>((uint64_t)v35);
    memcpy(__src, v34, 0x118uLL);
    __src[35] = 0;
    v37 = 1;
    _s7SwiftUI19_ConditionalContentV7StorageOyAA9TupleViewVyAA08ModifiedD0VyAIyACyACyAIy15ConversationKit020VideoMessageControlsG0V03TopmG033_B419541366E265736F7249488C40E55CLLVAA14_PaddingLayoutVGARGARGAA010_FlexFrameU0VGAA14_OpacityEffectVG_AA6SpacerVtGAGyAIyAA6HStackVyAGyA0__AIyAIyAJ18AnimatedSaveButtonVAA01_wU0VGAQGtGGAVG_A0_tG_GWOi0_((uint64_t)__src);
    outlined init with take of Participant.VideoInfo?((uint64_t)__src, (uint64_t)v39, &demangling cache variable for type metadata for _ConditionalContent<TupleView<(ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, _FlexFrameLayout>, _OpacityEffect>, Spacer)>, TupleView<(ModifiedContent<HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>)>>, _FlexFrameLayout>, Spacer)>>.Storage);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, _FlexFrameLayout>, _OpacityEffect>, Spacer)>);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(ModifiedContent<HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>)>>, _FlexFrameLayout>, Spacer)>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type TupleView<(ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, _FlexFrameLayout>, _OpacityEffect>, Spacer)> and conformance TupleView<A>, &demangling cache variable for type metadata for TupleView<(ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, _FlexFrameLayout>, _OpacityEffect>, Spacer)>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type TupleView<(ModifiedContent<HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>)>>, _FlexFrameLayout>, Spacer)> and conformance TupleView<A>, &demangling cache variable for type metadata for TupleView<(ModifiedContent<HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>)>>, _FlexFrameLayout>, Spacer)>);
    _ConditionalContent<>.init(storage:)();
    outlined release of ModifiedContent<HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>)>>, _FlexFrameLayout>((uint64_t)v31);
  }
  else
  {
    v8 = v7;
    GeometryProxy.size.getter();
    v10 = v9 * 0.36;
    KeyPath = swift_getKeyPath();
    type metadata accessor for VideoMessagePlayerViewModel(0);
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type VideoMessagePlayerViewModel and conformance VideoMessagePlayerViewModel, (void (*)(uint64_t))type metadata accessor for VideoMessagePlayerViewModel);
    v12 = ObservedObject.init(wrappedValue:)();
    v14 = v13;
    v29[0] = KeyPath;
    LOBYTE(v29[1]) = 0;
    v29[2] = v12;
    v29[3] = v13;
    *(double *)&v29[4] = v10;
    VideoMessageControlsView.TopControlsView.iPadPadded(using:)((uint64_t)__src);

    swift_release();
    memcpy(__dst, __src, 0x53uLL);
    v15 = static Alignment.center.getter();
    v25 = 1;
    v23 = 1;
    specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v39, 0, 1, 0, 1, 0x7FF0000000000000, 0, 0, 1, 0, v23, 0, v25, v15, v16);
    outlined release of _ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>((uint64_t)__dst);
    memcpy(v31, v39, 0xC8uLL);
    v17 = *(id *)(v4 + 8);
    v18 = VideoMessagePlayerViewModel.topControlsOpacity.getter();

    memcpy(v35, v31, 0xC8uLL);
    memcpy(v32, v31, 0xC8uLL);
    *(double *)&v32[25] = v18;
    memcpy(v34, v32, 0xD0uLL);
    v28[0] = 1;
    *(double *)&v35[25] = v18;
    outlined release of _ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>((uint64_t)v32);
    outlined release of _ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>((uint64_t)v31);
    outlined release of _ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>((uint64_t)v35);
    memcpy(__src, v34, 0xD0uLL);
    __src[26] = 0;
    LOBYTE(__src[27]) = 1;
    _s7SwiftUI19_ConditionalContentV7StorageOyAA9TupleViewVyAA08ModifiedD0VyAIyACyACyAIy15ConversationKit020VideoMessageControlsG0V03TopmG033_B419541366E265736F7249488C40E55CLLVAA14_PaddingLayoutVGARGARGAA010_FlexFrameU0VGAA14_OpacityEffectVG_AA6SpacerVtGAGyAIyAA6HStackVyAGyA0__AIyAIyAJ18AnimatedSaveButtonVAA01_wU0VGAQGtGGAVG_A0_tG_GWOi_((uint64_t)__src);
    outlined init with take of Participant.VideoInfo?((uint64_t)__src, (uint64_t)v39, &demangling cache variable for type metadata for _ConditionalContent<TupleView<(ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, _FlexFrameLayout>, _OpacityEffect>, Spacer)>, TupleView<(ModifiedContent<HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>)>>, _FlexFrameLayout>, Spacer)>>.Storage);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, _FlexFrameLayout>, _OpacityEffect>, Spacer)>);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(ModifiedContent<HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>)>>, _FlexFrameLayout>, Spacer)>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type TupleView<(ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, _FlexFrameLayout>, _OpacityEffect>, Spacer)> and conformance TupleView<A>, &demangling cache variable for type metadata for TupleView<(ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, _FlexFrameLayout>, _OpacityEffect>, Spacer)>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type TupleView<(ModifiedContent<HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>)>>, _FlexFrameLayout>, Spacer)> and conformance TupleView<A>, &demangling cache variable for type metadata for TupleView<(ModifiedContent<HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>)>>, _FlexFrameLayout>, Spacer)>);
    _ConditionalContent<>.init(storage:)();
    outlined release of _ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>((uint64_t)v31);
  }
  memcpy(v39, v27, 0x122uLL);
  return memcpy(a2, v39, 0x122uLL);
}

double VideoMessageControlsView.TopControlsView.iPadPadded(using:)@<D0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  _OWORD *v5;
  char v6;
  void (*v7)(_OWORD *__return_ptr);
  id v8;
  unsigned int v9;
  int v10;
  int v11;
  uint64_t (*v12)(void);
  id v13;
  double result;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int16 v19;
  char v20;
  _OWORD v21[5];
  __int16 v22;
  char v23;
  uint64_t v24;
  char v25;
  _OWORD v26[2];

  v2 = v1;
  v4 = *v1;
  v5 = v1 + 2;
  v6 = v1[1] & 1;
  if (static Platform.current.getter() == 1)
  {
    v26[0] = *v5;
    v7 = *(void (**)(_OWORD *__return_ptr))((*MEMORY[0x1E0DEEDD8] & **((_QWORD **)&v26[0] + 1)) + 0x120);
    v8 = *((id *)&v26[0] + 1);
    v7(v21);
    outlined release of ObservedObject<VideoMessagePlayerViewModel>((uint64_t)v26);
    if ((v21[0] & 1) != 0)
    {
      GeometryProxy.safeAreaInsets.getter();
      outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(v4, v6);
      specialized Environment.wrappedValue.getter();
      outlined consume of Environment<CGFloat>.Content(v4, v6);
      GeometryProxy.safeAreaInsets.getter();
      outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(v4, v6);
      specialized Environment.wrappedValue.getter();
      outlined consume of Environment<CGFloat>.Content(v4, v6);
      outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(v4, v6);
      specialized Environment.wrappedValue.getter();
      outlined consume of Environment<CGFloat>.Content(v4, v6);
      GeometryProxy.safeAreaInsets.getter();
      outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(v4, v6);
    }
    else
    {
      outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(v4, v6);
      specialized Environment.wrappedValue.getter();
      outlined consume of Environment<CGFloat>.Content(v4, v6);
      outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(v4, v6);
      specialized Environment.wrappedValue.getter();
      specialized Environment.wrappedValue.getter();
    }
    specialized Environment.wrappedValue.getter();
    outlined consume of Environment<CGFloat>.Content(v4, v6);
    static Edge.Set.all.getter();
    outlined retain of ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>((uint64_t)v26);
    outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(v4, v6);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<PlaceholderContentView<ModalOverlayTransition>, _OpacityEffect>, _BlurEffect>, _ScaleEffect> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, (uint64_t (*)(void))lazy protocol witness table accessor for type VideoMessageControlsView.TopControlsView and conformance VideoMessageControlsView.TopControlsView, MEMORY[0x1E0CD9758]);
    _ConditionalContent<>.init(storage:)();
  }
  else
  {
    v9 = static Edge.Set.top.getter();
    v10 = MEMORY[0x1C3B71FFC](0);
    v11 = MEMORY[0x1C3B71FFC]();
    if (MEMORY[0x1C3B71FFC](v11 & v9) != v9)
      MEMORY[0x1C3B71FFC](v10 | v9);
    GeometryProxy.safeAreaInsets.getter();
    v26[0] = *v5;
    v12 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **((_QWORD **)&v26[0] + 1)) + 0xC0);
    v13 = *((id *)&v26[0] + 1);
    v12();
    outlined release of ObservedObject<VideoMessagePlayerViewModel>((uint64_t)v26);
    EdgeInsets.init(_all:)();
    v24 = *v2;
    v25 = *((_BYTE *)v2 + 8);
    outlined retain of ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>((uint64_t)v26);
    outlined retain of Environment<CGFloat>((uint64_t)&v24);
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>);
  lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>> and conformance <> _ConditionalContent<A, B>();
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<PlaceholderContentView<ModalOverlayTransition>, _OpacityEffect>, _BlurEffect>, _ScaleEffect> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, (uint64_t (*)(void))lazy protocol witness table accessor for type VideoMessageControlsView.TopControlsView and conformance VideoMessageControlsView.TopControlsView, MEMORY[0x1E0CD9758]);
  _ConditionalContent<>.init(storage:)();
  result = *(double *)v21;
  v15 = v21[1];
  v16 = v21[2];
  v17 = v21[3];
  v18 = v21[4];
  v19 = v22;
  v20 = v23;
  *(_OWORD *)a1 = v21[0];
  *(_OWORD *)(a1 + 16) = v15;
  *(_OWORD *)(a1 + 32) = v16;
  *(_OWORD *)(a1 + 48) = v17;
  *(_OWORD *)(a1 + 64) = v18;
  *(_WORD *)(a1 + 80) = v19;
  *(_BYTE *)(a1 + 82) = v20;
  return result;
}

double VideoMessagePlayerViewModel.topControlsOpacity.getter()
{
  _QWORD *v0;
  _QWORD *v1;
  char v2;
  double result;

  v1 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  if (!(*(unsigned __int8 (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))())
    return 1.0;
  v2 = (*(uint64_t (**)(void))((*v1 & *v0) + 0xF0))();
  result = 1.0;
  if (!v2)
    return 0.0;
  return result;
}

uint64_t closure #1 in closure #1 in closure #1 in closure #1 in VideoMessageControlsView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v10;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD __src[16];
  _QWORD v19[16];
  char v20;
  _QWORD v21[2];
  char v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;

  v2 = *(void **)(a1 + *(int *)(type metadata accessor for VideoMessageControlsView(0) + 28) + 8);
  type metadata accessor for VideoMessagePlayerViewModel(0);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type VideoMessagePlayerViewModel and conformance VideoMessagePlayerViewModel, (void (*)(uint64_t))type metadata accessor for VideoMessagePlayerViewModel);
  v3 = v2;
  v4 = ObservedObject.init(wrappedValue:)();
  v6 = v5;
  State.init(wrappedValue:)();
  v7 = v19[0];
  v8 = v19[1];
  static Alignment.trailing.getter();
  _FrameLayout.init(width:height:alignment:)();
  v10 = static Edge.Set.all.getter();
  __src[0] = v4;
  __src[1] = v6;
  LOBYTE(__src[2]) = v19[0];
  __src[3] = v19[1];
  __src[4] = v12;
  LOBYTE(__src[5]) = v13;
  __src[6] = v14;
  LOBYTE(__src[7]) = v15;
  __src[8] = v16;
  __src[9] = v17;
  LOBYTE(__src[10]) = v10;
  __src[11] = 0x404D000000000000;
  __src[12] = 0;
  __src[13] = 0;
  __src[14] = 0x402A000000000000;
  LOBYTE(__src[15]) = 0;
  v20 = 1;
  memcpy((char *)v19 + 7, __src, 0x79uLL);
  *(_QWORD *)a2 = 0;
  *(_BYTE *)(a2 + 8) = 1;
  memcpy((void *)(a2 + 9), v19, 0x80uLL);
  v21[0] = v4;
  v21[1] = v6;
  v22 = v7;
  v23 = v8;
  v24 = v12;
  v25 = v13;
  v26 = v14;
  v27 = v15;
  v28 = v16;
  v29 = v17;
  v30 = v10;
  v31 = 0x404D000000000000;
  v32 = 0;
  v33 = 0;
  v34 = 0x402A000000000000;
  v35 = 0;
  outlined retain of ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>((uint64_t)__src);
  return outlined release of ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>((uint64_t)v21);
}

uint64_t AnimatedSaveButton.init(videoMessageViewModel:showsTitle:)()
{
  type metadata accessor for VideoMessagePlayerViewModel(0);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type VideoMessagePlayerViewModel and conformance VideoMessagePlayerViewModel, (void (*)(uint64_t))type metadata accessor for VideoMessagePlayerViewModel);
  OUTLINED_FUNCTION_64();
  ObservedObject.init(wrappedValue:)();
  OUTLINED_FUNCTION_79_19();
  return OUTLINED_FUNCTION_64();
}

void closure #2 in closure #1 in closure #1 in VideoMessageControlsView.body.getter(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  int *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  void (*v46)(_QWORD *__return_ptr);
  _QWORD *v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  unsigned int v51;
  unsigned int v52;
  uint64_t v53;
  int v54;
  int v55;
  unsigned __int8 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unsigned int v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(uint64_t, uint64_t, uint64_t);
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  double v85;
  double v86;
  double v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  _QWORD *v91;
  unsigned __int8 (*v92)(void);
  _QWORD *v93;
  double v94;
  uint64_t v95;
  _QWORD *v96;
  unsigned __int8 (*v97)(void);
  _QWORD *v98;
  BOOL v99;
  uint64_t KeyPath;
  uint64_t v101;
  uint64_t v102;
  uint64_t *v103;
  id v104;
  double v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  int EnumTagSinglePayload;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  void *v117;
  uint64_t v118;
  void *v119;
  uint64_t v120;
  char v121;
  void (*v122)(char *, uint64_t);
  uint64_t v123;
  uint64_t v124;
  char v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  void (*v134)(char *, uint64_t);
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  char *v164;
  _QWORD v165[30];
  char v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char v171;
  char v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  char v177;

  v160 = a3;
  v161 = a2;
  v4 = type metadata accessor for VideoMessageControlsView(0);
  MEMORY[0x1E0C80A78](v4);
  v144 = (uint64_t)&v138 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v147 = type metadata accessor for UserInterfaceSizeClass();
  v157 = *(_QWORD *)(v147 - 8);
  MEMORY[0x1E0C80A78](v147);
  v143 = (char *)&v138 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v155 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (UserInterfaceSizeClass?, UserInterfaceSizeClass?));
  MEMORY[0x1E0C80A78](v155);
  v139 = (uint64_t)&v138 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v153 = (uint64_t)&v138 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UserInterfaceSizeClass?);
  MEMORY[0x1E0C80A78](v10);
  v138 = (uint64_t)&v138 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v141 = (uint64_t)&v138 - v13;
  MEMORY[0x1E0C80A78](v14);
  v142 = (uint64_t)&v138 - v15;
  MEMORY[0x1E0C80A78](v16);
  v140 = (uint64_t)&v138 - v17;
  MEMORY[0x1E0C80A78](v18);
  v156 = (uint64_t)&v138 - v19;
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v138 - v21;
  v158 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>>.Storage);
  MEMORY[0x1E0C80A78](v158);
  v159 = (char *)&v138 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>);
  MEMORY[0x1E0C80A78](v24);
  v26 = (uint64_t *)((char *)&v138 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v27);
  v29 = (uint64_t *)((char *)&v138 - v28);
  v30 = (int *)type metadata accessor for VideoMessageControlsView.LocalBottomControlsView(0);
  MEMORY[0x1E0C80A78](v30);
  v32 = (char *)&v138 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v146 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>);
  MEMORY[0x1E0C80A78](v146);
  v150 = (uint64_t)&v138 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v148 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>);
  MEMORY[0x1E0C80A78](v148);
  v151 = (uint64_t)&v138 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v163 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>);
  MEMORY[0x1E0C80A78](v163);
  v149 = (char *)&v138 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v36);
  v152 = (char *)&v138 - v37;
  v38 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>>);
  MEMORY[0x1E0C80A78](v38);
  v164 = (char *)&v138 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v40);
  v162 = (char *)&v138 - v41;
  v42 = v4;
  v43 = *(int *)(v4 + 28);
  v44 = a1;
  v145 = a1 + v43;
  v45 = *(_QWORD **)(a1 + v43 + 8);
  v46 = *(void (**)(_QWORD *__return_ptr))((*MEMORY[0x1E0DEEDD8] & *v45) + 0x120);
  v47 = v45;
  v46(v165);

  if ((v165[0] & 1) != 0)
  {
    v151 = v42;
    v152 = v22;
    v48 = v147;
    v154 = v44;
    type metadata accessor for VideoMessagePlayerViewModel(0);
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type VideoMessagePlayerViewModel and conformance VideoMessagePlayerViewModel, (void (*)(uint64_t))type metadata accessor for VideoMessagePlayerViewModel);
    v49 = v47;
    v148 = ObservedObject.init(wrappedValue:)();
    v149 = (char *)v50;
    v51 = static Edge.Set.leading.getter();
    v52 = static Edge.Set.trailing.getter();
    v53 = MEMORY[0x1C3B71FFC](0);
    v54 = MEMORY[0x1C3B71FFC]();
    if (MEMORY[0x1C3B71FFC](v54 & v51) != v51)
      v53 = MEMORY[0x1C3B71FFC](v53 | v51);
    v55 = MEMORY[0x1C3B71FFC](v53);
    v56 = MEMORY[0x1C3B71FFC](v55 & v52);
    v57 = v157;
    if (v56 != v52)
      LODWORD(v53) = MEMORY[0x1C3B71FFC](v53 | v52);
    LODWORD(v150) = v53;
    EdgeInsets.init(_all:)();
    v59 = v58;
    v61 = v60;
    v63 = v62;
    v65 = v64;
    v66 = static Edge.Set.bottom.getter();
    LODWORD(v67) = MEMORY[0x1C3B71FFC](0);
    v68 = MEMORY[0x1C3B71FFC]();
    if (MEMORY[0x1C3B71FFC](v68 & v66) != v66)
      LODWORD(v67) = MEMORY[0x1C3B71FFC](v67 | v66);
    VideoMessageControlsView.buttonBottomPaddingDivisor.getter();
    GeometryProxy.size.getter();
    EdgeInsets.init(_all:)();
    v70 = v69;
    v72 = v71;
    v74 = v73;
    v76 = v75;
    v77 = (uint64_t)v152;
    specialized Environment.wrappedValue.getter();
    v78 = *MEMORY[0x1E0CDC160];
    v79 = *(void (**)(uint64_t, uint64_t, uint64_t))(v57 + 104);
    v80 = v156;
    v79(v156, v78, v48);
    __swift_storeEnumTagSinglePayload(v80, 0, 1, v48);
    v81 = v153;
    v82 = v153 + *(int *)(v155 + 48);
    outlined init with copy of Participant.ScreenInfo?(v77, v153, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    outlined init with copy of Participant.ScreenInfo?(v80, v82, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    if (__swift_getEnumTagSinglePayload(v81, 1, v48) == 1)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v80, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v77, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
      if (__swift_getEnumTagSinglePayload(v82, 1, v48) == 1)
      {
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v81, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
        v83 = v144;
        _s15ConversationKit11ParticipantVWOcTm_2(v154, v144, type metadata accessor for VideoMessageControlsView);
LABEL_20:
        v125 = v67;
        v126 = v151;
        v127 = v142;
        specialized Environment.wrappedValue.getter();
        v128 = v141;
        v79(v141, v78, v48);
        __swift_storeEnumTagSinglePayload(v128, 0, 1, v48);
        v129 = v139;
        v130 = v139 + *(int *)(v155 + 48);
        outlined init with copy of Participant.ScreenInfo?(v127, v139, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
        outlined init with copy of Participant.ScreenInfo?(v128, v130, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
        if (__swift_getEnumTagSinglePayload(v129, 1, v48) == 1)
        {
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v128, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v127, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
          outlined destroy of AccountUpdateNotice(v83, type metadata accessor for VideoMessageControlsView);
          if (__swift_getEnumTagSinglePayload(v130, 1, v48) == 1)
          {
            outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v129, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
            v117 = v159;
            v109 = v160;
            v118 = v148;
            v119 = v149;
            LOBYTE(v67) = v125;
LABEL_27:
            v116 = *(_QWORD *)(v154 + *(int *)(v126 + 44));
            goto LABEL_29;
          }
        }
        else
        {
          v131 = v138;
          outlined init with copy of Participant.ScreenInfo?(v129, v138, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
          if (__swift_getEnumTagSinglePayload(v130, 1, v48) != 1)
          {
            v67 = v157;
            v132 = v143;
            (*(void (**)(char *, uint64_t, uint64_t))(v157 + 32))(v143, v130, v48);
            lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UserInterfaceSizeClass and conformance UserInterfaceSizeClass, (void (*)(uint64_t))MEMORY[0x1E0CDC170]);
            LODWORD(v161) = dispatch thunk of static Equatable.== infix(_:_:)();
            v133 = v131;
            v134 = *(void (**)(char *, uint64_t))(v67 + 8);
            v134(v132, v48);
            outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v141, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
            outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v142, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
            outlined destroy of AccountUpdateNotice(v83, type metadata accessor for VideoMessageControlsView);
            v134((char *)v133, v48);
            v126 = v151;
            outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v129, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
            v117 = v159;
            v109 = v160;
            v118 = v148;
            v119 = v149;
            LOBYTE(v67) = v125;
            if ((v161 & 1) == 0)
            {
              v116 = 0x7FF0000000000000;
              goto LABEL_29;
            }
            goto LABEL_27;
          }
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v141, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v142, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
          outlined destroy of AccountUpdateNotice(v83, type metadata accessor for VideoMessageControlsView);
          (*(void (**)(uint64_t, uint64_t))(v157 + 8))(v131, v48);
        }
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v129, &demangling cache variable for type metadata for (UserInterfaceSizeClass?, UserInterfaceSizeClass?));
        v116 = 0x7FF0000000000000;
        v117 = v159;
        v109 = v160;
        v118 = v148;
        v119 = v149;
        LOBYTE(v67) = v125;
LABEL_29:
        v165[28] = v118;
        v165[29] = v119;
        v166 = v150;
        v167 = v59;
        v168 = v61;
        v169 = v63;
        v170 = v65;
        v171 = 0;
        v172 = v67;
        v173 = v70;
        v174 = v72;
        v175 = v74;
        v176 = v76;
        v177 = 0;
        v135 = static Alignment.center.getter();
        specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v165, 0, 1, 0, 1, v116, 0, 0, 1, 0, 1, 0, 1, v135, v136);

        memcpy(v117, v165, 0xE0uLL);
        swift_storeEnumTagMultiPayload();
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>);
        lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<PlaceholderContentView<ModalOverlayTransition>, _OpacityEffect>, _BlurEffect>, _ScaleEffect> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, (uint64_t (*)(void))lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>, MEMORY[0x1E0CD9728]);
        lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<PlaceholderContentView<ModalOverlayTransition>, _OpacityEffect>, _BlurEffect>, _ScaleEffect> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>, lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout> and conformance <> ModifiedContent<A, B>, MEMORY[0x1E0CDA228]);
        v111 = (uint64_t)v162;
        _ConditionalContent<>.init(storage:)();
        v110 = (uint64_t)v164;
        goto LABEL_30;
      }
    }
    else
    {
      v112 = v140;
      outlined init with copy of Participant.ScreenInfo?(v81, v140, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
      EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v82, 1, v48);
      v114 = v81;
      v115 = v143;
      if (EnumTagSinglePayload != 1)
      {
        LODWORD(v161) = v67;
        v67 = v112;
        v120 = v157;
        (*(void (**)(char *, uint64_t, uint64_t))(v157 + 32))(v143, v82, v48);
        lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UserInterfaceSizeClass and conformance UserInterfaceSizeClass, (void (*)(uint64_t))MEMORY[0x1E0CDC170]);
        v121 = dispatch thunk of static Equatable.== infix(_:_:)();
        v122 = *(void (**)(char *, uint64_t))(v120 + 8);
        v122(v115, v48);
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v156, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v152, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
        v123 = v67;
        LOBYTE(v67) = v161;
        v122((char *)v123, v48);
        v124 = v154;
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v114, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
        v83 = v144;
        _s15ConversationKit11ParticipantVWOcTm_2(v124, v144, type metadata accessor for VideoMessageControlsView);
        if ((v121 & 1) != 0)
          goto LABEL_20;
LABEL_18:
        outlined destroy of AccountUpdateNotice(v83, type metadata accessor for VideoMessageControlsView);
        v116 = 0x7FF0000000000000;
        v117 = v159;
        v109 = v160;
        v118 = v148;
        v119 = v149;
        goto LABEL_29;
      }
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v156, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v152, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
      (*(void (**)(uint64_t, uint64_t))(v157 + 8))(v112, v48);
      v81 = v114;
    }
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v81, &demangling cache variable for type metadata for (UserInterfaceSizeClass?, UserInterfaceSizeClass?));
    v83 = v144;
    _s15ConversationKit11ParticipantVWOcTm_2(v154, v144, type metadata accessor for VideoMessageControlsView);
    goto LABEL_18;
  }
  v84 = v47;
  v85 = VideoMessageControlsView.buttonBottomPaddingDivisor.getter();
  GeometryProxy.size.getter();
  v87 = v86 - (1.0 - v85) * v86 + -16.0;
  *v29 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
  swift_storeEnumTagMultiPayload();
  *v26 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  type metadata accessor for VideoMessagePlayerViewModel(0);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type VideoMessagePlayerViewModel and conformance VideoMessagePlayerViewModel, (void (*)(uint64_t))type metadata accessor for VideoMessagePlayerViewModel);
  *(_QWORD *)v32 = ObservedObject.init(wrappedValue:)();
  *((_QWORD *)v32 + 1) = v88;
  *((_QWORD *)v32 + 2) = swift_getKeyPath();
  v32[24] = 0;
  outlined init with take of Participant.VideoInfo?((uint64_t)v29, (uint64_t)&v32[v30[6]], &demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>);
  outlined init with take of Participant.VideoInfo?((uint64_t)v26, (uint64_t)&v32[v30[7]], &demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>);
  *(double *)&v32[v30[8]] = v87;
  v89 = v145;
  v90 = *(_QWORD **)(v145 + 8);
  v91 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v92 = *(unsigned __int8 (**)(void))((*MEMORY[0x1E0DEEDD8] & *v90) + 0xF0);
  v93 = v90;
  LODWORD(v92) = v92();

  if ((_DWORD)v92 == 4)
    v94 = 0.1;
  else
    v94 = 1.0;
  v95 = v150;
  _s15ConversationKit11ParticipantVWOcTm_2((uint64_t)v32, v150, type metadata accessor for VideoMessageControlsView.LocalBottomControlsView);
  *(double *)(v95 + *(int *)(v146 + 36)) = v94;
  outlined destroy of AccountUpdateNotice((uint64_t)v32, type metadata accessor for VideoMessageControlsView.LocalBottomControlsView);
  v96 = *(_QWORD **)(v89 + 8);
  v97 = *(unsigned __int8 (**)(void))((*v91 & *v96) + 0xF0);
  v98 = v96;
  LODWORD(v97) = v97();

  v99 = (_DWORD)v97 == 4;
  KeyPath = swift_getKeyPath();
  v101 = swift_allocObject();
  *(_BYTE *)(v101 + 16) = v99;
  v102 = v151;
  outlined init with copy of Participant.ScreenInfo?(v95, v151, &demangling cache variable for type metadata for ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>);
  v103 = (uint64_t *)(v102 + *(int *)(v148 + 36));
  *v103 = KeyPath;
  v103[1] = (uint64_t)closure #1 in View.disabled(_:)partial apply;
  v103[2] = v101;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v95, &demangling cache variable for type metadata for ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>);
  v104 = *(id *)(v89 + 8);
  v105 = VideoMessagePlayerViewModel.sendButtonOpacity.getter();

  v106 = (uint64_t)v149;
  outlined init with copy of Participant.ScreenInfo?(v102, (uint64_t)v149, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>);
  *(double *)(v106 + *(int *)(v163 + 36)) = v105;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v102, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>);
  v107 = (uint64_t)v152;
  outlined init with take of Participant.VideoInfo?(v106, (uint64_t)v152, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>);
  outlined init with copy of Participant.ScreenInfo?(v107, (uint64_t)v159, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>);
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>);
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<PlaceholderContentView<ModalOverlayTransition>, _OpacityEffect>, _BlurEffect>, _ScaleEffect> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, (uint64_t (*)(void))lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>, MEMORY[0x1E0CD9728]);
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<PlaceholderContentView<ModalOverlayTransition>, _OpacityEffect>, _BlurEffect>, _ScaleEffect> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>, lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout> and conformance <> ModifiedContent<A, B>, MEMORY[0x1E0CDA228]);
  v108 = v162;
  _ConditionalContent<>.init(storage:)();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v107, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>);
  v109 = v160;
  v110 = (uint64_t)v164;
  v111 = (uint64_t)v108;
LABEL_30:
  outlined init with copy of Participant.ScreenInfo?(v111, v110, &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>>);
  *(_QWORD *)v109 = 0;
  *(_BYTE *)(v109 + 8) = 1;
  v137 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>>));
  outlined init with copy of Participant.ScreenInfo?(v110, v109 + *(int *)(v137 + 48), &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>>);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v111, &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>>);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v110, &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>>);
}

BOOL closure #3 in closure #1 in closure #1 in VideoMessageControlsView.body.getter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  void (*v30)(_BYTE *, uint64_t, uint64_t);
  uint64_t v31;
  int EnumTagSinglePayload;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  uint64_t v36;
  _BYTE *v37;
  void (*v38)(_BYTE *, uint64_t);
  _BYTE *v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v45;
  _BYTE *v46;
  void (*v47)(_BYTE *, uint64_t);
  _QWORD *v48;
  void (*v49)(uint64_t *__return_ptr);
  _QWORD *v50;
  _BYTE v51[12];
  int v52;
  _BYTE *v53;
  _BYTE *v54;
  uint64_t v55;
  _BYTE *v56;
  _BYTE *v57;
  uint64_t v58;
  _BYTE *v59;
  uint64_t v60;
  _BYTE *v61;
  uint64_t v62;
  _BYTE *v63;
  uint64_t v64;

  v2 = type metadata accessor for VideoMessageControlsView(0);
  MEMORY[0x1E0C80A78](v2);
  v63 = &v51[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v61 = &v51[-v5];
  v6 = type metadata accessor for UserInterfaceSizeClass();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v54 = &v51[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (UserInterfaceSizeClass?, UserInterfaceSizeClass?));
  MEMORY[0x1E0C80A78](v9);
  v56 = &v51[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v11);
  v13 = &v51[-v12];
  v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UserInterfaceSizeClass?);
  MEMORY[0x1E0C80A78](v14);
  v53 = &v51[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v16);
  v59 = &v51[-v17];
  MEMORY[0x1E0C80A78](v18);
  v57 = &v51[-v19];
  MEMORY[0x1E0C80A78](v20);
  v22 = &v51[-v21];
  MEMORY[0x1E0C80A78](v23);
  v25 = &v51[-v24];
  MEMORY[0x1E0C80A78](v26);
  v28 = &v51[-v27];
  v58 = v2;
  v62 = a1;
  specialized Environment.wrappedValue.getter();
  v29 = *MEMORY[0x1E0CDC160];
  v60 = v7;
  v30 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 104);
  v30(v25, v29, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)v25, 0, 1, v6);
  v55 = v9;
  v31 = (uint64_t)&v13[*(int *)(v9 + 48)];
  outlined init with copy of Participant.ScreenInfo?((uint64_t)v28, (uint64_t)v13, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  outlined init with copy of Participant.ScreenInfo?((uint64_t)v25, v31, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v6) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v25, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v28, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v31, 1, v6);
    v33 = (uint64_t)v63;
    if (EnumTagSinglePayload == 1)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v13, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
      v35 = v61;
      v34 = v62;
      _s15ConversationKit11ParticipantVWOcTm_2(v62, (uint64_t)v61, type metadata accessor for VideoMessageControlsView);
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  outlined init with copy of Participant.ScreenInfo?((uint64_t)v13, (uint64_t)v22, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  if (__swift_getEnumTagSinglePayload(v31, 1, v6) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v25, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v28, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    (*(void (**)(_BYTE *, uint64_t))(v60 + 8))(v22, v6);
    v33 = (uint64_t)v63;
LABEL_6:
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v13, &demangling cache variable for type metadata for (UserInterfaceSizeClass?, UserInterfaceSizeClass?));
    v35 = v61;
    v34 = v62;
    _s15ConversationKit11ParticipantVWOcTm_2(v62, (uint64_t)v61, type metadata accessor for VideoMessageControlsView);
LABEL_11:
    outlined destroy of AccountUpdateNotice((uint64_t)v35, type metadata accessor for VideoMessageControlsView);
LABEL_15:
    _s15ConversationKit11ParticipantVWOcTm_2(v34, v33, type metadata accessor for VideoMessageControlsView);
LABEL_16:
    outlined destroy of AccountUpdateNotice(v33, type metadata accessor for VideoMessageControlsView);
    return 1;
  }
  v36 = v60;
  v37 = v54;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v60 + 32))(v54, v31, v6);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UserInterfaceSizeClass and conformance UserInterfaceSizeClass, (void (*)(uint64_t))MEMORY[0x1E0CDC170]);
  v52 = dispatch thunk of static Equatable.== infix(_:_:)();
  v38 = *(void (**)(_BYTE *, uint64_t))(v36 + 8);
  v38(v37, v6);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v25, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v28, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  v38(v22, v6);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v13, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  v35 = v61;
  v34 = v62;
  _s15ConversationKit11ParticipantVWOcTm_2(v62, (uint64_t)v61, type metadata accessor for VideoMessageControlsView);
  v33 = (uint64_t)v63;
  if ((v52 & 1) == 0)
    goto LABEL_11;
LABEL_8:
  v39 = v57;
  specialized Environment.wrappedValue.getter();
  v40 = v59;
  v30(v59, v29, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)v40, 0, 1, v6);
  v41 = v56;
  v42 = (uint64_t)&v56[*(int *)(v55 + 48)];
  outlined init with copy of Participant.ScreenInfo?((uint64_t)v39, (uint64_t)v56, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  outlined init with copy of Participant.ScreenInfo?((uint64_t)v40, v42, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v41, 1, v6) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v40, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v39, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    outlined destroy of AccountUpdateNotice((uint64_t)v35, type metadata accessor for VideoMessageControlsView);
    if (__swift_getEnumTagSinglePayload(v42, 1, v6) == 1)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v41, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
      _s15ConversationKit11ParticipantVWOcTm_2(v34, v33, type metadata accessor for VideoMessageControlsView);
      goto LABEL_20;
    }
    goto LABEL_14;
  }
  v43 = v53;
  outlined init with copy of Participant.ScreenInfo?((uint64_t)v41, (uint64_t)v53, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  if (__swift_getEnumTagSinglePayload(v42, 1, v6) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v59, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v39, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    outlined destroy of AccountUpdateNotice((uint64_t)v35, type metadata accessor for VideoMessageControlsView);
    (*(void (**)(_BYTE *, uint64_t))(v60 + 8))(v43, v6);
LABEL_14:
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v41, &demangling cache variable for type metadata for (UserInterfaceSizeClass?, UserInterfaceSizeClass?));
    goto LABEL_15;
  }
  v45 = v60;
  v46 = v54;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v60 + 32))(v54, v42, v6);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UserInterfaceSizeClass and conformance UserInterfaceSizeClass, (void (*)(uint64_t))MEMORY[0x1E0CDC170]);
  LODWORD(v63) = dispatch thunk of static Equatable.== infix(_:_:)();
  v47 = *(void (**)(_BYTE *, uint64_t))(v45 + 8);
  v47(v46, v6);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v59, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v57, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  outlined destroy of AccountUpdateNotice((uint64_t)v35, type metadata accessor for VideoMessageControlsView);
  v47(v43, v6);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v41, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  _s15ConversationKit11ParticipantVWOcTm_2(v34, v33, type metadata accessor for VideoMessageControlsView);
  if ((v63 & 1) == 0)
    goto LABEL_16;
LABEL_20:
  v48 = *(_QWORD **)(v33 + *(int *)(v58 + 28) + 8);
  v49 = *(void (**)(uint64_t *__return_ptr))((*MEMORY[0x1E0DEEDD8] & *v48) + 0x120);
  v50 = v48;
  v49(&v64);

  outlined destroy of AccountUpdateNotice(v33, type metadata accessor for VideoMessageControlsView);
  return (v64 & 1) != 0;
}

void specialized View.conditionallyStacked<A>(with:condition:)(void (*a1)(void)@<X0>, void (*a2)(__n128)@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  int v15;
  uint64_t *v16;
  uint64_t v17;
  _QWORD v18[2];

  v18[1] = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>>)>>);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<HStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>>)>>, VStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>>)>>>.Storage);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>>)>>);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(v12);
  v15 = Axis.rawValue.getter();
  if (v15 == Axis.rawValue.getter())
  {
    *(_QWORD *)v14 = static VerticalAlignment.center.getter();
    *((_QWORD *)v14 + 1) = 0;
    v14[16] = 1;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_HStackLayout, TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>>)>>);
    a1();
    v16 = &demangling cache variable for type metadata for HStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>>)>>;
    outlined init with copy of Participant.ScreenInfo?((uint64_t)v14, (uint64_t)v10, &demangling cache variable for type metadata for HStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>>)>>);
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type HStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>>)>> and conformance HStack<A>, &demangling cache variable for type metadata for HStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>>)>>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type VStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>>)>> and conformance VStack<A>, &demangling cache variable for type metadata for VStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>>)>>);
    _ConditionalContent<>.init(storage:)();
    v17 = (uint64_t)v14;
  }
  else
  {
    *(_QWORD *)v7 = static HorizontalAlignment.center.getter();
    *((_QWORD *)v7 + 1) = 0;
    v7[16] = 1;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_VStackLayout, TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>>)>>);
    a1();
    v16 = &demangling cache variable for type metadata for VStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>>)>>;
    outlined init with copy of Participant.ScreenInfo?((uint64_t)v7, (uint64_t)v10, &demangling cache variable for type metadata for VStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>>)>>);
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type HStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>>)>> and conformance HStack<A>, &demangling cache variable for type metadata for HStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>>)>>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type VStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>>)>> and conformance VStack<A>, &demangling cache variable for type metadata for VStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>>)>>);
    _ConditionalContent<>.init(storage:)();
    v17 = (uint64_t)v7;
  }
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v17, v16);
}

void closure #4 in closure #1 in closure #1 in VideoMessageControlsView.body.getter(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  char *v13;
  char v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t KeyPath;
  uint64_t v19;
  void *v20;
  void *v21;
  _QWORD *v22;
  double v23;
  unsigned __int8 (*v24)(void);
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  char v38[16];
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  double v49;
  uint64_t v50;
  uint64_t (*v51)();
  uint64_t v52;

  v36 = a2;
  v35 = a3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>>>>);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v33 - v8;
  v10 = type metadata accessor for VideoMessageControlsView(0);
  v11 = a1 + *(int *)(v10 + 28);
  v12 = *(void **)(v11 + 8);
  v13 = (char *)(a1 + *(int *)(v10 + 32));
  v14 = *v13;
  v15 = *((_QWORD *)v13 + 1);
  v40 = v14;
  v41 = v15;
  v16 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
  State.projectedValue.getter();
  v17 = v42;
  v33 = v43;
  v34 = v44;
  KeyPath = swift_getKeyPath();
  type metadata accessor for VideoMessagePlayerViewModel(0);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type VideoMessagePlayerViewModel and conformance VideoMessagePlayerViewModel, (void (*)(uint64_t))type metadata accessor for VideoMessagePlayerViewModel);
  v19 = ObservedObject.init(wrappedValue:)();
  v21 = v20;
  v22 = *(id *)(v11 + 8);
  v23 = VideoMessagePlayerViewModel.playButtonOpacity.getter();

  v24 = *(unsigned __int8 (**)(void))((*MEMORY[0x1E0DEEDD8] & *v22) + 0xF0);
  v25 = v22;
  LODWORD(v24) = v24();

  LOBYTE(v25) = (_DWORD)v24 == 4;
  v26 = swift_getKeyPath();
  v27 = swift_allocObject();
  *(_BYTE *)(v27 + 16) = (_BYTE)v25;
  v42 = KeyPath;
  LOBYTE(v43) = 0;
  v44 = v19;
  v45 = v21;
  v46 = v17;
  v47 = v33;
  v48 = v34;
  v49 = v23;
  v50 = v26;
  v51 = closure #1 in View.disabled(_:)partial apply;
  v52 = v27;
  v39 = v36;
  v28 = static VerticalAlignment.bottom.getter();
  v37 = a1;
  specialized View.conditionalyOverlaid<A>(with:alignment:pinningTo:spacing:condition:)((void (*)(void))partial apply for closure #1 in closure #4 in closure #1 in closure #1 in VideoMessageControlsView.body.getter, (uint64_t)v38, v28, 0, 1, (uint64_t)partial apply for implicit closure #1 in closure #4 in closure #1 in closure #1 in VideoMessageControlsView.body.getter, (uint64_t)v9, 12.0);
  outlined consume of Environment<CGFloat>.Content(KeyPath, 0);
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  outlined init with copy of Participant.ScreenInfo?((uint64_t)v9, (uint64_t)v6, &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>>>>);
  v29 = v35;
  *v35 = 0;
  *((_BYTE *)v29 + 8) = 1;
  v30 = v29;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>>>>, Spacer));
  outlined init with copy of Participant.ScreenInfo?((uint64_t)v6, (uint64_t)v30 + *(int *)(v31 + 48), &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>>>>);
  v32 = (uint64_t)v30 + *(int *)(v31 + 64);
  *(_QWORD *)v32 = 0;
  *(_BYTE *)(v32 + 8) = 1;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v9, &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>>>>);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v6, &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>>>>);
}

double VideoMessagePlayerViewModel.playButtonOpacity.getter()
{
  _QWORD *v0;
  unsigned __int8 v1;
  double result;

  v1 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF0))() - 1;
  result = 0.0;
  if (v1 <= 3u)
    return dbl_1BD65FFE0[(char)v1];
  return result;
}

void closure #1 in closure #4 in closure #1 in closure #1 in VideoMessageControlsView.body.getter(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  id v9;
  Swift::String v10;
  Swift::String_optional v11;
  Swift::String v12;
  Swift::String v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t KeyPath;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  Swift::String *v26;
  Swift::String v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  Swift::String v32;
  Swift::String v33;
  Swift::String v34;
  Swift::String v35;

  v30 = a1;
  v31 = a2;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Material?>);
  MEMORY[0x1E0C80A78](v29);
  v3 = (uint64_t *)((char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Material?);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>);
  MEMORY[0x1E0C80A78](v28);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v35._object = (void *)0xE000000000000000;
  v10._object = (void *)0x80000001BD68C070;
  v10._countAndFlagsBits = 0xD000000000000023;
  v11.value._countAndFlagsBits = 0x61737265766E6F43;
  v11.value._object = (void *)0xEF74694B6E6F6974;
  v12._countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  v35._countAndFlagsBits = 0;
  v13 = NSLocalizedString(_:tableName:bundle:value:comment:)(v10, v11, (NSBundle)v9, v12, v35);

  v32 = v13;
  lazy protocol witness table accessor for type String and conformance String();
  v14 = Text.init<A>(_:)();
  v16 = v15;
  v18 = v17;
  v20 = v19 & 1;
  KeyPath = swift_getKeyPath();
  v22 = static HierarchicalShapeStyle.secondary.getter();
  v23 = swift_getKeyPath();
  static Material.regular.getter();
  v24 = type metadata accessor for Material();
  __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v24);
  outlined init with copy of Participant.ScreenInfo?((uint64_t)v6, (uint64_t)v3 + *(int *)(v29 + 28), &demangling cache variable for type metadata for Material?);
  *v3 = v23;
  outlined init with copy of Participant.ScreenInfo?((uint64_t)v3, (uint64_t)&v8[*(int *)(v28 + 36)], &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Material?>);
  *(_QWORD *)v8 = v14;
  *((_QWORD *)v8 + 1) = v16;
  v8[16] = v20;
  *((_QWORD *)v8 + 3) = v18;
  *((_QWORD *)v8 + 4) = KeyPath;
  *((_QWORD *)v8 + 5) = 1;
  v8[48] = 0;
  *((_DWORD *)v8 + 13) = v22;
  outlined copy of Text.Storage(v14, v16, v20);
  swift_bridgeObjectRetain();
  swift_retain();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v3, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Material?>);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v6, &demangling cache variable for type metadata for Material?);
  outlined consume of Text.Storage(v14, v16, v20);
  swift_release();
  swift_bridgeObjectRelease();
  GeometryProxy.size.getter();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  v25 = v31;
  outlined init with copy of Participant.ScreenInfo?((uint64_t)v8, v31, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>);
  v26 = (Swift::String *)(v25
                        + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>)
                                 + 36));
  v27 = v33;
  *v26 = v32;
  v26[1] = v27;
  v26[2] = v34;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v8, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>);
}

uint64_t implicit closure #1 in closure #4 in closure #1 in closure #1 in VideoMessageControlsView.body.getter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t (*v2)(void);
  _QWORD *v3;

  v1 = *(_QWORD **)(a1 + *(int *)(type metadata accessor for VideoMessageControlsView(0) + 28) + 8);
  v2 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x270);
  v3 = v1;
  LOBYTE(v2) = v2();

  return v2 & 1;
}

void specialized View.conditionalyOverlaid<A>(with:alignment:pinningTo:spacing:condition:)(void (*a1)(void)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X8>, double a8@<D0>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  void (*v28)(void);
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  void (*v43)(void);
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  const void *v48;
  uint64_t v49;
  uint64_t v50;

  v47 = a4;
  v49 = a7;
  v50 = a6;
  v45 = a5;
  v46 = a3;
  v43 = a1;
  v44 = a2;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>);
  MEMORY[0x1E0C80A78](v9);
  v42 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>>);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>>>);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v37 - v21;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>>>>.Storage);
  v24 = MEMORY[0x1E0C80A78](v23);
  v26 = (char *)&v37 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((((uint64_t (*)(__n128))v50)(v24) & 1) != 0)
  {
    v38 = v19;
    v39 = v22;
    v27 = (uint64_t)v42;
    v28 = v43;
    v40 = v14;
    v41 = v23;
    v50 = v17;
    if ((v45 & 1) != 0)
      v47 = static HorizontalAlignment.center.getter();
    v28();
    v29 = swift_allocObject();
    v30 = v46;
    *(_QWORD *)(v29 + 16) = v46;
    *(double *)(v29 + 24) = a8;
    outlined init with copy of Participant.ScreenInfo?(v27, (uint64_t)v13, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>);
    v31 = &v13[*(int *)(v11 + 36)];
    *(_QWORD *)v31 = v30;
    *((_QWORD *)v31 + 1) = partial apply for closure #1 in closure #1 in View.conditionalyOverlaid<A>(with:alignment:pinningTo:spacing:condition:);
    *((_QWORD *)v31 + 2) = v29;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v27, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>);
    outlined init with take of Participant.VideoInfo?((uint64_t)v13, (uint64_t)v16, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>);
    v32 = (uint64_t *)&v16[*(int *)(v40 + 36)];
    *v32 = v47;
    v32[1] = v30;
    v33 = v38;
    outlined init with copy of Participant.ScreenInfo?((uint64_t)v16, (uint64_t)&v38[*(int *)(v50 + 36)], &demangling cache variable for type metadata for _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>>);
    v34 = (uint64_t)v48;
    memcpy(v33, v48, 0x58uLL);
    outlined retain of ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>(v34);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v16, &demangling cache variable for type metadata for _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>>);
    v35 = (uint64_t)v39;
    outlined init with take of Participant.VideoInfo?((uint64_t)v33, (uint64_t)v39, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>>>);
    outlined init with copy of Participant.ScreenInfo?(v35, (uint64_t)v26, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>>>);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>>> and conformance <> ModifiedContent<A, B>();
    _ConditionalContent<>.init(storage:)();
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v35, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>>>);
  }
  else
  {
    v36 = (uint64_t)v48;
    memcpy(v26, v48, 0x58uLL);
    swift_storeEnumTagMultiPayload();
    outlined retain of ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>(v36);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>>> and conformance <> ModifiedContent<A, B>();
    _ConditionalContent<>.init(storage:)();
  }
}

void closure #5 in closure #1 in closure #1 in VideoMessageControlsView.body.getter(uint64_t a1@<X0>, void *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  _QWORD *v21;
  id v22;
  void *v23;
  __int128 v24;
  __int128 v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v34;
  id v35;
  uint64_t v36;
  char *v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;

  v54 = a3;
  v49 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ClipEffect<RoundedRectangle>);
  MEMORY[0x1E0C80A78](v49);
  v46 = (uint64_t)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for RoundedRectangle();
  MEMORY[0x1E0C80A78](v6);
  v8 = (_OWORD *)((char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v45 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<MovieScrubber, _ClipEffect<RoundedRectangle>>);
  MEMORY[0x1E0C80A78](v45);
  v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<MovieScrubber, _ClipEffect<RoundedRectangle>>, _FixedSizeLayout>);
  MEMORY[0x1E0C80A78](v50);
  v48 = (uint64_t)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<MovieScrubber, _ClipEffect<RoundedRectangle>>, _FixedSizeLayout>, _FrameLayout>);
  MEMORY[0x1E0C80A78](v53);
  v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v52 = (uint64_t)&v45 - v15;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier>);
  MEMORY[0x1E0C80A78](v16);
  v51 = (uint64_t)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v45 - v19;
  v47 = (uint64_t)&v45 - v19;
  v21 = *(id *)(a1 + *(int *)(type metadata accessor for VideoMessageControlsView(0) + 28) + 8);
  static VideoMessageControlsView.durationView(for:)(v21, (uint64_t)v20);

  type metadata accessor for VideoMessagePlayerViewModel(0);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type VideoMessagePlayerViewModel and conformance VideoMessagePlayerViewModel, (void (*)(uint64_t))type metadata accessor for VideoMessagePlayerViewModel);
  v22 = a2;
  v23 = (void *)ObservedObject.projectedValue.getter();
  swift_getKeyPath();
  ObservedObject.Wrapper.subscript.getter();
  swift_release();

  v24 = v55;
  v25 = v56;
  v26 = (char *)v8 + *(int *)(v6 + 20);
  v27 = *MEMORY[0x1E0CDB0C0];
  v28 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 104))(v26, v27, v28);
  __asm { FMOV            V0.2D, #8.0 }
  *v8 = _Q0;
  v34 = v46;
  _s15ConversationKit11ParticipantVWOcTm_2((uint64_t)v8, v46, (uint64_t (*)(_QWORD))MEMORY[0x1E0CDA088]);
  *(_WORD *)(v34 + *(int *)(v49 + 36)) = 256;
  outlined init with copy of Participant.ScreenInfo?(v34, (uint64_t)&v10[*(int *)(v45 + 36)], &demangling cache variable for type metadata for _ClipEffect<RoundedRectangle>);
  *(_QWORD *)v10 = v22;
  *(_OWORD *)(v10 + 8) = v24;
  *(_OWORD *)(v10 + 24) = v25;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  v35 = v22;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v34, &demangling cache variable for type metadata for _ClipEffect<RoundedRectangle>);
  outlined destroy of AccountUpdateNotice((uint64_t)v8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CDA088]);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  v36 = v48;
  outlined init with copy of Participant.ScreenInfo?((uint64_t)v10, v48, &demangling cache variable for type metadata for ModifiedContent<MovieScrubber, _ClipEffect<RoundedRectangle>>);
  *(_WORD *)(v36 + *(int *)(v50 + 36)) = 257;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v10, &demangling cache variable for type metadata for ModifiedContent<MovieScrubber, _ClipEffect<RoundedRectangle>>);
  static Alignment.bottom.getter();
  _FrameLayout.init(width:height:alignment:)();
  outlined init with copy of Participant.ScreenInfo?(v36, (uint64_t)v13, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<MovieScrubber, _ClipEffect<RoundedRectangle>>, _FixedSizeLayout>);
  v37 = &v13[*(int *)(v53 + 36)];
  v38 = v56;
  *(_OWORD *)v37 = v55;
  *((_OWORD *)v37 + 1) = v38;
  *((_OWORD *)v37 + 2) = v57;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v36, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<MovieScrubber, _ClipEffect<RoundedRectangle>>, _FixedSizeLayout>);
  v39 = v52;
  outlined init with take of Participant.VideoInfo?((uint64_t)v13, v52, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<MovieScrubber, _ClipEffect<RoundedRectangle>>, _FixedSizeLayout>, _FrameLayout>);
  v40 = v47;
  v41 = v51;
  outlined init with copy of Participant.ScreenInfo?(v47, v51, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier>);
  outlined init with copy of Participant.ScreenInfo?(v39, (uint64_t)v13, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<MovieScrubber, _ClipEffect<RoundedRectangle>>, _FixedSizeLayout>, _FrameLayout>);
  v42 = v54;
  *v54 = 0;
  *((_BYTE *)v42 + 8) = 1;
  v43 = v42;
  v44 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Spacer, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier>, ModifiedContent<ModifiedContent<ModifiedContent<MovieScrubber, _ClipEffect<RoundedRectangle>>, _FixedSizeLayout>, _FrameLayout>));
  outlined init with copy of Participant.ScreenInfo?(v41, (uint64_t)v43 + *(int *)(v44 + 48), &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier>);
  outlined init with copy of Participant.ScreenInfo?((uint64_t)v13, (uint64_t)v43 + *(int *)(v44 + 64), &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<MovieScrubber, _ClipEffect<RoundedRectangle>>, _FixedSizeLayout>, _FrameLayout>);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v39, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<MovieScrubber, _ClipEffect<RoundedRectangle>>, _FixedSizeLayout>, _FrameLayout>);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v40, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier>);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v13, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<MovieScrubber, _ClipEffect<RoundedRectangle>>, _FixedSizeLayout>, _FrameLayout>);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v41, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier>);
}

void static VideoMessageControlsView.durationView(for:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t KeyPath;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _OWORD *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v53;
  uint64_t v54;
  uint64_t (*v55)(void);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  unint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;

  v67 = a2;
  v66 = type metadata accessor for RoundedRectangle();
  MEMORY[0x1E0C80A78](v66);
  v65 = (char *)&v57 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>);
  MEMORY[0x1E0C80A78](v61);
  v60 = (uint64_t)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>);
  MEMORY[0x1E0C80A78](v59);
  v9 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>);
  v10 = MEMORY[0x1E0C80A78](v63);
  v62 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = a1;
  v69 = (*(uint64_t (**)(__n128))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x150))(v10);
  v70 = v12;
  v64 = lazy protocol witness table accessor for type String and conformance String();
  v13 = Text.init<A>(_:)();
  v15 = v14;
  v17 = v16 & 1;
  v18 = (id)CEKMonospacedStylisticNumeralFontOfSizeAndStyle();
  Font.init(_:)();
  v19 = Text.font(_:)();
  v57 = v20;
  v58 = v21;
  v23 = v22;
  swift_release();
  v24 = v23 & 1;
  outlined consume of Text.Storage(v13, v15, v17);
  swift_bridgeObjectRelease();
  objc_msgSend((id)objc_opt_self(), sel__defaultTextInsets);
  v26 = v25;
  v28 = v27;
  v30 = v29;
  v32 = v31;
  LOBYTE(a1) = static Edge.Set.all.getter();
  v33 = static Color.white.getter();
  KeyPath = swift_getKeyPath();
  VideoMessagePlayerViewModel.durationStringBackground.getter((uint64_t)v7);
  v35 = static Alignment.center.getter();
  v37 = v36;
  v38 = v60;
  outlined init with copy of Participant.ScreenInfo?((uint64_t)v7, v60, &demangling cache variable for type metadata for _ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>);
  v39 = (uint64_t *)(v38 + *(int *)(v61 + 36));
  *v39 = v35;
  v39[1] = v37;
  v40 = v38;
  outlined init with copy of Participant.ScreenInfo?(v38, (uint64_t)&v9[*(int *)(v59 + 36)], &demangling cache variable for type metadata for _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>);
  v41 = v57;
  v42 = v58;
  *(_QWORD *)v9 = v19;
  *((_QWORD *)v9 + 1) = v41;
  v9[16] = v24;
  *((_QWORD *)v9 + 3) = v42;
  v9[32] = (char)a1;
  *((_QWORD *)v9 + 5) = v26;
  *((_QWORD *)v9 + 6) = v28;
  *((_QWORD *)v9 + 7) = v30;
  *((_QWORD *)v9 + 8) = v32;
  v9[72] = 0;
  *((_QWORD *)v9 + 10) = KeyPath;
  *((_QWORD *)v9 + 11) = v33;
  v43 = v41;
  outlined copy of Text.Storage(v19, v41, v24);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v40, &demangling cache variable for type metadata for _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v7, &demangling cache variable for type metadata for _ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>);
  outlined consume of Text.Storage(v19, v43, v24);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v44 = v65;
  v45 = &v65[*(int *)(v66 + 20)];
  v46 = *MEMORY[0x1E0CDB0E0];
  v47 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 104))(v45, v46, v47);
  __asm { FMOV            V0.2D, #2.0 }
  *v44 = _Q0;
  v53 = (uint64_t)v62;
  v54 = (uint64_t)&v62[*(int *)(v63 + 36)];
  v55 = MEMORY[0x1E0CDA088];
  _s15ConversationKit11ParticipantVWOcTm_2((uint64_t)v44, v54, (uint64_t (*)(_QWORD))MEMORY[0x1E0CDA088]);
  *(_WORD *)(v54
           + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ClipEffect<RoundedRectangle>)
                    + 36)) = 256;
  outlined init with copy of Participant.ScreenInfo?((uint64_t)v9, v53, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>);
  outlined destroy of AccountUpdateNotice((uint64_t)v44, (uint64_t (*)(_QWORD))v55);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v9, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>);
  v69 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v68) + 0x2F0))();
  v70 = v56;
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>> and conformance <> ModifiedContent<A, B>();
  View.accessibilityLabel<A>(_:)();
  swift_bridgeObjectRelease();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v53, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>);
}

uint64_t key path getter for VideoMessagePlayerViewModel.durationString : VideoMessagePlayerViewModel@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x150))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t key path setter for VideoMessagePlayerViewModel.durationString : VideoMessagePlayerViewModel(uint64_t *a1, _QWORD **a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = *(uint64_t (**)(uint64_t, uint64_t))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x158);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

double VideoMessagePlayerViewModel.sendButtonOpacity.getter()
{
  uint64_t *v0;
  char v1;
  double result;

  v1 = OUTLINED_FUNCTION_109_1(*v0);
  result = 1.0;
  if (!v1)
    return 0.0;
  return result;
}

void closure #2 in closure #1 in VideoMessageControlsView.body.getter(uint64_t a1)
{
  _QWORD *v1;
  unsigned __int8 (*v2)(void);
  _QWORD *v3;
  uint64_t v4;

  v1 = *(_QWORD **)(a1 + *(int *)(type metadata accessor for VideoMessageControlsView(0) + 28) + 8);
  v2 = *(unsigned __int8 (**)(void))((*MEMORY[0x1E0DEEDD8] & *v1) + 0xF0);
  v3 = v1;
  LODWORD(v2) = v2();

  if (!(_DWORD)v2)
  {
    MEMORY[0x1E0C80A78](v4);
    static Animation.default.getter();
    withAnimation<A>(_:_:)();
    swift_release();
  }
}

void closure #1 in closure #2 in closure #1 in VideoMessageControlsView.body.getter(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  void (*v3)(uint64_t *__return_ptr);
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD **)(a1 + *(int *)(type metadata accessor for VideoMessageControlsView(0) + 28) + 8);
  v2 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v3 = *(void (**)(uint64_t *__return_ptr))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x120);
  v4 = v1;
  v3(&v6);
  if ((_BYTE)v6)
    v5 = 1;
  else
    v5 = 3;
  (*(void (**)(uint64_t))((*v2 & *v4) + 0xF8))(v5);

}

void specialized VideoMessageControlsView.backgroundOrCurtainAppliedToView<A>(_:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  _QWORD *v19;
  uint64_t (*v20)(void);
  _QWORD *v21;
  char v22;
  char *v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  BOOL v29;
  uint64_t v30;
  char v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v37 = a1;
  v39 = a2;
  v38 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<GeometryReader<<<opaque return type of View.onTapGesture(count:perform:)>>.0>, _EnvironmentKeyWritingModifier<ColorScheme>>, _BackgroundStyleModifier<Color>>);
  MEMORY[0x1E0C80A78](v38);
  v4 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v35 = (uint64_t)&v34 - v6;
  v36 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<GeometryReader<<<opaque return type of View.onTapGesture(count:perform:)>>.0>, _EnvironmentKeyWritingModifier<ColorScheme>>, _BackgroundStyleModifier<Material>>, ModifiedContent<ModifiedContent<GeometryReader<<<opaque return type of View.onTapGesture(count:perform:)>>.0>, _EnvironmentKeyWritingModifier<ColorScheme>>, _BackgroundStyleModifier<Color>>>.Storage);
  MEMORY[0x1E0C80A78](v36);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Material();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<GeometryReader<<<opaque return type of View.onTapGesture(count:perform:)>>.0>, _EnvironmentKeyWritingModifier<ColorScheme>>, _BackgroundStyleModifier<Material>>);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v34 - v17;
  v19 = *(_QWORD **)(v2 + *(int *)(type metadata accessor for VideoMessageControlsView(0) + 28) + 8);
  v20 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v19) + 0x270);
  v21 = v19;
  LOBYTE(v20) = v20();

  if ((v20 & 1) != 0)
  {
    static Material.thin.getter();
    v22 = static Edge.Set.all.getter();
    v23 = &v15[*(int *)(v13 + 36)];
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v23, v12, v9);
    v23[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _BackgroundStyleModifier<Material>)
               + 36)] = v22;
    outlined init with copy of Participant.ScreenInfo?(v37, (uint64_t)v15, &demangling cache variable for type metadata for ModifiedContent<GeometryReader<<<opaque return type of View.onTapGesture(count:perform:)>>.0>, _EnvironmentKeyWritingModifier<ColorScheme>>);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    outlined init with take of Participant.VideoInfo?((uint64_t)v15, (uint64_t)v18, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<GeometryReader<<<opaque return type of View.onTapGesture(count:perform:)>>.0>, _EnvironmentKeyWritingModifier<ColorScheme>>, _BackgroundStyleModifier<Material>>);
    outlined init with copy of Participant.ScreenInfo?((uint64_t)v18, (uint64_t)v8, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<GeometryReader<<<opaque return type of View.onTapGesture(count:perform:)>>.0>, _EnvironmentKeyWritingModifier<ColorScheme>>, _BackgroundStyleModifier<Material>>);
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<GeometryReader<<<opaque return type of View.onTapGesture(count:perform:)>>.0>, _EnvironmentKeyWritingModifier<ColorScheme>>, _BackgroundStyleModifier<Material>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<GeometryReader<<<opaque return type of View.onTapGesture(count:perform:)>>.0>, _EnvironmentKeyWritingModifier<ColorScheme>>, _BackgroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>();
    _ConditionalContent<>.init(storage:)();
    v24 = (uint64_t)v18;
    v25 = &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<GeometryReader<<<opaque return type of View.onTapGesture(count:perform:)>>.0>, _EnvironmentKeyWritingModifier<ColorScheme>>, _BackgroundStyleModifier<Material>>;
  }
  else
  {
    v26 = v37;
    v27 = v38;
    v28 = v21;
    v29 = VideoMessagePlayerViewModel.shouldShowTintedOverlay.getter();

    if (v29)
    {
      static Color.black.getter();
      v30 = Color.opacity(_:)();
      swift_release();
    }
    else
    {
      v30 = static Color.clear.getter();
    }
    v31 = static Edge.Set.all.getter();
    outlined init with copy of Participant.ScreenInfo?(v26, (uint64_t)v4, &demangling cache variable for type metadata for ModifiedContent<GeometryReader<<<opaque return type of View.onTapGesture(count:perform:)>>.0>, _EnvironmentKeyWritingModifier<ColorScheme>>);
    v32 = &v4[*(int *)(v27 + 36)];
    *(_QWORD *)v32 = v30;
    v32[8] = v31;
    v33 = v35;
    outlined init with take of Participant.VideoInfo?((uint64_t)v4, v35, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<GeometryReader<<<opaque return type of View.onTapGesture(count:perform:)>>.0>, _EnvironmentKeyWritingModifier<ColorScheme>>, _BackgroundStyleModifier<Color>>);
    outlined init with copy of Participant.ScreenInfo?(v33, (uint64_t)v8, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<GeometryReader<<<opaque return type of View.onTapGesture(count:perform:)>>.0>, _EnvironmentKeyWritingModifier<ColorScheme>>, _BackgroundStyleModifier<Color>>);
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<GeometryReader<<<opaque return type of View.onTapGesture(count:perform:)>>.0>, _EnvironmentKeyWritingModifier<ColorScheme>>, _BackgroundStyleModifier<Material>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<GeometryReader<<<opaque return type of View.onTapGesture(count:perform:)>>.0>, _EnvironmentKeyWritingModifier<ColorScheme>>, _BackgroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>();
    _ConditionalContent<>.init(storage:)();
    v24 = v33;
    v25 = &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<GeometryReader<<<opaque return type of View.onTapGesture(count:perform:)>>.0>, _EnvironmentKeyWritingModifier<ColorScheme>>, _BackgroundStyleModifier<Color>>;
  }
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v24, v25);
}

BOOL VideoMessagePlayerViewModel.shouldShowTintedOverlay.getter()
{
  _QWORD *v0;

  return (*(unsigned __int8 (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF0))() == 3
      && VideoMessagePlayerViewModel.hasRecording.getter();
}

void VideoMessagePlayerViewModel.durationStringBackground.getter(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  int v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v30;
  uint64_t (*v31)(void);
  uint64_t *v32;
  uint64_t v33;
  uint64_t (*v34)(void);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v44 = a1;
  v2 = type metadata accessor for Material();
  v39 = *(_QWORD *)(v2 - 8);
  v40 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ShapeView<RoundedRectangle, Material>);
  MEMORY[0x1E0C80A78](v43);
  v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v41 = (uint64_t)&v39 - v8;
  v42 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>.Storage);
  MEMORY[0x1E0C80A78](v42);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for RoundedRectangle();
  MEMORY[0x1E0C80A78](v11);
  v13 = (_OWORD *)((char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ShapeView<RoundedRectangle, Color>);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v39 - v19;
  v21 = (*(unsigned __int8 (**)(__n128))((*MEMORY[0x1E0DEEDD8] & *v1) + 0xF0))(v18);
  v22 = (char *)v13 + *(int *)(v11 + 20);
  v23 = *MEMORY[0x1E0CDB0C0];
  v24 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v22, v23, v24);
  __asm { FMOV            V0.2D, #6.0 }
  *v13 = _Q0;
  if (v21 == 2)
  {
    v30 = static Color.red.getter();
    v31 = MEMORY[0x1E0CDA088];
    _s15ConversationKit11ParticipantVWOcTm_2((uint64_t)v13, (uint64_t)v16, (uint64_t (*)(_QWORD))MEMORY[0x1E0CDA088]);
    *(_QWORD *)&v16[*(int *)(v14 + 52)] = v30;
    *(_WORD *)&v16[*(int *)(v14 + 56)] = 256;
    outlined destroy of AccountUpdateNotice((uint64_t)v13, (uint64_t (*)(_QWORD))v31);
    v32 = &demangling cache variable for type metadata for _ShapeView<RoundedRectangle, Color>;
    outlined init with take of Participant.VideoInfo?((uint64_t)v16, (uint64_t)v20, &demangling cache variable for type metadata for _ShapeView<RoundedRectangle, Color>);
    outlined init with copy of Participant.ScreenInfo?((uint64_t)v20, (uint64_t)v10, &demangling cache variable for type metadata for _ShapeView<RoundedRectangle, Color>);
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _ShapeView<RoundedRectangle, Color> and conformance _ShapeView<A, B>, &demangling cache variable for type metadata for _ShapeView<RoundedRectangle, Color>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _ShapeView<RoundedRectangle, Material> and conformance _ShapeView<A, B>, &demangling cache variable for type metadata for _ShapeView<RoundedRectangle, Material>);
    _ConditionalContent<>.init(storage:)();
    v33 = (uint64_t)v20;
  }
  else
  {
    static Material.ultraThin.getter();
    v34 = MEMORY[0x1E0CDA088];
    _s15ConversationKit11ParticipantVWOcTm_2((uint64_t)v13, (uint64_t)v6, (uint64_t (*)(_QWORD))MEMORY[0x1E0CDA088]);
    v35 = v43;
    v37 = v39;
    v36 = v40;
    (*(void (**)(char *, char *, uint64_t))(v39 + 16))(&v6[*(int *)(v43 + 52)], v4, v40);
    *(_WORD *)&v6[*(int *)(v35 + 56)] = 256;
    (*(void (**)(char *, uint64_t))(v37 + 8))(v4, v36);
    outlined destroy of AccountUpdateNotice((uint64_t)v13, (uint64_t (*)(_QWORD))v34);
    v32 = &demangling cache variable for type metadata for _ShapeView<RoundedRectangle, Material>;
    v38 = v41;
    outlined init with take of Participant.VideoInfo?((uint64_t)v6, v41, &demangling cache variable for type metadata for _ShapeView<RoundedRectangle, Material>);
    outlined init with copy of Participant.ScreenInfo?(v38, (uint64_t)v10, &demangling cache variable for type metadata for _ShapeView<RoundedRectangle, Material>);
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _ShapeView<RoundedRectangle, Color> and conformance _ShapeView<A, B>, &demangling cache variable for type metadata for _ShapeView<RoundedRectangle, Color>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _ShapeView<RoundedRectangle, Material> and conformance _ShapeView<A, B>, &demangling cache variable for type metadata for _ShapeView<RoundedRectangle, Material>);
    _ConditionalContent<>.init(storage:)();
    v33 = v38;
  }
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v33, v32);
}

void VideoMessageControlsView.TopControlsView.body.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FixedSizeLayout>, _FlexFrameLayout>, _OffsetEffect>, Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.TopControlsView.ParticipantNameView, _PaddingLayout>, _TraitWritingModifier<LayoutPriorityTraitKey>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier>>, Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<Menu<ZStack<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>>, TupleView<(Button<Text>, Button<Text>?, Button<Text>)>>, _FlexFrameLayout>, _OffsetEffect>, ModifiedContent<ModifiedContent<Anima);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (VideoMessageControlsView.TopControlsView.showsNameView.getter())
    v6 = static VerticalAlignment.firstTextBaseline.getter();
  else
    v6 = static VerticalAlignment.top.getter();
  *(_QWORD *)v5 = v6;
  *((_QWORD *)v5 + 1) = 0;
  v5[16] = 1;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_HStackLayout, TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FixedSizeLayout>, _FlexFrameLayout>, _OffsetEffect>, Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.TopControlsView.ParticipantNameView, _PaddingLayout>, _TraitWritingModifier<LayoutPriorityTraitKey>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier>>, Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<Menu<ZStack<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>>, TupleView<(Button<Text>, Button<Text>?, Button<Text>)>>, _FlexFrameLayout>, _OffsetEffect>, ModifiedCo);
  closure #1 in VideoMessageControlsView.TopControlsView.body.getter(v1, (uint64_t)&v5[*(int *)(v7 + 44)]);
  outlined init with take of Participant.VideoInfo?((uint64_t)v5, a1, &demangling cache variable for type metadata for HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FixedSizeLayout>, _FlexFrameLayout>, _OffsetEffect>, Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.TopControlsView.ParticipantNameView, _PaddingLayout>, _TraitWritingModifier<LayoutPriorityTraitKey>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier>>, Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<Menu<ZStack<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>>, TupleView<(Button<Text>, Button<Text>?, Button<Text>)>>, _FlexFrameLayout>, _OffsetEffect>, ModifiedContent<ModifiedContent<Anima);
}

void closure #1 in VideoMessageControlsView.TopControlsView.body.getter(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(_QWORD *__return_ptr);
  uint64_t v33;
  uint64_t v34;
  uint64_t KeyPath;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  double v42;
  double v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(void);
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unsigned int v52;
  unsigned int v53;
  uint64_t v54;
  int v55;
  int v56;
  unsigned __int8 v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t (*v68)(void);
  _QWORD *v69;
  char v70;
  uint64_t v71;
  uint64_t (*v72)(void);
  _QWORD *v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  void *v84;
  void *v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  int *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  _QWORD *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  _QWORD __src[18];
  __int128 v138;

  v129 = a2;
  v123 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<Menu<ZStack<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>>, TupleView<(Button<Text>, Button<Text>?, Button<Text>)>>, _FlexFrameLayout>, _OffsetEffect>, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FlexFrameLayout>, _OffsetEffect>>.Storage);
  MEMORY[0x1E0C80A78](v123);
  v127 = (char *)&v103 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = (_QWORD *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Menu<ZStack<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>>, TupleView<(Button<Text>, Button<Text>?, Button<Text>)>>);
  v107 = *(v109 - 1);
  MEMORY[0x1E0C80A78](v109);
  v106 = (uint64_t)&v103 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Menu<ZStack<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>>, TupleView<(Button<Text>, Button<Text>?, Button<Text>)>>, _FlexFrameLayout>);
  MEMORY[0x1E0C80A78](v5);
  v108 = (uint64_t)&v103 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v124 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Menu<ZStack<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>>, TupleView<(Button<Text>, Button<Text>?, Button<Text>)>>, _FlexFrameLayout>, _OffsetEffect>);
  MEMORY[0x1E0C80A78](v124);
  v105 = (uint64_t)&v103 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v110 = (uint64_t)&v103 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<Menu<ZStack<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>>, TupleView<(Button<Text>, Button<Text>?, Button<Text>)>>, _FlexFrameLayout>, _OffsetEffect>, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FlexFrameLayout>, _OffsetEffect>>);
  MEMORY[0x1E0C80A78](v10);
  v128 = (uint64_t)&v103 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v126 = (uint64_t)&v103 - v13;
  v121 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier>);
  MEMORY[0x1E0C80A78](v121);
  v104 = (uint64_t)&v103 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.TopControlsView.ParticipantNameView, _PaddingLayout>, _TraitWritingModifier<LayoutPriorityTraitKey>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier>>.Storage);
  MEMORY[0x1E0C80A78](v119);
  v120 = (uint64_t)&v103 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.TopControlsView.ParticipantNameView, _PaddingLayout>, _TraitWritingModifier<LayoutPriorityTraitKey>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier>>);
  MEMORY[0x1E0C80A78](v16);
  v125 = (uint64_t)&v103 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v132 = (uint64_t)&v103 - v19;
  v117 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<Text>);
  v116 = *(_QWORD *)(v117 - 8);
  MEMORY[0x1E0C80A78](v117);
  v111 = (uint64_t)&v103 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>);
  MEMORY[0x1E0C80A78](v114);
  v22 = (char *)&v103 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FixedSizeLayout>);
  MEMORY[0x1E0C80A78](v113);
  v24 = (char *)&v103 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FixedSizeLayout>, _FlexFrameLayout>);
  MEMORY[0x1E0C80A78](v25);
  v112 = (uint64_t)&v103 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FixedSizeLayout>, _FlexFrameLayout>, _OffsetEffect>);
  MEMORY[0x1E0C80A78](v118);
  v122 = (uint64_t)&v103 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v28);
  v115 = (uint64_t)&v103 - v29;
  MEMORY[0x1E0C80A78](v30);
  v131 = (uint64_t)&v103 - v31;
  v138 = *(_OWORD *)(a1 + 16);
  v32 = *(void (**)(_QWORD *__return_ptr))((*MEMORY[0x1E0DEEDD8] & **((_QWORD **)&v138 + 1)) + 0x1B0);
  v130 = *((id *)&v138 + 1);
  v32(__src);
  outlined release of ObservedObject<VideoMessagePlayerViewModel>((uint64_t)&v138);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v135 = a1;
  v33 = v111;
  Button.init(action:label:)();
  v34 = static Color.white.getter();
  KeyPath = swift_getKeyPath();
  v36 = v116;
  v37 = v117;
  (*(void (**)(char *, uint64_t, uint64_t))(v116 + 16))(v22, v33, v117);
  v38 = (uint64_t *)&v22[*(int *)(v114 + 36)];
  *v38 = KeyPath;
  v38[1] = v34;
  (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v33, v37);
  outlined init with copy of Participant.ScreenInfo?((uint64_t)v22, (uint64_t)v24, &demangling cache variable for type metadata for ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>);
  *(_WORD *)&v24[*(int *)(v113 + 36)] = 1;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v22, &demangling cache variable for type metadata for ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>);
  v39 = static Alignment.leading.getter();
  v40 = v112;
  specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(0, 1, 0, 1, 0x7FF0000000000000, 0, 0, 1, 0, 1, 0, 1, v39, v41);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v24, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FixedSizeLayout>);
  v42 = 5.6;
  if (VideoMessageControlsView.TopControlsView.showsNameView.getter())
    v43 = 0.0;
  else
    v43 = 5.6;
  v44 = v115;
  outlined init with copy of Participant.ScreenInfo?(v40, v115, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FixedSizeLayout>, _FlexFrameLayout>);
  v45 = v44 + *(int *)(v118 + 36);
  *(_QWORD *)v45 = 0;
  *(double *)(v45 + 8) = v43;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v40, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FixedSizeLayout>, _FlexFrameLayout>);
  outlined init with take of Participant.VideoInfo?(v44, v131, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FixedSizeLayout>, _FlexFrameLayout>, _OffsetEffect>);
  if (VideoMessageControlsView.TopControlsView.showsNameView.getter())
  {
    v46 = v120;
    v47 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v130) + 0x180);
    v48 = v130;
    v49 = v47();
    v51 = v50;
    outlined release of ObservedObject<VideoMessagePlayerViewModel>((uint64_t)&v138);
    v52 = static Edge.Set.leading.getter();
    v53 = static Edge.Set.trailing.getter();
    v54 = MEMORY[0x1C3B71FFC](0);
    v55 = MEMORY[0x1C3B71FFC]();
    if (MEMORY[0x1C3B71FFC](v55 & v52) != v52)
      v54 = MEMORY[0x1C3B71FFC](v54 | v52);
    v56 = MEMORY[0x1C3B71FFC](v54);
    v57 = MEMORY[0x1C3B71FFC](v56 & v53);
    v58 = v126;
    if (v57 != v53)
      LOBYTE(v54) = MEMORY[0x1C3B71FFC](v54 | v53);
    v59 = (_QWORD *)MEMORY[0x1E0DEEDD8];
    EdgeInsets.init(_all:)();
    *(_QWORD *)v46 = v49;
    *(_QWORD *)(v46 + 8) = v51;
    *(_BYTE *)(v46 + 16) = v54;
    *(_QWORD *)(v46 + 24) = v60;
    *(_QWORD *)(v46 + 32) = v61;
    *(_QWORD *)(v46 + 40) = v62;
    *(_QWORD *)(v46 + 48) = v63;
    *(_BYTE *)(v46 + 56) = 0;
    *(_QWORD *)(v46 + 64) = 0x3FF0000000000000;
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<VideoMessageControlsView.TopControlsView.ParticipantNameView, _PaddingLayout>, _TraitWritingModifier<LayoutPriorityTraitKey>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<VideoMessageControlsView.TopControlsView.ParticipantNameView, _PaddingLayout>, _TraitWritingModifier<LayoutPriorityTraitKey>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>();
    _ConditionalContent<>.init(storage:)();
    v64 = v130;
  }
  else
  {
    v65 = v130;
    v66 = v130;
    v67 = v104;
    static VideoMessageControlsView.durationView(for:)(v66, v104);
    outlined release of ObservedObject<VideoMessagePlayerViewModel>((uint64_t)&v138);
    outlined init with copy of Participant.ScreenInfo?(v67, v120, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier>);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<VideoMessageControlsView.TopControlsView.ParticipantNameView, _PaddingLayout>, _TraitWritingModifier<LayoutPriorityTraitKey>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<VideoMessageControlsView.TopControlsView.ParticipantNameView, _PaddingLayout>, _TraitWritingModifier<LayoutPriorityTraitKey>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>();
    _ConditionalContent<>.init(storage:)();
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v67, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier>);
    v58 = v126;
    v59 = (_QWORD *)MEMORY[0x1E0DEEDD8];
    v64 = v65;
  }
  v68 = *(uint64_t (**)(void))((*v59 & *v64) + 0x270);
  v69 = v64;
  v70 = v68();
  v71 = outlined release of ObservedObject<VideoMessagePlayerViewModel>((uint64_t)&v138);
  if ((v70 & 1) != 0
    || (v72 = *(uint64_t (**)(void))((*v59 & *v69) + 0x2A0),
        v73 = v69,
        LOBYTE(v72) = v72(),
        v71 = outlined release of ObservedObject<VideoMessagePlayerViewModel>((uint64_t)&v138),
        (v72 & 1) != 0))
  {
    MEMORY[0x1E0C80A78](v71);
    MEMORY[0x1E0C80A78](v74);
    v75 = v69;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ZStack<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>>);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(Button<Text>, Button<Text>?, Button<Text>)>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type ZStack<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>> and conformance ZStack<A>, &demangling cache variable for type metadata for ZStack<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type TupleView<(Button<Text>, Button<Text>?, Button<Text>)> and conformance TupleView<A>, &demangling cache variable for type metadata for TupleView<(Button<Text>, Button<Text>?, Button<Text>)>);
    v76 = v106;
    Menu.init(content:label:)();
    outlined release of ObservedObject<VideoMessagePlayerViewModel>((uint64_t)&v138);
    static Alignment.trailing.getter();
    v77 = v108;
    specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
    (*(void (**)(uint64_t, _QWORD *))(v107 + 8))(v76, v109);
    if (VideoMessageControlsView.TopControlsView.showsNameView.getter())
      v42 = 0.0;
    v78 = v105;
    outlined init with copy of Participant.ScreenInfo?(v77, v105, &demangling cache variable for type metadata for ModifiedContent<Menu<ZStack<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>>, TupleView<(Button<Text>, Button<Text>?, Button<Text>)>>, _FlexFrameLayout>);
    v79 = v78 + *(int *)(v124 + 36);
    *(_QWORD *)v79 = 0;
    *(double *)(v79 + 8) = v42;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v77, &demangling cache variable for type metadata for ModifiedContent<Menu<ZStack<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>>, TupleView<(Button<Text>, Button<Text>?, Button<Text>)>>, _FlexFrameLayout>);
    v80 = v110;
    outlined init with take of Participant.VideoInfo?(v78, v110, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Menu<ZStack<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>>, TupleView<(Button<Text>, Button<Text>?, Button<Text>)>>, _FlexFrameLayout>, _OffsetEffect>);
    outlined init with copy of Participant.ScreenInfo?(v80, (uint64_t)v127, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Menu<ZStack<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>>, TupleView<(Button<Text>, Button<Text>?, Button<Text>)>>, _FlexFrameLayout>, _OffsetEffect>);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<AnimatedSaveButton, _FlexFrameLayout>, _OffsetEffect>);
    v81 = MEMORY[0x1E0CD90E0];
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<PlaceholderContentView<ModalOverlayTransition>, _OpacityEffect>, _BlurEffect>, _ScaleEffect> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Menu<ZStack<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>>, TupleView<(Button<Text>, Button<Text>?, Button<Text>)>>, _FlexFrameLayout>, _OffsetEffect> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Menu<ZStack<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>>, TupleView<(Button<Text>, Button<Text>?, Button<Text>)>>, _FlexFrameLayout>, _OffsetEffect>, (uint64_t (*)(void))lazy protocol witness table accessor for type ModifiedContent<Menu<ZStack<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>>, TupleView<(Button<Text>, Button<Text>?, Button<Text>)>>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>, MEMORY[0x1E0CD90E0]);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<PlaceholderContentView<ModalOverlayTransition>, _OpacityEffect>, _BlurEffect>, _ScaleEffect> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<AnimatedSaveButton, _FlexFrameLayout>, _OffsetEffect> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<AnimatedSaveButton, _FlexFrameLayout>, _OffsetEffect>, lazy protocol witness table accessor for type ModifiedContent<AnimatedSaveButton, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>, v81);
    _ConditionalContent<>.init(storage:)();
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v80, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Menu<ZStack<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>>, TupleView<(Button<Text>, Button<Text>?, Button<Text>)>>, _FlexFrameLayout>, _OffsetEffect>);
  }
  else
  {
    type metadata accessor for VideoMessagePlayerViewModel(0);
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type VideoMessagePlayerViewModel and conformance VideoMessagePlayerViewModel, (void (*)(uint64_t))type metadata accessor for VideoMessagePlayerViewModel);
    v82 = v73;
    v83 = ObservedObject.init(wrappedValue:)();
    v85 = v84;
    HIBYTE(v136) = 1;
    State.init(wrappedValue:)();
    v86 = __src[0];
    v87 = __src[1];
    v88 = static Alignment.trailing.getter();
    LOBYTE(v102) = v86;
    specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, v88, v89, v83, v85, v102, v87, v103,
      v104,
      v105,
      v106,
      v107,
      SHIDWORD(v107),
      v108,
      v109,
      v110,
      v111,
      v112,
      v113,
      v114,
      v115,
      v116,
      v117,
      v118,
      v119,
      v120,
      v121,
      v122,
      v123,
      v124,
      v125,
      v126,
      (uint64_t)v127,
      v128,
      v129,
      (uint64_t)v130,
      v131,
      v132,
      v133,
      v134,
      v135,
      v136);

    swift_release();
    if (VideoMessageControlsView.TopControlsView.showsNameView.getter())
      v42 = 0.0;
    v90 = v127;
    memcpy(v127, __src, 0x90uLL);
    *((_QWORD *)v90 + 18) = 0;
    *((double *)v90 + 19) = v42;
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<AnimatedSaveButton, _FlexFrameLayout>, _OffsetEffect>);
    v91 = MEMORY[0x1E0CD90E0];
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<PlaceholderContentView<ModalOverlayTransition>, _OpacityEffect>, _BlurEffect>, _ScaleEffect> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Menu<ZStack<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>>, TupleView<(Button<Text>, Button<Text>?, Button<Text>)>>, _FlexFrameLayout>, _OffsetEffect> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Menu<ZStack<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>>, TupleView<(Button<Text>, Button<Text>?, Button<Text>)>>, _FlexFrameLayout>, _OffsetEffect>, (uint64_t (*)(void))lazy protocol witness table accessor for type ModifiedContent<Menu<ZStack<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>>, TupleView<(Button<Text>, Button<Text>?, Button<Text>)>>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>, MEMORY[0x1E0CD90E0]);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<PlaceholderContentView<ModalOverlayTransition>, _OpacityEffect>, _BlurEffect>, _ScaleEffect> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<AnimatedSaveButton, _FlexFrameLayout>, _OffsetEffect> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<AnimatedSaveButton, _FlexFrameLayout>, _OffsetEffect>, lazy protocol witness table accessor for type ModifiedContent<AnimatedSaveButton, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>, v91);
    _ConditionalContent<>.init(storage:)();
  }
  v92 = v131;
  v93 = v122;
  outlined init with copy of Participant.ScreenInfo?(v131, v122, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FixedSizeLayout>, _FlexFrameLayout>, _OffsetEffect>);
  v94 = v132;
  v95 = v125;
  outlined init with copy of Participant.ScreenInfo?(v132, v125, &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.TopControlsView.ParticipantNameView, _PaddingLayout>, _TraitWritingModifier<LayoutPriorityTraitKey>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier>>);
  v96 = v128;
  outlined init with copy of Participant.ScreenInfo?(v58, v128, &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<Menu<ZStack<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>>, TupleView<(Button<Text>, Button<Text>?, Button<Text>)>>, _FlexFrameLayout>, _OffsetEffect>, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FlexFrameLayout>, _OffsetEffect>>);
  v97 = v58;
  v98 = v129;
  outlined init with copy of Participant.ScreenInfo?(v93, v129, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FixedSizeLayout>, _FlexFrameLayout>, _OffsetEffect>);
  v99 = (int *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FixedSizeLayout>, _FlexFrameLayout>, _OffsetEffect>, Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.TopControlsView.ParticipantNameView, _PaddingLayout>, _TraitWritingModifier<LayoutPriorityTraitKey>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier>>, Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<Menu<ZStack<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>>, TupleView<(Button<Text>, Button<Text>?, Button<Text>)>>, _FlexFrameLayout>, _OffsetEffect>, ModifiedContent<ModifiedContent<AnimatedSaveButton, _F);
  v100 = v98 + v99[12];
  *(_QWORD *)v100 = 0;
  *(_BYTE *)(v100 + 8) = 1;
  outlined init with copy of Participant.ScreenInfo?(v95, v98 + v99[16], &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.TopControlsView.ParticipantNameView, _PaddingLayout>, _TraitWritingModifier<LayoutPriorityTraitKey>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier>>);
  v101 = v98 + v99[20];
  *(_QWORD *)v101 = 0;
  *(_BYTE *)(v101 + 8) = 1;
  outlined init with copy of Participant.ScreenInfo?(v96, v98 + v99[24], &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<Menu<ZStack<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>>, TupleView<(Button<Text>, Button<Text>?, Button<Text>)>>, _FlexFrameLayout>, _OffsetEffect>, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FlexFrameLayout>, _OffsetEffect>>);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v97, &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<Menu<ZStack<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>>, TupleView<(Button<Text>, Button<Text>?, Button<Text>)>>, _FlexFrameLayout>, _OffsetEffect>, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FlexFrameLayout>, _OffsetEffect>>);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v94, &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.TopControlsView.ParticipantNameView, _PaddingLayout>, _TraitWritingModifier<LayoutPriorityTraitKey>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier>>);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v92, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FixedSizeLayout>, _FlexFrameLayout>, _OffsetEffect>);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v96, &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<Menu<ZStack<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>>, TupleView<(Button<Text>, Button<Text>?, Button<Text>)>>, _FlexFrameLayout>, _OffsetEffect>, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FlexFrameLayout>, _OffsetEffect>>);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v95, &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.TopControlsView.ParticipantNameView, _PaddingLayout>, _TraitWritingModifier<LayoutPriorityTraitKey>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier>>);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v93, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FixedSizeLayout>, _FlexFrameLayout>, _OffsetEffect>);
}

BOOL VideoMessageControlsView.TopControlsView.showsNameView.getter()
{
  uint64_t v0;
  _QWORD *v1;
  void (*v2)(char *__return_ptr);
  _QWORD *v3;
  unsigned __int8 (*v5)(void);
  _QWORD *v6;
  char v7;
  __int128 v8;

  v8 = *(_OWORD *)(v0 + 16);
  v1 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v2 = *(void (**)(char *__return_ptr))((*MEMORY[0x1E0DEEDD8] & **((_QWORD **)&v8 + 1)) + 0x120);
  v3 = *((id *)&v8 + 1);
  v2(&v7);
  outlined release of ObservedObject<VideoMessagePlayerViewModel>((uint64_t)&v8);
  if ((v7 & 1) != 0)
    return 1;
  v5 = *(unsigned __int8 (**)(void))((*v1 & *v3) + 0xC0);
  v6 = v3;
  LODWORD(v5) = v5();
  outlined release of ObservedObject<VideoMessagePlayerViewModel>((uint64_t)&v8);
  return (_DWORD)v5 == 1;
}

uint64_t closure #1 in VideoMessageControlsView.TopControlsView.cancelButton()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  id v3;
  uint64_t result;
  uint64_t v5;
  char v6;
  uint64_t v7;
  __int128 v8;

  v8 = *(_OWORD *)(a1 + 16);
  v3 = *((id *)&v8 + 1);
  VideoMessagePlayerViewModel.cancelButtonTitle.getter();
  outlined release of ObservedObject<VideoMessagePlayerViewModel>((uint64_t)&v8);
  lazy protocol witness table accessor for type String and conformance String();
  result = Text.init<A>(_:)();
  *(_QWORD *)a2 = result;
  *(_QWORD *)(a2 + 8) = v5;
  *(_BYTE *)(a2 + 16) = v6 & 1;
  *(_QWORD *)(a2 + 24) = v7;
  return result;
}

uint64_t VideoMessagePlayerViewModel.cancelButtonTitle.getter()
{
  _QWORD *v0;
  char v1;
  id v2;
  unint64_t v3;
  unint64_t v4;
  Swift::String_optional v5;
  Swift::String v6;
  uint64_t v7;
  uint64_t countAndFlagsBits;
  unint64_t v10;
  uint64_t v11;

  (*(void (**)(uint64_t *__return_ptr))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x120))(&v11);
  v1 = v11;
  v2 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v10 = 0xE000000000000000;
  if ((v1 & 1) != 0)
  {
    v3 = 0x80000001BD68C020;
    v4 = 0xD000000000000012;
  }
  else
  {
    v4 = 0x6C65636E6143;
    v3 = 0xE600000000000000;
  }
  v5.value._countAndFlagsBits = 0x61737265766E6F43;
  v5.value._object = (void *)0xEF74694B6E6F6974;
  v6._countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  v7 = 0;
  countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v4, v5, (NSBundle)v2, v6, *(Swift::String *)(&v10 - 1))._countAndFlagsBits;

  return countAndFlagsBits;
}

uint64_t closure #1 in VideoMessageControlsView.TopControlsView.civicMenuButton(using:)@<X0>(_QWORD *a1@<X0>, Swift::String *a2@<X1>, Swift::String *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  Swift::String *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void *v20;
  NSBundle v21;
  Swift::String v22;
  Swift::String_optional v23;
  Swift::String v24;
  Swift::String v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  id v29;
  id v30;
  Swift::String v31;
  Swift::String_optional v32;
  Swift::String v33;
  Swift::String v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  id v38;
  Swift::String v39;
  Swift::String_optional v40;
  Swift::String v41;
  Swift::String v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  void (*v48)(Swift::String *, char *, uint64_t);
  Swift::String *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  Swift::String *v54;
  uint64_t v55;
  void (*v56)(char *, uint64_t);
  _QWORD v58[2];
  void *v59;
  char *v60;
  Swift::String *v61;
  void (*v62)(_QWORD *__return_ptr);
  uint64_t v63;
  char *v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  Swift::String *v70;
  _QWORD v71[9];
  Swift::String v72;
  Swift::String v73;
  Swift::String v74;
  Swift::String v75;
  Swift::String v76;

  v61 = a2;
  v70 = a3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ButtonRole?);
  MEMORY[0x1E0C80A78](v4);
  v66 = (char *)v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<Text>?);
  MEMORY[0x1E0C80A78](v6);
  v67 = (uint64_t)v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v58 - v9;
  v63 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<Text>);
  v68 = *(_QWORD *)(v63 - 8);
  MEMORY[0x1E0C80A78](v63);
  v69 = (char *)v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (Swift::String *)((char *)v58 - v13);
  MEMORY[0x1E0C80A78](v15);
  v64 = (char *)v58 - v16;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v58 - v18;
  v20 = (void *)objc_opt_self();
  v21.super.isa = (Class)objc_msgSend(v20, sel_conversationKit);
  v22._countAndFlagsBits = 0xD000000000000015;
  v74._object = (void *)0xE000000000000000;
  v22._object = (void *)0x80000001BD68BFC0;
  v23.value._countAndFlagsBits = 0x61737265766E6F43;
  v23.value._object = (void *)0xEF74694B6E6F6974;
  v24._countAndFlagsBits = 0;
  v24._object = (void *)0xE000000000000000;
  v74._countAndFlagsBits = 0;
  v25 = NSLocalizedString(_:tableName:bundle:value:comment:)(v22, v23, v21, v24, v74);

  v73 = v25;
  v26 = a1;
  v27 = *a1;
  v28 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v62 = *(void (**)(_QWORD *__return_ptr))((*MEMORY[0x1E0DEEDD8] & v27) + 0x1E0);
  v62(v71);
  swift_release();
  lazy protocol witness table accessor for type String and conformance String();
  v65 = v19;
  Button<>.init<A>(_:action:)();
  v73 = v61[1];
  v29 = v73._object;
  LOBYTE(v21.super.isa) = VideoMessagePlayerViewModel.showsSaveInMenu.getter();
  outlined release of ObservedObject<VideoMessagePlayerViewModel>((uint64_t)&v73);
  if (((uint64_t)v21.super.isa & 1) != 0)
  {
    v30 = objc_msgSend(v20, sel_conversationKit);
    v75._object = (void *)0xE000000000000000;
    v31._object = (void *)0x80000001BD68C000;
    v31._countAndFlagsBits = 0xD000000000000012;
    v32.value._countAndFlagsBits = 0x61737265766E6F43;
    v32.value._object = (void *)0xEF74694B6E6F6974;
    v33._countAndFlagsBits = 0;
    v33._object = (void *)0xE000000000000000;
    v75._countAndFlagsBits = 0;
    v34 = NSLocalizedString(_:tableName:bundle:value:comment:)(v31, v32, (NSBundle)v30, v33, v75);
    v59 = v20;

    v72 = v34;
    (*(void (**)(_QWORD *__return_ptr))((*v28 & *v26) + 0x1B0))(v71);
    v61 = v14;
    v58[1] = v71[7];
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    v20 = v59;
    swift_release();
    swift_release();
    v14 = v61;
    Button<>.init<A>(_:action:)();
    v35 = 0;
  }
  else
  {
    v35 = 1;
  }
  v36 = v10;
  v60 = v10;
  v37 = v63;
  __swift_storeEnumTagSinglePayload((uint64_t)v10, v35, 1, v63);
  v38 = objc_msgSend(v20, (SEL)&selRef_setCornerRadius_ + 6);
  v39._countAndFlagsBits = 0xD00000000000001ALL;
  v76._object = (void *)0xE000000000000000;
  v39._object = (void *)0x80000001BD68BFE0;
  v40.value._countAndFlagsBits = 0x61737265766E6F43;
  v40.value._object = (void *)0xEF74694B6E6F6974;
  v41._countAndFlagsBits = 0;
  v41._object = (void *)0xE000000000000000;
  v76._countAndFlagsBits = 0;
  v42 = NSLocalizedString(_:tableName:bundle:value:comment:)(v39, v40, (NSBundle)v38, v41, v76);

  v72 = v42;
  v43 = (uint64_t)v66;
  static ButtonRole.destructive.getter();
  v44 = type metadata accessor for ButtonRole();
  v45 = __swift_storeEnumTagSinglePayload(v43, 0, 1, v44);
  ((void (*)(_QWORD *__return_ptr, uint64_t))v62)(v71, v45);
  swift_release();
  v46 = v64;
  Button<>.init<A>(_:role:action:)();
  v47 = v68;
  v48 = *(void (**)(Swift::String *, char *, uint64_t))(v68 + 16);
  v49 = v14;
  v50 = v65;
  v48(v14, v65, v37);
  v51 = (uint64_t)v36;
  v52 = v67;
  outlined init with copy of Participant.ScreenInfo?(v51, v67, &demangling cache variable for type metadata for Button<Text>?);
  v53 = v69;
  v48((Swift::String *)v69, v46, v37);
  v54 = v70;
  v48(v70, (char *)v49, v37);
  v55 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Button<Text>, Button<Text>?, Button<Text>));
  outlined init with copy of Participant.ScreenInfo?(v52, (uint64_t)v54 + *(int *)(v55 + 48), &demangling cache variable for type metadata for Button<Text>?);
  v48((Swift::String *)((char *)v54 + *(int *)(v55 + 64)), v53, v37);
  v56 = *(void (**)(char *, uint64_t))(v47 + 8);
  v56(v46, v37);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v60, &demangling cache variable for type metadata for Button<Text>?);
  v56(v50, v37);
  v56(v53, v37);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v52, &demangling cache variable for type metadata for Button<Text>?);
  return ((uint64_t (*)(Swift::String *, uint64_t))v56)(v49, v37);
}

uint64_t closure #2 in VideoMessageControlsView.TopControlsView.civicMenuButton(using:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v2 = static Alignment.center.getter();
  v4 = v3;
  v5 = Image.init(systemName:)();
  v6 = static Color.white.getter();
  result = swift_getKeyPath();
  *a1 = v2;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = result;
  a1[4] = v6;
  return result;
}

uint64_t VideoMessageControlsView.TopControlsView.ParticipantNameView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;

  lazy protocol witness table accessor for type String and conformance String();
  swift_bridgeObjectRetain();
  v2 = Text.init<A>(_:)();
  v4 = v3;
  v6 = v5 & 1;
  static Color.white.getter();
  v7 = Text.foregroundColor(_:)();
  v9 = v8;
  v11 = v10;
  v13 = v12;
  swift_release();
  outlined consume of Text.Storage(v2, v4, v6);
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath();
  v15 = static Font.headline.getter();
  v16 = swift_getKeyPath();
  result = swift_getKeyPath();
  *(_QWORD *)a1 = v7;
  *(_QWORD *)(a1 + 8) = v9;
  *(_BYTE *)(a1 + 16) = v11 & 1;
  *(_QWORD *)(a1 + 24) = v13;
  *(_QWORD *)(a1 + 32) = KeyPath;
  *(_BYTE *)(a1 + 40) = 1;
  *(_QWORD *)(a1 + 48) = v16;
  *(_QWORD *)(a1 + 56) = v15;
  *(_QWORD *)(a1 + 64) = result;
  *(_QWORD *)(a1 + 72) = 2;
  *(_BYTE *)(a1 + 80) = 0;
  return result;
}

uint64_t protocol witness for View.body.getter in conformance VideoMessageControlsView.TopControlsView.ParticipantNameView@<X0>(uint64_t a1@<X8>)
{
  return VideoMessageControlsView.TopControlsView.ParticipantNameView.body.getter(a1);
}

double EnvironmentValues.margin.getter()
{
  return EnvironmentValues.margin.getter((void (*)(void))lazy protocol witness table accessor for type MarginKey and conformance MarginKey);
}

void key path getter for EnvironmentValues.margin : EnvironmentValues(double *a1@<X8>)
{
  *a1 = EnvironmentValues.margin.getter();
  OUTLINED_FUNCTION_0();
}

void key path setter for EnvironmentValues.margin : EnvironmentValues()
{
  OUTLINED_FUNCTION_49_44((void (*)(void))lazy protocol witness table accessor for type MarginKey and conformance MarginKey);
  OUTLINED_FUNCTION_0();
}

void protocol witness for View.body.getter in conformance VideoMessageControlsView.TopControlsView(uint64_t a1@<X8>)
{
  VideoMessageControlsView.TopControlsView.body.getter(a1);
}

uint64_t VideoMessageControlsView.LocalBottomControlsView.isVertical.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  void (*v27)(_BYTE *, uint64_t, uint64_t);
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  _BYTE *v31;
  void (*v32)(_BYTE *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  uint64_t v36;
  char v37;
  _BYTE *v38;
  uint64_t v40;
  uint64_t v41;
  _BYTE *v42;
  void (*v43)(_BYTE *, uint64_t);
  _BYTE v44[12];
  int v45;
  _BYTE *v46;
  _BYTE *v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE *v50;
  _BYTE *v51;
  _BYTE *v52;
  uint64_t v53;
  uint64_t v54;
  _BYTE *v55;

  v1 = type metadata accessor for VideoMessageControlsView.LocalBottomControlsView(0);
  MEMORY[0x1E0C80A78](v1);
  v55 = &v44[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for UserInterfaceSizeClass();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v47 = &v44[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (UserInterfaceSizeClass?, UserInterfaceSizeClass?));
  MEMORY[0x1E0C80A78](v6);
  v52 = &v44[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v8);
  v10 = &v44[-v9];
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UserInterfaceSizeClass?);
  MEMORY[0x1E0C80A78](v11);
  v46 = &v44[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v13);
  v50 = &v44[-v14];
  MEMORY[0x1E0C80A78](v15);
  v51 = &v44[-v16];
  MEMORY[0x1E0C80A78](v17);
  v19 = &v44[-v18];
  MEMORY[0x1E0C80A78](v20);
  v22 = &v44[-v21];
  MEMORY[0x1E0C80A78](v23);
  v25 = &v44[-v24];
  v49 = v1;
  v54 = v0;
  specialized Environment.wrappedValue.getter();
  v26 = *MEMORY[0x1E0CDC160];
  v53 = v4;
  v27 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v4 + 104);
  v27(v22, v26, v3);
  __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v3);
  v48 = v6;
  v28 = (uint64_t)&v10[*(int *)(v6 + 48)];
  outlined init with copy of Participant.ScreenInfo?((uint64_t)v25, (uint64_t)v10, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  outlined init with copy of Participant.ScreenInfo?((uint64_t)v22, v28, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v3) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v22, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v25, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    if (__swift_getEnumTagSinglePayload(v28, 1, v3) == 1)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v10, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
      v29 = v55;
      _s15ConversationKit11ParticipantVWOcTm_2(v54, (uint64_t)v55, type metadata accessor for VideoMessageControlsView.LocalBottomControlsView);
      goto LABEL_9;
    }
    goto LABEL_6;
  }
  outlined init with copy of Participant.ScreenInfo?((uint64_t)v10, (uint64_t)v19, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  if (__swift_getEnumTagSinglePayload(v28, 1, v3) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v22, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v25, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    (*(void (**)(_BYTE *, uint64_t))(v53 + 8))(v19, v3);
LABEL_6:
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v10, &demangling cache variable for type metadata for (UserInterfaceSizeClass?, UserInterfaceSizeClass?));
    v29 = v55;
    _s15ConversationKit11ParticipantVWOcTm_2(v54, (uint64_t)v55, type metadata accessor for VideoMessageControlsView.LocalBottomControlsView);
LABEL_7:
    outlined destroy of AccountUpdateNotice((uint64_t)v29, type metadata accessor for VideoMessageControlsView.LocalBottomControlsView);
LABEL_15:
    v37 = 0;
    return v37 & 1;
  }
  v30 = v53;
  v31 = v47;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v53 + 32))(v47, v28, v3);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UserInterfaceSizeClass and conformance UserInterfaceSizeClass, (void (*)(uint64_t))MEMORY[0x1E0CDC170]);
  v45 = dispatch thunk of static Equatable.== infix(_:_:)();
  v32 = *(void (**)(_BYTE *, uint64_t))(v30 + 8);
  v32(v31, v3);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v22, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v25, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  v32(v19, v3);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v10, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  v29 = v55;
  _s15ConversationKit11ParticipantVWOcTm_2(v54, (uint64_t)v55, type metadata accessor for VideoMessageControlsView.LocalBottomControlsView);
  if ((v45 & 1) == 0)
    goto LABEL_7;
LABEL_9:
  v33 = (uint64_t)v51;
  specialized Environment.wrappedValue.getter();
  v34 = (uint64_t)v50;
  v27(v50, v26, v3);
  __swift_storeEnumTagSinglePayload(v34, 0, 1, v3);
  v35 = v52;
  v36 = (uint64_t)&v52[*(int *)(v48 + 48)];
  outlined init with copy of Participant.ScreenInfo?(v33, (uint64_t)v52, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  outlined init with copy of Participant.ScreenInfo?(v34, v36, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v35, 1, v3) != 1)
  {
    v38 = v46;
    outlined init with copy of Participant.ScreenInfo?((uint64_t)v35, (uint64_t)v46, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    if (__swift_getEnumTagSinglePayload(v36, 1, v3) != 1)
    {
      v40 = v53;
      v41 = v34;
      v42 = v47;
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v53 + 32))(v47, v36, v3);
      lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UserInterfaceSizeClass and conformance UserInterfaceSizeClass, (void (*)(uint64_t))MEMORY[0x1E0CDC170]);
      v37 = dispatch thunk of static Equatable.== infix(_:_:)();
      v43 = *(void (**)(_BYTE *, uint64_t))(v40 + 8);
      v43(v42, v3);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v41, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v33, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
      outlined destroy of AccountUpdateNotice((uint64_t)v29, type metadata accessor for VideoMessageControlsView.LocalBottomControlsView);
      v43(v38, v3);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v35, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
      return v37 & 1;
    }
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v34, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v33, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    outlined destroy of AccountUpdateNotice((uint64_t)v29, type metadata accessor for VideoMessageControlsView.LocalBottomControlsView);
    (*(void (**)(_BYTE *, uint64_t))(v53 + 8))(v38, v3);
    goto LABEL_14;
  }
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v34, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v33, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  outlined destroy of AccountUpdateNotice((uint64_t)v29, type metadata accessor for VideoMessageControlsView.LocalBottomControlsView);
  if (__swift_getEnumTagSinglePayload(v36, 1, v3) != 1)
  {
LABEL_14:
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v35, &demangling cache variable for type metadata for (UserInterfaceSizeClass?, UserInterfaceSizeClass?));
    goto LABEL_15;
  }
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v35, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  v37 = 1;
  return v37 & 1;
}

uint64_t VideoMessageControlsView.LocalBottomControlsView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  _QWORD *v19;
  unsigned __int8 (*v20)(void);
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  unsigned int v28;
  int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;

  v59 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HStack<TupleView<(ModifiedContent<Spacer, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>, AccessibilityAttachmentModifier>, ModifiedContent<HStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>, _FlexFrameLayout>)>>);
  MEMORY[0x1E0C80A78](v2);
  v58 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(ModifiedContent<Spacer, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>, AccessibilityAttachmentModifier>, ModifiedContent<HStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>, _FlexFrameLayout>)>>, _PaddingLayout>);
  MEMORY[0x1E0C80A78](v55);
  v54 = (uint64_t)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<Spacer, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>, AccessibilityAttachmentModifier>, ModifiedContent<HStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>, _FlexFrameLayout>)>>, _PaddingLayout>, _FlexFrameLayout>);
  MEMORY[0x1E0C80A78](v57);
  v56 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v48 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<VStack<TupleView<(ModifiedContent<Spacer, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>, AccessibilityAttachmentModifier>, ModifiedContent<VStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>, _FlexFrameLayout>)>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<Spacer, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>, AccessibilityAttachmentModifier>, ModifiedContent<HStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _Environm);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<Spacer, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>, AccessibilityAttachmentModifier>, ModifiedContent<VStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>, _FlexFrameLayout>)>>);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<VStack<TupleView<(ModifiedContent<Spacer, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>, AccessibilityAttachmentModifier>, ModifiedContent<VStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>, _FlexFrameLayout>)>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<Spacer, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>, AccessibilityAttachmentModifier>, ModifiedContent<HStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _Environm);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = v1;
  v19 = *(_QWORD **)(v1 + 8);
  v20 = *(unsigned __int8 (**)(void))((*MEMORY[0x1E0DEEDD8] & *v19) + 0xC0);
  v21 = v19;
  LODWORD(v20) = v20();

  if ((_DWORD)v20 != 1)
    return __swift_storeEnumTagSinglePayload(v59, 1, 1, v15);
  v51 = v9;
  v52 = v17;
  v49 = v8;
  v50 = v15;
  v53 = v12;
  v22 = (uint64_t)v58;
  v23 = v59;
  if ((VideoMessageControlsView.LocalBottomControlsView.isVertical.getter() & 1) != 0)
  {
    *(_QWORD *)v14 = static HorizontalAlignment.center.getter();
    *((_QWORD *)v14 + 1) = 0;
    v14[16] = 1;
    v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_VStackLayout, TupleView<(ModifiedContent<Spacer, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>, AccessibilityAttachmentModifier>, ModifiedContent<VStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>, _FlexFrameLayout>)>>);
    closure #1 in VideoMessageControlsView.LocalBottomControlsView.body.getter(v18, &v14[*(int *)(v24 + 44)]);
    v25 = &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<Spacer, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>, AccessibilityAttachmentModifier>, ModifiedContent<VStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>, _FlexFrameLayout>)>>;
    outlined init with copy of Participant.ScreenInfo?((uint64_t)v14, (uint64_t)v11, &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<Spacer, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>, AccessibilityAttachmentModifier>, ModifiedContent<VStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>, _FlexFrameLayout>)>>);
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type VStack<TupleView<(ModifiedContent<Spacer, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>, AccessibilityAttachmentModifier>, ModifiedContent<VStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>, _FlexFrameLayout>)>> and conformance VStack<A>, &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<Spacer, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>, AccessibilityAttachmentModifier>, ModifiedContent<VStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>, _FlexFrameLayout>)>>);
    v26 = MEMORY[0x1E0CDA228];
  }
  else
  {
    *(_QWORD *)v22 = static VerticalAlignment.center.getter();
    *(_QWORD *)(v22 + 8) = 0;
    *(_BYTE *)(v22 + 16) = 0;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_HStackLayout, TupleView<(ModifiedContent<Spacer, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>, AccessibilityAttachmentModifier>, ModifiedContent<HStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>, _FlexFrameLayout>)>>);
    closure #2 in VideoMessageControlsView.LocalBottomControlsView.body.getter(v18);
    v28 = static Edge.Set.bottom.getter();
    v29 = MEMORY[0x1C3B71FFC](0);
    v30 = MEMORY[0x1C3B71FFC]();
    if (MEMORY[0x1C3B71FFC](v30 & v28) != v28)
      LOBYTE(v29) = MEMORY[0x1C3B71FFC](v29 | v28);
    type metadata accessor for VideoMessageControlsView.LocalBottomControlsView(0);
    EdgeInsets.init(_all:)();
    v32 = v31;
    v34 = v33;
    v36 = v35;
    v38 = v37;
    v39 = v54;
    outlined init with copy of Participant.ScreenInfo?(v22, v54, &demangling cache variable for type metadata for HStack<TupleView<(ModifiedContent<Spacer, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>, AccessibilityAttachmentModifier>, ModifiedContent<HStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>, _FlexFrameLayout>)>>);
    v40 = v39 + *(int *)(v55 + 36);
    *(_BYTE *)v40 = v29;
    *(_QWORD *)(v40 + 8) = v32;
    *(_QWORD *)(v40 + 16) = v34;
    *(_QWORD *)(v40 + 24) = v36;
    *(_QWORD *)(v40 + 32) = v38;
    *(_BYTE *)(v40 + 40) = 0;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v22, &demangling cache variable for type metadata for HStack<TupleView<(ModifiedContent<Spacer, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>, AccessibilityAttachmentModifier>, ModifiedContent<HStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>, _FlexFrameLayout>)>>);
    v41 = static Alignment.center.getter();
    v47 = 1;
    v46 = 1;
    v42 = (uint64_t)v56;
    specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(0, 1, 0, 1, 0x7FF0000000000000, 0, 0, 1, 0, v46, 0, v47, v41, v43);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v39, &demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(ModifiedContent<Spacer, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>, AccessibilityAttachmentModifier>, ModifiedContent<HStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>, _FlexFrameLayout>)>>, _PaddingLayout>);
    v25 = &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<Spacer, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>, AccessibilityAttachmentModifier>, ModifiedContent<HStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>, _FlexFrameLayout>)>>, _PaddingLayout>, _FlexFrameLayout>;
    v14 = v49;
    outlined init with take of Participant.VideoInfo?(v42, (uint64_t)v49, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<Spacer, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>, AccessibilityAttachmentModifier>, ModifiedContent<HStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>, _FlexFrameLayout>)>>, _PaddingLayout>, _FlexFrameLayout>);
    outlined init with copy of Participant.ScreenInfo?((uint64_t)v14, (uint64_t)v11, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<Spacer, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>, AccessibilityAttachmentModifier>, ModifiedContent<HStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>, _FlexFrameLayout>)>>, _PaddingLayout>, _FlexFrameLayout>);
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type VStack<TupleView<(ModifiedContent<Spacer, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>, AccessibilityAttachmentModifier>, ModifiedContent<VStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>, _FlexFrameLayout>)>> and conformance VStack<A>, &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<Spacer, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>, AccessibilityAttachmentModifier>, ModifiedContent<VStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>, _FlexFrameLayout>)>>);
    v26 = MEMORY[0x1E0CDA228];
  }
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<PlaceholderContentView<ModalOverlayTransition>, _OpacityEffect>, _BlurEffect>, _ScaleEffect> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<Spacer, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>, AccessibilityAttachmentModifier>, ModifiedContent<HStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>, _FlexFrameLayout>)>>, _PaddingLayout>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<Spacer, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>, AccessibilityAttachmentModifier>, ModifiedContent<HStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>, _FlexFrameLayout>)>>, _PaddingLayout>, _FlexFrameLayout>, (uint64_t (*)(void))lazy protocol witness table accessor for type ModifiedContent<HStack<TupleView<(ModifiedContent<Spacer, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>, AccessibilityAttachmentModifier>, ModifiedContent<HStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>, _FlexFrameLayout>)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>, v26);
  v44 = (uint64_t)v52;
  _ConditionalContent<>.init(storage:)();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v14, v25);
  v45 = v50;
  outlined init with take of Participant.VideoInfo?(v44, v23, &demangling cache variable for type metadata for _ConditionalContent<VStack<TupleView<(ModifiedContent<Spacer, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>, AccessibilityAttachmentModifier>, ModifiedContent<VStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>, _FlexFrameLayout>)>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<Spacer, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>, AccessibilityAttachmentModifier>, ModifiedContent<HStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _Environm);
  return __swift_storeEnumTagSinglePayload(v23, 0, 1, v45);
}

void closure #1 in VideoMessageControlsView.LocalBottomControlsView.body.getter(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  void (*v27)(__int128 *__return_ptr);
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t KeyPath;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  _OWORD *v37;
  __int128 v38;
  unsigned int v39;
  int v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t __src[16];

  v83 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<Text>);
  v72 = *(_QWORD *)(v3 - 8);
  v73 = v3;
  MEMORY[0x1E0C80A78](v3);
  v70 = (uint64_t)&v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>);
  MEMORY[0x1E0C80A78](v71);
  v69 = (uint64_t)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>);
  MEMORY[0x1E0C80A78](v74);
  v68 = (uint64_t)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>);
  MEMORY[0x1E0C80A78](v76);
  v78 = (uint64_t)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v77 = (uint64_t)&v68 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<VStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>, _FlexFrameLayout>);
  MEMORY[0x1E0C80A78](v13);
  v82 = (uint64_t)&v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v75 = (char *)&v68 - v16;
  MEMORY[0x1E0C80A78](v17);
  v81 = (uint64_t)&v68 - v18;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>, AccessibilityAttachmentModifier>);
  MEMORY[0x1E0C80A78](v19);
  v80 = (uint64_t)&v68 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v68 - v22;
  v24 = static Alignment.top.getter();
  LOBYTE(v67) = 1;
  LOBYTE(v64) = 0;
  LOBYTE(v63) = 1;
  specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(0, 1, 0, 1, 0, 1, 0, 1, 0, v63, 0x7FF0000000000000, v64, v24, v25, 0, v67, v68, v69, v70,
    v71,
    v72,
    v73,
    v74,
    (char)v75,
    v76,
    v77,
    v78,
    (uint64_t)v79,
    v80,
    v81,
    v82,
    (uint64_t)v83,
    v84,
    v85,
    v86,
    v87,
    *((uint64_t *)&v87 + 1),
    v88,
    *((uint64_t *)&v88 + 1),
    v89,
    *((uint64_t *)&v89 + 1),
    v90,
    v91,
    v92,
    v93,
    v94,
    v95,
    v96,
    v97,
    __src[0],
    __src[1],
    __src[2],
    __src[3],
    __src[4],
    __src[5],
    __src[6],
    __src[7],
    __src[8]);
  v79 = v23;
  VideoMessageControlsView.LocalBottomControlsView.sendButton()((uint64_t)v23);
  *(_QWORD *)v12 = static HorizontalAlignment.center.getter();
  *((_QWORD *)v12 + 1) = 0;
  v12[16] = 1;
  v26 = *(_QWORD **)(a1 + 8);
  v27 = *(void (**)(__int128 *__return_ptr))((*MEMORY[0x1E0DEEDD8] & *v26) + 0x1B0);
  v28 = v26;
  v27(&v87);

  swift_release();
  v29 = v68;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v86 = a1;
  v30 = v70;
  Button.init(action:label:)();
  v31 = static Color.white.getter();
  KeyPath = swift_getKeyPath();
  v34 = v72;
  v33 = v73;
  v35 = v69;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v72 + 16))(v69, v30, v73);
  v36 = (uint64_t *)(v35 + *(int *)(v71 + 36));
  *v36 = KeyPath;
  v36[1] = v31;
  (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v30, v33);
  static Alignment.bottom.getter();
  _FrameLayout.init(width:height:alignment:)();
  outlined init with copy of Participant.ScreenInfo?(v35, v29, &demangling cache variable for type metadata for ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>);
  v37 = (_OWORD *)(v29 + *(int *)(v74 + 36));
  v38 = v88;
  *v37 = v87;
  v37[1] = v38;
  v37[2] = v89;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v35, &demangling cache variable for type metadata for ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>);
  v39 = static Edge.Set.bottom.getter();
  v40 = MEMORY[0x1C3B71FFC](0);
  v41 = MEMORY[0x1C3B71FFC]();
  if (MEMORY[0x1C3B71FFC](v41 & v39) != v39)
    LOBYTE(v40) = MEMORY[0x1C3B71FFC](v40 | v39);
  v42 = (uint64_t)&v12[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_VStackLayout, ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>)
                             + 44)];
  type metadata accessor for VideoMessageControlsView.LocalBottomControlsView(0);
  EdgeInsets.init(_all:)();
  v44 = v43;
  v46 = v45;
  v48 = v47;
  v50 = v49;
  v51 = v78;
  outlined init with copy of Participant.ScreenInfo?(v29, v78, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>);
  v52 = v51 + *(int *)(v76 + 36);
  *(_BYTE *)v52 = v40;
  *(_QWORD *)(v52 + 8) = v44;
  *(_QWORD *)(v52 + 16) = v46;
  *(_QWORD *)(v52 + 24) = v48;
  *(_QWORD *)(v52 + 32) = v50;
  *(_BYTE *)(v52 + 40) = 0;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v29, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>);
  v53 = v77;
  outlined init with take of Participant.VideoInfo?(v51, v77, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>);
  outlined init with take of Participant.VideoInfo?(v53, v42, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>);
  v54 = static Alignment.bottom.getter();
  LOBYTE(v66) = 0;
  LOBYTE(v65) = 1;
  v55 = (uint64_t)v75;
  specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(0, 1, 0, 1, 0, 1, 0, 1, 0, v65, 0x7FF0000000000000, v66, v54, v56);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v12, &demangling cache variable for type metadata for VStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>);
  v57 = v81;
  outlined init with take of Participant.VideoInfo?(v55, v81, &demangling cache variable for type metadata for ModifiedContent<VStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>, _FlexFrameLayout>);
  v59 = (uint64_t)v79;
  v58 = v80;
  outlined init with copy of Participant.ScreenInfo?((uint64_t)v79, v80, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>, AccessibilityAttachmentModifier>);
  v60 = v82;
  outlined init with copy of Participant.ScreenInfo?(v57, v82, &demangling cache variable for type metadata for ModifiedContent<VStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>, _FlexFrameLayout>);
  v61 = v83;
  memcpy(v83, __src, 0x80uLL);
  v62 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModifiedContent<Spacer, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>, AccessibilityAttachmentModifier>, ModifiedContent<VStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>, _FlexFrameLayout>));
  outlined init with copy of Participant.ScreenInfo?(v58, (uint64_t)v61 + *(int *)(v62 + 48), &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>, AccessibilityAttachmentModifier>);
  outlined init with copy of Participant.ScreenInfo?(v60, (uint64_t)v61 + *(int *)(v62 + 64), &demangling cache variable for type metadata for ModifiedContent<VStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>, _FlexFrameLayout>);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v57, &demangling cache variable for type metadata for ModifiedContent<VStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>, _FlexFrameLayout>);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v59, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>, AccessibilityAttachmentModifier>);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v60, &demangling cache variable for type metadata for ModifiedContent<VStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>, _FlexFrameLayout>);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v58, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>, AccessibilityAttachmentModifier>);
}

void VideoMessageControlsView.LocalBottomControlsView.sendButton()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  void (*v10)(_OWORD *__return_ptr);
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  Swift::String v21;
  Swift::String_optional v22;
  Swift::String v23;
  Swift::String v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  Swift::String v32;
  _OWORD v33[3];
  Swift::String v34;

  v2 = v1;
  v31 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>);
  v29 = *(_QWORD *)(v3 - 8);
  v30 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>);
  MEMORY[0x1E0C80A78](v27);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>);
  MEMORY[0x1E0C80A78](v28);
  v26 = (uint64_t)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD **)(v1 + 8);
  v10 = *(void (**)(_OWORD *__return_ptr))((*MEMORY[0x1E0DEEDD8] & *v9) + 0x1B0);
  v11 = v9;
  v10(v33);

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>);
  lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>();
  Button.init(action:label:)();
  v12 = *(_QWORD *)(v2 + 16);
  LOBYTE(v11) = *(_BYTE *)(v2 + 24);
  outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(v12, (char)v11);
  specialized Environment.wrappedValue.getter();
  outlined consume of Environment<CGFloat>.Content(v12, (char)v11);
  outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(v12, (char)v11);
  specialized Environment.wrappedValue.getter();
  outlined consume of Environment<CGFloat>.Content(v12, (char)v11);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  v14 = v29;
  v13 = v30;
  (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v7, v5, v30);
  v15 = &v7[*(int *)(v27 + 36)];
  v16 = v33[1];
  *(_OWORD *)v15 = v33[0];
  *((_OWORD *)v15 + 1) = v16;
  *((_OWORD *)v15 + 2) = v33[2];
  (*(void (**)(char *, uint64_t))(v14 + 8))(v5, v13);
  v17 = static Color.white.getter();
  v18 = v26;
  outlined init with copy of Participant.ScreenInfo?((uint64_t)v7, v26, &demangling cache variable for type metadata for ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>);
  v19 = v18 + *(int *)(v28 + 36);
  *(_QWORD *)v19 = v17;
  *(_WORD *)(v19 + 8) = 256;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v7, &demangling cache variable for type metadata for ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>);
  v20 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v34._object = (void *)0xE000000000000000;
  v21._object = (void *)0x80000001BD68BF80;
  v21._countAndFlagsBits = 0xD000000000000012;
  v22.value._countAndFlagsBits = 0x61737265766E6F43;
  v22.value._object = (void *)0xEF74694B6E6F6974;
  v23._countAndFlagsBits = 0;
  v23._object = (void *)0xE000000000000000;
  v34._countAndFlagsBits = 0;
  v24 = NSLocalizedString(_:tableName:bundle:value:comment:)(v21, v22, (NSBundle)v20, v23, v34);

  v32 = v24;
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>> and conformance <> ModifiedContent<A, B>();
  lazy protocol witness table accessor for type String and conformance String();
  View.accessibilityLabel<A>(_:)();
  swift_bridgeObjectRelease();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v18, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>);
}

#error "1BD4264E4: call analysis failed (funcsize=168)"

void closure #1 in closure #2 in VideoMessageControlsView.LocalBottomControlsView.body.getter(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  void (*v10)(_OWORD *__return_ptr);
  _QWORD *v11;
  uint64_t v12;
  uint64_t KeyPath;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  char *v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _OWORD v36[3];

  v29 = a1;
  v34 = a2;
  v32 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<Text>);
  v31 = *(_QWORD *)(v32 - 8);
  MEMORY[0x1E0C80A78](v32);
  v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>);
  MEMORY[0x1E0C80A78](v30);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>);
  MEMORY[0x1E0C80A78](v33);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD **)(a1 + 8);
  v10 = *(void (**)(_OWORD *__return_ptr))((*MEMORY[0x1E0DEEDD8] & *v9) + 0x1B0);
  v11 = v9;
  v10(v36);

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v35 = v29;
  Button.init(action:label:)();
  v12 = static Color.white.getter();
  KeyPath = swift_getKeyPath();
  v14 = v31;
  v15 = v32;
  (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v6, v4, v32);
  v16 = (uint64_t *)&v6[*(int *)(v30 + 36)];
  *v16 = KeyPath;
  v16[1] = v12;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v4, v15);
  static Alignment.trailing.getter();
  _FrameLayout.init(width:height:alignment:)();
  outlined init with copy of Participant.ScreenInfo?((uint64_t)v6, (uint64_t)v8, &demangling cache variable for type metadata for ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>);
  v17 = &v8[*(int *)(v33 + 36)];
  v18 = v36[1];
  *(_OWORD *)v17 = v36[0];
  *((_OWORD *)v17 + 1) = v18;
  *((_OWORD *)v17 + 2) = v36[2];
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v6, &demangling cache variable for type metadata for ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>);
  LOBYTE(v12) = static Edge.Set.all.getter();
  EdgeInsets.init(_all:)();
  v20 = v19;
  v22 = v21;
  v24 = v23;
  v26 = v25;
  v27 = v34;
  outlined init with copy of Participant.ScreenInfo?((uint64_t)v8, v34, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>);
  v28 = v27
      + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>)
               + 36);
  *(_BYTE *)v28 = v12;
  *(_QWORD *)(v28 + 8) = v20;
  *(_QWORD *)(v28 + 16) = v22;
  *(_QWORD *)(v28 + 24) = v24;
  *(_QWORD *)(v28 + 32) = v26;
  *(_BYTE *)(v28 + 40) = 0;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v8, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>);
}

uint64_t closure #1 in closure #1 in closure #1 in VideoMessageControlsView.LocalBottomControlsView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void *v3;
  void *v4;
  id v5;
  id v6;
  Swift::String v7;
  Swift::String_optional v8;
  Swift::String v9;
  uint64_t result;
  uint64_t v11;
  char v12;
  uint64_t v13;
  Swift::String v14;

  v3 = *(void **)(a1 + 8);
  v4 = (void *)objc_opt_self();
  v5 = v3;
  v6 = objc_msgSend(v4, sel_conversationKit);
  v14._object = (void *)0xE000000000000000;
  v7._object = (void *)0x80000001BD68BF60;
  v7._countAndFlagsBits = 0xD000000000000014;
  v8.value._countAndFlagsBits = 0x61737265766E6F43;
  v8.value._object = (void *)0xEF74694B6E6F6974;
  v9._countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  v14._countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v7, v8, (NSBundle)v6, v9, v14);

  lazy protocol witness table accessor for type String and conformance String();
  result = Text.init<A>(_:)();
  *(_QWORD *)a2 = result;
  *(_QWORD *)(a2 + 8) = v11;
  *(_BYTE *)(a2 + 16) = v12 & 1;
  *(_QWORD *)(a2 + 24) = v13;
  return result;
}

uint64_t closure #1 in VideoMessageControlsView.LocalBottomControlsView.sendButton()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t KeyPath;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  _QWORD v14[4];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.fontWeight(_:)>>.0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = Image.init(systemName:)();
  v7 = static Font.title.getter();
  KeyPath = swift_getKeyPath();
  v14[1] = v6;
  v14[2] = KeyPath;
  v14[3] = v7;
  static Font.Weight.semibold.getter();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>);
  lazy protocol witness table accessor for type ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>();
  View.fontWeight(_:)();
  swift_release();
  swift_release();
  swift_release();
  v9 = objc_msgSend((id)objc_opt_self(), sel_systemGreenColor);
  v10 = MEMORY[0x1C3B72524](v9);
  v11 = swift_getKeyPath();
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 16))(a1, v5, v2);
  v12 = (uint64_t *)(a1
                  + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>)
                           + 36));
  *v12 = v11;
  v12[1] = v10;
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

double EnvironmentValues.primaryButtonSize.getter()
{
  return EnvironmentValues.margin.getter((void (*)(void))lazy protocol witness table accessor for type PrimaryButtonSizeKey and conformance PrimaryButtonSizeKey);
}

double EnvironmentValues.margin.getter(void (*a1)(void))
{
  double v2;

  a1();
  EnvironmentValues.subscript.getter();
  return v2;
}

uint64_t EnvironmentValues.margin.setter(void (*a1)(void))
{
  a1();
  return EnvironmentValues.subscript.setter();
}

void VideoMessageControlsView.RemoteBottomControlsView.body.getter(void *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t KeyPath;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  double v28;
  char v29;
  char v30;
  id v31[2];
  uint64_t v32;
  uint64_t v33;

  v31[0] = a2;
  v31[1] = a1;
  v5 = type metadata accessor for ColorScheme();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundModifier<_ShapeView<Capsule, HierarchicalShapeStyle>>>, _InsettableBackgroundShapeModifier<Material, Capsule>>, _EnvironmentKeyWritingModifier<ColorScheme>>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _InsettableBackgroundShapeModifier<Color, Capsule>>)>>);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VStack<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundModifier<_ShapeView<Capsule, HierarchicalShapeStyle>>>, _InsettableBackgroundShapeModifier<Material, Capsule>>, _EnvironmentKeyWritingModifier<ColorScheme>>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _InsettableBackgroundShapeModifier<Color, Capsule>>)>>, _EnvironmentKeyWritingModifier<ColorScheme>>>);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<VStack<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundModifier<_ShapeView<Capsule, HierarchicalShapeStyle>>>, _InsettableBackgroundShapeModifier<Material, Capsule>>, _EnvironmentKeyWritingModifier<ColorScheme>>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _InsettableBackgroundShapeModifier<Color, Capsule>>)>>, _EnvironmentKeyWritingModifier<ColorScheme>>>, _FlexFrameLayout>);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<VStack<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundModifier<_ShapeView<Capsule, HierarchicalShapeStyle>>>, _InsettableBackgroundShapeModifier<Material, Capsule>>, _EnvironmentKeyWritingModifier<ColorScheme>>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _InsettableBackgroundShapeModifier<Color, Capsule>>)>>, _EnvironmentKeyWritingModifier<ColorScheme>>>, _FlexFrameLayout>, _OpacityEffect>);
  MEMORY[0x1E0C80A78](v33);
  v19 = (char *)v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)a3 = static HorizontalAlignment.center.getter();
  *(_QWORD *)(a3 + 8) = 0;
  *(_BYTE *)(a3 + 16) = 1;
  v32 = a3
      + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_VStackLayout, ModifiedContent<ModifiedContent<VStack<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundModifier<_ShapeView<Capsule, HierarchicalShapeStyle>>>, _InsettableBackgroundShapeModifier<Material, Capsule>>, _EnvironmentKeyWritingModifier<ColorScheme>>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _InsettableBackgroundShapeModifier<Color, Capsule>>)>>, _EnvironmentKeyWritingModifier<ColorScheme>>>, _FlexFrameLayout>, _OpacityEffect>>)
               + 44);
  *(_QWORD *)v14 = static HorizontalAlignment.center.getter();
  *((_QWORD *)v14 + 1) = 0;
  v14[16] = 1;
  v20 = (uint64_t)&v14[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_VStackLayout, ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundModifier<_ShapeView<Capsule, HierarchicalShapeStyle>>>, _InsettableBackgroundShapeModifier<Material, Capsule>>, _EnvironmentKeyWritingModifier<ColorScheme>>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _InsettableBackgroundShapeModifier<Color, Capsule>>)>>, _EnvironmentKeyWritingModifier<ColorScheme>>>)
                             + 44)];
  *(_QWORD *)v11 = static VerticalAlignment.center.getter();
  *((_QWORD *)v11 + 1) = 0x402E000000000000;
  v11[16] = 0;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_HStackLayout, TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundModifier<_ShapeView<Capsule, HierarchicalShapeStyle>>>, _InsettableBackgroundShapeModifier<Material, Capsule>>, _EnvironmentKeyWritingModifier<ColorScheme>>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _InsettableBackgroundShapeModifier<Color, Capsule>>)>>);
  closure #1 in closure #1 in closure #1 in VideoMessageControlsView.RemoteBottomControlsView.body.getter(a2, (uint64_t)&v11[*(int *)(v21 + 44)]);
  KeyPath = swift_getKeyPath();
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0CD86E0], v5);
  v23 = (uint64_t *)(v20
                  + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundModifier<_ShapeView<Capsule, HierarchicalShapeStyle>>>, _InsettableBackgroundShapeModifier<Material, Capsule>>, _EnvironmentKeyWritingModifier<ColorScheme>>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _InsettableBackgroundShapeModifier<Color, Capsule>>)>>, _EnvironmentKeyWritingModifier<ColorScheme>>)
                           + 36));
  v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<ColorScheme>);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))((char *)v23 + *(int *)(v24 + 28), v8, v5);
  *v23 = KeyPath;
  outlined init with copy of Participant.ScreenInfo?((uint64_t)v11, v20, &demangling cache variable for type metadata for HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundModifier<_ShapeView<Capsule, HierarchicalShapeStyle>>>, _InsettableBackgroundShapeModifier<Material, Capsule>>, _EnvironmentKeyWritingModifier<ColorScheme>>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _InsettableBackgroundShapeModifier<Color, Capsule>>)>>);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v11, &demangling cache variable for type metadata for HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundModifier<_ShapeView<Capsule, HierarchicalShapeStyle>>>, _InsettableBackgroundShapeModifier<Material, Capsule>>, _EnvironmentKeyWritingModifier<ColorScheme>>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _InsettableBackgroundShapeModifier<Color, Capsule>>)>>);
  v25 = static Alignment.center.getter();
  v30 = 1;
  v29 = 1;
  specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(0, 1, 0, 1, 0x7FF0000000000000, 0, 0, 1, 0, v29, 0, v30, v25, v26);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v14, &demangling cache variable for type metadata for VStack<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundModifier<_ShapeView<Capsule, HierarchicalShapeStyle>>>, _InsettableBackgroundShapeModifier<Material, Capsule>>, _EnvironmentKeyWritingModifier<ColorScheme>>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _InsettableBackgroundShapeModifier<Color, Capsule>>)>>, _EnvironmentKeyWritingModifier<ColorScheme>>>);
  v27 = v31[0];
  v28 = VideoMessagePlayerViewModel.bottomControlsOpacity.getter();

  outlined init with copy of Participant.ScreenInfo?((uint64_t)v17, (uint64_t)v19, &demangling cache variable for type metadata for ModifiedContent<VStack<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundModifier<_ShapeView<Capsule, HierarchicalShapeStyle>>>, _InsettableBackgroundShapeModifier<Material, Capsule>>, _EnvironmentKeyWritingModifier<ColorScheme>>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _InsettableBackgroundShapeModifier<Color, Capsule>>)>>, _EnvironmentKeyWritingModifier<ColorScheme>>>, _FlexFrameLayout>);
  *(double *)&v19[*(int *)(v33 + 36)] = v28;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v17, &demangling cache variable for type metadata for ModifiedContent<VStack<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundModifier<_ShapeView<Capsule, HierarchicalShapeStyle>>>, _InsettableBackgroundShapeModifier<Material, Capsule>>, _EnvironmentKeyWritingModifier<ColorScheme>>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _InsettableBackgroundShapeModifier<Color, Capsule>>)>>, _EnvironmentKeyWritingModifier<ColorScheme>>>, _FlexFrameLayout>);
  outlined init with take of Participant.VideoInfo?((uint64_t)v19, v32, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<VStack<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundModifier<_ShapeView<Capsule, HierarchicalShapeStyle>>>, _InsettableBackgroundShapeModifier<Material, Capsule>>, _EnvironmentKeyWritingModifier<ColorScheme>>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _InsettableBackgroundShapeModifier<Color, Capsule>>)>>, _EnvironmentKeyWritingModifier<ColorScheme>>>, _FlexFrameLayout>, _OpacityEffect>);
}

void closure #1 in closure #1 in closure #1 in VideoMessageControlsView.RemoteBottomControlsView.body.getter(_QWORD *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t *__return_ptr);
  _QWORD *v34;
  uint64_t v35;
  unint64_t v36;
  unsigned int v37;
  unsigned int v38;
  uint64_t v39;
  int v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t, uint64_t);
  uint64_t v59;
  int v60;
  uint64_t (*v61)(void);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t (*v76)(void);
  uint64_t KeyPath;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  id v85;
  char *v86;
  unsigned int v87;
  unsigned int v88;
  uint64_t v89;
  int v90;
  int v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  id v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t *v110;
  uint64_t v111;
  uint64_t (*v112)(void);
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  int v119;
  int v120;
  uint64_t v121;
  uint64_t v122;
  void (*v123)(char *, char *, uint64_t);
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  id v128;
  uint64_t v129;
  unint64_t v130;
  uint64_t v131;
  void (*v132)(uint64_t *__return_ptr);
  char *v133;
  char *v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;

  v149 = a2;
  v146 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _InsettableBackgroundShapeModifier<Color, Capsule>>);
  MEMORY[0x1E0C80A78](v146);
  v150 = (uint64_t)&v121 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v147 = (char *)&v121 - v5;
  MEMORY[0x1E0C80A78](v6);
  v148 = (uint64_t)&v121 - v7;
  v140 = type metadata accessor for ColorScheme();
  v139 = *(_QWORD *)(v140 - 8);
  MEMORY[0x1E0C80A78](v140);
  v138 = (char *)&v121 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v137 = type metadata accessor for Material();
  v136 = *(_QWORD *)(v137 - 8);
  MEMORY[0x1E0C80A78](v137);
  v135 = (char *)&v121 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Capsule();
  MEMORY[0x1E0C80A78](v10);
  v153 = (char *)&v121 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ShapeView<Capsule, HierarchicalShapeStyle>);
  MEMORY[0x1E0C80A78](v126);
  v129 = (uint64_t)&v121 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v152 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>);
  v122 = *(_QWORD *)(v152 - 8);
  MEMORY[0x1E0C80A78](v152);
  v141 = (char *)&v121 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v121 - v15;
  v151 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>);
  MEMORY[0x1E0C80A78](v151);
  v142 = (char *)&v121 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v121 - v19;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>);
  MEMORY[0x1E0C80A78](v21);
  v144 = (char *)&v121 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v121 - v24;
  v125 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundModifier<_ShapeView<Capsule, HierarchicalShapeStyle>>>);
  MEMORY[0x1E0C80A78](v125);
  v127 = (char *)&v121 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundModifier<_ShapeView<Capsule, HierarchicalShapeStyle>>>, _InsettableBackgroundShapeModifier<Material, Capsule>>);
  MEMORY[0x1E0C80A78](v121);
  v134 = (char *)&v121 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v124 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundModifier<_ShapeView<Capsule, HierarchicalShapeStyle>>>, _InsettableBackgroundShapeModifier<Material, Capsule>>, _EnvironmentKeyWritingModifier<ColorScheme>>);
  MEMORY[0x1E0C80A78](v124);
  v145 = (uint64_t)&v121 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v29);
  v133 = (char *)&v121 - v30;
  MEMORY[0x1E0C80A78](v31);
  v143 = (uint64_t)&v121 - v32;
  v33 = *(void (**)(uint64_t *__return_ptr))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x1B0);
  v34 = a1;
  v132 = v33;
  v33(&v154);
  v128 = v34;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v35 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>);
  v36 = lazy protocol witness table accessor for type ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>();
  v131 = v35;
  v130 = v36;
  Button.init(action:label:)();
  v37 = static Edge.Set.top.getter();
  v38 = static Edge.Set.bottom.getter();
  v39 = MEMORY[0x1C3B71FFC](0);
  v40 = MEMORY[0x1C3B71FFC]();
  if (MEMORY[0x1C3B71FFC](v40 & v37) != v37)
    v39 = MEMORY[0x1C3B71FFC](v39 | v37);
  v41 = MEMORY[0x1C3B71FFC](v39);
  if (MEMORY[0x1C3B71FFC](v41 & v38) != v38)
    LOBYTE(v39) = MEMORY[0x1C3B71FFC](v39 | v38);
  EdgeInsets.init(_all:)();
  v43 = v42;
  v45 = v44;
  v47 = v46;
  v49 = v48;
  v50 = v122;
  v51 = v152;
  v123 = *(void (**)(char *, char *, uint64_t))(v122 + 16);
  v123(v20, v16, v152);
  v52 = &v20[*(int *)(v151 + 36)];
  *v52 = v39;
  *((_QWORD *)v52 + 1) = v43;
  *((_QWORD *)v52 + 2) = v45;
  *((_QWORD *)v52 + 3) = v47;
  *((_QWORD *)v52 + 4) = v49;
  v52[40] = 0;
  v122 = *(_QWORD *)(v50 + 8);
  ((void (*)(char *, uint64_t))v122)(v16, v51);
  v53 = static Alignment.center.getter();
  specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(0, 1, 0, 1, 0x7FF0000000000000, 0, 0, 1, 0, 1, 0, 1, v53, v54);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v20, &demangling cache variable for type metadata for ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>);
  v55 = *MEMORY[0x1E0CDB0C0];
  v56 = type metadata accessor for RoundedCornerStyle();
  v57 = (uint64_t)v25;
  v58 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 104);
  v59 = (uint64_t)v153;
  v58(v153, v55, v56);
  v60 = static HierarchicalShapeStyle.tertiary.getter();
  v61 = MEMORY[0x1E0CDFE18];
  v62 = v129;
  _s15ConversationKit11ParticipantVWOcTm_2(v59, v129, (uint64_t (*)(_QWORD))MEMORY[0x1E0CDFE18]);
  v63 = v126;
  *(_DWORD *)(v62 + *(int *)(v126 + 52)) = v60;
  *(_WORD *)(v62 + *(int *)(v63 + 56)) = 256;
  outlined destroy of AccountUpdateNotice(v59, (uint64_t (*)(_QWORD))v61);
  v64 = static Alignment.center.getter();
  v66 = v65;
  v67 = (uint64_t)v127;
  v68 = (uint64_t)&v127[*(int *)(v125 + 36)];
  outlined init with copy of Participant.ScreenInfo?(v62, v68, &demangling cache variable for type metadata for _ShapeView<Capsule, HierarchicalShapeStyle>);
  v69 = (uint64_t *)(v68
                  + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _BackgroundModifier<_ShapeView<Capsule, HierarchicalShapeStyle>>)
                           + 36));
  *v69 = v64;
  v69[1] = v66;
  outlined init with copy of Participant.ScreenInfo?(v57, v67, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v62, &demangling cache variable for type metadata for _ShapeView<Capsule, HierarchicalShapeStyle>);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v57, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>);
  v70 = v135;
  static Material.ultraThin.getter();
  LODWORD(v129) = v55;
  v126 = v56;
  v125 = (uint64_t)v58;
  v58((char *)v59, v55, v56);
  v71 = (uint64_t)v134;
  v72 = &v134[*(int *)(v121 + 36)];
  v73 = v136;
  v74 = v137;
  (*(void (**)(char *, char *, uint64_t))(v136 + 16))(v72, v70, v137);
  v75 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _InsettableBackgroundShapeModifier<Material, Capsule>);
  v76 = MEMORY[0x1E0CDFE18];
  _s15ConversationKit11ParticipantVWOcTm_2(v59, (uint64_t)&v72[*(int *)(v75 + 52)], (uint64_t (*)(_QWORD))MEMORY[0x1E0CDFE18]);
  *(_WORD *)&v72[*(int *)(v75 + 56)] = 256;
  outlined init with copy of Participant.ScreenInfo?(v67, v71, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundModifier<_ShapeView<Capsule, HierarchicalShapeStyle>>>);
  outlined destroy of AccountUpdateNotice(v59, (uint64_t (*)(_QWORD))v76);
  (*(void (**)(char *, uint64_t))(v73 + 8))(v70, v74);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v67, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundModifier<_ShapeView<Capsule, HierarchicalShapeStyle>>>);
  KeyPath = swift_getKeyPath();
  v78 = v139;
  v79 = v138;
  v80 = v140;
  (*(void (**)(char *, _QWORD, uint64_t))(v139 + 104))(v138, *MEMORY[0x1E0CD86D0], v140);
  v81 = (uint64_t)v133;
  v82 = (uint64_t *)&v133[*(int *)(v124 + 36)];
  v83 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<ColorScheme>);
  (*(void (**)(char *, char *, uint64_t))(v78 + 16))((char *)v82 + *(int *)(v83 + 28), v79, v80);
  *v82 = KeyPath;
  outlined init with copy of Participant.ScreenInfo?(v71, v81, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundModifier<_ShapeView<Capsule, HierarchicalShapeStyle>>>, _InsettableBackgroundShapeModifier<Material, Capsule>>);
  (*(void (**)(char *, uint64_t))(v78 + 8))(v79, v80);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v71, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundModifier<_ShapeView<Capsule, HierarchicalShapeStyle>>>, _InsettableBackgroundShapeModifier<Material, Capsule>>);
  v84 = v143;
  outlined init with take of Participant.VideoInfo?(v81, v143, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundModifier<_ShapeView<Capsule, HierarchicalShapeStyle>>>, _InsettableBackgroundShapeModifier<Material, Capsule>>, _EnvironmentKeyWritingModifier<ColorScheme>>);
  v85 = v128;
  v132(&v154);

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v86 = v141;
  Button.init(action:label:)();
  v87 = static Edge.Set.top.getter();
  v88 = static Edge.Set.bottom.getter();
  v89 = MEMORY[0x1C3B71FFC](0);
  v90 = MEMORY[0x1C3B71FFC]();
  if (MEMORY[0x1C3B71FFC](v90 & v87) != v87)
    v89 = MEMORY[0x1C3B71FFC](v89 | v87);
  v91 = MEMORY[0x1C3B71FFC](v89);
  if (MEMORY[0x1C3B71FFC](v91 & v88) != v88)
    LOBYTE(v89) = MEMORY[0x1C3B71FFC](v89 | v88);
  EdgeInsets.init(_all:)();
  v93 = v92;
  v95 = v94;
  v97 = v96;
  v99 = v98;
  v100 = (uint64_t)v142;
  v101 = v152;
  v123(v142, v86, v152);
  v102 = v100 + *(int *)(v151 + 36);
  *(_BYTE *)v102 = v89;
  *(_QWORD *)(v102 + 8) = v93;
  *(_QWORD *)(v102 + 16) = v95;
  *(_QWORD *)(v102 + 24) = v97;
  *(_QWORD *)(v102 + 32) = v99;
  *(_BYTE *)(v102 + 40) = 0;
  ((void (*)(char *, uint64_t))v122)(v86, v101);
  v103 = static Alignment.center.getter();
  LOBYTE(v120) = 1;
  LOBYTE(v119) = 1;
  v104 = (uint64_t)v144;
  specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(0, 1, 0, 1, 0x7FF0000000000000, 0, 0, 1, 0, v119, 0, v120, v103, v105);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v100, &demangling cache variable for type metadata for ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>);
  v106 = objc_msgSend((id)objc_opt_self(), sel_systemGreenColor);
  v107 = MEMORY[0x1C3B72524](v106);
  v108 = (uint64_t)v153;
  ((void (*)(char *, _QWORD, uint64_t))v125)(v153, v129, v126);
  v109 = (uint64_t)v147;
  v110 = (uint64_t *)&v147[*(int *)(v146 + 36)];
  v111 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _InsettableBackgroundShapeModifier<Color, Capsule>);
  v112 = MEMORY[0x1E0CDFE18];
  _s15ConversationKit11ParticipantVWOcTm_2(v108, (uint64_t)v110 + *(int *)(v111 + 52), (uint64_t (*)(_QWORD))MEMORY[0x1E0CDFE18]);
  *v110 = v107;
  *(_WORD *)((char *)v110 + *(int *)(v111 + 56)) = 256;
  outlined init with copy of Participant.ScreenInfo?(v104, v109, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>);
  outlined destroy of AccountUpdateNotice(v108, (uint64_t (*)(_QWORD))v112);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v104, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>);
  v113 = v109;
  v114 = v148;
  outlined init with take of Participant.VideoInfo?(v113, v148, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _InsettableBackgroundShapeModifier<Color, Capsule>>);
  v115 = v145;
  outlined init with copy of Participant.ScreenInfo?(v84, v145, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundModifier<_ShapeView<Capsule, HierarchicalShapeStyle>>>, _InsettableBackgroundShapeModifier<Material, Capsule>>, _EnvironmentKeyWritingModifier<ColorScheme>>);
  v116 = v150;
  outlined init with copy of Participant.ScreenInfo?(v114, v150, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _InsettableBackgroundShapeModifier<Color, Capsule>>);
  v117 = v149;
  outlined init with copy of Participant.ScreenInfo?(v115, v149, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundModifier<_ShapeView<Capsule, HierarchicalShapeStyle>>>, _InsettableBackgroundShapeModifier<Material, Capsule>>, _EnvironmentKeyWritingModifier<ColorScheme>>);
  v118 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundModifier<_ShapeView<Capsule, HierarchicalShapeStyle>>>, _InsettableBackgroundShapeModifier<Material, Capsule>>, _EnvironmentKeyWritingModifier<ColorScheme>>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _InsettableBackgroundShapeModifier<Color, Capsule>>));
  outlined init with copy of Participant.ScreenInfo?(v116, v117 + *(int *)(v118 + 48), &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _InsettableBackgroundShapeModifier<Color, Capsule>>);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v114, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _InsettableBackgroundShapeModifier<Color, Capsule>>);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v84, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundModifier<_ShapeView<Capsule, HierarchicalShapeStyle>>>, _InsettableBackgroundShapeModifier<Material, Capsule>>, _EnvironmentKeyWritingModifier<ColorScheme>>);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v116, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _InsettableBackgroundShapeModifier<Color, Capsule>>);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v115, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundModifier<_ShapeView<Capsule, HierarchicalShapeStyle>>>, _InsettableBackgroundShapeModifier<Material, Capsule>>, _EnvironmentKeyWritingModifier<ColorScheme>>);
}

double closure #1 in closure #1 in closure #1 in closure #1 in VideoMessageControlsView.RemoteBottomControlsView.body.getter@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)&result = closure #1 in closure #1 in closure #1 in closure #1 in VideoMessageControlsView.RemoteBottomControlsView.body.getter((void (*)(_OWORD *__return_ptr))closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in VideoMessageControlsView.RemoteBottomControlsView.body.getter, a1).n128_u64[0];
  return result;
}

uint64_t closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in VideoMessageControlsView.RemoteBottomControlsView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  Swift::String v7;
  Swift::String_optional v8;
  Swift::String v9;
  Swift::String v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t KeyPath;
  uint64_t v33;
  uint64_t v34;
  Swift::String v35;
  Swift::String v36;

  v2 = type metadata accessor for Font.Leading();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = Image.init(systemName:)();
  v33 = static Font.subheadline.getter();
  KeyPath = swift_getKeyPath();
  v6 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v36._object = (void *)0xE000000000000000;
  v7._object = (void *)0x80000001BD68BF40;
  v7._countAndFlagsBits = 0xD00000000000001ALL;
  v8.value._countAndFlagsBits = 0x61737265766E6F43;
  v8.value._object = (void *)0xEF74694B6E6F6974;
  v9._countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  v36._countAndFlagsBits = 0;
  v10 = NSLocalizedString(_:tableName:bundle:value:comment:)(v7, v8, (NSBundle)v6, v9, v36);

  v35 = v10;
  lazy protocol witness table accessor for type String and conformance String();
  v11 = Text.init<A>(_:)();
  v13 = v12;
  v15 = v14 & 1;
  static Font.subheadline.getter();
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0CDD6D8], v2);
  Font.leading(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v16 = Text.font(_:)();
  v18 = v17;
  LOBYTE(v2) = v19;
  swift_release();
  v20 = v2 & 1;
  outlined consume of Text.Storage(v11, v13, v15);
  swift_bridgeObjectRelease();
  static Font.Weight.semibold.getter();
  v21 = Text.fontWeight(_:)();
  v23 = v22;
  v25 = v24;
  v27 = v26 & 1;
  outlined consume of Text.Storage(v16, v18, v20);
  swift_bridgeObjectRelease();
  v28 = v33;
  v29 = KeyPath;
  *(_QWORD *)a1 = v34;
  *(_QWORD *)(a1 + 8) = v29;
  *(_QWORD *)(a1 + 16) = v28;
  *(_QWORD *)(a1 + 24) = v21;
  *(_QWORD *)(a1 + 32) = v23;
  *(_BYTE *)(a1 + 40) = v27;
  *(_QWORD *)(a1 + 48) = v25;
  swift_retain();
  swift_retain();
  swift_retain();
  outlined copy of Text.Storage(v21, v23, v27);
  swift_bridgeObjectRetain();
  outlined consume of Text.Storage(v21, v23, v27);
  swift_release();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

double closure #2 in closure #1 in closure #1 in closure #1 in VideoMessageControlsView.RemoteBottomControlsView.body.getter@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)&result = closure #1 in closure #1 in closure #1 in closure #1 in VideoMessageControlsView.RemoteBottomControlsView.body.getter((void (*)(_OWORD *__return_ptr))closure #1 in closure #2 in closure #1 in closure #1 in closure #1 in VideoMessageControlsView.RemoteBottomControlsView.body.getter, a1).n128_u64[0];
  return result;
}

__n128 closure #1 in closure #1 in closure #1 in closure #1 in VideoMessageControlsView.RemoteBottomControlsView.body.getter@<Q0>(void (*a1)(_OWORD *__return_ptr)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t KeyPath;
  __n128 result;
  __int128 v11;
  __n128 v12;
  _OWORD v13[2];
  uint64_t v14;
  char v15;
  uint64_t v16;

  v4 = static VerticalAlignment.center.getter();
  a1(v13);
  v5 = v14;
  v6 = v15;
  v7 = v16;
  v11 = v13[0];
  v12 = (__n128)v13[1];
  v8 = static Color.white.getter();
  KeyPath = swift_getKeyPath();
  *(_QWORD *)a2 = v4;
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 1;
  *(_OWORD *)(a2 + 24) = v11;
  result = v12;
  *(__n128 *)(a2 + 40) = v12;
  *(_QWORD *)(a2 + 56) = v5;
  *(_BYTE *)(a2 + 64) = v6;
  *(_QWORD *)(a2 + 72) = v7;
  *(_QWORD *)(a2 + 80) = KeyPath;
  *(_QWORD *)(a2 + 88) = v8;
  return result;
}

uint64_t closure #1 in closure #2 in closure #1 in closure #1 in closure #1 in VideoMessageControlsView.RemoteBottomControlsView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  Swift::String v7;
  Swift::String_optional v8;
  Swift::String v9;
  Swift::String v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t KeyPath;
  uint64_t v33;
  uint64_t v34;
  Swift::String v35;
  Swift::String v36;

  v2 = type metadata accessor for Font.Leading();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = Image.init(systemName:)();
  v33 = static Font.subheadline.getter();
  KeyPath = swift_getKeyPath();
  v6 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v36._object = (void *)0xE000000000000000;
  v7._object = (void *)0x80000001BD68BF20;
  v7._countAndFlagsBits = 0xD000000000000017;
  v8.value._countAndFlagsBits = 0x61737265766E6F43;
  v8.value._object = (void *)0xEF74694B6E6F6974;
  v9._countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  v36._countAndFlagsBits = 0;
  v10 = NSLocalizedString(_:tableName:bundle:value:comment:)(v7, v8, (NSBundle)v6, v9, v36);

  v35 = v10;
  lazy protocol witness table accessor for type String and conformance String();
  v11 = Text.init<A>(_:)();
  v13 = v12;
  v15 = v14 & 1;
  static Font.subheadline.getter();
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0CDD6D8], v2);
  Font.leading(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v16 = Text.font(_:)();
  v18 = v17;
  LOBYTE(v2) = v19;
  swift_release();
  v20 = v2 & 1;
  outlined consume of Text.Storage(v11, v13, v15);
  swift_bridgeObjectRelease();
  static Font.Weight.semibold.getter();
  v21 = Text.fontWeight(_:)();
  v23 = v22;
  v25 = v24;
  v27 = v26 & 1;
  outlined consume of Text.Storage(v16, v18, v20);
  swift_bridgeObjectRelease();
  v28 = v33;
  v29 = KeyPath;
  *(_QWORD *)a1 = v34;
  *(_QWORD *)(a1 + 8) = v29;
  *(_QWORD *)(a1 + 16) = v28;
  *(_QWORD *)(a1 + 24) = v21;
  *(_QWORD *)(a1 + 32) = v23;
  *(_BYTE *)(a1 + 40) = v27;
  *(_QWORD *)(a1 + 48) = v25;
  swift_retain();
  swift_retain();
  swift_retain();
  outlined copy of Text.Storage(v21, v23, v27);
  swift_bridgeObjectRetain();
  outlined consume of Text.Storage(v21, v23, v27);
  swift_release();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

double VideoMessagePlayerViewModel.bottomControlsOpacity.getter()
{
  _QWORD *v0;
  char v1;
  double result;

  v1 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF0))();
  result = 0.0;
  if (v1 == 3)
    return 1.0;
  return result;
}

void protocol witness for View.body.getter in conformance VideoMessageControlsView.RemoteBottomControlsView(uint64_t a1@<X8>)
{
  uint64_t v1;

  VideoMessageControlsView.RemoteBottomControlsView.body.getter(*(void **)v1, *(_QWORD **)(v1 + 8), a1);
}

void VideoMessageControlsView.PlayButtonView.body.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  __int128 v15;
  char *v16;
  __int128 v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  __int128 v35;

  v29 = a1;
  v2 = type metadata accessor for Material();
  v27 = *(_QWORD *)(v2 - 8);
  v28 = v2;
  MEMORY[0x1E0C80A78](v2);
  v26 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>>);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Button<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>>, _FrameLayout>);
  MEMORY[0x1E0C80A78](v24);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Button<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>>, _FrameLayout>, _ContentShapeModifier<Circle>>);
  MEMORY[0x1E0C80A78](v25);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)v1;
  v13 = *(_BYTE *)(v1 + 8);
  v35 = *(_OWORD *)(v1 + 16);
  v34 = *(_QWORD *)(v1 + 32);
  v14 = swift_allocObject();
  v15 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v14 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v14 + 32) = v15;
  *(_OWORD *)(v14 + 48) = *(_OWORD *)(v1 + 32);
  *(_BYTE *)(v14 + 64) = *(_BYTE *)(v1 + 48);
  v30 = v1;
  outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(v12, v13);
  outlined retain of ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>((uint64_t)&v35);
  outlined retain of AnyLocation<String>?((uint64_t)&v34);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>);
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>();
  Button.init(action:label:)();
  outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(v12, v13);
  specialized Environment.wrappedValue.getter();
  outlined consume of Environment<CGFloat>.Content(v12, v13);
  outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(v12, v13);
  specialized Environment.wrappedValue.getter();
  outlined consume of Environment<CGFloat>.Content(v12, v13);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v9, v7, v4);
  v16 = &v9[*(int *)(v24 + 36)];
  v17 = v32;
  *(_OWORD *)v16 = v31;
  *((_OWORD *)v16 + 1) = v17;
  *((_OWORD *)v16 + 2) = v33;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  outlined init with copy of Participant.ScreenInfo?((uint64_t)v9, (uint64_t)v11, &demangling cache variable for type metadata for ModifiedContent<Button<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>>, _FrameLayout>);
  v11[*(int *)(v25 + 36)] = 0;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v9, &demangling cache variable for type metadata for ModifiedContent<Button<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>>, _FrameLayout>);
  v18 = v26;
  static Material.ultraThin.getter();
  v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>>, _FrameLayout>, _ContentShapeModifier<Circle>>, _InsettableBackgroundShapeModifier<Material, Circle>>);
  v21 = v28;
  v20 = v29;
  v22 = v29 + *(int *)(v19 + 36);
  v23 = v27;
  (*(void (**)(uint64_t, char *, uint64_t))(v27 + 16))(v22, v18, v28);
  *(_WORD *)(v22
           + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _InsettableBackgroundShapeModifier<Material, Circle>)
                    + 56)) = 256;
  outlined init with copy of Participant.ScreenInfo?((uint64_t)v11, v20, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Button<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>>, _FrameLayout>, _ContentShapeModifier<Circle>>);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v18, v21);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v11, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Button<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>>, _FrameLayout>, _ContentShapeModifier<Circle>>);
}

uint64_t closure #1 in VideoMessageControlsView.PlayButtonView.body.getter()
{
  static Animation.default.getter();
  withAnimation<A>(_:_:)();
  return swift_release();
}

uint64_t closure #1 in closure #1 in VideoMessageControlsView.PlayButtonView.body.getter(uint64_t a1)
{
  _QWORD *v1;
  unsigned __int8 (*v2)(void);
  _QWORD *v3;
  uint64_t v4;
  __int128 v6;
  char v7;

  v6 = *(_OWORD *)(a1 + 16);
  v1 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v2 = *(unsigned __int8 (**)(void))((*MEMORY[0x1E0DEEDD8] & **((_QWORD **)&v6 + 1)) + 0xF0);
  v3 = *((id *)&v6 + 1);
  if (v2() == 3)
    v4 = 0;
  else
    v4 = 3;
  (*(void (**)(uint64_t))((*v1 & *v3) + 0xF8))(v4);
  outlined release of ObservedObject<VideoMessagePlayerViewModel>((uint64_t)&v6);
  v7 = 1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<Bool>);
  return Binding.wrappedValue.setter();
}

uint64_t closure #2 in VideoMessageControlsView.PlayButtonView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t result;
  __int128 v10;

  v10 = *(_OWORD *)(a1 + 16);
  v3 = *((id *)&v10 + 1);
  VideoMessagePlayerViewModel.actionButtonImageName.getter();
  outlined release of ObservedObject<VideoMessagePlayerViewModel>((uint64_t)&v10);
  v4 = Image.init(systemName:)();
  LOBYTE(v3) = (*(uint64_t (**)(_QWORD *))((*MEMORY[0x1E0DEEDD8] & *v3) + 0x270))(v3);
  outlined release of ObservedObject<VideoMessagePlayerViewModel>((uint64_t)&v10);
  if ((v3 & 1) != 0)
    v5 = static Color.secondary.getter();
  else
    v5 = static Color.white.getter();
  v6 = v5;
  KeyPath = swift_getKeyPath();
  v8 = static Font.title.getter();
  result = swift_getKeyPath();
  *a2 = v4;
  a2[1] = KeyPath;
  a2[2] = v6;
  a2[3] = result;
  a2[4] = v8;
  return result;
}

uint64_t VideoMessagePlayerViewModel.actionButtonImageName.getter()
{
  _QWORD *v0;

  if ((*(unsigned __int8 (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF0))() == 1)
    return 0x69662E6573756170;
  else
    return 0x6C69662E79616C70;
}

void protocol witness for View.body.getter in conformance VideoMessageControlsView.PlayButtonView(uint64_t a1@<X8>)
{
  VideoMessageControlsView.PlayButtonView.body.getter(a1);
}

uint64_t default argument 0 of VideoMessageControlsView.init(verticalSizeClass:horizontalSizeClass:videoMessageViewModel:player:)@<X0>(uint64_t *a1@<X8>)
{
  return default argument 0 of VideoMessageControlsView.init(verticalSizeClass:horizontalSizeClass:videoMessageViewModel:player:)(a1);
}

{
  *a1 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
  return swift_storeEnumTagMultiPayload();
}

uint64_t default argument 1 of VideoMessageControlsView.init(verticalSizeClass:horizontalSizeClass:videoMessageViewModel:player:)@<X0>(uint64_t *a1@<X8>)
{
  return default argument 0 of VideoMessageControlsView.init(verticalSizeClass:horizontalSizeClass:videoMessageViewModel:player:)(a1);
}

uint64_t VideoMessageControlsView.init(verticalSizeClass:horizontalSizeClass:videoMessageViewModel:player:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  int *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  char v13;
  uint64_t v14;

  *(_QWORD *)a4 = swift_getKeyPath();
  *(_BYTE *)(a4 + 8) = 0;
  v8 = (int *)OUTLINED_FUNCTION_39_57();
  outlined init with take of Participant.VideoInfo?(a1, a4 + v8[5], &demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>);
  outlined init with take of Participant.VideoInfo?(a2, a4 + v8[6], &demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>);
  v9 = (uint64_t *)(a4 + v8[7]);
  type metadata accessor for VideoMessagePlayerViewModel(0);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type VideoMessagePlayerViewModel and conformance VideoMessagePlayerViewModel, (void (*)(uint64_t))type metadata accessor for VideoMessagePlayerViewModel);
  *v9 = ObservedObject.init(wrappedValue:)();
  v9[1] = v10;
  v11 = a4 + v8[8];
  result = OUTLINED_FUNCTION_79_19();
  *(_BYTE *)v11 = v13;
  *(_QWORD *)(v11 + 8) = v14;
  *(_QWORD *)(a4 + v8[9]) = a3;
  *(_QWORD *)(a4 + v8[10]) = 0x3FC51EB851EB851FLL;
  *(_QWORD *)(a4 + v8[11]) = 0x4077C00000000000;
  return result;
}

void closure #1 in closure #1 in View.conditionalyOverlaid<A>(with:alignment:pinningTo:spacing:condition:)()
{
  char v0;
  uint64_t v1;
  uint64_t v2;

  static VerticalAlignment.top.getter();
  v0 = static VerticalAlignment.== infix(_:_:)();
  v1 = static VerticalAlignment.bottom.getter();
  if ((v0 & 1) == 0)
  {
    if ((static VerticalAlignment.== infix(_:_:)() & 1) != 0
      || (static VerticalAlignment.lastTextBaseline.getter(), (static VerticalAlignment.== infix(_:_:)() & 1) != 0))
    {
      v2 = static VerticalAlignment.top.getter();
      MEMORY[0x1C3B71630](v2);
      return;
    }
    static VerticalAlignment.center.getter();
    if ((static VerticalAlignment.== infix(_:_:)() & 1) == 0)
    {
      static VerticalAlignment.firstTextBaseline.getter();
      static VerticalAlignment.== infix(_:_:)();
    }
    v1 = static VerticalAlignment.center.getter();
  }
  MEMORY[0x1C3B71630](v1);
}

uint64_t key path getter for AnimatedSaveButton.videoMessageViewModel : AnimatedSaveButton@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 8);
  result = AnimatedSaveButton.videoMessageViewModel.getter();
  *a2 = v3;
  return result;
}

void key path setter for AnimatedSaveButton.videoMessageViewModel : AnimatedSaveButton(id *a1)
{
  AnimatedSaveButton.videoMessageViewModel.setter((uint64_t)*a1);
}

void AnimatedSaveButton.videoMessageViewModel.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = a1;
  OUTLINED_FUNCTION_0();
}

uint64_t (*AnimatedSaveButton.videoMessageViewModel.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t AnimatedSaveButton.$videoMessageViewModel.getter()
{
  type metadata accessor for VideoMessagePlayerViewModel(0);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type VideoMessagePlayerViewModel and conformance VideoMessagePlayerViewModel, (void (*)(uint64_t))type metadata accessor for VideoMessagePlayerViewModel);
  return OUTLINED_FUNCTION_42_45();
}

uint64_t AnimatedSaveButton.showsTitle.getter()
{
  unsigned __int8 v1;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
  State.wrappedValue.getter();
  return v1;
}

uint64_t key path getter for AnimatedSaveButton.showsTitle : AnimatedSaveButton@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = AnimatedSaveButton.showsTitle.getter();
  *a1 = result & 1;
  return result;
}

uint64_t key path setter for AnimatedSaveButton.showsTitle : AnimatedSaveButton()
{
  return AnimatedSaveButton.showsTitle.setter();
}

uint64_t AnimatedSaveButton.showsTitle.setter()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
  return State.wrappedValue.setter();
}

void AnimatedSaveButton.showsTitle.modify(_QWORD *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  _BYTE *v8;

  v8 = malloc(0x28uLL);
  *a1 = v8;
  v8[34] = a4;
  *v8 = a4;
  *((_QWORD *)v8 + 1) = a5;
  *((_QWORD *)v8 + 2) = a5;
  OUTLINED_FUNCTION_11_8();
  *((_QWORD *)v8 + 3) = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
  State.wrappedValue.getter();
  OUTLINED_FUNCTION_18();
}

void AnimatedSaveButton.showsTitle.modify(uint64_t a1)
{
  _QWORD *v1;
  char v2;
  uint64_t v3;

  v1 = *(_QWORD **)a1;
  v2 = *(_BYTE *)(*(_QWORD *)a1 + 32);
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  *(_BYTE *)v1 = *(_BYTE *)(*(_QWORD *)a1 + 34);
  v1[1] = v3;
  *((_BYTE *)v1 + 33) = v2;
  State.wrappedValue.setter();
  OUTLINED_FUNCTION_19();
  free(v1);
}

uint64_t AnimatedSaveButton.$showsTitle.getter()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
  State.projectedValue.getter();
  return v1;
}

uint64_t AnimatedSaveButton.body.getter(uint64_t a1, _QWORD *a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  double v26;
  uint64_t v27;
  uint64_t (*v28)(void);
  _QWORD *v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v9 = type metadata accessor for AccessibilityChildBehavior();
  v36 = *(_QWORD *)(v9 - 8);
  v37 = v9;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_16_2();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ZStack<TupleView<(ModifiedContent<AnimatedSaveView, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>, _EnvironmentKeyWritingModifier<Color?>>, _FixedSizeLayout>?)>>);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_83_4();
  v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ZStack<TupleView<(ModifiedContent<AnimatedSaveView, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>, _EnvironmentKeyWritingModifier<Color?>>, _FixedSizeLayout>?)>>, _OpacityEffect>);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_77();
  v16 = v15 - v14;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ZStack<TupleView<(ModifiedContent<AnimatedSaveView, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>, _EnvironmentKeyWritingModifier<Color?>>, _FixedSizeLayout>?)>>, _OpacityEffect>, _AnimationModifier<AnimatedSaveView.SaveState>>);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v18);
  OUTLINED_FUNCTION_81();
  v35 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.accessibilityElement(children:)>>.0)
                  - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v19);
  OUTLINED_FUNCTION_77();
  v22 = v21 - v20;
  *v5 = static Alignment.center.getter();
  v5[1] = v23;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_ZStackLayout, TupleView<(ModifiedContent<AnimatedSaveView, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>, _EnvironmentKeyWritingModifier<Color?>>, _FixedSizeLayout>?)>>);
  closure #1 in AnimatedSaveButton.body.getter(a1, a2, a3, a4, (uint64_t)v5 + *(int *)(v24 + 44));
  v25 = a2;
  v26 = VideoMessagePlayerViewModel.ancillaryButtonOpacity.getter();

  outlined init with copy of Participant.ScreenInfo?((uint64_t)v5, v16, &demangling cache variable for type metadata for ZStack<TupleView<(ModifiedContent<AnimatedSaveView, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>, _EnvironmentKeyWritingModifier<Color?>>, _FixedSizeLayout>?)>>);
  *(double *)(v16 + *(int *)(v12 + 36)) = v26;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v5, &demangling cache variable for type metadata for ZStack<TupleView<(ModifiedContent<AnimatedSaveView, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>, _EnvironmentKeyWritingModifier<Color?>>, _FixedSizeLayout>?)>>);
  v27 = static Animation.linear(duration:)();
  v28 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v25) + 0x240);
  v29 = v25;
  LOBYTE(v25) = v28();

  outlined init with copy of Participant.ScreenInfo?(v16, v6, &demangling cache variable for type metadata for ModifiedContent<ZStack<TupleView<(ModifiedContent<AnimatedSaveView, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>, _EnvironmentKeyWritingModifier<Color?>>, _FixedSizeLayout>?)>>, _OpacityEffect>);
  v30 = v6 + *(int *)(v17 + 36);
  *(_QWORD *)v30 = v27;
  *(_BYTE *)(v30 + 8) = (_BYTE)v25;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v16, &demangling cache variable for type metadata for ModifiedContent<ZStack<TupleView<(ModifiedContent<AnimatedSaveView, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>, _EnvironmentKeyWritingModifier<Color?>>, _FixedSizeLayout>?)>>, _OpacityEffect>);
  static AccessibilityChildBehavior.combine.getter();
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ZStack<TupleView<(ModifiedContent<AnimatedSaveView, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>, _EnvironmentKeyWritingModifier<Color?>>, _FixedSizeLayout>?)>>, _OpacityEffect>, _AnimationModifier<AnimatedSaveView.SaveState>> and conformance <> ModifiedContent<A, B>();
  View.accessibilityElement(children:)();
  (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v4, v37);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v6, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ZStack<TupleView<(ModifiedContent<AnimatedSaveView, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>, _EnvironmentKeyWritingModifier<Color?>>, _FixedSizeLayout>?)>>, _OpacityEffect>, _AnimationModifier<AnimatedSaveView.SaveState>>);
  v31 = v29;
  VideoMessagePlayerViewModel.ancillaryButtonOpacity.getter();

  swift_getOpaqueTypeConformance2();
  View.accessibilityHidden(_:)();
  return OUTLINED_FUNCTION_52(v22, *(uint64_t (**)(uint64_t, uint64_t))(v35 + 8));
}

uint64_t closure #1 in AnimatedSaveButton.body.getter@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(void);
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  char v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  double v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t *v60;
  char *v61;
  uint64_t KeyPath;
  int v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  unsigned __int8 v70;

  KeyPath = a4;
  LODWORD(v60) = a3;
  v59 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<Text>);
  v57 = *(_QWORD *)(v59 - 8);
  MEMORY[0x1E0C80A78](v59);
  v61 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>);
  MEMORY[0x1E0C80A78](v56);
  v58 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>, _EnvironmentKeyWritingModifier<Color?>>);
  MEMORY[0x1E0C80A78](v55);
  v11 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>, _EnvironmentKeyWritingModifier<Color?>>, _FixedSizeLayout>);
  MEMORY[0x1E0C80A78](v66);
  v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>, _EnvironmentKeyWritingModifier<Color?>>, _FixedSizeLayout>?);
  MEMORY[0x1E0C80A78](v14);
  v65 = (uint64_t)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v51 - v17;
  type metadata accessor for VideoMessagePlayerViewModel(0);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type VideoMessagePlayerViewModel and conformance VideoMessagePlayerViewModel, (void (*)(uint64_t))type metadata accessor for VideoMessagePlayerViewModel);
  v19 = a1;
  v20 = (void *)ObservedObject.projectedValue.getter();
  swift_getKeyPath();
  ObservedObject.Wrapper.subscript.getter();
  swift_release();

  v21 = v68;
  v22 = v69;
  v64 = v70;
  v23 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *a2) + 0x240);
  v24 = a2;
  v63 = v23();

  v25 = v24;
  LODWORD(v24) = v23();

  if ((_DWORD)v24)
  {
    v26 = 1;
  }
  else
  {
    v52 = v19;
    v53 = v13;
    v54 = v11;
    v27 = v60 & 1;
    LOBYTE(v68) = v60 & 1;
    v69 = KeyPath;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
    State.wrappedValue.getter();
    v26 = 1;
    if (v67 == 1)
    {
      v28 = swift_allocObject();
      v60 = &v51;
      *(_QWORD *)(v28 + 16) = v52;
      *(_QWORD *)(v28 + 24) = v25;
      *(_BYTE *)(v28 + 32) = v27;
      v29 = KeyPath;
      *(_QWORD *)(v28 + 40) = KeyPath;
      MEMORY[0x1E0C80A78](v29);
      *(&v51 - 4) = v30;
      *(&v51 - 3) = (uint64_t)v25;
      *((_BYTE *)&v51 - 16) = v27;
      *(&v51 - 1) = v31;
      swift_retain();
      v32 = v25;
      Button.init(action:label:)();
      v33 = v32;
      v34 = v23();

      v35 = v34 != 0;
      KeyPath = swift_getKeyPath();
      v36 = swift_allocObject();
      *(_BYTE *)(v36 + 16) = v35;
      v37 = v57;
      v38 = (uint64_t)v58;
      v39 = v61;
      v40 = v59;
      (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v58, v61, v59);
      v41 = (uint64_t *)(v38 + *(int *)(v56 + 36));
      *v41 = KeyPath;
      v41[1] = (uint64_t)partial apply for closure #1 in View.disabled(_:);
      v41[2] = v36;
      (*(void (**)(char *, uint64_t))(v37 + 8))(v39, v40);
      v42 = static Color.white.getter();
      v43 = swift_getKeyPath();
      v44 = (uint64_t)v54;
      outlined init with copy of Participant.ScreenInfo?(v38, (uint64_t)v54, &demangling cache variable for type metadata for ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>);
      v45 = (uint64_t *)(v44 + *(int *)(v55 + 36));
      *v45 = v43;
      v45[1] = v42;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v38, &demangling cache variable for type metadata for ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>);
      v46 = (uint64_t)v53;
      outlined init with copy of Participant.ScreenInfo?(v44, (uint64_t)v53, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>, _EnvironmentKeyWritingModifier<Color?>>);
      *(_WORD *)(v46 + *(int *)(v66 + 36)) = 1;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v44, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>, _EnvironmentKeyWritingModifier<Color?>>);
      outlined init with take of Participant.VideoInfo?(v46, (uint64_t)v18, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>, _EnvironmentKeyWritingModifier<Color?>>, _FixedSizeLayout>);
      v26 = 0;
    }
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v18, v26, 1, v66);
  if ((_BYTE)v63)
    v47 = 1.0;
  else
    v47 = 0.0;
  v48 = v65;
  outlined init with copy of Participant.ScreenInfo?((uint64_t)v18, v65, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>, _EnvironmentKeyWritingModifier<Color?>>, _FixedSizeLayout>?);
  *(_QWORD *)a5 = v21;
  *(_QWORD *)(a5 + 8) = v22;
  *(_BYTE *)(a5 + 16) = v64;
  *(_QWORD *)(a5 + 24) = 0x3FD6666666666666;
  *(double *)(a5 + 32) = v47;
  v49 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModifiedContent<AnimatedSaveView, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>, _EnvironmentKeyWritingModifier<Color?>>, _FixedSizeLayout>?));
  outlined init with copy of Participant.ScreenInfo?(v48, a5 + *(int *)(v49 + 48), &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>, _EnvironmentKeyWritingModifier<Color?>>, _FixedSizeLayout>?);
  swift_retain();
  swift_retain();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v18, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>, _EnvironmentKeyWritingModifier<Color?>>, _FixedSizeLayout>?);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v48, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>, _EnvironmentKeyWritingModifier<Color?>>, _FixedSizeLayout>?);
  swift_release();
  return swift_release();
}

uint64_t key path getter for VideoMessagePlayerViewModel.saveState : VideoMessagePlayerViewModel@<X0>(_QWORD **a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x240))();
  *a2 = result;
  return result;
}

uint64_t key path setter for VideoMessagePlayerViewModel.saveState : VideoMessagePlayerViewModel(unsigned __int8 *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x248))(*a1);
}

uint64_t closure #1 in closure #1 in AnimatedSaveButton.body.getter(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  void (*v3)(uint64_t);
  _QWORD *v4;
  void (*v5)(_QWORD *__return_ptr);
  _QWORD *v6;
  void (*v7)(uint64_t);
  uint64_t v8;
  _QWORD v10[7];

  v2 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v3 = *(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *a2) + 0x248);
  v4 = a2;
  v3(1);

  v5 = *(void (**)(_QWORD *__return_ptr))((*v2 & *v4) + 0x1B0);
  v6 = v4;
  v5(v10);

  v7 = (void (*)(uint64_t))v10[6];
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v8 = swift_release();
  v7(v8);
  return swift_release();
}

uint64_t closure #2 in closure #1 in AnimatedSaveButton.body.getter@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  void *v4;
  id v5;
  id v6;
  Swift::String v7;
  Swift::String_optional v8;
  Swift::String v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  Swift::String v23;

  v4 = (void *)objc_opt_self();
  v5 = a1;
  v6 = objc_msgSend(v4, sel_conversationKit);
  v23._object = (void *)0xE000000000000000;
  v7._object = (void *)0x80000001BD68C000;
  v7._countAndFlagsBits = 0xD000000000000012;
  v8.value._countAndFlagsBits = 0x61737265766E6F43;
  v8.value._object = (void *)0xEF74694B6E6F6974;
  v9._countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  v23._countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v7, v8, (NSBundle)v6, v9, v23);

  lazy protocol witness table accessor for type String and conformance String();
  v10 = Text.init<A>(_:)();
  v12 = v11;
  v14 = v13 & 1;
  static Font.Weight.semibold.getter();
  v15 = Text.fontWeight(_:)();
  v17 = v16;
  v19 = v18;
  v21 = v20;
  outlined consume of Text.Storage(v10, v12, v14);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v15;
  *(_QWORD *)(a2 + 8) = v17;
  *(_BYTE *)(a2 + 16) = v19 & 1;
  *(_QWORD *)(a2 + 24) = v21;
  return result;
}

double VideoMessagePlayerViewModel.ancillaryButtonOpacity.getter()
{
  _QWORD *v0;
  char v1;
  double result;

  if (!VideoMessagePlayerViewModel.hasRecording.getter())
    return 0.0;
  v1 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x210))();
  result = 1.0;
  if ((v1 & 1) == 0)
    return 0.0;
  return result;
}

uint64_t protocol witness for View.body.getter in conformance AnimatedSaveButton()
{
  uint64_t v0;

  return AnimatedSaveButton.body.getter(*(_QWORD *)v0, *(_QWORD **)(v0 + 8), *(unsigned __int8 *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

id MovieScrubber.makeCoordinator()()
{
  void **v0;
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<String>);
  Binding.projectedValue.getter();
  v1 = *v0;
  objc_allocWithZone((Class)type metadata accessor for MovieScrubber.ScubberCoordinator());
  return MovieScrubber.ScubberCoordinator.init(text:player:)(v3, v4, v5, v6, v1);
}

id MovieScrubber.makeUIView(context:)()
{
  _QWORD *v0;
  id v1;

  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D7D190]), sel_init);
  objc_msgSend(v1, sel_setEstimatedDuration_, 5.0);
  objc_msgSend(v1, sel_setPlayer_, *v0);
  return v1;
}

uint64_t MovieScrubber.sizeThatFits(_:uiView:context:)()
{
  return 0x406F400000000000;
}

uint64_t MovieScrubber.ScubberCoordinator.text.setter()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<String>);
  return Binding.wrappedValue.setter();
}

id MovieScrubber.ScubberCoordinator.init(text:player:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  char *v5;
  char *v6;
  char *v7;
  id v8;
  CMTimeValue value;
  CMTimeScale timescale;
  CMTimeEpoch epoch;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  CMTimeValue aBlock;
  unint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t *);
  void *v23;
  void (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  objc_super v26;
  CMTime v27;

  v6 = &v5[OBJC_IVAR____TtCV15ConversationKitP33_B419541366E265736F7249488C40E55C13MovieScrubber18ScubberCoordinator_observer];
  *(_OWORD *)v6 = 0u;
  *((_OWORD *)v6 + 1) = 0u;
  v7 = &v5[OBJC_IVAR____TtCV15ConversationKitP33_B419541366E265736F7249488C40E55C13MovieScrubber18ScubberCoordinator__text];
  *(_QWORD *)v7 = a1;
  *((_QWORD *)v7 + 1) = a2;
  *((_QWORD *)v7 + 2) = a3;
  *((_QWORD *)v7 + 3) = a4;
  v26.receiver = v5;
  v26.super_class = (Class)type metadata accessor for MovieScrubber.ScubberCoordinator();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  v8 = objc_msgSendSuper2(&v26, sel_init);
  v27 = CMTime.init(seconds:preferredTimescale:)(1.0, 1);
  value = v27.value;
  timescale = v27.timescale;
  epoch = v27.epoch;
  v12 = HIDWORD(*(_QWORD *)&v27.timescale);
  type metadata accessor for OS_dispatch_queue();
  v13 = (void *)static OS_dispatch_queue.main.getter();
  v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v24 = partial apply for closure #1 in MovieScrubber.ScubberCoordinator.init(text:player:);
  v25 = v14;
  aBlock = MEMORY[0x1E0C809B0];
  v21 = 1107296256;
  v22 = thunk for @escaping @callee_guaranteed @Sendable (@unowned CMTime) -> ();
  v23 = &block_descriptor_83;
  v15 = _Block_copy(&aBlock);
  swift_release();
  aBlock = value;
  v21 = __PAIR64__(v12, timescale);
  v22 = (uint64_t (*)(uint64_t, uint64_t *))epoch;
  v16 = objc_msgSend(a5, sel_addPeriodicTimeObserverForInterval_queue_usingBlock_, &aBlock, v13, v15);
  _Block_release(v15);

  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  v17 = (uint64_t)v8
      + OBJC_IVAR____TtCV15ConversationKitP33_B419541366E265736F7249488C40E55C13MovieScrubber18ScubberCoordinator_observer;
  swift_beginAccess();
  outlined assign with take of Any?((uint64_t)&aBlock, v17);
  swift_endAccess();
  return v8;
}

void closure #1 in MovieScrubber.ScubberCoordinator.init(text:player:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  double v7;
  id v8;
  id v9;

  v4 = a4 + 16;
  swift_beginAccess();
  v5 = MEMORY[0x1C3B752C0](v4);
  if (v5)
  {
    v6 = (void *)v5;
    CMTime.seconds.getter();
    if (v7 <= 0.0)
      goto LABEL_7;
    if (one-time initialization token for timeFormatter != -1)
      swift_once();
    v8 = (id)static NSDateComponentsFormatter.timeFormatter;
    CMTime.seconds.getter();
    v9 = objc_msgSend(v8, sel_stringFromTimeInterval_);

    if (v9)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();

    }
    else
    {
LABEL_7:
      static String.localizedStringWithFormat(_:_:)();
    }
    MovieScrubber.ScubberCoordinator.text.setter();

  }
}

void MovieScrubber.ScubberCoordinator.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t thunk for @escaping @callee_guaranteed @Sendable (@unowned CMTime) -> ()(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[2];
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  v5(v2, v3, v4);
  return swift_release();
}

id MovieScrubber.ScubberCoordinator.__deallocating_deinit()
{
  return MovieScrubber.ScubberCoordinator.__deallocating_deinit((uint64_t (*)(_QWORD))type metadata accessor for MovieScrubber.ScubberCoordinator);
}

id protocol witness for UIViewRepresentable.makeUIView(context:) in conformance MovieScrubber()
{
  return MovieScrubber.makeUIView(context:)();
}

uint64_t protocol witness for UIViewRepresentable.updateUIView(_:context:) in conformance MovieScrubber(uint64_t a1)
{
  return TPNumberPadCharacter.rawValue.getter(a1);
}

id protocol witness for UIViewRepresentable.makeCoordinator() in conformance MovieScrubber@<X0>(_QWORD *a1@<X8>)
{
  id result;

  result = MovieScrubber.makeCoordinator()();
  *a1 = result;
  return result;
}

uint64_t protocol witness for UIViewRepresentable.sizeThatFits(_:uiView:context:) in conformance MovieScrubber()
{
  return MovieScrubber.sizeThatFits(_:uiView:context:)();
}

uint64_t protocol witness for static View._makeView(view:inputs:) in conformance MovieScrubber()
{
  lazy protocol witness table accessor for type MovieScrubber and conformance MovieScrubber();
  return static UIViewRepresentable._makeView(view:inputs:)();
}

uint64_t protocol witness for static View._makeViewList(view:inputs:) in conformance MovieScrubber()
{
  lazy protocol witness table accessor for type MovieScrubber and conformance MovieScrubber();
  return static UIViewRepresentable._makeViewList(view:inputs:)();
}

void protocol witness for View.body.getter in conformance MovieScrubber()
{
  lazy protocol witness table accessor for type MovieScrubber and conformance MovieScrubber();
  UIViewRepresentable.body.getter();
  __break(1u);
}

BOOL VideoMessagePlayerViewModel.hasRecording.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  _BOOL8 v5;
  uint64_t v7;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of Participant.ScreenInfo?(v0 + OBJC_IVAR____TtC15ConversationKit27VideoMessagePlayerViewModel_videoMessageURL, (uint64_t)v3, &demangling cache variable for type metadata for URL?);
  v4 = type metadata accessor for URL();
  v5 = __swift_getEnumTagSinglePayload((uint64_t)v3, 1, v4) != 1;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v3, &demangling cache variable for type metadata for URL?);
  return v5;
}

uint64_t key path getter for VideoMessagePlayerViewActions.dismissAction : VideoMessagePlayerViewActions@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *a1;
  v3 = a1[1];
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  *a2 = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  a2[1] = v5;
  return swift_retain();
}

uint64_t key path setter for VideoMessagePlayerViewActions.dismissAction : VideoMessagePlayerViewActions(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  swift_retain();
  result = swift_release();
  *a2 = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  a2[1] = v5;
  return result;
}

void VideoMessagePlayerViewActions.dismissAction.getter()
{
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

void VideoMessagePlayerViewActions.dismissAction.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_70_21();
  *v1 = v2;
  v1[1] = v0;
  OUTLINED_FUNCTION_18();
}

uint64_t (*VideoMessagePlayerViewActions.dismissAction.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t key path getter for VideoMessagePlayerViewActions.sendAction : VideoMessagePlayerViewActions@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  *a2 = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  a2[1] = v5;
  return swift_retain();
}

uint64_t key path setter for VideoMessagePlayerViewActions.sendAction : VideoMessagePlayerViewActions(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  swift_retain();
  result = swift_release();
  *(_QWORD *)(a2 + 16) = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  *(_QWORD *)(a2 + 24) = v5;
  return result;
}

void VideoMessagePlayerViewActions.sendAction.getter()
{
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

void VideoMessagePlayerViewActions.sendAction.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_69_19();
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)(v1 + 24) = v0;
  OUTLINED_FUNCTION_18();
}

uint64_t (*VideoMessagePlayerViewActions.sendAction.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t key path getter for VideoMessagePlayerViewActions.shutterAction : VideoMessagePlayerViewActions@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  *a2 = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  a2[1] = v5;
  return swift_retain();
}

uint64_t key path setter for VideoMessagePlayerViewActions.shutterAction : VideoMessagePlayerViewActions(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  swift_retain();
  result = swift_release();
  *(_QWORD *)(a2 + 32) = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  *(_QWORD *)(a2 + 40) = v5;
  return result;
}

void VideoMessagePlayerViewActions.shutterAction.getter()
{
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

void VideoMessagePlayerViewActions.shutterAction.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_6_6();
  swift_release();
  *(_QWORD *)(v1 + 32) = v2;
  *(_QWORD *)(v1 + 40) = v0;
  OUTLINED_FUNCTION_18();
}

uint64_t (*VideoMessagePlayerViewActions.shutterAction.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t key path getter for VideoMessagePlayerViewActions.ancillaryAction : VideoMessagePlayerViewActions@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 56);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  *a2 = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  a2[1] = v5;
  return swift_retain();
}

uint64_t key path setter for VideoMessagePlayerViewActions.ancillaryAction : VideoMessagePlayerViewActions(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  swift_retain();
  result = swift_release();
  *(_QWORD *)(a2 + 48) = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  *(_QWORD *)(a2 + 56) = v5;
  return result;
}

void VideoMessagePlayerViewActions.ancillaryAction.getter()
{
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

void VideoMessagePlayerViewActions.ancillaryAction.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_6_6();
  swift_release();
  *(_QWORD *)(v1 + 48) = v2;
  *(_QWORD *)(v1 + 56) = v0;
  OUTLINED_FUNCTION_18();
}

uint64_t (*VideoMessagePlayerViewActions.ancillaryAction.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t key path getter for VideoMessagePlayerViewActions.retakeAction : VideoMessagePlayerViewActions@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a1 + 64);
  v3 = *(_QWORD *)(a1 + 72);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  *a2 = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  a2[1] = v5;
  return swift_retain();
}

uint64_t key path setter for VideoMessagePlayerViewActions.retakeAction : VideoMessagePlayerViewActions(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  swift_retain();
  result = swift_release();
  *(_QWORD *)(a2 + 64) = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  *(_QWORD *)(a2 + 72) = v5;
  return result;
}

void VideoMessagePlayerViewActions.retakeAction.getter()
{
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

void VideoMessagePlayerViewActions.retakeAction.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_6_6();
  swift_release();
  *(_QWORD *)(v1 + 64) = v2;
  *(_QWORD *)(v1 + 72) = v0;
  OUTLINED_FUNCTION_18();
}

uint64_t (*VideoMessagePlayerViewActions.retakeAction.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t key path getter for VideoMessagePlayerViewActions.callAction : VideoMessagePlayerViewActions@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a1 + 80);
  v3 = *(_QWORD *)(a1 + 88);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  *a2 = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  a2[1] = v5;
  return swift_retain();
}

uint64_t key path setter for VideoMessagePlayerViewActions.callAction : VideoMessagePlayerViewActions(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  swift_retain();
  result = swift_release();
  *(_QWORD *)(a2 + 80) = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  *(_QWORD *)(a2 + 88) = v5;
  return result;
}

void VideoMessagePlayerViewActions.callAction.getter()
{
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

void VideoMessagePlayerViewActions.callAction.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_6_6();
  swift_release();
  *(_QWORD *)(v1 + 80) = v2;
  *(_QWORD *)(v1 + 88) = v0;
  OUTLINED_FUNCTION_18();
}

uint64_t (*VideoMessagePlayerViewActions.callAction.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t key path getter for VideoMessagePlayerViewActions.messageAction : VideoMessagePlayerViewActions@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a1 + 96);
  v3 = *(_QWORD *)(a1 + 104);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  *a2 = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  a2[1] = v5;
  return swift_retain();
}

uint64_t key path setter for VideoMessagePlayerViewActions.messageAction : VideoMessagePlayerViewActions(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  swift_retain();
  result = swift_release();
  *(_QWORD *)(a2 + 96) = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  *(_QWORD *)(a2 + 104) = v5;
  return result;
}

void VideoMessagePlayerViewActions.messageAction.getter()
{
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

void VideoMessagePlayerViewActions.messageAction.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_6_6();
  swift_release();
  *(_QWORD *)(v1 + 96) = v2;
  *(_QWORD *)(v1 + 104) = v0;
  OUTLINED_FUNCTION_18();
}

uint64_t (*VideoMessagePlayerViewActions.messageAction.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void VideoMessagePlayerViewActions.init()(_QWORD *a1@<X8>)
{
  *a1 = TPNumberPadCharacter.rawValue.getter;
  a1[1] = 0;
  a1[2] = TPNumberPadCharacter.rawValue.getter;
  a1[3] = 0;
  a1[4] = TPNumberPadCharacter.rawValue.getter;
  a1[5] = 0;
  a1[6] = TPNumberPadCharacter.rawValue.getter;
  a1[7] = 0;
  a1[8] = TPNumberPadCharacter.rawValue.getter;
  a1[9] = 0;
  a1[10] = TPNumberPadCharacter.rawValue.getter;
  a1[11] = 0;
  a1[12] = TPNumberPadCharacter.rawValue.getter;
  a1[13] = 0;
}

void default argument 0 of VideoMessagePlayerViewActions.init(dismissAction:sendAction:shutterAction:ancillaryAction:retakeAction:callAction:messageAction:)()
{
  OUTLINED_FUNCTION_34_0();
}

void default argument 1 of VideoMessagePlayerViewActions.init(dismissAction:sendAction:shutterAction:ancillaryAction:retakeAction:callAction:messageAction:)()
{
  OUTLINED_FUNCTION_34_0();
}

void default argument 2 of VideoMessagePlayerViewActions.init(dismissAction:sendAction:shutterAction:ancillaryAction:retakeAction:callAction:messageAction:)()
{
  OUTLINED_FUNCTION_34_0();
}

void default argument 3 of VideoMessagePlayerViewActions.init(dismissAction:sendAction:shutterAction:ancillaryAction:retakeAction:callAction:messageAction:)()
{
  OUTLINED_FUNCTION_34_0();
}

void default argument 4 of VideoMessagePlayerViewActions.init(dismissAction:sendAction:shutterAction:ancillaryAction:retakeAction:callAction:messageAction:)()
{
  OUTLINED_FUNCTION_34_0();
}

void default argument 5 of VideoMessagePlayerViewActions.init(dismissAction:sendAction:shutterAction:ancillaryAction:retakeAction:callAction:messageAction:)()
{
  OUTLINED_FUNCTION_34_0();
}

void default argument 6 of VideoMessagePlayerViewActions.init(dismissAction:sendAction:shutterAction:ancillaryAction:retakeAction:callAction:messageAction:)()
{
  OUTLINED_FUNCTION_34_0();
}

__n128 VideoMessagePlayerViewActions.init(dismissAction:sendAction:shutterAction:ancillaryAction:retakeAction:callAction:messageAction:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __int128 a10, __n128 a11, uint64_t a12, uint64_t a13)
{
  __n128 result;

  result = a11;
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  *(_QWORD *)(a9 + 48) = a7;
  *(_QWORD *)(a9 + 56) = a8;
  *(_OWORD *)(a9 + 64) = a10;
  *(__n128 *)(a9 + 80) = a11;
  *(_QWORD *)(a9 + 96) = a12;
  *(_QWORD *)(a9 + 104) = a13;
  return result;
}

uint64_t key path getter for UserSafetyActions.blockAction : UserSafetyActions@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *a1;
  v3 = a1[1];
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  *a2 = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  a2[1] = v5;
  return swift_retain();
}

uint64_t key path setter for UserSafetyActions.blockAction : UserSafetyActions(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  swift_retain();
  result = swift_release();
  *a2 = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  a2[1] = v5;
  return result;
}

void UserSafetyActions.blockAction.getter()
{
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

void UserSafetyActions.blockAction.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_70_21();
  *v1 = v2;
  v1[1] = v0;
  OUTLINED_FUNCTION_18();
}

uint64_t (*UserSafetyActions.blockAction.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t key path getter for UserSafetyActions.helpAction : UserSafetyActions@<X0>(uint64_t a1@<X0>, void (**a2)()@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  *a2 = partial apply for thunk for @callee_guaranteed () -> ();
  a2[1] = (void (*)())v5;
  return swift_retain();
}

uint64_t key path setter for UserSafetyActions.helpAction : UserSafetyActions(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  swift_retain();
  result = swift_release();
  *(_QWORD *)(a2 + 16) = partial apply for thunk for @callee_guaranteed () -> ();
  *(_QWORD *)(a2 + 24) = v5;
  return result;
}

void UserSafetyActions.helpAction.getter()
{
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

void UserSafetyActions.helpAction.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_69_19();
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)(v1 + 24) = v0;
  OUTLINED_FUNCTION_18();
}

uint64_t (*UserSafetyActions.helpAction.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void UserSafetyActions.init()(_QWORD *a1@<X8>)
{
  *a1 = TPNumberPadCharacter.rawValue.getter;
  a1[1] = 0;
  a1[2] = TPNumberPadCharacter.rawValue.getter;
  a1[3] = 0;
}

void default argument 0 of UserSafetyActions.init(blockAction:helpAction:)()
{
  OUTLINED_FUNCTION_34_0();
}

void default argument 1 of UserSafetyActions.init(blockAction:helpAction:)()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t UserSafetyActions.init(blockAction:helpAction:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance VideoMessageControlsView.PlayState()
{
  int v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  char v9;

  v0 = Hasher.init(_seed:)();
  OUTLINED_FUNCTION_22_7(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);
  OUTLINED_FUNCTION_4_6();
  OUTLINED_FUNCTION_2();
}

void VideoMessagePlayerViewModel.PlayerSpatiality.hash(into:)()
{
  unsigned __int8 *v0;

  Hasher._combine(_:)(*v0);
  OUTLINED_FUNCTION_0();
}

void VideoMessagePlayerViewModel.PlayerSpatiality.hashValue.getter()
{
  int v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  char v9;

  v0 = OUTLINED_FUNCTION_5_1();
  OUTLINED_FUNCTION_22_7(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);
  OUTLINED_FUNCTION_4_6();
  OUTLINED_FUNCTION_2();
}

uint64_t key path getter for VideoMessagePlayerViewModel.controlsConfiguration : VideoMessagePlayerViewModel@<X0>(_QWORD **a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0xC0))();
  *a2 = result;
  return result;
}

uint64_t key path setter for VideoMessagePlayerViewModel.controlsConfiguration : VideoMessagePlayerViewModel(unsigned __int8 *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & **a2) + 0xC8))(*a1);
}

void VideoMessagePlayerViewModel.controlsConfiguration.getter()
{
  VideoMessagePlayerViewModel.controlsConfiguration.getter();
}

{
  OUTLINED_FUNCTION_88_14();
  OUTLINED_FUNCTION_608();
  OUTLINED_FUNCTION_488();
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_45_0();
}

void VideoMessagePlayerViewModel.controlsConfiguration.setter()
{
  VideoMessagePlayerViewModel.controlsConfiguration.setter();
}

{
  OUTLINED_FUNCTION_60_27();
  OUTLINED_FUNCTION_608();
  OUTLINED_FUNCTION_80_17();
  OUTLINED_FUNCTION_51_40();
  OUTLINED_FUNCTION_45_0();
}

void VideoMessagePlayerViewModel.controlsConfiguration.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t KeyPath;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_80((uint64_t)v1);
  KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_72_0(KeyPath);
  v3 = swift_getKeyPath();
  *(_QWORD *)(v0 + 48) = OUTLINED_FUNCTION_19_4(v3);
  OUTLINED_FUNCTION_18();
}

uint64_t key path setter for VideoMessagePlayerViewModel.$controlsConfiguration : VideoMessagePlayerViewModel(uint64_t a1, _QWORD **a2)
{
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<VideoMessagePlayerViewModel.ControlsConfiguration>.Publisher);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v8 + 16))(v7, a1, v5);
  return (*(uint64_t (**)(char *))((*MEMORY[0x1E0DEEDD8] & **a2) + 0xE0))(v7);
}

void VideoMessagePlayerViewModel.$controlsConfiguration.getter()
{
  VideoMessagePlayerViewModel.$controlsConfiguration.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit27VideoMessagePlayerViewModel__controlsConfiguration, &demangling cache variable for type metadata for Published<VideoMessagePlayerViewModel.ControlsConfiguration>);
}

uint64_t VideoMessagePlayerViewModel.$controlsConfiguration.setter(uint64_t a1)
{
  return VideoMessagePlayerViewModel.$controlsConfiguration.setter(a1, &demangling cache variable for type metadata for Published<VideoMessagePlayerViewModel.ControlsConfiguration>.Publisher, (uint64_t)&OBJC_IVAR____TtC15ConversationKit27VideoMessagePlayerViewModel__controlsConfiguration, &demangling cache variable for type metadata for Published<VideoMessagePlayerViewModel.ControlsConfiguration>);
}

void VideoMessagePlayerViewModel.$controlsConfiguration.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;

  v1 = OUTLINED_FUNCTION_46_17();
  OUTLINED_FUNCTION_35_11((uint64_t)v1);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<VideoMessagePlayerViewModel.ControlsConfiguration>.Publisher);
  *(_QWORD *)(v0 + 48) = OUTLINED_FUNCTION_15_3(v2);
  v3 = OUTLINED_FUNCTION_21_50();
  OUTLINED_FUNCTION_70_13((uint64_t)v3);
  OUTLINED_FUNCTION_7_17();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<VideoMessagePlayerViewModel.ControlsConfiguration>);
  OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_18();
}

void VideoMessagePlayerViewModel.$controlsConfiguration.modify(uint64_t a1, char a2)
{
  LinkDetailHeaderView.$invitedMemberHandles.modify(a1, a2, (void (*)(void *))VideoMessagePlayerViewModel.$controlsConfiguration.setter);
}

uint64_t key path setter for VideoMessagePlayerViewModel.playState : VideoMessagePlayerViewModel(unsigned __int8 *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & **a2) + 0xF8))(*a1);
}

void VideoMessagePlayerViewModel.playState.getter()
{
  VideoMessagePlayerViewModel.controlsConfiguration.getter();
}

void VideoMessagePlayerViewModel.playState.setter()
{
  VideoMessagePlayerViewModel.controlsConfiguration.setter();
}

void VideoMessagePlayerViewModel.playState.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t KeyPath;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_80((uint64_t)v1);
  KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_72_0(KeyPath);
  v3 = swift_getKeyPath();
  *(_QWORD *)(v0 + 48) = OUTLINED_FUNCTION_19_4(v3);
  OUTLINED_FUNCTION_18();
}

uint64_t key path setter for VideoMessagePlayerViewModel.$playState : VideoMessagePlayerViewModel(uint64_t a1, _QWORD **a2)
{
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<VideoMessageControlsView.PlayState>.Publisher);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v8 + 16))(v7, a1, v5);
  return (*(uint64_t (**)(char *))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x110))(v7);
}

void VideoMessagePlayerViewModel.$playState.getter()
{
  VideoMessagePlayerViewModel.$controlsConfiguration.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit27VideoMessagePlayerViewModel__playState, &demangling cache variable for type metadata for Published<VideoMessageControlsView.PlayState>);
}

uint64_t VideoMessagePlayerViewModel.$playState.setter(uint64_t a1)
{
  return VideoMessagePlayerViewModel.$controlsConfiguration.setter(a1, &demangling cache variable for type metadata for Published<VideoMessageControlsView.PlayState>.Publisher, (uint64_t)&OBJC_IVAR____TtC15ConversationKit27VideoMessagePlayerViewModel__playState, &demangling cache variable for type metadata for Published<VideoMessageControlsView.PlayState>);
}

void VideoMessagePlayerViewModel.$playState.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;

  v1 = OUTLINED_FUNCTION_46_17();
  OUTLINED_FUNCTION_35_11((uint64_t)v1);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<VideoMessageControlsView.PlayState>.Publisher);
  *(_QWORD *)(v0 + 48) = OUTLINED_FUNCTION_15_3(v2);
  v3 = OUTLINED_FUNCTION_21_50();
  OUTLINED_FUNCTION_70_13((uint64_t)v3);
  OUTLINED_FUNCTION_7_17();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<VideoMessageControlsView.PlayState>);
  OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_18();
}

void VideoMessagePlayerViewModel.$playState.modify(uint64_t a1, char a2)
{
  LinkDetailHeaderView.$invitedMemberHandles.modify(a1, a2, (void (*)(void *))VideoMessagePlayerViewModel.$playState.setter);
}

_QWORD *key path getter for VideoMessagePlayerViewModel.playerSpatiality : VideoMessagePlayerViewModel@<X0>(_QWORD **a1@<X0>, _BYTE *a2@<X8>)
{
  _QWORD *result;
  uint64_t v4;

  result = (*(_QWORD *(**)(uint64_t *__return_ptr))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x120))(&v4);
  *a2 = v4;
  return result;
}

uint64_t key path setter for VideoMessagePlayerViewModel.playerSpatiality : VideoMessagePlayerViewModel(char *a1, _QWORD **a2)
{
  _QWORD *v2;
  char v4;

  v2 = *a2;
  v4 = *a1;
  return (*(uint64_t (**)(char *))((*MEMORY[0x1E0DEEDD8] & *v2) + 0x128))(&v4);
}

uint64_t VideoMessagePlayerViewModel.playerSpatiality.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  OUTLINED_FUNCTION_18_84();
  OUTLINED_FUNCTION_22();
  return OUTLINED_FUNCTION_2_19();
}

void VideoMessagePlayerViewModel.playerSpatiality.setter()
{
  void *v0;
  id v1;

  swift_getKeyPath();
  swift_getKeyPath();
  v1 = v0;
  static Published.subscript.setter();
  OUTLINED_FUNCTION_45_0();
}

void VideoMessagePlayerViewModel.playerSpatiality.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t KeyPath;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_80((uint64_t)v1);
  KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_72_0(KeyPath);
  v3 = swift_getKeyPath();
  *(_QWORD *)(v0 + 48) = OUTLINED_FUNCTION_19_4(v3);
  OUTLINED_FUNCTION_18();
}

uint64_t key path setter for VideoMessagePlayerViewModel.$playerSpatiality : VideoMessagePlayerViewModel(uint64_t a1, _QWORD **a2)
{
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<VideoMessagePlayerViewModel.PlayerSpatiality>.Publisher);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v8 + 16))(v7, a1, v5);
  return (*(uint64_t (**)(char *))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x140))(v7);
}

void VideoMessagePlayerViewModel.$playerSpatiality.getter()
{
  VideoMessagePlayerViewModel.$controlsConfiguration.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit27VideoMessagePlayerViewModel__playerSpatiality, &demangling cache variable for type metadata for Published<VideoMessagePlayerViewModel.PlayerSpatiality>);
}

uint64_t VideoMessagePlayerViewModel.$playerSpatiality.setter(uint64_t a1)
{
  return VideoMessagePlayerViewModel.$controlsConfiguration.setter(a1, &demangling cache variable for type metadata for Published<VideoMessagePlayerViewModel.PlayerSpatiality>.Publisher, (uint64_t)&OBJC_IVAR____TtC15ConversationKit27VideoMessagePlayerViewModel__playerSpatiality, &demangling cache variable for type metadata for Published<VideoMessagePlayerViewModel.PlayerSpatiality>);
}

void VideoMessagePlayerViewModel.$playerSpatiality.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;

  v1 = OUTLINED_FUNCTION_46_17();
  OUTLINED_FUNCTION_35_11((uint64_t)v1);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<VideoMessagePlayerViewModel.PlayerSpatiality>.Publisher);
  *(_QWORD *)(v0 + 48) = OUTLINED_FUNCTION_15_3(v2);
  v3 = OUTLINED_FUNCTION_21_50();
  OUTLINED_FUNCTION_70_13((uint64_t)v3);
  OUTLINED_FUNCTION_7_17();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<VideoMessagePlayerViewModel.PlayerSpatiality>);
  OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_18();
}

void VideoMessagePlayerViewModel.$playerSpatiality.modify(uint64_t a1, char a2)
{
  LinkDetailHeaderView.$invitedMemberHandles.modify(a1, a2, (void (*)(void *))VideoMessagePlayerViewModel.$playerSpatiality.setter);
}

uint64_t VideoMessagePlayerViewModel.durationString.getter()
{
  return VideoMessagePlayerViewModel.durationString.getter();
}

{
  uint64_t v1;

  OUTLINED_FUNCTION_88_14();
  OUTLINED_FUNCTION_608();
  OUTLINED_FUNCTION_488();
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_11_0();
  return v1;
}

uint64_t VideoMessagePlayerViewModel.durationString.setter()
{
  return VideoMessagePlayerViewModel.durationString.setter();
}

{
  void *v0;
  id v1;

  swift_getKeyPath();
  OUTLINED_FUNCTION_608();
  v1 = v0;
  return static Published.subscript.setter();
}

void VideoMessagePlayerViewModel.durationString.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t KeyPath;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_80((uint64_t)v1);
  KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_72_0(KeyPath);
  v3 = swift_getKeyPath();
  *(_QWORD *)(v0 + 48) = OUTLINED_FUNCTION_19_4(v3);
  OUTLINED_FUNCTION_18();
}

uint64_t key path setter for VideoMessagePlayerViewModel.$durationString : VideoMessagePlayerViewModel(uint64_t a1, _QWORD **a2)
{
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String>.Publisher);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v8 + 16))(v7, a1, v5);
  return (*(uint64_t (**)(char *))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x170))(v7);
}

void VideoMessagePlayerViewModel.$durationString.getter()
{
  VideoMessagePlayerViewModel.$controlsConfiguration.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit27VideoMessagePlayerViewModel__durationString, &demangling cache variable for type metadata for Published<String>);
}

uint64_t VideoMessagePlayerViewModel.$durationString.setter(uint64_t a1)
{
  return VideoMessagePlayerViewModel.$controlsConfiguration.setter(a1, &demangling cache variable for type metadata for Published<String>.Publisher, (uint64_t)&OBJC_IVAR____TtC15ConversationKit27VideoMessagePlayerViewModel__durationString, &demangling cache variable for type metadata for Published<String>);
}

void VideoMessagePlayerViewModel.$durationString.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;

  v1 = OUTLINED_FUNCTION_46_17();
  OUTLINED_FUNCTION_35_11((uint64_t)v1);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String>.Publisher);
  *(_QWORD *)(v0 + 48) = OUTLINED_FUNCTION_15_3(v2);
  v3 = OUTLINED_FUNCTION_21_50();
  OUTLINED_FUNCTION_70_13((uint64_t)v3);
  OUTLINED_FUNCTION_7_17();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String>);
  OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_18();
}

void VideoMessagePlayerViewModel.$durationString.modify(uint64_t a1, char a2)
{
  LinkDetailHeaderView.$invitedMemberHandles.modify(a1, a2, (void (*)(void *))VideoMessagePlayerViewModel.$durationString.setter);
}

uint64_t key path getter for VideoMessagePlayerViewModel.title : VideoMessagePlayerViewModel@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x180))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t key path setter for VideoMessagePlayerViewModel.title : VideoMessagePlayerViewModel(uint64_t *a1, _QWORD **a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = *(uint64_t (**)(uint64_t, uint64_t))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x188);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t VideoMessagePlayerViewModel.title.getter()
{
  return VideoMessagePlayerViewModel.durationString.getter();
}

uint64_t VideoMessagePlayerViewModel.title.setter()
{
  return VideoMessagePlayerViewModel.durationString.setter();
}

void VideoMessagePlayerViewModel.title.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t KeyPath;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_80((uint64_t)v1);
  KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_72_0(KeyPath);
  v3 = swift_getKeyPath();
  *(_QWORD *)(v0 + 48) = OUTLINED_FUNCTION_19_4(v3);
  OUTLINED_FUNCTION_18();
}

uint64_t key path setter for VideoMessagePlayerViewModel.$title : VideoMessagePlayerViewModel(uint64_t a1, _QWORD **a2)
{
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String>.Publisher);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v8 + 16))(v7, a1, v5);
  return (*(uint64_t (**)(char *))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x1A0))(v7);
}

void VideoMessagePlayerViewModel.$title.getter()
{
  VideoMessagePlayerViewModel.$controlsConfiguration.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit27VideoMessagePlayerViewModel__title, &demangling cache variable for type metadata for Published<String>);
}

uint64_t VideoMessagePlayerViewModel.$title.setter(uint64_t a1)
{
  return VideoMessagePlayerViewModel.$controlsConfiguration.setter(a1, &demangling cache variable for type metadata for Published<String>.Publisher, (uint64_t)&OBJC_IVAR____TtC15ConversationKit27VideoMessagePlayerViewModel__title, &demangling cache variable for type metadata for Published<String>);
}

void VideoMessagePlayerViewModel.$title.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;

  v1 = OUTLINED_FUNCTION_46_17();
  OUTLINED_FUNCTION_35_11((uint64_t)v1);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String>.Publisher);
  *(_QWORD *)(v0 + 48) = OUTLINED_FUNCTION_15_3(v2);
  v3 = OUTLINED_FUNCTION_21_50();
  OUTLINED_FUNCTION_70_13((uint64_t)v3);
  OUTLINED_FUNCTION_7_17();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String>);
  OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_18();
}

void VideoMessagePlayerViewModel.$title.modify(uint64_t a1, char a2)
{
  LinkDetailHeaderView.$invitedMemberHandles.modify(a1, a2, (void (*)(void *))VideoMessagePlayerViewModel.$title.setter);
}

double key path getter for VideoMessagePlayerViewModel.actions : VideoMessagePlayerViewModel@<D0>(_QWORD **a1@<X0>, _OWORD *a2@<X8>)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  double result;
  _OWORD v7[6];
  __int128 v8;

  (*(void (**)(_OWORD *__return_ptr))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x1B0))(v7);
  v3 = v7[1];
  *a2 = v7[0];
  a2[1] = v3;
  v4 = v7[3];
  a2[2] = v7[2];
  a2[3] = v4;
  v5 = v7[5];
  a2[4] = v7[4];
  a2[5] = v5;
  result = *(double *)&v8;
  a2[6] = v8;
  return result;
}

uint64_t key path setter for VideoMessagePlayerViewModel.actions : VideoMessagePlayerViewModel(uint64_t *a1, _QWORD **a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v4)(uint64_t *);
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;

  v2 = a1[13];
  v3 = *a2;
  v6 = *a1;
  v7 = *(_OWORD *)(a1 + 1);
  v8 = *(_OWORD *)(a1 + 3);
  v9 = *(_OWORD *)(a1 + 5);
  v10 = *(_OWORD *)(a1 + 7);
  v11 = *(_OWORD *)(a1 + 9);
  v12 = *(_OWORD *)(a1 + 11);
  v13 = v2;
  v4 = *(uint64_t (**)(uint64_t *))((*MEMORY[0x1E0DEEDD8] & *v3) + 0x1B8);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return v4(&v6);
}

uint64_t VideoMessagePlayerViewModel.actions.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  OUTLINED_FUNCTION_18_84();
  OUTLINED_FUNCTION_22();
  return OUTLINED_FUNCTION_2_19();
}

uint64_t VideoMessagePlayerViewModel.actions.setter()
{
  void *v0;
  id v1;

  swift_getKeyPath();
  swift_getKeyPath();
  v1 = v0;
  return OUTLINED_FUNCTION_52_38();
}

void VideoMessagePlayerViewModel.actions.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t KeyPath;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_80((uint64_t)v1);
  KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_72_0(KeyPath);
  v3 = swift_getKeyPath();
  *(_QWORD *)(v0 + 48) = OUTLINED_FUNCTION_19_4(v3);
  OUTLINED_FUNCTION_18();
}

uint64_t key path setter for VideoMessagePlayerViewModel.$actions : VideoMessagePlayerViewModel(uint64_t a1, _QWORD **a2)
{
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<VideoMessagePlayerViewActions>.Publisher);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v8 + 16))(v7, a1, v5);
  return (*(uint64_t (**)(char *))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x1D0))(v7);
}

void VideoMessagePlayerViewModel.$actions.getter()
{
  VideoMessagePlayerViewModel.$controlsConfiguration.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit27VideoMessagePlayerViewModel__actions, &demangling cache variable for type metadata for Published<VideoMessagePlayerViewActions>);
}

uint64_t VideoMessagePlayerViewModel.$actions.setter(uint64_t a1)
{
  return VideoMessagePlayerViewModel.$controlsConfiguration.setter(a1, &demangling cache variable for type metadata for Published<VideoMessagePlayerViewActions>.Publisher, (uint64_t)&OBJC_IVAR____TtC15ConversationKit27VideoMessagePlayerViewModel__actions, &demangling cache variable for type metadata for Published<VideoMessagePlayerViewActions>);
}

void VideoMessagePlayerViewModel.$actions.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;

  v1 = OUTLINED_FUNCTION_46_17();
  OUTLINED_FUNCTION_35_11((uint64_t)v1);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<VideoMessagePlayerViewActions>.Publisher);
  *(_QWORD *)(v0 + 48) = OUTLINED_FUNCTION_15_3(v2);
  v3 = OUTLINED_FUNCTION_21_50();
  OUTLINED_FUNCTION_70_13((uint64_t)v3);
  OUTLINED_FUNCTION_7_17();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<VideoMessagePlayerViewActions>);
  OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_18();
}

void VideoMessagePlayerViewModel.$actions.modify(uint64_t a1, char a2)
{
  LinkDetailHeaderView.$invitedMemberHandles.modify(a1, a2, (void (*)(void *))VideoMessagePlayerViewModel.$actions.setter);
}

double key path getter for VideoMessagePlayerViewModel.safetyActions : VideoMessagePlayerViewModel@<D0>(_QWORD **a1@<X0>, _OWORD *a2@<X8>)
{
  double result;
  __int128 v4;
  _OWORD v5[2];

  (*(void (**)(_OWORD *__return_ptr))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x1E0))(v5);
  result = *(double *)v5;
  v4 = v5[1];
  *a2 = v5[0];
  a2[1] = v4;
  return result;
}

uint64_t key path setter for VideoMessagePlayerViewModel.safetyActions : VideoMessagePlayerViewModel(uint64_t *a1, _QWORD **a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v4)(uint64_t *);
  uint64_t v6;
  __int128 v7;
  uint64_t v8;

  v2 = a1[3];
  v3 = *a2;
  v6 = *a1;
  v7 = *(_OWORD *)(a1 + 1);
  v8 = v2;
  v4 = *(uint64_t (**)(uint64_t *))((*MEMORY[0x1E0DEEDD8] & *v3) + 0x1E8);
  swift_retain();
  swift_retain();
  return v4(&v6);
}

uint64_t VideoMessagePlayerViewModel.safetyActions.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  OUTLINED_FUNCTION_18_84();
  OUTLINED_FUNCTION_22();
  return OUTLINED_FUNCTION_2_19();
}

void VideoMessagePlayerViewModel.safetyActions.setter()
{
  void *v0;
  id v1;

  swift_getKeyPath();
  swift_getKeyPath();
  v1 = v0;
  OUTLINED_FUNCTION_52_38();
  OUTLINED_FUNCTION_9_0();
}

void VideoMessagePlayerViewModel.safetyActions.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t KeyPath;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_80((uint64_t)v1);
  KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_72_0(KeyPath);
  v3 = swift_getKeyPath();
  *(_QWORD *)(v0 + 48) = OUTLINED_FUNCTION_19_4(v3);
  OUTLINED_FUNCTION_18();
}

uint64_t key path setter for VideoMessagePlayerViewModel.$safetyActions : VideoMessagePlayerViewModel(uint64_t a1, _QWORD **a2)
{
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<UserSafetyActions>.Publisher);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v8 + 16))(v7, a1, v5);
  return (*(uint64_t (**)(char *))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x200))(v7);
}

void VideoMessagePlayerViewModel.$safetyActions.getter()
{
  VideoMessagePlayerViewModel.$controlsConfiguration.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit27VideoMessagePlayerViewModel__safetyActions, &demangling cache variable for type metadata for Published<UserSafetyActions>);
}

uint64_t VideoMessagePlayerViewModel.$safetyActions.setter(uint64_t a1)
{
  return VideoMessagePlayerViewModel.$controlsConfiguration.setter(a1, &demangling cache variable for type metadata for Published<UserSafetyActions>.Publisher, (uint64_t)&OBJC_IVAR____TtC15ConversationKit27VideoMessagePlayerViewModel__safetyActions, &demangling cache variable for type metadata for Published<UserSafetyActions>);
}

void VideoMessagePlayerViewModel.$safetyActions.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;

  v1 = OUTLINED_FUNCTION_46_17();
  OUTLINED_FUNCTION_35_11((uint64_t)v1);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<UserSafetyActions>.Publisher);
  *(_QWORD *)(v0 + 48) = OUTLINED_FUNCTION_15_3(v2);
  v3 = OUTLINED_FUNCTION_21_50();
  OUTLINED_FUNCTION_70_13((uint64_t)v3);
  OUTLINED_FUNCTION_7_17();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<UserSafetyActions>);
  OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_18();
}

void VideoMessagePlayerViewModel.$safetyActions.modify(uint64_t a1, char a2)
{
  LinkDetailHeaderView.$invitedMemberHandles.modify(a1, a2, (void (*)(void *))VideoMessagePlayerViewModel.$safetyActions.setter);
}

uint64_t key path getter for VideoMessagePlayerViewModel.showsAncillaryControl : VideoMessagePlayerViewModel@<X0>(_QWORD **a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x210))();
  *a2 = result & 1;
  return result;
}

uint64_t key path setter for VideoMessagePlayerViewModel.showsAncillaryControl : VideoMessagePlayerViewModel(unsigned __int8 *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x218))(*a1);
}

void VideoMessagePlayerViewModel.showsAncillaryControl.getter()
{
  VideoMessagePlayerViewModel.controlsConfiguration.getter();
}

void VideoMessagePlayerViewModel.showsAncillaryControl.setter()
{
  VideoMessagePlayerViewModel.controlsConfiguration.setter();
}

void VideoMessagePlayerViewModel.showsAncillaryControl.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t KeyPath;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_80((uint64_t)v1);
  KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_72_0(KeyPath);
  v3 = swift_getKeyPath();
  *(_QWORD *)(v0 + 48) = OUTLINED_FUNCTION_19_4(v3);
  OUTLINED_FUNCTION_18();
}

uint64_t key path setter for VideoMessagePlayerViewModel.$showsAncillaryControl : VideoMessagePlayerViewModel(uint64_t a1, _QWORD **a2)
{
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v8 + 16))(v7, a1, v5);
  return (*(uint64_t (**)(char *))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x230))(v7);
}

void VideoMessagePlayerViewModel.$showsAncillaryControl.getter()
{
  VideoMessagePlayerViewModel.$controlsConfiguration.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit27VideoMessagePlayerViewModel__showsAncillaryControl, (uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
}

uint64_t VideoMessagePlayerViewModel.$showsAncillaryControl.setter(uint64_t a1)
{
  return VideoMessagePlayerViewModel.$controlsConfiguration.setter(a1, &demangling cache variable for type metadata for Published<Bool>.Publisher, (uint64_t)&OBJC_IVAR____TtC15ConversationKit27VideoMessagePlayerViewModel__showsAncillaryControl, (uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
}

void VideoMessagePlayerViewModel.$showsAncillaryControl.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;

  v1 = OUTLINED_FUNCTION_46_17();
  OUTLINED_FUNCTION_35_11((uint64_t)v1);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  *(_QWORD *)(v0 + 48) = OUTLINED_FUNCTION_15_3(v2);
  v3 = OUTLINED_FUNCTION_21_50();
  OUTLINED_FUNCTION_70_13((uint64_t)v3);
  OUTLINED_FUNCTION_7_17();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_18();
}

void VideoMessagePlayerViewModel.$showsAncillaryControl.modify(uint64_t a1, char a2)
{
  LinkDetailHeaderView.$invitedMemberHandles.modify(a1, a2, (void (*)(void *))VideoMessagePlayerViewModel.$showsAncillaryControl.setter);
}

void VideoMessagePlayerViewModel.saveState.getter()
{
  VideoMessagePlayerViewModel.controlsConfiguration.getter();
}

void VideoMessagePlayerViewModel.saveState.setter()
{
  VideoMessagePlayerViewModel.controlsConfiguration.setter();
}

void VideoMessagePlayerViewModel.saveState.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t KeyPath;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_80((uint64_t)v1);
  KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_72_0(KeyPath);
  v3 = swift_getKeyPath();
  *(_QWORD *)(v0 + 48) = OUTLINED_FUNCTION_19_4(v3);
  OUTLINED_FUNCTION_18();
}

uint64_t key path setter for VideoMessagePlayerViewModel.$saveState : VideoMessagePlayerViewModel(uint64_t a1, _QWORD **a2)
{
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<AnimatedSaveView.SaveState>.Publisher);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v8 + 16))(v7, a1, v5);
  return (*(uint64_t (**)(char *))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x260))(v7);
}

void VideoMessagePlayerViewModel.$saveState.getter()
{
  VideoMessagePlayerViewModel.$controlsConfiguration.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit27VideoMessagePlayerViewModel__saveState, &demangling cache variable for type metadata for Published<AnimatedSaveView.SaveState>);
}

uint64_t VideoMessagePlayerViewModel.$saveState.setter(uint64_t a1)
{
  return VideoMessagePlayerViewModel.$controlsConfiguration.setter(a1, &demangling cache variable for type metadata for Published<AnimatedSaveView.SaveState>.Publisher, (uint64_t)&OBJC_IVAR____TtC15ConversationKit27VideoMessagePlayerViewModel__saveState, &demangling cache variable for type metadata for Published<AnimatedSaveView.SaveState>);
}

void VideoMessagePlayerViewModel.$saveState.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;

  v1 = OUTLINED_FUNCTION_46_17();
  OUTLINED_FUNCTION_35_11((uint64_t)v1);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<AnimatedSaveView.SaveState>.Publisher);
  *(_QWORD *)(v0 + 48) = OUTLINED_FUNCTION_15_3(v2);
  v3 = OUTLINED_FUNCTION_21_50();
  OUTLINED_FUNCTION_70_13((uint64_t)v3);
  OUTLINED_FUNCTION_7_17();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<AnimatedSaveView.SaveState>);
  OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_18();
}

void VideoMessagePlayerViewModel.$saveState.modify(uint64_t a1, char a2)
{
  LinkDetailHeaderView.$invitedMemberHandles.modify(a1, a2, (void (*)(void *))VideoMessagePlayerViewModel.$saveState.setter);
}

uint64_t key path getter for VideoMessagePlayerViewModel.isSensitive : VideoMessagePlayerViewModel@<X0>(_QWORD **a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x270))();
  *a2 = result & 1;
  return result;
}

uint64_t key path setter for VideoMessagePlayerViewModel.isSensitive : VideoMessagePlayerViewModel(unsigned __int8 *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x278))(*a1);
}

void VideoMessagePlayerViewModel.isSensitive.getter()
{
  VideoMessagePlayerViewModel.controlsConfiguration.getter();
}

void VideoMessagePlayerViewModel.isSensitive.setter()
{
  VideoMessagePlayerViewModel.controlsConfiguration.setter();
}

void VideoMessagePlayerViewModel.isSensitive.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t KeyPath;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_80((uint64_t)v1);
  KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_72_0(KeyPath);
  v3 = swift_getKeyPath();
  *(_QWORD *)(v0 + 48) = OUTLINED_FUNCTION_19_4(v3);
  OUTLINED_FUNCTION_18();
}

uint64_t key path setter for VideoMessagePlayerViewModel.$isSensitive : VideoMessagePlayerViewModel(uint64_t a1, _QWORD **a2)
{
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v8 + 16))(v7, a1, v5);
  return (*(uint64_t (**)(char *))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x290))(v7);
}

void VideoMessagePlayerViewModel.$isSensitive.getter()
{
  VideoMessagePlayerViewModel.$controlsConfiguration.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit27VideoMessagePlayerViewModel__isSensitive, (uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
}

uint64_t VideoMessagePlayerViewModel.$isSensitive.setter(uint64_t a1)
{
  return VideoMessagePlayerViewModel.$controlsConfiguration.setter(a1, &demangling cache variable for type metadata for Published<Bool>.Publisher, (uint64_t)&OBJC_IVAR____TtC15ConversationKit27VideoMessagePlayerViewModel__isSensitive, (uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
}

void VideoMessagePlayerViewModel.$isSensitive.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;

  v1 = OUTLINED_FUNCTION_46_17();
  OUTLINED_FUNCTION_35_11((uint64_t)v1);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  *(_QWORD *)(v0 + 48) = OUTLINED_FUNCTION_15_3(v2);
  v3 = OUTLINED_FUNCTION_21_50();
  OUTLINED_FUNCTION_70_13((uint64_t)v3);
  OUTLINED_FUNCTION_7_17();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_18();
}

void VideoMessagePlayerViewModel.$isSensitive.modify(uint64_t a1, char a2)
{
  LinkDetailHeaderView.$invitedMemberHandles.modify(a1, a2, (void (*)(void *))VideoMessagePlayerViewModel.$isSensitive.setter);
}

uint64_t key path getter for VideoMessagePlayerViewModel.showsSensitivityOptions : VideoMessagePlayerViewModel@<X0>(_QWORD **a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x2A0))();
  *a2 = result & 1;
  return result;
}

uint64_t key path setter for VideoMessagePlayerViewModel.showsSensitivityOptions : VideoMessagePlayerViewModel(unsigned __int8 *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x2A8))(*a1);
}

void VideoMessagePlayerViewModel.showsSensitivityOptions.getter()
{
  VideoMessagePlayerViewModel.controlsConfiguration.getter();
}

void VideoMessagePlayerViewModel.showsSensitivityOptions.setter()
{
  VideoMessagePlayerViewModel.controlsConfiguration.setter();
}

void VideoMessagePlayerViewModel.showsSensitivityOptions.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t KeyPath;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_80((uint64_t)v1);
  KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_72_0(KeyPath);
  v3 = swift_getKeyPath();
  *(_QWORD *)(v0 + 48) = OUTLINED_FUNCTION_19_4(v3);
  OUTLINED_FUNCTION_18();
}

uint64_t key path setter for VideoMessagePlayerViewModel.$showsSensitivityOptions : VideoMessagePlayerViewModel(uint64_t a1, _QWORD **a2)
{
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v8 + 16))(v7, a1, v5);
  return (*(uint64_t (**)(char *))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x2C0))(v7);
}

void VideoMessagePlayerViewModel.$showsSensitivityOptions.getter()
{
  VideoMessagePlayerViewModel.$controlsConfiguration.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit27VideoMessagePlayerViewModel__showsSensitivityOptions, (uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
}

void VideoMessagePlayerViewModel.$controlsConfiguration.getter(uint64_t a1, uint64_t *a2)
{
  OUTLINED_FUNCTION_60_0();
  __swift_instantiateConcreteTypeFromMangledName(a2);
  Published.projectedValue.getter();
  swift_endAccess();
  OUTLINED_FUNCTION_9_0();
}

uint64_t VideoMessagePlayerViewModel.$showsSensitivityOptions.setter(uint64_t a1)
{
  return VideoMessagePlayerViewModel.$controlsConfiguration.setter(a1, &demangling cache variable for type metadata for Published<Bool>.Publisher, (uint64_t)&OBJC_IVAR____TtC15ConversationKit27VideoMessagePlayerViewModel__showsSensitivityOptions, (uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
}

uint64_t VideoMessagePlayerViewModel.$controlsConfiguration.setter(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v11;

  v6 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))((char *)&v11 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6, v8);
  OUTLINED_FUNCTION_60_0();
  __swift_instantiateConcreteTypeFromMangledName(a4);
  Published.projectedValue.setter();
  swift_endAccess();
  return OUTLINED_FUNCTION_52(a1, *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
}

void VideoMessagePlayerViewModel.$showsSensitivityOptions.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;

  v1 = OUTLINED_FUNCTION_46_17();
  OUTLINED_FUNCTION_35_11((uint64_t)v1);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  *(_QWORD *)(v0 + 48) = OUTLINED_FUNCTION_15_3(v2);
  v3 = OUTLINED_FUNCTION_21_50();
  OUTLINED_FUNCTION_70_13((uint64_t)v3);
  OUTLINED_FUNCTION_7_17();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_18();
}

void VideoMessagePlayerViewModel.$showsSensitivityOptions.modify(uint64_t a1, char a2)
{
  LinkDetailHeaderView.$invitedMemberHandles.modify(a1, a2, (void (*)(void *))VideoMessagePlayerViewModel.$showsSensitivityOptions.setter);
}

uint64_t VideoMessagePlayerViewModel.shutterModel.getter()
{
  return swift_retain();
}

void VideoMessagePlayerViewModel.videoMessageURL.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  outlined init with copy of Participant.ScreenInfo?(v1 + OBJC_IVAR____TtC15ConversationKit27VideoMessagePlayerViewModel_videoMessageURL, a1, &demangling cache variable for type metadata for URL?);
}

_QWORD *VideoMessagePlayerViewModel.init(videoMessageURL:playerSpaciality:)()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  char *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(uint64_t, uint64_t, _QWORD);
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(uint64_t, uint64_t, _QWORD);
  char *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  void (*v47)(void);
  _QWORD *v48;
  uint64_t v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  objc_super v61;
  char v62;
  uint64_t (*v63)(_QWORD);
  uint64_t v64;
  uint64_t (*v65)(_QWORD);
  uint64_t v66;
  uint64_t (*v67)(_QWORD);
  uint64_t v68;
  uint64_t (*v69)(_QWORD);
  uint64_t v70;
  uint64_t (*v71)(_QWORD);
  uint64_t v72;
  uint64_t (*v73)(_QWORD);
  uint64_t v74;
  uint64_t (*v75)(_QWORD);
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;

  OUTLINED_FUNCTION_93();
  v81 = v1;
  v82 = v2;
  v3 = v0;
  v5 = v4;
  v57 = v6;
  v59 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<VideoMessageControlsView.PlayState>.Publisher);
  v60 = *(_QWORD *)(v59 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_41();
  v58 = v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<AnimatedSaveView.SaveState>);
  OUTLINED_FUNCTION_96_2(v9, (uint64_t)&v80);
  v56 = v10;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_34_42(v12, v51);
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  OUTLINED_FUNCTION_96_2(v13, (uint64_t)&v79);
  v53 = v14;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_33_18(v16);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<UserSafetyActions>);
  OUTLINED_FUNCTION_96_2(v17, (uint64_t)&v78);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v18);
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_33_18(v19);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<VideoMessagePlayerViewActions>);
  OUTLINED_FUNCTION_96_2(v20, (uint64_t)&v77);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v21);
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_33_18(v22);
  v52 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String>)
                  - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v23);
  OUTLINED_FUNCTION_81();
  v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<VideoMessageControlsView.PlayState>);
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  OUTLINED_FUNCTION_77();
  v28 = v27 - v26;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<VideoMessagePlayerViewModel.ControlsConfiguration>);
  v30 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  OUTLINED_FUNCTION_77();
  v33 = v32 - v31;
  v54 = *v5;
  v34 = &v3[OBJC_IVAR____TtC15ConversationKit27VideoMessagePlayerViewModel__controlsConfiguration];
  LOBYTE(v63) = 1;
  v35 = v3;
  Published.init(initialValue:)();
  (*(void (**)(char *, uint64_t, uint64_t))(v30 + 32))(v34, v33, v29);
  v36 = &v35[OBJC_IVAR____TtC15ConversationKit27VideoMessagePlayerViewModel__playState];
  LOBYTE(v63) = 3;
  Published.init(initialValue:)();
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 32))(v36, v28, v24);
  OUTLINED_FUNCTION_66_25();
  OUTLINED_FUNCTION_64_22();
  OUTLINED_FUNCTION_66_25();
  OUTLINED_FUNCTION_64_22();
  v67 = TPNumberPadCharacter.rawValue.getter;
  v68 = 0;
  v69 = TPNumberPadCharacter.rawValue.getter;
  v70 = 0;
  v71 = TPNumberPadCharacter.rawValue.getter;
  v72 = 0;
  v73 = TPNumberPadCharacter.rawValue.getter;
  v74 = 0;
  v75 = TPNumberPadCharacter.rawValue.getter;
  v76 = 0;
  OUTLINED_FUNCTION_76_19();
  v37 = OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_75_19(v37, v38, v39);
  v63 = TPNumberPadCharacter.rawValue.getter;
  v64 = 0;
  v65 = TPNumberPadCharacter.rawValue.getter;
  v66 = 0;
  OUTLINED_FUNCTION_76_19();
  v40 = OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_75_19(v40, v41, v42);
  v43 = &v35[OBJC_IVAR____TtC15ConversationKit27VideoMessagePlayerViewModel__showsAncillaryControl];
  LOBYTE(v63) = 1;
  Published.init(initialValue:)();
  (*(void (**)(char *))(v53 + 32))(v43);
  v44 = (uint64_t)&v35[OBJC_IVAR____TtC15ConversationKit27VideoMessagePlayerViewModel__saveState];
  LOBYTE(v63) = 0;
  Published.init(initialValue:)();
  OUTLINED_FUNCTION_75_19(v44, v55, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v56 + 32));
  OUTLINED_FUNCTION_35_42();
  OUTLINED_FUNCTION_68_23();
  OUTLINED_FUNCTION_35_42();
  OUTLINED_FUNCTION_68_23();
  v45 = OBJC_IVAR____TtC15ConversationKit27VideoMessagePlayerViewModel_shutterModel;
  type metadata accessor for ShutterModel();
  swift_allocObject();
  *(_QWORD *)&v35[v45] = ShutterModel.init(_:)(180.0);
  *(_QWORD *)&v35[OBJC_IVAR____TtC15ConversationKit27VideoMessagePlayerViewModel_stateSink] = 0;
  outlined init with copy of Participant.ScreenInfo?(v57, (uint64_t)&v35[OBJC_IVAR____TtC15ConversationKit27VideoMessagePlayerViewModel_videoMessageURL], &demangling cache variable for type metadata for URL?);
  OUTLINED_FUNCTION_60_0();
  v62 = v54;
  OUTLINED_FUNCTION_76_19();
  swift_endAccess();

  v61.receiver = v35;
  v61.super_class = (Class)type metadata accessor for VideoMessagePlayerViewModel(0);
  v46 = objc_msgSendSuper2(&v61, sel_init, v52);
  v47 = *(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v46) + 0x108);
  v48 = v46;
  v47();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Published<VideoMessageControlsView.PlayState>.Publisher and conformance Published<A>.Publisher, &demangling cache variable for type metadata for Published<VideoMessageControlsView.PlayState>.Publisher);
  v49 = Publisher<>.sink(receiveValue:)();

  OUTLINED_FUNCTION_22();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v57, &demangling cache variable for type metadata for URL?);
  (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v58, v59);
  *(_QWORD *)((char *)v48 + OBJC_IVAR____TtC15ConversationKit27VideoMessagePlayerViewModel_stateSink) = v49;
  swift_release();
  return v48;
}

uint64_t type metadata accessor for VideoMessageControlsView(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for VideoMessageControlsView);
}

uint64_t type metadata accessor for VideoMessagePlayerViewModel(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for VideoMessagePlayerViewModel);
}

uint64_t outlined init with take of VideoMessageControlsView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for VideoMessageControlsView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t partial apply for closure #1 in VideoMessageControlsView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  type metadata accessor for VideoMessageControlsView(0);
  OUTLINED_FUNCTION_49_3();
  return closure #1 in VideoMessageControlsView.body.getter(a1, v2 + v5, a2);
}

void closure #1 in VideoMessagePlayerViewModel.init(videoMessageURL:playerSpaciality:)(unsigned __int8 *a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  int v7;
  void (*v8)(uint64_t);
  uint64_t v9;
  void (*v10)(uint64_t);
  uint64_t v11;

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess();
  v4 = (_QWORD *)MEMORY[0x1C3B752C0](v3);
  if (v4)
  {
    v5 = v4;
    v6 = (_QWORD *)MEMORY[0x1E0DEEDD8];
    v7 = (*(unsigned __int8 (**)(void))((*MEMORY[0x1E0DEEDD8] & *v4) + 0xF0))();
    if (!v7 || v7 == 2)
    {
      if (v2 == 3)
      {
        v10 = *(void (**)(uint64_t))(**(_QWORD **)((char *)v5
                                                           + OBJC_IVAR____TtC15ConversationKit27VideoMessagePlayerViewModel_shutterModel)
                                             + 632);
        v11 = swift_retain();
        v10(v11);

        swift_release();
        return;
      }
    }
    else if (v7 == 3 && (v2 | 2) == 2)
    {
      (*(void (**)(_QWORD))((*v6 & *v5) + 0x278))(0);
      v8 = *(void (**)(uint64_t))(**(_QWORD **)((char *)v5
                                                        + OBJC_IVAR____TtC15ConversationKit27VideoMessagePlayerViewModel_shutterModel)
                                          + 616);
      v9 = swift_retain();
      v8(v9);
      swift_release();
    }

  }
}

uint64_t VideoMessagePlayerViewModel.axDurationString.getter()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  uint64_t (*v6)(void);

  v6 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x150);
  v1 = v6();
  v2 = (void *)MEMORY[0x1C3B72E00](v1);
  swift_bridgeObjectRelease();
  AXDurationForDurationString();

  v3 = (id)AXDurationStringForDuration();
  if (!v3)
    return v6();
  v4 = v3;
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  return OUTLINED_FUNCTION_64();
}

id VideoMessagePlayerViewModel.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void VideoMessagePlayerViewModel.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id VideoMessagePlayerViewModel.__deallocating_deinit()
{
  return MovieScrubber.ScubberCoordinator.__deallocating_deinit(type metadata accessor for VideoMessagePlayerViewModel);
}

id MovieScrubber.ScubberCoordinator.__deallocating_deinit(uint64_t (*a1)(_QWORD))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t protocol witness for ObservableObject.objectWillChange.getter in conformance VideoMessagePlayerViewModel@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for VideoMessagePlayerViewModel(0);
  result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

void VideoMessagePlayerViewModel.shutterButton(trackBackgroundColor:trackForegroundColor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t KeyPath;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  void (*v49)(uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  __int128 v70;

  OUTLINED_FUNCTION_93();
  a19 = v21;
  a20 = v22;
  v62 = v23;
  v63 = v24;
  v64 = v25;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<Text>);
  OUTLINED_FUNCTION_96_2(v26, (uint64_t)&a17);
  v61 = v27;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v28);
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_33_18(v29);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.buttonStyle<A>(_:)>>.0);
  v59 = *(_QWORD *)(v30 - 8);
  v60 = v30;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v31);
  OUTLINED_FUNCTION_34_42(v32, v54);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>);
  OUTLINED_FUNCTION_96_2(v33, (uint64_t)&a18);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v34);
  v36 = (char *)&v54 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = LocalizedStringKey.init(stringLiteral:)();
  (*(void (**)(uint64_t *__return_ptr))((*MEMORY[0x1E0DEEDD8] & *v20) + 0x1B0))(&v66);
  swift_release();
  OUTLINED_FUNCTION_19();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v54 = v70;
  *(_OWORD *)(swift_allocObject() + 16) = v54;
  v37 = v56;
  Button<>.init(_:action:)();
  type metadata accessor for ShutterModel();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type ShutterModel and conformance ShutterModel, (void (*)(uint64_t))type metadata accessor for ShutterModel);
  OUTLINED_FUNCTION_11_8();
  v38 = ObservedObject.init(wrappedValue:)();
  v40 = v39;
  v65 = 0;
  State.init(wrappedValue:)();
  v41 = v66;
  v42 = v67;
  v66 = v38;
  v67 = v40;
  v68 = v41;
  v69 = v42;
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Button<Text> and conformance Button<A>, &demangling cache variable for type metadata for Button<Text>);
  lazy protocol witness table accessor for type ShutterButtonStyle and conformance ShutterButtonStyle();
  v43 = v57;
  View.buttonStyle<A>(_:)();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_52(v37, *(uint64_t (**)(uint64_t, uint64_t))(v61 + 8));
  KeyPath = swift_getKeyPath();
  v46 = v59;
  v45 = v60;
  (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))(v36, v43, v60);
  v47 = (uint64_t *)&v36[*(int *)(v58 + 36)];
  v48 = v62;
  *v47 = KeyPath;
  v47[1] = v48;
  v49 = *(void (**)(uint64_t, uint64_t))(v46 + 8);
  swift_retain();
  v49(v43, v45);
  v50 = swift_getKeyPath();
  v66 = v63;
  swift_retain();
  v51 = AnyShapeStyle.init<A>(_:)();
  v52 = v64;
  outlined init with copy of Participant.ScreenInfo?((uint64_t)v36, v64, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>);
  v53 = (uint64_t *)(v52
                  + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>>)
                           + 36));
  *v53 = v50;
  v53[1] = v51;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v36, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>);
  OUTLINED_FUNCTION_52_1();
}

void one-time initialization function for defaultValue()
{
  static MarginKey.defaultValue = 0x4028000000000000;
}

{
  static PrimaryButtonSizeKey.defaultValue = 0x4052000000000000;
}

{
  static HeightKey.defaultValue = 0;
}

uint64_t *MarginKey.defaultValue.unsafeMutableAddressor()
{
  if (one-time initialization token for defaultValue != -1)
    swift_once();
  return &static MarginKey.defaultValue;
}

double protocol witness for static EnvironmentKey.defaultValue.getter in conformance MarginKey@<D0>(uint64_t *a1@<X8>)
{
  uint64_t *v2;
  double result;

  v2 = MarginKey.defaultValue.unsafeMutableAddressor();
  result = *(double *)v2;
  *a1 = *v2;
  return result;
}

uint64_t *PrimaryButtonSizeKey.defaultValue.unsafeMutableAddressor()
{
  if (one-time initialization token for defaultValue != -1)
    swift_once();
  return &static PrimaryButtonSizeKey.defaultValue;
}

double protocol witness for static EnvironmentKey.defaultValue.getter in conformance PrimaryButtonSizeKey@<D0>(uint64_t *a1@<X8>)
{
  uint64_t *v2;
  double result;

  v2 = PrimaryButtonSizeKey.defaultValue.unsafeMutableAddressor();
  result = *(double *)v2;
  *a1 = *v2;
  return result;
}

uint64_t protocol witness for static EnvironmentKey._valuesEqual(_:_:) in conformance PrimaryButtonSizeKey()
{
  lazy protocol witness table accessor for type CGFloat and conformance CGFloat();
  return static EnvironmentKey<>._valuesEqual(_:_:)();
}

void key path getter for EnvironmentValues.verticalSizeClass : EnvironmentValues()
{
  EnvironmentValues.verticalSizeClass.getter();
  OUTLINED_FUNCTION_0();
}

void sub_1BD42D758()
{
  EnvironmentValues.verticalSizeClass.getter();
  OUTLINED_FUNCTION_0();
}

void key path setter for EnvironmentValues.verticalSizeClass : EnvironmentValues(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UserInterfaceSizeClass?);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_16_2();
  outlined init with copy of Participant.ScreenInfo?(a1, v1, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  EnvironmentValues.verticalSizeClass.setter();
  OUTLINED_FUNCTION_18();
}

void sub_1BD42D7E4(double *a1@<X8>)
{
  *a1 = EnvironmentValues.margin.getter();
  OUTLINED_FUNCTION_0();
}

void sub_1BD42D808()
{
  OUTLINED_FUNCTION_49_44((void (*)(void))lazy protocol witness table accessor for type MarginKey and conformance MarginKey);
  OUTLINED_FUNCTION_0();
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ZStack<TupleView<(ModifiedContent<AnimatedSaveView, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>, _EnvironmentKeyWritingModifier<Color?>>, _FixedSizeLayout>?)>>, _OpacityEffect>, _AnimationModifier<AnimatedSaveView.SaveState>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ZStack<TupleView<(ModifiedContent<AnimatedSaveView, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>, _EnvironmentKeyWritingModifier<Color?>>, _FixedSizeLayout>?)>>, _OpacityEffect>, _AnimationModifier<AnimatedSaveView.SaveState>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ZStack<TupleView<(ModifiedContent<AnimatedSaveView, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>, _EnvironmentKeyWritingModifier<Color?>>, _FixedSizeLayout>?)>>, _OpacityEffect>, _AnimationModifier<AnimatedSaveView.SaveState>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ZStack<TupleView<(ModifiedContent<AnimatedSaveView, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>, _EnvironmentKeyWritingModifier<Color?>>, _FixedSizeLayout>?)>>, _OpacityEffect>, _AnimationModifier<AnimatedSaveView.SaveState>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<ZStack<TupleView<(ModifiedContent<AnimatedSaveView, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>, _EnvironmentKeyWritingModifier<Color?>>, _FixedSizeLayout>?)>>, _OpacityEffect> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _AnimationModifier<AnimatedSaveView.SaveState> and conformance _AnimationModifier<A>, &demangling cache variable for type metadata for _AnimationModifier<AnimatedSaveView.SaveState>);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ZStack<TupleView<(ModifiedContent<AnimatedSaveView, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>, _EnvironmentKeyWritingModifier<Color?>>, _FixedSizeLayout>?)>>, _OpacityEffect>, _AnimationModifier<AnimatedSaveView.SaveState>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ZStack<TupleView<(ModifiedContent<AnimatedSaveView, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>, _EnvironmentKeyWritingModifier<Color?>>, _FixedSizeLayout>?)>>, _OpacityEffect> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ZStack<TupleView<(ModifiedContent<AnimatedSaveView, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>, _EnvironmentKeyWritingModifier<Color?>>, _FixedSizeLayout>?)>>, _OpacityEffect> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ZStack<TupleView<(ModifiedContent<AnimatedSaveView, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>, _EnvironmentKeyWritingModifier<Color?>>, _FixedSizeLayout>?)>>, _OpacityEffect> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ZStack<TupleView<(ModifiedContent<AnimatedSaveView, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>, _EnvironmentKeyWritingModifier<Color?>>, _FixedSizeLayout>?)>>, _OpacityEffect>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type ZStack<TupleView<(ModifiedContent<AnimatedSaveView, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>, _EnvironmentKeyWritingModifier<Color?>>, _FixedSizeLayout>?)>> and conformance ZStack<A>, &demangling cache variable for type metadata for ZStack<TupleView<(ModifiedContent<AnimatedSaveView, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>, _EnvironmentKeyWritingModifier<Color?>>, _FixedSizeLayout>?)>>);
    v3[0] = v2;
    v3[1] = MEMORY[0x1E0CD9728];
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v3);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ZStack<TupleView<(ModifiedContent<AnimatedSaveView, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>, _EnvironmentKeyWritingModifier<Color?>>, _FixedSizeLayout>?)>>, _OpacityEffect> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

void sub_1BD42D93C()
{
  _BYTE *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0xC0))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD42D970()
{
  uint64_t v0;
  unsigned __int8 *v1;

  OUTLINED_FUNCTION_8_22();
  OUTLINED_FUNCTION_90_15(v1, *(uint64_t (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & v0) + 0xC8));
  OUTLINED_FUNCTION_0();
}

void sub_1BD42D9A0()
{
  _BYTE *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = OUTLINED_FUNCTION_109_1(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD42D9CC()
{
  uint64_t v0;
  unsigned __int8 *v1;

  OUTLINED_FUNCTION_8_22();
  OUTLINED_FUNCTION_90_15(v1, *(uint64_t (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & v0) + 0xF8));
  OUTLINED_FUNCTION_0();
}

void sub_1BD42DA04()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x150))();
  v0[1] = v2;
  OUTLINED_FUNCTION_0();
}

void sub_1BD42DA3C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x180))();
  v0[1] = v2;
  OUTLINED_FUNCTION_0();
}

void sub_1BD42DA84()
{
  _BYTE *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x210))() & 1;
  OUTLINED_FUNCTION_0();
}

void sub_1BD42DABC()
{
  uint64_t v0;

  OUTLINED_FUNCTION_8_22();
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & v0) + 0x218))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD42DAF0()
{
  _BYTE *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x240))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD42DB24()
{
  uint64_t v0;
  unsigned __int8 *v1;

  OUTLINED_FUNCTION_8_22();
  OUTLINED_FUNCTION_90_15(v1, *(uint64_t (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & v0) + 0x248));
  OUTLINED_FUNCTION_0();
}

void sub_1BD42DB54()
{
  _BYTE *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x270))() & 1;
  OUTLINED_FUNCTION_0();
}

void sub_1BD42DB8C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_8_22();
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & v0) + 0x278))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD42DBC0()
{
  _BYTE *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x2A0))() & 1;
  OUTLINED_FUNCTION_0();
}

void sub_1BD42DBF8()
{
  uint64_t v0;

  OUTLINED_FUNCTION_8_22();
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & v0) + 0x2A8))();
  OUTLINED_FUNCTION_0();
}

void partial apply for closure #1 in VideoMessagePlayerViewModel.init(videoMessageURL:playerSpaciality:)(unsigned __int8 *a1)
{
  uint64_t v1;

  closure #1 in VideoMessagePlayerViewModel.init(videoMessageURL:playerSpaciality:)(a1, v1);
}

unint64_t lazy protocol witness table accessor for type ShutterButtonStyle and conformance ShutterButtonStyle()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ShutterButtonStyle and conformance ShutterButtonStyle;
  if (!lazy protocol witness table cache variable for type ShutterButtonStyle and conformance ShutterButtonStyle)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ShutterButtonStyle, &type metadata for ShutterButtonStyle);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ShutterButtonStyle and conformance ShutterButtonStyle);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type VideoMessageControlsView.PlayState and conformance VideoMessageControlsView.PlayState()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type VideoMessageControlsView.PlayState and conformance VideoMessageControlsView.PlayState;
  if (!lazy protocol witness table cache variable for type VideoMessageControlsView.PlayState and conformance VideoMessageControlsView.PlayState)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for VideoMessageControlsView.PlayState, &type metadata for VideoMessageControlsView.PlayState);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type VideoMessageControlsView.PlayState and conformance VideoMessageControlsView.PlayState);
  }
  return result;
}

uint64_t associated type witness table accessor for View.Body : View in VideoMessageControlsView()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t associated type witness table accessor for View.Body : View in AnimatedSaveButton()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t lazy protocol witness table accessor for type VideoMessagePlayerViewModel.ControlsConfiguration and conformance VideoMessagePlayerViewModel.ControlsConfiguration()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type VideoMessagePlayerViewModel.ControlsConfiguration and conformance VideoMessagePlayerViewModel.ControlsConfiguration;
  if (!lazy protocol witness table cache variable for type VideoMessagePlayerViewModel.ControlsConfiguration and conformance VideoMessagePlayerViewModel.ControlsConfiguration)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for VideoMessagePlayerViewModel.ControlsConfiguration, &type metadata for VideoMessagePlayerViewModel.ControlsConfiguration);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type VideoMessagePlayerViewModel.ControlsConfiguration and conformance VideoMessagePlayerViewModel.ControlsConfiguration);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type VideoMessagePlayerViewModel.PlayerSpatiality and conformance VideoMessagePlayerViewModel.PlayerSpatiality()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type VideoMessagePlayerViewModel.PlayerSpatiality and conformance VideoMessagePlayerViewModel.PlayerSpatiality;
  if (!lazy protocol witness table cache variable for type VideoMessagePlayerViewModel.PlayerSpatiality and conformance VideoMessagePlayerViewModel.PlayerSpatiality)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for VideoMessagePlayerViewModel.PlayerSpatiality, &type metadata for VideoMessagePlayerViewModel.PlayerSpatiality);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type VideoMessagePlayerViewModel.PlayerSpatiality and conformance VideoMessagePlayerViewModel.PlayerSpatiality);
  }
  return result;
}

void sub_1BD42DD60(id *a1@<X8>)
{
  *a1 = VideoMessageControlsView.videoMessageViewModel.getter();
  OUTLINED_FUNCTION_0();
}

void sub_1BD42DDE0()
{
  uint64_t v0;

  OUTLINED_FUNCTION_83_1();
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & v0) + 0xD8))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD42DE14()
{
  uint64_t v0;

  OUTLINED_FUNCTION_83_1();
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & v0) + 0x108))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD42DE48()
{
  uint64_t v0;

  OUTLINED_FUNCTION_83_1();
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & v0) + 0x138))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD42DE7C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_83_1();
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & v0) + 0x168))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD42DEB0()
{
  uint64_t v0;

  OUTLINED_FUNCTION_83_1();
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & v0) + 0x198))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD42DEE4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_83_1();
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & v0) + 0x1C8))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD42DF18()
{
  uint64_t v0;

  OUTLINED_FUNCTION_83_1();
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & v0) + 0x1F8))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD42DF4C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_83_1();
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & v0) + 0x228))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD42DF80()
{
  uint64_t v0;

  OUTLINED_FUNCTION_83_1();
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & v0) + 0x258))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD42DFB4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_83_1();
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & v0) + 0x288))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD42DFE8()
{
  uint64_t v0;

  OUTLINED_FUNCTION_83_1();
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & v0) + 0x2B8))();
  OUTLINED_FUNCTION_0();
}

unint64_t initializeBufferWithCopyOfBuffer for VideoMessageControlsView(unint64_t a1, uint64_t a2, int *a3)
{
  int v5;
  uint64_t v7;
  char v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  id v32;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v14 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = *(_QWORD *)a2;
    v8 = *(_BYTE *)(a2 + 8);
    outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(*(_QWORD *)a2, v8);
    *(_QWORD *)a1 = v7;
    *(_BYTE *)(a1 + 8) = v8;
    v9 = a3[5];
    v10 = (_QWORD *)(a1 + v9);
    v11 = (_QWORD *)(a2 + v9);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = type metadata accessor for UserInterfaceSizeClass();
      if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12))
      {
        v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UserInterfaceSizeClass?);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
        __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v12);
      }
    }
    else
    {
      *v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v15 = a3[6];
    v16 = (_QWORD *)(a1 + v15);
    v17 = (_QWORD *)(a2 + v15);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v18 = type metadata accessor for UserInterfaceSizeClass();
      if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v18))
      {
        v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UserInterfaceSizeClass?);
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
        __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v18);
      }
    }
    else
    {
      *v16 = *v17;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v20 = a3[7];
    v21 = a3[8];
    v22 = (_QWORD *)(a1 + v20);
    v23 = (uint64_t *)(a2 + v20);
    v25 = *v23;
    v24 = (void *)v23[1];
    *v22 = v25;
    v22[1] = v24;
    v26 = a1 + v21;
    v27 = a2 + v21;
    *(_BYTE *)v26 = *(_BYTE *)v27;
    *(_QWORD *)(v26 + 8) = *(_QWORD *)(v27 + 8);
    v28 = a3[9];
    v29 = a3[10];
    v30 = *(void **)(a2 + v28);
    *(_QWORD *)(a1 + v28) = v30;
    *(_QWORD *)(a1 + v29) = *(_QWORD *)(a2 + v29);
    *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
    v31 = v24;
    swift_retain();
    v32 = v30;
  }
  return a1;
}

void destroy for VideoMessageControlsView(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  outlined consume of Environment<CGFloat>.Content(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  v4 = a1 + a2[5];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = type metadata accessor for UserInterfaceSizeClass();
    if (!__swift_getEnumTagSinglePayload(v4, 1, v5))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  v6 = a1 + a2[6];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = type metadata accessor for UserInterfaceSizeClass();
    if (!__swift_getEnumTagSinglePayload(v6, 1, v7))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }

  swift_release();
}

uint64_t initializeWithCopy for VideoMessageControlsView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  id v30;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(*(_QWORD *)a2, v7);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  v8 = a3[5];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v11 = type metadata accessor for UserInterfaceSizeClass();
    if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UserInterfaceSizeClass?);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
      __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
    }
  }
  else
  {
    *v9 = *v10;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v13 = a3[6];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v16 = type metadata accessor for UserInterfaceSizeClass();
    if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v16))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UserInterfaceSizeClass?);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
      __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v16);
    }
  }
  else
  {
    *v14 = *v15;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v18 = a3[7];
  v19 = a3[8];
  v20 = (_QWORD *)(a1 + v18);
  v21 = (uint64_t *)(a2 + v18);
  v23 = *v21;
  v22 = (void *)v21[1];
  *v20 = v23;
  v20[1] = v22;
  v24 = a1 + v19;
  v25 = a2 + v19;
  *(_BYTE *)v24 = *(_BYTE *)v25;
  *(_QWORD *)(v24 + 8) = *(_QWORD *)(v25 + 8);
  v26 = a3[9];
  v27 = a3[10];
  v28 = *(void **)(a2 + v26);
  *(_QWORD *)(a1 + v26) = v28;
  *(_QWORD *)(a1 + v27) = *(_QWORD *)(a2 + v27);
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  v29 = v22;
  swift_retain();
  v30 = v28;
  return a1;
}

uint64_t assignWithCopy for VideoMessageControlsView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  void *v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  id v32;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(*(_QWORD *)a2, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  outlined consume of Environment<CGFloat>.Content(v8, v9);
  if (a1 != a2)
  {
    v10 = a3[5];
    v11 = (_QWORD *)(a1 + v10);
    v12 = (_QWORD *)(a2 + v10);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(a1 + v10, &demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v13 = type metadata accessor for UserInterfaceSizeClass();
      if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13))
      {
        v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UserInterfaceSizeClass?);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
        __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
      }
    }
    else
    {
      *v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v15 = a3[6];
    v16 = (_QWORD *)(a1 + v15);
    v17 = (_QWORD *)(a2 + v15);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(a1 + v15, &demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v18 = type metadata accessor for UserInterfaceSizeClass();
      if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v18))
      {
        v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UserInterfaceSizeClass?);
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
        __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v18);
      }
    }
    else
    {
      *v16 = *v17;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v20 = a3[7];
  v21 = (_QWORD *)(a1 + v20);
  v22 = (_QWORD *)(a2 + v20);
  *v21 = *v22;
  v23 = (void *)v22[1];
  v24 = (void *)v21[1];
  v21[1] = v23;
  v25 = v23;

  v26 = a3[8];
  v27 = a1 + v26;
  v28 = a2 + v26;
  *(_BYTE *)v27 = *(_BYTE *)v28;
  *(_QWORD *)(v27 + 8) = *(_QWORD *)(v28 + 8);
  swift_retain();
  swift_release();
  v29 = a3[9];
  v30 = *(void **)(a1 + v29);
  v31 = *(void **)(a2 + v29);
  *(_QWORD *)(a1 + v29) = v31;
  v32 = v31;

  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  return a1;
}

uint64_t initializeWithTake for VideoMessageControlsView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = a3[5];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = type metadata accessor for UserInterfaceSizeClass();
    if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v10))
    {
      v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UserInterfaceSizeClass?);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
      __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v10);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  v12 = a3[6];
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v15 = type metadata accessor for UserInterfaceSizeClass();
    if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UserInterfaceSizeClass?);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
      __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  v17 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v17) = *(_OWORD *)(a2 + v17);
  v18 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v18) = *(_QWORD *)(a2 + v18);
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  return a1;
}

uint64_t assignWithTake for VideoMessageControlsView(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  void *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;

  v6 = *a2;
  v7 = *((_BYTE *)a2 + 8);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  outlined consume of Environment<CGFloat>.Content(v8, v9);
  if ((uint64_t *)a1 != a2)
  {
    v10 = a3[5];
    v11 = (void *)(a1 + v10);
    v12 = (char *)a2 + v10;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(a1 + v10, &demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
    v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v14 = type metadata accessor for UserInterfaceSizeClass();
      if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v14))
      {
        v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UserInterfaceSizeClass?);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v11, v12, v14);
        __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v14);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    v16 = a3[6];
    v17 = (void *)(a1 + v16);
    v18 = (char *)a2 + v16;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(a1 + v16, &demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
    v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v20 = type metadata accessor for UserInterfaceSizeClass();
      if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, v20))
      {
        v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UserInterfaceSizeClass?);
        memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v17, v18, v20);
        __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v20);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
  }
  v22 = a3[7];
  v23 = (_QWORD *)(a1 + v22);
  v24 = (uint64_t *)((char *)a2 + v22);
  v26 = *v24;
  v25 = v24[1];
  v27 = (void *)v23[1];
  *v23 = v26;
  v23[1] = v25;

  v28 = a3[8];
  v29 = a1 + v28;
  v30 = (uint64_t)a2 + v28;
  *(_BYTE *)v29 = *(_BYTE *)v30;
  *(_QWORD *)(v29 + 8) = *(_QWORD *)(v30 + 8);
  swift_release();
  v31 = a3[9];
  v32 = *(void **)(a1 + v31);
  *(_QWORD *)(a1 + v31) = *(uint64_t *)((char *)a2 + v31);

  v33 = a3[11];
  *(_QWORD *)(a1 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
  *(_QWORD *)(a1 + v33) = *(uint64_t *)((char *)a2 + v33);
  return a1;
}

uint64_t getEnumTagSinglePayload for VideoMessageControlsView()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1BD42ED2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    OUTLINED_FUNCTION_1_16(a1 + *(int *)(a3 + 20), a2, v6);
  }
  else
  {
    OUTLINED_FUNCTION_93_0(*(_QWORD *)(a1 + *(int *)(a3 + 28) + 8));
    OUTLINED_FUNCTION_18();
  }
}

uint64_t storeEnumTagSinglePayload for VideoMessageControlsView()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1BD42EDA0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>);
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    OUTLINED_FUNCTION_0_29(a1 + *(int *)(a4 + 20), a2, a2, v8);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 28) + 8) = (a2 - 1);
    OUTLINED_FUNCTION_18();
  }
}

void type metadata completion function for VideoMessageControlsView()
{
  unint64_t v0;

  type metadata accessor for Environment<UserInterfaceSizeClass?>.Content();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t storeEnumTagSinglePayload for VideoMessageControlsView.PlayState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1BD42EF00 + 4 * byte_1BD65F355[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1BD42EF34 + 4 * byte_1BD65F350[v4]))();
}

uint64_t sub_1BD42EF34(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD42EF3C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD42EF44);
  return result;
}

uint64_t sub_1BD42EF50(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD42EF58);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1BD42EF5C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD42EF64(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for VideoMessageControlsView.PlayState()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t destroy for AnimatedSaveButton(uint64_t a1)
{

  return swift_release();
}

uint64_t initializeWithCopy for AnimatedSaveButton(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  v3 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v4 = v3;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for AnimatedSaveButton(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  v6 = v4;

  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for AnimatedSaveButton(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(void **)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;

  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release();
  return a1;
}

void type metadata accessor for AnimatedSaveButton()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t type metadata accessor for MovieScrubber.ScubberCoordinator()
{
  return objc_opt_self();
}

uint64_t destroy for VideoMessagePlayerViewActions()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for VideoMessagePlayerViewActions(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  v3 = *(_QWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 104) = v3;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for VideoMessagePlayerViewActions(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_retain();
  swift_release();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_retain();
  swift_release();
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_retain();
  swift_release();
  v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_retain();
  swift_release();
  v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  swift_retain();
  swift_release();
  v10 = a2[13];
  a1[12] = a2[12];
  a1[13] = v10;
  swift_retain();
  swift_release();
  return a1;
}

void *__swift_memcpy112_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x70uLL);
}

_OWORD *assignWithTake for VideoMessagePlayerViewActions(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  a1[2] = a2[2];
  swift_release();
  a1[3] = a2[3];
  swift_release();
  a1[4] = a2[4];
  swift_release();
  a1[5] = a2[5];
  swift_release();
  a1[6] = a2[6];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for VideoMessagePlayerViewActions(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 112))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for VideoMessagePlayerViewActions(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 112) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 112) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for VideoMessagePlayerViewActions()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t destroy for UserSafetyActions()
{
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for UserSafetyActions(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = v3;
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for UserSafetyActions(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for UserSafetyActions(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  return a1;
}

void type metadata accessor for UserSafetyActions()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t ObjC metadata update function for VideoMessagePlayerViewModel()
{
  return type metadata accessor for VideoMessagePlayerViewModel(0);
}

void type metadata completion function for VideoMessagePlayerViewModel()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;

  type metadata accessor for Published<Bool>(319, &lazy cache variable for type metadata for Published<VideoMessagePlayerViewModel.ControlsConfiguration>);
  if (v0 <= 0x3F)
  {
    type metadata accessor for Published<Bool>(319, &lazy cache variable for type metadata for Published<VideoMessageControlsView.PlayState>);
    if (v1 <= 0x3F)
    {
      type metadata accessor for Published<Bool>(319, &lazy cache variable for type metadata for Published<VideoMessagePlayerViewModel.PlayerSpatiality>);
      if (v2 <= 0x3F)
      {
        type metadata accessor for Published<Bool>(319, &lazy cache variable for type metadata for Published<String>);
        if (v3 <= 0x3F)
        {
          type metadata accessor for Published<Bool>(319, &lazy cache variable for type metadata for Published<VideoMessagePlayerViewActions>);
          if (v4 <= 0x3F)
          {
            type metadata accessor for Published<Bool>(319, &lazy cache variable for type metadata for Published<UserSafetyActions>);
            if (v5 <= 0x3F)
            {
              type metadata accessor for Published<Bool>(319, (unint64_t *)&lazy cache variable for type metadata for Published<Bool>);
              if (v6 <= 0x3F)
              {
                type metadata accessor for Published<Bool>(319, &lazy cache variable for type metadata for Published<AnimatedSaveView.SaveState>);
                if (v7 <= 0x3F)
                {
                  type metadata accessor for URL?();
                  if (v8 <= 0x3F)
                    swift_updateClassMetadata2();
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t method lookup function for VideoMessagePlayerViewModel()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of VideoMessagePlayerViewModel.controlsConfiguration.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of VideoMessagePlayerViewModel.controlsConfiguration.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of VideoMessagePlayerViewModel.controlsConfiguration.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of VideoMessagePlayerViewModel.$controlsConfiguration.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of VideoMessagePlayerViewModel.$controlsConfiguration.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of VideoMessagePlayerViewModel.$controlsConfiguration.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of VideoMessagePlayerViewModel.playState.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of VideoMessagePlayerViewModel.playState.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of VideoMessagePlayerViewModel.playState.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of VideoMessagePlayerViewModel.$playState.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x108))();
}

uint64_t dispatch thunk of VideoMessagePlayerViewModel.$playState.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x110))();
}

uint64_t dispatch thunk of VideoMessagePlayerViewModel.$playState.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x118))();
}

uint64_t dispatch thunk of VideoMessagePlayerViewModel.playerSpatiality.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x120))();
}

uint64_t dispatch thunk of VideoMessagePlayerViewModel.playerSpatiality.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x128))();
}

uint64_t dispatch thunk of VideoMessagePlayerViewModel.playerSpatiality.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x130))();
}

uint64_t dispatch thunk of VideoMessagePlayerViewModel.$playerSpatiality.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x138))();
}

uint64_t dispatch thunk of VideoMessagePlayerViewModel.$playerSpatiality.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x140))();
}

uint64_t dispatch thunk of VideoMessagePlayerViewModel.$playerSpatiality.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x148))();
}

uint64_t dispatch thunk of VideoMessagePlayerViewModel.durationString.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x150))();
}

uint64_t dispatch thunk of VideoMessagePlayerViewModel.durationString.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x158))();
}

uint64_t dispatch thunk of VideoMessagePlayerViewModel.durationString.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x160))();
}

uint64_t dispatch thunk of VideoMessagePlayerViewModel.$durationString.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x168))();
}

uint64_t dispatch thunk of VideoMessagePlayerViewModel.$durationString.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x170))();
}

uint64_t dispatch thunk of VideoMessagePlayerViewModel.$durationString.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x178))();
}

uint64_t dispatch thunk of VideoMessagePlayerViewModel.title.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x180))();
}

uint64_t dispatch thunk of VideoMessagePlayerViewModel.title.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x188))();
}

uint64_t dispatch thunk of VideoMessagePlayerViewModel.title.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x190))();
}

uint64_t dispatch thunk of VideoMessagePlayerViewModel.$title.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x198))();
}

uint64_t dispatch thunk of VideoMessagePlayerViewModel.$title.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1A0))();
}

uint64_t dispatch thunk of VideoMessagePlayerViewModel.$title.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1A8))();
}

uint64_t dispatch thunk of VideoMessagePlayerViewModel.actions.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1B0))();
}

uint64_t dispatch thunk of VideoMessagePlayerViewModel.actions.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1B8))();
}

uint64_t dispatch thunk of VideoMessagePlayerViewModel.actions.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1C0))();
}

uint64_t dispatch thunk of VideoMessagePlayerViewModel.$actions.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1C8))();
}

uint64_t dispatch thunk of VideoMessagePlayerViewModel.$actions.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1D0))();
}

uint64_t dispatch thunk of VideoMessagePlayerViewModel.$actions.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1D8))();
}

uint64_t dispatch thunk of VideoMessagePlayerViewModel.safetyActions.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1E0))();
}

uint64_t dispatch thunk of VideoMessagePlayerViewModel.safetyActions.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1E8))();
}

uint64_t dispatch thunk of VideoMessagePlayerViewModel.safetyActions.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1F0))();
}

uint64_t dispatch thunk of VideoMessagePlayerViewModel.$safetyActions.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1F8))();
}

uint64_t dispatch thunk of VideoMessagePlayerViewModel.$safetyActions.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x200))();
}

uint64_t dispatch thunk of VideoMessagePlayerViewModel.$safetyActions.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x208))();
}

uint64_t dispatch thunk of VideoMessagePlayerViewModel.showsAncillaryControl.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x210))();
}

uint64_t dispatch thunk of VideoMessagePlayerViewModel.showsAncillaryControl.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x218))();
}

uint64_t dispatch thunk of VideoMessagePlayerViewModel.showsAncillaryControl.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x220))();
}

uint64_t dispatch thunk of VideoMessagePlayerViewModel.$showsAncillaryControl.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x228))();
}

uint64_t dispatch thunk of VideoMessagePlayerViewModel.$showsAncillaryControl.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x230))();
}

uint64_t dispatch thunk of VideoMessagePlayerViewModel.$showsAncillaryControl.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x238))();
}

uint64_t dispatch thunk of VideoMessagePlayerViewModel.saveState.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x240))();
}

uint64_t dispatch thunk of VideoMessagePlayerViewModel.saveState.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x248))();
}

uint64_t dispatch thunk of VideoMessagePlayerViewModel.saveState.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x250))();
}

uint64_t dispatch thunk of VideoMessagePlayerViewModel.$saveState.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x258))();
}

uint64_t dispatch thunk of VideoMessagePlayerViewModel.$saveState.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x260))();
}

uint64_t dispatch thunk of VideoMessagePlayerViewModel.$saveState.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x268))();
}

uint64_t dispatch thunk of VideoMessagePlayerViewModel.isSensitive.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x270))();
}

uint64_t dispatch thunk of VideoMessagePlayerViewModel.isSensitive.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x278))();
}

uint64_t dispatch thunk of VideoMessagePlayerViewModel.isSensitive.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x280))();
}

uint64_t dispatch thunk of VideoMessagePlayerViewModel.$isSensitive.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x288))();
}

uint64_t dispatch thunk of VideoMessagePlayerViewModel.$isSensitive.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x290))();
}

uint64_t dispatch thunk of VideoMessagePlayerViewModel.$isSensitive.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x298))();
}

uint64_t dispatch thunk of VideoMessagePlayerViewModel.showsSensitivityOptions.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x2A0))();
}

uint64_t dispatch thunk of VideoMessagePlayerViewModel.showsSensitivityOptions.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x2A8))();
}

uint64_t dispatch thunk of VideoMessagePlayerViewModel.showsSensitivityOptions.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x2B0))();
}

uint64_t dispatch thunk of VideoMessagePlayerViewModel.$showsSensitivityOptions.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x2B8))();
}

uint64_t dispatch thunk of VideoMessagePlayerViewModel.$showsSensitivityOptions.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x2C0))();
}

uint64_t dispatch thunk of VideoMessagePlayerViewModel.$showsSensitivityOptions.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x2C8))();
}

uint64_t dispatch thunk of VideoMessagePlayerViewModel.__allocating_init(videoMessageURL:playerSpaciality:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 744))();
}

uint64_t dispatch thunk of VideoMessagePlayerViewModel.axDurationString.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x2F0))();
}

void type metadata accessor for URL?()
{
  unint64_t v0;
  uint64_t v1;

  if (!lazy cache variable for type metadata for URL?)
  {
    type metadata accessor for URL();
    v0 = type metadata accessor for Optional();
    if (!v1)
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for URL?);
  }
}

uint64_t storeEnumTagSinglePayload for VideoMessagePlayerViewModel.ControlsConfiguration(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BD42FF04 + 4 * byte_1BD65F35F[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BD42FF38 + 4 * byte_1BD65F35A[v4]))();
}

uint64_t sub_1BD42FF38(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD42FF40(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD42FF48);
  return result;
}

uint64_t sub_1BD42FF54(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD42FF5CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BD42FF60(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD42FF68(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for VideoMessagePlayerViewModel.ControlsConfiguration()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t storeEnumTagSinglePayload for VideoMessagePlayerViewModel.PlayerSpatiality(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BD42FFCC + 4 * byte_1BD65F369[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BD430000 + 4 * byte_1BD65F364[v4]))();
}

uint64_t sub_1BD430000(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD430008(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD430010);
  return result;
}

uint64_t sub_1BD43001C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD430024);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BD430028(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD430030(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for VideoMessagePlayerViewModel.PlayerSpatiality()
{
  OUTLINED_FUNCTION_34_0();
}

unint64_t lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<ModifiedContent<GeometryReader<<<opaque return type of View.onTapGesture(count:perform:)>>.0>, _EnvironmentKeyWritingModifier<ColorScheme>>, _BackgroundStyleModifier<Material>>, ModifiedContent<ModifiedContent<GeometryReader<<<opaque return type of View.onTapGesture(count:perform:)>>.0>, _EnvironmentKeyWritingModifier<ColorScheme>>, _BackgroundStyleModifier<Color>>> and conformance <> _ConditionalContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type _ConditionalContent<ModifiedContent<ModifiedContent<GeometryReader<<<opaque return type of View.onTapGesture(count:perform:)>>.0>, _EnvironmentKeyWritingModifier<ColorScheme>>, _BackgroundStyleModifier<Material>>, ModifiedContent<ModifiedContent<GeometryReader<<<opaque return type of View.onTapGesture(count:perform:)>>.0>, _EnvironmentKeyWritingModifier<ColorScheme>>, _BackgroundStyleModifier<Color>>> and conformance <> _ConditionalContent<A, B>;
  if (!lazy protocol witness table cache variable for type _ConditionalContent<ModifiedContent<ModifiedContent<GeometryReader<<<opaque return type of View.onTapGesture(count:perform:)>>.0>, _EnvironmentKeyWritingModifier<ColorScheme>>, _BackgroundStyleModifier<Material>>, ModifiedContent<ModifiedContent<GeometryReader<<<opaque return type of View.onTapGesture(count:perform:)>>.0>, _EnvironmentKeyWritingModifier<ColorScheme>>, _BackgroundStyleModifier<Color>>> and conformance <> _ConditionalContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<GeometryReader<<<opaque return type of View.onTapGesture(count:perform:)>>.0>, _EnvironmentKeyWritingModifier<ColorScheme>>, _BackgroundStyleModifier<Material>>, ModifiedContent<ModifiedContent<GeometryReader<<<opaque return type of View.onTapGesture(count:perform:)>>.0>, _EnvironmentKeyWritingModifier<ColorScheme>>, _BackgroundStyleModifier<Color>>>);
    v2[0] = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<GeometryReader<<<opaque return type of View.onTapGesture(count:perform:)>>.0>, _EnvironmentKeyWritingModifier<ColorScheme>>, _BackgroundStyleModifier<Material>> and conformance <> ModifiedContent<A, B>();
    v2[1] = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<GeometryReader<<<opaque return type of View.onTapGesture(count:perform:)>>.0>, _EnvironmentKeyWritingModifier<ColorScheme>>, _BackgroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>();
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDB8A0], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _ConditionalContent<ModifiedContent<ModifiedContent<GeometryReader<<<opaque return type of View.onTapGesture(count:perform:)>>.0>, _EnvironmentKeyWritingModifier<ColorScheme>>, _BackgroundStyleModifier<Material>>, ModifiedContent<ModifiedContent<GeometryReader<<<opaque return type of View.onTapGesture(count:perform:)>>.0>, _EnvironmentKeyWritingModifier<ColorScheme>>, _BackgroundStyleModifier<Color>>> and conformance <> _ConditionalContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<GeometryReader<<<opaque return type of View.onTapGesture(count:perform:)>>.0>, _EnvironmentKeyWritingModifier<ColorScheme>>, _BackgroundStyleModifier<Material>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<GeometryReader<<<opaque return type of View.onTapGesture(count:perform:)>>.0>, _EnvironmentKeyWritingModifier<ColorScheme>>, _BackgroundStyleModifier<Material>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<GeometryReader<<<opaque return type of View.onTapGesture(count:perform:)>>.0>, _EnvironmentKeyWritingModifier<ColorScheme>>, _BackgroundStyleModifier<Material>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<GeometryReader<<<opaque return type of View.onTapGesture(count:perform:)>>.0>, _EnvironmentKeyWritingModifier<ColorScheme>>, _BackgroundStyleModifier<Material>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<GeometryReader<<<opaque return type of View.onTapGesture(count:perform:)>>.0>, _EnvironmentKeyWritingModifier<ColorScheme>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _BackgroundStyleModifier<Material> and conformance _BackgroundStyleModifier<A>, &demangling cache variable for type metadata for _BackgroundStyleModifier<Material>);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<GeometryReader<<<opaque return type of View.onTapGesture(count:perform:)>>.0>, _EnvironmentKeyWritingModifier<ColorScheme>>, _BackgroundStyleModifier<Material>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<GeometryReader<<<opaque return type of View.onTapGesture(count:perform:)>>.0>, _EnvironmentKeyWritingModifier<ColorScheme>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<GeometryReader<<<opaque return type of View.onTapGesture(count:perform:)>>.0>, _EnvironmentKeyWritingModifier<ColorScheme>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<GeometryReader<<<opaque return type of View.onTapGesture(count:perform:)>>.0>, _EnvironmentKeyWritingModifier<ColorScheme>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<GeometryReader<<<opaque return type of View.onTapGesture(count:perform:)>>.0>, _EnvironmentKeyWritingModifier<ColorScheme>>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type GeometryReader<<<opaque return type of View.onTapGesture(count:perform:)>>.0> and conformance GeometryReader<A>, &demangling cache variable for type metadata for GeometryReader<<<opaque return type of View.onTapGesture(count:perform:)>>.0>);
    v3 = v2;
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<ColorScheme> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<ColorScheme>);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v5);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<GeometryReader<<<opaque return type of View.onTapGesture(count:perform:)>>.0>, _EnvironmentKeyWritingModifier<ColorScheme>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<GeometryReader<<<opaque return type of View.onTapGesture(count:perform:)>>.0>, _EnvironmentKeyWritingModifier<ColorScheme>>, _BackgroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<GeometryReader<<<opaque return type of View.onTapGesture(count:perform:)>>.0>, _EnvironmentKeyWritingModifier<ColorScheme>>, _BackgroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<GeometryReader<<<opaque return type of View.onTapGesture(count:perform:)>>.0>, _EnvironmentKeyWritingModifier<ColorScheme>>, _BackgroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<GeometryReader<<<opaque return type of View.onTapGesture(count:perform:)>>.0>, _EnvironmentKeyWritingModifier<ColorScheme>>, _BackgroundStyleModifier<Color>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<GeometryReader<<<opaque return type of View.onTapGesture(count:perform:)>>.0>, _EnvironmentKeyWritingModifier<ColorScheme>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _BackgroundStyleModifier<Color> and conformance _BackgroundStyleModifier<A>, &demangling cache variable for type metadata for _BackgroundStyleModifier<Color>);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<GeometryReader<<<opaque return type of View.onTapGesture(count:perform:)>>.0>, _EnvironmentKeyWritingModifier<ColorScheme>>, _BackgroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<AnyShapeStyle?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<AnyShapeStyle?>);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t OpaqueTypeConformance2;
  uint64_t v5;
  _QWORD v6[6];

  result = lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Button<Text>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Button<Text> and conformance Button<A>, &demangling cache variable for type metadata for Button<Text>);
    v6[2] = v2;
    v6[3] = &type metadata for ShutterButtonStyle;
    v6[4] = v3;
    v6[5] = lazy protocol witness table accessor for type ShutterButtonStyle and conformance ShutterButtonStyle();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Color?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Color?>);
    v6[0] = OpaqueTypeConformance2;
    v6[1] = v5;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v6);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t OpaqueTypeConformance2;
  uint64_t v8;
  _QWORD v9[6];

  result = lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>, _EnvironmentKeyWritingModifier<Font?>>, _ShadowEffect>, _FrameLayout>>);
    v3 = type metadata accessor for BorderlessButtonStyle();
    lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>, _EnvironmentKeyWritingModifier<Font?>>, _ShadowEffect>, _FrameLayout>> and conformance Button<A>);
    v5 = v4;
    lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label((uint64_t)&lazy protocol witness table cache variable for type BorderlessButtonStyle and conformance BorderlessButtonStyle);
    v9[2] = v2;
    v9[3] = v3;
    v9[4] = v5;
    v9[5] = v6;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Color?> and conformance _EnvironmentKeyWritingModifier<A>);
    v9[0] = OpaqueTypeConformance2;
    v9[1] = v8;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v9);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t destroy for MovieScrubber(id *a1)
{

  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for MovieScrubber(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = *(_QWORD *)(a2 + 24);
  a1[2] = *(_QWORD *)(a2 + 16);
  a1[3] = v5;
  a1[4] = *(_QWORD *)(a2 + 32);
  v6 = v3;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MovieScrubber(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for MovieScrubber(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

void *type metadata accessor for MovieScrubber()
{
  return &unk_1E7635950;
}

uint64_t destroy for VideoMessageControlsView.PlayButtonView(uint64_t a1)
{
  outlined consume of Environment<CGFloat>.Content(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));

  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for VideoMessageControlsView.PlayButtonView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  void *v6;
  uint64_t v7;
  id v8;

  v4 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(*(_QWORD *)a2, v5);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  v6 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v8 = v6;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for VideoMessageControlsView.PlayButtonView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  void *v8;
  void *v9;
  id v10;

  v4 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(*(_QWORD *)a2, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  outlined consume of Environment<CGFloat>.Content(v6, v7);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v8 = *(void **)(a2 + 24);
  v9 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v8;
  v10 = v8;

  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

uint64_t assignWithTake for VideoMessageControlsView.PlayButtonView(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;

  v4 = *a2;
  v5 = *((_BYTE *)a2 + 8);
  v6 = *(_QWORD *)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  outlined consume of Environment<CGFloat>.Content(v6, v7);
  *(_QWORD *)(a1 + 16) = a2[2];

  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
  swift_release();
  *(_QWORD *)(a1 + 40) = a2[5];
  swift_release();
  *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for VideoMessageControlsView.PlayButtonView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 49))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for VideoMessageControlsView.PlayButtonView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 49) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void *type metadata accessor for VideoMessageControlsView.PlayButtonView()
{
  return &unk_1E76359D0;
}

_QWORD *initializeBufferWithCopyOfBuffer for VideoMessageControlsView.RemoteBottomControlsView(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  id v4;

  v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = v3;
  return a1;
}

void destroy for VideoMessageControlsView.RemoteBottomControlsView(uint64_t a1)
{

}

_QWORD *assignWithCopy for VideoMessageControlsView.RemoteBottomControlsView(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  void *v4;
  id v5;

  *a1 = *a2;
  v3 = (void *)a2[1];
  v4 = (void *)a1[1];
  a1[1] = v3;
  v5 = v3;

  return a1;
}

_QWORD *assignWithTake for VideoMessageControlsView.RemoteBottomControlsView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  void *v4;

  v3 = a2[1];
  v4 = (void *)a1[1];
  *a1 = *a2;
  a1[1] = v3;

  return a1;
}

void *type metadata accessor for VideoMessageControlsView.RemoteBottomControlsView()
{
  return &unk_1E7635A58;
}

_QWORD *initializeBufferWithCopyOfBuffer for VideoMessageControlsView.LocalBottomControlsView(_QWORD *a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  void *v7;
  uint64_t v8;
  char v9;
  id v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = (void *)a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[2];
    v9 = *((_BYTE *)a2 + 24);
    v10 = v7;
    outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(v8, v9);
    v4[2] = v8;
    *((_BYTE *)v4 + 24) = v9;
    v11 = a3[6];
    v12 = (_QWORD *)((char *)v4 + v11);
    v13 = (uint64_t *)((char *)a2 + v11);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v14 = type metadata accessor for UserInterfaceSizeClass();
      if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14))
      {
        v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UserInterfaceSizeClass?);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
        __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
      }
    }
    else
    {
      *v12 = *v13;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v17 = a3[7];
    v18 = (_QWORD *)((char *)v4 + v17);
    v19 = (uint64_t *)((char *)a2 + v17);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v20 = type metadata accessor for UserInterfaceSizeClass();
      if (__swift_getEnumTagSinglePayload((uint64_t)v19, 1, v20))
      {
        v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UserInterfaceSizeClass?);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
        __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, v20);
      }
    }
    else
    {
      *v18 = *v19;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    *(_QWORD *)((char *)v4 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
  }
  return v4;
}

uint64_t destroy for VideoMessageControlsView.LocalBottomControlsView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  outlined consume of Environment<CGFloat>.Content(*(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
  v4 = a1 + *(int *)(a2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = type metadata accessor for UserInterfaceSizeClass();
    if (!__swift_getEnumTagSinglePayload(v4, 1, v5))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  v6 = a1 + *(int *)(a2 + 28);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v7 = type metadata accessor for UserInterfaceSizeClass();
  result = __swift_getEnumTagSinglePayload(v6, 1, v7);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  return result;
}

uint64_t initializeWithCopy for VideoMessageControlsView.LocalBottomControlsView(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  uint64_t v7;
  char v8;
  id v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;

  v6 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_BYTE *)(a2 + 24);
  v9 = v6;
  outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(v7, v8);
  *(_QWORD *)(a1 + 16) = v7;
  *(_BYTE *)(a1 + 24) = v8;
  v10 = a3[6];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v13 = type metadata accessor for UserInterfaceSizeClass();
    if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UserInterfaceSizeClass?);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
      __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
    }
  }
  else
  {
    *v11 = *v12;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v15 = a3[7];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (_QWORD *)(a2 + v15);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v18 = type metadata accessor for UserInterfaceSizeClass();
    if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v18))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UserInterfaceSizeClass?);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
      __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v18);
    }
  }
  else
  {
    *v16 = *v17;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  return a1;
}

uint64_t assignWithCopy for VideoMessageControlsView.LocalBottomControlsView(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *(void **)(a2 + 8);
  v7 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v6;
  v8 = v6;

  v9 = *(_QWORD *)(a2 + 16);
  v10 = *(_BYTE *)(a2 + 24);
  outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(v9, v10);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v9;
  *(_BYTE *)(a1 + 24) = v10;
  outlined consume of Environment<CGFloat>.Content(v11, v12);
  if (a1 != a2)
  {
    v13 = a3[6];
    v14 = (_QWORD *)(a1 + v13);
    v15 = (_QWORD *)(a2 + v13);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(a1 + v13, &demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v16 = type metadata accessor for UserInterfaceSizeClass();
      if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v16))
      {
        v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UserInterfaceSizeClass?);
        memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
        __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v16);
      }
    }
    else
    {
      *v14 = *v15;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v18 = a3[7];
    v19 = (_QWORD *)(a1 + v18);
    v20 = (_QWORD *)(a2 + v18);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(a1 + v18, &demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v21 = type metadata accessor for UserInterfaceSizeClass();
      if (__swift_getEnumTagSinglePayload((uint64_t)v20, 1, v21))
      {
        v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UserInterfaceSizeClass?);
        memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
        __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v21);
      }
    }
    else
    {
      *v19 = *v20;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  return a1;
}

uint64_t initializeWithTake for VideoMessageControlsView.LocalBottomControlsView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v6 = a3[6];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = type metadata accessor for UserInterfaceSizeClass();
    if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v10))
    {
      v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UserInterfaceSizeClass?);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
      __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v10);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  v12 = a3[7];
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v15 = type metadata accessor for UserInterfaceSizeClass();
    if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UserInterfaceSizeClass?);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
      __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  return a1;
}

uint64_t assignWithTake for VideoMessageControlsView.LocalBottomControlsView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(void **)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;

  v8 = *(_BYTE *)(a2 + 24);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = v8;
  outlined consume of Environment<CGFloat>.Content(v9, v10);
  if (a1 != a2)
  {
    v11 = a3[6];
    v12 = (void *)(a1 + v11);
    v13 = (const void *)(a2 + v11);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(a1 + v11, &demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
    v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v15 = type metadata accessor for UserInterfaceSizeClass();
      if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v15))
      {
        v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UserInterfaceSizeClass?);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v12, v13, v15);
        __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v15);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    v17 = a3[7];
    v18 = (void *)(a1 + v17);
    v19 = (const void *)(a2 + v17);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(a1 + v17, &demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
    v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v21 = type metadata accessor for UserInterfaceSizeClass();
      if (__swift_getEnumTagSinglePayload((uint64_t)v19, 1, v21))
      {
        v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UserInterfaceSizeClass?);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v18, v19, v21);
        __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, v21);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
  }
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  return a1;
}

uint64_t getEnumTagSinglePayload for VideoMessageControlsView.LocalBottomControlsView()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1BD4314E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    OUTLINED_FUNCTION_93_0(*(_QWORD *)(a1 + 8));
    OUTLINED_FUNCTION_18();
  }
  else
  {
    v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>);
    OUTLINED_FUNCTION_1_16(a1 + *(int *)(a3 + 24), a2, v6);
  }
}

uint64_t storeEnumTagSinglePayload for VideoMessageControlsView.LocalBottomControlsView()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1BD431550(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v7;

  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(a1 + 8) = (a2 - 1);
    OUTLINED_FUNCTION_18();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>);
    OUTLINED_FUNCTION_0_29(a1 + *(int *)(a4 + 24), a2, a2, v7);
  }
}

uint64_t type metadata accessor for VideoMessageControlsView.LocalBottomControlsView(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for VideoMessageControlsView.LocalBottomControlsView);
}

void type metadata completion function for VideoMessageControlsView.LocalBottomControlsView()
{
  unint64_t v0;

  type metadata accessor for Environment<UserInterfaceSizeClass?>.Content();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void destroy for VideoMessageControlsView.TopControlsView(uint64_t a1)
{
  outlined consume of Environment<CGFloat>.Content(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));

}

uint64_t initializeWithCopy for VideoMessageControlsView.TopControlsView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  void *v6;
  id v7;

  v4 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(*(_QWORD *)a2, v5);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  v6 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = v6;
  return a1;
}

uint64_t assignWithCopy for VideoMessageControlsView.TopControlsView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  void *v8;
  void *v9;
  id v10;

  v4 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(*(_QWORD *)a2, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  outlined consume of Environment<CGFloat>.Content(v6, v7);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v8 = *(void **)(a2 + 24);
  v9 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v8;
  v10 = v8;

  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for VideoMessageControlsView.TopControlsView(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  void *v9;

  v4 = *a2;
  v5 = *((_BYTE *)a2 + 8);
  v6 = *(_QWORD *)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  outlined consume of Environment<CGFloat>.Content(v6, v7);
  v8 = a2[3];
  v9 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_QWORD *)(a1 + 24) = v8;

  *(_QWORD *)(a1 + 32) = a2[4];
  return a1;
}

uint64_t getEnumTagSinglePayload for VideoMessageControlsView.TopControlsView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 40))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for VideoMessageControlsView.TopControlsView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void *type metadata accessor for VideoMessageControlsView.TopControlsView()
{
  return &unk_1E7635AD8;
}

uint64_t associated type witness table accessor for View.Body : View in VideoMessageControlsView.TopControlsView()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t associated type witness table accessor for View.Body : View in VideoMessageControlsView.LocalBottomControlsView()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t associated type witness table accessor for View.Body : View in VideoMessageControlsView.RemoteBottomControlsView()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t associated type witness table accessor for View.Body : View in VideoMessageControlsView.PlayButtonView()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t lazy protocol witness table accessor for type MovieScrubber and conformance MovieScrubber()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type MovieScrubber and conformance MovieScrubber;
  if (!lazy protocol witness table cache variable for type MovieScrubber and conformance MovieScrubber)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for MovieScrubber, &unk_1E7635950);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MovieScrubber and conformance MovieScrubber);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type MovieScrubber and conformance MovieScrubber;
  if (!lazy protocol witness table cache variable for type MovieScrubber and conformance MovieScrubber)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for MovieScrubber, &unk_1E7635950);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MovieScrubber and conformance MovieScrubber);
  }
  return result;
}

uint64_t sub_1BD4318C0()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void partial apply for closure #1 in MovieScrubber.ScubberCoordinator.init(text:player:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  closure #1 in MovieScrubber.ScubberCoordinator.init(text:player:)(a1, a2, a3, v3);
}

uint64_t outlined assign with take of Any?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Any?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BD431970()
{
  uint64_t v0;

  outlined consume of Environment<CGFloat>.Content(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));

  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in VideoMessageControlsView.PlayButtonView.body.getter()
{
  return closure #1 in VideoMessageControlsView.PlayButtonView.body.getter();
}

uint64_t partial apply for closure #2 in VideoMessageControlsView.PlayButtonView.body.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return closure #2 in VideoMessageControlsView.PlayButtonView.body.getter(*(_QWORD *)(v1 + 16), a1);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Font?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Font?>);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t outlined release of ObservedObject<VideoMessagePlayerViewModel>(uint64_t a1)
{

  return a1;
}

uint64_t partial apply for closure #1 in closure #1 in VideoMessageControlsView.PlayButtonView.body.getter()
{
  uint64_t v0;

  return closure #1 in closure #1 in VideoMessageControlsView.PlayButtonView.body.getter(*(_QWORD *)(v0 + 16));
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>> and conformance HStack<A>, &demangling cache variable for type metadata for HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>);
    v3 = v2;
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Color?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Color?>);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v5);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<HStack<TupleView<(ModifiedContent<Spacer, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>, AccessibilityAttachmentModifier>, ModifiedContent<HStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>, _FlexFrameLayout>)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<HStack<TupleView<(ModifiedContent<Spacer, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>, AccessibilityAttachmentModifier>, ModifiedContent<HStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>, _FlexFrameLayout>)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<HStack<TupleView<(ModifiedContent<Spacer, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>, AccessibilityAttachmentModifier>, ModifiedContent<HStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>, _FlexFrameLayout>)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(ModifiedContent<Spacer, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>, AccessibilityAttachmentModifier>, ModifiedContent<HStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>, _FlexFrameLayout>)>>, _PaddingLayout>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type HStack<TupleView<(ModifiedContent<Spacer, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>, AccessibilityAttachmentModifier>, ModifiedContent<HStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>, _FlexFrameLayout>)>> and conformance HStack<A>, &demangling cache variable for type metadata for HStack<TupleView<(ModifiedContent<Spacer, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>, AccessibilityAttachmentModifier>, ModifiedContent<HStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>, _FlexFrameLayout>)>>);
    v3[0] = v2;
    v3[1] = MEMORY[0x1E0CD9758];
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v3);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<HStack<TupleView<(ModifiedContent<Spacer, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>, AccessibilityAttachmentModifier>, ModifiedContent<HStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>, _FlexFrameLayout>)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t OpaqueTypeConformance2;
  uint64_t v3;
  _QWORD v4[4];

  result = lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>);
    v4[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>);
    v4[3] = lazy protocol witness table accessor for type ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Color?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Color?>);
    v4[0] = OpaqueTypeConformance2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _InsettableBackgroundShapeModifier<Color, Circle> and conformance _InsettableBackgroundShapeModifier<A, B>, &demangling cache variable for type metadata for _InsettableBackgroundShapeModifier<Color, Circle>);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>> and conformance Button<A>, &demangling cache variable for type metadata for Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>);
    v3[0] = v2;
    v3[1] = MEMORY[0x1E0CD8D70];
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v3);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t partial apply for closure #1 in closure #1 in closure #2 in VideoMessageControlsView.LocalBottomControlsView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return closure #1 in closure #1 in closure #1 in VideoMessageControlsView.LocalBottomControlsView.body.getter(*(_QWORD *)(v1 + 16), a1);
}

uint64_t partial apply for closure #1 in VideoMessageControlsView.TopControlsView.cancelButton()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return closure #1 in VideoMessageControlsView.TopControlsView.cancelButton()(*(_QWORD *)(v1 + 16), a1);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<VideoMessageControlsView.TopControlsView.ParticipantNameView, _PaddingLayout>, _TraitWritingModifier<LayoutPriorityTraitKey>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<VideoMessageControlsView.TopControlsView.ParticipantNameView, _PaddingLayout>, _TraitWritingModifier<LayoutPriorityTraitKey>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<VideoMessageControlsView.TopControlsView.ParticipantNameView, _PaddingLayout>, _TraitWritingModifier<LayoutPriorityTraitKey>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<VideoMessageControlsView.TopControlsView.ParticipantNameView, _PaddingLayout>, _TraitWritingModifier<LayoutPriorityTraitKey>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<PlaceholderContentView<ModalOverlayTransition>, _OpacityEffect>, _BlurEffect>, _ScaleEffect> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<VideoMessageControlsView.TopControlsView.ParticipantNameView, _PaddingLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<VideoMessageControlsView.TopControlsView.ParticipantNameView, _PaddingLayout>, (uint64_t (*)(void))lazy protocol witness table accessor for type VideoMessageControlsView.TopControlsView.ParticipantNameView and conformance VideoMessageControlsView.TopControlsView.ParticipantNameView, MEMORY[0x1E0CD9758]);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _TraitWritingModifier<LayoutPriorityTraitKey> and conformance _TraitWritingModifier<A>, &demangling cache variable for type metadata for _TraitWritingModifier<LayoutPriorityTraitKey>);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<VideoMessageControlsView.TopControlsView.ParticipantNameView, _PaddingLayout>, _TraitWritingModifier<LayoutPriorityTraitKey>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type VideoMessageControlsView.TopControlsView.ParticipantNameView and conformance VideoMessageControlsView.TopControlsView.ParticipantNameView()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type VideoMessageControlsView.TopControlsView.ParticipantNameView and conformance VideoMessageControlsView.TopControlsView.ParticipantNameView;
  if (!lazy protocol witness table cache variable for type VideoMessageControlsView.TopControlsView.ParticipantNameView and conformance VideoMessageControlsView.TopControlsView.ParticipantNameView)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for VideoMessageControlsView.TopControlsView.ParticipantNameView, &unk_1E7635FD8);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type VideoMessageControlsView.TopControlsView.ParticipantNameView and conformance VideoMessageControlsView.TopControlsView.ParticipantNameView);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type AccessibilityAttachmentModifier and conformance AccessibilityAttachmentModifier, (void (*)(uint64_t))MEMORY[0x1E0CDCFD0]);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _ClipEffect<RoundedRectangle> and conformance _ClipEffect<A>, &demangling cache variable for type metadata for _ClipEffect<RoundedRectangle>);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>> and conformance _BackgroundModifier<A>, &demangling cache variable for type metadata for _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<Text, _PaddingLayout> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Color?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Color?>);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<Menu<ZStack<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>>, TupleView<(Button<Text>, Button<Text>?, Button<Text>)>>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<Menu<ZStack<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>>, TupleView<(Button<Text>, Button<Text>?, Button<Text>)>>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<Menu<ZStack<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>>, TupleView<(Button<Text>, Button<Text>?, Button<Text>)>>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Menu<ZStack<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>>, TupleView<(Button<Text>, Button<Text>?, Button<Text>)>>, _FlexFrameLayout>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Menu<ZStack<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>>, TupleView<(Button<Text>, Button<Text>?, Button<Text>)>> and conformance Menu<A, B>, &demangling cache variable for type metadata for Menu<ZStack<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>>, TupleView<(Button<Text>, Button<Text>?, Button<Text>)>>);
    v3[0] = v2;
    v3[1] = MEMORY[0x1E0CDA228];
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v3);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<Menu<ZStack<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>>, TupleView<(Button<Text>, Button<Text>?, Button<Text>)>>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t lazy protocol witness table accessor for type ModifiedContent<AnimatedSaveButton, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>()
{
  return lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<PlaceholderContentView<ModalOverlayTransition>, _OpacityEffect>, _BlurEffect>, _ScaleEffect> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<AnimatedSaveButton, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<AnimatedSaveButton, _FlexFrameLayout>, (uint64_t (*)(void))lazy protocol witness table accessor for type AnimatedSaveButton and conformance AnimatedSaveButton, MEMORY[0x1E0CDA228]);
}

unint64_t lazy protocol witness table accessor for type AnimatedSaveButton and conformance AnimatedSaveButton()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type AnimatedSaveButton and conformance AnimatedSaveButton;
  if (!lazy protocol witness table cache variable for type AnimatedSaveButton and conformance AnimatedSaveButton)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for AnimatedSaveButton, &type metadata for AnimatedSaveButton);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AnimatedSaveButton and conformance AnimatedSaveButton);
  }
  return result;
}

uint64_t partial apply for closure #1 in VideoMessageControlsView.TopControlsView.civicMenuButton(using:)@<X0>(Swift::String *a1@<X8>)
{
  uint64_t v1;

  return closure #1 in VideoMessageControlsView.TopControlsView.civicMenuButton(using:)(*(_QWORD **)(v1 + 16), *(Swift::String **)(v1 + 24), a1);
}

uint64_t partial apply for closure #2 in VideoMessageControlsView.TopControlsView.civicMenuButton(using:)@<X0>(uint64_t *a1@<X8>)
{
  return closure #2 in VideoMessageControlsView.TopControlsView.civicMenuButton(using:)(a1);
}

uint64_t sub_1BD432164()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BD432188()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in AnimatedSaveButton.body.getter()
{
  uint64_t v0;

  return closure #1 in closure #1 in AnimatedSaveButton.body.getter(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24));
}

uint64_t partial apply for closure #2 in closure #1 in AnimatedSaveButton.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return closure #2 in closure #1 in AnimatedSaveButton.body.getter(*(void **)(v1 + 24), a1);
}

uint64_t sub_1BD4321DC()
{
  return OUTLINED_FUNCTION_23_4();
}

unint64_t lazy protocol witness table accessor for type MarginKey and conformance MarginKey()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type MarginKey and conformance MarginKey;
  if (!lazy protocol witness table cache variable for type MarginKey and conformance MarginKey)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for MarginKey, &unk_1E7635F60);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MarginKey and conformance MarginKey);
  }
  return result;
}

uint64_t objectdestroyTm_16()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_93();
  v1 = (int *)OUTLINED_FUNCTION_39_57();
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  outlined consume of Environment<CGFloat>.Content(*(_QWORD *)v3, *(_BYTE *)(v3 + 8));
  v4 = v3 + v1[5];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
  if (OUTLINED_FUNCTION_84_13() == 1)
  {
    v5 = type metadata accessor for UserInterfaceSizeClass();
    if (!__swift_getEnumTagSinglePayload(v4, 1, v5))
      OUTLINED_FUNCTION_52(v4, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8));
  }
  else
  {
    swift_release();
  }
  v6 = v3 + v1[6];
  if (OUTLINED_FUNCTION_84_13() == 1)
  {
    v7 = type metadata accessor for UserInterfaceSizeClass();
    if (!__swift_getEnumTagSinglePayload(v6, 1, v7))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }

  swift_release();
  return swift_deallocObject();
}

void partial apply for closure #2 in closure #1 in VideoMessageControlsView.body.getter()
{
  uint64_t v0;
  uint64_t v1;

  type metadata accessor for VideoMessageControlsView(0);
  OUTLINED_FUNCTION_49_3();
  closure #2 in closure #1 in VideoMessageControlsView.body.getter(v0 + v1);
}

void partial apply for closure #1 in closure #2 in closure #1 in VideoMessageControlsView.body.getter()
{
  uint64_t v0;

  closure #1 in closure #2 in closure #1 in VideoMessageControlsView.body.getter(*(_QWORD *)(v0 + 16));
}

void partial apply for closure #2 in closure #1 in closure #1 in VideoMessageControlsView.body.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  closure #2 in closure #1 in closure #1 in VideoMessageControlsView.body.getter(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

BOOL partial apply for closure #3 in closure #1 in closure #1 in VideoMessageControlsView.body.getter()
{
  uint64_t v0;

  return closure #3 in closure #1 in closure #1 in VideoMessageControlsView.body.getter(*(_QWORD *)(v0 + 16));
}

id outlined copy of _ConditionalContent<TupleView<(ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, _FlexFrameLayout>, _OpacityEffect>, Spacer)>, TupleView<(ModifiedContent<HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>)>>, _FlexFrameLayout>, Spacer)>>.Storage(uint64_t a1, char a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10, __int16 a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,char a39)
{
  if ((a39 & 1) == 0)
    return outlined copy of _ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>.Storage(a1, a2, a3, a4, a5, a6, (uint64_t)a7, a8, a9, a10, a11, a12 & 1);
  swift_retain();
  return a7;
}

void outlined retain of _ConditionalContent<TupleView<(ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, _FlexFrameLayout>, _OpacityEffect>, Spacer)>, TupleView<(ModifiedContent<HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>)>>, _FlexFrameLayout>, Spacer)>>(uint64_t a1)
{
  __n128 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, _QWORD, _QWORD, _QWORD, _QWORD);

  v2 = OUTLINED_FUNCTION_47_28(a1);
  OUTLINED_FUNCTION_22_77(v2, v3, v4, v5, v6, v7, v8, v1[3].n128_i64[1], v9, v1[4], v1[5], v1[6], v1[7], v1[8], v1[9], v1[10], v1[11]);
  OUTLINED_FUNCTION_86_13();
}

void outlined consume of _ConditionalContent<TupleView<(ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, _FlexFrameLayout>, _OpacityEffect>, Spacer)>, TupleView<(ModifiedContent<HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>)>>, _FlexFrameLayout>, Spacer)>>.Storage(uint64_t a1, char a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10, __int16 a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,char a39)
{
  if ((a39 & 1) != 0)
  {

    swift_release();
  }
  else
  {
    outlined consume of _ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>.Storage(a1, a2, a3, a4, a5, a6, (uint64_t)a7, a8, a9, a10, a11, a12 & 1);
  }
}

void outlined consume of _ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>.Storage(uint64_t a1, char a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, __int16 a11, char a12)
{
  if ((a12 & 1) != 0)
  {
    outlined consume of Environment<CGFloat>.Content(a1, a2 & 1);

  }
  else
  {
    outlined consume of _ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>.Storage(a1, a2, a3, a4);
  }
}

void outlined consume of _ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>.Storage(uint64_t a1, char a2, uint64_t a3, void *a4)
{
  outlined consume of Environment<CGFloat>.Content(a1, a2 & 1);

}

void outlined retain of VStack<_ConditionalContent<TupleView<(ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, _FlexFrameLayout>, _OpacityEffect>, Spacer)>, TupleView<(ModifiedContent<HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>)>>, _FlexFrameLayout>, Spacer)>>>(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, _QWORD, _QWORD, _QWORD, _QWORD))
{
  OUTLINED_FUNCTION_22_77(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), a2, *(__n128 *)(a1 + 88), *(__n128 *)(a1 + 104), *(__n128 *)(a1 + 120), *(__n128 *)(a1 + 136), *(__n128 *)(a1 + 152), *(__n128 *)(a1 + 168), *(__n128 *)(a1 + 184), *(__n128 *)(a1 + 200));
  OUTLINED_FUNCTION_86_13();
}

void sub_1BD432784(double *a1@<X8>)
{
  *a1 = EnvironmentValues.primaryButtonSize.getter();
  OUTLINED_FUNCTION_0();
}

void sub_1BD4327A8()
{
  OUTLINED_FUNCTION_49_44((void (*)(void))lazy protocol witness table accessor for type PrimaryButtonSizeKey and conformance PrimaryButtonSizeKey);
  OUTLINED_FUNCTION_0();
}

uint64_t sub_1BD4327D4()
{
  return OUTLINED_FUNCTION_23_4();
}

void partial apply for closure #1 in closure #4 in closure #1 in closure #1 in VideoMessageControlsView.body.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  closure #1 in closure #4 in closure #1 in closure #1 in VideoMessageControlsView.body.getter(*(_QWORD *)(v1 + 16), a1);
}

uint64_t partial apply for implicit closure #1 in closure #4 in closure #1 in closure #1 in VideoMessageControlsView.body.getter()
{
  uint64_t v0;

  return implicit closure #1 in closure #4 in closure #1 in closure #1 in VideoMessageControlsView.body.getter(*(_QWORD *)(v0 + 16));
}

uint64_t outlined retain of ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 24);
  outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v3 = v2;
  return a1;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<PlaceholderContentView<ModalOverlayTransition>, _OpacityEffect>, _BlurEffect>, _ScaleEffect> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, (uint64_t (*)(void))lazy protocol witness table accessor for type VideoMessageControlsView.PlayButtonView and conformance VideoMessageControlsView.PlayButtonView, MEMORY[0x1E0CD9728]);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyTransformModifier<Bool> and conformance _EnvironmentKeyTransformModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyTransformModifier<Bool>);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type VideoMessageControlsView.PlayButtonView and conformance VideoMessageControlsView.PlayButtonView()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type VideoMessageControlsView.PlayButtonView and conformance VideoMessageControlsView.PlayButtonView;
  if (!lazy protocol witness table cache variable for type VideoMessageControlsView.PlayButtonView and conformance VideoMessageControlsView.PlayButtonView)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for VideoMessageControlsView.PlayButtonView, &unk_1E76359D0);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type VideoMessageControlsView.PlayButtonView and conformance VideoMessageControlsView.PlayButtonView);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>> and conformance _OverlayModifier<A>, &demangling cache variable for type metadata for _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>>);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t sub_1BD4329C4()
{
  return OUTLINED_FUNCTION_23_4();
}

void partial apply for closure #1 in closure #1 in View.conditionalyOverlaid<A>(with:alignment:pinningTo:spacing:condition:)()
{
  closure #1 in closure #1 in View.conditionalyOverlaid<A>(with:alignment:pinningTo:spacing:condition:)();
}

unint64_t lazy protocol witness table accessor for type PrimaryButtonSizeKey and conformance PrimaryButtonSizeKey()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PrimaryButtonSizeKey and conformance PrimaryButtonSizeKey;
  if (!lazy protocol witness table cache variable for type PrimaryButtonSizeKey and conformance PrimaryButtonSizeKey)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for PrimaryButtonSizeKey, &unk_1E7635F40);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PrimaryButtonSizeKey and conformance PrimaryButtonSizeKey);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyTransformModifier<Bool> and conformance _EnvironmentKeyTransformModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyTransformModifier<Bool>);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>);
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type VideoMessageControlsView.LocalBottomControlsView and conformance VideoMessageControlsView.LocalBottomControlsView, (void (*)(uint64_t))type metadata accessor for VideoMessageControlsView.LocalBottomControlsView);
    v3[0] = v2;
    v3[1] = MEMORY[0x1E0CD9728];
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v3);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout> and conformance <> ModifiedContent<A, B>()
{
  return lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<PlaceholderContentView<ModalOverlayTransition>, _OpacityEffect>, _BlurEffect>, _ScaleEffect> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, lazy protocol witness table accessor for type ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout> and conformance <> ModifiedContent<A, B>, MEMORY[0x1E0CD9758]);
}

uint64_t lazy protocol witness table accessor for type ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout> and conformance <> ModifiedContent<A, B>()
{
  return lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<PlaceholderContentView<ModalOverlayTransition>, _OpacityEffect>, _BlurEffect>, _ScaleEffect> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, (uint64_t (*)(void))lazy protocol witness table accessor for type VideoMessageControlsView.RemoteBottomControlsView and conformance VideoMessageControlsView.RemoteBottomControlsView, MEMORY[0x1E0CD9758]);
}

unint64_t lazy protocol witness table accessor for type VideoMessageControlsView.RemoteBottomControlsView and conformance VideoMessageControlsView.RemoteBottomControlsView()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type VideoMessageControlsView.RemoteBottomControlsView and conformance VideoMessageControlsView.RemoteBottomControlsView;
  if (!lazy protocol witness table cache variable for type VideoMessageControlsView.RemoteBottomControlsView and conformance VideoMessageControlsView.RemoteBottomControlsView)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for VideoMessageControlsView.RemoteBottomControlsView, &unk_1E7635A58);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type VideoMessageControlsView.RemoteBottomControlsView and conformance VideoMessageControlsView.RemoteBottomControlsView);
  }
  return result;
}

uint64_t sub_1BD432BB4()
{
  return OUTLINED_FUNCTION_23_4();
}

uint64_t outlined release of TupleView<(Spacer, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>)>(uint64_t a1)
{

  swift_release();
  return a1;
}

uint64_t outlined release of ModifiedContent<HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>)>>, _FlexFrameLayout>(uint64_t a1)
{

  swift_release();
  return a1;
}

uint64_t _s7SwiftUI19_ConditionalContentV7StorageOyAA9TupleViewVyAA08ModifiedD0VyAIyACyACyAIy15ConversationKit020VideoMessageControlsG0V03TopmG033_B419541366E265736F7249488C40E55CLLVAA14_PaddingLayoutVGARGARGAA010_FlexFrameU0VGAA14_OpacityEffectVG_AA6SpacerVtGAGyAIyAA6HStackVyAGyA0__AIyAIyAJ18AnimatedSaveButtonVAA01_wU0VGAQGtGGAVG_A0_tG_GWOi0_(uint64_t result)
{
  *(_BYTE *)(result + 289) = 1;
  return result;
}

uint64_t _s7SwiftUI19_ConditionalContentV7StorageOyAA9TupleViewVyAA08ModifiedD0VyAIyACyACyAIy15ConversationKit020VideoMessageControlsG0V03TopmG033_B419541366E265736F7249488C40E55CLLVAA14_PaddingLayoutVGARGARGAA010_FlexFrameU0VGAA14_OpacityEffectVG_AA6SpacerVtGAGyAIyAA6HStackVyAGyA0__AIyAIyAJ18AnimatedSaveButtonVAA01_wU0VGAQGtGGAVG_A0_tG_GWOi_(uint64_t result)
{
  *(_BYTE *)(result + 289) = 0;
  return result;
}

uint64_t outlined release of _ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);

  v2 = OUTLINED_FUNCTION_47_28(a1);
  v3(v2);
  return v1;
}

uint64_t outlined retain of Environment<CGFloat>(uint64_t a1)
{
  outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  return a1;
}

unint64_t lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>> and conformance <> _ConditionalContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type _ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>> and conformance <> _ConditionalContent<A, B>;
  if (!lazy protocol witness table cache variable for type _ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>> and conformance <> _ConditionalContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>);
    v2[0] = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<PlaceholderContentView<ModalOverlayTransition>, _OpacityEffect>, _BlurEffect>, _ScaleEffect> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, (uint64_t (*)(void))lazy protocol witness table accessor for type VideoMessageControlsView.TopControlsView and conformance VideoMessageControlsView.TopControlsView, MEMORY[0x1E0CD9758]);
    v2[1] = v2[0];
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDB8A0], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>> and conformance <> _ConditionalContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type VideoMessageControlsView.TopControlsView and conformance VideoMessageControlsView.TopControlsView()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type VideoMessageControlsView.TopControlsView and conformance VideoMessageControlsView.TopControlsView;
  if (!lazy protocol witness table cache variable for type VideoMessageControlsView.TopControlsView and conformance VideoMessageControlsView.TopControlsView)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for VideoMessageControlsView.TopControlsView, &unk_1E7635AD8);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type VideoMessageControlsView.TopControlsView and conformance VideoMessageControlsView.TopControlsView);
  }
  return result;
}

uint64_t outlined retain of ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 8);
  swift_retain();
  v3 = v2;
  return a1;
}

uint64_t outlined release of ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>(uint64_t a1)
{

  swift_release();
  return a1;
}

void *type metadata accessor for PrimaryButtonSizeKey()
{
  return &unk_1E7635F40;
}

void *type metadata accessor for MarginKey()
{
  return &unk_1E7635F60;
}

void *type metadata accessor for VideoMessageControlsView.TopControlsView.ParticipantNameView()
{
  return &unk_1E7635FD8;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>>, _FrameLayout>, _ContentShapeModifier<Circle>>, _InsettableBackgroundShapeModifier<Material, Circle>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>>, _FrameLayout>, _ContentShapeModifier<Circle>>, _InsettableBackgroundShapeModifier<Material, Circle>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>>, _FrameLayout>, _ContentShapeModifier<Circle>>, _InsettableBackgroundShapeModifier<Material, Circle>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>>, _FrameLayout>, _ContentShapeModifier<Circle>>, _InsettableBackgroundShapeModifier<Material, Circle>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Button<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>>, _FrameLayout>, _ContentShapeModifier<Circle>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _InsettableBackgroundShapeModifier<Material, Circle> and conformance _InsettableBackgroundShapeModifier<A, B>, &demangling cache variable for type metadata for _InsettableBackgroundShapeModifier<Material, Circle>);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>>, _FrameLayout>, _ContentShapeModifier<Circle>>, _InsettableBackgroundShapeModifier<Material, Circle>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Button<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>>, _FrameLayout>, _ContentShapeModifier<Circle>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Button<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>>, _FrameLayout>, _ContentShapeModifier<Circle>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Button<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>>, _FrameLayout>, _ContentShapeModifier<Circle>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Button<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>>, _FrameLayout>, _ContentShapeModifier<Circle>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<Button<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>>, _FrameLayout> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _ContentShapeModifier<Circle> and conformance _ContentShapeModifier<A>, &demangling cache variable for type metadata for _ContentShapeModifier<Circle>);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Button<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>>, _FrameLayout>, _ContentShapeModifier<Circle>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<Button<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>>, _FrameLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<Button<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>>, _FrameLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<Button<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>>, _FrameLayout> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Button<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>>, _FrameLayout>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Button<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>> and conformance Button<A>, &demangling cache variable for type metadata for Button<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>>);
    v3[0] = v2;
    v3[1] = MEMORY[0x1E0CD8D70];
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v3);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<Button<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>>, _FrameLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

void sub_1BD432F94()
{
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type VStack<ModifiedContent<ModifiedContent<VStack<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundModifier<_ShapeView<Capsule, HierarchicalShapeStyle>>>, _InsettableBackgroundShapeModifier<Material, Capsule>>, _EnvironmentKeyWritingModifier<ColorScheme>>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _InsettableBackgroundShapeModifier<Color, Capsule>>)>>, _EnvironmentKeyWritingModifier<ColorScheme>>>, _FlexFrameLayout>, _OpacityEffect>> and conformance VStack<A>, &demangling cache variable for type metadata for VStack<ModifiedContent<ModifiedContent<VStack<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundModifier<_ShapeView<Capsule, HierarchicalShapeStyle>>>, _InsettableBackgroundShapeModifier<Material, Capsule>>, _EnvironmentKeyWritingModifier<ColorScheme>>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _InsettableBackgroundShapeModifier<Color, Capsule>>)>>, _EnvironmentKeyWritingModifier<ColorScheme>>>, _FlexFrameLayout>, _OpacityEffect>>);
}

void sub_1BD4330CC()
{
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FixedSizeLayout>, _FlexFrameLayout>, _OffsetEffect>, Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.TopControlsView.ParticipantNameView, _PaddingLayout>, _TraitWritingModifier<LayoutPriorityTraitKey>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier>>, Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<Menu<ZStack<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>>, TupleView<(Button<Text>, Button<Text>?, Button<Text>)>>, _FlexFrameLayout>, _OffsetEffect>, ModifiedContent<ModifiedContent<A, &demangling cache variable for type metadata for HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FixedSizeLayout>, _FlexFrameLayout>, _OffsetEffect>, Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.TopControlsView.ParticipantNameView, _PaddingLayout>, _TraitWritingModifier<LayoutPriorityTraitKey>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier>>, Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<Menu<ZStack<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>>, TupleView<(Button<Text>, Button<Text>?, Button<Text>)>>, _FlexFrameLayout>, _OffsetEffect>, ModifiedContent<ModifiedContent<Anima);
}

uint64_t associated type witness table accessor for View.Body : View in VideoMessageControlsView.TopControlsView.ParticipantNameView()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Int?>);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_39_57()
{
  return type metadata accessor for VideoMessageControlsView(0);
}

uint64_t OUTLINED_FUNCTION_75_19@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, _QWORD)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, *(_QWORD *)(v3 - 256));
}

uint64_t OUTLINED_FUNCTION_76_19()
{
  return Published.init(initialValue:)();
}

void TTRBannerController.TTRBannerViewController.setter(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR___TTRBannerControllerInternal_TTRBannerViewController);
  *(_QWORD *)(v1 + OBJC_IVAR___TTRBannerControllerInternal_TTRBannerViewController) = a1;

}

uint64_t TTRBannerController.delegate.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR___TTRBannerControllerInternal_delegate;
  OUTLINED_FUNCTION_2_0();
  return MEMORY[0x1C3B752C0](v1);
}

uint64_t TTRBannerController.delegate.setter()
{
  OUTLINED_FUNCTION_2_0();
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

uint64_t key path setter for TTRBannerController.delegate : TTRBannerController(uint64_t a1, _QWORD **a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x80);
  v3 = swift_unknownObjectRetain();
  return v2(v3);
}

void (*TTRBannerController.delegate.modify(_QWORD *a1))(void **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR___TTRBannerControllerInternal_delegate;
  v3[4] = v1;
  v3[5] = v4;
  v5 = v1 + v4;
  OUTLINED_FUNCTION_2_0();
  v3[3] = MEMORY[0x1C3B752C0](v5);
  return DestinationQueryController.delegate.modify;
}

id TTRBannerController.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id TTRBannerController.init()()
{
  char *v0;
  objc_super v2;

  *(_QWORD *)&v0[OBJC_IVAR___TTRBannerControllerInternal_TTRBannerViewController] = 0;
  swift_unknownObjectWeakInit();
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRBannerController();
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t type metadata accessor for TTRBannerController()
{
  return objc_opt_self();
}

Swift::Void __swiftcall TTRBannerController.showTTRBanner(useFullLogArchive:)(Swift::Bool useFullLogArchive)
{
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  _QWORD *v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  void *v21;
  _QWORD *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD aBlock[6];

  v2 = v1;
  v32 = type metadata accessor for DispatchWorkItemFlags();
  v35 = *(_QWORD *)(v32 - 8);
  MEMORY[0x1E0C80A78](v32);
  OUTLINED_FUNCTION_41();
  v31 = v3;
  v4 = type metadata accessor for DispatchQoS();
  v33 = *(_QWORD *)(v4 - 8);
  v34 = v4;
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_41();
  v30 = v5;
  v6 = type metadata accessor for DispatchTimeInterval();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (uint64_t *)((char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = type metadata accessor for DispatchTime();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v28 - v15;
  v17 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for TapToRadarBannerViewController()), sel_init);
  v18 = v17;
  TTRBannerController.TTRBannerViewController.setter((uint64_t)v17);
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v18) + 0x1A0))();
  type metadata accessor for OS_dispatch_queue();
  v29 = static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  *v9 = 5;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DEF4A0], v6);
  MEMORY[0x1C3B72C44](v13, v9);
  (*(void (**)(_QWORD *, uint64_t))(v7 + 8))(v9, v6);
  v19 = *(void (**)(char *, uint64_t))(v11 + 8);
  v19(v13, v10);
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = v18;
  *(_QWORD *)(v20 + 24) = v2;
  aBlock[4] = partial apply for closure #1 in TTRBannerController.showTTRBanner(useFullLogArchive:);
  aBlock[5] = v20;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = &block_descriptor_84;
  v21 = _Block_copy(aBlock);
  v22 = v18;
  v23 = v2;
  swift_release();
  v24 = v30;
  static DispatchQoS.unspecified.getter();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  lazy protocol witness table accessor for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]();
  v26 = v31;
  v25 = v32;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  v27 = (void *)v29;
  MEMORY[0x1C3B735B0](v16, v24, v26, v21);
  _Block_release(v21);

  (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v26, v25);
  (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v24, v34);
  v19(v16, v10);
}

void *closure #1 in TTRBannerController.showTTRBanner(useFullLogArchive:)(_QWORD *a1, _QWORD *a2)
{
  _QWORD *v4;
  uint64_t v5;
  void *result;

  v4 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v5 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x120))();
  if ((v5 & 1) != 0)
    v5 = (*(uint64_t (**)(void))((*v4 & *a1) + 0x1A8))();
  result = (void *)(*(uint64_t (**)(uint64_t))((*v4 & *a2) + 0x78))(v5);
  if (result)
  {
    objc_msgSend(result, sel_cleanupTTRBanner);
    return (void *)swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1BD433844()
{
  uint64_t v0;

  return swift_deallocObject();
}

void *partial apply for closure #1 in TTRBannerController.showTTRBanner(useFullLogArchive:)()
{
  uint64_t v0;

  return closure #1 in TTRBannerController.showTTRBanner(useFullLogArchive:)(*(_QWORD **)(v0 + 16), *(_QWORD **)(v0 + 24));
}

void TTRBannerController.buildTTRMessageBubbleRecipientsList(groupMessageUUID:with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  _QWORD *v9;

  v4 = *(_QWORD **)(v3 + OBJC_IVAR___TTRBannerControllerInternal_TTRBannerViewController);
  if (v4)
  {
    v8 = *(void (**)(uint64_t, uint64_t, uint64_t))((*MEMORY[0x1E0DEEDD8] & *v4) + 0x1B0);
    v9 = v4;
    v8(a1, a2, a3);

  }
}

id TTRBannerController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRBannerController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BD433A10@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x78))();
  *a2 = result;
  return result;
}

uint64_t method lookup function for TTRBannerController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TTRBannerController.delegate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of TTRBannerController.delegate.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of TTRBannerController.delegate.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of TTRBannerController.showTTRBanner(useFullLogArchive:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of TTRBannerController.buildTTRMessageBubbleRecipientsList(groupMessageUUID:with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t protocol witness for CallScreeningStateMachine.logger.getter in conformance <> CKStateMachine<A>()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_17_2();
  v0 = OUTLINED_FUNCTION_50();
  return OUTLINED_FUNCTION_31_0(v0, v1, v2, v3);
}

uint64_t CKStateMachine.logger.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_17_2();
  v0 = OUTLINED_FUNCTION_50();
  return OUTLINED_FUNCTION_31_0(v0, v1, v2, v3);
}

uint64_t protocol witness for CallScreeningStateMachine.currentState.getter in conformance <> CKStateMachine<A>@<X0>(uint64_t a1@<X8>)
{
  __int128 v3[3];

  specialized CKStateMachine.currentState.getter((uint64_t *)v3);
  return outlined init with take of CallScreening.State(v3, a1);
}

uint64_t CKStateMachine.currentState.getter()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);

  OUTLINED_FUNCTION_2_0();
  v0 = OUTLINED_FUNCTION_50();
  return v1(v0);
}

uint64_t protocol witness for CallScreeningStateMachine.transition(with:reason:validation:) in conformance <> CKStateMachine<A>(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v15;
  _QWORD *v16;
  uint64_t (*v18)(uint64_t, uint64_t, char, uint64_t, uint64_t, uint64_t, uint64_t);

  v15 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v7 + 16) = v15;
  *(_QWORD *)(v15 + 16) = a6;
  *(_QWORD *)(v15 + 24) = a7;
  v18 = (uint64_t (*)(uint64_t, uint64_t, char, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&async function pointer to specialized CKStateMachine.transition(with:reason:validation:)
                                                                                           + async function pointer to specialized CKStateMachine.transition(with:reason:validation:));
  swift_retain();
  v16 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 24) = v16;
  *v16 = v7;
  v16[1] = protocol witness for CallScreeningStateMachine.transition(with:reason:validation:) in conformance <> CKStateMachine<A>;
  return v18(a1, a2, a3, a4, a5, (uint64_t)partial apply for thunk for @escaping @callee_guaranteed (@guaranteed CallScreening.State) -> (@error @owned Error), v15);
}

uint64_t protocol witness for CallScreeningStateMachine.transition(with:reason:validation:) in conformance <> CKStateMachine<A>()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_19();
  return OUTLINED_FUNCTION_6(*(uint64_t (**)(void))(v2 + 8));
}

uint64_t thunk for @escaping @callee_guaranteed (@guaranteed CallScreening.State) -> (@error @owned Error)(__int128 *a1, uint64_t (*a2)(_BYTE *))
{
  _BYTE v4[56];

  outlined init with take of CallScreening.State(a1, (uint64_t)v4);
  return a2(v4);
}

uint64_t specialized CKStateMachine.transition(with:reason:validation:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v8 + 104) = a7;
  *(_QWORD *)(v8 + 112) = v7;
  *(_QWORD *)(v8 + 88) = a5;
  *(_QWORD *)(v8 + 96) = a6;
  *(_QWORD *)(v8 + 72) = a2;
  *(_QWORD *)(v8 + 80) = a4;
  *(_BYTE *)(v8 + 33) = a3;
  *(_QWORD *)(v8 + 64) = a1;
  if (one-time initialization token for shared != -1)
    swift_once();
  *(_QWORD *)(v8 + 120) = static CKStateMachineActor.shared;
  return OUTLINED_FUNCTION_4_4();
}

uint64_t specialized CKStateMachine.transition(with:reason:validation:)()
{
  __n128 *v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  unint64_t v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t (*v29)(void);
  __int128 v30;
  uint64_t v31;

  OUTLINED_FUNCTION_40_49();
  OUTLINED_FUNCTION_35_0();
  OUTLINED_FUNCTION_40_49();
  OUTLINED_FUNCTION_35_0();
  v1 = Logger.logObject.getter();
  v2 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_36_49(v1))
  {
    v26 = v0[5].n128_u64[1];
    v3 = v0[4].n128_i64[1];
    v28 = v0[5].n128_i64[0];
    v4 = v0[4].n128_i64[0];
    v5 = v0[2].n128_i8[1];
    v6 = OUTLINED_FUNCTION_105();
    v31 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v6 = 136446722;
    v27 = v2;
    v7 = specialized CKStateMachine.description.getter();
    swift_release();
    v0[2].n128_u64[1] = OUTLINED_FUNCTION_304(v7, v8, &v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_25();
    swift_release();
    OUTLINED_FUNCTION_53_39();
    v9 = v4;
    CallScreening.StateTransition.description.getter(v4, v3, v5);
    v11 = v10;
    v13 = v12;
    OUTLINED_FUNCTION_30_62(v9, v3);
    v0[3].n128_u64[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v11, v13, &v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_30_62(v9, v3);
    *(_WORD *)(v6 + 22) = 2082;
    OUTLINED_FUNCTION_35_0();
    v0[3].n128_u64[1] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v28, v26, &v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_11_11();
    OUTLINED_FUNCTION_28_62(&dword_1BD004000, v1, v27, "%{public}s Queuing request to transition to %{public}s with reason: %{public}s", (uint8_t *)v6);
    OUTLINED_FUNCTION_23_31();
    OUTLINED_FUNCTION_60();
  }
  v15 = v0[4].n128_i64[0];
  v14 = v0[4].n128_i64[1];
  OUTLINED_FUNCTION_30_62(v15, v14);
  OUTLINED_FUNCTION_13_66();

  OUTLINED_FUNCTION_30_62(v15, v14);
  OUTLINED_FUNCTION_19_1();
  v16 = v0[6].n128_u64[1];
  v17 = v0[7].n128_u64[0];
  v18 = v0[4].n128_i64[1];
  v19 = v0[5].n128_u64[0];
  v20 = v0[4].n128_i64[0];
  v0[1].n128_u64[0] = v20;
  v0[1].n128_u64[1] = v18;
  v21 = v0[2].n128_u8[1];
  v0[2].n128_u8[0] = v21;
  v22 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v22 + 16) = v17;
  v30 = *(__int128 *)((char *)&v0[5] + 8);
  outlined init with take of CallScreening.StateTransition(v0 + 1, (__n128 *)(v22 + 24));
  *(_QWORD *)(v22 + 48) = v19;
  *(_OWORD *)(v22 + 56) = v30;
  *(_QWORD *)(v22 + 72) = v16;
  v23 = OUTLINED_FUNCTION_15();
  v0[8].n128_u64[0] = v23;
  *(_QWORD *)(v23 + 16) = &async function pointer to partial apply for specialized closure #1 in CKStateMachine.transition(with:reason:validation:);
  *(_QWORD *)(v23 + 24) = v22;
  outlined copy of CallScreening.StateTransition(v20, v18, v21);
  v29 = (uint64_t (*)(void))((int)*MEMORY[0x1E0DBD0E8] + MEMORY[0x1E0DBD0E8]);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  v24 = (_QWORD *)swift_task_alloc();
  v0[8].n128_u64[1] = (unint64_t)v24;
  *v24 = v0;
  v24[1] = specialized CKStateMachine.transition(with:reason:validation:);
  return v29();
}

{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 144) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return OUTLINED_FUNCTION_2_8();
}

{
  uint64_t v0;

  swift_release();
  return OUTLINED_FUNCTION_16(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t CKStateMachine.transition(with:reason:validation:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6[9] = a5;
  v6[10] = v5;
  v6[7] = a3;
  v6[8] = a4;
  v6[5] = a1;
  v6[6] = a2;
  v7 = *v5;
  v6[11] = *(_QWORD *)(*v5 + 88);
  v6[12] = *(_QWORD *)(v7 + 80);
  v8 = OUTLINED_FUNCTION_23_70();
  v6[13] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v6[14] = v9;
  v6[15] = *(_QWORD *)(v9 + 64);
  v6[16] = swift_task_alloc();
  v6[17] = swift_task_alloc();
  if (one-time initialization token for shared != -1)
    swift_once();
  v6[18] = static CKStateMachineActor.shared;
  return OUTLINED_FUNCTION_4_4();
}

uint64_t CKStateMachine.transition(with:reason:validation:)()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int8x16_t *v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v28;
  NSObject *v29;
  int8x16_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(void);
  os_log_type_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t v39;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 112) + 16);
  v1(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 104));
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  v2 = Logger.logObject.getter();
  v3 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_36_49(v2))
  {
    v38 = v1;
    v5 = *(_QWORD *)(v0 + 128);
    v4 = *(_QWORD *)(v0 + 136);
    v6 = *(_QWORD *)(v0 + 104);
    v28 = *(_QWORD *)(v0 + 112);
    v36 = v3;
    v31 = *(_QWORD *)(v0 + 48);
    v7 = OUTLINED_FUNCTION_105();
    v33 = OUTLINED_FUNCTION_105();
    v39 = v33;
    *(_DWORD *)v7 = 136446722;
    v29 = v2;
    v8 = CKStateMachine.description.getter(v33);
    OUTLINED_FUNCTION_43();
    *(_QWORD *)(v0 + 16) = OUTLINED_FUNCTION_39_7(v8, v9, &v39);
    OUTLINED_FUNCTION_50_37();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_43();
    OUTLINED_FUNCTION_53_39();
    v38(v5, v4, v6);
    v10 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
    v10(v4, v6);
    swift_getAssociatedConformanceWitness();
    v11 = dispatch thunk of CustomStringConvertible.description.getter();
    v10(v5, v6);
    *(_QWORD *)(v0 + 24) = OUTLINED_FUNCTION_304(v11, v12, &v39);
    OUTLINED_FUNCTION_50_37();
    OUTLINED_FUNCTION_25();
    *(_WORD *)(v7 + 22) = 2082;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 32) = OUTLINED_FUNCTION_39_7(v31, v13, &v39);
    OUTLINED_FUNCTION_137_0();
    OUTLINED_FUNCTION_11_11();
    OUTLINED_FUNCTION_28_62(&dword_1BD004000, v29, v36, "%{public}s Queuing request to transition to %{public}s with reason: %{public}s", (uint8_t *)v7);
    OUTLINED_FUNCTION_23_31();
    OUTLINED_FUNCTION_60();
  }
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 112) + 8))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 104));
  OUTLINED_FUNCTION_13_66();

  OUTLINED_FUNCTION_19_1();
  v15 = *(_QWORD *)(v0 + 120);
  v14 = *(_QWORD *)(v0 + 128);
  v16 = *(_QWORD *)(v0 + 104);
  v17 = *(_QWORD *)(v0 + 112);
  v18 = *(_QWORD *)(v0 + 80);
  v19 = *(_QWORD *)(v0 + 56);
  v34 = *(_QWORD *)(v0 + 64);
  v37 = *(_QWORD *)(v0 + 72);
  v32 = *(_QWORD *)(v0 + 48);
  v30 = *(int8x16_t *)(v0 + 88);
  v1(v14, *(_QWORD *)(v0 + 40), v16);
  v20 = (*(unsigned __int8 *)(v17 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v21 = (v15 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  v22 = (int8x16_t *)swift_allocObject();
  v22[1] = vextq_s8(v30, v30, 8uLL);
  v22[2].i64[0] = v18;
  (*(void (**)(__int8 *, uint64_t, uint64_t))(v17 + 32))(&v22->i8[v20], v14, v16);
  v23 = (uint64_t *)((char *)v22->i64 + v21);
  *v23 = v32;
  v23[1] = v19;
  v24 = (uint64_t *)((char *)v22->i64 + ((v21 + 23) & 0xFFFFFFFFFFFFFFF8));
  *v24 = v34;
  v24[1] = v37;
  v25 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v0 + 152) = v25;
  *(_QWORD *)(v25 + 16) = &async function pointer to partial apply for closure #1 in CKStateMachine.transition(with:reason:validation:);
  *(_QWORD *)(v25 + 24) = v22;
  v35 = (uint64_t (*)(void))((int)*MEMORY[0x1E0DBD0E8] + MEMORY[0x1E0DBD0E8]);
  OUTLINED_FUNCTION_15_22();
  swift_bridgeObjectRetain();
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  v26 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 160) = v26;
  *v26 = v0;
  v26[1] = CKStateMachine.transition(with:reason:validation:);
  return v35();
}

{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 168) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return OUTLINED_FUNCTION_2_8();
}

{
  uint64_t v0;

  swift_task_dealloc();
  OUTLINED_FUNCTION_29_0();
  return OUTLINED_FUNCTION_16(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;

  swift_release();
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_12();
  return OUTLINED_FUNCTION_6(*(uint64_t (**)(void))(v0 + 8));
}

void CKStateMachineContainer.__allocating_init()()
{
  OUTLINED_FUNCTION_15();
  CKStateMachineContainer.init()();
  OUTLINED_FUNCTION_0();
}

uint64_t static CKStateMachineActor.shared.getter()
{
  if (one-time initialization token for shared != -1)
    swift_once();
  return swift_retain();
}

BOOL static CKStateMachineContainer.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (*(uint64_t (**)(void))(*(_QWORD *)a1 + 104))();
  v4 = (*(uint64_t (**)(void))(*(_QWORD *)a2 + 104))();
  v5 = v4;
  if (v3)
  {
    swift_release();
    if (v5)
    {
      OUTLINED_FUNCTION_19();
      return v3 == v5;
    }
    goto LABEL_5;
  }
  if (v4)
  {
LABEL_5:
    OUTLINED_FUNCTION_19();
    return 0;
  }
  OUTLINED_FUNCTION_19();
  return 1;
}

uint64_t CKStateMachine.description.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::String v3;
  Swift::String v4;
  Swift::String v5;
  Swift::String v6;
  Swift::String v7;

  v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v1 + 80) - 8);
  MEMORY[0x1E0C80A78](a1);
  OUTLINED_FUNCTION_4_1();
  _StringGuts.grow(_:)(40);
  v3._countAndFlagsBits = 0x4D65746174534B43;
  v3._object = (void *)0xEF3C656E69686361;
  String.append(_:)(v3);
  v4._countAndFlagsBits = 0x6574617453;
  v4._object = (void *)0xE500000000000000;
  String.append(_:)(v4);
  OUTLINED_FUNCTION_66_26();
  v5._countAndFlagsBits = _Pointer.debugDescription.getter();
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  v6._object = (void *)0x80000001BD67D490;
  v6._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v6);
  CKStateMachine.currentState.getter();
  OUTLINED_FUNCTION_56_37();
  OUTLINED_FUNCTION_4_30(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  v7._countAndFlagsBits = 41;
  v7._object = (void *)0xE100000000000000;
  String.append(_:)(v7);
  return 0;
}

uint64_t CKStateMachineActor.ActorType.deinit()
{
  uint64_t v0;

  swift_defaultActor_destroy();
  return v0;
}

uint64_t CKStateMachineActor.ActorType.__deallocating_deinit()
{
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

void CKStateMachineActor.ActorType.__allocating_init()()
{
  OUTLINED_FUNCTION_60_1();
  swift_defaultActor_initialize();
  OUTLINED_FUNCTION_0();
}

uint64_t CKStateMachineActor.ActorType.init()()
{
  uint64_t v0;

  swift_defaultActor_initialize();
  return v0;
}

void CKStateMachineActor.ActorType.unownedExecutor.getter()
{
  OUTLINED_FUNCTION_34_0();
}

void protocol witness for Actor.unownedExecutor.getter in conformance CKStateMachineActor.ActorType()
{
  CKStateMachineActor.ActorType.unownedExecutor.getter();
}

uint64_t key path setter for CKStateMachineContainer.stateMachine : <A>CKStateMachineContainer<A>()
{
  swift_beginAccess();
  return swift_weakAssign();
}

uint64_t CKStateMachineContainer.stateMachine.getter()
{
  OUTLINED_FUNCTION_2_0();
  return swift_weakLoadStrong();
}

uint64_t CKStateMachineContainer.deinit()
{
  uint64_t v0;

  swift_weakDestroy();
  return v0;
}

uint64_t CKStateMachineContainer.__deallocating_deinit()
{
  swift_weakDestroy();
  return swift_deallocClassInstance();
}

uint64_t CKStateMachineContainer.init()()
{
  uint64_t v0;

  swift_weakInit();
  return v0;
}

uint64_t CKStateMachineContainer.description.getter()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  _StringGuts.grow(_:)(43);
  swift_bridgeObjectRelease();
  v0._countAndFlagsBits = _typeName(_:qualified:)();
  String.append(_:)(v0);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_66_26();
  v1._countAndFlagsBits = _Pointer.debugDescription.getter();
  String.append(_:)(v1);
  swift_bridgeObjectRelease();
  v2._object = (void *)0x80000001BD68C110;
  v2._countAndFlagsBits = 0xD000000000000016;
  String.append(_:)(v2);
  return 0x4D65746174534B43;
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance CKStateMachineContainer<A>(uint64_t *a1, uint64_t *a2)
{
  return static CKStateMachineContainer.== infix(_:_:)(*a1, *a2);
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance CKStateMachineContainer<A>()
{
  return CKStateMachineContainer.description.getter();
}

uint64_t static CKStateMachineError.== infix(_:_:)()
{
  return 1;
}

void CKStateMachineError.hash(into:)()
{
  Hasher._combine(_:)(0);
  OUTLINED_FUNCTION_0();
}

Swift::Int CKStateMachineError.hashValue.getter()
{
  Hasher.init(_seed:)();
  Hasher._combine(_:)(0);
  return Hasher._finalize()();
}

uint64_t CKStateMachine.stateUpdates.getter()
{
  return swift_retain();
}

uint64_t CKStateMachine.stateTransitioner.getter()
{
  OUTLINED_FUNCTION_17_72();
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  return OUTLINED_FUNCTION_50();
}

uint64_t CKStateMachine.__allocating_init(initialState:logger:stateTransitioner:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;

  v8 = swift_allocObject();
  CKStateMachine.init(initialState:logger:stateTransitioner:)(a1, a2, a3, a4);
  return v8;
}

uint64_t *CKStateMachine.init(initialState:logger:stateTransitioner:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  void (*v25)(uint64_t, char *, uint64_t);
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  _BOOL4 v34;
  uint64_t v35;
  uint64_t v36;
  uint8_t *v37;
  char *v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t);
  _QWORD v42[2];
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58[9];

  v51 = a3;
  v5 = v4;
  v54 = a4;
  v56 = a2;
  v57 = a1;
  v6 = *v4;
  v7 = *(_QWORD *)(*v4 + 80);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](a1);
  v55 = (char *)v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(v6 + 88);
  v12 = type metadata accessor for CKStateMachine.StateUpdate(0, v7, v10, v11);
  v50 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v42 - v13;
  v15 = type metadata accessor for TaskPriority();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_78();
  v16 = *(_QWORD *)(v6 + 112);
  type metadata accessor for TaskQueue();
  static TaskPriority.userInitiated.getter();
  *(uint64_t *)((char *)v4 + v16) = TaskQueue.__allocating_init(priority:)();
  v17 = v8;
  v18 = (uint64_t)v5 + *(_QWORD *)(*v5 + 104);
  v47 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
  v47(v18, v57, v7);
  v19 = (uint64_t)v4 + direct field offset for CKStateMachine.logger;
  v20 = type metadata accessor for Logger();
  v53 = *(_QWORD *)(v20 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 16))(v19, v56, v20);
  v21 = (uint64_t *)((char *)v5 + *(_QWORD *)(*v5 + 128));
  v22 = v54;
  *v21 = v51;
  v21[1] = v22;
  type metadata accessor for CurrentValueSubject();
  v48 = v12;
  swift_storeEnumTagMultiPayload();
  swift_retain();
  v49 = v14;
  v23 = v55;
  *(uint64_t *)((char *)v5 + *(_QWORD *)(*v5 + 120)) = CurrentValueSubject.__allocating_init(_:)();
  CKStateMachine.currentState.getter();
  (*(void (**)(uint64_t, uint64_t))(v10 + 56))(v7, v10);
  swift_beginAccess();
  swift_weakAssign();
  swift_release();
  v24 = (uint64_t)v5 + *(_QWORD *)(*v5 + 104);
  OUTLINED_FUNCTION_24_61();
  v51 = v17;
  v25 = *(void (**)(uint64_t, char *, uint64_t))(v17 + 24);
  v25(v24, v23, v7);
  swift_endAccess();
  v26 = v52;
  (*(void (**)(uint64_t, uint64_t))(v10 + 72))(v7, v10);
  if (v26)
  {
    swift_release();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v56, v20);
    v27 = *(void (**)(uint64_t, uint64_t))(v51 + 8);
    v27(v57, v7);
    v27((uint64_t)v23, v7);
  }
  else
  {
    v45 = 0;
    v46 = v20;
    OUTLINED_FUNCTION_24_61();
    v52 = v7;
    v25(v24, v23, v7);
    v28 = swift_endAccess();
    v44 = CKStateMachine.description.getter(v28);
    v30 = v29;
    swift_bridgeObjectRetain();
    v31 = v56;
    v32 = Logger.logObject.getter();
    v33 = static os_log_type_t.default.getter();
    v43 = v33;
    v34 = os_log_type_enabled(v32, v33);
    v35 = v48;
    v36 = v53;
    if (v34)
    {
      v37 = (uint8_t *)swift_slowAlloc();
      v58[0] = swift_slowAlloc();
      *(_DWORD *)v37 = 136446210;
      v42[1] = v37 + 4;
      swift_bridgeObjectRetain();
      v58[8] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v44, v30, v58);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1BD004000, v32, (os_log_type_t)v43, "%{public}s) initialized, notifying observers with initial state.", v37, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_60();
    }
    swift_bridgeObjectRelease_n();

    v38 = v49;
    v39 = v52;
    v47((uint64_t)v49, v24, v52);
    swift_storeEnumTagMultiPayload();
    CurrentValueSubject.send(_:)();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v31, v46);
    v40 = *(void (**)(uint64_t, uint64_t))(v51 + 8);
    v40(v57, v39);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v38, v35);
    v40((uint64_t)v55, v39);
  }
  return v5;
}

uint64_t specialized closure #1 in CKStateMachine.transition(with:reason:validation:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;

  *(_QWORD *)(v8 + 584) = a8;
  *(_QWORD *)(v8 + 576) = a7;
  *(_QWORD *)(v8 + 568) = a6;
  *(_QWORD *)(v8 + 560) = a5;
  *(_BYTE *)(v8 + 73) = a4;
  *(_QWORD *)(v8 + 552) = a3;
  *(_QWORD *)(v8 + 544) = a2;
  *(_QWORD *)(v8 + 536) = a1;
  *(_QWORD *)(v8 + 512) = a2;
  *(_QWORD *)(v8 + 520) = a3;
  *(_BYTE *)(v8 + 528) = a4;
  if (one-time initialization token for shared != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t specialized closure #1 in CKStateMachine.transition(with:reason:validation:)()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  void (**v35)(uint64_t *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned __int8 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v57;
  uint64_t v58;
  unsigned __int8 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(uint64_t, uint64_t, uint64_t);
  uint64_t v73;
  __int128 v74;
  __int128 v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unsigned __int8 v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;
  uint64_t v102;
  void (*v103)(uint64_t *, uint64_t);
  uint64_t v104;
  uint64_t *v105;
  void (*v106)(uint64_t *);
  __int128 *v107;
  _QWORD *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;

  OUTLINED_FUNCTION_15_22();
  OUTLINED_FUNCTION_35_43();
  OUTLINED_FUNCTION_15_22();
  OUTLINED_FUNCTION_35_43();
  v1 = Logger.logObject.getter();
  v2 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_36_49(v1))
  {
    v102 = *(_QWORD *)(v0 + 560);
    v3 = *(_QWORD *)(v0 + 552);
    v4 = *(_QWORD *)(v0 + 544);
    v5 = *(_BYTE *)(v0 + 73);
    v6 = OUTLINED_FUNCTION_105();
    v110 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v6 = 136446722;
    v7 = specialized CKStateMachine.description.getter();
    v9 = v8;
    OUTLINED_FUNCTION_43();
    *(_QWORD *)(v0 + 16) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v7, v9, &v110);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_43();
    *(_WORD *)(v6 + 12) = 2082;
    CallScreening.StateTransition.description.getter(v4, v3, v5);
    v11 = v10;
    OUTLINED_FUNCTION_38_54();
    *(_QWORD *)(v0 + 16) = OUTLINED_FUNCTION_304(v11, v12, &v110);
    OUTLINED_FUNCTION_137_0();
    OUTLINED_FUNCTION_25();
    OUTLINED_FUNCTION_38_54();
    *(_WORD *)(v6 + 22) = 2082;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 16) = OUTLINED_FUNCTION_39_7(v102, v13, &v110);
    OUTLINED_FUNCTION_137_0();
    OUTLINED_FUNCTION_11_11();
    OUTLINED_FUNCTION_28_62(&dword_1BD004000, v1, v2, "%{public}s processing request to transition to %{public}s with reason: %{public}s", (uint8_t *)v6);
    OUTLINED_FUNCTION_23_31();
    OUTLINED_FUNCTION_60();
  }
  OUTLINED_FUNCTION_42_46();
  swift_release_n();

  OUTLINED_FUNCTION_42_46();
  OUTLINED_FUNCTION_19_1();
  v106 = *(void (**)(uint64_t *))(v0 + 576);
  v109 = v0;
  v14 = (uint64_t *)(*(_QWORD *)(v0 + 536) + *(_QWORD *)(**(_QWORD **)(v0 + 536) + 104));
  OUTLINED_FUNCTION_2_0();
  v15 = v14[1];
  v16 = v14[2];
  v17 = v14[3];
  v19 = v14[4];
  v18 = v14[5];
  v20 = v14[6];
  v110 = *v14;
  v111 = v15;
  v112 = v16;
  v113 = v17;
  v114 = v19;
  v115 = v18;
  v116 = v20;
  v21 = OUTLINED_FUNCTION_4_126();
  outlined copy of CallScreening.State(v21, v22, v23, v24, v25, v26, v27);
  v106(&v110);
  v104 = v0 + 512;
  v107 = (__int128 *)(v0 + 360);
  v28 = OUTLINED_FUNCTION_4_126();
  outlined consume of CallScreening.State(v28, v29, v30, v31, v32, v33, v34);
  OUTLINED_FUNCTION_17_72();
  v103 = *v35;
  v36 = v14[1];
  v37 = v14[2];
  v38 = v14[3];
  v39 = v14[4];
  v40 = v14[5];
  v41 = v14[6];
  v110 = *v14;
  v111 = v36;
  v112 = v37;
  v113 = v38;
  v114 = v39;
  v115 = v40;
  v116 = v41;
  v42 = OUTLINED_FUNCTION_5_117();
  outlined copy of CallScreening.State(v42, v43, v44, v45, v46, v47, v48);
  v103(&v110, v104);
  v105 = v14;
  v57 = OUTLINED_FUNCTION_5_117();
  outlined consume of CallScreening.State(v57, v58, v59, v60, v61, v62, v63);
  OUTLINED_FUNCTION_70_22(v107);
  CallScreening.State.stateTransition.getter();
  v65 = v64;
  static CallScreening.StateTransition.== infix(_:_:)(v66, v67, v64);
  v69 = v68;
  v70 = OUTLINED_FUNCTION_157();
  outlined consume of CallScreening.StateTransition(v70, v71, v65);
  if ((v69 & 1) != 0)
  {
    OUTLINED_FUNCTION_70_22((__int128 *)v14);
    outlined init with take of CallScreening.State((__int128 *)(v109 + 304), v109 + 248);
    OUTLINED_FUNCTION_54_36();
    OUTLINED_FUNCTION_33_53();
    v72 = *(void (**)(uint64_t, uint64_t, uint64_t))(v65 + 48);
    _s15ConversationKit13CallScreeningO5StateOWOrTm_0((_QWORD *)(v109 + 304), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined copy of CallScreening.State);
    v72(v109 + 192, v109 + 248, v65);
    __swift_destroy_boxed_opaque_existential_1(v39);
    v80 = *(_QWORD *)(v109 + 248);
    v81 = *(_QWORD *)(v109 + 256);
    v82 = *(_QWORD *)(v109 + 264);
    v83 = *(_QWORD *)(v109 + 272);
    v84 = *(_QWORD *)(v109 + 280);
    v85 = *(_QWORD *)(v109 + 288);
    v86 = *(_QWORD *)(v109 + 296);
    v87 = *v14;
    v88 = v14[1];
    v90 = v14[2];
    v89 = v14[3];
    v92 = v14[4];
    v91 = v14[5];
    v93 = v14[6];
    *v105 = v80;
    v105[1] = v81;
    v105[2] = v82;
    v105[3] = v83;
    v105[4] = v84;
    v105[5] = v85;
    v101 = v86 >> 61;
    v105[6] = v86;
    outlined copy of CallScreening.State(v80, v81, v82, v83, v84, v85, v86);
    outlined consume of CallScreening.State(v87, v88, v90, v89, v92, v91, v93);
    v94 = *v105;
    v95 = v105[1];
    v96 = v105[2];
    v97 = v105[3];
    v98 = v105[4];
    v99 = v105[5];
    v100 = v105[6];
    *(_QWORD *)(v109 + 24) = v95;
    *(_QWORD *)(v109 + 16) = v94;
    *(_QWORD *)(v109 + 32) = v96;
    *(_QWORD *)(v109 + 40) = v97;
    *(_QWORD *)(v109 + 48) = v98;
    *(_QWORD *)(v109 + 56) = v99;
    *(_QWORD *)(v109 + 64) = v100;
    *(_BYTE *)(v109 + 72) = 0;
    outlined copy of CallScreening.State(v94, v95, v96, v97, v98, v99, v100);
    CurrentValueSubject.send(_:)();
    outlined consume of CKStateMachine<CallScreening.State>.StateUpdate(*(_QWORD *)(v109 + 16), *(_QWORD *)(v109 + 24), *(_QWORD *)(v109 + 32), *(_QWORD *)(v109 + 40), *(_QWORD *)(v109 + 48), *(_QWORD *)(v109 + 56), *(_QWORD *)(v109 + 64), *(_BYTE *)(v109 + 72));
    __asm { BR              X9 }
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CKStateMachine<CallScreening.State>.Error);
  lazy protocol witness table accessor for type CKStateMachine<CallScreening.State>.Error and conformance CKStateMachine<A>.Error();
  OUTLINED_FUNCTION_10_8();
  v73 = *(_QWORD *)(v109 + 408);
  v74 = v107[1];
  v75 = v107[2];
  *(_OWORD *)v76 = *v107;
  *(_OWORD *)(v76 + 16) = v74;
  *(_OWORD *)(v76 + 32) = v75;
  *(_QWORD *)(v76 + 48) = v73;
  v77 = *(_QWORD *)(v109 + 512);
  v78 = *(_QWORD *)(v109 + 520);
  v79 = *(_BYTE *)(v109 + 528);
  *(_QWORD *)(v76 + 56) = v77;
  *(_QWORD *)(v76 + 64) = v78;
  *(_BYTE *)(v76 + 72) = v79;
  *(_BYTE *)(v76 + 73) = 2;
  outlined copy of CallScreening.StateTransition(v77, v78, v79);
  swift_willThrow();
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  OUTLINED_FUNCTION_13_12();
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  OUTLINED_FUNCTION_13_12();
  v49 = OUTLINED_FUNCTION_69_17();
  v50 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v49, v50))
  {
    v51 = OUTLINED_FUNCTION_105();
    v108 = (_QWORD *)OUTLINED_FUNCTION_105();
    v110 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v51 = 136446466;
    v52 = specialized CKStateMachine.description.getter();
    v54 = v53;
    OUTLINED_FUNCTION_43();
    *(_QWORD *)(v109 + 16) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v52, v54, &v110);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_43();
    *(_WORD *)(v51 + 12) = 2114;
    OUTLINED_FUNCTION_13_12();
    v55 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v109 + 16) = v55;
    OUTLINED_FUNCTION_137_0();
    *v108 = v55;
    OUTLINED_FUNCTION_3_10();
    OUTLINED_FUNCTION_3_10();
    OUTLINED_FUNCTION_21_80(&dword_1BD004000, v49, v50, "%{public}s) failed to enter state with Error: %{public}@");
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    OUTLINED_FUNCTION_14_22();
    OUTLINED_FUNCTION_60();
  }
  OUTLINED_FUNCTION_13_66();

  OUTLINED_FUNCTION_3_10();
  OUTLINED_FUNCTION_3_10();
  swift_willThrow();
  return (*(uint64_t (**)(void))(v109 + 8))();
}

uint64_t sub_1BD435A00()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_2_0();
  v1 = swift_weakAssign();
  return ((uint64_t (*)(uint64_t))((char *)sub_1BD435A64 + 4 * byte_1BD660036[*(_QWORD *)(v0 + 408) >> 61]))(v1);
}

void sub_1BD435A64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, _QWORD *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,__int128 *a21,uint64_t a22,__int128 *a23,uint64_t *a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  __int128 *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;

  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_50();
  swift_weakAssign();
  OUTLINED_FUNCTION_70_22(v28);
  v31 = a24[1];
  v68 = *a24;
  v32 = a24[2];
  v33 = a24[3];
  v34 = a24[5];
  v65 = a24[4];
  v35 = a24[6];
  outlined init with take of CallScreening.State(a21, (uint64_t)a24);
  _s15ConversationKit13CallScreeningO5StateOWOrTm_0(a21, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined copy of CallScreening.State);
  outlined consume of CallScreening.State(v68, v31, v32, v33, v65, v34, v35);
  OUTLINED_FUNCTION_54_36();
  OUTLINED_FUNCTION_33_53();
  (*(void (**)(uint64_t, uint64_t))(v33 + 56))(v31, v33);
  if (a22)
  {
    __swift_destroy_boxed_opaque_existential_1(v35);
    OUTLINED_FUNCTION_8_100();
    OUTLINED_FUNCTION_7_111();
    JUMPOUT(0x1BD4355FCLL);
  }
  __swift_destroy_boxed_opaque_existential_1(v35);
  v36 = v29[45];
  v37 = v29[46];
  v38 = v29[47];
  v39 = v29[48];
  v40 = v29[49];
  v41 = v29[50];
  v42 = v29[51];
  v43 = *a24;
  v44 = a24[1];
  v46 = a24[2];
  v45 = a24[3];
  v47 = a24[4];
  v66 = a24[6];
  v67 = a24[5];
  *a24 = v36;
  a24[1] = v37;
  a24[2] = v38;
  a24[3] = v39;
  a24[4] = v40;
  a24[5] = v41;
  a24[6] = v42;
  outlined copy of CallScreening.State(v36, v37, v38, v39, v40, v41, v42);
  outlined consume of CallScreening.State(v43, v44, v46, v45, v47, v67, v66);
  swift_retain();
  v48 = OUTLINED_FUNCTION_69_17();
  v49 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v48, v49))
  {
    v50 = OUTLINED_FUNCTION_105();
    *(_QWORD *)(v30 - 144) = OUTLINED_FUNCTION_105();
    *(_DWORD *)v50 = 136446466;
    v51 = specialized CKStateMachine.description.getter();
    v53 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v51, v52, (uint64_t *)(v30 - 144));
    OUTLINED_FUNCTION_20_74(v53);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_43();
    *(_WORD *)(v50 + 12) = 2082;
    OUTLINED_FUNCTION_2_0();
    outlined init with take of CallScreening.State(a23, (uint64_t)a14);
    _s15ConversationKit13CallScreeningO5StateOWOrTm_0(a14, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined copy of CallScreening.State);
    CallScreening.State.description.getter();
    _s15ConversationKit13CallScreeningO5StateOWOrTm_0(a14, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined consume of CallScreening.State);
    v54 = OUTLINED_FUNCTION_157();
    v57 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v54, v55, v56);
    OUTLINED_FUNCTION_20_74(v57);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_21_80(&dword_1BD004000, v48, v49, "%{public}s updated its state from %{public}s, notifying observers.");
    swift_arrayDestroy();
    OUTLINED_FUNCTION_60();
  }

  OUTLINED_FUNCTION_43();
  v58 = *a24;
  v59 = a24[1];
  v60 = a24[2];
  v61 = a24[3];
  v62 = a24[4];
  v63 = a24[5];
  v64 = a24[6];
  *(_QWORD *)(a28 + 16) = *a24;
  *(_QWORD *)(a28 + 24) = v59;
  *(_QWORD *)(a28 + 32) = v60;
  *(_QWORD *)(a28 + 40) = v61;
  *(_QWORD *)(a28 + 48) = v62;
  *(_QWORD *)(a28 + 56) = v63;
  *(_QWORD *)(a28 + 64) = v64;
  *(_BYTE *)(a28 + 72) = 1;
  outlined copy of CallScreening.State(v58, v59, v60, v61, v62, v63, v64);
  CurrentValueSubject.send(_:)();
  outlined consume of CKStateMachine<CallScreening.State>.StateUpdate(*(_QWORD *)(a28 + 16), *(_QWORD *)(a28 + 24), *(_QWORD *)(a28 + 32), *(_QWORD *)(a28 + 40), *(_QWORD *)(a28 + 48), *(_QWORD *)(a28 + 56), *(_QWORD *)(a28 + 64), *(_BYTE *)(a28 + 72));
  OUTLINED_FUNCTION_8_100();
  OUTLINED_FUNCTION_7_111();
  JUMPOUT(0x1BD43577CLL);
}

uint64_t closure #1 in CKStateMachine.transition(with:reason:validation:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;

  v6[31] = a5;
  v6[32] = a6;
  v6[29] = a3;
  v6[30] = a4;
  v6[27] = a1;
  v6[28] = a2;
  v7 = *a1;
  v8 = *(_QWORD *)(*a1 + 80);
  v6[33] = v8;
  v9 = *(_QWORD *)(v7 + 88);
  v6[34] = v9;
  v10 = type metadata accessor for CKStateMachine.StateUpdate(0, v8, v9, a4);
  v6[35] = v10;
  v6[36] = *(_QWORD *)(v10 - 8);
  v6[37] = swift_task_alloc();
  v6[38] = *(_QWORD *)(v8 - 8);
  v6[39] = swift_task_alloc();
  v6[40] = swift_task_alloc();
  v6[41] = swift_task_alloc();
  v6[42] = swift_task_alloc();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6[43] = AssociatedTypeWitness;
  v6[44] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6[45] = swift_task_alloc();
  v6[46] = swift_task_alloc();
  if (one-time initialization token for shared != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t closure #1 in CKStateMachine.transition(with:reason:validation:)()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  void (*v3)(uint64_t, uint64_t, uint64_t);
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  void (*v17)(uint64_t);
  uint64_t v18;
  uint64_t v19;
  void (**v20)(uint64_t, uint64_t);
  void (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t (*v48)(void);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(uint64_t, uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(uint64_t, uint64_t);
  uint64_t v74;
  void (*v75)(uint64_t, uint64_t, uint64_t);
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  os_log_type_t v80;
  uint64_t v81;
  NSObject *v82;
  void (*v83)(uint64_t, uint64_t);
  void (*v84)(uint64_t, uint64_t, uint64_t);
  _QWORD *v85;
  uint64_t v86;
  void (*v87)(uint64_t, uint64_t);
  uint64_t v88;
  uint64_t v89;
  uint64_t *v90;
  uint64_t v91[2];

  v1 = v0;
  v2 = v0 + 27;
  v90 = v0 + 22;
  v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0[44] + 16);
  v3(v0[46], v0[28], v0[43]);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  v4 = OUTLINED_FUNCTION_69_17();
  v5 = static os_log_type_t.default.getter();
  v84 = v3;
  if (OUTLINED_FUNCTION_36_49(v4))
  {
    v6 = v0[45];
    v70 = v0[46];
    v82 = v4;
    v7 = v0[43];
    v76 = v0[30];
    v78 = v0[29];
    v80 = v5;
    v8 = OUTLINED_FUNCTION_105();
    v79 = OUTLINED_FUNCTION_105();
    v91[0] = v79;
    *(_DWORD *)v8 = 136446722;
    v9 = CKStateMachine.description.getter(v79);
    v11 = v10;
    OUTLINED_FUNCTION_43();
    v1[24] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v9, v11, v91);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_43();
    *(_WORD *)(v8 + 12) = 2082;
    v3(v6, v70, v7);
    OUTLINED_FUNCTION_57_17();
    swift_getAssociatedConformanceWitness();
    v12 = dispatch thunk of CustomStringConvertible.description.getter();
    v14 = v13;
    OUTLINED_FUNCTION_57_17();
    v1[25] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v12, v14, v91);
    OUTLINED_FUNCTION_50_37();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 22) = 2082;
    swift_bridgeObjectRetain();
    v1[26] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v78, v76, v91);
    OUTLINED_FUNCTION_137_0();
    OUTLINED_FUNCTION_11_11();
    OUTLINED_FUNCTION_28_62(&dword_1BD004000, v82, v80, "%{public}s processing request to transition to %{public}s with reason: %{public}s", (uint8_t *)v8);
    OUTLINED_FUNCTION_23_31();
    OUTLINED_FUNCTION_60();
  }
  v15 = *(void (**)(uint64_t, uint64_t))(v0[44] + 8);
  v15(v0[46], v0[43]);
  swift_release_n();

  OUTLINED_FUNCTION_19_1();
  v16 = v0[42];
  v17 = (void (*)(uint64_t))v1[31];
  CKStateMachine.currentState.getter();
  v17(v16);
  v87 = v15;
  v18 = v1[40];
  v19 = v1[28];
  v83 = *(void (**)(uint64_t, uint64_t))(v1[38] + 8);
  v83(v1[42], v1[33]);
  OUTLINED_FUNCTION_17_72();
  v21 = *v20;
  CKStateMachine.currentState.getter();
  v21(v18, v19);
  v22 = v1[45];
  v23 = v1[43];
  v25 = v1[33];
  v24 = v1[34];
  v83(v1[40], v25);
  (*(void (**)(uint64_t, uint64_t))(v24 + 48))(v25, v24);
  swift_getAssociatedConformanceWitness();
  v26 = dispatch thunk of static Equatable.== infix(_:_:)();
  v87(v22, v23);
  v28 = v1[33];
  v29 = v1[34];
  if ((v26 & 1) != 0)
  {
    v30 = v1[41];
    CKStateMachine.currentState.getter();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 64))(v30, v28, v29);
    v31 = v1[39];
    v50 = v1[37];
    v51 = v1[38];
    v71 = v1[35];
    v72 = v1[36];
    v52 = v1[33];
    v74 = v1[34];
    v53 = v1[27] + *(_QWORD *)(*(_QWORD *)v1[27] + 104);
    v77 = v1[41];
    OUTLINED_FUNCTION_2_0();
    v75 = *(void (**)(uint64_t, uint64_t, uint64_t))(v51 + 24);
    v86 = v53;
    v75(v53, v31, v52);
    swift_endAccess();
    v69 = *(void (**)(uint64_t, uint64_t, uint64_t))(v51 + 16);
    v69(v50, v53, v52);
    swift_storeEnumTagMultiPayload();
    CurrentValueSubject.send(_:)();
    v73 = *(void (**)(uint64_t, uint64_t))(v72 + 8);
    v73(v50, v71);
    OUTLINED_FUNCTION_44_48();
    OUTLINED_FUNCTION_2_0();
    swift_weakAssign();
    OUTLINED_FUNCTION_43();
    OUTLINED_FUNCTION_44_48();
    OUTLINED_FUNCTION_2_0();
    swift_weakAssign();
    OUTLINED_FUNCTION_43();
    OUTLINED_FUNCTION_2_0();
    v75(v53, v77, v52);
    swift_endAccess();
    (*(void (**)(uint64_t, uint64_t))(v74 + 72))(v52, v74);
    v54 = v1[41];
    v55 = v1[33];
    OUTLINED_FUNCTION_2_0();
    v75(v53, v54, v55);
    swift_endAccess();
    OUTLINED_FUNCTION_15_22();
    v56 = Logger.logObject.getter();
    v57 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v56, v57))
    {
      v58 = OUTLINED_FUNCTION_105();
      v59 = OUTLINED_FUNCTION_105();
      v91[0] = v59;
      *(_DWORD *)v58 = 136446466;
      v60 = CKStateMachine.description.getter(v59);
      v1[21] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v60, v61, v91);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_25();
      OUTLINED_FUNCTION_43();
      *(_WORD *)(v58 + 12) = 2082;
      OUTLINED_FUNCTION_2_0();
      v62 = dispatch thunk of CustomStringConvertible.description.getter();
      v1[23] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v62, v63, v91);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_21_80(&dword_1BD004000, v56, v57, "%{public}s updated its state from %{public}s, notifying observers.");
      swift_arrayDestroy();
      OUTLINED_FUNCTION_60();
    }

    OUTLINED_FUNCTION_43();
    v64 = v1[41];
    v65 = v1[39];
    v66 = v1[37];
    v67 = v1[35];
    v68 = v1[33];
    v69(v66, v86, v68);
    swift_storeEnumTagMultiPayload();
    CurrentValueSubject.send(_:)();
    v73(v66, v67);
    v83(v64, v68);
    v83(v65, v68);
    OUTLINED_FUNCTION_12();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v48 = (uint64_t (*)(void))v1[1];
  }
  else
  {
    v32 = v1[43];
    v33 = v1[41];
    v81 = v1[38];
    v88 = v1[28];
    v34 = type metadata accessor for CKStateMachine.Error(0, v28, v29, v27);
    MEMORY[0x1C3B750C8](&protocol conformance descriptor for CKStateMachine<A>.Error, v34);
    OUTLINED_FUNCTION_10_8();
    v36 = v35;
    v37 = v35 + *(int *)(swift_getTupleTypeMetadata2() + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v81 + 16))(v36, v33, v28);
    v84(v37, v88, v32);
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    v38 = OUTLINED_FUNCTION_157();
    v83(v38, v39);
    partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
    OUTLINED_FUNCTION_12_80();
    partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
    OUTLINED_FUNCTION_12_80();
    v40 = OUTLINED_FUNCTION_69_17();
    v41 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v40, v41))
    {
      v42 = v2 - 7;
      v43 = OUTLINED_FUNCTION_105();
      v85 = (_QWORD *)OUTLINED_FUNCTION_105();
      v89 = OUTLINED_FUNCTION_105();
      v91[0] = v89;
      *(_DWORD *)v43 = 136446466;
      v44 = CKStateMachine.description.getter(v89);
      v46 = v45;
      OUTLINED_FUNCTION_43();
      *v42 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v44, v46, v91);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_43();
      *(_WORD *)(v43 + 12) = 2114;
      OUTLINED_FUNCTION_12_80();
      v47 = _swift_stdlib_bridgeErrorToNSError();
      *v90 = v47;
      OUTLINED_FUNCTION_137_0();
      *v85 = v47;
      OUTLINED_FUNCTION_4_108();
      OUTLINED_FUNCTION_4_108();
      _os_log_impl(&dword_1BD004000, v40, v41, "%{public}s) failed to enter state with Error: %{public}@", (uint8_t *)v43, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
      OUTLINED_FUNCTION_14_22();
      OUTLINED_FUNCTION_60();
    }
    OUTLINED_FUNCTION_13_66();

    OUTLINED_FUNCTION_4_108();
    OUTLINED_FUNCTION_4_108();
    swift_willThrow();
    OUTLINED_FUNCTION_29_0();
    swift_task_dealloc();
    OUTLINED_FUNCTION_12();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v48 = (uint64_t (*)(void))v1[1];
  }
  return v48();
}

uint64_t thunk for @escaping @callee_guaranteed @async () -> (@error @owned Error)(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v5 = (uint64_t (*)(void))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v3;
  *v3 = v2;
  v3[1] = partial apply for closure #1 in VideoMessageInboxController.updateCallItems();
  return v5();
}

uint64_t *CKStateMachine.deinit()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = (uint64_t)v0 + direct field offset for CKStateMachine.logger;
  v3 = OUTLINED_FUNCTION_17_2();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 104));
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_17_72();
  swift_release();
  return v0;
}

uint64_t CKStateMachine.__deallocating_deinit()
{
  CKStateMachine.deinit();
  return swift_deallocClassInstance();
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance CKStateMachine<A>(uint64_t a1)
{
  return CKStateMachine.description.getter(a1);
}

uint64_t CKStateMachine.StateUpdate.description.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  unint64_t v7;

  v2 = *(_QWORD *)(*(_QWORD *)(a1 + 16) - 8);
  MEMORY[0x1E0C80A78](a1);
  OUTLINED_FUNCTION_4_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_78();
  (*(void (**)(uint64_t))(v4 + 16))(v1);
  OUTLINED_FUNCTION_157();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    OUTLINED_FUNCTION_26_60();
    v6 = 0x20676E6974697845;
    goto LABEL_5;
  }
  if (EnumCaseMultiPayload == 1)
  {
    OUTLINED_FUNCTION_26_60();
    v6 = 0x2064657265746E45;
LABEL_5:
    v7 = 0xE800000000000000;
    String.append(_:)(*(Swift::String *)&v6);
    OUTLINED_FUNCTION_56_37();
    OUTLINED_FUNCTION_4_30(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  }
  return OUTLINED_FUNCTION_157();
}

uint64_t sub_1BD436BD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = OUTLINED_FUNCTION_23_70();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();
  swift_release();
  OUTLINED_FUNCTION_157();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in CKStateMachine.transition(with:reason:validation:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = OUTLINED_FUNCTION_23_70();
  v3 = (uint64_t *)(v0
                 + ((((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64)
                     + ((*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80))
                     + 7) & 0xFFFFFFFFFFFFFFF8)
                   + 23) & 0xFFFFFFFFFFFFFFF8));
  v4 = *v3;
  v5 = v3[1];
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = partial apply for closure #1 in VideoMessageInboxController.updateCallItems();
  v7 = (uint64_t *)OUTLINED_FUNCTION_32_47();
  return closure #1 in CKStateMachine.transition(with:reason:validation:)(v7, v8, v9, v10, v4, v5);
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed @async () -> (@error @owned Error)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_7_19(v1);
  return OUTLINED_FUNCTION_2_21(v2, v3, v4, v5);
}

uint64_t type metadata accessor for CKStateMachine.StateUpdate(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CKStateMachine.StateUpdate);
}

uint64_t type metadata accessor for CKStateMachineActor.ActorType()
{
  return objc_opt_self();
}

void sub_1BD436DE8(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 104))();
  OUTLINED_FUNCTION_0();
}

uint64_t sub_1BD436E18()
{
  return 16;
}

__n128 sub_1BD436E24(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

void type metadata accessor for CKStateMachineActor()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t method lookup function for CKStateMachineActor.ActorType()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CKStateMachineActor.ActorType.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t type metadata completion function for CKStateMachineContainer()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for CKStateMachineContainer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CKStateMachineContainer);
}

uint64_t method lookup function for CKStateMachineContainer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CKStateMachineContainer.stateMachine.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of CKStateMachineContainer.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of CKStateMachineState.stateTransition.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of CKStateMachineState.stateMachineContainer.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of CKStateMachineState.willExit(to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of CKStateMachineState.enteringState()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t storeEnumTagSinglePayload for CKStateMachineError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BD436F3C + 4 * byte_1BD66003C[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BD436F5C + 4 * byte_1BD660041[v4]))();
}

_BYTE *sub_1BD436F3C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BD436F5C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BD436F64(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BD436F6C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BD436F74(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BD436F7C(_DWORD *result)
{
  *result = 0;
  return result;
}

void type metadata accessor for CKStateMachineError()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t type metadata completion function for CKStateMachine()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for Logger();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      result = swift_initClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for CKStateMachine(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CKStateMachine);
}

uint64_t method lookup function for CKStateMachine()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CKStateMachine.__allocating_init(initialState:logger:stateTransitioner:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t type metadata completion function for CKStateMachine.StateUpdate()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for CKStateMachine.StateUpdate(uint64_t *__dst, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;

  v3 = __dst;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = *(_DWORD *)(v4 + 80);
  if (v6 <= 7 && (unint64_t)(v5 + 1) <= 0x18 && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    v10 = *((unsigned __int8 *)a2 + v5);
    if (v10 >= 2)
    {
      if (v5 <= 3)
        v11 = v5;
      else
        v11 = 4;
      __asm { BR              X14 }
    }
    if (v10 == 1)
    {
      (*(void (**)(uint64_t *))(v4 + 16))(__dst);
      *((_BYTE *)v3 + v5) = 1;
    }
    else
    {
      (*(void (**)(uint64_t *))(v4 + 16))(__dst);
      *((_BYTE *)v3 + v5) = 0;
    }
  }
  else
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v9 + ((v6 + 16) & ~v6));
    swift_retain();
  }
  return v3;
}

uint64_t destroy for CKStateMachine.StateUpdate(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v3 = *(_QWORD *)(v2 + 64);
  if (*(unsigned __int8 *)(a1 + v3) < 2u)
    return (*(uint64_t (**)(void))(v2 + 8))();
  if (v3 <= 3)
    v4 = v3;
  else
    v4 = 4;
  return ((uint64_t (*)(void))((char *)&loc_1BD43722C + 4 * byte_1BD66004B[v4]))();
}

_BYTE *initializeWithCopy for CKStateMachine.StateUpdate(_BYTE *__dst, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = *(unsigned __int8 *)(a2 + v5);
  if (v6 >= 2)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  if (v6 == 1)
  {
    (*(void (**)(_BYTE *))(v4 + 16))(__dst);
    __dst[v5] = 1;
  }
  else
  {
    (*(void (**)(_BYTE *))(v4 + 16))(__dst);
    __dst[v5] = 0;
  }
  return __dst;
}

unsigned __int8 *assignWithCopy for CKStateMachine.StateUpdate(unsigned __int8 *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;

  if (__dst != __src)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    v7 = *(_QWORD *)(v6 + 64);
    if (__dst[v7] >= 2u)
    {
      if (v7 <= 3)
        v8 = v7;
      else
        v8 = 4;
      __asm { BR              X12 }
    }
    (*(void (**)(unsigned __int8 *, _QWORD))(v6 + 8))(__dst, *(_QWORD *)(a3 + 16));
    v9 = __src[v7];
    if (v9 >= 2)
    {
      if (v7 <= 3)
        v10 = v7;
      else
        v10 = 4;
      __asm { BR              X12 }
    }
    if (v9 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(__dst, __src, v5);
      __dst[v7] = 1;
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(__dst, __src, v5);
      __dst[v7] = 0;
    }
  }
  return __dst;
}

_BYTE *initializeWithTake for CKStateMachine.StateUpdate(_BYTE *__dst, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = *(unsigned __int8 *)(a2 + v5);
  if (v6 >= 2)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  if (v6 == 1)
  {
    (*(void (**)(_BYTE *))(v4 + 32))(__dst);
    __dst[v5] = 1;
  }
  else
  {
    (*(void (**)(_BYTE *))(v4 + 32))(__dst);
    __dst[v5] = 0;
  }
  return __dst;
}

unsigned __int8 *assignWithTake for CKStateMachine.StateUpdate(unsigned __int8 *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;

  if (__dst != __src)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    v7 = *(_QWORD *)(v6 + 64);
    if (__dst[v7] >= 2u)
    {
      if (v7 <= 3)
        v8 = v7;
      else
        v8 = 4;
      __asm { BR              X12 }
    }
    (*(void (**)(unsigned __int8 *, _QWORD))(v6 + 8))(__dst, *(_QWORD *)(a3 + 16));
    v9 = __src[v7];
    if (v9 >= 2)
    {
      if (v7 <= 3)
        v10 = v7;
      else
        v10 = 4;
      __asm { BR              X12 }
    }
    if (v9 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(__dst, __src, v5);
      __dst[v7] = 1;
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(__dst, __src, v5);
      __dst[v7] = 0;
    }
  }
  return __dst;
}

uint64_t getEnumTagSinglePayload for CKStateMachine.StateUpdate(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  int v6;
  unsigned int v8;
  int v9;
  unsigned int v10;

  if (!a2)
    return 0;
  v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (a2 < 0xFE)
    goto LABEL_19;
  v4 = v3 + 1;
  v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    v8 = ((a2 + ~(-1 << v5) - 253) >> v5) + 1;
    if (HIWORD(v8))
    {
      v6 = *(_DWORD *)(a1 + v4);
      if (!v6)
        goto LABEL_19;
      goto LABEL_12;
    }
    if (v8 > 0xFF)
    {
      v6 = *(unsigned __int16 *)(a1 + v4);
      if (!*(_WORD *)(a1 + v4))
        goto LABEL_19;
      goto LABEL_12;
    }
    if (v8 < 2)
    {
LABEL_19:
      v10 = *(unsigned __int8 *)(a1 + v3);
      if (v10 >= 3)
        return (v10 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v6 = *(unsigned __int8 *)(a1 + v4);
  if (!*(_BYTE *)(a1 + v4))
    goto LABEL_19;
LABEL_12:
  v9 = (v6 - 1) << v5;
  if (v4 > 3)
    v9 = 0;
  if (!(_DWORD)v4)
    return (v9 + 254);
  if (v4 > 3)
    LODWORD(v4) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1BD437820 + 4 * byte_1BD66006E[(v4 - 1)]))();
}

void storeEnumTagSinglePayload for CKStateMachine.StateUpdate(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  size_t v6;
  char v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64);
  v6 = v5 + 1;
  v7 = 8 * (v5 + 1);
  if (a3 < 0xFE)
  {
    v8 = 0u;
  }
  else if (v6 <= 3)
  {
    v10 = ((a3 + ~(-1 << v7) - 253) >> v7) + 1;
    if (HIWORD(v10))
    {
      v8 = 4u;
    }
    else if (v10 >= 0x100)
    {
      v8 = 2;
    }
    else
    {
      v8 = v10 > 1;
    }
  }
  else
  {
    v8 = 1u;
  }
  if (a2 <= 0xFD)
    __asm { BR              X11 }
  v9 = a2 - 254;
  if (v6 < 4)
  {
    if ((_DWORD)v5 != -1)
    {
      v11 = v9 & ~(-1 << v7);
      bzero(a1, v6);
      if ((_DWORD)v6 == 3)
      {
        *a1 = v11;
        *((_BYTE *)a1 + 2) = BYTE2(v11);
      }
      else if ((_DWORD)v6 == 2)
      {
        *a1 = v11;
      }
      else
      {
        *(_BYTE *)a1 = v11;
      }
    }
  }
  else
  {
    bzero(a1, v5 + 1);
    *(_DWORD *)a1 = v9;
  }
  __asm { BR              X10 }
}

uint64_t getEnumTag for CKStateMachine.StateUpdate(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64);
  if (*(unsigned __int8 *)(a1 + v2) < 2u)
    return *(unsigned __int8 *)(a1 + v2);
  if (v2 <= 3)
    v3 = v2;
  else
    v3 = 4;
  return ((uint64_t (*)(void))((char *)&loc_1BD437A40 + 4 * byte_1BD66007C[v3]))();
}

void destructiveInjectEnumTag for CKStateMachine.StateUpdate(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  size_t v4;
  unsigned int v5;
  unsigned int v6;
  int v7;

  v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (a2 > 1)
  {
    v5 = a2 - 2;
    if (v4 < 4)
    {
      v6 = v5 >> (8 * v4);
      v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 2;
      bzero(a1, v4);
      if ((_DWORD)v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if ((_DWORD)v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 2;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

uint64_t type metadata completion function for CKStateMachine.Error()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t AssociatedTypeWitness;
  unint64_t v3;
  char v5;
  void *v6;
  void *v7;
  char *v8;

  v6 = &unk_1BD6603D0;
  v7 = &unk_1BD6603E8;
  v0 = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    if (v3 > 0x3F)
    {
      return AssociatedTypeWitness;
    }
    else
    {
      swift_getTupleTypeLayout2();
      v8 = &v5;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return v0;
}

uint64_t *initializeBufferWithCopyOfBuffer for CKStateMachine.Error(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int v14;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = v10;
  v12 = v7 + v10;
  if ((v12 & ~(unint64_t)v10) + *(_QWORD *)(v9 + 64) <= 0x30)
    v13 = 48;
  else
    v13 = (v12 & ~(unint64_t)v10) + *(_QWORD *)(v9 + 64);
  v14 = *(_DWORD *)(v6 + 80) | v10;
  if ((v14 & 0x1000F8) != 0 || v13 + 1 > 0x18)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + (((v14 & 0xF8 | 7u) + 16) & ~(unint64_t)(v14 & 0xF8 | 7u)));
    swift_retain();
  }
  else
  {
    v17 = AssociatedTypeWitness;
    v18 = *((unsigned __int8 *)a2 + v13);
    if (v18 >= 3)
    {
      if (v13 <= 3)
        v19 = v13;
      else
        v19 = 4;
      __asm { BR              X13 }
    }
    if (v18 == 2)
    {
      v21 = ~v11;
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16))(((unint64_t)a1 + v12) & v21, ((unint64_t)a2 + v12) & v21, v17);
      *((_BYTE *)a1 + v13) = 2;
    }
    else
    {
      if (v18 == 1)
      {
        v22 = a2[3];
        a1[3] = v22;
        (**(void (***)(uint64_t *, uint64_t *))(v22 - 8))(a1, a2);
        v23 = a2[5];
        a1[4] = a2[4];
        a1[5] = v23;
        *((_BYTE *)a1 + v13) = 1;
      }
      else
      {
        v20 = a2[1];
        *a1 = *a2;
        a1[1] = v20;
        *((_BYTE *)a1 + v13) = 0;
      }
      swift_bridgeObjectRetain();
    }
  }
  return a1;
}

uint64_t destroy for CKStateMachine.Error(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = v5 + v8;
  v10 = (v9 & ~v8) + *(_QWORD *)(v7 + 64);
  if (v10 <= 0x30)
    v10 = 48;
  v11 = *(unsigned __int8 *)(a1 + v10);
  if (v11 >= 3)
  {
    if (v10 <= 3)
      v12 = v10;
    else
      v12 = 4;
    __asm { BR              X14 }
  }
  if (v11 == 2)
  {
    v13 = ~v8;
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))((v9 + a1) & v13, AssociatedTypeWitness);
  }
  else
  {
    if (v11 == 1)
      __swift_destroy_boxed_opaque_existential_1(a1);
    return swift_bridgeObjectRelease();
  }
}

_QWORD *initializeWithCopy for CKStateMachine.Error(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v7 + v10;
  if (((v7 + v10) & (unint64_t)~v10) + *(_QWORD *)(v9 + 64) <= 0x30)
    v12 = 48;
  else
    v12 = ((v7 + v10) & ~v10) + *(_QWORD *)(v9 + 64);
  v13 = *((unsigned __int8 *)a2 + v12);
  if (v13 >= 3)
  {
    if (v12 <= 3)
      v14 = v12;
    else
      v14 = 4;
    __asm { BR              X13 }
  }
  if (v13 == 2)
  {
    v16 = ~v10;
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16))(((unint64_t)a1 + v11) & v16, ((unint64_t)a2 + v11) & v16, AssociatedTypeWitness);
    *((_BYTE *)a1 + v12) = 2;
  }
  else
  {
    if (v13 == 1)
    {
      v17 = a2[3];
      a1[3] = v17;
      (**(void (***)(_QWORD *, _QWORD *))(v17 - 8))(a1, a2);
      v18 = a2[5];
      a1[4] = a2[4];
      a1[5] = v18;
      *((_BYTE *)a1 + v12) = 1;
    }
    else
    {
      v15 = a2[1];
      *a1 = *a2;
      a1[1] = v15;
      *((_BYTE *)a1 + v12) = 0;
    }
    swift_bridgeObjectRetain();
  }
  return a1;
}

_QWORD *assignWithCopy for CKStateMachine.Error(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    v7 = *(_QWORD *)(v6 + 64);
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = v7 + v10;
    if (((v7 + v10) & (unint64_t)~v10) + *(_QWORD *)(v9 + 64) <= 0x30)
      v12 = 48;
    else
      v12 = ((v7 + v10) & ~v10) + *(_QWORD *)(v9 + 64);
    v13 = *((unsigned __int8 *)a1 + v12);
    if (v13 >= 3)
    {
      if (v12 <= 3)
        v14 = v12;
      else
        v14 = 4;
      __asm { BR              X13 }
    }
    v15 = ~v10;
    if (v13 == 2)
    {
      (*(void (**)(_QWORD *, uint64_t))(v6 + 8))(a1, v5);
      (*(void (**)(unint64_t, uint64_t))(v9 + 8))(((unint64_t)a1 + v11) & v15, AssociatedTypeWitness);
    }
    else
    {
      if (v13 == 1)
        __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      swift_bridgeObjectRelease();
    }
    v16 = *((unsigned __int8 *)a2 + v12);
    if (v16 >= 3)
    {
      if (v12 <= 3)
        v17 = v12;
      else
        v17 = 4;
      __asm { BR              X12 }
    }
    if (v16 == 2)
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16))(((unint64_t)a1 + v11) & v15, ((unint64_t)a2 + v11) & v15, AssociatedTypeWitness);
      *((_BYTE *)a1 + v12) = 2;
    }
    else
    {
      if (v16 == 1)
      {
        v18 = a2[3];
        a1[3] = v18;
        (**(void (***)(_QWORD *, _QWORD *))(v18 - 8))(a1, a2);
        a1[4] = a2[4];
        a1[5] = a2[5];
        *((_BYTE *)a1 + v12) = 1;
      }
      else
      {
        *a1 = *a2;
        a1[1] = a2[1];
        *((_BYTE *)a1 + v12) = 0;
      }
      swift_bridgeObjectRetain();
    }
  }
  return a1;
}

_OWORD *initializeWithTake for CKStateMachine.Error(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  __int128 v17;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v7 + v10;
  if (((v7 + v10) & (unint64_t)~v10) + *(_QWORD *)(v9 + 64) <= 0x30)
    v12 = 48;
  else
    v12 = ((v7 + v10) & ~v10) + *(_QWORD *)(v9 + 64);
  v13 = *((unsigned __int8 *)a2 + v12);
  if (v13 >= 3)
  {
    if (v12 <= 3)
      v14 = v12;
    else
      v14 = 4;
    __asm { BR              X13 }
  }
  if (v13 == 2)
  {
    v15 = ~v10;
    (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v6 + 32))(a1, a2, v5);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 32))(((unint64_t)a1 + v11) & v15, ((unint64_t)a2 + v11) & v15, AssociatedTypeWitness);
    v16 = 2;
LABEL_14:
    *((_BYTE *)a1 + v12) = v16;
    return a1;
  }
  if (v13 == 1)
  {
    v17 = a2[1];
    *a1 = *a2;
    a1[1] = v17;
    a1[2] = a2[2];
    v16 = 1;
    goto LABEL_14;
  }
  *a1 = *a2;
  *((_BYTE *)a1 + v12) = 0;
  return a1;
}

_OWORD *assignWithTake for CKStateMachine.Error(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;
  char v18;
  __int128 v19;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    v7 = *(_QWORD *)(v6 + 64);
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = v7 + v10;
    if (((v7 + v10) & (unint64_t)~v10) + *(_QWORD *)(v9 + 64) <= 0x30)
      v12 = 48;
    else
      v12 = ((v7 + v10) & ~v10) + *(_QWORD *)(v9 + 64);
    v13 = *((unsigned __int8 *)a1 + v12);
    if (v13 >= 3)
    {
      if (v12 <= 3)
        v14 = v12;
      else
        v14 = 4;
      __asm { BR              X13 }
    }
    v15 = ~v10;
    if (v13 == 2)
    {
      (*(void (**)(_OWORD *, uint64_t))(v6 + 8))(a1, v5);
      (*(void (**)(unint64_t, uint64_t))(v9 + 8))(((unint64_t)a1 + v11) & v15, AssociatedTypeWitness);
    }
    else
    {
      if (v13 == 1)
        __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      swift_bridgeObjectRelease();
    }
    v16 = *((unsigned __int8 *)a2 + v12);
    if (v16 >= 3)
    {
      if (v12 <= 3)
        v17 = v12;
      else
        v17 = 4;
      __asm { BR              X12 }
    }
    if (v16 == 2)
    {
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v6 + 32))(a1, a2, v5);
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 32))(((unint64_t)a1 + v11) & v15, ((unint64_t)a2 + v11) & v15, AssociatedTypeWitness);
      v18 = 2;
    }
    else
    {
      if (v16 != 1)
      {
        *a1 = *a2;
        *((_BYTE *)a1 + v12) = 0;
        return a1;
      }
      v19 = a2[1];
      *a1 = *a2;
      a1[1] = v19;
      a1[2] = a2[2];
      v18 = 1;
    }
    *((_BYTE *)a1 + v12) = v18;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for CKStateMachine.Error(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  unint64_t v7;
  unint64_t v8;
  char v9;
  int v10;
  unsigned int v12;
  int v13;
  unsigned int v14;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = 48;
  if (((v5 + *(unsigned __int8 *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 80))
     + *(_QWORD *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 64) > 0x30)
    v7 = ((v5 + *(unsigned __int8 *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 80))
       + *(_QWORD *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 64);
  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_21;
  v8 = v7 + 1;
  v9 = 8 * (v7 + 1);
  if ((v7 + 1) <= 3)
  {
    v12 = ((a2 + ~(-1 << v9) - 252) >> v9) + 1;
    if (HIWORD(v12))
    {
      v10 = *(_DWORD *)(a1 + v8);
      if (!v10)
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v12 > 0xFF)
    {
      v10 = *(unsigned __int16 *)(a1 + v8);
      if (!*(_WORD *)(a1 + v8))
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v12 < 2)
    {
LABEL_21:
      v14 = *(unsigned __int8 *)(a1 + v7);
      if (v14 >= 4)
        return (v14 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v10 = *(unsigned __int8 *)(a1 + v8);
  if (!*(_BYTE *)(a1 + v8))
    goto LABEL_21;
LABEL_14:
  v13 = (v10 - 1) << v9;
  if (v8 > 3)
    v13 = 0;
  if ((_DWORD)v8)
  {
    if (v8 > 3)
      LODWORD(v8) = 4;
    __asm { BR              X11 }
  }
  return (v13 + 253);
}

void storeEnumTagSinglePayload for CKStateMachine.Error(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  unint64_t v9;
  size_t v10;
  char v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;

  v7 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = ((v7 + *(unsigned __int8 *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 80))
     + *(_QWORD *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 64);
  if (v9 <= 0x30)
    v9 = 48;
  v10 = v9 + 1;
  v11 = 8 * (v9 + 1);
  if (a3 < 0xFD)
  {
    v12 = 0u;
  }
  else if (v10 <= 3)
  {
    v14 = ((a3 + ~(-1 << v11) - 252) >> v11) + 1;
    if (HIWORD(v14))
    {
      v12 = 4u;
    }
    else if (v14 >= 0x100)
    {
      v12 = 2;
    }
    else
    {
      v12 = v14 > 1;
    }
  }
  else
  {
    v12 = 1u;
  }
  if (a2 <= 0xFC)
    __asm { BR              X11 }
  v13 = a2 - 253;
  if (v10 < 4)
  {
    if ((_DWORD)v9 != -1)
    {
      v15 = v13 & ~(-1 << v11);
      bzero(a1, v10);
      if ((_DWORD)v10 == 3)
      {
        *(_WORD *)a1 = v15;
        a1[2] = BYTE2(v15);
      }
      else if ((_DWORD)v10 == 2)
      {
        *(_WORD *)a1 = v15;
      }
      else
      {
        *a1 = v15;
      }
    }
  }
  else
  {
    bzero(a1, v9 + 1);
    *(_DWORD *)a1 = v13;
  }
  __asm { BR              X10 }
}

uint64_t getEnumTag for CKStateMachine.Error(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  unint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = ((v3 + *(unsigned __int8 *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 80))
     + *(_QWORD *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 64);
  if (v5 <= 0x30)
    v5 = 48;
  result = *(unsigned __int8 *)(a1 + v5);
  if (result >= 3)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X12 }
  }
  return result;
}

void destructiveInjectEnumTag for CKStateMachine.Error(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  size_t v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  if (((v5 + *(unsigned __int8 *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 80))
     + *(_QWORD *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 64) <= 0x30)
    v7 = 48;
  else
    v7 = ((v5 + *(unsigned __int8 *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 80))
       + *(_QWORD *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 64);
  if (a2 > 2)
  {
    v8 = a2 - 3;
    if (v7 < 4)
    {
      v9 = v8 >> (8 * v7);
      v10 = v8 & ~(-1 << (8 * v7));
      a1[v7] = v9 + 3;
      bzero(a1, v7);
      if ((_DWORD)v7 == 3)
      {
        *(_WORD *)a1 = v10;
        a1[2] = BYTE2(v10);
      }
      else if ((_DWORD)v7 == 2)
      {
        *(_WORD *)a1 = v10;
      }
      else
      {
        *a1 = v10;
      }
    }
    else
    {
      a1[v7] = 3;
      bzero(a1, v7);
      *(_DWORD *)a1 = v8;
    }
  }
  else
  {
    a1[v7] = a2;
  }
}

uint64_t type metadata accessor for CKStateMachine.Error(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CKStateMachine.Error);
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@guaranteed CallScreening.State) -> (@error @owned Error)(__int128 *a1)
{
  uint64_t v1;

  return thunk for @escaping @callee_guaranteed (@guaranteed CallScreening.State) -> (@error @owned Error)(a1, *(uint64_t (**)(_BYTE *))(v1 + 16));
}

uint64_t specialized closure #1 in CKStateMachine.transition(with:reason:validation:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD *v15;

  v12 = *(_QWORD *)a2;
  v13 = *(_QWORD *)(a2 + 8);
  v14 = *(_BYTE *)(a2 + 16);
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v15;
  *v15 = v6;
  v15[1] = partial apply for closure #2 in CallScreeningEndingState.enteredState();
  return specialized closure #1 in CKStateMachine.transition(with:reason:validation:)(a1, v12, v13, v14, a3, a4, a5, a6);
}

uint64_t sub_1BD438D5C()
{
  uint64_t v0;

  swift_release();
  outlined consume of CallScreening.StateTransition(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

__n128 *outlined init with take of CallScreening.StateTransition(__n128 *a1, __n128 *a2)
{
  __swift_memcpy17_8(a2, a1);
  return a2;
}

uint64_t partial apply for specialized closure #1 in CKStateMachine.transition(with:reason:validation:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = partial apply for closure #2 in CallScreeningEndingState.enteredState();
  v2 = OUTLINED_FUNCTION_32_47();
  return v3(v2);
}

uint64_t sub_1BD438E58()
{
  swift_release();
  return swift_deallocObject();
}

void _s15ConversationKit13CallScreeningO5StateOWOrTm_0(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6]);
  OUTLINED_FUNCTION_0();
}

uint64_t *PlatformDisplayLink.shared.unsafeMutableAddressor()
{
  if (one-time initialization token for shared != -1)
    swift_once();
  return &static PlatformDisplayLink.shared;
}

void PlatformDisplayLink.add(observer:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_4_127();
  v0 = OUTLINED_FUNCTION_14_8();
  specialized PlatformDisplayLink.add(observer:)(v0, v1, v2, v3);
}

void PlatformDisplayLink.remove(observer:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_4_127();
  v0 = OUTLINED_FUNCTION_14_8();
  specialized PlatformDisplayLink.remove(observer:)(v0, v1, v2, v3);
}

uint64_t DisplayLinkCallbackWrapper.displayLinkCallback(_:)(uint64_t result)
{
  uint64_t v1;
  void (*v2)(id);
  void *v3;

  v2 = *(void (**)(id))(v1 + 16);
  if (v2)
  {
    v3 = (void *)result;
    swift_retain();
    v2(objc_msgSend(v3, sel_preferredFramesPerSecond));
    return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v2);
  }
  return result;
}

uint64_t DisplayLinkCallbackWrapper.__deallocating_deinit()
{
  uint64_t v0;

  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(*(_QWORD *)(v0 + 16));
  return swift_deallocClassInstance();
}

uint64_t PlatformDisplayLink.__allocating_init()()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_15();
  PlatformDisplayLink.init()();
  return v0;
}

uint64_t static PlatformDisplayLink.shared.getter()
{
  if (one-time initialization token for shared != -1)
    swift_once();
  return swift_retain();
}

void PlatformDisplayLink.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v0 + 32) = MEMORY[0x1E0DEE9D8];
  *(_BYTE *)(v0 + 40) = 0;
  PlatformDisplayLinkBase.init()();
  v1 = *(_QWORD *)(v0 + 16);
  v2 = OUTLINED_FUNCTION_15();
  swift_weakInit();
  v3 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v1 + 16) = partial apply for closure #1 in PlatformDisplayLink.init();
  *(_QWORD *)(v1 + 24) = v2;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v3);
  OUTLINED_FUNCTION_18();
}

uint64_t PlatformDisplayLinkBase.init()()
{
  uint64_t v0;
  uint64_t v1;

  type metadata accessor for DisplayLinkCallbackWrapper();
  v1 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 24) = 0;
  *(_QWORD *)(v0 + 16) = v1;
  *(_QWORD *)(v0 + 24) = 0;
  return v0;
}

uint64_t closure #1 in PlatformDisplayLink.init()(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  _QWORD v9[2];

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v3 = result;
    swift_beginAccess();
    v4 = *(_QWORD *)(v3 + 32);
    swift_bridgeObjectRetain();
    swift_release();
    v5 = *(_QWORD *)(v4 + 16);
    if (v5)
    {
      v6 = v4 + 32;
      swift_bridgeObjectRetain();
      do
      {
        outlined init with copy of WeakPlatformDisplayLinkObserver(v6, (uint64_t)v9);
        if (MEMORY[0x1C3B752C0](v9))
        {
          v7 = v9[1];
          ObjectType = swift_getObjectType();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 8))(a1, ObjectType, v7);
          swift_unknownObjectRelease();
        }
        outlined destroy of WeakPlatformDisplayLinkObserver((uint64_t)v9);
        v6 += 16;
        --v5;
      }
      while (v5);
      return swift_bridgeObjectRelease_n();
    }
    else
    {
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

void PlatformDisplayLink.startIfNecessary()()
{
  uint64_t v0;

  OUTLINED_FUNCTION_1_134();
  if (*(_QWORD *)(*(_QWORD *)(v0 + 32) + 16))
  {
    if ((*(_BYTE *)(v0 + 40) & 1) == 0)
    {
      *(_BYTE *)(v0 + 40) = 1;
      PlatformDisplayLinkBase.start()();
    }
  }
}

uint64_t closure #2 in PlatformDisplayLink.remove(observer:)(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;

  result = MEMORY[0x1C3B752C0]();
  if (result)
  {
    v4 = result;
    swift_unknownObjectRelease();
    return v4 == a2;
  }
  return result;
}

void PlatformDisplayLink.cancelIfNecessary()()
{
  uint64_t v0;

  OUTLINED_FUNCTION_1_134();
  if (!*(_QWORD *)(*(_QWORD *)(v0 + 32) + 16) && *(_BYTE *)(v0 + 40) == 1)
  {
    *(_BYTE *)(v0 + 40) = 0;
    PlatformDisplayLinkBase.cancel()();
  }
}

uint64_t PlatformDisplayLink.__ivar_destroyer()
{
  return swift_bridgeObjectRelease();
}

uint64_t PlatformDisplayLink.deinit()
{
  uint64_t v0;

  PlatformDisplayLinkBase.deinit();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t PlatformDisplayLinkBase.deinit()
{
  uint64_t v0;

  swift_release();

  return v0;
}

uint64_t PlatformDisplayLink.__deallocating_deinit()
{
  PlatformDisplayLinkBase.deinit();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

void PlatformDisplayLinkBase.displayLink.getter()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  id v5;

  v1 = *(void **)(v0 + 24);
  if (!v1)
  {
    v2 = closure #1 in PlatformDisplayLinkBase.displayLink.getter(v0);
    v3 = *(void **)(v0 + 24);
    *(_QWORD *)(v0 + 24) = v2;
    v4 = v2;

    v1 = 0;
  }
  v5 = v1;
  OUTLINED_FUNCTION_18();
}

void PlatformDisplayLinkBase.start()()
{
  PlatformDisplayLinkBase.start()((SEL *)&selRef_addToRunLoop_forMode_);
}

void PlatformDisplayLinkBase.cancel()()
{
  PlatformDisplayLinkBase.start()((SEL *)&selRef_removeFromRunLoop_forMode_);
}

void PlatformDisplayLinkBase.start()(SEL *a1)
{
  void *v2;
  void *v3;
  id v4;

  PlatformDisplayLinkBase.displayLink.getter();
  v3 = v2;
  v4 = objc_msgSend((id)objc_opt_self(), sel_currentRunLoop);
  objc_msgSend(v3, *a1, v4, *MEMORY[0x1E0C99748]);

}

id closure #1 in PlatformDisplayLinkBase.displayLink.getter(uint64_t a1)
{
  uint64_t v2;
  id v3;
  _QWORD v5[4];

  _sSo8NSObjectCMaTm_0(0, &lazy cache variable for type metadata for CADisplayLink);
  v2 = *(_QWORD *)(a1 + 16);
  v5[3] = type metadata accessor for DisplayLinkCallbackWrapper();
  v5[0] = v2;
  swift_retain();
  v3 = @nonobjc CADisplayLink.__allocating_init(target:selector:)(v5, (uint64_t)sel_displayLinkCallback_);
  objc_msgSend(v3, sel_setPreferredFramesPerSecond_, 24, v5[0]);
  return v3;
}

id @nonobjc CADisplayLink.__allocating_init(target:selector:)(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  id v5;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v4 = _bridgeAnythingToObjectiveC<A>(_:)();
  v5 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_displayLinkWithTarget_selector_, v4, a2);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v5;
}

uint64_t PlatformDisplayLinkBase.__deallocating_deinit()
{
  PlatformDisplayLinkBase.deinit();
  return swift_deallocClassInstance();
}

uint64_t PlatformDisplayLinkBase.__allocating_init()()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_15();
  PlatformDisplayLinkBase.init()();
  return v0;
}

void specialized PlatformDisplayLink.remove(observer:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v35;
  uint64_t v36;
  _BYTE v37[24];
  __int128 v38;
  _BYTE v39[16];

  v7 = type metadata accessor for DispatchPredicate();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (uint64_t *)&v37[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v10 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DEF740], v7);
  v11 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v8 + 8))(v10, v7);
  if ((v11 & 1) == 0)
  {
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  v12 = (uint64_t *)(a2 + 32);
  swift_beginAccess();
  v13 = *(_QWORD *)(a2 + 32);
  v14 = *(_QWORD *)(v13 + 16);
  if (v14)
  {
    v15 = v13 + 32;
    swift_bridgeObjectRetain_n();
    while (1)
    {
      outlined init with copy of WeakPlatformDisplayLinkObserver(v15, (uint64_t)v39);
      v16 = MEMORY[0x1C3B752C0](v39);
      if (v16)
      {
        v17 = v16;
        swift_unknownObjectRelease();
        if (v17 == a1)
          break;
      }
      outlined destroy of WeakPlatformDisplayLinkObserver((uint64_t)v39);
      v15 += 16;
      if (!--v14)
      {
        swift_bridgeObjectRelease();
        goto LABEL_9;
      }
    }
    swift_bridgeObjectRelease();
    outlined init with take of WeakPlatformDisplayLinkObserver((uint64_t)v39, (uint64_t)&v38);
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_9:
    v38 = xmmword_1BD6491B0;
  }
  swift_bridgeObjectRelease();
  v18 = v38;
  v19 = outlined destroy of WeakPlatformDisplayLinkObserver?((uint64_t)&v38);
  if (v18 != __PAIR128__(1, 0))
  {
    MEMORY[0x1E0C80A78](v19);
    *(&v36 - 2) = a1;
    *(&v36 - 1) = a4;
    swift_beginAccess();
    specialized MutableCollection._halfStablePartition(isSuffixElement:)(partial apply for closure #2 in PlatformDisplayLink.remove(observer:));
    if (*(_QWORD *)(*v12 + 16) >= v20)
    {
      specialized Array.replaceSubrange<A>(_:with:)();
      v21 = *v12;
      v22 = *(_QWORD *)(*v12 + 16);
      if (v22)
      {
        swift_bridgeObjectRetain();
        v23 = 0;
        v24 = 48;
        while (1)
        {
          outlined init with copy of WeakPlatformDisplayLinkObserver(v21 + v24 - 16, (uint64_t)v39);
          v25 = MEMORY[0x1C3B752C0](v39);
          swift_unknownObjectRelease();
          outlined destroy of WeakPlatformDisplayLinkObserver((uint64_t)v39);
          if (!v25)
            break;
          ++v23;
          v24 += 16;
          if (v22 == v23)
          {
            swift_bridgeObjectRelease();
            v26 = *(_QWORD *)(*v12 + 16);
            v23 = v22;
            goto LABEL_21;
          }
        }
        swift_bridgeObjectRelease();
        v26 = v23 + 1;
        if (__OFADD__(v23, 1))
          goto LABEL_51;
        v27 = *v12;
        v28 = *(_QWORD *)(*v12 + 16);
        if (v26 != v28)
        {
          v29 = v23 + 1;
          while (v29 < v28)
          {
            outlined init with copy of WeakPlatformDisplayLinkObserver(v27 + v24, (uint64_t)v39);
            v30 = MEMORY[0x1C3B752C0](v39);
            swift_unknownObjectRelease();
            outlined destroy of WeakPlatformDisplayLinkObserver((uint64_t)v39);
            if (v30)
            {
              if (v29 != v23)
              {
                if ((v23 & 0x8000000000000000) != 0)
                  goto LABEL_44;
                v31 = *v12;
                v32 = *(_QWORD *)(*v12 + 16);
                if (v23 >= v32)
                  goto LABEL_45;
                outlined init with copy of WeakPlatformDisplayLinkObserver(v31 + 16 * v23 + 32, (uint64_t)v39);
                if (v29 >= v32)
                  goto LABEL_46;
                outlined init with copy of WeakPlatformDisplayLinkObserver(v31 + v24, (uint64_t)v37);
                isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                *v12 = v31;
                if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                {
                  specialized _ArrayBuffer._consumeAndCreateNew()();
                  v31 = v35;
                  *v12 = v35;
                }
                if (v23 >= *(_QWORD *)(v31 + 16))
                  goto LABEL_47;
                outlined assign with take of WeakPlatformDisplayLinkObserver((uint64_t)v37, v31 + 16 * v23 + 32);
                if (v29 >= *(_QWORD *)(*v12 + 16))
                  goto LABEL_48;
                outlined assign with take of WeakPlatformDisplayLinkObserver((uint64_t)v39, *v12 + v24);
              }
              if (__OFADD__(v23++, 1))
                goto LABEL_42;
            }
            v26 = v29 + 1;
            if (__OFADD__(v29, 1))
              goto LABEL_41;
            v27 = *v12;
            v28 = *(_QWORD *)(*v12 + 16);
            ++v29;
            v24 += 16;
            if (v26 == v28)
              goto LABEL_21;
          }
          __break(1u);
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          goto LABEL_43;
        }
LABEL_21:
        if (v26 < (uint64_t)v23)
          goto LABEL_50;
      }
      specialized Array.replaceSubrange<A>(_:with:)();
      swift_endAccess();
      PlatformDisplayLink.cancelIfNecessary()();
      return;
    }
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
  }
}

void specialized PlatformDisplayLink.add(observer:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  _BYTE v22[16];

  v7 = type metadata accessor for DispatchPredicate();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (uint64_t *)&v22[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v10 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DEF740], v7);
  v11 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v8 + 8))(v10, v7);
  if ((v11 & 1) != 0)
  {
    swift_beginAccess();
    v12 = *(_QWORD *)(a2 + 32);
    v13 = *(_QWORD *)(v12 + 16);
    if (v13)
    {
      v14 = v12 + 32;
      swift_bridgeObjectRetain_n();
      while (1)
      {
        outlined init with copy of WeakPlatformDisplayLinkObserver(v14, (uint64_t)v22);
        v15 = MEMORY[0x1C3B752C0](v22);
        if (v15)
        {
          v16 = v15;
          swift_unknownObjectRelease();
          if (v16 == a1)
            break;
        }
        outlined destroy of WeakPlatformDisplayLinkObserver((uint64_t)v22);
        v14 += 16;
        if (!--v13)
        {
          swift_bridgeObjectRelease();
          goto LABEL_9;
        }
      }
      swift_bridgeObjectRelease();
      outlined init with take of WeakPlatformDisplayLinkObserver((uint64_t)v22, (uint64_t)&v21);
    }
    else
    {
      swift_bridgeObjectRetain();
LABEL_9:
      v21 = xmmword_1BD6491B0;
    }
    swift_bridgeObjectRelease();
    v17 = v21;
    outlined destroy of WeakPlatformDisplayLinkObserver?((uint64_t)&v21);
    if (v17 == __PAIR128__(1, 0))
    {
      *((_QWORD *)&v21 + 1) = 0;
      swift_unknownObjectWeakInit();
      *((_QWORD *)&v21 + 1) = a4;
      v18 = swift_unknownObjectWeakAssign();
      outlined init with take of WeakPlatformDisplayLinkObserver(v18, (uint64_t)v22);
      swift_beginAccess();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      v19 = *(_QWORD *)(*(_QWORD *)(a2 + 32) + 16);
      specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(v19);
      v20 = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(v20 + 16) = v19 + 1;
      outlined init with take of WeakPlatformDisplayLinkObserver((uint64_t)v22, v20 + 16 * v19 + 32);
      swift_endAccess();
      PlatformDisplayLink.startIfNecessary()();
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1BD439BC0()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in PlatformDisplayLink.init()(uint64_t a1)
{
  return closure #1 in PlatformDisplayLink.init()(a1);
}

uint64_t type metadata accessor for DisplayLinkCallbackWrapper()
{
  return objc_opt_self();
}

uint64_t dispatch thunk of PlatformDisplayLinkObserver.displayLinkCallback(framesPerSecond:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t type metadata accessor for PlatformDisplayLink()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for PlatformDisplayLinkBase()
{
  return objc_opt_self();
}

uint64_t method lookup function for PlatformDisplayLinkBase()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PlatformDisplayLinkBase.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

ValueMetadata *type metadata accessor for WeakPlatformDisplayLinkObserver()
{
  return &type metadata for WeakPlatformDisplayLinkObserver;
}

_QWORD *specialized AnsweringConditionTimer.init(logger:timeToWaitForCall:callIsScreenable:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;

  v11 = direct field offset for AnsweringConditionTimer.timer;
  type metadata accessor for AsyncCancellableTimer();
  v12 = swift_allocObject();
  swift_defaultActor_initialize();
  *(_QWORD *)((char *)v5 + v11) = v12;
  *(_QWORD *)(v12 + 112) = 0;
  v5[4] = a2;
  v5[5] = a3;
  v13 = (char *)v5 + direct field offset for AnsweringConditionTimer.logger;
  v14 = type metadata accessor for Logger();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v13, a1, v14);
  v5[2] = a4;
  v5[3] = a5;
  return v5;
}

uint64_t specialized AnsweringConditionTimer.shouldAnswer@Sendable (_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[9] = a2;
  v3[10] = v2;
  v3[8] = a1;
  v3[2] = a1;
  v3[3] = a2;
  type metadata accessor for MainActor();
  v3[11] = static MainActor.shared.getter();
  v3[12] = dispatch thunk of Actor.unownedExecutor.getter();
  v3[13] = v4;
  return swift_task_switch();
}

uint64_t specialized AnsweringConditionTimer.shouldAnswer@Sendable (_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  BOOL v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  BOOL v19;
  unint64_t v20;
  uint64_t v21;
  uint8_t *v22;
  _QWORD *v23;
  uint64_t v25;
  uint64_t v26[2];

  v2 = *(_QWORD *)(v0 + 72);
  v1 = *(_QWORD *)(v0 + 80);
  v26[0] = *(_QWORD *)(v0 + 64);
  v26[1] = v2;
  if (((*(uint64_t (**)(uint64_t *))(v1 + 16))(v26) & 1) != 0)
  {
    v3 = *(_QWORD *)(v0 + 72);
    v4 = *(_QWORD *)(v0 + 80);
    v5 = (*(uint64_t (**)(uint64_t))(v4 + 32))(v0 + 16);
    v7 = v6;
    v8 = direct field offset for AnsweringConditionTimer.logger;
    *(_QWORD *)(v0 + 112) = direct field offset for AnsweringConditionTimer.logger;
    v9 = (v4 + v8);
    swift_bridgeObjectRetain_n();
    Logger.logObject.getter();
    v10 = OUTLINED_FUNCTION_12_0();
    v11 = OUTLINED_FUNCTION_23_5(v10);
    v12 = *(_QWORD *)(v0 + 72);
    if (v11)
    {
      v25 = *(_QWORD *)(v0 + 64);
      v13 = OUTLINED_FUNCTION_105();
      v26[0] = OUTLINED_FUNCTION_105();
      *(_DWORD *)v13 = 136446466;
      v14 = Duration.description.getter();
      *(_QWORD *)(v0 + 48) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v14, v15, v26);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v13 + 12) = 2082;
      *(_QWORD *)(v0 + 56) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v25, v12, v26);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_19_1();
      _os_log_impl(&dword_1BD004000, v9, (os_log_type_t)v3, "Should Answer timer started with timeToWait %{public}s for: %{public}s", (uint8_t *)v13, 0x16u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_60();
    }
    OUTLINED_FUNCTION_19_1();

    v23 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 120) = v23;
    OUTLINED_FUNCTION_30_9(v23, (uint64_t)specialized AnsweringConditionTimer.shouldAnswer@Sendable (_:));
    return AsyncCancellableTimer.wait(with:)(v5, v7);
  }
  else
  {
    v16 = *(_QWORD *)(v0 + 80);
    swift_release();
    v17 = (v16 + direct field offset for AnsweringConditionTimer.logger);
    swift_bridgeObjectRetain();
    Logger.logObject.getter();
    v18 = OUTLINED_FUNCTION_12_0();
    v19 = os_log_type_enabled(v17, v18);
    v20 = *(_QWORD *)(v0 + 72);
    if (v19)
    {
      v21 = *(_QWORD *)(v0 + 64);
      v22 = (uint8_t *)OUTLINED_FUNCTION_105();
      v26[0] = OUTLINED_FUNCTION_105();
      *(_DWORD *)v22 = 136446210;
      *(_QWORD *)(v0 + 32) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v21, v20, v26);
      OUTLINED_FUNCTION_42_36();
      OUTLINED_FUNCTION_30_4();
      OUTLINED_FUNCTION_48(&dword_1BD004000, v17, v18, "Should Answer timer returning early as NO for: %{public}s because we can no longer screen the call.", v22);
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_60();
    }

    OUTLINED_FUNCTION_30_4();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;

  v4 = *v1;
  v2 = v4;
  OUTLINED_FUNCTION_24_4(&v4);
  *(_QWORD *)(v2 + 128) = v0;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_0_6();
}

{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t specialized AnsweringConditionTimer.shouldAnswer@Sendable (_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, _QWORD *a20,uint64_t a21,uint64_t a22)
{
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  unint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  OUTLINED_FUNCTION_32_8();
  a21 = v23;
  a22 = v24;
  a20 = v22;
  swift_release();
  v25 = static Task<>.isCancelled.getter();
  v27 = v22[2];
  v26 = v22[3];
  if ((v25 & 1) != 0)
  {
    v28 = (v22[10] + v22[14]);
    swift_bridgeObjectRetain();
    Logger.logObject.getter();
    v29 = OUTLINED_FUNCTION_12_0();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)OUTLINED_FUNCTION_105();
      a10 = OUTLINED_FUNCTION_105();
      *(_DWORD *)v30 = 136446210;
      v22[5] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v27, v26, &a10);
      OUTLINED_FUNCTION_42_36();
      OUTLINED_FUNCTION_13_3();
      OUTLINED_FUNCTION_48(&dword_1BD004000, v28, v29, "Should Answer timer canceled for: %{public}s", v30);
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_60();
    }

    OUTLINED_FUNCTION_13_3();
  }
  else
  {
    v31 = v22[10];
    a10 = v22[2];
    a11 = v26;
    (*(void (**)(uint64_t *))(v31 + 16))(&a10);
  }
  OUTLINED_FUNCTION_121_1();
  return v33(v32, v33, v34, v35, v36, v37, v38, v39, a9, a10, a11, a12, a13, a14);
}

uint64_t specialized DelayedAnsweringMachine.init(isAnsweringMachineAvailable:makeAnsweringMachine:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  void (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  *(_OWORD *)(v4 + 16) = 0u;
  *(_OWORD *)(v4 + 32) = 0u;
  *(_QWORD *)(v4 + 48) = a1;
  *(_QWORD *)(v4 + 56) = a2;
  v7 = *(void (**)(uint64_t))(*(_QWORD *)v4 + 128);
  v8 = swift_retain();
  v7(v8);
  v9 = swift_allocObject();
  swift_weakInit();
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = v9;
  v10[3] = a3;
  v10[4] = a4;
  swift_retain();
  swift_retain();
  dispatch thunk of TaskQueue.async(_:)();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v4;
}

uint64_t specialized closure #1 in DelayedAnsweringMachine.init(isAnsweringMachineAvailable:makeAnsweringMachine:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[6] = a2;
  v3[7] = a3;
  v3[5] = a1;
  if (one-time initialization token for shared != -1)
    swift_once();
  v3[8] = static CallScreeningActor.shared;
  return swift_task_switch();
}

uint64_t specialized closure #1 in DelayedAnsweringMachine.init(isAnsweringMachineAvailable:makeAnsweringMachine:)()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t (*v2)(void);
  _QWORD *v3;
  uint64_t (*v5)(void);

  OUTLINED_FUNCTION_2_0();
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 72) = Strong;
  if (!Strong)
    return OUTLINED_FUNCTION_16(*(uint64_t (**)(void))(v0 + 8));
  OUTLINED_FUNCTION_73_22(*(_QWORD *)(v0 + 48));
  v5 = v2;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v3;
  *v3 = v0;
  v3[1] = specialized closure #1 in DelayedAnsweringMachine.init(isAnsweringMachineAvailable:makeAnsweringMachine:);
  return OUTLINED_FUNCTION_16(v5);
}

{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_45_2();
  *(_QWORD *)(v1 + 88) = v0;
  OUTLINED_FUNCTION_37_20();
  OUTLINED_FUNCTION_78_19();
  return OUTLINED_FUNCTION_4_4();
}

{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)(v0 + 72) + 24) = *(_QWORD *)(v0 + 88);
  swift_release();
  OUTLINED_FUNCTION_43();
  return OUTLINED_FUNCTION_16(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t *AnsweringMachineComposer.shared.unsafeMutableAddressor()
{
  return &static AnsweringMachineComposer.shared;
}

uint64_t specialized AnsweringMachineTrackingServiceAdapter.init(logger:answeringMachine:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v5 = (_QWORD *)(v2 + direct field offset for AnsweringMachineTrackingServiceAdapter.onResult);
  *v5 = 0;
  v5[1] = 0;
  v6 = (_QWORD *)(v2 + direct field offset for AnsweringMachineTrackingServiceAdapter.currentTrackedCallTask);
  *v6 = 0;
  v6[1] = 0;
  v6[2] = 0;
  v7 = v2 + direct field offset for AnsweringMachineTrackingServiceAdapter.logger;
  v8 = type metadata accessor for Logger();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v7, a1, v8);
  *(_QWORD *)(v2 + direct field offset for AnsweringMachineTrackingServiceAdapter.answeringMachine) = a2;
  return v2;
}

void specialized CKStateMachine.init(initialState:logger:stateTransitioner:)(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  __int128 *v14;
  uint64_t v15;
  __int128 v16[3];
  _BYTE v17[24];

  v5 = v4;
  v10 = type metadata accessor for TaskPriority();
  MEMORY[0x1E0C80A78](v10);
  v11 = *(_QWORD *)(*(_QWORD *)v4 + 112);
  type metadata accessor for TaskQueue();
  static TaskPriority.userInitiated.getter();
  *(_QWORD *)(v4 + v11) = TaskQueue.__allocating_init(priority:)();
  outlined init with take of CallScreening.State(a1, v5 + *(_QWORD *)(*(_QWORD *)v5 + 104));
  v12 = v4 + direct field offset for CKStateMachine.logger;
  v15 = type metadata accessor for Logger();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v12, a2);
  v13 = (_QWORD *)(v5 + *(_QWORD *)(*(_QWORD *)v5 + 128));
  *v13 = a3;
  v13[1] = a4;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CurrentValueSubject<CKStateMachine<CallScreening.State>.StateUpdate, Never>);
  swift_allocObject();
  swift_retain();
  _s15ConversationKit13CallScreeningO5StateOWOrTm_0(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined copy of CallScreening.State);
  *(_QWORD *)(v5 + *(_QWORD *)(*(_QWORD *)v5 + 120)) = CurrentValueSubject.init(_:)();
  v14 = (__int128 *)(v5 + *(_QWORD *)(*(_QWORD *)v5 + 104));
  swift_beginAccess();
  outlined init with take of CallScreening.State(v14, (uint64_t)v16);
  outlined init with take of CallScreening.State(v16, (uint64_t)v17);
  __asm { BR              X11 }
}

uint64_t sub_1BD43A848@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;

  *(_QWORD *)(v3 - 96) = a1 & 0x1FFFFFFFFFFFFFFFLL;
  swift_beginAccess();
  swift_weakAssign();
  v4 = *v2;
  v5 = v2[1];
  v6 = v2[2];
  v7 = v2[3];
  *(_QWORD *)(v3 - 336) = v1;
  v9 = v2[4];
  v8 = v2[5];
  v10 = v2[6];
  outlined init with take of CallScreening.State((__int128 *)(v3 - 200), (uint64_t)v2);
  _s15ConversationKit13CallScreeningO5StateOWOrTm_0((_QWORD *)(v3 - 200), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined copy of CallScreening.State);
  _s15ConversationKit13CallScreeningO5StateOWOrTm_0((_QWORD *)(v3 - 200), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined copy of CallScreening.State);
  outlined consume of CallScreening.State(v4, v5, v6, v7, v9, v8, v10);
  CallScreening.State.state.getter();
  v11 = *(_QWORD *)(v3 - 248);
  v12 = *(_QWORD *)(v3 - 240);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v3 - 272), v11);
  v13 = *(_QWORD *)(v3 - 376);
  (*(void (**)(uint64_t, uint64_t))(v12 + 56))(v11, v12);
  v14 = v3 - 272;
  if (v13)
  {
    __swift_destroy_boxed_opaque_existential_1(v14);
    v15 = *(_QWORD *)(v3 - 336);
    swift_release();
    swift_release();
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v3 - 368) + 8))(*(_QWORD *)(v3 - 328), *(_QWORD *)(v3 - 360));
    _s15ConversationKit13CallScreeningO5StateOWOrTm_0(*(_QWORD **)(v3 - 344), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined consume of CallScreening.State);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1(v14);
    v16 = *v2;
    v17 = v2[1];
    v18 = v2[2];
    v19 = v2[3];
    v20 = v2[4];
    v21 = v2[5];
    v22 = v2[6];
    outlined init with take of CallScreening.State((__int128 *)(v3 - 200), (uint64_t)v2);
    _s15ConversationKit13CallScreeningO5StateOWOrTm_0((_QWORD *)(v3 - 200), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined copy of CallScreening.State);
    outlined consume of CallScreening.State(v16, v17, v18, v19, v20, v21, v22);
    v15 = *(_QWORD *)(v3 - 336);
    v23 = specialized CKStateMachine.description.getter();
    v25 = v24;
    swift_bridgeObjectRetain();
    v26 = Logger.logObject.getter();
    v27 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc();
      v29 = v23;
      v30 = swift_slowAlloc();
      *(_QWORD *)(v3 - 272) = v30;
      *(_DWORD *)v28 = 136446210;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v3 - 72) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v29, v25, (uint64_t *)(v3 - 272));
      v15 = *(_QWORD *)(v3 - 336);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1BD004000, v26, v27, "%{public}s) initialized, notifying observers with initial state.", v28, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v30, -1, -1);
      MEMORY[0x1C3B751B8](v28, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    v31 = *v2;
    v32 = v2[1];
    v33 = v2[2];
    v34 = v2[3];
    v35 = v2[4];
    v36 = v2[5];
    v37 = v2[6];
    *(_QWORD *)(v3 - 272) = *v2;
    *(_QWORD *)(v3 - 264) = v32;
    *(_QWORD *)(v3 - 256) = v33;
    *(_QWORD *)(v3 - 248) = v34;
    *(_QWORD *)(v3 - 240) = v35;
    *(_QWORD *)(v3 - 232) = v36;
    *(_QWORD *)(v3 - 224) = v37;
    *(_BYTE *)(v3 - 216) = 1;
    outlined copy of CallScreening.State(v31, v32, v33, v34, v35, v36, v37);
    CurrentValueSubject.send(_:)();
    swift_release();
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v3 - 368) + 8))(*(_QWORD *)(v3 - 328), *(_QWORD *)(v3 - 360));
    _s15ConversationKit13CallScreeningO5StateOWOrTm_0(*(_QWORD **)(v3 - 344), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined consume of CallScreening.State);
    outlined consume of CKStateMachine<CallScreening.State>.StateUpdate(*(_QWORD *)(v3 - 272), *(_QWORD *)(v3 - 264), *(_QWORD *)(v3 - 256), *(_QWORD *)(v3 - 248), *(_QWORD *)(v3 - 240), *(_QWORD *)(v3 - 232), *(_QWORD *)(v3 - 224), *(_BYTE *)(v3 - 216));
  }
  _s15ConversationKit13CallScreeningO5StateOWOrTm_0((_QWORD *)(v3 - 200), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined consume of CallScreening.State);
  return v15;
}

uint64_t one-time initialization function for logger()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger();
  __swift_allocate_value_buffer(v0, logger);
  v1 = __swift_project_value_buffer(v0, (uint64_t)logger);
  if (one-time initialization token for answeringMachine != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)&static Logger.answeringMachine);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger();
  __swift_allocate_value_buffer(v0, logger);
  v1 = __swift_project_value_buffer(v0, (uint64_t)logger);
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)&static Logger.conversationKit);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger();
  __swift_allocate_value_buffer(v0, logger);
  v1 = __swift_project_value_buffer(v0, (uint64_t)logger);
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)&static Logger.conversationKit);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t AnsweringMachineSyncComposer.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t AnsweringMachineSyncComposer.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t AnsweringMachineSyncComposer.compose(isInSupportedEnvirement:timeToWaitForCall:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  char *v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v23;

  v8 = OUTLINED_FUNCTION_109_10();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v23 - v13;
  if (one-time initialization token for logger != -1)
    swift_once();
  v15 = OUTLINED_FUNCTION_17_2();
  v16 = __swift_project_value_buffer(v15, (uint64_t)logger);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(&v14[*(int *)(v8 + 20)], v16, v15);
  v17 = objc_allocWithZone(MEMORY[0x1E0DBD2F0]);
  OUTLINED_FUNCTION_14_11();
  *(_QWORD *)v14 = objc_msgSend(v17, sel_init);
  v18 = &v14[*(int *)(v8 + 24)];
  *(_QWORD *)v18 = a1;
  *((_QWORD *)v18 + 1) = a2;
  outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v14, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for AnsweringMachineStatusService);
  v19 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v20 = swift_allocObject();
  outlined init with take of StagedCollaboration((uint64_t)v11, v20 + v19, (uint64_t (*)(_QWORD))type metadata accessor for AnsweringMachineStatusService);
  outlined destroy of RemoteControlRequest((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for AnsweringMachineStatusService);
  v21 = (_QWORD *)OUTLINED_FUNCTION_15();
  v21[2] = partial apply for implicit closure #2 in implicit closure #1 in AnsweringMachineSyncComposer.compose(isInSupportedEnvirement:timeToWaitForCall:);
  v21[3] = v20;
  v21[4] = a3;
  v21[5] = a4;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DelayedAnsweringMachine<CallScreening.MainAnsweringMachine>);
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_15_22();
  OUTLINED_FUNCTION_11_8();
  return specialized DelayedAnsweringMachine.init(isAnsweringMachineAvailable:makeAnsweringMachine:)((uint64_t)partial apply for implicit closure #2 in implicit closure #1 in AnsweringMachineSyncComposer.compose(isInSupportedEnvirement:timeToWaitForCall:), v20, (uint64_t)&async function pointer to partial apply for closure #1 in AnsweringMachineSyncComposer.compose(isInSupportedEnvirement:timeToWaitForCall:), (uint64_t)v21);
}

uint64_t sub_1BD43AEB8()
{
  uint64_t v0;
  uint64_t v1;

  v0 = OUTLINED_FUNCTION_109_10();
  OUTLINED_FUNCTION_18_85(v0);
  v1 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_15_27(v1);
  OUTLINED_FUNCTION_25_60();
  OUTLINED_FUNCTION_487();
  return OUTLINED_FUNCTION_6_10();
}

BOOL partial apply for implicit closure #2 in implicit closure #1 in AnsweringMachineSyncComposer.compose(isInSupportedEnvirement:timeToWaitForCall:)()
{
  OUTLINED_FUNCTION_109_10();
  OUTLINED_FUNCTION_27_59();
  return AnsweringMachineStatusService.isAvailable()();
}

uint64_t closure #1 in AnsweringMachineSyncComposer.compose(isInSupportedEnvirement:timeToWaitForCall:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[7] = a3;
  v4[8] = a4;
  v4[5] = a1;
  v4[6] = a2;
  type metadata accessor for MainActor();
  v4[9] = static MainActor.shared.getter();
  v4[10] = dispatch thunk of Actor.unownedExecutor.getter();
  v4[11] = v5;
  return swift_task_switch();
}

uint64_t closure #1 in AnsweringMachineSyncComposer.compose(isInSupportedEnvirement:timeToWaitForCall:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  type metadata accessor for Defaults();
  OUTLINED_FUNCTION_0_13();
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  v1 = Defaults.init()();
  v2 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v1 + 800))(v1);
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_0_13();
  v3 = Defaults.init()();
  v4 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 808))(v3);
  OUTLINED_FUNCTION_43();
  v0[2] = v2;
  v0[3] = v4;
  v0[4] = 0x4008000000000000;
  if (one-time initialization token for shared != -1)
    swift_once();
  return OUTLINED_FUNCTION_1_3();
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0[8];
  v2 = v0[5];
  type metadata accessor for AnsweringMachineComposer();
  v0[12] = OUTLINED_FUNCTION_14_0();
  swift_retain();
  OUTLINED_FUNCTION_89_22(v0 + 2, (uint64_t)closure #1 in default argument 1 of AnsweringMachineComposer.init(config:isEnabled:isEnabledM3:isAnsweringMachineAvailable:timeToWaitForCall:), 0, (uint64_t)closure #1 in default argument 2 of AnsweringMachineComposer.init(config:isEnabled:isEnabledM3:isAnsweringMachineAvailable:timeToWaitForCall:), 0, v2, v3, v4, v1);
  v5 = (_QWORD *)swift_task_alloc();
  v0[13] = (uint64_t)v5;
  OUTLINED_FUNCTION_30_9(v5, (uint64_t)closure #1 in AnsweringMachineSyncComposer.compose(isInSupportedEnvirement:timeToWaitForCall:));
  return AnsweringMachineComposer.compose()();
}

{
  uint64_t v0;
  uint64_t (*v1)(void);

  swift_release();
  v0 = OUTLINED_FUNCTION_88_15();
  return OUTLINED_FUNCTION_10_5(v0, v1);
}

{
  uint64_t v0;

  swift_release();
  return OUTLINED_FUNCTION_10_5(0, *(uint64_t (**)(void))(v0 + 8));
}

uint64_t closure #1 in AnsweringMachineSyncComposer.compose(isInSupportedEnvirement:timeToWaitForCall:)(uint64_t a1)
{
  void *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v6;

  v4 = *v2;
  v6 = *v2;
  OUTLINED_FUNCTION_24_4(&v6);
  swift_task_dealloc();
  swift_release();
  if (v1)

  else
    *(_QWORD *)(v4 + 112) = a1;
  return OUTLINED_FUNCTION_0_6();
}

uint64_t sub_1BD43B1D4()
{
  OUTLINED_FUNCTION_53_2();
  OUTLINED_FUNCTION_84_14();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in AnsweringMachineSyncComposer.compose(isInSupportedEnvirement:timeToWaitForCall:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v2 = v0[2];
  v3 = v0[3];
  v5 = v0[4];
  v4 = v0[5];
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = partial apply for closure #1 in AnsweringMachineSyncComposer.compose(isInSupportedEnvirement:timeToWaitForCall:);
  return closure #1 in AnsweringMachineSyncComposer.compose(isInSupportedEnvirement:timeToWaitForCall:)(v2, v3, v5, v4);
}

{
  uint64_t v0;
  uint64_t (*v1)(void);

  OUTLINED_FUNCTION_0_2();
  v0 = OUTLINED_FUNCTION_88_15();
  return OUTLINED_FUNCTION_10_5(v0, v1);
}

void default argument 1 of AnsweringMachineComposer.init(config:isEnabled:isEnabledM3:isAnsweringMachineAvailable:timeToWaitForCall:)()
{
  OUTLINED_FUNCTION_34_0();
}

void default argument 2 of AnsweringMachineComposer.init(config:isEnabled:isEnabledM3:isAnsweringMachineAvailable:timeToWaitForCall:)()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t AnsweringMachineComposer.__allocating_init(config:isEnabled:isEnabledM3:isAnsweringMachineAvailable:timeToWaitForCall:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v15 = swift_allocObject();
  OUTLINED_FUNCTION_89_22(a1, a2, a3, a4, a5, a6, v16, v17, a9);
  return v15;
}

uint64_t AnsweringMachineComposer.compose()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[5] = v0;
  OUTLINED_FUNCTION_11_96();
  v1[6] = OUTLINED_FUNCTION_23_71();
  v1[7] = OUTLINED_FUNCTION_5_55();
  v2 = OUTLINED_FUNCTION_17_2();
  v1[8] = v2;
  v1[9] = *(_QWORD *)(v2 - 8);
  v1[10] = OUTLINED_FUNCTION_23_71();
  v1[11] = OUTLINED_FUNCTION_5_55();
  if (one-time initialization token for shared != -1)
    swift_once();
  v1[12] = static CallScreeningActor.shared;
  return OUTLINED_FUNCTION_4_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;

  if (one-time initialization token for logger != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 40);
  v5 = __swift_project_value_buffer(v2, (uint64_t)logger);
  *(_QWORD *)(v0 + 104) = v5;
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(_QWORD *)(v0 + 112) = v6;
  v6(v1, v5, v2);
  OUTLINED_FUNCTION_102_13();
  Logger.traceFunctionStart(file:function:line:)();
  v7 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8);
  *(_QWORD *)(v0 + 120) = v7;
  v8 = v7(v1, v2);
  if (((*(uint64_t (**)(uint64_t))(v4 + 32))(v8) & 1) != 0)
  {
    if (TUCallScreeningRTTEnabled())
    {
      if (one-time initialization token for shared != -1)
        swift_once();
      (*(void (**)(void))(*(_QWORD *)static CallScreeningRTTHelper.shared + 152))();
    }
    v9 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 128) = v9;
    *v9 = v0;
    v9[1] = AnsweringMachineComposer.compose();
    return AnsweringMachineComposer.composeStateMachine()();
  }
  else
  {
    v6(*(_QWORD *)(v0 + 80), v5, *(_QWORD *)(v0 + 64));
    v11 = Logger.logObject.getter();
    v12 = static os_log_type_t.fault.getter();
    if (OUTLINED_FUNCTION_23_5(v12))
    {
      v13 = (uint8_t *)OUTLINED_FUNCTION_105();
      *(_WORD *)v13 = 0;
      _os_log_impl(&dword_1BD004000, v11, (os_log_type_t)v5, "Throwing Error because the feature is disabled. Do not try to create and use an AM if the feature is disabled!", v13, 2u);
      OUTLINED_FUNCTION_60();
    }
    v14 = *(_QWORD *)(v0 + 80);
    v15 = *(_QWORD *)(v0 + 64);

    v7(v14, v15);
    lazy protocol witness table accessor for type AnsweringMachineComposer.Error and conformance AnsweringMachineComposer.Error();
    swift_allocError();
    swift_willThrow();
    OUTLINED_FUNCTION_91_14();
    OUTLINED_FUNCTION_12();
    OUTLINED_FUNCTION_81_0();
    OUTLINED_FUNCTION_625();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

{
  uint64_t v0;

  *(_QWORD *)(v0 + 152) = OUTLINED_FUNCTION_48_2();
  *(_QWORD *)(v0 + 160) = OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_34();
  OUTLINED_FUNCTION_56_0();
  OUTLINED_FUNCTION_63_1();
  return OUTLINED_FUNCTION_0_6();
}

{
  _QWORD *v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;

  v1 = v0[13];
  v2 = (void (*)(uint64_t, uint64_t, uint64_t))v0[14];
  v3 = v0[11];
  v4 = v0[8];
  swift_release();
  v2(v3, v1, v4);
  v5 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  v6 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  type metadata accessor for CallStatusService();
  OUTLINED_FUNCTION_14_0();
  v0[21] = CallStatusService.init(logger:notificationCenter:callCenter:)(v3, v5, v6);
  OUTLINED_FUNCTION_58_4();
  return swift_task_switch();
}

{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 112))(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 64));
  swift_retain();
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  *(_QWORD *)(v0 + 176) = OUTLINED_FUNCTION_50_38();
  OUTLINED_FUNCTION_34();
  OUTLINED_FUNCTION_56_0();
  OUTLINED_FUNCTION_63_1();
  return OUTLINED_FUNCTION_1_3();
}

{
  uint64_t v0;
  char *v1;

  v1 = *(char **)(v0 + 56);
  swift_release();
  AnsweringMachineComposer.callServices.getter(v1);
  OUTLINED_FUNCTION_58_4();
  return OUTLINED_FUNCTION_1_3();
}

{
  uint64_t v0;

  *(_QWORD *)(v0 + 184) = OUTLINED_FUNCTION_50_38();
  OUTLINED_FUNCTION_34();
  OUTLINED_FUNCTION_56_0();
  OUTLINED_FUNCTION_63_1();
  return OUTLINED_FUNCTION_0_6();
}

{
  uint64_t v0;

  swift_release();
  if (one-time initialization token for viewModel != -1)
    swift_once();
  *(_QWORD *)(v0 + 192) = static CallScreeningViewModelComposer.viewModel;
  swift_retain();
  OUTLINED_FUNCTION_78_19();
  return OUTLINED_FUNCTION_4_4();
}

{
  uint64_t v0;
  uint64_t v1;

  CallScreening.MainAnsweringMachine.start()();
  *(_QWORD *)(v0 + 208) = v1;
  return swift_task_switch();
}

{
  uint64_t v0;

  *(_QWORD *)(v0 + 216) = OUTLINED_FUNCTION_50_38();
  OUTLINED_FUNCTION_34();
  OUTLINED_FUNCTION_56_0();
  OUTLINED_FUNCTION_63_1();
  return OUTLINED_FUNCTION_0_6();
}

{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_release();
  closure #2 in AnsweringMachineComposer.compose()(v1);
  OUTLINED_FUNCTION_78_19();
  return OUTLINED_FUNCTION_1_3();
}

{
  uint64_t v0;

  swift_release();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_91_14();
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_81_0();
  OUTLINED_FUNCTION_625();
  return OUTLINED_FUNCTION_32_48(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t AnsweringMachineComposer.compose()(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 136) = a1;
  *(_QWORD *)(v3 + 144) = v1;
  OUTLINED_FUNCTION_37_20();
  if (!v1)
    return OUTLINED_FUNCTION_0_6();
  swift_task_dealloc();
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_81_0();
  OUTLINED_FUNCTION_625();
  return OUTLINED_FUNCTION_32_48(*(uint64_t (**)(void))(v3 + 8));
}

#error "1BD43B998: call analysis failed (funcsize=56)"

uint64_t AnsweringMachineComposer.compose()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;

  OUTLINED_FUNCTION_32_8();
  v15 = *(_QWORD *)(v14 + 200);
  v16 = *(void (**)(uint64_t, uint64_t))(v14 + 120);
  v17 = *(_QWORD *)(v14 + 88);
  v18 = *(_QWORD *)(v14 + 64);
  v28 = *(_QWORD *)(v14 + 48);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v14 + 112))(v17, *(_QWORD *)(v14 + 104), v18);
  OUTLINED_FUNCTION_71();
  OUTLINED_FUNCTION_102_13();
  specialized Logger.traceFunction<A>(returning:file:function:line:)();
  v16(v17, v18);
  OUTLINED_FUNCTION_2_0();
  static AnsweringMachineComposer.shared = v15;
  *(_QWORD *)algn_1ED6E1D48 = &protocol witness table for CallScreening.MainAnsweringMachine;
  OUTLINED_FUNCTION_71();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_74();
  OUTLINED_FUNCTION_17_22();
  swift_task_dealloc();
  OUTLINED_FUNCTION_81_0();
  OUTLINED_FUNCTION_12();
  swift_task_dealloc();
  OUTLINED_FUNCTION_121_1();
  return v20(v19, v20, v21, v22, v23, v24, v25, v26, v15, a10, v28, a12, a13, a14);
}

uint64_t AnsweringMachineSyncComposer.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t AnsweringMachineSyncComposer.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t static AnsweringMachineComposer.Error.== infix(_:_:)()
{
  return 1;
}

void AnsweringMachineComposer.Error.hash(into:)()
{
  Hasher._combine(_:)(0);
}

Swift::Int AnsweringMachineComposer.Error.hashValue.getter()
{
  Hasher.init(_seed:)();
  Hasher._combine(_:)(0);
  return Hasher._finalize()();
}

void AnsweringMachineComposer.isAnsweringMachineAvailable.getter()
{
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

void *AnsweringMachineComposer.Config.defaultSecondsBeforeAnswerAsScreening.unsafeMutableAddressor()
{
  return &static AnsweringMachineComposer.Config.defaultSecondsBeforeAnswerAsScreening;
}

uint64_t static AnsweringMachineComposer.Config.defaultSecondsBeforeAnswerAsScreening.getter()
{
  return 17;
}

void *AnsweringMachineComposer.Config.defaultMaxSecondsForScreening.unsafeMutableAddressor()
{
  return &static AnsweringMachineComposer.Config.defaultMaxSecondsForScreening;
}

uint64_t static AnsweringMachineComposer.Config.defaultMaxSecondsForScreening.getter()
{
  return 120;
}

void *AnsweringMachineComposer.Config.defaultActivityUpdateThrottleSeconds.unsafeMutableAddressor()
{
  return &static AnsweringMachineComposer.Config.defaultActivityUpdateThrottleSeconds;
}

double static AnsweringMachineComposer.Config.defaultActivityUpdateThrottleSeconds.getter()
{
  return 3.0;
}

uint64_t AnsweringMachineComposer.Config.description.getter()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v3;
  Swift::String v4;
  Swift::String v5;

  _StringGuts.grow(_:)(77);
  v3._countAndFlagsBits = 0xD00000000000002ELL;
  v3._object = (void *)0x80000001BD68C360;
  OUTLINED_FUNCTION_49(v3);
  v4._countAndFlagsBits = OUTLINED_FUNCTION_69_20();
  OUTLINED_FUNCTION_49(v4);
  swift_bridgeObjectRelease();
  v0._object = (void *)0x80000001BD68C390;
  v0._countAndFlagsBits = 0xD00000000000001ALL;
  String.append(_:)(v0);
  v5._countAndFlagsBits = OUTLINED_FUNCTION_69_20();
  OUTLINED_FUNCTION_49(v5);
  OUTLINED_FUNCTION_13_3();
  v1._countAndFlagsBits = 41;
  v1._object = (void *)0xE100000000000000;
  String.append(_:)(v1);
  return 0;
}

uint64_t AnsweringMachineComposer.Config.defaultSecondsBeforeAnswerAsScreening.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t AnsweringMachineComposer.Config.maxSecondsForScreening.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

double AnsweringMachineComposer.Config.activityUpdateThrottleSeconds.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

ConversationKit::AnsweringMachineComposer::Config __swiftcall AnsweringMachineComposer.Config.init(defaultSecondsBeforeAnswerAsScreening:maxSecondsForScreening:activityUpdateThrottleSeconds:)(Swift::Int defaultSecondsBeforeAnswerAsScreening, Swift::Int maxSecondsForScreening, Swift::Double activityUpdateThrottleSeconds)
{
  uint64_t v3;
  ConversationKit::AnsweringMachineComposer::Config result;

  *(_QWORD *)v3 = defaultSecondsBeforeAnswerAsScreening;
  *(_QWORD *)(v3 + 8) = maxSecondsForScreening;
  *(Swift::Double *)(v3 + 16) = activityUpdateThrottleSeconds;
  result.activityUpdateThrottleSeconds = activityUpdateThrottleSeconds;
  result.maxSecondsForScreening = maxSecondsForScreening;
  result.defaultSecondsBeforeAnswerAsScreening = defaultSecondsBeforeAnswerAsScreening;
  return result;
}

uint64_t static AnsweringMachineComposer.shared.getter()
{
  OUTLINED_FUNCTION_2_0();
  return swift_unknownObjectRetain();
}

uint64_t static AnsweringMachineComposer.shared.setter(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_2_0();
  static AnsweringMachineComposer.shared = a1;
  *(_QWORD *)algn_1ED6E1D48 = a2;
  return swift_unknownObjectRelease();
}

void static AnsweringMachineComposer.shared.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void AnsweringMachineComposer.isEnabled.getter()
{
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

void AnsweringMachineComposer.isEnabledM3.getter()
{
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

void AnsweringMachineComposer.timeToWaitForCall.getter()
{
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

void AnsweringMachineComposer.callServices.getter(char *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  char *v18;
  char *v19;
  _BYTE v20[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TelephonyUtilitiesServices?);
  MEMORY[0x1E0C80A78](v3);
  v5 = &v20[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v6);
  v8 = &v20[-v7];
  v9 = (uint64_t)v1 + OBJC_IVAR____TtC15ConversationKit24AnsweringMachineComposer____lazy_storage___callServices;
  swift_beginAccess();
  outlined init with copy of TelephonyUtilitiesServices?(v9, (uint64_t)v8);
  v10 = (int *)type metadata accessor for TelephonyUtilitiesServices();
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, (uint64_t)v10) == 1)
  {
    outlined destroy of TelephonyUtilitiesServices?((uint64_t)v8);
    if (one-time initialization token for logger != -1)
      swift_once();
    v11 = type metadata accessor for Logger();
    v12 = __swift_project_value_buffer(v11, (uint64_t)logger);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(&a1[v10[5]], v12, v11);
    v14 = v1[2];
    v13 = v1[3];
    v16 = v1[8];
    v15 = v1[9];
    v17 = (void *)objc_opt_self();
    swift_retain();
    swift_retain();
    *(_QWORD *)a1 = objc_msgSend(v17, sel_sharedInstance);
    v18 = &a1[v10[6]];
    *(_QWORD *)v18 = v14;
    *((_QWORD *)v18 + 1) = v13;
    v19 = &a1[v10[7]];
    *(_QWORD *)v19 = v16;
    *((_QWORD *)v19 + 1) = v15;
    outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)a1, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for TelephonyUtilitiesServices);
    __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, (uint64_t)v10);
    swift_beginAccess();
    outlined assign with take of TelephonyUtilitiesServices?((uint64_t)v5, v9);
    swift_endAccess();
  }
  else
  {
    outlined init with take of StagedCollaboration((uint64_t)v8, (uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for TelephonyUtilitiesServices);
  }
}

double AnsweringMachineComposer.config.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;

  result = *(double *)(v1 + OBJC_IVAR____TtC15ConversationKit24AnsweringMachineComposer_config + 16);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit24AnsweringMachineComposer_config);
  *(double *)(a1 + 16) = result;
  return result;
}

id closure #1 in default argument 1 of AnsweringMachineComposer.init(config:isEnabled:isEnabledM3:isAnsweringMachineAvailable:timeToWaitForCall:)()
{
  return closure #1 in default argument 1 of AnsweringMachineComposer.init(config:isEnabled:isEnabledM3:isAnsweringMachineAvailable:timeToWaitForCall:)((SEL *)&selRef_callScreeningEnabled);
}

id closure #1 in default argument 2 of AnsweringMachineComposer.init(config:isEnabled:isEnabledM3:isAnsweringMachineAvailable:timeToWaitForCall:)()
{
  return closure #1 in default argument 1 of AnsweringMachineComposer.init(config:isEnabled:isEnabledM3:isAnsweringMachineAvailable:timeToWaitForCall:)((SEL *)&selRef_callScreeningEnabledM3);
}

id closure #1 in default argument 1 of AnsweringMachineComposer.init(config:isEnabled:isEnabledM3:isAnsweringMachineAvailable:timeToWaitForCall:)(SEL *a1)
{
  id v2;
  id v3;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DBD2F0]), sel_init);
  v3 = objc_msgSend(v2, *a1);

  return v3;
}

_QWORD *AnsweringMachineComposer.init(config:isEnabled:isEnabledM3:isAnsweringMachineAvailable:timeToWaitForCall:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v37[5];
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v10 = v9;
  v43 = a4;
  v44 = a8;
  v41 = a2;
  v42 = a3;
  v15 = OUTLINED_FUNCTION_17_2();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *a1;
  v19 = a1[1];
  v21 = a1[2];
  v22 = (uint64_t)v10 + OBJC_IVAR____TtC15ConversationKit24AnsweringMachineComposer____lazy_storage___callServices;
  v23 = OUTLINED_FUNCTION_11_96();
  __swift_storeEnumTagSinglePayload(v22, 1, 1, v23);
  v24 = (_QWORD *)((char *)v10 + OBJC_IVAR____TtC15ConversationKit24AnsweringMachineComposer_config);
  v38 = v19;
  v39 = v20;
  *v24 = v20;
  v24[1] = v19;
  v24[2] = v21;
  if (one-time initialization token for logger != -1)
    swift_once();
  v40 = a9;
  v25 = __swift_project_value_buffer(v15, (uint64_t)logger);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v25, v15);
  v26 = v16;
  v27 = Logger.logObject.getter();
  v28 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v27, v28))
  {
    v37[1] = v26;
    v29 = OUTLINED_FUNCTION_105();
    v37[3] = a6;
    v30 = (uint8_t *)v29;
    v31 = OUTLINED_FUNCTION_105();
    v37[4] = a7;
    *(_DWORD *)v30 = 136446210;
    v48 = v31;
    v37[2] = a5;
    v45 = v39;
    v46 = v38;
    v47 = v21;
    v32 = AnsweringMachineComposer.Config.description.getter();
    v45 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v32, v33, &v48);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_48(&dword_1BD004000, v27, v28, "Creating answeringmachine with config %{public}s", v30);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

  (*(void (**)(char *, uint64_t))(v26 + 8))(v18, v15);
  v34 = v42;
  v10[4] = v41;
  v10[5] = v34;
  v10[6] = v43;
  v10[7] = a5;
  v10[2] = a6;
  v10[3] = a7;
  v35 = v40;
  v10[8] = v44;
  v10[9] = v35;
  return v10;
}

uint64_t AnsweringMachineComposer.composeStateMachine()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[20] = v0;
  v2 = OUTLINED_FUNCTION_17_2();
  v1[21] = v2;
  v1[22] = *(_QWORD *)(v2 - 8);
  v1[23] = OUTLINED_FUNCTION_23_71();
  v1[24] = OUTLINED_FUNCTION_5_55();
  if (one-time initialization token for shared != -1)
    swift_once();
  v1[25] = static CKStateMachineActor.shared;
  return OUTLINED_FUNCTION_4_4();
}

{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  void (*v6)(uint64_t, uint64_t);
  _QWORD *v7;

  if (one-time initialization token for logger != -1)
    swift_once();
  v1 = v0[24];
  v2 = v0[21];
  v3 = v0[22];
  v4 = __swift_project_value_buffer(v2, (uint64_t)logger);
  v0[26] = v4;
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v0[27] = v5;
  v5(v1, v4, v2);
  OUTLINED_FUNCTION_103_9();
  Logger.traceFunctionStart(file:function:line:)();
  v6 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[28] = v6;
  v6(v1, v2);
  v7 = (_QWORD *)swift_task_alloc();
  v0[29] = v7;
  *v7 = v0;
  v7[1] = AnsweringMachineComposer.composeStateMachine();
  return AnsweringMachineComposer.composeStateTransitioner()((uint64_t)(v0 + 2));
}

{
  OUTLINED_FUNCTION_1_6();
  OUTLINED_FUNCTION_78_19();
  return OUTLINED_FUNCTION_4_4();
}

{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);

  v1 = *(_QWORD *)(v0 + 208);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 216);
  v3 = *(_QWORD *)(v0 + 184);
  v4 = *(_QWORD *)(v0 + 168);
  v5 = OUTLINED_FUNCTION_15();
  memcpy((void *)(v5 + 16), (const void *)(v0 + 16), 0x58uLL);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CKStateMachineContainer<CallScreening.State>);
  v6 = OUTLINED_FUNCTION_15();
  swift_weakInit();
  *(_QWORD *)(v0 + 104) = v6;
  *(_QWORD *)(v0 + 112) = TPNumberPadCharacter.rawValue.getter;
  *(_OWORD *)(v0 + 120) = 0u;
  *(_OWORD *)(v0 + 136) = 0u;
  *(_QWORD *)(v0 + 152) = 0;
  v2(v3, v1, v4);
  v7 = OUTLINED_FUNCTION_0_13();
  *(_QWORD *)(v7 + 16) = partial apply for implicit closure #2 in implicit closure #1 in AnsweringMachineComposer.composeStateMachine();
  *(_QWORD *)(v7 + 24) = v5;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CKStateMachine<CallScreening.State>);
  OUTLINED_FUNCTION_14_0();
  OUTLINED_FUNCTION_11_8();
  specialized CKStateMachine.init(initialState:logger:stateTransitioner:)((__int128 *)(v0 + 104), v3, (uint64_t)partial apply for thunk for @escaping @callee_guaranteed (@guaranteed CallScreening.State, @guaranteed CallScreening.StateTransition) -> (@owned CallScreening.State, @error @owned Error), v7);
  v8 = *(void (**)(uint64_t, uint64_t))(v0 + 224);
  v9 = *(_QWORD *)(v0 + 192);
  v10 = *(_QWORD *)(v0 + 168);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 216))(v9, *(_QWORD *)(v0 + 208), v10);
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  OUTLINED_FUNCTION_103_9();
  specialized Logger.traceFunction<A>(returning:file:function:line:)();
  OUTLINED_FUNCTION_19();
  v8(v9, v10);
  OUTLINED_FUNCTION_81_0();
  OUTLINED_FUNCTION_625();
  v11 = OUTLINED_FUNCTION_88_15();
  return v12(v11);
}

uint64_t implicit closure #2 in implicit closure #1 in AnsweringMachineComposer.compose()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = partial apply for closure #1 in VideoMessageInboxController.updateCallItems();
  return ViewModelCallStatusUpdateService.updateViewModel(with:)(a1, a2);
}

void closure #2 in AnsweringMachineComposer.compose()(uint64_t a1)
{
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;

  if (((*(uint64_t (**)(void))(a1 + 48))() & 1) != 0)
  {
    v1 = (void *)objc_opt_self();
    v2 = objc_msgSend(v1, sel_sharedInstance);
    v3 = objc_msgSend(v2, sel_callServicesClientCapabilities);

    objc_msgSend(v3, sel_setWantsToScreenCalls_, 1);
    v4 = objc_msgSend(v1, sel_sharedInstance);
    v5 = objc_msgSend(v4, sel_callServicesClientCapabilities);

    objc_msgSend(v5, sel_save);
  }
}

uint64_t implicit closure #3 in implicit closure #2 in AnsweringMachineComposer.composeAnsweringMachineService(callServices:timeToWaitForCall:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  char v14;

  v4 = (*(_QWORD *(**)(uint64_t *__return_ptr))a3)(&v13);
  if ((v14 & 1) == 0)
    return v13;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(a3 + 24);
  specialized Collection.randomElement<A>(using:)((uint64_t)v4, *(_QWORD *)(a3 + 32), *(_QWORD *)(a3 + 40));
  if ((v8 & 1) != 0)
    v7 = 0;
  v9 = specialized static Duration.seconds<A>(_:)(v7);
  v11 = MEMORY[0x1C3B741D4](v5, v6, v9, v10);
  if ((static Duration.< infix(_:_:)() & 1) != 0)
    return 1000000000000000000;
  else
    return v11;
}

void *AnsweringMachineComposer.composeCondition(timeToWaitForCall:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v4 = type metadata accessor for TelephonyUtilitiesServices();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v20 - v9;
  v11 = type metadata accessor for Logger();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for logger != -1)
    swift_once();
  v15 = __swift_project_value_buffer(v11, (uint64_t)logger);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v15, v11);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a1;
  *(_QWORD *)(v16 + 24) = a2;
  swift_retain();
  AnsweringMachineComposer.callServices.getter(v10);
  outlined init with take of StagedCollaboration((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for TelephonyUtilitiesServices);
  v17 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v18 = swift_allocObject();
  outlined init with take of StagedCollaboration((uint64_t)v7, v18 + v17, (uint64_t (*)(_QWORD))type metadata accessor for TelephonyUtilitiesServices);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnsweringConditionTimer<String>);
  swift_allocObject();
  specialized AnsweringConditionTimer.init(logger:timeToWaitForCall:callIsScreenable:)((uint64_t)v14, (uint64_t)partial apply for thunk for @escaping @callee_guaranteed (@guaranteed [Float]?, @guaranteed [Float]?) -> (), v16, (uint64_t)partial apply for closure #1 in AnsweringMachineComposer.composeCondition(timeToWaitForCall:), v18);
  return &async function pointer to partial apply for implicit closure #2 in implicit closure #1 in AnsweringMachineComposer.composeCondition(timeToWaitForCall:);
}

uint64_t thunk for @escaping @callee_guaranteed @async (@guaranteed String) -> (@unowned Bool, @error @owned Error)(uint64_t *a1, int *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v3 = *a1;
  v4 = a1[1];
  v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)a2 + *a2);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = thunk for @escaping @callee_guaranteed @async (@guaranteed String) -> (@unowned Bool, @error @owned Error);
  return v7(v3, v4);
}

uint64_t implicit closure #5 in implicit closure #4 in AnsweringMachineComposer.composeAnsweringMachineService(callServices:timeToWaitForCall:)(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;

  v7 = a4[3];
  v8 = a4[4];
  __swift_project_boxed_opaque_existential_1(a4, v7);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 24))(a1, a2, a3, v7, v8);
}

void implicit closure #2 in implicit closure #1 in AnsweringMachineComposer.composeStateMachine()(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  __int128 v5[3];

  CallScreening.StateTransitioner.transition(state:transition:)(a1, a2);
  if (!v3)
    outlined init with take of CallScreening.State(v5, a3);
}

uint64_t AnsweringMachineComposer.composeStateTransitioner()(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[16] = a1;
  v2[17] = v1;
  v3 = *(_QWORD *)(OUTLINED_FUNCTION_11_96() - 8);
  v2[18] = v3;
  v2[19] = *(_QWORD *)(v3 + 64);
  v2[20] = OUTLINED_FUNCTION_23_71();
  v2[21] = OUTLINED_FUNCTION_5_55();
  v2[22] = OUTLINED_FUNCTION_5_55();
  v4 = OUTLINED_FUNCTION_17_2();
  v2[23] = v4;
  v2[24] = *(_QWORD *)(v4 - 8);
  v2[25] = swift_task_alloc();
  if (one-time initialization token for shared != -1)
    swift_once();
  v2[26] = static CKStateMachineActor.shared;
  return OUTLINED_FUNCTION_4_4();
}

uint64_t AnsweringMachineComposer.composeStateTransitioner()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;

  if (one-time initialization token for logger != -1)
    swift_once();
  v2 = v0[24];
  v1 = v0[25];
  v3 = v0[23];
  v4 = v0[17];
  v5 = __swift_project_value_buffer(v3, (uint64_t)logger);
  v0[27] = v5;
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  v0[28] = v6;
  v6(v1, v5, v3);
  OUTLINED_FUNCTION_101_16();
  Logger.traceFunctionStart(file:function:line:)();
  v7 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v0[29] = v7;
  v7(v1, v3);
  v8 = v4 + OBJC_IVAR____TtC15ConversationKit24AnsweringMachineComposer_config;
  v0[30] = *(_QWORD *)(v4 + OBJC_IVAR____TtC15ConversationKit24AnsweringMachineComposer_config);
  v0[31] = *(_QWORD *)(v8 + 8);
  v0[32] = *(_QWORD *)(v8 + 16);
  v0[33] = OUTLINED_FUNCTION_48_2();
  v0[34] = OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_34();
  OUTLINED_FUNCTION_56_0();
  OUTLINED_FUNCTION_63_1();
  return OUTLINED_FUNCTION_0_6();
}

{
  uint64_t v0;

  swift_release();
  if (one-time initialization token for viewModel != -1)
    swift_once();
  *(_QWORD *)(v0 + 280) = static CallScreeningViewModelComposer.viewModel;
  swift_retain();
  OUTLINED_FUNCTION_78_19();
  return OUTLINED_FUNCTION_4_4();
}

{
  uint64_t v0;

  *(_QWORD *)(v0 + 288) = OUTLINED_FUNCTION_50_38();
  OUTLINED_FUNCTION_34();
  OUTLINED_FUNCTION_56_0();
  OUTLINED_FUNCTION_63_1();
  return OUTLINED_FUNCTION_0_6();
}

{
  uint64_t v0;
  char *v1;

  v1 = *(char **)(v0 + 176);
  swift_release();
  AnsweringMachineComposer.callServices.getter(v1);
  OUTLINED_FUNCTION_58_4();
  return OUTLINED_FUNCTION_1_3();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v1 = *(_QWORD *)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 144);
  outlined init with copy of ConversationControlsAppLaunchButtonType(v1, *(_QWORD *)(v0 + 168), (uint64_t (*)(_QWORD))type metadata accessor for TelephonyUtilitiesServices);
  outlined init with copy of ConversationControlsAppLaunchButtonType(v1, v2, (uint64_t (*)(_QWORD))type metadata accessor for TelephonyUtilitiesServices);
  v4 = *(_DWORD *)(v3 + 80);
  *(_DWORD *)(v0 + 360) = v4;
  v5 = (v4 + 16) & ~(unint64_t)v4;
  v6 = swift_allocObject();
  *(_QWORD *)(v0 + 296) = v6;
  outlined init with take of StagedCollaboration(v2, v6 + v5, (uint64_t (*)(_QWORD))type metadata accessor for TelephonyUtilitiesServices);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 304) = v7;
  *v7 = v0;
  v7[1] = AnsweringMachineComposer.composeStateTransitioner();
  return specialized AnsweringMachineComposer.composeAnsweringMachineService(callServices:timeToWaitForCall:)(*(_QWORD *)(v0 + 168), (uint64_t)partial apply for implicit closure #2 in implicit closure #1 in AnsweringMachineComposer.composeStateTransitioner(), v6, *(_QWORD *)(v0 + 136));
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_38_0();
  v1 = *(_QWORD *)(v0 + 168);
  OUTLINED_FUNCTION_45_2();
  *(_QWORD *)(v3 + 312) = v2;
  OUTLINED_FUNCTION_37_20();
  OUTLINED_FUNCTION_43();
  outlined destroy of RemoteControlRequest(v1, (uint64_t (*)(_QWORD))type metadata accessor for TelephonyUtilitiesServices);
  OUTLINED_FUNCTION_58_4();
  return OUTLINED_FUNCTION_1_3();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_QWORD);
  uint64_t v12;
  _QWORD *v13;
  uint64_t (*v14)(void (*)(uint64_t *@<X8>), _QWORD *);
  _QWORD *v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(void (*)(uint64_t *@<X8>), _QWORD *);

  v1 = *(_QWORD *)(v0 + 312);
  v2 = *(_QWORD *)(v0 + 256);
  v18 = *(_QWORD *)(v0 + 248);
  v19 = *(_QWORD *)(v0 + 280);
  v17 = *(_QWORD *)(v0 + 240);
  v3 = *(_QWORD *)(v0 + 200);
  v4 = *(_QWORD *)(v0 + 176);
  v5 = (*(unsigned __int8 *)(v0 + 360) + 16) & ~(unint64_t)*(unsigned __int8 *)(v0 + 360);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(v0 + 224))(v3, *(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 184));
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnsweringMachineTrackingServiceAdapter<CallScreeningTrackingState<CKStateMachine<CallScreening.State>>>);
  OUTLINED_FUNCTION_14_0();
  v6 = specialized AnsweringMachineTrackingServiceAdapter.init(logger:answeringMachine:)(v3, v1);
  *(_QWORD *)(v0 + 320) = v6;
  v7 = (uint64_t *)(v6 + direct field offset for AnsweringMachineTrackingServiceAdapter.onResult);
  OUTLINED_FUNCTION_2_0();
  v8 = *v7;
  *v7 = (uint64_t)&async function pointer to specialized thunk for @escaping @callee_guaranteed @async (@guaranteed CallScreeningTrackingState<CKStateMachine<CallScreening.State>>, @unowned CallScreeningTrackingStateResult) -> ();
  v7[1] = 0;
  OUTLINED_FUNCTION_21_7();
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
  v9 = OUTLINED_FUNCTION_75_20();
  outlined init with copy of ConversationControlsAppLaunchButtonType(v9, v10, v11);
  v12 = swift_allocObject();
  *(_QWORD *)(v0 + 328) = v12;
  OUTLINED_FUNCTION_82_12(v12, v12 + v5);
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 336) = v13;
  v13[2] = v4;
  v13[3] = v19;
  v13[4] = v17;
  v13[5] = v18;
  v13[6] = v2;
  OUTLINED_FUNCTION_73_22((uint64_t)&async function pointer to specialized static MainActor.run<A>(resultType:body:));
  v20 = v14;
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 344) = v15;
  *v15 = v0;
  v15[1] = AnsweringMachineComposer.composeStateTransitioner();
  return v20(partial apply for closure #3 in AnsweringMachineComposer.composeStateTransitioner(), v13);
}

{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_45_2();
  *(_QWORD *)(v1 + 352) = v0;
  OUTLINED_FUNCTION_37_20();
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_58_4();
  return OUTLINED_FUNCTION_0_6();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t);
  void (*v25)(uint64_t, uint64_t);

  v22 = *(_QWORD *)(v0 + 352);
  v18 = *(_QWORD *)(v0 + 320);
  v19 = *(_QWORD *)(v0 + 328);
  v1 = *(unsigned __int8 *)(v0 + 360);
  v2 = *(_QWORD *)(v0 + 280);
  v25 = *(void (**)(uint64_t, uint64_t))(v0 + 232);
  v23 = *(_QWORD *)(v0 + 216);
  v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 224);
  v3 = *(_QWORD *)(v0 + 176);
  v20 = *(_QWORD *)(v0 + 200);
  v21 = *(_QWORD *)(v0 + 184);
  v4 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD **)(v0 + 128);
  v6 = (v1 + 16) & ~v1;
  outlined init with copy of ConversationControlsAppLaunchButtonType(v3, v4, (uint64_t (*)(_QWORD))type metadata accessor for TelephonyUtilitiesServices);
  v7 = (v1 + 24) & ~v1;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v2;
  outlined init with take of StagedCollaboration(v4, v8 + v7, (uint64_t (*)(_QWORD))type metadata accessor for TelephonyUtilitiesServices);
  outlined init with copy of ConversationControlsAppLaunchButtonType(v3, v4, (uint64_t (*)(_QWORD))type metadata accessor for TelephonyUtilitiesServices);
  v9 = swift_allocObject();
  OUTLINED_FUNCTION_82_12(v9, v9 + v6);
  v10 = OUTLINED_FUNCTION_0_13();
  *(_QWORD *)(v10 + 16) = partial apply for implicit closure #4 in implicit closure #3 in AnsweringMachineComposer.composeStateTransitioner();
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v0 + 16) = v18;
  *(_QWORD *)(v0 + 24) = &async function pointer to partial apply for closure #2 in AnsweringMachineComposer.composeStateTransitioner();
  *(_QWORD *)(v0 + 32) = v19;
  *(_QWORD *)(v0 + 40) = partial apply for closure #6 in AnsweringMachineComposer.composeStateTransitioner();
  *(_QWORD *)(v0 + 48) = v8;
  *(_QWORD *)(v0 + 56) = partial apply for closure #4 in AnsweringMachineComposer.composeStateTransitioner();
  *(_QWORD *)(v0 + 64) = v22;
  *(_QWORD *)(v0 + 72) = partial apply for closure #5 in AnsweringMachineComposer.composeStateTransitioner();
  *(_QWORD *)(v0 + 80) = v22;
  *(_QWORD *)(v0 + 88) = &async function pointer to partial apply for thunk for @escaping @callee_guaranteed (@guaranteed String) -> () with global actor constraint MainActor;
  *(_QWORD *)(v0 + 96) = v10;
  v24(v20, v23, v21);
  OUTLINED_FUNCTION_71();
  OUTLINED_FUNCTION_21_7();
  swift_retain();
  swift_retain_n();
  OUTLINED_FUNCTION_15_22();
  OUTLINED_FUNCTION_101_16();
  specialized Logger.traceFunction<A>(returning:file:function:line:)(v11, v12, v13, v14, v15, v16, 252, v20, (const void *)(v0 + 16));
  swift_release();
  v25(v20, v21);
  outlined destroy of RemoteControlRequest(v3, (uint64_t (*)(_QWORD))type metadata accessor for TelephonyUtilitiesServices);
  swift_task_dealloc();
  OUTLINED_FUNCTION_29_0();
  swift_task_dealloc();
  swift_task_dealloc();
  *v5 = v18;
  v5[1] = &async function pointer to partial apply for closure #2 in AnsweringMachineComposer.composeStateTransitioner();
  v5[2] = v19;
  v5[3] = partial apply for closure #6 in AnsweringMachineComposer.composeStateTransitioner();
  v5[4] = v8;
  v5[5] = partial apply for closure #4 in AnsweringMachineComposer.composeStateTransitioner();
  v5[6] = v22;
  v5[7] = partial apply for closure #5 in AnsweringMachineComposer.composeStateTransitioner();
  v5[8] = v22;
  v5[9] = &async function pointer to partial apply for thunk for @escaping @callee_guaranteed (@guaranteed String) -> () with global actor constraint MainActor;
  v5[10] = v10;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

_QWORD *thunk for @escaping @callee_guaranteed (@guaranteed CallScreening.State, @guaranteed CallScreening.StateTransition) -> (@owned CallScreening.State, @error @owned Error)@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, _QWORD *(*a3)(__int128 *__return_ptr, _BYTE *, _QWORD, _QWORD, _QWORD)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  _QWORD *result;
  __int128 v9[3];
  _BYTE v10[56];

  outlined init with take of CallScreening.State(a1, (uint64_t)v10);
  result = a3(v9, v10, *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(unsigned __int8 *)(a2 + 16));
  if (!v4)
    return (_QWORD *)outlined init with take of CallScreening.State(v9, a4);
  return result;
}

uint64_t closure #1 in AnsweringMachineComposer.composeStateTransitioner()(uint64_t a1, char a2)
{
  uint64_t v2;

  *(_BYTE *)(v2 + 233) = a2;
  *(_QWORD *)(v2 + 136) = a1;
  if (one-time initialization token for shared != -1)
    swift_once();
  *(_QWORD *)(v2 + 144) = static CKStateMachineActor.shared;
  return swift_task_switch();
}

uint64_t closure #1 in AnsweringMachineComposer.composeStateTransitioner()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  __int128 *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  unsigned __int8 v12;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t (*)(__int128 *), uint64_t);
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t (*v23)(__int128 *);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t (*v29)(uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t (*)(__int128 *), uint64_t);

  v1 = *(_QWORD *)(v0 + 136);
  *(_OWORD *)(v0 + 96) = *(_OWORD *)(v1 + 16);
  v2 = *(uint64_t (**)(uint64_t))(**(_QWORD **)(v1 + 40) + 104);
  OUTLINED_FUNCTION_15_22();
  outlined retain of String(v0 + 96);
  OUTLINED_FUNCTION_14_11();
  v3 = partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  v4 = v2(v3);
  *(_QWORD *)(v0 + 152) = v4;
  OUTLINED_FUNCTION_17_22();
  outlined release of String(v0 + 96);
  OUTLINED_FUNCTION_27_0();
  OUTLINED_FUNCTION_43();
  if (!v4)
    return OUTLINED_FUNCTION_70_1(*(uint64_t (**)(void))(v0 + 8));
  OUTLINED_FUNCTION_2_0();
  v5 = (__int128 *)OUTLINED_FUNCTION_114();
  outlined init with take of CallScreening.State(v5, v6);
  CallScreening.State.stateTransition.getter();
  v9 = v7;
  v10 = v8;
  v12 = v11;
  *(_QWORD *)(v0 + 160) = v7;
  *(_QWORD *)(v0 + 168) = v8;
  *(_BYTE *)(v0 + 234) = v11;
  if (v11 > 0x1Fu)
  {
    OUTLINED_FUNCTION_57_18();
    OUTLINED_FUNCTION_19();
    return OUTLINED_FUNCTION_70_1(*(uint64_t (**)(void))(v0 + 8));
  }
  if (v7 != *(_QWORD *)(v0 + 96) || v8 != *(_QWORD *)(v0 + 104))
  {
    OUTLINED_FUNCTION_114();
    if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      OUTLINED_FUNCTION_19();
      OUTLINED_FUNCTION_57_18();
      return OUTLINED_FUNCTION_70_1(*(uint64_t (**)(void))(v0 + 8));
    }
  }
  v14 = *(_BYTE *)(v0 + 233);
  v15 = OUTLINED_FUNCTION_0_13();
  *(_QWORD *)(v0 + 176) = v15;
  *(_QWORD *)(v15 + 16) = v9;
  *(_QWORD *)(v15 + 24) = v10;
  if ((v14 & 1) != 0)
  {
    v26 = OUTLINED_FUNCTION_0_13();
    *(_QWORD *)(v0 + 184) = v26;
    *(_QWORD *)(v26 + 16) = partial apply for closure #1 in closure #1 in AnsweringMachineComposer.composeStateTransitioner();
    *(_QWORD *)(v26 + 24) = v15;
    v29 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t (*)(__int128 *), uint64_t))((char *)&async function pointer to specialized CKStateMachine.transition(with:reason:validation:) + async function pointer to specialized CKStateMachine.transition(with:reason:validation:));
    OUTLINED_FUNCTION_14_11();
    v27 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 192) = v27;
    *v27 = v0;
    v27[1] = closure #1 in AnsweringMachineComposer.composeStateTransitioner();
    v22 = 0x80000001BD68C560;
    v23 = thunk for @escaping @callee_guaranteed (@guaranteed CallScreening.State) -> (@error @owned Error)partial apply;
    v19 = 1;
    v20 = 0;
    v24 = 128;
    v21 = 0xD000000000000027;
    v25 = v26;
  }
  else
  {
    v16 = OUTLINED_FUNCTION_0_13();
    *(_QWORD *)(v0 + 208) = v16;
    *(_QWORD *)(v16 + 16) = partial apply for closure #1 in closure #1 in AnsweringMachineComposer.composeStateTransitioner();
    *(_QWORD *)(v16 + 24) = v15;
    OUTLINED_FUNCTION_14_11();
    outlined copy of CallScreening.StateTransition(v9, v10, v12);
    OUTLINED_FUNCTION_73_22((uint64_t)&async function pointer to specialized CKStateMachine.transition(with:reason:validation:));
    v29 = v17;
    v18 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 216) = v18;
    *v18 = v0;
    v18[1] = closure #1 in AnsweringMachineComposer.composeStateTransitioner();
    v19 = OUTLINED_FUNCTION_114();
    v24 = 32;
    v25 = v16;
  }
  return v29(v19, v20, v24, v21, v22, v23, v25);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;

  v4 = *v1;
  v2 = v4;
  OUTLINED_FUNCTION_24_4(&v4);
  *(_QWORD *)(v2 + 200) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_19();
  return OUTLINED_FUNCTION_1_3();
}

{
  uint64_t v0;

  swift_release();
  OUTLINED_FUNCTION_43();
  return OUTLINED_FUNCTION_16(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 160);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 168);
  v4 = *(_BYTE *)(*(_QWORD *)v1 + 234);
  *(_QWORD *)(*(_QWORD *)v1 + 224) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_19();
  outlined consume of CallScreening.StateTransition(v3, v2, v4);
  return OUTLINED_FUNCTION_0_6();
}

#error "1BD43D978: call analysis failed (funcsize=67)"

#error "1BD43DAB4: call analysis failed (funcsize=67)"

void closure #1 in closure #1 in AnsweringMachineComposer.composeStateTransitioner()(__int128 *a1)
{
  _BYTE v1[48];

  outlined init with take of CallScreening.State(a1, (uint64_t)v1);
  __asm { BR              X11 }
}

uint64_t sub_1BD43DC14()
{
  lazy protocol witness table accessor for type CKStateMachineError and conformance CKStateMachineError();
  swift_allocError();
  return swift_willThrow();
}

void sub_1BD43DC74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;
  uint64_t v14;

  if (a12 != v14 || a13 != v13)
    _stringCompareWithSmolCheck(_:_:expecting:)();
  JUMPOUT(0x1BD43DC20);
}

uint64_t specialized thunk for @escaping @callee_guaranteed @async (@guaranteed CallScreeningTrackingState<CKStateMachine<CallScreening.State>>, @unowned CallScreeningTrackingStateResult) -> ()(_OWORD *a1, char a2)
{
  uint64_t v2;
  char v3;
  __int128 v4;
  _QWORD *v5;

  v3 = a2 & 1;
  v4 = a1[1];
  *(_OWORD *)(v2 + 16) = *a1;
  *(_OWORD *)(v2 + 32) = v4;
  *(_OWORD *)(v2 + 48) = a1[2];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 64) = v5;
  *v5 = v2;
  v5[1] = specialized thunk for @escaping @callee_guaranteed @async (@guaranteed CallScreeningTrackingState<CKStateMachine<CallScreening.State>>, @unowned CallScreeningTrackingStateResult) -> ();
  return closure #1 in AnsweringMachineComposer.composeStateTransitioner()(v2 + 16, v3);
}

uint64_t specialized thunk for @escaping @callee_guaranteed @async (@guaranteed CallScreeningTrackingState<CKStateMachine<CallScreening.State>>, @unowned CallScreeningTrackingStateResult) -> ()()
{
  uint64_t v0;

  OUTLINED_FUNCTION_1_6();
  return OUTLINED_FUNCTION_16(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t closure #2 in AnsweringMachineComposer.composeStateTransitioner()(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  v2[2] = a1;
  v2[3] = a2;
  type metadata accessor for MainActor();
  v2[4] = static MainActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  return swift_task_switch();
}

uint64_t closure #2 in AnsweringMachineComposer.composeStateTransitioner()()
{
  uint64_t v0;
  Swift::String *v1;
  Swift::Bool v2;

  v1 = *(Swift::String **)(v0 + 16);
  swift_release();
  v2 = TelephonyUtilitiesServices.isScreenable(callUUID:manualScreening:)(v1[1], 0);
  return (*(uint64_t (**)(Swift::Bool))(v0 + 8))(v2);
}

void closure #3 in AnsweringMachineComposer.composeStateTransitioner()(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;

  v22 = a3;
  v23 = a4;
  v6 = type metadata accessor for TelephonyUtilitiesServices();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v22 - v11;
  v13 = type metadata accessor for Logger();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for logger != -1)
    swift_once();
  v17 = __swift_project_value_buffer(v13, (uint64_t)logger);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v17, v13);
  outlined init with copy of ConversationControlsAppLaunchButtonType(a1, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for TelephonyUtilitiesServices);
  outlined init with copy of ConversationControlsAppLaunchButtonType(a1, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for TelephonyUtilitiesServices);
  v18 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v19 = swift_allocObject();
  outlined init with take of StagedCollaboration((uint64_t)v9, v19 + v18, (uint64_t (*)(_QWORD))type metadata accessor for TelephonyUtilitiesServices);
  type metadata accessor for ScreeningService();
  v20 = swift_allocObject();
  outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for TelephonyUtilitiesServices);
  swift_retain();
  v21 = specialized ScreeningService.init(logger:callServices:viewModel:getStreamToken:maxSecondsForScreening:)((uint64_t)v16, (uint64_t)v9, a2, (uint64_t)partial apply for implicit closure #2 in implicit closure #1 in closure #3 in AnsweringMachineComposer.composeStateTransitioner(), v19, v22, v20);
  outlined destroy of RemoteControlRequest((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for TelephonyUtilitiesServices);
  *v23 = v21;
}

uint64_t closure #4 in AnsweringMachineComposer.composeStateTransitioner()(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  __int128 v17;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  static TaskPriority.userInitiated.getter();
  v11 = type metadata accessor for TaskPriority();
  __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v11);
  type metadata accessor for MainActor();
  v17 = *a1;
  swift_retain();
  swift_bridgeObjectRetain();
  outlined retain of String((uint64_t)&v17);
  swift_retain();
  swift_retain();
  swift_retain();
  v12 = static MainActor.shared.getter();
  v13 = swift_allocObject();
  v14 = a1[1];
  *(_OWORD *)(v13 + 56) = *a1;
  v15 = MEMORY[0x1E0DF06E8];
  *(_QWORD *)(v13 + 16) = v12;
  *(_QWORD *)(v13 + 24) = v15;
  *(_QWORD *)(v13 + 32) = a4;
  *(_QWORD *)(v13 + 40) = a2;
  *(_QWORD *)(v13 + 48) = a3;
  *(_OWORD *)(v13 + 72) = v14;
  *(_OWORD *)(v13 + 88) = a1[2];
  *(_QWORD *)(v13 + 104) = *((_QWORD *)a1 + 6);
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
  return swift_release();
}

uint64_t closure #1 in closure #4 in AnsweringMachineComposer.composeStateTransitioner()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[6] = a6;
  v7[7] = a7;
  v7[4] = a4;
  v7[5] = a5;
  type metadata accessor for MainActor();
  v7[8] = static MainActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  return swift_task_switch();
}

uint64_t closure #1 in closure #4 in AnsweringMachineComposer.composeStateTransitioner()()
{
  uint64_t v0;
  __int128 *v1;
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;

  v1 = *(__int128 **)(v0 + 56);
  swift_release();
  v2 = OUTLINED_FUNCTION_15();
  v4 = v1[1];
  v3 = v1[2];
  v5 = *v1;
  *(_QWORD *)(v2 + 64) = *((_QWORD *)v1 + 6);
  *(_OWORD *)(v2 + 32) = v4;
  *(_OWORD *)(v2 + 48) = v3;
  *(_OWORD *)(v2 + 16) = v5;
  *(_OWORD *)(v0 + 16) = *v1;
  outlined retain of String(v0 + 16);
  OUTLINED_FUNCTION_21_7();
  OUTLINED_FUNCTION_71();
  swift_retain();
  v6 = OUTLINED_FUNCTION_124_0();
  ScreeningService.startScreening(callUUID:endCall:)(v6, v7, v8, v2);
  OUTLINED_FUNCTION_27_0();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t closure #1 in closure #1 in closure #4 in AnsweringMachineComposer.composeStateTransitioner()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[10] = a3;
  v4[11] = a4;
  v4[8] = a1;
  v4[9] = a2;
  v5 = type metadata accessor for Logger();
  v4[12] = v5;
  v4[13] = *(_QWORD *)(v5 - 8);
  v4[14] = swift_task_alloc();
  if (one-time initialization token for shared != -1)
    swift_once();
  v4[15] = static CKStateMachineActor.shared;
  return swift_task_switch();
}

uint64_t closure #1 in closure #1 in closure #4 in AnsweringMachineComposer.composeStateTransitioner()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  Swift::String v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t (*v19)(uint64_t, uint64_t, char, uint64_t, uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 72);
  v4 = OUTLINED_FUNCTION_0_13();
  *(_QWORD *)(v0 + 128) = v4;
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = v2;
  *(_OWORD *)(v0 + 16) = *(_OWORD *)v1;
  v5 = *(uint64_t (**)(uint64_t))(**(_QWORD **)(v1 + 48) + 104);
  swift_bridgeObjectRetain();
  outlined retain of String(v0 + 16);
  OUTLINED_FUNCTION_14_11();
  OUTLINED_FUNCTION_21_7();
  v6 = OUTLINED_FUNCTION_71();
  v7 = v5(v6);
  *(_QWORD *)(v0 + 136) = v7;
  outlined release of String(v0 + 16);
  OUTLINED_FUNCTION_27_0();
  OUTLINED_FUNCTION_74();
  swift_release();
  if (v7)
  {
    v8 = *(_QWORD *)(v0 + 80);
    swift_bridgeObjectRetain();
    _StringGuts.grow(_:)(33);
    swift_bridgeObjectRelease();
    if (v8)
    {
      v9 = *(void **)(v0 + 80);
      *(_QWORD *)(v0 + 32) = 0;
      *(_QWORD *)(v0 + 40) = 0xE000000000000000;
      v10 = v9;
      v11._countAndFlagsBits = 0x28726F727245;
      v11._object = (void *)0xE600000000000000;
      String.append(_:)(v11);
      *(_QWORD *)(v0 + 48) = v9;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
      OUTLINED_FUNCTION_107_11();

      v12 = *(_QWORD *)(v0 + 32);
      v13 = *(_QWORD *)(v0 + 40);
    }
    else
    {
      v13 = 0xE700000000000000;
      v12 = 0x74756F656D6954;
    }
    v15 = *(_QWORD *)(v0 + 72);
    v16 = v13;
    String.append(_:)(*(Swift::String *)&v12);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 144) = 0x80000001BD68C4B0;
    v17 = OUTLINED_FUNCTION_0_13();
    *(_QWORD *)(v0 + 152) = v17;
    *(_QWORD *)(v17 + 16) = partial apply for closure #1 in closure #1 in closure #1 in closure #4 in AnsweringMachineComposer.composeStateTransitioner();
    *(_QWORD *)(v17 + 24) = v4;
    v19 = (uint64_t (*)(uint64_t, uint64_t, char, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&async function pointer to specialized CKStateMachine.transition(with:reason:validation:)
                                                                                             + async function pointer to specialized CKStateMachine.transition(with:reason:validation:));
    OUTLINED_FUNCTION_11_8();
    v18 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 160) = v18;
    *v18 = v0;
    v18[1] = closure #1 in closure #1 in closure #4 in AnsweringMachineComposer.composeStateTransitioner();
    return v19(*(_QWORD *)(v0 + 64), v15, 97, 0xD00000000000001FLL, 0x80000001BD68C4B0, (uint64_t)partial apply for thunk for @escaping @callee_guaranteed (@guaranteed CallScreening.State) -> (@error @owned Error), v17);
  }
  else
  {
    OUTLINED_FUNCTION_19();
    OUTLINED_FUNCTION_83_23();
    return OUTLINED_FUNCTION_48_34(*(uint64_t (**)(void))(v0 + 8));
  }
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;

  v4 = *v1;
  v2 = v4;
  OUTLINED_FUNCTION_24_4(&v4);
  *(_QWORD *)(v2 + 168) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_19();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_17_22();
  OUTLINED_FUNCTION_30_4();
  return OUTLINED_FUNCTION_0_6();
}

{
  uint64_t v0;

  swift_release();
  OUTLINED_FUNCTION_83_23();
  return OUTLINED_FUNCTION_16(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  BOOL v10;
  void *v11;
  uint8_t *v12;
  _QWORD *v13;
  id v14;
  uint64_t v15;

  swift_release();
  if (one-time initialization token for logger != -1)
    swift_once();
  v1 = *(void **)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  v4 = *(_QWORD *)(v0 + 96);
  v5 = __swift_project_value_buffer(v4, (uint64_t)logger);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v5, v4);
  v6 = v1;
  v7 = v1;
  v8 = Logger.logObject.getter();
  v9 = static os_log_type_t.error.getter();
  v10 = os_log_type_enabled(v8, v9);
  v11 = *(void **)(v0 + 168);
  if (v10)
  {
    v12 = (uint8_t *)OUTLINED_FUNCTION_105();
    v13 = (_QWORD *)OUTLINED_FUNCTION_105();
    *(_DWORD *)v12 = 138412290;
    v14 = v11;
    v15 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 56) = v15;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *v13 = v15;
    OUTLINED_FUNCTION_19_2();
    OUTLINED_FUNCTION_19_2();
    OUTLINED_FUNCTION_48(&dword_1BD004000, v8, v9, "onEnterScreeningState: tranisitoning to ending state failed with error: %@", v12);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }
  OUTLINED_FUNCTION_19_2();
  OUTLINED_FUNCTION_19_2();
  OUTLINED_FUNCTION_19_2();

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 104) + 8))(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 96));
  OUTLINED_FUNCTION_83_23();
  return OUTLINED_FUNCTION_48_34(*(uint64_t (**)(void))(v0 + 8));
}

void closure #1 in closure #1 in closure #1 in closure #4 in AnsweringMachineComposer.composeStateTransitioner()(__int128 *a1)
{
  _BYTE v1[48];

  outlined init with take of CallScreening.State(a1, (uint64_t)v1);
  __asm { BR              X11 }
}

uint64_t sub_1BD43E800()
{
  lazy protocol witness table accessor for type CKStateMachineError and conformance CKStateMachineError();
  swift_allocError();
  return swift_willThrow();
}

void sub_1BD43E860(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  uint64_t v12;

  if (a10 != v12 || a11 != v11)
    _stringCompareWithSmolCheck(_:_:expecting:)();
  JUMPOUT(0x1BD43E80CLL);
}

uint64_t closure #5 in AnsweringMachineComposer.composeStateTransitioner()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v13;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  static TaskPriority.userInitiated.getter();
  v8 = type metadata accessor for TaskPriority();
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v8);
  type metadata accessor for MainActor();
  swift_retain();
  v9 = static MainActor.shared.getter();
  v10 = (_QWORD *)swift_allocObject();
  v11 = MEMORY[0x1E0DF06E8];
  v10[2] = v9;
  v10[3] = v11;
  v10[4] = a4;
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
  return swift_release();
}

uint64_t closure #1 in closure #5 in AnsweringMachineComposer.composeStateTransitioner()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  type metadata accessor for MainActor();
  *(_QWORD *)(v4 + 24) = static MainActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  return swift_task_switch();
}

uint64_t closure #1 in closure #5 in AnsweringMachineComposer.composeStateTransitioner()()
{
  uint64_t v0;

  swift_release();
  ScreeningService.stopScreening()();
  return OUTLINED_FUNCTION_16(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t closure #6 in AnsweringMachineComposer.composeStateTransitioner()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v24;

  v9 = type metadata accessor for TelephonyUtilitiesServices();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  static TaskPriority.userInitiated.getter();
  v16 = type metadata accessor for TaskPriority();
  __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v16);
  outlined init with copy of ConversationControlsAppLaunchButtonType(a5, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for TelephonyUtilitiesServices);
  type metadata accessor for MainActor();
  swift_retain();
  swift_bridgeObjectRetain();
  v17 = static MainActor.shared.getter();
  v18 = (*(unsigned __int8 *)(v10 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v19 = (v11 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  v20 = (_QWORD *)swift_allocObject();
  v21 = MEMORY[0x1E0DF06E8];
  v20[2] = v17;
  v20[3] = v21;
  v20[4] = a4;
  outlined init with take of StagedCollaboration((uint64_t)v12, (uint64_t)v20 + v18, (uint64_t (*)(_QWORD))type metadata accessor for TelephonyUtilitiesServices);
  v22 = (_QWORD *)((char *)v20 + v19);
  *v22 = a2;
  v22[1] = a3;
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
  return swift_release();
}

uint64_t closure #1 in closure #6 in AnsweringMachineComposer.composeStateTransitioner()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[10] = a6;
  v7[11] = a7;
  v7[8] = a4;
  v7[9] = a5;
  type metadata accessor for MainActor();
  v7[12] = static MainActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  return swift_task_switch();
}

uint64_t closure #1 in closure #6 in AnsweringMachineComposer.composeStateTransitioner()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 64);
  swift_release();
  *(_QWORD *)(v0 + 48) = OUTLINED_FUNCTION_11_96();
  *(_QWORD *)(v0 + 56) = &protocol witness table for TelephonyUtilitiesServices;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 24));
  outlined init with copy of ConversationControlsAppLaunchButtonType(v1, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(_QWORD))type metadata accessor for TelephonyUtilitiesServices);
  *(_QWORD *)(v0 + 16) = v2;
  OUTLINED_FUNCTION_11_8();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_114();
  TranscriptionViewModel.callUUID.setter();
  v4 = *(_QWORD *)(v0 + 56);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 48));
  v5 = TranscriptionViewModel.callUUID.getter();
  (*(void (**)(uint64_t))(v4 + 64))(v5);
  swift_bridgeObjectRelease();
  TranscriptionViewModel.callerDisplayName.setter();
  TranscriptionViewModel.state.setter();
  outlined destroy of CallScreening.EnteringAnsweringStateService(v0 + 16);
  return OUTLINED_FUNCTION_70_1(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t thunk for @escaping @callee_guaranteed (@guaranteed String) -> () with global actor constraint MainActor(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  type metadata accessor for MainActor();
  v4[6] = static MainActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  return swift_task_switch();
}

uint64_t thunk for @escaping @callee_guaranteed (@guaranteed String) -> () with global actor constraint MainActor()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(v0 + 32);
  swift_release();
  v2 = OUTLINED_FUNCTION_124_0();
  v1(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t implicit closure #2 in implicit closure #1 in AnsweringMachineComposer.composeCondition(timeToWaitForCall:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&async function pointer to specialized AnsweringConditionTimer.shouldAnswer@Sendable (_:)
                                                + async function pointer to specialized AnsweringConditionTimer.shouldAnswer@Sendable (_:));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = implicit closure #2 in implicit closure #1 in AnsweringMachineComposer.composeCondition(timeToWaitForCall:);
  return v7(a1, a2);
}

uint64_t implicit closure #2 in implicit closure #1 in AnsweringMachineComposer.composeCondition(timeToWaitForCall:)(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  OUTLINED_FUNCTION_0_2();
  if (v1)
    v4 = 0;
  else
    v4 = a1 & 1;
  return OUTLINED_FUNCTION_46_33(v4, *(uint64_t (**)(void))(v2 + 8));
}

BOOL closure #1 in AnsweringMachineComposer.composeCondition(timeToWaitForCall:)(Swift::String *a1)
{
  return TelephonyUtilitiesServices.isScreenable(callUUID:manualScreening:)(*a1, 0);
}

uint64_t AnsweringMachineComposer.deinit()
{
  uint64_t v0;

  OUTLINED_FUNCTION_53_2();
  OUTLINED_FUNCTION_84_14();
  swift_release();
  swift_release();
  outlined destroy of TelephonyUtilitiesServices?(v0 + OBJC_IVAR____TtC15ConversationKit24AnsweringMachineComposer____lazy_storage___callServices);
  return v0;
}

uint64_t AnsweringMachineComposer.__deallocating_deinit()
{
  AnsweringMachineComposer.deinit();
  return swift_deallocClassInstance();
}

_QWORD *specialized AnsweringMachineService.init(shouldAutoScreenCall:requestToScreen:logger:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  id v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  uint64_t v16;
  __int128 v18;

  v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DBD1F8]), sel_init, (unsigned __int128)0, (unsigned __int128)0, 0);
  type metadata accessor for DeviceRingerStateObserver();
  v12 = swift_allocObject();
  *(_DWORD *)(v12 + 16) = 0;
  *(_BYTE *)(v12 + 20) = 0;
  type metadata accessor for ScreeningSoundAndHapticsManager();
  v13 = swift_allocObject();
  v5[6] = specialized ScreeningSoundAndHapticsManager.init(with:ringerStateObserver:feedbackGenerator:)((uint64_t)v11, v12, (uint64_t)&v18, v13);
  v14 = (_QWORD *)((char *)v5 + *(_QWORD *)(*v5 + 144));
  v14[1] = 0;
  v14[2] = 0;
  *v14 = 0;
  v5[2] = a1;
  v5[3] = a2;
  v5[4] = a3;
  v5[5] = a4;
  v15 = (char *)v5 + direct field offset for AnsweringMachineService.logger;
  v16 = type metadata accessor for Logger();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v15, a5, v16);
  return v5;
}

unint64_t lazy protocol witness table accessor for type AnsweringMachineComposer.Error and conformance AnsweringMachineComposer.Error()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type AnsweringMachineComposer.Error and conformance AnsweringMachineComposer.Error;
  if (!lazy protocol witness table cache variable for type AnsweringMachineComposer.Error and conformance AnsweringMachineComposer.Error)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for AnsweringMachineComposer.Error, &type metadata for AnsweringMachineComposer.Error);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AnsweringMachineComposer.Error and conformance AnsweringMachineComposer.Error);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type AnsweringMachineComposer.Error and conformance AnsweringMachineComposer.Error;
  if (!lazy protocol witness table cache variable for type AnsweringMachineComposer.Error and conformance AnsweringMachineComposer.Error)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for AnsweringMachineComposer.Error, &type metadata for AnsweringMachineComposer.Error);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AnsweringMachineComposer.Error and conformance AnsweringMachineComposer.Error);
  }
  return result;
}

uint64_t partial apply for implicit closure #2 in implicit closure #1 in AnsweringMachineComposer.compose()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = partial apply for closure #1 in VideoMessageInboxController.updateCallItems();
  v2 = OUTLINED_FUNCTION_50();
  return implicit closure #2 in implicit closure #1 in AnsweringMachineComposer.compose()(v2, v3);
}

uint64_t specialized AnsweringMachineComposer.composeAnsweringMachineService(callServices:timeToWaitForCall:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v6;
  uint64_t *boxed_opaque_existential_1;

  v4[14] = a3;
  v4[15] = a4;
  v4[13] = a2;
  v6 = type metadata accessor for Logger();
  v4[16] = v6;
  v4[17] = *(_QWORD *)(v6 - 8);
  v4[18] = swift_task_alloc();
  v4[19] = swift_task_alloc();
  v4[5] = type metadata accessor for TelephonyUtilitiesServices();
  v4[6] = (uint64_t)&protocol witness table for TelephonyUtilitiesServices;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v4 + 2);
  outlined init with copy of ConversationControlsAppLaunchButtonType(a1, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(_QWORD))type metadata accessor for TelephonyUtilitiesServices);
  if (one-time initialization token for shared != -1)
    swift_once();
  v4[20] = static CallScreeningActor.shared;
  return swift_task_switch();
}

uint64_t specialized AnsweringMachineComposer.composeAnsweringMachineService(callServices:timeToWaitForCall:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;

  if (one-time initialization token for logger != -1)
    swift_once();
  v2 = v0[18];
  v1 = v0[19];
  v4 = v0[16];
  v3 = v0[17];
  v5 = v0[15];
  v0[21] = __swift_project_value_buffer(v4, (uint64_t)logger);
  v0[22] = *(_QWORD *)(v3 + 16);
  OUTLINED_FUNCTION_110_11(v1);
  OUTLINED_FUNCTION_100_9();
  Logger.traceFunctionStart(file:function:line:)();
  v6 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[23] = v6;
  v6(v1, v4);
  v7 = specialized static Duration.seconds<A>(_:)(*(_QWORD *)(v5
                                                            + OBJC_IVAR____TtC15ConversationKit24AnsweringMachineComposer_config));
  v21 = v8;
  OUTLINED_FUNCTION_110_11(v2);
  OUTLINED_FUNCTION_14_11();
  v9 = v2;
  Logger.logObject.getter();
  v10 = OUTLINED_FUNCTION_12_0();
  v11 = OUTLINED_FUNCTION_41_3(v10);
  v12 = v0[18];
  v13 = v0[16];
  if (v11)
  {
    v14 = (uint8_t *)OUTLINED_FUNCTION_105();
    v22 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v14 = 136446210;
    v15 = Duration.description.getter();
    v0[12] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v15, v16, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_48(&dword_1BD004000, v9, (os_log_type_t)v4, "Creating an Answering Machine with default seconds before answering %{public}s", v14);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

  v6(v12, v13);
  v17 = v0[13];
  v18 = v0[14];
  v19 = OUTLINED_FUNCTION_15();
  v0[24] = v19;
  *(_QWORD *)(v19 + 16) = v17;
  *(_QWORD *)(v19 + 24) = v18;
  *(_QWORD *)(v19 + 32) = v7;
  *(_QWORD *)(v19 + 40) = v21;
  *(_OWORD *)(v19 + 48) = xmmword_1BD6606D0;
  OUTLINED_FUNCTION_48_2();
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  v0[25] = OUTLINED_FUNCTION_50_38();
  OUTLINED_FUNCTION_34();
  OUTLINED_FUNCTION_56_0();
  OUTLINED_FUNCTION_63_1();
  return swift_task_switch();
}

{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0[24];
  swift_release();
  v2 = AnsweringMachineComposer.composeCondition(timeToWaitForCall:)((uint64_t)partial apply for implicit closure #3 in implicit closure #2 in AnsweringMachineComposer.composeAnsweringMachineService(callServices:timeToWaitForCall:), v1);
  v4 = v3;
  OUTLINED_FUNCTION_19();
  v0[26] = v2;
  v0[27] = v4;
  return OUTLINED_FUNCTION_0_6();
}

uint64_t specialized AnsweringMachineComposer.composeAnsweringMachineService(callServices:timeToWaitForCall:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD *, void (*)(uint64_t, uint64_t), uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v30)(uint64_t, uint64_t);
  uint64_t v31;

  OUTLINED_FUNCTION_32_8();
  v15 = *(_QWORD *)(v14 + 152);
  v30 = *(void (**)(uint64_t, uint64_t))(v14 + 184);
  v31 = *(_QWORD *)(v14 + 144);
  v16 = *(_QWORD *)(v14 + 128);
  v17 = OUTLINED_FUNCTION_0_13();
  *(_OWORD *)(v17 + 16) = *(_OWORD *)(v14 + 208);
  outlined init with copy of IDSLookupManager(v14 + 16, v14 + 56);
  v18 = OUTLINED_FUNCTION_15();
  outlined init with take of Notice((__int128 *)(v14 + 56), v18 + 16);
  v19 = OUTLINED_FUNCTION_0_13();
  *(_QWORD *)(v19 + 16) = partial apply for implicit closure #5 in implicit closure #4 in AnsweringMachineComposer.composeAnsweringMachineService(callServices:timeToWaitForCall:);
  *(_QWORD *)(v19 + 24) = v18;
  OUTLINED_FUNCTION_68_24();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnsweringMachineService<String>);
  OUTLINED_FUNCTION_14_0();
  v20 = specialized AnsweringMachineService.init(shouldAutoScreenCall:requestToScreen:logger:)((uint64_t)&async function pointer to partial apply for thunk for @escaping @callee_guaranteed @async (@guaranteed String) -> (@unowned Bool, @error @owned Error), v17, (uint64_t)partial apply for thunk for @escaping @callee_guaranteed (@guaranteed String, @unowned Bool) -> (@error @owned Error), v19, v15);
  OUTLINED_FUNCTION_68_24();
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  OUTLINED_FUNCTION_100_9();
  specialized Logger.traceFunction<A>(returning:file:function:line:)();
  OUTLINED_FUNCTION_74();
  v30(v15, v16);
  __swift_destroy_boxed_opaque_existential_1(v14 + 16);
  OUTLINED_FUNCTION_625();
  swift_task_dealloc();
  OUTLINED_FUNCTION_88_15();
  OUTLINED_FUNCTION_121_1();
  return v22(v21, v22, v23, v24, v25, v26, v27, v28, v20, v30, v31, a12, a13, a14);
}

_QWORD *specialized CallScreening.MainAnsweringMachine.init(logger:stateMachine:statusService:callServices:onCallStatusUpdate:isAnsweringMachineAvailable:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, _QWORD *a9)
{
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t *boxed_opaque_existential_1;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  _QWORD v39[2];
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49[5];

  v45 = a7;
  v46 = a1;
  v43 = a5;
  v39[1] = *a9;
  v40 = a6;
  v44 = type metadata accessor for CallScreening.MachineStateObserver(0);
  MEMORY[0x1E0C80A78](v44);
  v14 = (char *)v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for CallScreening.CallStateObserver();
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49[3] = type metadata accessor for TelephonyUtilitiesServices();
  v49[4] = (uint64_t)&protocol witness table for TelephonyUtilitiesServices;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v49);
  outlined init with take of StagedCollaboration(a4, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(_QWORD))type metadata accessor for TelephonyUtilitiesServices);
  v19 = (char *)a9 + OBJC_IVAR____TtCO15ConversationKit13CallScreening20MainAnsweringMachine_logger;
  v20 = type metadata accessor for Logger();
  v41 = *(_QWORD *)(v20 - 8);
  v21 = *(void (**)(char *, uint64_t, uint64_t))(v41 + 16);
  v22 = v19;
  v23 = v46;
  v21(v22, v46, v20);
  *(_QWORD *)((char *)a9 + OBJC_IVAR____TtCO15ConversationKit13CallScreening20MainAnsweringMachine_stateMachine) = a2;
  outlined init with copy of IDSLookupManager((uint64_t)v49, (uint64_t)a9 + OBJC_IVAR____TtCO15ConversationKit13CallScreening20MainAnsweringMachine_callServices);
  v24 = (_QWORD *)((char *)a9
                 + OBJC_IVAR____TtCO15ConversationKit13CallScreening20MainAnsweringMachine_isAnsweringMachineAvailable);
  *v24 = v45;
  v24[1] = a8;
  v21(v17, v23, v20);
  *(_QWORD *)&v17[*(int *)(v15 + 20)] = a2;
  *(_QWORD *)&v17[*(int *)(v15 + 24)] = a3;
  swift_retain_n();
  v45 = a8;
  v25 = v40;
  swift_retain();
  swift_retain();
  CallScreening.CallStateObserver.start(onCallStatusUpdate:)(v43, v25);
  v27 = v26;
  outlined destroy of RemoteControlRequest((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for CallScreening.CallStateObserver);
  v42 = v20;
  v21(v14, v23, v20);
  v28 = v44;
  *(_QWORD *)&v14[*(int *)(v44 + 20)] = a2;
  *(_QWORD *)&v14[*(int *)(v28 + 24)] = a3;
  v43 = a2;
  swift_retain();
  v44 = a3;
  swift_retain();
  CallScreening.MachineStateObserver.start()();
  v30 = v29;
  outlined destroy of RemoteControlRequest((uint64_t)v14, type metadata accessor for CallScreening.MachineStateObserver);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Task<(), Never>>);
  v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_1BD645380;
  *(_QWORD *)(v31 + 32) = v27;
  *(_QWORD *)(v31 + 40) = v30;
  *(_QWORD *)((char *)a9 + OBJC_IVAR____TtCO15ConversationKit13CallScreening20MainAnsweringMachine_observers) = v31;
  swift_retain_n();
  swift_retain();
  swift_retain();
  v32 = Logger.logObject.getter();
  v33 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v32, v33))
  {
    v34 = (uint8_t *)swift_slowAlloc();
    v35 = swift_slowAlloc();
    v47 = (uint64_t)a9;
    v48 = v35;
    v39[0] = v27;
    *(_DWORD *)v34 = 136446210;
    swift_retain();
    v36 = String.init<A>(reflecting:)();
    v47 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v36, v37, &v48);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v32, v33, "Created MainAnsweringMachine %{public}s", v34, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v35, -1, -1);
    MEMORY[0x1C3B751B8](v34, -1, -1);
    swift_release();
    swift_release();
  }
  else
  {
    swift_release();
    swift_release();
    swift_release_n();
  }

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
  (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v46, v42);
  return a9;
}

uint64_t outlined destroy of TelephonyUtilitiesServices?(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TelephonyUtilitiesServices?);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for AnsweringMachineSyncComposer()
{
  return objc_opt_self();
}

uint64_t method lookup function for AnsweringMachineSyncComposer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AnsweringMachineSyncComposer.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of AnsweringMachineSyncComposer.compose(isInSupportedEnvirement:timeToWaitForCall:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

uint64_t ObjC metadata update function for AnsweringMachineComposer()
{
  return type metadata accessor for AnsweringMachineComposer();
}

uint64_t type metadata accessor for AnsweringMachineComposer()
{
  uint64_t result;

  result = type metadata singleton initialization cache for AnsweringMachineComposer;
  if (!type metadata singleton initialization cache for AnsweringMachineComposer)
    return swift_getSingletonMetadata();
  return result;
}

void type metadata completion function for AnsweringMachineComposer()
{
  unint64_t v0;

  type metadata accessor for TelephonyUtilitiesServices?();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for AnsweringMachineComposer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AnsweringMachineComposer.__allocating_init(config:isEnabled:isEnabledM3:isAnsweringMachineAvailable:timeToWaitForCall:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

void type metadata accessor for TelephonyUtilitiesServices?()
{
  unint64_t v0;
  uint64_t v1;

  if (!lazy cache variable for type metadata for TelephonyUtilitiesServices?)
  {
    type metadata accessor for TelephonyUtilitiesServices();
    v0 = type metadata accessor for Optional();
    if (!v1)
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for TelephonyUtilitiesServices?);
  }
}

uint64_t storeEnumTagSinglePayload for AnsweringMachineComposer.Error(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BD43FBBC + 4 * byte_1BD660512[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BD43FBDC + 4 * byte_1BD660517[v4]))();
}

_BYTE *sub_1BD43FBBC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BD43FBDC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BD43FBE4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BD43FBEC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BD43FBF4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BD43FBFC(_DWORD *result)
{
  *result = 0;
  return result;
}

void type metadata accessor for AnsweringMachineComposer.Error()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for AnsweringMachineComposer.Config()
{
  OUTLINED_FUNCTION_34_0();
}

_UNKNOWN **sub_1BD43FC20()
{
  return &protocol witness table for CallScreening.MainAnsweringMachine;
}

uint64_t outlined init with copy of TelephonyUtilitiesServices?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TelephonyUtilitiesServices?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined assign with take of TelephonyUtilitiesServices?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TelephonyUtilitiesServices?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BD43FCBC()
{
  swift_release();
  OUTLINED_FUNCTION_76();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void partial apply for implicit closure #2 in implicit closure #1 in AnsweringMachineComposer.composeStateMachine()(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  implicit closure #2 in implicit closure #1 in AnsweringMachineComposer.composeStateMachine()(a1, a2, a3);
}

uint64_t sub_1BD43FD1C()
{
  OUTLINED_FUNCTION_53_2();
  return swift_deallocObject();
}

_QWORD *partial apply for thunk for @escaping @callee_guaranteed (@guaranteed CallScreening.State, @guaranteed CallScreening.StateTransition) -> (@owned CallScreening.State, @error @owned Error)@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return thunk for @escaping @callee_guaranteed (@guaranteed CallScreening.State, @guaranteed CallScreening.StateTransition) -> (@owned CallScreening.State, @error @owned Error)(a1, a2, *(_QWORD *(**)(__int128 *__return_ptr, _BYTE *, _QWORD, _QWORD, _QWORD))(v3 + 16), a3);
}

void partial apply for implicit closure #2 in implicit closure #1 in AnsweringMachineComposer.composeStateTransitioner()()
{
  OUTLINED_FUNCTION_11_96();
  OUTLINED_FUNCTION_27_59();
  OUTLINED_FUNCTION_124_0();
  TelephonyUtilitiesServices.timeToWaitForCall(callUUID:)();
}

void sub_1BD43FD88()
{
  OUTLINED_FUNCTION_18();
}

uint64_t partial apply for closure #2 in AnsweringMachineComposer.composeStateTransitioner()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_11_96();
  OUTLINED_FUNCTION_27_59();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = partial apply for closure #2 in AnsweringMachineComposer.composeStateTransitioner();
  v2 = OUTLINED_FUNCTION_50();
  return closure #2 in AnsweringMachineComposer.composeStateTransitioner()(v2, v3);
}

uint64_t partial apply for closure #2 in AnsweringMachineComposer.composeStateTransitioner()(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_0_2();
  return (*(uint64_t (**)(uint64_t))(v1 + 8))(a1);
}

void partial apply for closure #3 in AnsweringMachineComposer.composeStateTransitioner()(uint64_t *a1@<X8>)
{
  uint64_t *v1;

  closure #3 in AnsweringMachineComposer.composeStateTransitioner()(v1[2], v1[3], v1[5], a1);
}

uint64_t partial apply for closure #4 in AnsweringMachineComposer.composeStateTransitioner()(__int128 *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return closure #4 in AnsweringMachineComposer.composeStateTransitioner()(a1, a2, a3, v3);
}

uint64_t partial apply for closure #5 in AnsweringMachineComposer.composeStateTransitioner()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return closure #5 in AnsweringMachineComposer.composeStateTransitioner()(a1, a2, a3, v3);
}

uint64_t sub_1BD43FE4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(OUTLINED_FUNCTION_11_96() - 8) + 80);
  v2 = (v1 + 24) & ~v1;
  swift_release();

  v3 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_15_27(v3);
  OUTLINED_FUNCTION_25_60();
  OUTLINED_FUNCTION_25_60();
  OUTLINED_FUNCTION_487();
  return OUTLINED_FUNCTION_6_10();
}

uint64_t partial apply for closure #6 in AnsweringMachineComposer.composeStateTransitioner()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(OUTLINED_FUNCTION_11_96() - 8) + 80);
  return closure #6 in AnsweringMachineComposer.composeStateTransitioner()(a1, a2, a3, *(_QWORD *)(v3 + 16), v3 + ((v7 + 24) & ~v7));
}

void partial apply for implicit closure #4 in implicit closure #3 in AnsweringMachineComposer.composeStateTransitioner()()
{
  Swift::String v0;

  OUTLINED_FUNCTION_11_96();
  v0._countAndFlagsBits = OUTLINED_FUNCTION_38_55();
  TelephonyUtilitiesServices.disconnectScreeningCall(callUUID:)(v0);
  OUTLINED_FUNCTION_18();
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@guaranteed String) -> () with global actor constraint MainActor()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = partial apply for closure #1 in VideoMessageInboxController.updateCallItems();
  v2 = OUTLINED_FUNCTION_124_0();
  return v3(v2);
}

uint64_t sub_1BD43FFC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(OUTLINED_FUNCTION_11_96() - 8) + 80);
  v2 = (v1 + 40) & ~v1;
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_76();

  v3 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_15_27(v3);
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_87();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #6 in AnsweringMachineComposer.composeStateTransitioner()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = OUTLINED_FUNCTION_11_96();
  v3 = (uint64_t *)(v0
                 + ((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64)
                   + ((*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80))
                   + 7) & 0xFFFFFFFFFFFFFFF8));
  v4 = *v3;
  v5 = v3[1];
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v6;
  v7 = OUTLINED_FUNCTION_40_50(v6);
  return closure #1 in closure #6 in AnsweringMachineComposer.composeStateTransitioner()(v7, v8, v9, v10, v11, v4, v5);
}

uint64_t outlined destroy of CallScreening.EnteringAnsweringStateService(uint64_t a1)
{
  destroy for CallScreening.EnteringAnsweringStateService(a1);
  return a1;
}

uint64_t sub_1BD440144()
{
  return objectdestroy_42Tm((void (*)(_QWORD))MEMORY[0x1E0DEEEC0]);
}

uint64_t partial apply for closure #1 in closure #5 in AnsweringMachineComposer.composeStateTransitioner()(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = partial apply for closure #1 in VideoMessageInboxController.updateCallItems();
  return closure #1 in closure #5 in AnsweringMachineComposer.composeStateTransitioner()(a1, v4, v5, v6);
}

uint64_t sub_1BD4401BC()
{
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_76();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #4 in AnsweringMachineComposer.composeStateTransitioner()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(v0 + 48);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  v4 = OUTLINED_FUNCTION_40_50(v3);
  return closure #1 in closure #4 in AnsweringMachineComposer.composeStateTransitioner()(v4, v5, v6, v7, v8, v2, v0 + 56);
}

uint64_t sub_1BD440284()
{
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_84_14();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in closure #4 in AnsweringMachineComposer.composeStateTransitioner()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v8;

  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v8;
  OUTLINED_FUNCTION_30_9(v8, (uint64_t)partial apply for closure #1 in VideoMessageInboxController.updateCallItems());
  return closure #1 in closure #1 in closure #4 in AnsweringMachineComposer.composeStateTransitioner()(a1, a2, a3, v3 + 16);
}

uint64_t sub_1BD440324()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void partial apply for closure #1 in closure #1 in closure #1 in closure #4 in AnsweringMachineComposer.composeStateTransitioner()(__int128 *a1)
{
  closure #1 in closure #1 in closure #1 in closure #4 in AnsweringMachineComposer.composeStateTransitioner()(a1);
}

void partial apply for implicit closure #2 in implicit closure #1 in closure #3 in AnsweringMachineComposer.composeStateTransitioner()()
{
  Swift::String v0;

  OUTLINED_FUNCTION_11_96();
  v0._countAndFlagsBits = OUTLINED_FUNCTION_38_55();
  TelephonyUtilitiesServices.getStreamToken(callUUID:)(v0);
}

uint64_t specialized ScreeningService.init(logger:callServices:viewModel:getStreamToken:maxSecondsForScreening:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t *boxed_opaque_existential_1;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  __int128 v21;
  uint64_t v22;
  _UNKNOWN **v23;

  v22 = type metadata accessor for TelephonyUtilitiesServices();
  v23 = &protocol witness table for TelephonyUtilitiesServices;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v21);
  outlined init with take of StagedCollaboration(a2, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(_QWORD))type metadata accessor for TelephonyUtilitiesServices);
  v15 = (_QWORD *)(a7 + OBJC_IVAR____TtC15ConversationKit16ScreeningService_provider);
  *v15 = 0;
  v15[1] = 0;
  *(_QWORD *)(a7 + OBJC_IVAR____TtC15ConversationKit16ScreeningService_screeningCaptions) = 0;
  v16 = OBJC_IVAR____TtC15ConversationKit16ScreeningService_timerService;
  type metadata accessor for TimerService();
  swift_allocObject();
  *(_QWORD *)(a7 + v16) = TimerService.init()();
  v17 = a7 + OBJC_IVAR____TtC15ConversationKit16ScreeningService_logger;
  v18 = type metadata accessor for Logger();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17, a1, v18);
  outlined init with take of Notice(&v21, a7 + OBJC_IVAR____TtC15ConversationKit16ScreeningService_callServices);
  *(_QWORD *)(a7 + OBJC_IVAR____TtC15ConversationKit16ScreeningService_viewModel) = a3;
  v19 = (_QWORD *)(a7 + OBJC_IVAR____TtC15ConversationKit16ScreeningService_getStreamToken);
  *v19 = a4;
  v19[1] = a5;
  *(_QWORD *)(a7 + OBJC_IVAR____TtC15ConversationKit16ScreeningService_maxSecondsForScreening) = a6;
  return a7;
}

void partial apply for closure #1 in closure #1 in AnsweringMachineComposer.composeStateTransitioner()(__int128 *a1)
{
  closure #1 in closure #1 in AnsweringMachineComposer.composeStateTransitioner()(a1);
}

uint64_t sub_1BD4404E8()
{
  OUTLINED_FUNCTION_53_2();
  return swift_deallocObject();
}

uint64_t partial apply for implicit closure #3 in implicit closure #2 in AnsweringMachineComposer.composeAnsweringMachineService(callServices:timeToWaitForCall:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return implicit closure #3 in implicit closure #2 in AnsweringMachineComposer.composeAnsweringMachineService(callServices:timeToWaitForCall:)(a1, a2, v2 + 16);
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed @async (@guaranteed String) -> (@unowned Bool, @error @owned Error)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = partial apply for thunk for @escaping @callee_guaranteed @async (@guaranteed String) -> (@unowned Bool, @error @owned Error);
  v2 = OUTLINED_FUNCTION_75_20();
  return v3(v2);
}

uint64_t sub_1BD440574()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

uint64_t partial apply for implicit closure #5 in implicit closure #4 in AnsweringMachineComposer.composeAnsweringMachineService(callServices:timeToWaitForCall:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return implicit closure #5 in implicit closure #4 in AnsweringMachineComposer.composeAnsweringMachineService(callServices:timeToWaitForCall:)(a1, a2, a3, (_QWORD *)(v3 + 16));
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@guaranteed String, @unowned Bool) -> (@error @owned Error)(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, _QWORD, uint64_t))(v2 + 16))(*a1, a1[1], a2);
}

uint64_t objectdestroy_19Tm_3()
{
  uint64_t v0;
  uint64_t v1;

  v0 = OUTLINED_FUNCTION_11_96();
  OUTLINED_FUNCTION_18_85(v0);
  v1 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_15_27(v1);
  OUTLINED_FUNCTION_25_60();
  OUTLINED_FUNCTION_25_60();
  OUTLINED_FUNCTION_487();
  return OUTLINED_FUNCTION_6_10();
}

BOOL partial apply for closure #1 in AnsweringMachineComposer.composeCondition(timeToWaitForCall:)(Swift::String *a1)
{
  OUTLINED_FUNCTION_11_96();
  return closure #1 in AnsweringMachineComposer.composeCondition(timeToWaitForCall:)(a1);
}

uint64_t partial apply for implicit closure #2 in implicit closure #1 in AnsweringMachineComposer.composeCondition(timeToWaitForCall:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  OUTLINED_FUNCTION_30_9(v1, (uint64_t)partial apply for implicit closure #2 in implicit closure #1 in AnsweringMachineComposer.composeCondition(timeToWaitForCall:));
  v2 = OUTLINED_FUNCTION_124_0();
  return implicit closure #2 in implicit closure #1 in AnsweringMachineComposer.composeCondition(timeToWaitForCall:)(v2, v3);
}

uint64_t partial apply for implicit closure #2 in implicit closure #1 in AnsweringMachineComposer.composeCondition(timeToWaitForCall:)(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_0_2();
  return OUTLINED_FUNCTION_46_33(a1, *(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_1BD4406E4()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BD440708()
{
  return objectdestroy_42Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t objectdestroy_42Tm(void (*a1)(_QWORD))
{
  uint64_t v1;

  a1(*(_QWORD *)(v1 + 16));
  OUTLINED_FUNCTION_76();
  return swift_deallocObject();
}

uint64_t partial apply for specialized closure #1 in DelayedAnsweringMachine.init(isAnsweringMachineAvailable:makeAnsweringMachine:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = partial apply for closure #2 in CallScreeningEndingState.enteredState();
  v2 = OUTLINED_FUNCTION_75_20();
  return specialized closure #1 in DelayedAnsweringMachine.init(isAnsweringMachineAvailable:makeAnsweringMachine:)(v2, v3, v4);
}

uint64_t thunk for @escaping @callee_guaranteed (@guaranteed CallScreening.State) -> (@error @owned Error)partial apply(__int128 *a1)
{
  return partial apply for thunk for @escaping @callee_guaranteed (@guaranteed CallScreening.State) -> (@error @owned Error)(a1);
}

uint64_t OUTLINED_FUNCTION_75_20()
{
  uint64_t v0;

  return v0;
}

_QWORD *OUTLINED_FUNCTION_89_22(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  return AnsweringMachineComposer.init(config:isEnabled:isEnabledM3:isAnsweringMachineAvailable:timeToWaitForCall:)(a1, a2, a3, a4, a5, a6, v10, v9, a9);
}

void OUTLINED_FUNCTION_104_11(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;

  *(_QWORD *)(v11 + 112) = a10;
  *(_QWORD *)(v11 + 120) = a11;
}

uint64_t OUTLINED_FUNCTION_109_10()
{
  return type metadata accessor for AnsweringMachineStatusService();
}

void specialized FaceTimeControlsView.handleUpdateDuringEphemeralAlert()()
{
  uint64_t *v0;
  uint64_t *v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  id v9;

  v1 = v0;
  v2 = (void *)OUTLINED_FUNCTION_18_16(*v0);
  outlined consume of ConversationControlsRecipe.View?(v2, v3);
  if (v2)
  {
    v4 = (void *)OUTLINED_FUNCTION_21_81(*v1);
    if (v4)
    {
      v9 = v4;
      if (objc_msgSend(v4, sel_isValid))
      {
        if (one-time initialization token for conversationControls != -1)
          swift_once();
        v5 = OUTLINED_FUNCTION_17_2();
        v6 = OUTLINED_FUNCTION_3(v5, (uint64_t)&static Logger.conversationControls);
        v7 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v6, v7))
        {
          v8 = (uint8_t *)OUTLINED_FUNCTION_105();
          *(_WORD *)v8 = 0;
          OUTLINED_FUNCTION_130(&dword_1BD004000, v6, v7, "setupRootView: displaying ephemeral alert, hiding new status view", v8);
          OUTLINED_FUNCTION_60();
        }

        objc_msgSend(*(id *)((char *)v1 + OBJC_IVAR____TtC15ConversationKit27ConversationHUDControlsView_statusView), sel_setAlpha_, 0.0);
      }

    }
  }
}

{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  id v10;

  v1 = v0;
  v2 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v3 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8))();
  outlined consume of ConversationControlsRecipe.View?(v3, v4);
  if (v3)
  {
    v5 = (void *)(*(uint64_t (**)(void))((*v2 & *v1) + 0xE0))();
    if (v5)
    {
      v10 = v5;
      if (objc_msgSend(v5, sel_isValid))
      {
        if (one-time initialization token for conversationControls != -1)
          swift_once();
        v6 = type metadata accessor for Logger();
        __swift_project_value_buffer(v6, (uint64_t)&static Logger.conversationControls);
        v7 = Logger.logObject.getter();
        v8 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v7, v8))
        {
          v9 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v9 = 0;
          _os_log_impl(&dword_1BD004000, v7, v8, "setupRootView: displaying ephemeral alert, hiding new status view", v9, 2u);
          MEMORY[0x1C3B751B8](v9, -1, -1);
        }

        objc_msgSend(*(id *)((char *)v1 + OBJC_IVAR____TtC15ConversationKit26SystemApertureControlsView_statusView), sel_setAlpha_, 0.0);
      }

    }
  }
}

void specialized FaceTimeControlsView.displayEphemeralAlert()()
{
  uint64_t *v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  uint64_t *v4;
  void *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  char aBlock;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v1 = (_QWORD *)OUTLINED_FUNCTION_18_16(*v0);
  outlined consume of ConversationControlsRecipe.View?(v1, v2);
  if (v1)
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v3 = OUTLINED_FUNCTION_17_2();
    __swift_project_value_buffer(v3, (uint64_t)&static Logger.conversationControls);
    v4 = v0;
    v5 = (void *)OUTLINED_FUNCTION_271();
    v6 = static os_log_type_t.default.getter();
    if (OUTLINED_FUNCTION_43_7(v6))
    {
      OUTLINED_FUNCTION_105();
      v7 = OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_5_118(v7, v8, v9, 4.8149e-34);
      v10 = OUTLINED_FUNCTION_58_33();
      OUTLINED_FUNCTION_57_19(v10, v11, v12, v13);
      OUTLINED_FUNCTION_26_61();

      OUTLINED_FUNCTION_27();
      OUTLINED_FUNCTION_30_63(&dword_1BD004000, v14, v15, "⇢ [%s] 1. Starting display of ephemeral alert");
      OUTLINED_FUNCTION_6_3();
      OUTLINED_FUNCTION_60();
    }

    v16 = (void *)OUTLINED_FUNCTION_21_81(*v1);
    objc_msgSend(v16, sel_invalidate);

    objc_opt_self();
    if (one-time initialization token for shared != -1)
      swift_once();
    OUTLINED_FUNCTION_75_1();
    OUTLINED_FUNCTION_6_98();
    OUTLINED_FUNCTION_251();
    aBlock = MEMORY[0x1E0C809B0];
    v18 = OUTLINED_FUNCTION_76_1((uint64_t)thunk for @escaping @callee_guaranteed () -> (), v21, v23, MEMORY[0x1E0C809B0], 1107296256, v25, v27);
    OUTLINED_FUNCTION_49_4();
    OUTLINED_FUNCTION_6_98();
    OUTLINED_FUNCTION_251();
    v19 = OUTLINED_FUNCTION_76_1((uint64_t)thunk for @escaping @callee_guaranteed (@unowned Bool) -> (), v22, v24, aBlock, 1107296256, v26, v28);
    v20 = OUTLINED_FUNCTION_49_4();
    OUTLINED_FUNCTION_31_57(v20, sel_animateWithDuration_animations_completion_);
    _Block_release(v19);
    _Block_release(v18);
  }
  OUTLINED_FUNCTION_11_10();
}

{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  _QWORD *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  void *v12;
  void *v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t aBlock;
  uint64_t v21;
  void *v22;
  void *v23;
  void *v24;
  uint64_t v25;

  v1 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v2 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8))();
  outlined consume of ConversationControlsRecipe.View?(v2, v3);
  if (v2)
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v4 = type metadata accessor for Logger();
    __swift_project_value_buffer(v4, (uint64_t)&static Logger.conversationControls);
    v5 = v0;
    v6 = Logger.logObject.getter();
    v7 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      v9 = swift_slowAlloc();
      *(_DWORD *)v8 = 136315138;
      aBlock = v9;
      (*(void (**)(void))((*v1 & *v5) + 0xC8))();
      v10 = String.init<A>(reflecting:)();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v10, v11, &aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BD004000, v6, v7, "⇢ [%s] 1. Starting display of ephemeral alert", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v9, -1, -1);
      MEMORY[0x1C3B751B8](v8, -1, -1);

    }
    else
    {

    }
    v12 = (void *)(*(uint64_t (**)(void))((*v1 & *v5) + 0xE0))();
    objc_msgSend(v12, sel_invalidate);

    v13 = (void *)objc_opt_self();
    if (one-time initialization token for shared != -1)
      swift_once();
    v14 = (*(double (**)(void))(*(_QWORD *)static Defaults.shared + 1016))();
    v15 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v24 = partial apply for specialized closure #1 in FaceTimeControlsView.displayEphemeralAlert();
    v25 = v15;
    v16 = MEMORY[0x1E0C809B0];
    aBlock = MEMORY[0x1E0C809B0];
    v21 = 1107296256;
    v22 = thunk for @escaping @callee_guaranteed () -> ();
    v23 = &block_descriptor_37_1;
    v17 = _Block_copy(&aBlock);
    swift_release();
    v18 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v24 = partial apply for specialized closure #2 in FaceTimeControlsView.displayEphemeralAlert();
    v25 = v18;
    aBlock = v16;
    v21 = 1107296256;
    v22 = thunk for @escaping @callee_guaranteed (@unowned Bool) -> ();
    v23 = &block_descriptor_41_0;
    v19 = _Block_copy(&aBlock);
    swift_release();
    objc_msgSend(v13, sel_animateWithDuration_animations_completion_, v17, v19, v14);
    _Block_release(v19);
    _Block_release(v17);
  }
}

void specialized FaceTimeControlsView.cleanUpEphemeralAlert()()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  id v3;
  void *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  char aBlock;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v2 = OUTLINED_FUNCTION_17_2();
  __swift_project_value_buffer(v2, (uint64_t)&static Logger.conversationControls);
  v3 = v1;
  v4 = (void *)OUTLINED_FUNCTION_271();
  v5 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_43_7(v5))
  {
    OUTLINED_FUNCTION_105();
    v6 = OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_5_118(v6, v7, v8, 4.8149e-34);
    v9 = OUTLINED_FUNCTION_58_33();
    OUTLINED_FUNCTION_57_19(v9, v10, v11, v12);
    OUTLINED_FUNCTION_26_61();

    OUTLINED_FUNCTION_27();
    OUTLINED_FUNCTION_30_63(&dword_1BD004000, v13, v14, "⇢ [%s] 3. Removing ephemeral alert");
    OUTLINED_FUNCTION_6_3();
    OUTLINED_FUNCTION_60();
  }

  v15 = (void *)OUTLINED_FUNCTION_21_81(*v0);
  objc_msgSend(v15, sel_invalidate);

  objc_opt_self();
  if (one-time initialization token for shared != -1)
    swift_once();
  OUTLINED_FUNCTION_75_1();
  OUTLINED_FUNCTION_6_98();
  OUTLINED_FUNCTION_251();
  aBlock = MEMORY[0x1E0C809B0];
  v17 = OUTLINED_FUNCTION_76_1((uint64_t)thunk for @escaping @callee_guaranteed () -> (), v20, v22, MEMORY[0x1E0C809B0], 1107296256, v24, v26);
  OUTLINED_FUNCTION_49_4();
  OUTLINED_FUNCTION_6_98();
  OUTLINED_FUNCTION_251();
  v18 = OUTLINED_FUNCTION_76_1((uint64_t)thunk for @escaping @callee_guaranteed (@unowned Bool) -> (), v21, v23, aBlock, 1107296256, v25, v27);
  v19 = OUTLINED_FUNCTION_49_4();
  OUTLINED_FUNCTION_31_57(v19, sel_animateWithDuration_animations_completion_);
  _Block_release(v18);
  _Block_release(v17);
  OUTLINED_FUNCTION_11_10();
}

{
  void *v0;
  uint64_t v1;
  _QWORD *v2;
  NSObject *v3;
  os_log_type_t v4;
  BOOL v5;
  _QWORD *v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  void *v11;
  void *v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t aBlock;
  uint64_t v20;
  void *v21;
  void *v22;
  void *v23;
  uint64_t v24;

  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v1 = type metadata accessor for Logger();
  __swift_project_value_buffer(v1, (uint64_t)&static Logger.conversationControls);
  v2 = v0;
  v3 = Logger.logObject.getter();
  v4 = static os_log_type_t.default.getter();
  v5 = os_log_type_enabled(v3, v4);
  v6 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  if (v5)
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    *(_DWORD *)v7 = 136315138;
    aBlock = v8;
    (*(void (**)(void))((*v6 & *v2) + 0xC8))();
    v9 = String.init<A>(reflecting:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v9, v10, &aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v3, v4, "⇢ [%s] 3. Removing ephemeral alert", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v8, -1, -1);
    MEMORY[0x1C3B751B8](v7, -1, -1);

  }
  else
  {

  }
  v11 = (void *)(*(uint64_t (**)(void))((*v6 & *v2) + 0xE0))();
  objc_msgSend(v11, sel_invalidate);

  v12 = (void *)objc_opt_self();
  if (one-time initialization token for shared != -1)
    swift_once();
  v13 = (*(double (**)(void))(*(_QWORD *)static Defaults.shared + 1016))();
  v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v23 = partial apply for specialized closure #1 in FaceTimeControlsView.cleanUpEphemeralAlert();
  v24 = v14;
  v15 = MEMORY[0x1E0C809B0];
  aBlock = MEMORY[0x1E0C809B0];
  v20 = 1107296256;
  v21 = thunk for @escaping @callee_guaranteed () -> ();
  v22 = &block_descriptor_57;
  v16 = _Block_copy(&aBlock);
  swift_release();
  v17 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v23 = partial apply for specialized closure #2 in FaceTimeControlsView.cleanUpEphemeralAlert();
  v24 = v17;
  aBlock = v15;
  v20 = 1107296256;
  v21 = thunk for @escaping @callee_guaranteed (@unowned Bool) -> ();
  v22 = &block_descriptor_61_0;
  v18 = _Block_copy(&aBlock);
  swift_release();
  objc_msgSend(v12, sel_animateWithDuration_animations_completion_, v16, v18, v13);
  _Block_release(v18);
  _Block_release(v16);
}

void one-time initialization function for paddingFromStatusViewToButtonShelf()
{
  static SystemApertureControlsView.Constants.paddingFromStatusViewToButtonShelf = 0x402C000000000000;
}

uint64_t *SystemApertureControlsView.Constants.paddingFromStatusViewToButtonShelf.unsafeMutableAddressor()
{
  if (one-time initialization token for paddingFromStatusViewToButtonShelf != -1)
    swift_once();
  return &static SystemApertureControlsView.Constants.paddingFromStatusViewToButtonShelf;
}

double static SystemApertureControlsView.Constants.paddingFromStatusViewToButtonShelf.getter()
{
  return static SystemApertureConstants.sensorRegionHeight.getter(&one-time initialization token for paddingFromStatusViewToButtonShelf, (uint64_t)&static SystemApertureControlsView.Constants.paddingFromStatusViewToButtonShelf);
}

void one-time initialization function for paddingFromStatusViewToBottom()
{
  static SystemApertureControlsView.Constants.paddingFromStatusViewToBottom = 0x4031000000000000;
}

uint64_t *SystemApertureControlsView.Constants.paddingFromStatusViewToBottom.unsafeMutableAddressor()
{
  if (one-time initialization token for paddingFromStatusViewToBottom != -1)
    swift_once();
  return &static SystemApertureControlsView.Constants.paddingFromStatusViewToBottom;
}

double static SystemApertureControlsView.Constants.paddingFromStatusViewToBottom.getter()
{
  return static SystemApertureConstants.sensorRegionHeight.getter(&one-time initialization token for paddingFromStatusViewToBottom, (uint64_t)&static SystemApertureControlsView.Constants.paddingFromStatusViewToBottom);
}

void one-time initialization function for paddingFromLeadingAccessoryToButtonShelf()
{
  static SystemApertureControlsView.Constants.paddingFromLeadingAccessoryToButtonShelf = 0x4030000000000000;
}

uint64_t *SystemApertureControlsView.Constants.paddingFromLeadingAccessoryToButtonShelf.unsafeMutableAddressor()
{
  if (one-time initialization token for paddingFromLeadingAccessoryToButtonShelf != -1)
    swift_once();
  return &static SystemApertureControlsView.Constants.paddingFromLeadingAccessoryToButtonShelf;
}

double static SystemApertureControlsView.Constants.paddingFromLeadingAccessoryToButtonShelf.getter()
{
  return static SystemApertureConstants.sensorRegionHeight.getter(&one-time initialization token for paddingFromLeadingAccessoryToButtonShelf, (uint64_t)&static SystemApertureControlsView.Constants.paddingFromLeadingAccessoryToButtonShelf);
}

void one-time initialization function for paddingFromAppLaunchPillToButtonShelf()
{
  static SystemApertureControlsView.Constants.paddingFromAppLaunchPillToButtonShelf = 0x4034000000000000;
}

uint64_t *SystemApertureControlsView.Constants.paddingFromAppLaunchPillToButtonShelf.unsafeMutableAddressor()
{
  if (one-time initialization token for paddingFromAppLaunchPillToButtonShelf != -1)
    swift_once();
  return &static SystemApertureControlsView.Constants.paddingFromAppLaunchPillToButtonShelf;
}

double static SystemApertureControlsView.Constants.paddingFromAppLaunchPillToButtonShelf.getter()
{
  return static SystemApertureConstants.sensorRegionHeight.getter(&one-time initialization token for paddingFromAppLaunchPillToButtonShelf, (uint64_t)&static SystemApertureControlsView.Constants.paddingFromAppLaunchPillToButtonShelf);
}

__n128 one-time initialization function for controlsPadding()
{
  __n128 result;

  __asm { FMOV            V0.2D, #20.0 }
  static SystemApertureControlsView.Constants.controlsPadding = (__int128)result;
  *(__n128 *)&qword_1EF4FD220 = result;
  return result;
}

__int128 *SystemApertureControlsView.Constants.controlsPadding.unsafeMutableAddressor()
{
  if (one-time initialization token for controlsPadding != -1)
    swift_once();
  return &static SystemApertureControlsView.Constants.controlsPadding;
}

double static SystemApertureControlsView.Constants.controlsPadding.getter()
{
  if (one-time initialization token for controlsPadding != -1)
    swift_once();
  return *(double *)&static SystemApertureControlsView.Constants.controlsPadding;
}

id SystemApertureControlsView.cnkContentAlpha.didset()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  double *v5;
  uint64_t v6;
  void *v7;
  double *v8;
  void *v9;

  v1 = v0;
  v2 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v3 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x150))();
  if (v3)
  {
    v4 = (_QWORD *)v3;
    v5 = (double *)((char *)v1 + OBJC_IVAR____TtC15ConversationKit26SystemApertureControlsView_cnkContentAlpha);
    v6 = swift_beginAccess();
    (*(void (**)(uint64_t, double))((*v2 & *v4) + 0x68))(v6, *v5);

  }
  v7 = (void *)(*(uint64_t (**)(void))((*v2 & *v1) + 0x138))();
  v8 = (double *)((char *)v1 + OBJC_IVAR____TtC15ConversationKit26SystemApertureControlsView_cnkContentAlpha);
  swift_beginAccess();
  objc_msgSend(v7, sel_setAlpha_, *v8);

  v9 = *(void **)((char *)v1 + OBJC_IVAR____TtC15ConversationKit26SystemApertureControlsView_leadingAccessoryView);
  if (v9)
    objc_msgSend(v9, sel_setAlpha_, *v8);
  objc_msgSend(*(id *)((char *)v1 + OBJC_IVAR____TtC15ConversationKit26SystemApertureControlsView_trailingActionsView), sel_setAlpha_, *v8);
  return objc_msgSend(*(id *)((char *)v1 + OBJC_IVAR____TtC15ConversationKit26SystemApertureControlsView_statusView), sel_setAlpha_, *v8);
}

double SystemApertureControlsView.cnkContentAlpha.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_1_7();
  return *(double *)v0;
}

id SystemApertureControlsView.cnkContentAlpha.setter(double a1)
{
  uint64_t v1;
  double *v3;

  v3 = (double *)(v1 + OBJC_IVAR____TtC15ConversationKit26SystemApertureControlsView_cnkContentAlpha);
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  return SystemApertureControlsView.cnkContentAlpha.didset();
}

void SystemApertureControlsView.cnkContentAlpha.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t SystemApertureControlsView.cnkContentAlpha.modify(uint64_t a1, char a2)
{
  return SystemApertureOngoingTelephonyControlsView.cnkContentAlpha.modify(a1, a2, (uint64_t (*)(uint64_t))SystemApertureControlsView.cnkContentAlpha.didset);
}

uint64_t SystemApertureControlsView.context.getter()
{
  unsigned __int8 *v0;

  OUTLINED_FUNCTION_1_7();
  return *v0;
}

void SystemApertureControlsView.context.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit26SystemApertureControlsView_context);
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  OUTLINED_FUNCTION_32();
}

void SystemApertureControlsView.context.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

id SystemApertureControlsView.controlsManager.getter()
{
  return OUTLINED_FUNCTION_7(OBJC_IVAR____TtC15ConversationKit26SystemApertureControlsView_controlsManager);
}

uint64_t key path setter for SystemApertureControlsView.ephemeralAlertTimer : SystemApertureControlsView(id *a1, _QWORD **a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & **a2) + 0xE8);
  v4 = *a1;
  return v3(v2);
}

void SystemApertureControlsView.ephemeralAlertTimer.getter()
{
  id *v0;
  id v1;

  OUTLINED_FUNCTION_1_7();
  v1 = *v0;
  OUTLINED_FUNCTION_32();
}

void SystemApertureControlsView.ephemeralAlertTimer.setter(void *a1)
{
  ConversationHUDControlsView.ephemeralAlertTimer.setter(a1, &OBJC_IVAR____TtC15ConversationKit26SystemApertureControlsView_ephemeralAlertTimer);
}

void SystemApertureControlsView.ephemeralAlertTimer.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path setter for SystemApertureControlsView.ephemeralAlert : SystemApertureControlsView(uint64_t a1, _QWORD **a2)
{
  id v2;
  void *v3;
  uint64_t (*v4)(id, void *, uint64_t);
  uint64_t v5;

  v2 = *(id *)a1;
  v3 = *(void **)(a1 + 8);
  v4 = *(uint64_t (**)(id, void *, uint64_t))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x100);
  v5 = *(unsigned __int8 *)(a1 + 16);
  outlined copy of ConversationControlsRecipe.View?(*(id *)a1, v3);
  return v4(v2, v3, v5);
}

void SystemApertureControlsView.ephemeralAlert.didset()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit26SystemApertureControlsView_ephemeralAlert);
  swift_beginAccess();
  if (*v1)
    specialized FaceTimeControlsView.displayEphemeralAlert()();
  else
    specialized FaceTimeControlsView.cleanUpEphemeralAlert()();
}

void *SystemApertureControlsView.ephemeralAlert.getter()
{
  void **v0;
  void *v1;

  OUTLINED_FUNCTION_1_7();
  v1 = *v0;
  OUTLINED_FUNCTION_42_3(*v0);
  return v1;
}

void SystemApertureControlsView.ephemeralAlert.setter(void *a1, void *a2, char a3)
{
  uint64_t v3;
  uint64_t v7;
  void *v8;
  void *v9;

  v7 = v3 + OBJC_IVAR____TtC15ConversationKit26SystemApertureControlsView_ephemeralAlert;
  OUTLINED_FUNCTION_2_0();
  v8 = *(void **)v7;
  v9 = *(void **)(v7 + 8);
  *(_QWORD *)v7 = a1;
  *(_QWORD *)(v7 + 8) = a2;
  *(_BYTE *)(v7 + 16) = a3;
  OUTLINED_FUNCTION_42_3(a1);
  outlined consume of ConversationControlsRecipe.View?(v8, v9);
  SystemApertureControlsView.ephemeralAlert.didset();
  outlined consume of ConversationControlsRecipe.View?(a1, a2);
}

void SystemApertureControlsView.ephemeralAlert.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t SystemApertureControlsView.ephemeralAlert.modify(uint64_t a1, char a2)
{
  return SystemApertureOngoingTelephonyControlsView.cnkContentAlpha.modify(a1, a2, (uint64_t (*)(uint64_t))SystemApertureControlsView.ephemeralAlert.didset);
}

uint64_t key path setter for SystemApertureControlsView.recipe : SystemApertureControlsView(uint64_t a1, _QWORD **a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v9;

  v4 = type metadata accessor for ConversationControlsRecipe();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of ConversationControlsAction(a1, (uint64_t)v6, v7);
  return (*(uint64_t (**)(char *))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x118))(v6);
}

void SystemApertureControlsView.recipe.didset(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  os_log_type_t v19;
  uint8_t *v20;
  BOOL v21;
  id v22;
  uint64_t v23;
  NSObject *v24;

  v2 = v1;
  v4 = type metadata accessor for ConversationControlsRecipe();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(void **)&v2[OBJC_IVAR____TtC15ConversationKit26SystemApertureControlsView_statusView];
  swift_getObjectType();
  if (dynamic_cast_existential_1_conditional((uint64_t)v7))
  {
    v9 = v8;
    ObjectType = swift_getObjectType();
    v11 = (uint64_t)&v2[OBJC_IVAR____TtC15ConversationKit26SystemApertureControlsView_recipe];
    swift_beginAccess();
    outlined init with copy of ConversationControlsAction(v11, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
    v12 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    v13 = v7;
    v12(v6, ObjectType, v9);
    v14 = *(_QWORD *)(a1 + 56);
    v15 = *(_QWORD *)(a1 + 72);
    swift_beginAccess();
    v16 = *(_QWORD *)(v11 + 56);
    if (v16)
      v17 = *(_QWORD *)(v11 + 72);
    else
      v17 = 0;
    swift_endAccess();
    if (v14)
    {
      if (v16)
        v21 = v15 == v17;
      else
        v21 = 0;
      if (v21)
        goto LABEL_16;
    }
    else if (!v16)
    {
      goto LABEL_16;
    }
    SystemApertureControlsView.updateLeadingAccessoryView()();
LABEL_16:
    specialized FaceTimeControlsView.handleUpdateDuringEphemeralAlert()();
    v22 = objc_msgSend(v2, sel_layer);
    objc_msgSend(v22, sel_setHitTestsAsOpaque_, SystemApertureControlsView.allowUserInteractionWithSubview.getter() & 1);

    return;
  }
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v18 = type metadata accessor for Logger();
  __swift_project_value_buffer(v18, (uint64_t)&static Logger.conversationControls);
  v24 = Logger.logObject.getter();
  v19 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v24, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v20 = 0;
    _os_log_impl(&dword_1BD004000, v24, v19, "[SystemAperture] statusView has unexpected type", v20, 2u);
    MEMORY[0x1C3B751B8](v20, -1, -1);
  }

}

void SystemApertureControlsView.recipe.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15ConversationKit26SystemApertureControlsView_recipe;
  OUTLINED_FUNCTION_2_0();
  outlined init with copy of ConversationControlsAction(v3, a1, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
  OUTLINED_FUNCTION_32();
}

uint64_t SystemApertureControlsView.recipe.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_77();
  v6 = v5 - v4;
  v7 = v1 + OBJC_IVAR____TtC15ConversationKit26SystemApertureControlsView_recipe;
  OUTLINED_FUNCTION_2_0();
  outlined init with copy of ConversationControlsAction(v7, v6, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
  OUTLINED_FUNCTION_2_0();
  outlined assign with copy of ConversationControlsRecipe(a1, v7);
  swift_endAccess();
  SystemApertureControlsView.recipe.didset(v6);
  OUTLINED_FUNCTION_10_12();
  return OUTLINED_FUNCTION_31_24();
}

void (*SystemApertureControlsView.recipe.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;
  void *v5;
  uint64_t v6;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = *(_QWORD *)(*(_QWORD *)(OUTLINED_FUNCTION_28_1() - 8) + 64);
  v3[4] = malloc(v4);
  v5 = malloc(v4);
  v3[5] = v5;
  v6 = v1 + OBJC_IVAR____TtC15ConversationKit26SystemApertureControlsView_recipe;
  OUTLINED_FUNCTION_2_0();
  outlined init with copy of ConversationControlsAction(v6, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
  return SystemApertureControlsView.recipe.modify;
}

void SystemApertureControlsView.recipe.modify(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  void *v4;

  v2 = *(void **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 32);
  v4 = *(void **)(*(_QWORD *)a1 + 40);
  if ((a2 & 1) != 0)
  {
    outlined init with copy of ConversationControlsAction(*(_QWORD *)(*(_QWORD *)a1 + 40), (uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
    SystemApertureControlsView.recipe.setter((uint64_t)v3);
    OUTLINED_FUNCTION_31_24();
  }
  else
  {
    SystemApertureControlsView.recipe.setter(*(_QWORD *)(*(_QWORD *)a1 + 40));
  }
  free(v4);
  free(v3);
  free(v2);
}

double SystemApertureControlsView.calculateHeightForExpandedHUD()()
{
  uint64_t v0;
  CGFloat v1;
  CGFloat v2;
  CGFloat v3;
  double v4;
  double v5;
  double v6;
  double v7;
  uint64_t v8;
  double v9;
  double v10;
  double Height;
  double v12;
  double v13;
  double v14;
  double v15;
  _BYTE v17[208];
  double v18;
  _BYTE v19[208];
  double v20;
  CGRect v21;

  if (one-time initialization token for controlsPadding != -1)
    swift_once();
  v4 = *(double *)&qword_1EF4FD220 + 0.0;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit26SystemApertureControlsView_appLaunchPillView))
  {
    SystemApertureControlsView.appLaunchPillSize.getter();
    v6 = v4 + v5;
    if (one-time initialization token for paddingFromAppLaunchPillToButtonShelf != -1)
      swift_once();
    v4 = v6 + *(double *)&static SystemApertureControlsView.Constants.paddingFromAppLaunchPillToButtonShelf;
  }
  static Layout.ConversationControls.values.getter((uint64_t)v17);
  v7 = *(double *)&static SystemApertureControlsView.Constants.controlsPadding;
  static Layout.ConversationControls.values.getter((uint64_t)v19);
  v9 = v7 + v20;
  if (one-time initialization token for paddingFromLeadingAccessoryToButtonShelf != -1)
    v8 = swift_once();
  v10 = v9 + *(double *)&static SystemApertureControlsView.Constants.paddingFromLeadingAccessoryToButtonShelf;
  objc_msgSend(OUTLINED_FUNCTION_25_1(v8, sel_SBUISA_systemApertureObstructedAreaLayoutGuide), sel_layoutFrame);
  OUTLINED_FUNCTION_42_47();
  v21.origin.x = v9;
  v21.origin.y = v1;
  v21.size.width = v2;
  v21.size.height = v3;
  Height = CGRectGetHeight(v21);
  v15 = Height + SystemApertureControlsView.statusViewHeight.getter(Height, v12, v13, v14);
  if (one-time initialization token for paddingFromStatusViewToButtonShelf != -1)
    swift_once();
  if (v15 + *(double *)&static SystemApertureControlsView.Constants.paddingFromStatusViewToButtonShelf >= v10)
  {
    if ((~COERCE__INT64(v15 + *(double *)&static SystemApertureControlsView.Constants.paddingFromStatusViewToButtonShelf) & 0x7FF0000000000000) != 0)
    {
      v10 = v15 + *(double *)&static SystemApertureControlsView.Constants.paddingFromStatusViewToButtonShelf;
    }
    else if ((COERCE_UNSIGNED_INT64(v15 + *(double *)&static SystemApertureControlsView.Constants.paddingFromStatusViewToButtonShelf) & 0xFFFFFFFFFFFFFLL) == 0)
    {
      v10 = v15 + *(double *)&static SystemApertureControlsView.Constants.paddingFromStatusViewToButtonShelf;
    }
  }
  return v10 + v4 + v18;
}

id SystemApertureControlsView.statusView.getter()
{
  return OUTLINED_FUNCTION_7(OBJC_IVAR____TtC15ConversationKit26SystemApertureControlsView_statusView);
}

void SystemApertureControlsView.showCallDetailsButton.getter()
{
  uint64_t v0;
  _QWORD *v1;
  void (*v2)(void);
  _QWORD *v3;

  v1 = *(_QWORD **)(v0 + OBJC_IVAR____TtC15ConversationKit26SystemApertureControlsView_trailingActionsView);
  v2 = *(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v1) + 0xB8);
  v3 = v1;
  v2();

  OUTLINED_FUNCTION_0();
}

void key path setter for SystemApertureControlsView.ephemeralAlertNotice : SystemApertureControlsView(id *a1)
{
  SystemApertureControlsView.ephemeralAlertNotice.setter((uint64_t)*a1);
}

uint64_t SystemApertureControlsView.ephemeralAlertNotice.getter()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;

  v1 = *(void **)(v0
                + OBJC_IVAR____TtC15ConversationKit26SystemApertureControlsView____lazy_storage___ephemeralAlertNotice);
  if (!v1)
  {
    v3 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit26SystemApertureControlsView_controlsManager);
    v4 = objc_allocWithZone((Class)type metadata accessor for ConversationHUDEphemeralNotice());
    ConversationHUDEphemeralNotice.init(controlsManager:)(v3);
  }
  v2 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtC15ConversationKit26SystemApertureControlsView____lazy_storage___ephemeralAlertNotice);
  v5 = v1;
  return v2;
}

void SystemApertureControlsView.ephemeralAlertNotice.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_4_3(a1, OBJC_IVAR____TtC15ConversationKit26SystemApertureControlsView____lazy_storage___ephemeralAlertNotice);
}

void key path setter for SystemApertureControlsView.buttonShelfView : SystemApertureControlsView(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  SystemApertureControlsView.buttonShelfView.setter(v1);
}

void SystemApertureControlsView.buttonShelfView.getter()
{
  id *v0;
  id v1;

  OUTLINED_FUNCTION_1_7();
  v1 = *v0;
  OUTLINED_FUNCTION_32();
}

void SystemApertureControlsView.buttonShelfView.setter(void *a1)
{
  ConversationHUDControlsView.ephemeralAlertTimer.setter(a1, &OBJC_IVAR____TtC15ConversationKit26SystemApertureControlsView_buttonShelfView);
}

void SystemApertureControlsView.leadingAccessoryView.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_4_3(a1, OBJC_IVAR____TtC15ConversationKit26SystemApertureControlsView_leadingAccessoryView);
}

void SystemApertureControlsView.appLaunchPillView.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_4_3(a1, OBJC_IVAR____TtC15ConversationKit26SystemApertureControlsView_appLaunchPillView);
}

double SystemApertureControlsView.appLaunchPillSize.getter()
{
  char *v0;
  double v1;
  double v2;
  double v3;
  void *v4;
  double v5;
  id v6;
  id v7;
  uint64_t v8;
  id v9;
  void *v10;
  double v11;
  double v12;
  double v13;
  id v14;
  double v15;
  CGFloat v16;
  CGFloat Height;
  double v18;
  double v19;
  double v20;
  __int128 v21;
  double v22;
  double v23;
  double v25;
  CGRect v26;

  v4 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit26SystemApertureControlsView_appLaunchPillView];
  v5 = 0.0;
  if (v4)
  {
    v6 = v4;
    v7 = objc_msgSend(v6, sel_superview);

    if (v7)
    {
      v9 = OUTLINED_FUNCTION_25_1(v8, sel_window);
      if (v9)
      {
        v10 = v9;
        objc_msgSend(v9, sel_frame);
        v1 = v11;
        v2 = v12;

        v13 = OUTLINED_FUNCTION_40_51();
      }
      else
      {
        v13 = 1.79769313e308;
      }
      v14 = OUTLINED_FUNCTION_25_1((uint64_t)v9, sel_SBUISA_systemApertureLeadingConcentricContentLayoutGuide);
      objc_msgSend(v14, sel_layoutFrame);
      v16 = v15;
      OUTLINED_FUNCTION_27_60();

      v26.origin.x = v16;
      v26.origin.y = v1;
      v26.size.width = v2;
      v26.size.height = v3;
      Height = CGRectGetHeight(v26);
      LODWORD(v18) = 1148846080;
      LODWORD(v19) = 1112014848;
      objc_msgSend(v6, sel_systemLayoutSizeFittingSize_withHorizontalFittingPriority_verticalFittingPriority_, v13, Height, v18, v19);
      objc_msgSend(v0, sel_bounds);
      v25 = v20;
      OUTLINED_FUNCTION_27_60();
      if (one-time initialization token for controlsPadding != -1)
        swift_once();
      v21 = static SystemApertureControlsView.Constants.controlsPadding;
      v23 = *(double *)&qword_1EF4FD220;
      v22 = *(double *)&qword_1EF4FD228;

      return UIEdgeInsetsInsetRect_1(v25, v1, v2, v3, *(double *)&v21, *((double *)&v21 + 1), v23, v22);
    }
    else
    {

    }
  }
  return v5;
}

double SystemApertureControlsView.statusViewHeight.getter(double a1, double a2, double a3, double a4)
{
  uint64_t v4;
  double v5;

  LODWORD(a3) = 1132068864;
  LODWORD(a4) = 1112014848;
  objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC15ConversationKit26SystemApertureControlsView_statusView), sel_systemLayoutSizeFittingSize_withHorizontalFittingPriority_verticalFittingPriority_, *(double *)(MEMORY[0x1E0DC5000] + 8), *(double *)(MEMORY[0x1E0DC4FF8] + 8), a3, a4);
  return v5;
}

id SystemApertureControlsView.__allocating_init(recipe:controlsManager:context:menuHostViewController:)(uint64_t a1, void *a2, char a3, void *a4, uint64_t a5)
{
  objc_class *v5;
  id v11;

  v11 = objc_allocWithZone(v5);
  return SystemApertureControlsView.init(recipe:controlsManager:context:menuHostViewController:)(a1, a2, a3, a4, a5);
}

id SystemApertureControlsView.init(recipe:controlsManager:context:menuHostViewController:)(uint64_t a1, void *a2, char a3, void *a4, uint64_t a5)
{
  _BYTE *v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  char *v18;
  char *v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  char v31;
  uint64_t v32;
  void **v34;
  id v35;
  objc_super v36;

  v11 = OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_77();
  v15 = v14 - v13;
  *(_QWORD *)&v5[OBJC_IVAR____TtC15ConversationKit26SystemApertureControlsView_cnkContentAlpha] = 0x3FF0000000000000;
  *(_QWORD *)&v5[OBJC_IVAR____TtC15ConversationKit26SystemApertureControlsView_ephemeralAlertTimer] = 0;
  v16 = &v5[OBJC_IVAR____TtC15ConversationKit26SystemApertureControlsView_ephemeralAlert];
  *(_QWORD *)v16 = 0;
  *((_QWORD *)v16 + 1) = 0;
  v16[16] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC15ConversationKit26SystemApertureControlsView____lazy_storage___ephemeralAlertNotice] = 0;
  v34 = (void **)&v5[OBJC_IVAR____TtC15ConversationKit26SystemApertureControlsView_buttonShelfView];
  *(_QWORD *)&v5[OBJC_IVAR____TtC15ConversationKit26SystemApertureControlsView_buttonShelfView] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC15ConversationKit26SystemApertureControlsView_leadingAccessoryView] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC15ConversationKit26SystemApertureControlsView_appLaunchPillView] = 0;
  outlined init with copy of ConversationControlsAction(a1, (uint64_t)&v5[OBJC_IVAR____TtC15ConversationKit26SystemApertureControlsView_recipe], (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
  *(_QWORD *)&v5[OBJC_IVAR____TtC15ConversationKit26SystemApertureControlsView_controlsManager] = a2;
  v5[OBJC_IVAR____TtC15ConversationKit26SystemApertureControlsView_context] = a3;
  outlined init with copy of ConversationControlsAction(a1, v15, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
  objc_allocWithZone((Class)type metadata accessor for ConversationControlsTrailingActionsView());
  v35 = a4;
  v17 = a2;
  v18 = v5;
  *(_QWORD *)&v18[OBJC_IVAR____TtC15ConversationKit26SystemApertureControlsView_trailingActionsView] = ConversationControlsTrailingActionsView.init(recipe:controlsManager:menuHostViewController:context:)(v15, v17, a4, a5, a3);
  v19 = (char *)(a1 + *(int *)(v11 + 60));
  if (v19[40] <= -3 && *(_QWORD *)(*(_QWORD *)v19 + 16))
  {
    OUTLINED_FUNCTION_47_30();
    v20 = objc_allocWithZone((Class)type metadata accessor for ConversationHUDControlsButtonShelfView());
    v21 = v17;
    v22 = v17;
    v23 = v35;
    v24 = ConversationHUDControlsButtonShelfView.init(recipe:controlsManager:context:menuHostViewController:)(v15, v22, a3, a4);
    OUTLINED_FUNCTION_2_0();
    v25 = *v34;
    *v34 = v24;

    OUTLINED_FUNCTION_47_30();
    v26 = objc_allocWithZone((Class)type metadata accessor for ConversationDetailsView());
    ConversationDetailsView.init(recipe:presentationStyle:controlsManager:)(v15, 0, v22);
  }
  else
  {
    outlined init with copy of ConversationControlsAction(a1, v15, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
    v28 = objc_allocWithZone((Class)type metadata accessor for SystemApertureConversationDetailsView());
    v27 = SystemApertureConversationDetailsView.init(recipe:)(v15);
    v21 = v17;
  }
  *(_QWORD *)&v18[OBJC_IVAR____TtC15ConversationKit26SystemApertureControlsView_statusView] = v27;

  v36.receiver = v18;
  v36.super_class = (Class)ObjC metadata update function for SystemApertureControlsView();
  v29 = objc_msgSendSuper2(&v36, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v30 = objc_msgSend(v29, sel_layer);
  v31 = SystemApertureControlsView.allowUserInteractionWithSubview.getter();
  OUTLINED_FUNCTION_76_20(v31, sel_setHitTestsAsOpaque_);

  SystemApertureControlsView.configureSubviews()(v32);
  OUTLINED_FUNCTION_10_12();
  return v29;
}

void SystemApertureControlsView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;

  objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  OUTLINED_FUNCTION_0();
}

void SystemApertureControlsView.init(coder:)()
{
  char *v0;
  char *v1;

  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit26SystemApertureControlsView_cnkContentAlpha] = 0x3FF0000000000000;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit26SystemApertureControlsView_ephemeralAlertTimer] = 0;
  v1 = &v0[OBJC_IVAR____TtC15ConversationKit26SystemApertureControlsView_ephemeralAlert];
  *(_QWORD *)v1 = 0;
  *((_QWORD *)v1 + 1) = 0;
  v1[16] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit26SystemApertureControlsView____lazy_storage___ephemeralAlertNotice] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit26SystemApertureControlsView_buttonShelfView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit26SystemApertureControlsView_leadingAccessoryView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit26SystemApertureControlsView_appLaunchPillView] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

Swift::Void __swiftcall SystemApertureControlsView.layoutSubviews()()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  SEL *v5;
  uint64_t v6;
  id v7;
  _QWORD *v8;
  uint64_t v9;
  double v10;
  char v11;
  double Height;
  uint64_t v13;
  os_log_type_t v14;
  uint8_t *v15;
  id v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  void *v20;
  _QWORD *v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  uint64_t v28;
  double v29;
  uint64_t v30;
  double v31;
  double Width;
  void *v33;
  SEL *v34;
  char **v35;
  id v36;
  double v37;
  double v38;
  id v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double MinY;
  uint64_t v47;
  id v48;
  double v49;
  CGFloat v50;
  double v51;
  CGFloat v52;
  double v53;
  CGFloat v54;
  double v55;
  CGFloat v56;
  double v57;
  uint64_t v58;
  id v59;
  double v60;
  double v61;
  double v62;
  id v63;
  CGFloat v64;
  id v65;
  double v66;
  double v67;
  double v68;
  uint64_t v69;
  double v70;
  double v71;
  double v72;
  double v73;
  double v74;
  double v75;
  double MaxX;
  uint64_t v77;
  double v78;
  double v79;
  id v80;
  double v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void *v94;
  id v95;
  double v96;
  id v97;
  id (*v98)();
  id (*v99)();
  uint64_t v100;
  void *v101;
  uint64_t v102;
  id v103;
  double v104;
  double v105;
  double v106;
  uint64_t v107;
  id v108;
  double v109;
  double v110;
  double v111;
  double v112;
  double v113;
  double v114;
  double v115;
  double v116;
  void *v117;
  void *v118;
  id v119;
  double MinX;
  double v121;
  uint64_t v122;
  double v123;
  double v124;
  uint64_t v125;
  double v126;
  uint64_t v127;
  NSObject *v128;
  os_log_type_t v129;
  uint8_t *v130;
  CGFloat v131;
  CGFloat v132;
  uint64_t v133;
  double v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  double v143;
  uint64_t ObjectType;
  id v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  void *v153;
  void *v154;
  id v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  id v163;
  id v164;
  id v165;
  id v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  double v175;
  double v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  os_log_t oslog;
  NSObject *osloga;
  _QWORD aBlock[7];
  objc_super v186;
  _QWORD v187[5];
  char **v188;
  double v189;
  _BYTE v190[208];
  double v191;
  _BYTE v192[208];
  double v193;
  _BYTE v194[208];
  double v195;
  CGRect v196;
  CGRect v197;
  CGRect v198;
  CGRect v199;
  CGRect v200;
  CGRect v201;
  CGRect v202;
  CGRect v203;
  CGRect v204;
  CGRect v205;
  CGRect v206;
  CGRect v207;
  CGRect v208;
  CGRect v209;

  v1 = v0;
  v2 = *(void **)((char *)v0 + OBJC_IVAR____TtC15ConversationKit26SystemApertureControlsView_statusView);
  swift_getObjectType();
  v3 = dynamic_cast_existential_1_conditional((uint64_t)v2);
  if (v3)
  {
    v5 = (SEL *)v3;
    v6 = v4;
    v186.receiver = v1;
    v186.super_class = (Class)ObjC metadata update function for SystemApertureControlsView();
    oslog = v2;
    v7 = objc_msgSendSuper2(&v186, sel_layoutSubviews);
    v8 = (_QWORD *)MEMORY[0x1E0DEEDD8];
    v9 = (*(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x1E0))(v7);
    if ((v11 & 1) != 0)
    {
      OUTLINED_FUNCTION_14_25();
      Height = CGRectGetHeight(v196);
    }
    else
    {
      Height = v10;
    }
    v17 = (*(uint64_t (**)(uint64_t))((*v8 & *v1) + 0x150))(v9);
    v18 = &async function pointer to specialized CKStateMachine.transition(with:reason:validation:);
    if (v17)
    {
      v19 = v17;
      v20 = *(void **)((char *)v1 + OBJC_IVAR____TtC15ConversationKit26SystemApertureControlsView_leadingAccessoryView);
      if (!v20)
      {
        if (one-time initialization token for conversationControls != -1)
          swift_once();
        v127 = OUTLINED_FUNCTION_17_2();
        v128 = OUTLINED_FUNCTION_3(v127, (uint64_t)&static Logger.conversationControls);
        v129 = static os_log_type_t.fault.getter();
        if (os_log_type_enabled(v128, v129))
        {
          v130 = (uint8_t *)OUTLINED_FUNCTION_105();
          *(_WORD *)v130 = 0;
          OUTLINED_FUNCTION_130(&dword_1BD004000, v128, v129, "[SystemAperture] Unexpectedly laying out a recipe with a button shelf but no leading accessory", v130);
          OUTLINED_FUNCTION_60();
        }

        OUTLINED_FUNCTION_26_50(v167, v168, v169, v170, v171, v172, v173, v174, v177, v178, v180, oslog);
        goto LABEL_39;
      }
      v181 = (uint64_t)v5;
      v21 = v20;
      OUTLINED_FUNCTION_14_25();
      v25 = v24;
      v27 = v26;
      if (one-time initialization token for controlsPadding != -1)
      {
        v175 = v22;
        v176 = v23;
        swift_once();
        v23 = v176;
        v22 = v175;
      }
      v28 = (uint64_t)&static SystemApertureControlsView.Constants.controlsPadding;
      v29 = *((double *)&static SystemApertureControlsView.Constants.controlsPadding + 1);
      v30 = qword_1EF4FD220;
      v31 = UIEdgeInsetsInsetRect_1(v25, v27, v22, v23, *(double *)&static SystemApertureControlsView.Constants.controlsPadding, *((double *)&static SystemApertureControlsView.Constants.controlsPadding + 1), *(double *)&qword_1EF4FD220, *(double *)&qword_1EF4FD228);
      static Layout.ConversationControls.values.getter((uint64_t)v187);
      Width = v189;
      v33 = *(void **)((char *)v1 + OBJC_IVAR____TtC15ConversationKit26SystemApertureControlsView_appLaunchPillView);
      v34 = (SEL *)&selRef_associatedAppBundleIdentifier;
      v35 = &selRef_associatedAppBundleIdentifier;
      v179 = v6;
      if (!v33)
        goto LABEL_17;
      v36 = v33;
      SystemApertureControlsView.appLaunchPillSize.getter();
      v38 = Height - *(double *)&v30 - v37;
      v39 = v36;
      v40 = SystemApertureControlsView.appLaunchPillSize.getter();
      objc_msgSend(v39, sel_setFrame_, v29, v38, v40, v41);

      v29 = *((double *)&static SystemApertureControlsView.Constants.controlsPadding + 1);
      OUTLINED_FUNCTION_56_38();
      Height = CGRectGetMinY(v197);
      if (one-time initialization token for paddingFromAppLaunchPillToButtonShelf == -1)
      {
LABEL_16:
        v30 = static SystemApertureControlsView.Constants.paddingFromAppLaunchPillToButtonShelf;

LABEL_17:
        objc_msgSend((id)v19, v34[229], v29, Height - *(double *)&v30 - Width, v31, Width);
        v43 = *(double *)v28;
        v42 = *(double *)(v28 + 8);
        static Layout.ConversationControls.values.getter((uint64_t)v190);
        v44 = v191;
        static Layout.ConversationControls.values.getter((uint64_t)v192);
        objc_msgSend(v21, v34[229], v42, v43, v44, v193);
        v45 = *MEMORY[0x1E0DC4FF8];
        OUTLINED_FUNCTION_55_32();
        MinY = CGRectGetMinY(v198);
        v48 = OUTLINED_FUNCTION_123(v47, sel_SBUISA_systemApertureObstructedAreaLayoutGuide);
        objc_msgSend(v48, sel_layoutFrame);
        v50 = v49;
        v52 = v51;
        v54 = v53;
        v56 = v55;

        v199.origin.x = v50;
        v199.origin.y = v52;
        v199.size.width = v54;
        v199.size.height = v56;
        v57 = MinY - CGRectGetMaxY(v199);
        v58 = *((_QWORD *)v18 + 117);
        v59 = *(id *)((char *)v1 + v58);
        LODWORD(v60) = 1132068864;
        LODWORD(v61) = 1132068864;
        objc_msgSend(v59, sel_systemLayoutSizeFittingSize_withHorizontalFittingPriority_verticalFittingPriority_, v45, v57, v60, v61);
        OUTLINED_FUNCTION_56_38();
        objc_msgSend(v59, v34[229]);

        static Layout.ConversationControls.values.getter((uint64_t)v194);
        v62 = v195 * -0.5;
        v63 = *(id *)((char *)v1 + v58);
        OUTLINED_FUNCTION_55_32();
        v64 = CGRectGetMaxX(v200) + v62;
        OUTLINED_FUNCTION_71_22();
        objc_msgSend(v63, sel_setCenter_, v64);

        v65 = *(id *)((char *)v1 + v58);
        objc_msgSend(v21, sel_center);
        v67 = v66;
        OUTLINED_FUNCTION_71_22();
        objc_msgSend(v65, sel_setCenter_);

        objc_msgSend(*(id *)((char *)v1 + v58), v35[226]);
        CGRectGetMinX(v201);
        OUTLINED_FUNCTION_51_42();
        v68 = v67 - CGRectGetMaxX(v202);
        OUTLINED_FUNCTION_123(v69, sel_SBUISA_standardInteritemPadding);
        v71 = v70 + v70;
        v72 = v68 - v71;
        SystemApertureControlsView.statusViewHeight.getter(v71, v73, v74, v75);
        OUTLINED_FUNCTION_51_42();
        MaxX = CGRectGetMaxX(v203);
        OUTLINED_FUNCTION_123(v77, sel_SBUISA_standardInteritemPadding);
        v79 = MaxX + v78;
        v80 = OUTLINED_FUNCTION_16_81();
        objc_msgSend(v80, sel_layoutFrame);
        OUTLINED_FUNCTION_27_60();

        v81 = OUTLINED_FUNCTION_41_34();
        v82 = objc_opt_self();
        v83 = OUTLINED_FUNCTION_15();
        *(_QWORD *)(v83 + 16) = v181;
        *(_QWORD *)(v83 + 24) = v179;
        *(double *)(v83 + 32) = v79;
        *(double *)(v83 + 40) = v81;
        *(double *)(v83 + 48) = v72;
        *(double *)(v83 + 56) = v68;
        v84 = OUTLINED_FUNCTION_15();
        *(_QWORD *)(v84 + 16) = partial apply for closure #1 in SystemApertureControlsView.layoutSubviews();
        *(_QWORD *)(v84 + 24) = v83;
        aBlock[4] = thunk for @escaping @callee_guaranteed () -> ()partial apply;
        aBlock[5] = v84;
        aBlock[0] = MEMORY[0x1E0C809B0];
        aBlock[1] = 1107296256;
        aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
        aBlock[3] = &block_descriptor_13_2;
        v85 = _Block_copy(aBlock);
        OUTLINED_FUNCTION_34_43((uint64_t)v85, v86, v87, v88, v89, v90, v91, v92, v177, v179, v181, oslog);
        swift_retain();
        swift_release();
        objc_msgSend((id)v82, sel_performWithoutAnimation_, v85);
        _Block_release(v85);
        LOBYTE(v82) = OUTLINED_FUNCTION_115_0();
        v93 = swift_release();
        if ((v82 & 1) != 0)
        {
          __break(1u);
          JUMPOUT(0x1BD44383CLL);
        }
        v94 = (void *)(*(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x138))(v93);
        v95 = OUTLINED_FUNCTION_16_81();
        objc_msgSend(v95, sel_layoutFrame);
        OUTLINED_FUNCTION_27_60();

        v96 = OUTLINED_FUNCTION_41_34();
        objc_msgSend(v1, sel_bounds);
        objc_msgSend(v94, v34[229], 0.0, v96, CGRectGetWidth(v204), v68);

        v98 = 0;
        v99 = partial apply for closure #1 in SystemApertureControlsView.layoutSubviews();
        goto LABEL_34;
      }
    }
    else
    {
      v100 = OBJC_IVAR____TtC15ConversationKit26SystemApertureControlsView_leadingAccessoryView;
      v101 = *(void **)((char *)v1 + OBJC_IVAR____TtC15ConversationKit26SystemApertureControlsView_leadingAccessoryView);
      if (v101)
      {
        v102 = one-time initialization token for controlsPadding;
        v103 = v101;
        if (v102 != -1)
          swift_once();
        v104 = *((double *)&static SystemApertureControlsView.Constants.controlsPadding + 1);
        static Layout.ConversationControls.values.getter((uint64_t)v190);
        v105 = (Height - v191) * 0.5;
        static Layout.ConversationControls.values.getter((uint64_t)v192);
        v106 = v193;
        static Layout.ConversationControls.values.getter((uint64_t)v194);
        objc_msgSend(v103, sel_setFrame_, v104, v105, v106, v195);

      }
      v107 = OBJC_IVAR____TtC15ConversationKit26SystemApertureControlsView_trailingActionsView;
      v108 = objc_retain(*(id *)((char *)v1
                               + OBJC_IVAR____TtC15ConversationKit26SystemApertureControlsView_trailingActionsView));
      OUTLINED_FUNCTION_14_25();
      v110 = v109;
      v112 = v111;
      LODWORD(v109) = 1132068864;
      LODWORD(v111) = 1132068864;
      objc_msgSend(v108, sel_systemLayoutSizeFittingSize_withHorizontalFittingPriority_verticalFittingPriority_, v110, v112, v109, v111);
      v114 = v113;
      v116 = v115;

      OUTLINED_FUNCTION_14_25();
      Width = CGRectGetWidth(v205);
      if (one-time initialization token for controlsPadding != -1)
        swift_once();
      objc_msgSend(*(id *)((char *)v1 + v107), sel_setFrame_, Width - *(double *)&qword_1EF4FD228 - v114, (Height - v116) * 0.5, v114, v116);
      v117 = *(void **)((char *)v1 + v100);
      if (v117)
      {
        v118 = *(void **)((char *)v1 + v107);
        v119 = v117;
        objc_msgSend(v118, sel_frame);
        MinX = CGRectGetMinX(v206);
        OUTLINED_FUNCTION_59_33();
        v121 = MinX - CGRectGetMaxX(v207);
        OUTLINED_FUNCTION_123(v122, sel_SBUISA_standardInteritemPadding);
        v29 = v121 - (v123 + v123);
        OUTLINED_FUNCTION_59_33();
        v124 = CGRectGetMaxX(v208);
        OUTLINED_FUNCTION_123(v125, sel_SBUISA_standardInteritemPadding);
        Width = v126;

        v31 = v124 + Width;
      }
      else
      {
        objc_msgSend(*(id *)((char *)v1 + v107), sel_frame);
        v131 = CGRectGetMinX(v209);
        v31 = *((double *)&static SystemApertureControlsView.Constants.controlsPadding + 1);
        v132 = v131 - *((double *)&static SystemApertureControlsView.Constants.controlsPadding + 1);
        OUTLINED_FUNCTION_123(v133, sel_SBUISA_standardInteritemPadding);
        v29 = v132 - v134;
      }
      v28 = 0x1F4074000;
      v18 = (int *)&selRef_associatedAppBundleIdentifier;
      objc_msgSend(OUTLINED_FUNCTION_16_81(), sel_layoutFrame);
      OUTLINED_FUNCTION_32_49();
      Height = Height - OUTLINED_FUNCTION_29_62();
      v135 = objc_opt_self();
      v19 = OUTLINED_FUNCTION_15();
      *(_QWORD *)(v19 + 16) = v5;
      *(_QWORD *)(v19 + 24) = v6;
      *(double *)(v19 + 32) = v29;
      *(double *)(v19 + 40) = Height;
      v34 = v5;
      v21 = (_QWORD *)OUTLINED_FUNCTION_15();
      v21[2] = partial apply for closure #2 in SystemApertureControlsView.layoutSubviews();
      v21[3] = v19;
      v187[4] = partial apply for thunk for @callee_guaranteed () -> ();
      v188 = (char **)v21;
      v187[0] = MEMORY[0x1E0C809B0];
      v187[1] = 1107296256;
      v187[2] = thunk for @escaping @callee_guaranteed () -> ();
      v187[3] = &block_descriptor_85;
      v39 = _Block_copy(v187);
      v35 = v188;
      OUTLINED_FUNCTION_34_43((uint64_t)v39, v136, v137, v138, v139, v140, v141, v142, v177, v178, v180, oslog);
      swift_retain();
      swift_release();
      objc_msgSend((id)v135, sel_performWithoutAnimation_, v39);
      _Block_release(v39);
      LOBYTE(v135) = OUTLINED_FUNCTION_115_0();
      swift_release();
      if ((v135 & 1) == 0)
      {
        objc_msgSend(OUTLINED_FUNCTION_16_81(), sel_layoutFrame);
        OUTLINED_FUNCTION_32_49();
        v143 = OUTLINED_FUNCTION_29_62();
        ObjectType = swift_getObjectType();
        v182 = (uint64_t)v34;
        v97 = -[SEL setFrame:](v34, sel_setFrame_, v31, v143 - (*(double (**)(uint64_t, uint64_t))(v6 + 32))(ObjectType, v6), v29, Height);
        v99 = 0;
        v98 = partial apply for closure #2 in SystemApertureControlsView.layoutSubviews();
LABEL_34:
        v145 = OUTLINED_FUNCTION_123((uint64_t)v97, sel_effectiveUserInterfaceLayoutDirection);
        if (v145 == (id)1)
        {
          v153 = *(void **)((char *)v1
                          + OBJC_IVAR____TtC15ConversationKit26SystemApertureControlsView_leadingAccessoryView);
          v154 = *(void **)((char *)v1
                          + OBJC_IVAR____TtC15ConversationKit26SystemApertureControlsView_trailingActionsView);
          aBlock[0] = MEMORY[0x1E0DEE9D8];
          if (v153)
          {
            v155 = v153;
            OUTLINED_FUNCTION_34_43((uint64_t)v155, v156, v157, v158, v159, v160, v161, v162, v177, v179, v182, oslog);
            v163 = v155;
            v164 = v154;
            OUTLINED_FUNCTION_70_23();
          }
          OUTLINED_FUNCTION_34_43(1, v146, v147, v148, v149, v150, v151, v152, v177, v179, v182, oslog);
          v165 = v154;
          v166 = v154;
          OUTLINED_FUNCTION_70_23();
        }
        OUTLINED_FUNCTION_26_50((uint64_t)v145, v146, v147, v148, v149, v150, v151, v152, v177, v179, v182, oslog);
        outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v99);
        outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v98);
LABEL_39:
        OUTLINED_FUNCTION_50_1();
        return;
      }
      __break(1u);
    }
    swift_once();
    goto LABEL_16;
  }
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v13 = OUTLINED_FUNCTION_17_2();
  osloga = OUTLINED_FUNCTION_3(v13, (uint64_t)&static Logger.conversationControls);
  v14 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(osloga, v14))
  {
    v15 = (uint8_t *)OUTLINED_FUNCTION_105();
    *(_WORD *)v15 = 0;
    OUTLINED_FUNCTION_130(&dword_1BD004000, osloga, v14, "[SystemAperture] statusView has unexpected type", v15);
    OUTLINED_FUNCTION_60();
  }
  OUTLINED_FUNCTION_50_1();

}

id closure #1 in SystemApertureControlsView.layoutSubviews()(void *a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  uint64_t ObjectType;

  ObjectType = swift_getObjectType();
  objc_msgSend(a1, sel_setFrame_, a3, a4, a5, a6);
  objc_msgSend(a1, sel_setNeedsLayout);
  objc_msgSend(a1, sel_layoutIfNeeded);
  (*(void (**)(uint64_t, uint64_t))(a2 + 32))(ObjectType, a2);
  objc_msgSend(a1, sel_frame);
  return objc_msgSend(a1, sel_setFrame_);
}

id closure #2 in SystemApertureControlsView.layoutSubviews()(void *a1, double a2, double a3)
{
  objc_msgSend(a1, sel_setFrame_, 0.0, 0.0, a2, a3);
  objc_msgSend(a1, sel_setNeedsLayout);
  return objc_msgSend(a1, sel_layoutIfNeeded);
}

id SystemApertureControlsView.updateAdditionalView(alpha:)(double a1)
{
  uint64_t v1;

  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC15ConversationKit26SystemApertureControlsView_leadingAccessoryView), sel_setAlpha_);
  return objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC15ConversationKit26SystemApertureControlsView_trailingActionsView), sel_setAlpha_, a1);
}

void SystemApertureControlsView.showAppLaunchPill(buttonType:menuHost:target:action:)(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v6;
  void *v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  id v23;

  v6 = v5;
  v12 = *(void **)((char *)v5 + OBJC_IVAR____TtC15ConversationKit26SystemApertureControlsView_appLaunchPillView);
  if (v12)
  {
    v13 = (uint64_t)v12 + OBJC_IVAR____TtC15ConversationKit32ConversationHUDAppLaunchPillView_buttonType;
    v23 = v12;
    static ConversationControlsAppLaunchButtonType.== infix(_:_:)(v13, a1);
    if ((v14 & 1) != 0)
    {
      if (one-time initialization token for conversationControls != -1)
        swift_once();
      v15 = OUTLINED_FUNCTION_17_2();
      v16 = OUTLINED_FUNCTION_3(v15, (uint64_t)&static Logger.conversationControls);
      v17 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v16, v17))
      {
        v18 = (uint8_t *)OUTLINED_FUNCTION_105();
        *(_WORD *)v18 = 0;
        OUTLINED_FUNCTION_130(&dword_1BD004000, v16, v17, "[SystemAperture] Updating AppLaunchButton", v18);
        OUTLINED_FUNCTION_60();
      }

      updateAppLaunchPillIfNeeded #1 () in SystemApertureControlsView.showAppLaunchPill(buttonType:menuHost:target:action:)((uint64_t)v6, a4, a5);
      return;
    }

  }
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v19 = OUTLINED_FUNCTION_17_2();
  v20 = OUTLINED_FUNCTION_3(v19, (uint64_t)&static Logger.conversationControls);
  v21 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = (uint8_t *)OUTLINED_FUNCTION_105();
    *(_WORD *)v22 = 0;
    OUTLINED_FUNCTION_130(&dword_1BD004000, v20, v21, "[SystemAperture] Showing AppLaunchButton", v22);
    OUTLINED_FUNCTION_60();
  }

  addAppLaunchPill #1 (menuHost:target:action:) in SystemApertureControlsView.showAppLaunchPill(buttonType:menuHost:target:action:)(a2, a3, a4, a5, v6, a1);
}

void updateAppLaunchPillIfNeeded #1 () in SystemApertureControlsView.showAppLaunchPill(buttonType:menuHost:target:action:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  _QWORD *v6;
  void (*v7)(__int128 *__return_ptr);
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[3];
  uint64_t v32;
  uint64_t v33;

  v3 = *(void **)(a1 + OBJC_IVAR____TtC15ConversationKit26SystemApertureControlsView_appLaunchPillView);
  if (v3)
  {
    v6 = (_QWORD *)MEMORY[0x1E0DEEDD8];
    v7 = *(void (**)(__int128 *__return_ptr))((*MEMORY[0x1E0DEEDD8] & **(_QWORD **)(a1
                                                                                             + OBJC_IVAR____TtC15ConversationKit26SystemApertureControlsView_controlsManager))
                                                       + 0x900);
    v8 = v3;
    v7(&v28);
    if (!v29)
    {

      outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)&v28, &demangling cache variable for type metadata for Activity?);
      return;
    }
    outlined init with take of Notice(&v28, (uint64_t)v31);
    v9 = v32;
    v10 = v33;
    __swift_project_boxed_opaque_existential_1(v31, v32);
    v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v9, v10);
    v13 = v12;
    (*(void (**)(__int128 *__return_ptr))((*v6 & *v8) + 0xC8))(&v28);
    v14 = v29;
    if (v29)
    {
      v27 = a3;
      v15 = v30;
      v16 = __swift_project_boxed_opaque_existential_1(&v28, v29);
      v17 = *(_QWORD *)(v14 - 8);
      v18 = MEMORY[0x1E0C80A78](v16);
      v20 = (char *)&v26 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v17 + 16))(v20, v18);
      outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)&v28, &demangling cache variable for type metadata for Activity?);
      v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(v14, v15);
      v23 = v22;
      (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v14);
      if (v11 == v21 && v13 == v23)
      {

        swift_bridgeObjectRelease_n();
        goto LABEL_15;
      }
      v25 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      a3 = v27;
      v6 = (_QWORD *)MEMORY[0x1E0DEEDD8];
      if ((v25 & 1) != 0)
      {
LABEL_13:

LABEL_15:
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
        return;
      }
    }
    else
    {
      outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)&v28, &demangling cache variable for type metadata for Activity?);
      swift_bridgeObjectRelease();
    }
    outlined init with copy of IDSLookupManager((uint64_t)v31, (uint64_t)&v28);
    (*(void (**)(__int128 *))((*v6 & *v8) + 0xD0))(&v28);
    (*(void (**)(uint64_t, uint64_t))((*v6 & *v8) + 0x1C8))(a2, a3);
    goto LABEL_13;
  }
}

void addAppLaunchPill #1 (menuHost:target:action:) in SystemApertureControlsView.showAppLaunchPill(buttonType:menuHost:target:action:)(void *a1, void *a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;
  _QWORD *v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  os_log_type_t v37;
  uint8_t *v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t (*v41)(void);
  _QWORD *v42;
  uint64_t v43;
  id v44;
  id v45;
  _QWORD *v46;
  _QWORD *v47;
  id v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(__n128);
  uint64_t aBlock[6];
  _QWORD v58[5];

  v51 = a6;
  v52 = a1;
  v54 = a3;
  v55 = a4;
  v53 = a2;
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ConversationControlsAppLaunchButtonType(0);
  MEMORY[0x1E0C80A78](v10);
  v50 = (uint64_t)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ConversationControlsRecipe();
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = *(void (**)(__n128))((*MEMORY[0x1E0DEEDD8] & *a5) + 0x110);
  v56(v13);
  v16 = &v15[*(int *)(v12 + 60)];
  v18 = *(_QWORD *)v16;
  v17 = *((_QWORD *)v16 + 1);
  v20 = *((_QWORD *)v16 + 2);
  v19 = *((_QWORD *)v16 + 3);
  v21 = *((_QWORD *)v16 + 4);
  v22 = v16[40];
  outlined copy of ConversationControlsRecipe.Actions?(*(_QWORD *)v16, v17, v20, v19, v21, v16[40]);
  outlined destroy of ConversationControlsRecipe((uint64_t)v15);
  if (v22 > 0xFD)
  {
LABEL_4:
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v23 = type metadata accessor for Logger();
    __swift_project_value_buffer(v23, (uint64_t)&static Logger.conversationControls);
    v24 = a5;
    v25 = Logger.logObject.getter();
    v26 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc();
      v28 = swift_slowAlloc();
      aBlock[0] = v28;
      *(_DWORD *)v27 = 136315138;
      ((void (*)(void))v56)();
      __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v12);
      specialized >> prefix<A>(_:)((uint64_t)v9);
      v30 = v29;
      v32 = v31;
      outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v9, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
      v58[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v30, v32, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v28, -1, -1);
      v33 = v27;
      goto LABEL_8;
    }

    return;
  }
  if ((v22 & 0x80) == 0)
  {
    outlined consume of ConversationControlsRecipe.Actions?(v18, v17, v20, v19, v21, v22);
    goto LABEL_4;
  }
  v34 = *(_QWORD *)(v18 + 16);
  v35 = outlined consume of ConversationControlsRecipe.Actions?(v18, v17, v20, v19, v21, v22);
  if (!v34)
    goto LABEL_4;
  if (*(_QWORD *)((char *)a5 + OBJC_IVAR____TtC15ConversationKit26SystemApertureControlsView_appLaunchPillView))
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v36 = type metadata accessor for Logger();
    __swift_project_value_buffer(v36, (uint64_t)&static Logger.conversationControls);
    v25 = Logger.logObject.getter();
    v37 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v25, v37))
      goto LABEL_9;
    v38 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v38 = 0;
    _os_log_impl(&dword_1BD004000, v25, v37, "Ignoring request to show app launch pill view because it was already shown", v38, 2u);
    v33 = v38;
LABEL_8:
    MEMORY[0x1C3B751B8](v33, -1, -1);
LABEL_9:

    return;
  }
  v39 = *(_QWORD **)((char *)a5 + OBJC_IVAR____TtC15ConversationKit26SystemApertureControlsView_controlsManager);
  v40 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  (*(void (**)(_QWORD *__return_ptr, uint64_t))((*MEMORY[0x1E0DEEDD8] & *v39) + 0x900))(v58, v35);
  v41 = *(uint64_t (**)(void))((*v40 & *a5) + 0xC8);
  v42 = v39;
  LOBYTE(v39) = v41();
  v43 = v50;
  outlined init with copy of ConversationControlsAction(v51, v50, type metadata accessor for ConversationControlsAppLaunchButtonType);
  outlined init with copy of Activity?((uint64_t)v58, (uint64_t)aBlock);
  objc_allocWithZone((Class)type metadata accessor for ConversationHUDAppLaunchPillView());
  v44 = v52;
  v45 = v52;
  v46 = ConversationHUDAppLaunchPillView.init(controlsManager:controlsContext:buttonType:menuHostViewController:activity:)(v42, (char)v39, v43, v44, v53, (uint64_t)aBlock);
  (*(void (**)(uint64_t, uint64_t))((*v40 & *v46) + 0x1C8))(v54, v55);
  v47 = v46;
  SystemApertureControlsView.appLaunchPillView.setter((uint64_t)v46);
  objc_msgSend(a5, sel_addSubview_, v47);
  v48 = objc_msgSend(a5, sel_systemApertureElementContext);
  aBlock[4] = (uint64_t)TPNumberPadCharacter.rawValue.getter;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = (uint64_t)&block_descriptor_31_1;
  v49 = _Block_copy(aBlock);
  objc_msgSend(v48, sel_setElementNeedsUpdateWithCoordinatedAnimations_, v49);
  _Block_release(v49);

  swift_unknownObjectRelease();
  outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v58, &demangling cache variable for type metadata for Activity?);
}

Swift::Void __swiftcall SystemApertureControlsView.removeAppLaunchPill()()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  void *v4;
  _QWORD v5[6];

  v1 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit26SystemApertureControlsView_appLaunchPillView);
  if (v1)
    objc_msgSend(v1, sel_removeFromSuperview);
  SystemApertureControlsView.appLaunchPillView.setter(0);
  v3 = OUTLINED_FUNCTION_25_1(v2, sel_systemApertureElementContext);
  v5[4] = TPNumberPadCharacter.rawValue.getter;
  v5[5] = 0;
  v5[0] = MEMORY[0x1E0C809B0];
  v5[1] = 1107296256;
  v5[2] = thunk for @escaping @callee_guaranteed () -> ();
  v5[3] = &block_descriptor_16_2;
  v4 = _Block_copy(v5);
  objc_msgSend(v3, sel_setElementNeedsUpdateWithCoordinatedAnimations_, v4);
  _Block_release(v4);
  swift_unknownObjectRelease();
}

uint64_t SystemApertureControlsView.systemAperturePreferredContentSize.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  id v13;
  uint64_t v15;

  v1 = OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_77();
  v5 = v4 - v3;
  v7 = OUTLINED_FUNCTION_25_1(v6, sel_window);
  if (v7)
  {
    objc_msgSend(v7, sel_frame);
    OUTLINED_FUNCTION_42_47();
    v8 = OUTLINED_FUNCTION_40_51();
  }
  else
  {
    v8 = 1.79769313e308;
  }
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x110))();
  v9 = v5 + *(int *)(v1 + 60);
  v10 = *(_QWORD *)v9;
  v11 = *(unsigned __int8 *)(v9 + 40);
  outlined copy of ConversationControlsRecipe.Actions?(*(_QWORD *)v9, *(_QWORD *)(v9 + 8), *(_QWORD *)(v9 + 16), *(_QWORD *)(v9 + 24), *(_QWORD *)(v9 + 32), *(unsigned __int8 *)(v9 + 40));
  v12 = outlined destroy of ConversationControlsRecipe(v5);
  if (v11 <= 0xFD)
  {
    if ((v11 & 0x80) != 0)
    {
      v15 = *(_QWORD *)(v10 + 16);
      v12 = OUTLINED_FUNCTION_15_89();
      if (v15)
      {
        SystemApertureControlsView.calculateHeightForExpandedHUD()();
        return *(_QWORD *)&v8;
      }
    }
    else
    {
      v12 = OUTLINED_FUNCTION_15_89();
    }
  }
  v13 = OUTLINED_FUNCTION_25_1(v12, sel_SBUISA_systemApertureLeadingConcentricContentLayoutGuide);
  objc_msgSend(v13, sel_layoutFrame);

  return *(_QWORD *)&v8;
}

void SystemApertureControlsView.configureSubviews()(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  id v3;
  char v4;
  char v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  double v9;
  double v10;
  void *v11;

  v2 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC15ConversationKit26SystemApertureControlsView_statusView);
  v3 = OUTLINED_FUNCTION_123(a1, sel_layer);
  v4 = SystemApertureControlsView.allowUserInteractionWithSubview.getter();
  OUTLINED_FUNCTION_76_20(v4, sel_setAllowsHitTesting_);

  v5 = SystemApertureControlsView.allowUserInteractionWithSubview.getter();
  OUTLINED_FUNCTION_77_14(v5, sel_setUserInteractionEnabled_);
  objc_msgSend(v1, sel_addSubview_, v2);
  v6 = OUTLINED_FUNCTION_74_17(*v1);
  if (v6)
  {
    v7 = (void *)v6;
    objc_msgSend(v1, sel_addSubview_, v6);

  }
  v8 = OBJC_IVAR____TtC15ConversationKit26SystemApertureControlsView_trailingActionsView;
  objc_msgSend(v1, sel_addSubview_, *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC15ConversationKit26SystemApertureControlsView_trailingActionsView));
  LODWORD(v9) = 1148846080;
  objc_msgSend(*(id *)((char *)v1 + v8), sel_setContentCompressionResistancePriority_forAxis_, 0, v9);
  LODWORD(v10) = 1148846080;
  objc_msgSend(*(id *)((char *)v1 + v8), sel_setContentCompressionResistancePriority_forAxis_, 1, v10);
  v11 = (void *)OUTLINED_FUNCTION_73_23(*v1);
  objc_msgSend(v1, sel_insertSubview_belowSubview_, v11, v2);

  SystemApertureControlsView.updateLeadingAccessoryView()();
}

id SystemApertureControlsView.createLeadingAccessoryView()()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(void);
  id v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  id v12;
  Class isa;
  uint64_t v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v23;
  uint64_t v24[51];

  OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v2);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_66_27();
  v5 = *(void (**)(void))((*MEMORY[0x1E0DEEDD8] & v4) + 0x110);
  v5();
  if (*(_QWORD *)(v1 + 56))
  {
    v6 = *(id *)(v1 + 56);
    OUTLINED_FUNCTION_31_24();
    objc_msgSend(v6, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0, static Layout.ConversationControls.values.getter((uint64_t)v24));
    v7 = (void *)objc_opt_self();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    v8 = OUTLINED_FUNCTION_15();
    *(_OWORD *)(v8 + 16) = xmmword_1BD6441C0;
    v9 = objc_msgSend(v6, sel_heightAnchor);
    v10 = OUTLINED_FUNCTION_64_23(v9);

    *(_QWORD *)(v8 + 32) = v10;
    v11 = objc_msgSend(v6, sel_widthAnchor);
    v12 = OUTLINED_FUNCTION_64_23(v11);

    *(_QWORD *)(v8 + 40) = v12;
    specialized Array._endMutation()();
    type metadata accessor for NSLayoutConstraint();
    isa = Array._bridgeToObjectiveC()().super.isa;
    OUTLINED_FUNCTION_27();
    objc_msgSend(v7, sel_activateConstraints_, isa);

  }
  else
  {
    OUTLINED_FUNCTION_31_24();
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v14 = OUTLINED_FUNCTION_17_2();
    __swift_project_value_buffer(v14, (uint64_t)&static Logger.conversationControls);
    v15 = v0;
    v16 = Logger.logObject.getter();
    v17 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)OUTLINED_FUNCTION_105();
      v23 = OUTLINED_FUNCTION_105();
      v24[0] = v23;
      *(_DWORD *)v18 = 136315138;
      ((void (*)(uint64_t, uint64_t))v5)(v23, v19);
      v20 = String.init<A>(describing:)();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v20, v21, v24);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      OUTLINED_FUNCTION_27();
      _os_log_impl(&dword_1BD004000, v16, v17, "Unable to obtain leadingAccessoryView for recipe: %s", v18, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_60();
    }

    return 0;
  }
  return v6;
}

void SystemApertureControlsView.updateLeadingAccessoryView()()
{
  char *v0;
  id v1;
  uint64_t v2;
  id v3;
  char v4;
  id v5;

  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC15ConversationKit26SystemApertureControlsView_leadingAccessoryView], sel_removeFromSuperview);
  v1 = SystemApertureControlsView.createLeadingAccessoryView()();
  if (v1)
  {
    v2 = (uint64_t)v1;
    v5 = v1;
    SystemApertureControlsView.leadingAccessoryView.setter(v2);
    v3 = objc_msgSend(v5, sel_layer);
    v4 = SystemApertureControlsView.allowUserInteractionWithSubview.getter();
    OUTLINED_FUNCTION_77_14(v4, sel_setAllowsHitTesting_);

    objc_msgSend(v5, sel_setUserInteractionEnabled_, SystemApertureControlsView.allowUserInteractionWithSubview.getter() & 1);
    objc_msgSend(v0, sel_addSubview_, v5);
    OUTLINED_FUNCTION_7_1(v5);
  }
}

uint64_t SystemApertureControlsView.allowUserInteractionWithSubview.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(void);
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  char v15;

  v1 = OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_66_27();
  v7 = *(void (**)(void))((*MEMORY[0x1E0DEEDD8] & v6) + 0x110);
  v7();
  LOBYTE(v1) = *(_BYTE *)(v0 + *(int *)(v1 + 64));
  v8 = OUTLINED_FUNCTION_31_24();
  if ((v1 & 1) != 0)
  {
    v9 = 1;
  }
  else
  {
    ((void (*)(uint64_t))v7)(v8);
    v12 = 24;
    v13 = 0u;
    v14 = 0u;
    v15 = 6;
    static ConversationControlsType.== infix(_:_:)((uint64_t)v4);
    v9 = v10;
    outlined destroy of ConversationControlsType((uint64_t)&v12);
    OUTLINED_FUNCTION_10_12();
  }
  return v9 & 1;
}

id SystemApertureControlsView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

void SystemApertureControlsView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id SystemApertureControlsView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)ObjC metadata update function for SystemApertureControlsView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t protocol witness for SystemApertureFaceTimeControlsView.showAppLaunchPill(buttonType:menuHost:target:action:) in conformance SystemApertureControlsView()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1D0))();
}

uint64_t protocol witness for SystemApertureFaceTimeControlsView.removeAppLaunchPill() in conformance SystemApertureControlsView()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1D8))();
}

uint64_t protocol witness for FaceTimeControlsView.ephemeralAlert.getter in conformance SystemApertureControlsView()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8))();
}

uint64_t protocol witness for FaceTimeControlsView.ephemeralAlert.setter in conformance SystemApertureControlsView()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x100))();
}

uint64_t protocol witness for FaceTimeControlsView.ephemeralAlertNotice.getter in conformance SystemApertureControlsView()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x138))();
}

uint64_t protocol witness for FaceTimeControlsView.ephemeralAlertTimer.getter in conformance SystemApertureControlsView()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

uint64_t protocol witness for FaceTimeControlsView.showCallDetailsButton.getter in conformance SystemApertureControlsView()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x130))();
}

uint64_t protocol witness for FaceTimeControlsView.buttonShelfView.getter in conformance SystemApertureControlsView()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x150))();
}

uint64_t protocol witness for FaceTimeControlsView.updateAdditionalView(alpha:) in conformance SystemApertureControlsView()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1C8))();
}

uint64_t protocol witness for SystemAperturePreferredContentSizeProvider.systemAperturePreferredContentSize.getter in conformance SystemApertureControlsView()
{
  _QWORD **v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **v0) + 0x1E0))();
}

uint64_t protocol witness for ControlsView.cnkContentAlpha.getter in conformance SystemApertureControlsView()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t protocol witness for ControlsView.cnkContentAlpha.setter in conformance SystemApertureControlsView()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t (*protocol witness for ControlsView.cnkContentAlpha.modify in conformance SystemApertureControlsView(_QWORD *a1))()
{
  _QWORD *v1;
  _QWORD *v3;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v1) + 0xC0))();
  return protocol witness for ControlsView.cnkContentAlpha.modify in conformance SystemApertureOngoingTelephonyControlsView;
}

uint64_t protocol witness for ControlsView.recipe.getter in conformance SystemApertureControlsView()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x110))();
}

uint64_t protocol witness for ControlsView.recipe.setter in conformance SystemApertureControlsView()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x118))();
}

uint64_t (*protocol witness for ControlsView.recipe.modify in conformance SystemApertureControlsView(_QWORD *a1))()
{
  _QWORD *v1;
  _QWORD *v3;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x120))();
  return protocol witness for ControlsView.cnkContentAlpha.modify in conformance SystemApertureOngoingTelephonyControlsView;
}

void specialized closure #1 in FaceTimeControlsView.displayEphemeralAlert()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  id v4;
  void *v5;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x1C3B752C0](v1);
  if (v2)
  {
    v3 = (_QWORD *)v2;
    v4 = objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC15ConversationKit27ConversationHUDControlsView_statusView), sel_setAlpha_, 0.0);
    v5 = (void *)(*(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & *v3) + 0x130))(v4);
    objc_msgSend(v5, sel_setAlpha_, 0.0);

  }
}

{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  id v4;
  _QWORD *v5;
  void *v6;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x1C3B752C0](v1);
  if (v2)
  {
    v3 = (_QWORD *)v2;
    v4 = objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC15ConversationKit26SystemApertureControlsView_statusView), sel_setAlpha_, 0.0);
    v5 = (_QWORD *)MEMORY[0x1E0DEEDD8];
    v6 = (void *)(*(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & *v3) + 0x138))(v4);
    objc_msgSend(v6, sel_setAlpha_, 0.0);

    (*(void (**)(double))((*v5 & *v3) + 0x1C8))(0.0);
  }
}

void specialized closure #2 in FaceTimeControlsView.displayEphemeralAlert()(char a1, uint64_t a2)
{
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  void *v8;
  char v9;
  void *v10;
  void *v11;
  char v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  void *v17;
  uint64_t (*v18)(void);
  void *v19;
  _QWORD *v20;
  void *v21;
  _QWORD *v22;
  void *v23;
  void *v24;
  double v25;
  uint64_t v26;
  void *v27;
  _QWORD *v28;
  id v29;
  _QWORD aBlock[6];

  v3 = a2 + 16;
  swift_beginAccess();
  v4 = (_QWORD *)MEMORY[0x1C3B752C0](v3);
  if (v4)
  {
    v5 = v4;
    v6 = (_QWORD *)MEMORY[0x1E0DEEDD8];
    v7 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v4) + 0xE0))();
    if (v7)
    {
      v10 = (void *)v7;
      v11 = v8;
      v12 = v9 & 1;
      if ((a1 & 1) == 0)
      {
        if (one-time initialization token for conversationControls != -1)
          swift_once();
        v13 = type metadata accessor for Logger();
        __swift_project_value_buffer(v13, (uint64_t)&static Logger.conversationControls);
        v14 = Logger.logObject.getter();
        v15 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v14, v15))
        {
          v16 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v16 = 0;
          _os_log_impl(&dword_1BD004000, v14, v15, "displayEphemeralAlert: statusView.alpha/ephemeralAlertStack.alpha -> 0 didn't finish", v16, 2u);
          MEMORY[0x1C3B751B8](v16, -1, -1);
        }

        v17 = (void *)(*(uint64_t (**)(id))((*v6 & *v5) + 0x130))(objc_msgSend(*(id *)((char *)v5 + OBJC_IVAR____TtC15ConversationKit27ConversationHUDControlsView_statusView), sel_setAlpha_, 0.0));
        objc_msgSend(v17, sel_setAlpha_, 0.0);

      }
      v18 = *(uint64_t (**)(void))((*v6 & *v5) + 0x130);
      v19 = (void *)v18();
      objc_msgSend(v19, sel_setHidden_, 1);

      v20 = (_QWORD *)v18();
      v21 = (void *)(*(uint64_t (**)(void))((*v6 & *v20) + 0x88))();

      objc_msgSend(v21, sel_setAttributedText_, v10);
      v22 = (_QWORD *)v18();
      v23 = (void *)(*(uint64_t (**)(void))((*v6 & *v22) + 0xA0))();

      objc_msgSend(v23, sel_setAttributedText_, v11);
      v24 = (void *)objc_opt_self();
      if (one-time initialization token for shared != -1)
        swift_once();
      v25 = (*(double (**)(void))(*(_QWORD *)static Defaults.shared + 1016))();
      v26 = swift_allocObject();
      *(_QWORD *)(v26 + 16) = v5;
      *(_QWORD *)(v26 + 24) = v10;
      *(_QWORD *)(v26 + 32) = v11;
      *(_BYTE *)(v26 + 40) = v12;
      aBlock[4] = partial apply for specialized closure #1 in closure #2 in FaceTimeControlsView.displayEphemeralAlert();
      aBlock[5] = v26;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
      aBlock[3] = &block_descriptor_87;
      v27 = _Block_copy(aBlock);
      v28 = v5;
      v5 = v10;
      v29 = v11;
      swift_release();
      objc_msgSend(v24, sel_animateWithDuration_animations_, v27, v25);
      _Block_release(v27);

    }
  }
}

{
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  void *v8;
  char v9;
  void *v10;
  void *v11;
  char v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  void *v17;
  uint64_t (*v18)(void);
  void *v19;
  _QWORD *v20;
  void *v21;
  _QWORD *v22;
  void *v23;
  void *v24;
  double v25;
  uint64_t v26;
  void *v27;
  _QWORD *v28;
  id v29;
  _QWORD aBlock[6];

  v3 = a2 + 16;
  swift_beginAccess();
  v4 = (_QWORD *)MEMORY[0x1C3B752C0](v3);
  if (v4)
  {
    v5 = v4;
    v6 = (_QWORD *)MEMORY[0x1E0DEEDD8];
    v7 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v4) + 0xF8))();
    if (v7)
    {
      v10 = (void *)v7;
      v11 = v8;
      v12 = v9 & 1;
      if ((a1 & 1) == 0)
      {
        if (one-time initialization token for conversationControls != -1)
          swift_once();
        v13 = type metadata accessor for Logger();
        __swift_project_value_buffer(v13, (uint64_t)&static Logger.conversationControls);
        v14 = Logger.logObject.getter();
        v15 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v14, v15))
        {
          v16 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v16 = 0;
          _os_log_impl(&dword_1BD004000, v14, v15, "displayEphemeralAlert: statusView.alpha/ephemeralAlertStack.alpha -> 0 didn't finish", v16, 2u);
          MEMORY[0x1C3B751B8](v16, -1, -1);
        }

        v17 = (void *)(*(uint64_t (**)(id))((*v6 & *v5) + 0x138))(objc_msgSend(*(id *)((char *)v5 + OBJC_IVAR____TtC15ConversationKit26SystemApertureControlsView_statusView), sel_setAlpha_, 0.0));
        objc_msgSend(v17, sel_setAlpha_, 0.0);

        (*(void (**)(double))((*v6 & *v5) + 0x1C8))(0.0);
      }
      v18 = *(uint64_t (**)(void))((*v6 & *v5) + 0x138);
      v19 = (void *)v18();
      objc_msgSend(v19, sel_setHidden_, 1);

      v20 = (_QWORD *)v18();
      v21 = (void *)(*(uint64_t (**)(void))((*v6 & *v20) + 0x88))();

      objc_msgSend(v21, sel_setAttributedText_, v10);
      v22 = (_QWORD *)v18();
      v23 = (void *)(*(uint64_t (**)(void))((*v6 & *v22) + 0xA0))();

      objc_msgSend(v23, sel_setAttributedText_, v11);
      v24 = (void *)objc_opt_self();
      if (one-time initialization token for shared != -1)
        swift_once();
      v25 = (*(double (**)(void))(*(_QWORD *)static Defaults.shared + 1016))();
      v26 = swift_allocObject();
      *(_QWORD *)(v26 + 16) = v5;
      *(_QWORD *)(v26 + 24) = v10;
      *(_QWORD *)(v26 + 32) = v11;
      *(_BYTE *)(v26 + 40) = v12;
      aBlock[4] = partial apply for specialized closure #1 in closure #2 in FaceTimeControlsView.displayEphemeralAlert();
      aBlock[5] = v26;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
      aBlock[3] = &block_descriptor_47_1;
      v27 = _Block_copy(aBlock);
      v28 = v5;
      v5 = v10;
      v29 = v11;
      swift_release();
      objc_msgSend(v24, sel_animateWithDuration_animations_, v27, v25);
      _Block_release(v27);

    }
  }
}

void specialized closure #1 in closure #2 in FaceTimeControlsView.displayEphemeralAlert()(_QWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  id v6;
  _QWORD *v7;
  uint64_t (*v8)(void);
  void *v9;
  void *v10;
  uint64_t v11;
  _QWORD *v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  void *v19;
  double v20;
  uint64_t v21;
  void *v22;
  _QWORD *v23;
  id v24;
  uint64_t aBlock[6];

  v6 = objc_msgSend(*(id *)((char *)a1 + OBJC_IVAR____TtC15ConversationKit27ConversationHUDControlsView_statusView), sel_setAlpha_, 0.0);
  v7 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v8 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x130);
  v9 = (void *)((uint64_t (*)(id))v8)(v6);
  objc_msgSend(v9, sel_setHidden_, 0);

  v10 = (void *)v8();
  (*(void (**)(void))((*v7 & *a1) + 0xF8))();
  objc_msgSend(v10, sel_setAlpha_);

  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v11 = type metadata accessor for Logger();
  __swift_project_value_buffer(v11, (uint64_t)&static Logger.conversationControls);
  v12 = a1;
  v13 = Logger.logObject.getter();
  v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc();
    v16 = swift_slowAlloc();
    *(_DWORD *)v15 = 136315138;
    aBlock[0] = v16;
    (*(void (**)(void))((*v7 & *v12) + 0xB0))();
    v17 = String.init<A>(reflecting:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v17, v18, aBlock);
    v7 = (_QWORD *)MEMORY[0x1E0DEEDD8];
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v13, v14, "⇢ [%s] 2. Displaying ephemeral alert", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v16, -1, -1);
    MEMORY[0x1C3B751B8](v15, -1, -1);

    if ((a4 & 1) == 0)
      return;
  }
  else
  {

    if ((a4 & 1) == 0)
      return;
  }
  v19 = (void *)objc_opt_self();
  if (one-time initialization token for shared != -1)
    swift_once();
  v20 = (*(double (**)(void))(*(_QWORD *)static Defaults.shared + 1008))();
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = v12;
  aBlock[4] = (uint64_t)partial apply for specialized closure #1 in closure #1 in closure #2 in FaceTimeControlsView.displayEphemeralAlert();
  aBlock[5] = v21;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)thunk for @escaping @callee_guaranteed @Sendable (@guaranteed NSTimer) -> ();
  aBlock[3] = (uint64_t)&block_descriptor_93;
  v22 = _Block_copy(aBlock);
  v23 = v12;
  swift_release();
  v24 = objc_msgSend(v19, sel_scheduledTimerWithTimeInterval_repeats_block_, 0, v22, v20);
  _Block_release(v22);
  (*(void (**)(id))((*v7 & *v23) + 0xD0))(v24);
}

{
  id v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t (*v9)(void);
  void *v10;
  void *v11;
  uint64_t v12;
  _QWORD *v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  void *v20;
  double v21;
  uint64_t v22;
  void *v23;
  _QWORD *v24;
  id v25;
  uint64_t aBlock[6];

  v6 = objc_msgSend(*(id *)((char *)a1 + OBJC_IVAR____TtC15ConversationKit26SystemApertureControlsView_statusView), sel_setAlpha_, 0.0);
  v7 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v8 = (*(uint64_t (**)(id, double))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x1C8))(v6, 0.0);
  v9 = *(uint64_t (**)(void))((*v7 & *a1) + 0x138);
  v10 = (void *)((uint64_t (*)(uint64_t))v9)(v8);
  objc_msgSend(v10, sel_setHidden_, 0);

  v11 = (void *)v9();
  (*(void (**)(void))((*v7 & *a1) + 0xB0))();
  objc_msgSend(v11, sel_setAlpha_);

  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v12 = type metadata accessor for Logger();
  __swift_project_value_buffer(v12, (uint64_t)&static Logger.conversationControls);
  v13 = a1;
  v14 = Logger.logObject.getter();
  v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    v17 = swift_slowAlloc();
    *(_DWORD *)v16 = 136315138;
    aBlock[0] = v17;
    (*(void (**)(void))((*v7 & *v13) + 0xC8))();
    v18 = String.init<A>(reflecting:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v18, v19, aBlock);
    v7 = (_QWORD *)MEMORY[0x1E0DEEDD8];
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v14, v15, "⇢ [%s] 2. Displaying ephemeral alert", v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v17, -1, -1);
    MEMORY[0x1C3B751B8](v16, -1, -1);

    if ((a4 & 1) == 0)
      return;
  }
  else
  {

    if ((a4 & 1) == 0)
      return;
  }
  v20 = (void *)objc_opt_self();
  if (one-time initialization token for shared != -1)
    swift_once();
  v21 = (*(double (**)(void))(*(_QWORD *)static Defaults.shared + 1008))();
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = v13;
  aBlock[4] = (uint64_t)partial apply for specialized closure #1 in closure #1 in closure #2 in FaceTimeControlsView.displayEphemeralAlert();
  aBlock[5] = v22;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)thunk for @escaping @callee_guaranteed @Sendable (@guaranteed NSTimer) -> ();
  aBlock[3] = (uint64_t)&block_descriptor_53_0;
  v23 = _Block_copy(aBlock);
  v24 = v13;
  swift_release();
  v25 = objc_msgSend(v20, sel_scheduledTimerWithTimeInterval_repeats_block_, 0, v23, v21);
  _Block_release(v23);
  (*(void (**)(id))((*v7 & *v24) + 0xE8))(v25);
}

void specialized closure #1 in closure #1 in closure #2 in FaceTimeControlsView.displayEphemeralAlert()(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  _QWORD *v3;
  void (*v4)(_QWORD, _QWORD, _QWORD);
  _QWORD *v5;

  v3 = *(_QWORD **)(a2 + *a3);
  v4 = *(void (**)(_QWORD, _QWORD, _QWORD))((*MEMORY[0x1E0DEEDD8] & *v3) + 0x7F8);
  v5 = v3;
  v4(0, 0, 0);
  OUTLINED_FUNCTION_7_1(v5);
}

void specialized closure #1 in FaceTimeControlsView.cleanUpEphemeralAlert()(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  void *v3;
  void *v4;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = (_QWORD *)MEMORY[0x1C3B752C0](v1);
  if (v2)
  {
    v3 = v2;
    v4 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v2) + 0x130))();
    objc_msgSend(v4, sel_setAlpha_, 0.0);

  }
}

{
  uint64_t v1;
  _QWORD *v2;
  void *v3;
  void *v4;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = (_QWORD *)MEMORY[0x1C3B752C0](v1);
  if (v2)
  {
    v3 = v2;
    v4 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v2) + 0x138))();
    objc_msgSend(v4, sel_setAlpha_, 0.0);

  }
}

void specialized closure #2 in FaceTimeControlsView.cleanUpEphemeralAlert()(char a1, uint64_t a2)
{
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  void *v13;
  uint64_t (*v14)(void);
  void *v15;
  _QWORD *v16;
  void *v17;
  _QWORD *v18;
  void *v19;
  void *v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  _QWORD *v25;
  uint64_t v26;
  void *v27;
  uint64_t aBlock;
  uint64_t v29;
  void *v30;
  void *v31;
  void *v32;
  uint64_t v33;

  v3 = a2 + 16;
  swift_beginAccess();
  v4 = (_QWORD *)MEMORY[0x1C3B752C0](v3);
  if (v4)
  {
    v5 = v4;
    v6 = (_QWORD *)MEMORY[0x1E0DEEDD8];
    v7 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v4) + 0xE0))();
    outlined consume of ConversationControlsRecipe.View?(v7, v8);
    if (!v7)
    {
      if ((a1 & 1) == 0)
      {
        if (one-time initialization token for conversationControls != -1)
          swift_once();
        v9 = type metadata accessor for Logger();
        __swift_project_value_buffer(v9, (uint64_t)&static Logger.conversationControls);
        v10 = Logger.logObject.getter();
        v11 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v10, v11))
        {
          v12 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v12 = 0;
          _os_log_impl(&dword_1BD004000, v10, v11, "cleanUpEphemeralAlert: ephemeralAlertStack.alpha -> 0 didn't finish", v12, 2u);
          MEMORY[0x1C3B751B8](v12, -1, -1);
        }

        v13 = (void *)(*(uint64_t (**)(void))((*v6 & *v5) + 0x130))();
        objc_msgSend(v13, sel_setAlpha_, 0.0);

      }
      v14 = *(uint64_t (**)(void))((*v6 & *v5) + 0x130);
      v15 = (void *)v14();
      objc_msgSend(v15, sel_setHidden_, 1);

      v16 = (_QWORD *)v14();
      v17 = (void *)(*(uint64_t (**)(void))((*v6 & *v16) + 0x88))();

      objc_msgSend(v17, sel_setAttributedText_, 0);
      v18 = (_QWORD *)v14();
      v19 = (void *)(*(uint64_t (**)(void))((*v6 & *v18) + 0xA0))();

      objc_msgSend(v19, sel_setAttributedText_, 0);
      v20 = (void *)objc_opt_self();
      if (one-time initialization token for shared != -1)
        swift_once();
      v21 = (*(double (**)(void))(*(_QWORD *)static Defaults.shared + 1016))();
      v22 = swift_allocObject();
      *(_QWORD *)(v22 + 16) = v5;
      v32 = partial apply for specialized closure #1 in closure #2 in FaceTimeControlsView.cleanUpEphemeralAlert();
      v33 = v22;
      v23 = MEMORY[0x1E0C809B0];
      aBlock = MEMORY[0x1E0C809B0];
      v29 = 1107296256;
      v30 = thunk for @escaping @callee_guaranteed () -> ();
      v31 = &block_descriptor_107;
      v24 = _Block_copy(&aBlock);
      v25 = v5;
      swift_release();
      v26 = swift_allocObject();
      swift_unknownObjectWeakInit();
      v32 = partial apply for specialized closure #2 in closure #2 in FaceTimeControlsView.cleanUpEphemeralAlert();
      v33 = v26;
      aBlock = v23;
      v29 = 1107296256;
      v30 = thunk for @escaping @callee_guaranteed (@unowned Bool) -> ();
      v31 = &block_descriptor_111;
      v27 = _Block_copy(&aBlock);
      swift_release();
      objc_msgSend(v20, sel_animateWithDuration_animations_completion_, v24, v27, v21);
      _Block_release(v27);
      _Block_release(v24);
    }

  }
}

{
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  void *v13;
  uint64_t (*v14)(void);
  void *v15;
  _QWORD *v16;
  void *v17;
  _QWORD *v18;
  void *v19;
  void *v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  _QWORD *v25;
  uint64_t v26;
  void *v27;
  uint64_t aBlock;
  uint64_t v29;
  void *v30;
  void *v31;
  void *v32;
  uint64_t v33;

  v3 = a2 + 16;
  swift_beginAccess();
  v4 = (_QWORD *)MEMORY[0x1C3B752C0](v3);
  if (v4)
  {
    v5 = v4;
    v6 = (_QWORD *)MEMORY[0x1E0DEEDD8];
    v7 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v4) + 0xF8))();
    outlined consume of ConversationControlsRecipe.View?(v7, v8);
    if (!v7)
    {
      if ((a1 & 1) == 0)
      {
        if (one-time initialization token for conversationControls != -1)
          swift_once();
        v9 = type metadata accessor for Logger();
        __swift_project_value_buffer(v9, (uint64_t)&static Logger.conversationControls);
        v10 = Logger.logObject.getter();
        v11 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v10, v11))
        {
          v12 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v12 = 0;
          _os_log_impl(&dword_1BD004000, v10, v11, "cleanUpEphemeralAlert: ephemeralAlertStack.alpha -> 0 didn't finish", v12, 2u);
          MEMORY[0x1C3B751B8](v12, -1, -1);
        }

        v13 = (void *)(*(uint64_t (**)(void))((*v6 & *v5) + 0x138))();
        objc_msgSend(v13, sel_setAlpha_, 0.0);

      }
      v14 = *(uint64_t (**)(void))((*v6 & *v5) + 0x138);
      v15 = (void *)v14();
      objc_msgSend(v15, sel_setHidden_, 1);

      v16 = (_QWORD *)v14();
      v17 = (void *)(*(uint64_t (**)(void))((*v6 & *v16) + 0x88))();

      objc_msgSend(v17, sel_setAttributedText_, 0);
      v18 = (_QWORD *)v14();
      v19 = (void *)(*(uint64_t (**)(void))((*v6 & *v18) + 0xA0))();

      objc_msgSend(v19, sel_setAttributedText_, 0);
      v20 = (void *)objc_opt_self();
      if (one-time initialization token for shared != -1)
        swift_once();
      v21 = (*(double (**)(void))(*(_QWORD *)static Defaults.shared + 1016))();
      v22 = swift_allocObject();
      *(_QWORD *)(v22 + 16) = v5;
      v32 = partial apply for specialized closure #1 in closure #2 in FaceTimeControlsView.cleanUpEphemeralAlert();
      v33 = v22;
      v23 = MEMORY[0x1E0C809B0];
      aBlock = MEMORY[0x1E0C809B0];
      v29 = 1107296256;
      v30 = thunk for @escaping @callee_guaranteed () -> ();
      v31 = &block_descriptor_67_0;
      v24 = _Block_copy(&aBlock);
      v25 = v5;
      swift_release();
      v26 = swift_allocObject();
      swift_unknownObjectWeakInit();
      v32 = partial apply for specialized closure #2 in closure #2 in FaceTimeControlsView.cleanUpEphemeralAlert();
      v33 = v26;
      aBlock = v23;
      v29 = 1107296256;
      v30 = thunk for @escaping @callee_guaranteed (@unowned Bool) -> ();
      v31 = &block_descriptor_71;
      v27 = _Block_copy(&aBlock);
      swift_release();
      objc_msgSend(v20, sel_animateWithDuration_animations_completion_, v24, v27, v21);
      _Block_release(v27);
      _Block_release(v24);
    }

  }
}

uint64_t specialized closure #1 in closure #2 in FaceTimeControlsView.cleanUpEphemeralAlert()(_QWORD *a1)
{
  void (*v1)(void);
  id v2;

  v1 = *(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *a1) + 0xF8);
  v2 = *(id *)((char *)a1 + OBJC_IVAR____TtC15ConversationKit27ConversationHUDControlsView_statusView);
  v1();
  objc_msgSend(v2, sel_setAlpha_);

  return ((uint64_t (*)(void))v1)();
}

{
  _QWORD *v2;
  void (*v3)(void);
  id v4;
  uint64_t v5;

  v2 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v3 = *(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *a1) + 0xB0);
  v4 = *(id *)((char *)a1 + OBJC_IVAR____TtC15ConversationKit26SystemApertureControlsView_statusView);
  v3();
  objc_msgSend(v4, sel_setAlpha_);

  v5 = ((uint64_t (*)(void))v3)();
  return (*(uint64_t (**)(uint64_t))((*v2 & *a1) + 0x1C8))(v5);
}

void specialized closure #2 in closure #2 in FaceTimeControlsView.cleanUpEphemeralAlert()(char a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t *v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void (*v17)(void);
  id v18;
  uint64_t v19;
  _QWORD *v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  void (*v28)(void);
  _QWORD *v29;
  uint64_t v30;

  v3 = a2 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1C3B752C0](v3);
  if (v4)
  {
    v5 = (void *)v4;
    v6 = &demangling cache variable for type metadata for Participant.CountdownInfo?;
    v7 = "rolsViewControllerDelegate";
    if ((a1 & 1) == 0)
    {
      if (one-time initialization token for conversationControls != -1)
        swift_once();
      v8 = type metadata accessor for Logger();
      __swift_project_value_buffer(v8, (uint64_t)&static Logger.conversationControls);
      v9 = v5;
      v10 = Logger.logObject.getter();
      v11 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v10, v11))
      {
        v12 = (uint8_t *)swift_slowAlloc();
        v13 = swift_slowAlloc();
        *(_DWORD *)v12 = 136315138;
        v30 = v13;
        (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v9) + 0xF8))();
        v14 = String.init<A>(reflecting:)();
        getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v14, v15, &v30);
        v7 = "ConversationControlsViewControllerDelegate" + 16;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BD004000, v10, v11, "cleanUpEphemeralAlert: statusView.alpha -> %s didn't finish", v12, 0xCu);
        swift_arrayDestroy();
        v16 = v13;
        v6 = &demangling cache variable for type metadata for Participant.CountdownInfo?;
        MEMORY[0x1C3B751B8](v16, -1, -1);
        MEMORY[0x1C3B751B8](v12, -1, -1);

      }
      else
      {

      }
      v17 = *(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v9) + 0xF8);
      v18 = *(id *)((char *)v9 + OBJC_IVAR____TtC15ConversationKit27ConversationHUDControlsView_statusView);
      v17();
      objc_msgSend(v18, sel_setAlpha_);

      v17();
    }
    if (v6[228] != -1)
      swift_once();
    v19 = type metadata accessor for Logger();
    __swift_project_value_buffer(v19, (uint64_t)&static Logger.conversationControls);
    v20 = v5;
    v21 = Logger.logObject.getter();
    v22 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      v24 = swift_slowAlloc();
      *(_DWORD *)v23 = *((_QWORD *)v7 + 34);
      v30 = v24;
      (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v20) + 0xB0))();
      v25 = String.init<A>(reflecting:)();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v25, v26, &v30);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BD004000, v21, v22, "⇢ [%s] 4. Removed ephemeral alert, displaying status view", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v24, -1, -1);
      MEMORY[0x1C3B751B8](v23, -1, -1);

    }
    else
    {

    }
    v27 = *(_QWORD **)((char *)v20 + OBJC_IVAR____TtC15ConversationKit27ConversationHUDControlsView_controlsManager);
    v28 = *(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v27) + 0xA00);
    v29 = v27;
    v28();

  }
}

{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t *v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  void (*v18)(void);
  id v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  void (*v30)(void);
  _QWORD *v31;
  uint64_t v32;

  v3 = a2 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1C3B752C0](v3);
  if (v4)
  {
    v5 = (void *)v4;
    v6 = &demangling cache variable for type metadata for Participant.CountdownInfo?;
    v7 = "rolsViewControllerDelegate";
    if ((a1 & 1) == 0)
    {
      if (one-time initialization token for conversationControls != -1)
        swift_once();
      v8 = type metadata accessor for Logger();
      __swift_project_value_buffer(v8, (uint64_t)&static Logger.conversationControls);
      v9 = v5;
      v10 = Logger.logObject.getter();
      v11 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v10, v11))
      {
        v12 = (uint8_t *)swift_slowAlloc();
        v13 = swift_slowAlloc();
        *(_DWORD *)v12 = 136315138;
        v32 = v13;
        (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v9) + 0xB0))();
        v14 = String.init<A>(reflecting:)();
        getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v14, v15, &v32);
        v7 = "ConversationControlsViewControllerDelegate" + 16;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BD004000, v10, v11, "cleanUpEphemeralAlert: statusView.alpha -> %s didn't finish", v12, 0xCu);
        swift_arrayDestroy();
        v16 = v13;
        v6 = &demangling cache variable for type metadata for Participant.CountdownInfo?;
        MEMORY[0x1C3B751B8](v16, -1, -1);
        MEMORY[0x1C3B751B8](v12, -1, -1);

      }
      else
      {

      }
      v17 = (_QWORD *)MEMORY[0x1E0DEEDD8];
      v18 = *(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v9) + 0xB0);
      v19 = *(id *)((char *)v9 + OBJC_IVAR____TtC15ConversationKit26SystemApertureControlsView_statusView);
      v18();
      objc_msgSend(v19, sel_setAlpha_);

      v20 = ((uint64_t (*)(void))v18)();
      (*(void (**)(uint64_t))((*v17 & *v9) + 0x1C8))(v20);
    }
    if (v6[228] != -1)
      swift_once();
    v21 = type metadata accessor for Logger();
    __swift_project_value_buffer(v21, (uint64_t)&static Logger.conversationControls);
    v22 = v5;
    v23 = Logger.logObject.getter();
    v24 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      v26 = swift_slowAlloc();
      *(_DWORD *)v25 = *((_QWORD *)v7 + 34);
      v32 = v26;
      (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v22) + 0xC8))();
      v27 = String.init<A>(reflecting:)();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v27, v28, &v32);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BD004000, v23, v24, "⇢ [%s] 4. Removed ephemeral alert, displaying status view", v25, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v26, -1, -1);
      MEMORY[0x1C3B751B8](v25, -1, -1);

    }
    else
    {

    }
    v29 = *(_QWORD **)((char *)v22 + OBJC_IVAR____TtC15ConversationKit26SystemApertureControlsView_controlsManager);
    v30 = *(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v29) + 0xA00);
    v31 = v29;
    v30();

  }
}

uint64_t type metadata accessor for SystemApertureControlsView()
{
  uint64_t result;

  result = type metadata singleton initialization cache for SystemApertureControlsView;
  if (!type metadata singleton initialization cache for SystemApertureControlsView)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BD4470BC()
{
  OUTLINED_FUNCTION_115();
  return swift_deallocObject();
}

id partial apply for closure #2 in SystemApertureControlsView.layoutSubviews()()
{
  uint64_t v0;

  return closure #2 in SystemApertureControlsView.layoutSubviews()(*(void **)(v0 + 16), *(double *)(v0 + 32), *(double *)(v0 + 40));
}

double UIEdgeInsetsInsetRect_1(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8)
{
  return a3 - (a6 + a8);
}

uint64_t sub_1BD447100()
{
  OUTLINED_FUNCTION_115();
  return swift_deallocObject();
}

id partial apply for closure #1 in SystemApertureControlsView.layoutSubviews()()
{
  uint64_t v0;

  return closure #1 in SystemApertureControlsView.layoutSubviews()(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(double *)(v0 + 32), *(double *)(v0 + 40), *(double *)(v0 + 48), *(double *)(v0 + 56));
}

uint64_t outlined copy of ConversationControlsRecipe.Actions?(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a6 <= 0xFDu)
    return outlined copy of ConversationControlsRecipe.Actions(result, a2, a3, a4, a5, a6);
  return result;
}

uint64_t outlined consume of ConversationControlsRecipe.Actions?(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  if (a6 <= 0xFDu)
    return outlined consume of ConversationControlsRecipe.Actions(result, a2, a3, a4, a5);
  return result;
}

void sub_1BD44715C()
{
  double *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(double (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0xB0))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD447190(double *a1, _QWORD **a2)
{
  (*(void (**)(double))((*MEMORY[0x1E0DEEDD8] & **a2) + 0xB8))(*a1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD4471C8()
{
  _BYTE *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0xC8))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD4471FC(unsigned __int8 *a1, _QWORD **a2)
{
  (*(void (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & **a2) + 0xD0))(*a1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD447234()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0xE0))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD44726C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;

  OUTLINED_FUNCTION_1_0();
  *(_QWORD *)v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0xF8))();
  *(_QWORD *)(v0 + 8) = v2;
  *(_BYTE *)(v0 + 16) = v3;
  OUTLINED_FUNCTION_0();
}

void sub_1BD4472A8(_QWORD **a1)
{
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x110))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD4472E0()
{
  uint64_t *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = OUTLINED_FUNCTION_73_23(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD447310()
{
  uint64_t *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = OUTLINED_FUNCTION_74_17(v1);
  OUTLINED_FUNCTION_0();
}

uint64_t dispatch thunk of SystemApertureControlsStatusView.recipe.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of SystemApertureControlsStatusView.recipe.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of SystemApertureControlsStatusView.recipe.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of SystemApertureControlsStatusView.titleLabelGlyphInset.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t type metadata completion function for SystemApertureControlsView()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ConversationControlsRecipe();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for SystemApertureControlsView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SystemApertureControlsView.cnkContentAlpha.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of SystemApertureControlsView.cnkContentAlpha.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of SystemApertureControlsView.cnkContentAlpha.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of SystemApertureControlsView.context.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of SystemApertureControlsView.context.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of SystemApertureControlsView.context.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of SystemApertureControlsView.ephemeralAlertTimer.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of SystemApertureControlsView.ephemeralAlertTimer.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of SystemApertureControlsView.ephemeralAlertTimer.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of SystemApertureControlsView.ephemeralAlert.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of SystemApertureControlsView.ephemeralAlert.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of SystemApertureControlsView.ephemeralAlert.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x108))();
}

uint64_t dispatch thunk of SystemApertureControlsView.recipe.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x110))();
}

uint64_t dispatch thunk of SystemApertureControlsView.recipe.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x118))();
}

uint64_t dispatch thunk of SystemApertureControlsView.recipe.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x120))();
}

uint64_t dispatch thunk of SystemApertureControlsView.showCallDetailsButton.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x130))();
}

uint64_t dispatch thunk of SystemApertureControlsView.ephemeralAlertNotice.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x138))();
}

uint64_t dispatch thunk of SystemApertureControlsView.buttonShelfView.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x150))();
}

uint64_t dispatch thunk of SystemApertureControlsView.__allocating_init(recipe:controlsManager:context:menuHostViewController:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 448))();
}

uint64_t dispatch thunk of SystemApertureControlsView.updateAdditionalView(alpha:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1C8))();
}

uint64_t dispatch thunk of SystemApertureControlsView.showAppLaunchPill(buttonType:menuHost:target:action:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1D0))();
}

uint64_t dispatch thunk of SystemApertureControlsView.removeAppLaunchPill()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1D8))();
}

uint64_t dispatch thunk of SystemApertureControlsView.systemAperturePreferredContentSize.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1E0))();
}

ValueMetadata *type metadata accessor for SystemApertureControlsView.Constants()
{
  return &type metadata for SystemApertureControlsView.Constants;
}

uint64_t sub_1BD4476C4()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void partial apply for specialized closure #1 in FaceTimeControlsView.displayEphemeralAlert()()
{
  uint64_t v0;

  specialized closure #1 in FaceTimeControlsView.displayEphemeralAlert()(v0);
}

{
  uint64_t v0;

  specialized closure #1 in FaceTimeControlsView.displayEphemeralAlert()(v0);
}

void partial apply for specialized closure #2 in FaceTimeControlsView.displayEphemeralAlert()(char a1)
{
  uint64_t v1;

  specialized closure #2 in FaceTimeControlsView.displayEphemeralAlert()(a1, v1);
}

{
  uint64_t v1;

  specialized closure #2 in FaceTimeControlsView.displayEphemeralAlert()(a1, v1);
}

void partial apply for specialized closure #1 in closure #2 in FaceTimeControlsView.displayEphemeralAlert()()
{
  uint64_t v0;

  specialized closure #1 in closure #2 in FaceTimeControlsView.displayEphemeralAlert()(*(_QWORD **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
}

{
  uint64_t v0;

  specialized closure #1 in closure #2 in FaceTimeControlsView.displayEphemeralAlert()(*(_QWORD **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
}

void partial apply for specialized closure #1 in closure #1 in closure #2 in FaceTimeControlsView.displayEphemeralAlert()(uint64_t a1)
{
  uint64_t v1;

  specialized closure #1 in closure #1 in closure #2 in FaceTimeControlsView.displayEphemeralAlert()(a1, *(_QWORD *)(v1 + 16), &OBJC_IVAR____TtC15ConversationKit26SystemApertureControlsView_controlsManager);
}

{
  uint64_t v1;

  specialized closure #1 in closure #1 in closure #2 in FaceTimeControlsView.displayEphemeralAlert()(a1, *(_QWORD *)(v1 + 16), &OBJC_IVAR____TtC15ConversationKit27ConversationHUDControlsView_controlsManager);
}

void partial apply for specialized closure #1 in FaceTimeControlsView.cleanUpEphemeralAlert()()
{
  uint64_t v0;

  specialized closure #1 in FaceTimeControlsView.cleanUpEphemeralAlert()(v0);
}

{
  uint64_t v0;

  specialized closure #1 in FaceTimeControlsView.cleanUpEphemeralAlert()(v0);
}

void partial apply for specialized closure #2 in FaceTimeControlsView.cleanUpEphemeralAlert()(char a1)
{
  uint64_t v1;

  specialized closure #2 in FaceTimeControlsView.cleanUpEphemeralAlert()(a1, v1);
}

{
  uint64_t v1;

  specialized closure #2 in FaceTimeControlsView.cleanUpEphemeralAlert()(a1, v1);
}

uint64_t partial apply for specialized closure #1 in closure #2 in FaceTimeControlsView.cleanUpEphemeralAlert()()
{
  uint64_t v0;

  return specialized closure #1 in closure #2 in FaceTimeControlsView.cleanUpEphemeralAlert()(*(_QWORD **)(v0 + 16));
}

{
  uint64_t v0;

  return specialized closure #1 in closure #2 in FaceTimeControlsView.cleanUpEphemeralAlert()(*(_QWORD **)(v0 + 16));
}

void partial apply for specialized closure #2 in closure #2 in FaceTimeControlsView.cleanUpEphemeralAlert()(char a1)
{
  uint64_t v1;

  specialized closure #2 in closure #2 in FaceTimeControlsView.cleanUpEphemeralAlert()(a1, v1);
}

{
  uint64_t v1;

  specialized closure #2 in closure #2 in FaceTimeControlsView.cleanUpEphemeralAlert()(a1, v1);
}

uint64_t objectdestroy_43Tm()
{
  uint64_t v0;

  OUTLINED_FUNCTION_115();

  return swift_deallocObject();
}

uint64_t sub_1BD4477D0()
{
  OUTLINED_FUNCTION_115();
  return swift_deallocObject();
}

id OUTLINED_FUNCTION_76_20(char a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2, a1 & 1);
}

uint64_t dispatch thunk of CallCenterProvider.currentAudioAndVideoCalls.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of CallCenterProvider.activeConversations.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of CallCenterProvider.callContainer.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of CallCenterProvider.localVideoProvider.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of CallCenterProvider.audioRoute.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of CallCenterProvider.delegate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of CallCenterProvider.delegate.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of CallCenterProvider.conversationManager.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of CallCenterProvider.videoDeviceController.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of CallCenterProvider.disconnect(_:reason:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 88))();
}

uint64_t dispatch thunk of CallCenterProvider.activeConversation(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 104))();
}

uint64_t dispatch thunk of CallCenterProvider.avLessConversation(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 112))();
}

uint64_t dispatch thunk of CallCenterProvider.buzz(_:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 144))();
}

uint64_t dispatch thunk of CallCenterProvider.kick(_:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 152))();
}

uint64_t dispatch thunk of CallCenterProvider.setDownlinkMuted(_:forRemoteParticipantsIn:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 160))();
}

uint64_t dispatch thunk of CallCenterProvider.approve(_:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 168))();
}

uint64_t dispatch thunk of CallCenterProvider.reject(_:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 176))();
}

uint64_t dispatch thunk of CallCenterProvider.ignoreLetMeIn(_:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 192))();
}

uint64_t dispatch thunk of CallCenterProvider.addScreenSharingType(_:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 200))();
}

uint64_t dispatch thunk of CallCenterProvider.calls(passingTest:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 208))();
}

uint64_t dispatch thunk of CallCenterProvider.requestVideoUpgrade(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 216))();
}

uint64_t dispatch thunk of CallCenterProvider.launchApp(forJoin:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 224))();
}

uint64_t dispatch thunk of CallCenterProvider.pttStartTransmit(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 248))();
}

uint64_t dispatch thunk of CallCenterProvider.pttLeaveChannel(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 264))();
}

uint64_t dispatch thunk of CallCenterProviderDelegate.callCenter(_:stateChangedFor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of CallCenterProviderDelegate.callCenter(_:localVideoToggledFor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of CallCenterProviderDelegate.callCenter(_:remoteMembersChangedFor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of CallCenterProviderDelegate.callCenter(_:activeRemoteParticipantsChangedFor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of CallCenterProviderDelegate.callCenter(_:pendingMembersChangedFor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of CallCenterProviderDelegate.callCenter(_:otherInvitedHandlesChangedFor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of CallCenterProviderDelegate.callCenter(_:rejectedMembersChangedFor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 64))();
}

uint64_t dispatch thunk of CallCenterProviderDelegate.callCenter(_:oneToOneModeChangedFor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 72))();
}

uint64_t dispatch thunk of CallCenterProviderDelegate.callCenter(_:avModeChangedFor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 80))();
}

uint64_t dispatch thunk of CallCenterProviderDelegate.callCenter(_:resolvedAudioVideoModeChangedFor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 88))();
}

uint64_t dispatch thunk of CallCenterProviderDelegate.callCenter(_:addedActiveConversation:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 104))();
}

uint64_t dispatch thunk of CallCenterProviderDelegate.callCenter(_:letMeInRequestStateChangedFor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 112))();
}

uint64_t dispatch thunk of CallCenterProviderDelegate.callCenter(_:conversation:participant:didReact:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 144))();
}

uint64_t dispatch thunk of CallCenterProviderDelegate.callCenter(_:conversation:participantDidStopReacting:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 152))();
}

uint64_t dispatch thunk of CallCenterProviderDelegate.callCenter(_:migratingFrom:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 160))();
}

uint64_t dispatch thunk of CallCenterProviderDelegate.callCenter(_:mutedTalkingChanged:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 168))();
}

uint64_t dispatch thunk of CallCenterProviderDelegate.callCenterAudioRoutesDidChange(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 176))();
}

uint64_t dispatch thunk of CallCenterProviderDelegate.callCenter(_:audioPausedChangedFor:remoteParticipantWithIdentifier:updatedAudioPaused:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 192))();
}

uint64_t dispatch thunk of CallCenterProviderDelegate.callCenter(_:noticePosted:in:fromParticipant:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 200))();
}

uint64_t dispatch thunk of CallCenterProviderDelegate.callCenter(_:updatedGroupNameForConversation:withGroupPhotoData:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 208))();
}

uint64_t dispatch thunk of CallCenterProviderDelegate.callCenter(_:launchStateChanged:activitySession:conversation:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 216))();
}

uint64_t dispatch thunk of CallCenterProviderDelegate.callCenter(_:remoteScreenShareAttributesChanged:isLocallySharing:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 224))();
}

uint64_t dispatch thunk of CallCenterProviderDelegate.callCenter(_:addedCollaborationNotice:forParticipant:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 248))();
}

uint64_t dispatch thunk of CallCenterProviderDelegate.callCenter(_:screenSharingAvailablilityChanged:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 264))();
}

uint64_t dispatch thunk of CallCenterProviderDelegate.callCenter(_:screenSharingRequestsChangedFor:fromOldConversation:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 272))();
}

void BannerPresentationManager.presentNewBanner(as:type:activityUUID:fromActivityManager:)()
{
  uint64_t *v0;
  void *v1;
  NSObject *v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  id v21;
  uint64_t v22;
  NSObject *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  os_log_type_t v32;
  _WORD *v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  uint64_t v37;
  os_log_type_t v38;
  _WORD *v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE *v42;
  id v43;
  void *v44;
  uint64_t v45;
  os_log_type_t v46;
  _WORD *v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  void *v59;
  id v60;
  id v61;
  char *v62;
  uint64_t *v63;
  _QWORD *v64;
  os_log_type_t v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  os_log_type_t v70;
  uint8_t *v71;
  _BYTE *v72;
  uint64_t inited;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  id v80;
  NSObject *v81;
  os_log_type_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  unint64_t v87;
  _BYTE *v88;
  char *v89;
  uint64_t v90;
  os_log_type_t v91;
  id v92;
  void *v93;
  char v94;
  uint64_t v95;
  char v96;
  id v97;
  uint64_t v98;
  _QWORD *v99;
  _QWORD v100[22];
  uint64_t v101[6];
  id v102;
  int8x16_t v103;
  int8x16_t v104;
  char v105;
  uint64_t v106;

  OUTLINED_FUNCTION_93();
  v2 = v0;
  v4 = v3;
  v98 = v5;
  v7 = v6;
  v9 = v8;
  v106 = *MEMORY[0x1E0C80C00];
  v10 = OUTLINED_FUNCTION_33_0();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_4_1();
  v12 = OUTLINED_FUNCTION_26_62(*v0);
  if (v12)
  {
    v13 = (void *)v12;
    v96 = v4;
    OUTLINED_FUNCTION_59(v12, (unint64_t *)&lazy cache variable for type metadata for BNBannerSource);
    v15 = v14;
    v16 = BannerPresentationManager.requesterIdentifier.getter();
    @nonobjc BNBannerSource.__allocating_init(for:forRequesterIdentifier:)(0, v16, v17);
    if (!v18)
    {
      if (one-time initialization token for conversationControls != -1)
        swift_once();
      v37 = OUTLINED_FUNCTION_17_2();
      OUTLINED_FUNCTION_3(v37, (uint64_t)&static Logger.conversationControls);
      v38 = OUTLINED_FUNCTION_232();
      if (OUTLINED_FUNCTION_5_3(v38))
      {
        v39 = (_WORD *)OUTLINED_FUNCTION_105();
        OUTLINED_FUNCTION_47_2(v39);
        OUTLINED_FUNCTION_2_5(&dword_1BD004000, v40, v41, "Unable to obtain banner source");
        OUTLINED_FUNCTION_60();
      }

      lazy protocol witness table accessor for type BannerPresentationError and conformance BannerPresentationError();
      OUTLINED_FUNCTION_10_8();
      *v42 = 3;
      goto LABEL_39;
    }
    v19 = v18;
    v102 = 0;
    v97 = objc_msgSend(v18, sel_layoutDescriptionWithError_, &v102);
    if (!v97)
    {
      v43 = v102;
      v44 = (void *)OUTLINED_FUNCTION_215_2();

      swift_willThrow();
      if (one-time initialization token for conversationControls != -1)
        swift_once();
      v45 = OUTLINED_FUNCTION_17_2();
      OUTLINED_FUNCTION_3(v45, (uint64_t)&static Logger.conversationControls);
      v46 = OUTLINED_FUNCTION_232();
      if (OUTLINED_FUNCTION_5_3(v46))
      {
        v47 = (_WORD *)OUTLINED_FUNCTION_105();
        OUTLINED_FUNCTION_47_2(v47);
        OUTLINED_FUNCTION_2_5(&dword_1BD004000, v48, v49, "Unable to obtain layout description for banner");
        OUTLINED_FUNCTION_60();
      }

      lazy protocol witness table accessor for type BannerPresentationError and conformance BannerPresentationError();
      OUTLINED_FUNCTION_10_8();
      *v50 = 5;

      goto LABEL_39;
    }
    v90 = v9;
    v93 = v19;
    v95 = v7;
    v20 = *(Class *)((char *)&v2->isa
                   + OBJC_IVAR____TtC15ConversationKit25BannerPresentationManager_presentedBannerDismissalTimer);
    v21 = v102;
    objc_msgSend(v20, sel_invalidate);
    objc_msgSend(*(id *)((char *)&v2->isa+ OBJC_IVAR____TtC15ConversationKit25BannerPresentationManager_systemApertureElementDismissalTimer), sel_invalidate);
    v94 = BannerPresentationManager.shouldPresentSystemApertureElementFromBanner(type:)(v95);
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v22 = OUTLINED_FUNCTION_17_2();
    OUTLINED_FUNCTION_182_3(v22, (uint64_t)&static Logger.conversationControls);
    OUTLINED_FUNCTION_246_2();
    outlined init with copy of ConversationControlsType(v95, (uint64_t)v101);
    v23 = Logger.logObject.getter();
    v91 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v23, v91))
    {
      v24 = OUTLINED_FUNCTION_105();
      v100[5] = OUTLINED_FUNCTION_105();
      *(_DWORD *)v24 = 136315394;
      ConversationControlsType.debugDescription.getter();
      v27 = OUTLINED_FUNCTION_241_4(v25, v26);
      OUTLINED_FUNCTION_180_1(v27);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_27();
      OUTLINED_FUNCTION_127_7();
      *(_WORD *)(v24 + 12) = 2080;
      ConversationControlsType.associatedNotice.getter((uint64_t)v100);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Notice?);
      v28 = String.init<A>(describing:)();
      v30 = OUTLINED_FUNCTION_241_4(v28, v29);
      OUTLINED_FUNCTION_180_1(v30);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_27();
      OUTLINED_FUNCTION_172_2();
      OUTLINED_FUNCTION_26_6(&dword_1BD004000, v23, v91, "presentNewBanner type:%s, notice:%s", (uint8_t *)v24);
      OUTLINED_FUNCTION_25_6();
      OUTLINED_FUNCTION_60();
    }
    OUTLINED_FUNCTION_127_7();
    OUTLINED_FUNCTION_172_2();

    OUTLINED_FUNCTION_246_2();
    v51 = v13;
    v52 = BannerPresentationManager.requesterIdentifier.getter();
    v54 = v53;
    OUTLINED_FUNCTION_374_1((uint64_t)v1, v98, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 16));
    v55 = one-time initialization token for shared;
    v92 = v97;
    if (v55 != -1)
      swift_once();
    v99 = v51;
    v56 = static Defaults.shared;
    v57 = one-time initialization token for shared;
    swift_retain();
    if (v57 != -1)
      swift_once();
    v58 = static Features.shared;
    v59 = (void *)objc_opt_self();
    v60 = v58;
    v61 = objc_msgSend(v59, sel_defaultCenter);
    v62 = (char *)objc_allocWithZone((Class)ObjC metadata update function for SystemBannerHostViewController());
    v63 = v2;
    v89 = v62;
    v13 = v99;
    v64 = specialized SystemBannerHostViewController.init(controlsManager:sizeClass:type:delegate:isSystemAperturePresentation:requesterIdentifier:destination:layoutDescription:defaults:features:notificationCenter:activityUUID:fromActivityManager:)(v99, v90, (uint64_t)&v102, (uint64_t)v2, v94 & 1, v52, v54, 0, 0, v97, v56, (uint64_t)v60, v61, (uint64_t)v1, v96 & 1, v89);
    BannerPresentationManager.presentedBanner.setter(v64);
    v65 = MEMORY[0x1E0DEEDD8];
    v66 = OUTLINED_FUNCTION_308(*v63);
    if (v66)
    {
      v67 = (void *)v66;
      OUTLINED_FUNCTION_351();
      if ((OUTLINED_FUNCTION_188_4(*(uint64_t (**)(void))(v68 + 744)) & 1) != 0)
      {
        OUTLINED_FUNCTION_245_1();
        if (v105 == 3)
        {
          OUTLINED_FUNCTION_127_7();
        }
        else if (v105 != 6 || v102 != (id)25 || (OUTLINED_FUNCTION_45_11(v104, v103), v69))
        {
          OUTLINED_FUNCTION_127_7();
LABEL_43:
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, NSSecureCoding)>);
          inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = xmmword_1BD645390;
          *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
          *(_QWORD *)(inited + 40) = v74;
          type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSNumber);
          *(NSNumber *)(inited + 48) = OUTLINED_FUNCTION_265_5();
          *(_QWORD *)(inited + 56) = static String._unconditionallyBridgeFromObjectiveC(_:)();
          *(_QWORD *)(inited + 64) = v75;
          *(NSNumber *)(inited + 72) = OUTLINED_FUNCTION_265_5();
          *(_QWORD *)(inited + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)();
          *(_QWORD *)(inited + 88) = v76;
          *(NSNumber *)(inited + 96) = OUTLINED_FUNCTION_265_5();
          *(_QWORD *)(inited + 104) = static String._unconditionallyBridgeFromObjectiveC(_:)();
          *(_QWORD *)(inited + 112) = v77;
          *(_QWORD *)(inited + 120) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithBool_, v94 & 1);
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for NSSecureCoding);
          v78 = Dictionary.init(dictionaryLiteral:)();
          v102 = 0;
          if ((outlined bridged method (mnnbnnn) of @objc BNBannerSource.post(_:options:userInfo:)((uint64_t)v67, 1, v78, (uint64_t)&v102, v93) & 1) != 0)
          {
            v79 = v102;

            goto LABEL_40;
          }
          v80 = v102;
          OUTLINED_FUNCTION_215_2();

          swift_willThrow();
          OUTLINED_FUNCTION_245_1();
          OUTLINED_FUNCTION_14_66();
          OUTLINED_FUNCTION_14_66();
          v81 = Logger.logObject.getter();
          v82 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v81, v82))
          {
            v83 = OUTLINED_FUNCTION_105();
            v101[0] = OUTLINED_FUNCTION_105();
            *(_DWORD *)v83 = 136315394;
            OUTLINED_FUNCTION_14_66();
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
            v84 = String.init<A>(describing:)();
            getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v84, v85, v101);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            OUTLINED_FUNCTION_30_4();
            OUTLINED_FUNCTION_2_13();
            OUTLINED_FUNCTION_2_13();
            *(_WORD *)(v83 + 12) = 2080;
            ConversationControlsType.debugDescription.getter();
            v100[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v86, v87, v101);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            OUTLINED_FUNCTION_27();
            OUTLINED_FUNCTION_127_7();
            OUTLINED_FUNCTION_26_6(&dword_1BD004000, v81, v82, "Banner Source failed to post banner, error: %s type %s", (uint8_t *)v83);
            OUTLINED_FUNCTION_25_6();
            OUTLINED_FUNCTION_60();
          }
          OUTLINED_FUNCTION_2_13();
          OUTLINED_FUNCTION_2_13();
          OUTLINED_FUNCTION_127_7();

          lazy protocol witness table accessor for type BannerPresentationError and conformance BannerPresentationError();
          OUTLINED_FUNCTION_10_8();
          *v88 = 7;
          OUTLINED_FUNCTION_2_13();

          goto LABEL_38;
        }
        SBSUndimScreen();
        goto LABEL_43;
      }

    }
    Logger.logObject.getter();
    v70 = OUTLINED_FUNCTION_232();
    if (OUTLINED_FUNCTION_5_3(v70))
    {
      v71 = (uint8_t *)OUTLINED_FUNCTION_105();
      *(_WORD *)v71 = 0;
      OUTLINED_FUNCTION_130(&dword_1BD004000, v2, v65, "Unable to create banner for presentation", v71);
      OUTLINED_FUNCTION_60();
    }

    BannerPresentationManager.presentedBanner.setter(0);
    lazy protocol witness table accessor for type BannerPresentationError and conformance BannerPresentationError();
    OUTLINED_FUNCTION_10_8();
    *v72 = 6;
LABEL_38:

LABEL_39:
    goto LABEL_40;
  }
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v31 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v31, (uint64_t)&static Logger.conversationControls);
  v32 = OUTLINED_FUNCTION_232();
  if (OUTLINED_FUNCTION_5_3(v32))
  {
    v33 = (_WORD *)OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_47_2(v33);
    OUTLINED_FUNCTION_2_5(&dword_1BD004000, v34, v35, "Unable to obtain ConversationControlsManager");
    OUTLINED_FUNCTION_60();
  }

  lazy protocol witness table accessor for type BannerPresentationError and conformance BannerPresentationError();
  OUTLINED_FUNCTION_10_8();
  *v36 = 2;
LABEL_40:
  OUTLINED_FUNCTION_52_1();
}

void BannerPresentationManager.presentBanner(as:type:activityTypeForNewBanner:activityUUID:fromActivityManager:reply:)()
{
  NSObject *v0;
  os_log_type_t v1;
  NSObject *v2;
  NSObject *v3;
  void (*v4)(uint64_t);
  void (*v5)(uint64_t);
  int v6;
  NSObject *v7;
  NSObject *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  void *v30;
  uint64_t v31;
  os_log_type_t v32;
  uint64_t v33;
  uint64_t ObjectType;
  os_log_type_t v35;
  _WORD *v36;
  const char *v37;
  os_log_type_t v38;
  _WORD *v39;
  uint64_t v40;
  _BYTE *v41;
  uint64_t v42;
  os_log_type_t v43;
  _WORD *v44;
  uint64_t v45;
  _BYTE *v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t (*v50)(void);
  uint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint8_t *v57;
  int v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  NSObject *v68;
  os_log_type_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  _BYTE *v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  os_log_type_t v82;
  int v83;
  _WORD *v84;
  uint64_t v85;
  _BYTE *v86;
  uint64_t v87;
  void (*v88)(uint64_t);
  id v89;
  uint64_t v90;
  NSObject *v91;
  int v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint8_t *v98;
  uint64_t v99;
  NSObject *v100;
  uint64_t v101[3];
  void *v102;
  void (*v103)(_BOOL4);
  uint64_t v104;
  uint64_t v105[6];
  __int128 v106[3];

  OUTLINED_FUNCTION_93();
  v3 = v2;
  v5 = v4;
  v92 = v6;
  v8 = v7;
  v93 = v9;
  v11 = v10;
  v99 = v12;
  v97 = OUTLINED_FUNCTION_33_0();
  v96 = *(_QWORD *)(v97 - 8);
  MEMORY[0x1E0C80A78](v97);
  v94 = v13;
  v95 = (uint64_t)&v88 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v14 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_182_3(v14, (uint64_t)&static Logger.conversationControls);
  outlined init with copy of ConversationControlsType(v11, (uint64_t)v101);
  v100 = v0;
  Logger.logObject.getter();
  v15 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_4_14(v15))
  {
    v16 = OUTLINED_FUNCTION_105();
    v105[0] = OUTLINED_FUNCTION_105();
    *(_DWORD *)v16 = 136315394;
    v98 = (uint8_t *)v11;
    outlined init with copy of ConversationControlsType((uint64_t)v101, (uint64_t)v106);
    v24 = specialized >> prefix<A>(_:)((uint64_t)v106, v17, v18, v19, v20, v21, v22, v23);
    v91 = v8;
    v25 = v24;
    v90 = (uint64_t)v0;
    v27 = v26;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v106, &demangling cache variable for type metadata for ConversationControlsType?);
    *(_QWORD *)&v106[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v25, v27, v105);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_2_1();
    OUTLINED_FUNCTION_151_4();
    *(_WORD *)(v16 + 12) = 2080;
    *(_QWORD *)&v106[0] = v99;
    v28 = String.init<A>(reflecting:)();
    *(_QWORD *)&v106[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v28, v29, v105);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_26_6(&dword_1BD004000, v0, v1, "Requesting banner presentation for %s as %s", (uint8_t *)v16);
    OUTLINED_FUNCTION_25_6();
    OUTLINED_FUNCTION_60();
  }
  OUTLINED_FUNCTION_151_4();

  v30 = BannerPresentationManager.callForRequestedControlsType(_:)(v11);
  if (v30)
  {
    v32 = v30;
    v33 = v31;
    ObjectType = swift_getObjectType();
    if (((*(uint64_t (**)(uint64_t, uint64_t))(v33 + 136))(ObjectType, v33) & 1) != 0)
    {
      OUTLINED_FUNCTION_125_7();
      v35 = OUTLINED_FUNCTION_37_4();
      if (OUTLINED_FUNCTION_13_0(v35))
      {
        v36 = (_WORD *)OUTLINED_FUNCTION_105();
        OUTLINED_FUNCTION_124_3(v36);
        v37 = "Call is screening, aborting banner presentation";
        goto LABEL_16;
      }
    }
    else
    {
      if ((OUTLINED_FUNCTION_163_4(*(uint64_t (**)(uint64_t, uint64_t))(v33 + 208)) & 1) == 0)
      {
        v98 = (uint8_t *)v11;
        v91 = v3;
        v48 = (_QWORD *)MEMORY[0x1E0DEEDD8];
        OUTLINED_FUNCTION_16_23();
        v50 = *(uint64_t (**)(void))(v49 + 232);
        v51 = v50();
        if (v51)
        {
          v52 = (void *)v51;
          v53 = OUTLINED_FUNCTION_26_62((uint64_t)v0->isa);
          if (v53)
          {
            v90 = v53;
            v89 = v52;
            OUTLINED_FUNCTION_4_75();
            OUTLINED_FUNCTION_16_23();
            if (((*(uint64_t (**)(void))(v54 + 88))() & 1) == 0)
            {
              OUTLINED_FUNCTION_16_23();
              v56 = (void *)(*(uint64_t (**)(void))(v55 + 656))();
              if (v56)
              {
                objc_msgSend(v56, sel_state);
                OUTLINED_FUNCTION_14_18();
              }
            }
            v57 = v98;
            outlined init with copy of ConversationControlsType((uint64_t)v98, (uint64_t)v101);
            v58 = v104;
            OUTLINED_FUNCTION_151_4();
            if (v58
              || (ConversationControlsType.associatedNotice.getter((uint64_t)v101),
                  v59 = v102,
                  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v101, (uint64_t *)&demangling cache variable for type metadata for Notice?), v59))
            {
              v60 = OUTLINED_FUNCTION_7_0();
              swift_unknownObjectWeakInit();
              outlined init with copy of ConversationControlsType((uint64_t)v57, (uint64_t)v106);
              outlined init with copy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v93, (uint64_t)v105, &demangling cache variable for type metadata for ConversationControlsType?);
              v61 = v96;
              v62 = v95;
              OUTLINED_FUNCTION_107_0(v95, (uint64_t)v8, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v96 + 16));
              v63 = (*(unsigned __int8 *)(v61 + 80) + 137) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
              v64 = v63 + v94;
              v65 = swift_allocObject();
              *(_QWORD *)(v65 + 16) = v60;
              *(_QWORD *)(v65 + 24) = v5;
              v66 = v99;
              *(_QWORD *)(v65 + 32) = v91;
              *(_QWORD *)(v65 + 40) = v66;
              outlined init with take of ConversationControlsType(v106, (_OWORD *)(v65 + 48));
              outlined init with take of ConversationControlsType?((uint64_t)v105, v65 + 96);
              OUTLINED_FUNCTION_107_0(v65 + v63, v62, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v61 + 32));
              *(_BYTE *)(v65 + v64) = v92 & 1;
              v103 = partial apply for closure #1 in BannerPresentationManager.presentBanner(as:type:activityTypeForNewBanner:activityUUID:fromActivityManager:reply:);
              v104 = v65;
              v101[0] = MEMORY[0x1E0C809B0];
              v101[1] = 1107296256;
              v101[2] = (uint64_t)thunk for @escaping @callee_guaranteed (@unowned Bool) -> ();
              v102 = &block_descriptor_86;
              v67 = _Block_copy(v101);
              _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy((uint64_t)v5);
              OUTLINED_FUNCTION_43();
              objc_msgSend(v89, sel_bannerPresentationManagerRequestToPresentBanner_, v67);
              _Block_release(v67);
              OUTLINED_FUNCTION_147_5();
            }
            else
            {
              OUTLINED_FUNCTION_125_7();
              v82 = OUTLINED_FUNCTION_37_4();
              os_log_type_enabled(v8, v82);
              OUTLINED_FUNCTION_181_5();
              if (v83)
              {
                v84 = (_WORD *)OUTLINED_FUNCTION_105();
                OUTLINED_FUNCTION_124_3(v84);
                OUTLINED_FUNCTION_130(&dword_1BD004000, v8, v82, "Attempted to present a notice without necessary metadata", v57);
                OUTLINED_FUNCTION_60();
              }

              if (v5)
              {
                lazy protocol witness table accessor for type BannerPresentationError and conformance BannerPresentationError();
                v85 = OUTLINED_FUNCTION_10_8();
                v87 = OUTLINED_FUNCTION_227_1(v85, v86);
                v5(v87);
                OUTLINED_FUNCTION_147_5();
                swift_unknownObjectRelease();
                goto LABEL_20;
              }
              OUTLINED_FUNCTION_147_5();
            }
            swift_unknownObjectRelease();
            goto LABEL_42;
          }
          OUTLINED_FUNCTION_113();
        }
        v68 = v0;
        OUTLINED_FUNCTION_125_7();
        v69 = OUTLINED_FUNCTION_37_4();
        if (os_log_type_enabled(v8, v69))
        {
          v70 = OUTLINED_FUNCTION_105();
          v101[0] = OUTLINED_FUNCTION_105();
          *(_DWORD *)v70 = 136315394;
          v71 = v50();
          v88 = v5;
          if (v71)
          {
            *(_QWORD *)&v106[0] = v71;
            __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CNKBannerPresentationDelegate);
            v72 = OUTLINED_FUNCTION_234_0();
            v74 = v73;
          }
          else
          {
            v74 = 0xE300000000000000;
            v72 = 7104878;
          }
          *(_QWORD *)&v106[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v72, v74, v101);
          OUTLINED_FUNCTION_183_3();
          OUTLINED_FUNCTION_27();

          *(_WORD *)(v70 + 12) = 2080;
          v78 = (*(uint64_t (**)(uint64_t))((*v48 & (uint64_t)v68->isa) + 0x180))(v77);
          if (v78)
          {
            *(_QWORD *)&v106[0] = v78;
            type metadata accessor for ConversationControlsManager(0);
            OUTLINED_FUNCTION_234_0();
            v80 = v79;
            OUTLINED_FUNCTION_181_5();
          }
          else
          {
            v80 = 0xE300000000000000;
            OUTLINED_FUNCTION_181_5();
            v81 = 7104878;
          }
          *(_QWORD *)&v106[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v81, v80, v101);
          OUTLINED_FUNCTION_183_3();
          swift_bridgeObjectRelease();

          OUTLINED_FUNCTION_26_6(&dword_1BD004000, v8, v69, "Attempted to present a banner without a presentationDelegate %s and/or a controlsManager %s", (uint8_t *)v70);
          OUTLINED_FUNCTION_25_6();
          OUTLINED_FUNCTION_60();
        }

        OUTLINED_FUNCTION_181_5();
        if (v5)
        {
          lazy protocol witness table accessor for type BannerPresentationError and conformance BannerPresentationError();
          v75 = OUTLINED_FUNCTION_10_8();
          v47 = OUTLINED_FUNCTION_227_1(v75, v76);
          goto LABEL_19;
        }
LABEL_42:
        OUTLINED_FUNCTION_9_10();
        goto LABEL_43;
      }
      OUTLINED_FUNCTION_125_7();
      v43 = OUTLINED_FUNCTION_37_4();
      if (OUTLINED_FUNCTION_13_0(v43))
      {
        v44 = (_WORD *)OUTLINED_FUNCTION_105();
        OUTLINED_FUNCTION_124_3(v44);
        v37 = "Call wants hold music, aborting banner presentation";
LABEL_16:
        OUTLINED_FUNCTION_130(&dword_1BD004000, v8, v32, v37, (uint8_t *)v0);
        OUTLINED_FUNCTION_60();
      }
    }

    if (v5)
    {
      lazy protocol witness table accessor for type BannerPresentationError and conformance BannerPresentationError();
      v45 = OUTLINED_FUNCTION_10_8();
      v47 = OUTLINED_FUNCTION_176_4(v45, v46);
LABEL_19:
      v5(v47);
LABEL_20:
      OUTLINED_FUNCTION_9_10();
      goto LABEL_21;
    }
    goto LABEL_42;
  }
  OUTLINED_FUNCTION_125_7();
  v38 = OUTLINED_FUNCTION_37_4();
  if (OUTLINED_FUNCTION_13_0(v38))
  {
    v39 = (_WORD *)OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_124_3(v39);
    OUTLINED_FUNCTION_130(&dword_1BD004000, v8, (os_log_type_t)v0, "No valid call found for requested type, aborting banner presentation", (uint8_t *)v0);
    OUTLINED_FUNCTION_60();
  }

  if (v5)
  {
    lazy protocol witness table accessor for type BannerPresentationError and conformance BannerPresentationError();
    v40 = OUTLINED_FUNCTION_10_8();
    v42 = OUTLINED_FUNCTION_176_4(v40, v41);
    v5(v42);
LABEL_21:

  }
LABEL_43:
  OUTLINED_FUNCTION_52_1();
}

id protocol witness for CallUIPresentationStateProvider.isPresentingFullScreenCallUI.getter in conformance BannerPresentationManager()
{
  void *v0;

  return objc_msgSend(v0, sel_isPresentingFullScreenCallUI);
}

BOOL BannerPresentationError.isApertureError.getter()
{
  unsigned __int8 *v0;

  return *v0 - 9 < 2;
}

BOOL static BannerPresentationError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

void BannerPresentationError.hash(into:)()
{
  unsigned __int8 *v0;

  Hasher._combine(_:)(*v0);
  OUTLINED_FUNCTION_0();
}

Swift::Int BannerPresentationError.hashValue.getter()
{
  unsigned __int8 *v0;
  Swift::UInt v1;

  v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

id BannerPresentationManager.activityManager.getter()
{
  return OUTLINED_FUNCTION_7(OBJC_IVAR____TtC15ConversationKit25BannerPresentationManager_activityManager);
}

id BannerPresentationManager.bannerActivityManager.getter()
{
  return OUTLINED_FUNCTION_7(OBJC_IVAR____TtC15ConversationKit25BannerPresentationManager_bannerActivityManager);
}

uint64_t key path setter for BannerPresentationManager.presentationDelegate : BannerPresentationManager(uint64_t a1, _QWORD **a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & **a2) + 0xF0);
  v3 = swift_unknownObjectRetain();
  return v2(v3);
}

void BannerPresentationManager.presentationDelegate.getter()
{
  BannerPresentationManager.presentationDelegate.getter();
}

{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_26();
}

void BannerPresentationManager.presentationDelegate.setter()
{
  OUTLINED_FUNCTION_2_0();
  swift_unknownObjectWeakAssign();
  OUTLINED_FUNCTION_19_0();
  OUTLINED_FUNCTION_43_1();
}

void BannerPresentationManager.presentationDelegate.modify()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2 = OUTLINED_FUNCTION_124_1();
  *v0 = v2;
  v3 = OBJC_IVAR____TtC15ConversationKit25BannerPresentationManager_presentationDelegate;
  v2[4] = v1;
  v2[5] = v3;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_26();
}

void sub_1BD448F20(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = a1;
  OUTLINED_FUNCTION_18();
}

void BannerPresentationManager.presentationDelegate.modify(void **a1, char a2)
{
  void *v3;

  v3 = *a1;
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {
    OUTLINED_FUNCTION_675();
    OUTLINED_FUNCTION_248();
  }
  else
  {
    OUTLINED_FUNCTION_248();
    OUTLINED_FUNCTION_10();
  }
  OUTLINED_FUNCTION_4_2(v3);
}

uint64_t key path setter for BannerPresentationManager.audioRoutingDelegate : BannerPresentationManager(uint64_t a1, _QWORD **a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x108);
  v3 = swift_unknownObjectRetain();
  return v2(v3);
}

void BannerPresentationManager.audioRoutingDelegate.didset()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  char *v4;
  uint64_t v5;

  v1 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v2 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x180))();
  if (v2)
  {
    v3 = (_QWORD *)v2;
    v4 = (char *)v0 + OBJC_IVAR____TtC15ConversationKit25BannerPresentationManager_audioRoutingDelegate;
    swift_beginAccess();
    v5 = MEMORY[0x1C3B752C0](v4);
    (*(void (**)(uint64_t))((*v1 & *v3) + 0x468))(v5);

  }
}

void BannerPresentationManager.audioRoutingDelegate.getter()
{
  BannerPresentationManager.presentationDelegate.getter();
}

void sub_1BD449090()
{
  OUTLINED_FUNCTION_32();
}

void BannerPresentationManager.audioRoutingDelegate.setter()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_124_0();
  swift_unknownObjectWeakAssign();
  BannerPresentationManager.audioRoutingDelegate.didset();
  OUTLINED_FUNCTION_19_0();
  OUTLINED_FUNCTION_8_15();
}

void BannerPresentationManager.audioRoutingDelegate.modify()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2 = OUTLINED_FUNCTION_124_1();
  *v0 = v2;
  v3 = OBJC_IVAR____TtC15ConversationKit25BannerPresentationManager_audioRoutingDelegate;
  v2[4] = v1;
  v2[5] = v3;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_26();
}

{
  void *v0;
  char v1;

  OUTLINED_FUNCTION_250_2();
  swift_unknownObjectWeakAssign();
  if ((v1 & 1) != 0)
  {
    OUTLINED_FUNCTION_675();
    OUTLINED_FUNCTION_248();
  }
  else
  {
    OUTLINED_FUNCTION_248();
    OUTLINED_FUNCTION_9_10();
    BannerPresentationManager.audioRoutingDelegate.didset();
  }
  OUTLINED_FUNCTION_4_2(v0);
}

void sub_1BD44912C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = a1;
  OUTLINED_FUNCTION_18();
}

uint64_t key path setter for BannerPresentationManager.inCallConversationControlsDelegate : BannerPresentationManager(uint64_t a1, _QWORD **a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(uint64_t (**)(uint64_t, uint64_t))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x120);
  v4 = swift_unknownObjectRetain();
  return v3(v4, v2);
}

void BannerPresentationManager.inCallConversationControlsDelegate.didset()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  char *v4;
  uint64_t v5;

  v1 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v2 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x180))();
  if (v2)
  {
    v3 = (_QWORD *)v2;
    v4 = (char *)v0 + OBJC_IVAR____TtC15ConversationKit25BannerPresentationManager_inCallConversationControlsDelegate;
    swift_beginAccess();
    v5 = MEMORY[0x1C3B752C0](v4);
    (*(void (**)(uint64_t, _QWORD))((*v1 & *v3) + 0x438))(v5, *((_QWORD *)v4 + 1));

  }
}

void BannerPresentationManager.inCallConversationControlsDelegate.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_26();
}

void BannerPresentationManager.inCallConversationControlsDelegate.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_6_6();
  v2 = v1 + OBJC_IVAR____TtC15ConversationKit25BannerPresentationManager_inCallConversationControlsDelegate;
  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v2 + 8) = v0;
  OUTLINED_FUNCTION_315_0();
  swift_unknownObjectWeakAssign();
  BannerPresentationManager.inCallConversationControlsDelegate.didset();
  OUTLINED_FUNCTION_113();
  OUTLINED_FUNCTION_8_15();
}

void BannerPresentationManager.inCallConversationControlsDelegate.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC15ConversationKit25BannerPresentationManager_inCallConversationControlsDelegate;
  v3[5] = v1;
  v3[6] = v4;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_26();
}

void sub_1BD449358(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 8);
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = v3;
  OUTLINED_FUNCTION_18();
}

void BannerPresentationManager.inCallConversationControlsDelegate.modify()
{
  _QWORD *v0;
  char v1;

  OUTLINED_FUNCTION_250_2();
  *(_QWORD *)(v0[5] + v0[6] + 8) = v0[4];
  swift_unknownObjectWeakAssign();
  if ((v1 & 1) != 0)
  {
    OUTLINED_FUNCTION_675();
    OUTLINED_FUNCTION_248();
  }
  else
  {
    OUTLINED_FUNCTION_248();
    OUTLINED_FUNCTION_9_10();
    BannerPresentationManager.inCallConversationControlsDelegate.didset();
  }
  OUTLINED_FUNCTION_4_2(v0);
}

void BannerPresentationManager._conversationControlsManager.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_4_3(a1, OBJC_IVAR____TtC15ConversationKit25BannerPresentationManager__conversationControlsManager);
}

uint64_t key path setter for BannerPresentationManager.handedOffCall : BannerPresentationManager(id *a1, _QWORD **a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x150);
  v4 = *a1;
  return v3(v2);
}

void BannerPresentationManager.handedOffCall.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_64_11();
  OUTLINED_FUNCTION_32();
}

void BannerPresentationManager.handedOffCall.setter(void *a1)
{
  ConversationDetailsView.leadingAccessoryView.setter(a1, &OBJC_IVAR____TtC15ConversationKit25BannerPresentationManager_handedOffCall);
}

void BannerPresentationManager.handedOffCall.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void BannerPresentationManager.activeCall.getter(uint64_t a1)
{
  uint64_t v1;
  id v2;
  id v3;
  void *v4;
  SEL v5;
  void *v6;
  SEL v7;
  void *v8;
  SEL v9;
  void *v10;
  SEL v11;
  id v12;

  v2 = OUTLINED_FUNCTION_123(a1, sel_currentAudioAndVideoCallCount);
  if ((uint64_t)v2 > 0
    || (v3 = OUTLINED_FUNCTION_123((uint64_t)v2, sel_frontmostBargeCall),
        OUTLINED_FUNCTION_406(v3),
        v1))
  {
    v4 = (void *)OUTLINED_FUNCTION_236_6();
    if (!objc_msgSend(v4, v5, 4))
    {
      v6 = (void *)OUTLINED_FUNCTION_236_6();
      if (!objc_msgSend(v6, v7, 3))
      {
        v8 = (void *)OUTLINED_FUNCTION_236_6();
        if (!objc_msgSend(v8, v9, 1))
        {
          v10 = (void *)OUTLINED_FUNCTION_236_6();
          if (!objc_msgSend(v10, v11, 2))
            v12 = OUTLINED_FUNCTION_123(0, sel_frontmostBargeCall);
        }
      }
    }
  }
  OUTLINED_FUNCTION_18();
}

uint64_t BannerPresentationManager.incomingCallActivity.setter(uint64_t a1)
{
  return OUTLINED_FUNCTION_117_1(a1);
}

void BannerPresentationManager.conversationControlsManager.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(void);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, uint64_t);
  uint64_t v36;
  char v38;
  void *v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  int EnumTagSinglePayload;
  uint64_t v46;
  int v47;
  void *v48;
  uint64_t v49;
  _BOOL4 v50;
  char v51;
  _QWORD *v52;
  int v53;
  char v54;
  _QWORD *v55;
  uint64_t (*v56)(void);
  _QWORD *v57;
  NSObject *v58;
  uint64_t v59;
  os_log_type_t v60;
  uint8_t *v61;
  uint64_t v62;
  unint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  void *v66;
  id v67;
  id v68;
  id v69;
  char *v70;
  _QWORD *v71;
  uint64_t v72;
  void (*v73)(uint64_t, _UNKNOWN **);
  uint64_t v74;
  uint64_t v75;
  void (*v76)(uint64_t, _UNKNOWN **);
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(uint64_t, _UNKNOWN **);
  uint64_t v84;
  void *v85;
  id v86;
  void *v87;
  id v88;
  uint64_t *v89;
  uint64_t v90;
  _QWORD *v91;
  uint64_t v92;
  void *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t (*v96)(void);
  void *v97;
  uint64_t (**v98)(uint64_t, uint64_t);
  uint64_t *v99;
  void *v100;
  uint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t ObjectType;
  uint64_t v109;
  Class isa;
  uint64_t v111;
  id v112;
  uint64_t v113;
  NSObject *v114;
  os_log_type_t v115;
  uint8_t *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t (*v120)(void);
  uint64_t v121;
  Class v122;
  uint64_t v123;
  uint64_t *v124;
  os_log_type_t v125;
  _WORD *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  void *v131;
  Class v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  _QWORD *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  _QWORD *v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint8_t *v145;
  uint64_t *v146;
  uint64_t v147;
  uint64_t v148[8];

  OUTLINED_FUNCTION_93();
  v2 = v0;
  v3 = OUTLINED_FUNCTION_33_0();
  v4 = *(_QWORD *)(v3 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_4_1();
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_77();
  v10 = v9 - v8;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_79();
  v144 = v12 - v13;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v133 - v15;
  MEMORY[0x1E0C80A78](v17);
  v145 = (uint8_t *)&v133 - v18;
  v19 = BannerPresentationManager.associatedCall.getter();
  if (v19)
  {
    v21 = v20;
    v142 = (char *)v1;
    v143 = OBJC_IVAR____TtC15ConversationKit25BannerPresentationManager__conversationControlsManager;
    v22 = *(_QWORD **)((char *)v0
                     + OBJC_IVAR____TtC15ConversationKit25BannerPresentationManager__conversationControlsManager);
    v146 = v0;
    v23 = v4;
    v24 = v3;
    v25 = (uint64_t)v19;
    if (!v22)
    {
LABEL_35:
      OUTLINED_FUNCTION_61();
      v58 = MEMORY[0x1C3B72E00](0xD000000000000013);
      OUTLINED_FUNCTION_174_4((uint64_t)v58, sel_dismissPresentedBannerForReason_animated_);

      if (one-time initialization token for conversationControls != -1)
        swift_once();
      v59 = OUTLINED_FUNCTION_17_2();
      OUTLINED_FUNCTION_182_3(v59, (uint64_t)&static Logger.conversationControls);
      swift_unknownObjectRetain_n();
      Logger.logObject.getter();
      v60 = OUTLINED_FUNCTION_12_0();
      if (OUTLINED_FUNCTION_4_14(v60))
      {
        v141 = v24;
        v61 = (uint8_t *)OUTLINED_FUNCTION_105();
        v148[0] = OUTLINED_FUNCTION_105();
        *(_DWORD *)v61 = 136315138;
        v145 = v61 + 4;
        OUTLINED_FUNCTION_230_2();
        v147 = v25;
        swift_unknownObjectRetain();
        v62 = String.init<A>(describing:)();
        v147 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v62, v63, v148);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease_n();
        OUTLINED_FUNCTION_48(&dword_1BD004000, v58, (os_log_type_t)v16, "updateConversationControlsManager for call: %s", v61);
        OUTLINED_FUNCTION_21();
        OUTLINED_FUNCTION_60();
      }
      swift_unknownObjectRelease_n();

      v64 = (_QWORD *)MEMORY[0x1E0DEEDD8];
      v65 = v143;
      v66 = *(void **)((char *)v2 + OBJC_IVAR____TtC15ConversationKit25BannerPresentationManager_placeholderCallCenter);
      objc_opt_self();
      swift_unknownObjectRetain();
      v67 = v66;
      v68 = OUTLINED_FUNCTION_25_1((uint64_t)v67, sel_sharedInstance);
      v69 = objc_allocWithZone((Class)type metadata accessor for CallCenter());
      v70 = CallCenter.init(callCenter:placeholderCallCenter:shouldRegisterForMediaControllerChanges:shouldRegisterForReactionsControllerChanges:)(v68, v67, 0, 1);
      v71 = specialized ConversationControlsManager.__allocating_init(activeCall:callCenter:)(v25, v21, v70);
      OUTLINED_FUNCTION_136_1();
      v73 = *(void (**)(uint64_t, _UNKNOWN **))(v72 + 1032);
      v74 = OUTLINED_FUNCTION_71_17();
      v73(v74, &protocol witness table for BannerPresentationManager);
      OUTLINED_FUNCTION_136_1();
      v76 = *(void (**)(uint64_t, _UNKNOWN **))(v75 + 1008);
      v77 = OUTLINED_FUNCTION_71_17();
      v76(v77, &protocol witness table for BannerPresentationManager);
      OUTLINED_FUNCTION_136_1();
      OUTLINED_FUNCTION_54_0(*(uint64_t (**)(void))(v78 + 256));
      OUTLINED_FUNCTION_136_1();
      (*(void (**)(void))(v79 + 1128))();
      OUTLINED_FUNCTION_136_1();
      (*(void (**)(void))(v80 + 280))();
      OUTLINED_FUNCTION_136_1();
      (*(void (**)(void))(v81 + 1080))();
      OUTLINED_FUNCTION_136_1();
      v83 = *(void (**)(uint64_t, _UNKNOWN **))(v82 + 1176);
      v84 = OUTLINED_FUNCTION_71_17();
      v83(v84, &protocol witness table for BannerPresentationManager);
      v85 = *(void **)((char *)v2 + v65);
      if (v85)
      {
        v86 = v85;
        OUTLINED_FUNCTION_187_3();

        v87 = *(void **)((char *)v2 + v65);
        if (v87)
        {
          v88 = v87;
          OUTLINED_FUNCTION_187_3();

        }
      }
      v89 = v2;
      v90 = v21;
      v91 = v71;
      BannerPresentationManager._conversationControlsManager.setter((uint64_t)v71);
      v92 = OUTLINED_FUNCTION_43_6(*v89);
      if (v92)
      {
        v93 = (void *)v92;
        OUTLINED_FUNCTION_136_1();
        (*(void (**)(_QWORD *))(v94 + 448))(v91);

      }
      OUTLINED_FUNCTION_136_1();
      v96 = *(uint64_t (**)(void))(v95 + 624);
      v97 = (void *)v96();
      ConversationControlsManager.controlsHUDUpdate(for:)(v97, v98);
      OUTLINED_FUNCTION_9_10();
      outlined init with copy of ConversationControlsType((uint64_t)v148, (uint64_t)&v147);
      v99 = v146;
      v100 = (void *)OUTLINED_FUNCTION_308(*v146);
      OUTLINED_FUNCTION_406(v100);
      if (v99
        || (ConversationControlsType.isFirstOrThirdPartyIncomingCall.getter() & 1) == 0
        || (v101 = OUTLINED_FUNCTION_230_2(),
            ((*(uint64_t (**)(uint64_t, uint64_t))(v90 + 128))(v101, v90) & 1) != 0)
        || (v102 = *(uint64_t **)((char *)v146 + OBJC_IVAR____TtC15ConversationKit25BannerPresentationManager_features),
            OUTLINED_FUNCTION_136_1(),
            ((*(uint64_t (**)(void))(v103 + 168))() & 1) != 0)
        || (OUTLINED_FUNCTION_136_1(), ((*(uint64_t (**)(void))(v104 + 88))() & 1) == 0)
        || (OUTLINED_FUNCTION_12_67(*v102) & 1) != 0)
      {
        v105 = v146;
        BannerPresentationManager.updatePresentedHUD(type:replacingNotice:)();
      }
      else
      {
        v105 = v146;
        BannerPresentationManager.presentBanner(as:type:reply:)();
      }
      if (OUTLINED_FUNCTION_54_0(*(uint64_t (**)(void))((*v64 & *v105) + 0xE8)))
      {
        v96();
        v107 = v106;
        ObjectType = swift_getObjectType();
        v109 = (uint64_t)v142;
        (*(void (**)(uint64_t, uint64_t))(v107 + 200))(ObjectType, v107);
        OUTLINED_FUNCTION_10();
        isa = UUID._bridgeToObjectiveC()().super.isa;
        v111 = OUTLINED_FUNCTION_584(v109, *(uint64_t (**)(uint64_t, uint64_t))(v23 + 8));
        OUTLINED_FUNCTION_137(v111, sel_bannerPresentationManagerUpdatedControlsManagerCallUUID_);
        OUTLINED_FUNCTION_9_10();

      }
      OUTLINED_FUNCTION_25_24();
      OUTLINED_FUNCTION_172_2();
      outlined destroy of ControlsHUDUpdate((uint64_t)v148);
      v112 = *(id *)((char *)v105 + v65);
      goto LABEL_54;
    }
    v135 = v10;
    v134 = v23;
    v141 = v24;
    v26 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v22) + 0x270);
    v140 = v22;
    v136 = v22;
    v27 = v26();
    v29 = v28;
    v30 = swift_getObjectType();
    v31 = (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 48))(v30, v29);
    v33 = v32;
    v34 = OUTLINED_FUNCTION_230_2();
    v35 = *(uint64_t (**)(uint64_t, uint64_t))(v21 + 48);
    v138 = v34;
    v139 = v21;
    if (v31 == v35(v34, v21) && v33 == v36)
    {
      swift_bridgeObjectRelease_n();
      OUTLINED_FUNCTION_202();
      goto LABEL_13;
    }
    v137 = v27;
    v133 = v25;
    v38 = _stringCompareWithSmolCheck(_:_:expecting:)();
    OUTLINED_FUNCTION_27();
    swift_bridgeObjectRelease();
    if ((v38 & 1) != 0)
    {
      swift_unknownObjectRelease();
LABEL_13:
      swift_unknownObjectRelease();
      goto LABEL_54;
    }
    v41 = (uint64_t)v145;
    (*(void (**)(uint64_t, uint64_t))(v29 + 56))(v30, v29);
    v25 = v133;
    OUTLINED_FUNCTION_168_2();
    v42 = v135;
    v43 = v135 + *(int *)(v6 + 48);
    OUTLINED_FUNCTION_179_2(v41, v135);
    OUTLINED_FUNCTION_179_2((uint64_t)v16, v43);
    v24 = v141;
    if (__swift_getEnumTagSinglePayload(v42, 1, v141) == 1)
    {
      v44 = (char *)&demangling cache variable for type metadata for UUID?;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v16, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v41, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v43, 1, v24);
      v23 = v134;
      v21 = v139;
      v2 = v146;
      if (EnumTagSinglePayload == 1)
      {
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v42, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        OUTLINED_FUNCTION_162_6();
        goto LABEL_21;
      }
    }
    else
    {
      v46 = v144;
      outlined init with copy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v42, v144, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      v47 = __swift_getEnumTagSinglePayload(v43, 1, v24);
      v23 = v134;
      v44 = v142;
      v2 = v146;
      if (v47 != 1)
      {
        OUTLINED_FUNCTION_107_0((uint64_t)v142, v43, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v134 + 32));
        lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
        OUTLINED_FUNCTION_315_0();
        v43 = dispatch thunk of static Equatable.== infix(_:_:)();
        OUTLINED_FUNCTION_208_2();
        v44 = (char *)v46;
        OUTLINED_FUNCTION_18_18((uint64_t)v16);
        OUTLINED_FUNCTION_18_18((uint64_t)v145);
        OUTLINED_FUNCTION_208_2();
        OUTLINED_FUNCTION_18_18(v42);
        v21 = v139;
        OUTLINED_FUNCTION_162_6();
        if ((v43 & 1) == 0)
          goto LABEL_31;
LABEL_21:
        v48 = (void *)OUTLINED_FUNCTION_54_0(*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v2) + 0x160));
        OUTLINED_FUNCTION_406(v48);
        v50 = v43
           && (type metadata accessor for PlaceholderCall(), (v49 = swift_dynamicCastClass()) != 0)
           && *(unsigned __int8 *)(v49 + 16) == 1;
        BannerPresentationManager.onlyHasPlaceholderCall.getter();
        if ((v51 & 1) != 0)
        {
          v52 = PlaceholderCallCenter.activeCall.getter();
          if (v52)
          {
            v53 = *((unsigned __int8 *)v52 + 16);
            swift_release();
            v54 = v53 == 1 || v50;
            if ((v54 & 1) == 0)
            {
LABEL_31:

              OUTLINED_FUNCTION_202();
              v55 = *(_QWORD **)&v44[(_QWORD)v2];
              if (v55)
              {
                v56 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v55) + 0x770);
                v57 = v55;
                if ((v56() & 1) != 0)
                  objc_msgSend(v57, sel_dismissConfirmLeavePTTChannelAlert);

              }
              goto LABEL_35;
            }
          }
          else if (!v50)
          {
            goto LABEL_31;
          }
        }
        else if (!v50)
        {
          goto LABEL_31;
        }
        *((_BYTE *)v2
        + OBJC_IVAR____TtC15ConversationKit25BannerPresentationManager_shouldRequestHUDPresentationOnAVUpgradeOrDowngrade) = 1;
        if (one-time initialization token for conversationControls != -1)
          swift_once();
        v113 = OUTLINED_FUNCTION_17_2();
        v146 = (uint64_t *)__swift_project_value_buffer(v113, (uint64_t)&static Logger.conversationControls);
        v114 = v146;
        Logger.logObject.getter();
        v115 = OUTLINED_FUNCTION_12_0();
        if (OUTLINED_FUNCTION_51_3(v115))
        {
          v116 = (uint8_t *)OUTLINED_FUNCTION_105();
          *(_WORD *)v116 = 0;
          OUTLINED_FUNCTION_130(&dword_1BD004000, v114, (os_log_type_t)v21, "Detected AVLess transition, dont need to dismiss banner", v116);
          OUTLINED_FUNCTION_60();
        }

        OUTLINED_FUNCTION_39_6();
        v118 = v139;
        (*(void (**)(uint64_t, uint64_t))(v117 + 2512))(v25, v139);
        OUTLINED_FUNCTION_39_6();
        v120 = *(uint64_t (**)(void))(v119 + 232);
        if (v120())
        {
          v121 = (uint64_t)v142;
          (*(void (**)(uint64_t, uint64_t))(v118 + 200))(v138, v118);
          v122 = UUID._bridgeToObjectiveC()().super.isa;
          v123 = OUTLINED_FUNCTION_584(v121, *(uint64_t (**)(uint64_t, uint64_t))(v23 + 8));
          OUTLINED_FUNCTION_137(v123, sel_bannerPresentationManagerUpdatedControlsManagerCallUUID_);
          OUTLINED_FUNCTION_9_10();

        }
        if (v50)
        {
          v124 = v146;
          Logger.logObject.getter();
          v125 = OUTLINED_FUNCTION_12_0();
          if (OUTLINED_FUNCTION_5_3(v125))
          {
            v126 = (_WORD *)OUTLINED_FUNCTION_105();
            OUTLINED_FUNCTION_47_2(v126);
            OUTLINED_FUNCTION_2_5(&dword_1BD004000, v127, v128, "Notifying presentation delegate of AV upgrade");
            OUTLINED_FUNCTION_60();
          }

          v129 = v120();
          v130 = (uint64_t)v142;
          if (v129)
          {
            v131 = (void *)v129;
            OUTLINED_FUNCTION_168_2();
            v132 = UUID._bridgeToObjectiveC()().super.isa;
            OUTLINED_FUNCTION_584(v130, *(uint64_t (**)(uint64_t, uint64_t))(v23 + 8));
            objc_msgSend(v131, sel_bannerPresentationManagerBannerPresentationManagerAVUpgradedCallUUID_, v132);
            OUTLINED_FUNCTION_19_0();
            OUTLINED_FUNCTION_25_24();
            OUTLINED_FUNCTION_202();

            goto LABEL_54;
          }
        }
        OUTLINED_FUNCTION_25_24();
        goto LABEL_13;
      }
      OUTLINED_FUNCTION_9_42((uint64_t)v16);
      OUTLINED_FUNCTION_9_42((uint64_t)v145);
      OUTLINED_FUNCTION_584(v46, *(uint64_t (**)(uint64_t, uint64_t))(v23 + 8));
      v21 = v139;
    }
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v42, (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
    OUTLINED_FUNCTION_162_6();
    goto LABEL_31;
  }
  BannerPresentationManager._conversationControlsManager.setter(0);
  v39 = (void *)OUTLINED_FUNCTION_16_3(*v0);
  if (v39)
  {
    objc_msgSend(v39, sel_bannerPresentationManagerUpdatedControlsManagerCallUUID_, 0);
    OUTLINED_FUNCTION_10();
  }
  v40 = (void *)MEMORY[0x1C3B72E00](0x7669746361206F4ELL, 0xEE006C6C61632065);
  OUTLINED_FUNCTION_174_4((uint64_t)v40, sel_dismissPresentedBannerForReason_animated_);

LABEL_54:
  OUTLINED_FUNCTION_52_1();
}

_QWORD *BannerPresentationManager.associatedCall.getter()
{
  _QWORD *v0;
  void *v1;
  NSObject *v2;
  os_log_type_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t (*v6)(void);
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  id v10;
  os_log_type_t v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  os_log_type_t v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  OUTLINED_FUNCTION_206();
  v4 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v6 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v5) + 0x160);
  v7 = v6();
  if (v7)
  {
    v8 = v7;
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v9 = OUTLINED_FUNCTION_17_2();
    __swift_project_value_buffer(v9, (uint64_t)&static Logger.conversationControls);
    v10 = OUTLINED_FUNCTION_24_10();
    OUTLINED_FUNCTION_213_2();
    v11 = OUTLINED_FUNCTION_12_0();
    if (OUTLINED_FUNCTION_4_14(v11))
    {
      OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_232_4(4.8149e-34);
      v12 = objc_msgSend(v1, sel_callUUID);
      OUTLINED_FUNCTION_177_4();
      OUTLINED_FUNCTION_262_5();
      v13 = OUTLINED_FUNCTION_229();
      OUTLINED_FUNCTION_225(v13, v14, v15, v16, v17, v18, v19);
      OUTLINED_FUNCTION_85_19();

      swift_bridgeObjectRelease();
      v20 = "Associated call is an active call %s";
      goto LABEL_11;
    }
LABEL_12:

    goto LABEL_13;
  }
  v21 = OUTLINED_FUNCTION_54_0(*(uint64_t (**)(void))((*v4 & *v0) + 0x148));
  if (v21)
  {
    v8 = v21;
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v22 = OUTLINED_FUNCTION_17_2();
    __swift_project_value_buffer(v22, (uint64_t)&static Logger.conversationControls);
    v23 = OUTLINED_FUNCTION_24_10();
    OUTLINED_FUNCTION_213_2();
    v24 = OUTLINED_FUNCTION_12_0();
    if (OUTLINED_FUNCTION_4_14(v24))
    {
      OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_232_4(4.8149e-34);
      v25 = objc_msgSend(v1, sel_callUUID);
      OUTLINED_FUNCTION_177_4();
      OUTLINED_FUNCTION_262_5();
      v26 = OUTLINED_FUNCTION_229();
      OUTLINED_FUNCTION_225(v26, v27, v28, v29, v30, v31, v32);
      OUTLINED_FUNCTION_85_19();

      swift_bridgeObjectRelease();
      v20 = "Associated call is a handed off call %s";
LABEL_11:
      OUTLINED_FUNCTION_39_58(&dword_1BD004000, v8, v3, v20);
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_60();
    }
    goto LABEL_12;
  }
  if (OUTLINED_FUNCTION_216_5())
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v36 = OUTLINED_FUNCTION_17_2();
    OUTLINED_FUNCTION_182_3(v36, (uint64_t)&static Logger.conversationControls);
    swift_retain_n();
    Logger.logObject.getter();
    v37 = OUTLINED_FUNCTION_251_0();
    if (os_log_type_enabled(v2, v37))
    {
      v38 = (uint8_t *)OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_105();
      *(_DWORD *)v38 = 136315138;
      UUID.uuidString.getter();
      v39 = OUTLINED_FUNCTION_229();
      OUTLINED_FUNCTION_225(v39, v40, v41, v42, v43, v44, v45);
      OUTLINED_FUNCTION_222();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      OUTLINED_FUNCTION_27();
      OUTLINED_FUNCTION_48(&dword_1BD004000, v2, v37, "Associated call is a placeholder call %s", v38);
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_60();
    }

    swift_release_n();
  }
LABEL_13:
  if (((*(uint64_t (**)(void))((*v4 & **(_QWORD **)((char *)v0
                                                  + OBJC_IVAR____TtC15ConversationKit25BannerPresentationManager_features))
                             + 0xC0))() & 1) != 0
    && (v33 = objc_msgSend(*(id *)((char *)v0 + OBJC_IVAR____TtC15ConversationKit25BannerPresentationManager_callCenter), sel_incomingCall)) != 0|| (v33 = (_QWORD *)v6()) != 0|| (v33 = (_QWORD *)OUTLINED_FUNCTION_54_0(*(uint64_t (**)(void))((*v4 & *v0) + 0x148))) != 0)
  {
    v34 = v33;
    lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop(&lazy protocol witness table cache variable for type TUCall and conformance TUCall, (unint64_t *)&lazy cache variable for type metadata for TUCall);
  }
  else
  {
    v34 = OUTLINED_FUNCTION_216_5();
    if (v34)
      lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type PlaceholderCall and conformance PlaceholderCall, (void (*)(uint64_t))type metadata accessor for PlaceholderCall);
  }
  return v34;
}

void BannerPresentationManager.onlyHasPlaceholderCall.getter()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  void *v3;

  v1 = v0;
  v2 = PlaceholderCallCenter.activeCall.getter();
  swift_release();
  if (v2)
  {
    v3 = (void *)OUTLINED_FUNCTION_54_0(*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x160));
    if (v3)

  }
  OUTLINED_FUNCTION_0();
}

void BannerPresentationManager.presentBanner(as:type:reply:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _OWORD v5[2];
  uint64_t v6;
  char v7;

  v0 = OUTLINED_FUNCTION_33_0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_77();
  v4 = v3 - v2;
  v6 = 0;
  memset(v5, 0, sizeof(v5));
  v7 = -1;
  UUID.init()();
  OUTLINED_FUNCTION_49_16();
  BannerPresentationManager.presentBanner(as:type:activityTypeForNewBanner:activityUUID:fromActivityManager:reply:)();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v4, v0);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v5, &demangling cache variable for type metadata for ConversationControlsType?);
  OUTLINED_FUNCTION_65_1();
}

void BannerPresentationManager.updatePresentedHUD(type:replacingNotice:)()
{
  uint64_t v0;
  char v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(uint64_t);
  void (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[6];
  __int128 v34[3];

  OUTLINED_FUNCTION_93();
  v2 = v1;
  v4 = v3;
  v5 = type metadata accessor for DispatchTimeInterval();
  v29 = *(_QWORD *)(v5 - 8);
  v30 = v5;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char **)((char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v31 = type metadata accessor for DispatchTime();
  v28 = *(_QWORD *)(v31 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_79();
  v12 = v10 - v11;
  MEMORY[0x1E0C80A78](v13);
  v27 = (char *)&v27 - v14;
  OUTLINED_FUNCTION_285_0();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_77_1();
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit25BannerPresentationManager_updateWorkItem))
  {
    swift_retain();
    dispatch thunk of DispatchWorkItem.cancel()();
    OUTLINED_FUNCTION_43();
  }
  v16 = OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_28_3();
  outlined init with copy of ConversationControlsType(v4, (uint64_t)v34);
  v17 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v17 + 16) = v16;
  outlined init with take of ConversationControlsType(v34, (_OWORD *)(v17 + 24));
  *(_BYTE *)(v17 + 65) = v2 & 1;
  v33[4] = partial apply for closure #1 in BannerPresentationManager.updatePresentedHUD(type:replacingNotice:);
  v33[5] = v17;
  v33[0] = MEMORY[0x1E0C809B0];
  v33[1] = 1107296256;
  v33[2] = thunk for @escaping @callee_guaranteed () -> ();
  v33[3] = &block_descriptor_10_2;
  _Block_copy(v33);
  v32 = MEMORY[0x1E0DEE9D8];
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))MEMORY[0x1E0DEF4F8]);
  swift_retain();
  OUTLINED_FUNCTION_31_11();
  OUTLINED_FUNCTION_34_7(&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  type metadata accessor for DispatchWorkItem();
  swift_allocObject();
  v18 = DispatchWorkItem.init(flags:block:)();
  swift_release();
  swift_release();
  v19 = swift_retain();
  v20 = BannerPresentationManager.updateWorkItem.setter(v19);
  OUTLINED_FUNCTION_59(v20, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v21 = (void *)OUTLINED_FUNCTION_7_22();
  static DispatchTime.now()();
  *v8 = 150;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v29 + 104))(v8, *MEMORY[0x1E0DEF490], v30);
  v22 = v27;
  MEMORY[0x1C3B72C44](v12, v8);
  v23 = OUTLINED_FUNCTION_315_0();
  v24(v23);
  v25 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
  v25(v12, v31);
  MEMORY[0x1C3B735BC](v22, v18);

  swift_release();
  v26 = OUTLINED_FUNCTION_49_16();
  ((void (*)(uint64_t))v25)(v26);
  OUTLINED_FUNCTION_52_1();
}

void BannerPresentationManager.presentedBanner.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_64_11();
  OUTLINED_FUNCTION_32();
}

void BannerPresentationManager.presentedBanner.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  id v5;

  v3 = (void **)(v1 + OBJC_IVAR____TtC15ConversationKit25BannerPresentationManager_presentedBanner);
  OUTLINED_FUNCTION_2_0();
  v4 = *v3;
  *v3 = a1;
  v5 = a1;

  BannerPresentationManager.presentedBanner.didset();
  OUTLINED_FUNCTION_8_15();
}

void key path setter for BannerPresentationManager.presentedBanner : BannerPresentationManager(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  BannerPresentationManager.presentedBanner.setter(v1);
}

uint64_t BannerPresentationManager.presentedBanner.didset()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t result;

  BannerPresentationManager.invalidateAndReschedulePresentedBannerTimer(reschedule:)(1);
  BannerPresentationManager.invalidateAndRescheduleSystemApertureTimer(reschedule:)(1);
  v1 = (_QWORD *)((char *)v0 + OBJC_IVAR____TtC15ConversationKit25BannerPresentationManager_presentedBanner);
  result = swift_beginAccess();
  if (!*v1)
    return (*(uint64_t (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x150))(0);
  return result;
}

Swift::Void __swiftcall BannerPresentationManager.invalidateAndRescheduleTimer(reschedule:)(Swift::Bool reschedule)
{
  BannerPresentationManager.invalidateAndReschedulePresentedBannerTimer(reschedule:)(reschedule);
  BannerPresentationManager.invalidateAndRescheduleSystemApertureTimer(reschedule:)(reschedule);
}

uint64_t key path setter for BannerPresentationManager.presentedSystemApertureElement : BannerPresentationManager(id *a1, _QWORD **a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x1A8);
  v4 = *a1;
  return v3(v2);
}

void BannerPresentationManager.presentedSystemApertureElement.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_64_11();
  OUTLINED_FUNCTION_32();
}

void BannerPresentationManager.presentedSystemApertureElement.setter(void *a1)
{
  ConversationDetailsView.leadingAccessoryView.setter(a1, &OBJC_IVAR____TtC15ConversationKit25BannerPresentationManager_presentedSystemApertureElement);
}

void BannerPresentationManager.presentedSystemApertureElement.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void BannerPresentationManager.isAlertAvailable.getter()
{
  BannerPresentationManager.isAlertAvailable.getter();
}

{
  SEL *v0;
  uint64_t v1;
  void *v2;

  OUTLINED_FUNCTION_9_33();
  v2 = (void *)OUTLINED_FUNCTION_16_3(v1);
  if (v2)
  {
    objc_msgSend(v2, *v0);
    OUTLINED_FUNCTION_10();
  }
  OUTLINED_FUNCTION_0();
}

uint64_t BannerPresentationManager.updateWorkItem.setter(uint64_t a1)
{
  return OUTLINED_FUNCTION_117_1(a1);
}

void BannerPresentationManager.makeSystemApertureElementProvider()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_4_75();
  if ((OUTLINED_FUNCTION_12_67(v0) & 1) != 0)
  {
    OUTLINED_FUNCTION_351();
    if (OUTLINED_FUNCTION_54_0(*(uint64_t (**)(void))(v1 + 480)))
    {
      ObjC metadata update function for SystemBannerHostViewController();
      if (!swift_dynamicCastClass())
        OUTLINED_FUNCTION_10();
    }
    OUTLINED_FUNCTION_351();
    (*(void (**)(void))(v2 + 424))();
    OUTLINED_FUNCTION_351();
    (*(void (**)(void))(v3 + 416))();
  }
  else
  {
    OUTLINED_FUNCTION_18();
  }
}

_QWORD *BannerPresentationManager.makeOrphanSystemApertureElementProvider()()
{
  uint64_t *v0;
  uint8_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  void *v9;
  uint64_t (**v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  char *v18;
  uint64_t *v19;
  _QWORD *v20;
  uint64_t v21;
  os_log_type_t v22;
  _WORD *v23;
  _BYTE v26[48];
  _BYTE v27[48];
  uint64_t v28;

  v2 = v0;
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v3);
  v5 = &v26[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = OUTLINED_FUNCTION_26_62(*v0);
  if (!v6)
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v21 = OUTLINED_FUNCTION_17_2();
    OUTLINED_FUNCTION_3(v21, (uint64_t)&static Logger.conversationControls);
    v22 = OUTLINED_FUNCTION_37_4();
    if (OUTLINED_FUNCTION_13_0(v22))
    {
      v23 = (_WORD *)OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_124_3(v23);
      OUTLINED_FUNCTION_130(&dword_1BD004000, v0, (os_log_type_t)v0, "Unable to obtain ConversationControlsManager", v1);
      OUTLINED_FUNCTION_60();
    }

    return 0;
  }
  v7 = (_QWORD *)v6;
  if ((OUTLINED_FUNCTION_12_67(**(_QWORD **)((char *)v0
                                            + OBJC_IVAR____TtC15ConversationKit25BannerPresentationManager_features)) & 1) == 0)
  {

    return 0;
  }
  OUTLINED_FUNCTION_154();
  v9 = (void *)(*(uint64_t (**)(void))(v8 + 624))();
  ConversationControlsManager.controlsHUDUpdate(for:)(v9, v10);
  swift_unknownObjectRelease();
  v11 = v28;
  outlined init with copy of ConversationControlsType((uint64_t)v27, (uint64_t)v26);
  if (one-time initialization token for shared != -1)
    swift_once();
  v12 = static Defaults.shared;
  v13 = one-time initialization token for shared;
  swift_retain();
  if (v13 != -1)
    swift_once();
  v14 = static Features.shared;
  v15 = (void *)objc_opt_self();
  v16 = v14;
  v17 = objc_msgSend(v15, sel_defaultCenter);
  UUID.init()();
  v18 = (char *)objc_allocWithZone((Class)ObjC metadata update function for SystemBannerHostViewController());
  v19 = v2;
  v20 = specialized SystemBannerHostViewController.init(controlsManager:sizeClass:type:delegate:isSystemAperturePresentation:requesterIdentifier:destination:layoutDescription:defaults:features:notificationCenter:activityUUID:fromActivityManager:)(v7, v11, (uint64_t)v26, (uint64_t)v2, 1, 0, 0, 0, 1u, 0, v12, (uint64_t)v16, v17, (uint64_t)v5, 0, v18);
  outlined destroy of ControlsHUDUpdate((uint64_t)v27);
  return v20;
}

void BannerPresentationManager.presentedBannerDismissalTimer.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_4_3(a1, OBJC_IVAR____TtC15ConversationKit25BannerPresentationManager_presentedBannerDismissalTimer);
}

void BannerPresentationManager.systemApertureElementDismissalTimer.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_4_3(a1, OBJC_IVAR____TtC15ConversationKit25BannerPresentationManager_systemApertureElementDismissalTimer);
}

void BannerPresentationManager.inCallControlsVisible.getter()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;

  v1 = OUTLINED_FUNCTION_26_62(*v0);
  if (v1)
  {
    v2 = (void *)v1;
    OUTLINED_FUNCTION_128();
    v4 = (*(uint64_t (**)(void))(v3 + 1072))();
    v6 = v5;

    if (v4)
    {
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v6 + 16))(ObjectType, v6);
      OUTLINED_FUNCTION_10();
    }
  }
  OUTLINED_FUNCTION_18();
}

uint64_t BannerPresentationManager.requesterIdentifier.getter()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t result;
  uint64_t v3;

  type metadata accessor for BannerPresentationManager();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  result = outlined bridged method (ob) of @objc NSBundle.bundleIdentifier.getter(v1);
  if (!v3)
  {
    result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

void BannerPresentationManager.previouslyHadMultipleCalls.didset(char a1)
{
  _QWORD *v1;
  _QWORD *v3;
  _QWORD *v4;
  int v5;
  void *v6;
  uint64_t (**v7)(uint64_t, uint64_t);
  id v8;
  _BYTE v9[56];

  v3 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v4 = (_QWORD *)(*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x180))();
  if (v4)
  {
    v5 = *((unsigned __int8 *)v1
         + OBJC_IVAR____TtC15ConversationKit25BannerPresentationManager_previouslyHadMultipleCalls);
    if (v5 == 2)
    {
      if (a1 != 2)
      {
LABEL_8:
        v8 = v4;
        v6 = (void *)(*(uint64_t (**)(void))((*v3 & *v4) + 0x270))();
        ConversationControlsManager.controlsHUDUpdate(for:)(v6, v7);
        swift_unknownObjectRelease();
        BannerPresentationManager.updatePresentedHUD(type:replacingNotice:)();

        outlined destroy of ConversationControlsType((uint64_t)v9);
        return;
      }
    }
    else if (a1 == 2 || ((((a1 & 1) == 0) ^ v5) & 1) == 0)
    {
      goto LABEL_8;
    }

  }
}

void BannerPresentationManager.previouslyHadMultipleCalls.setter(char a1)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit25BannerPresentationManager_previouslyHadMultipleCalls);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit25BannerPresentationManager_previouslyHadMultipleCalls) = a1;
  BannerPresentationManager.previouslyHadMultipleCalls.didset(v2);
}

void BannerPresentationManager.__allocating_init(delegate:)()
{
  objc_class *v0;
  id v1;

  v1 = objc_allocWithZone(v0);
  BannerPresentationManager.init(delegate:)();
  OUTLINED_FUNCTION_0();
}

char *BannerPresentationManager.init(delegate:)()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  char *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  _QWORD *v40;
  uint64_t (*v41)(void);
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *);
  char *v46;
  id v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  void (*v51)(char *, _UNKNOWN **);
  id v52;
  id v53;
  void *v54;
  uint64_t v55;
  void (*v56)(char *, _UNKNOWN **);
  id v57;
  id v58;
  objc_super v60;

  v1 = OBJC_IVAR____TtC15ConversationKit25BannerPresentationManager_activityManager;
  v2 = one-time initialization token for shared;
  v3 = v0;
  if (v2 != -1)
    swift_once();
  v4 = static HUDActivityManager.shared;
  *(_QWORD *)&v0[v1] = static HUDActivityManager.shared;
  v5 = OBJC_IVAR____TtC15ConversationKit25BannerPresentationManager_bannerActivityManager;
  v6 = one-time initialization token for shared;
  v7 = v4;
  if (v6 != -1)
    swift_once();
  v8 = static BannerActivityManager.shared;
  *(_QWORD *)&v3[v5] = static BannerActivityManager.shared;
  OUTLINED_FUNCTION_54();
  OUTLINED_FUNCTION_54();
  *(_QWORD *)&v3[OBJC_IVAR____TtC15ConversationKit25BannerPresentationManager_inCallConversationControlsDelegate + 8] = 0;
  OUTLINED_FUNCTION_54();
  *(_QWORD *)&v3[OBJC_IVAR____TtC15ConversationKit25BannerPresentationManager__conversationControlsManager] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC15ConversationKit25BannerPresentationManager_handedOffCall] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC15ConversationKit25BannerPresentationManager_incomingCallActivity] = 0;
  v9 = OBJC_IVAR____TtC15ConversationKit25BannerPresentationManager_callCenter;
  objc_opt_self();
  *(_QWORD *)&v3[v9] = OUTLINED_FUNCTION_25_1((uint64_t)v8, sel_sharedInstance);
  *(_QWORD *)&v3[OBJC_IVAR____TtC15ConversationKit25BannerPresentationManager_presentedBanner] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC15ConversationKit25BannerPresentationManager_presentedSystemApertureElement] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC15ConversationKit25BannerPresentationManager_updateWorkItem] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC15ConversationKit25BannerPresentationManager_presentedBannerDismissalTimer] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC15ConversationKit25BannerPresentationManager_systemApertureElementDismissalTimer] = 0;
  v10 = OBJC_IVAR____TtC15ConversationKit25BannerPresentationManager_placeholderCallCenter;
  v11 = type metadata accessor for PlaceholderCallCenter();
  v12 = OUTLINED_FUNCTION_25_1(v11, sel_sharedInstance);
  PlaceholderCallCenter.__allocating_init(callCenter:)(v12);
  *(_QWORD *)&v3[v10] = v13;
  v3[OBJC_IVAR____TtC15ConversationKit25BannerPresentationManager_shouldRequestHUDPresentationOnAVUpgradeOrDowngrade] = 0;
  v3[OBJC_IVAR____TtC15ConversationKit25BannerPresentationManager_previouslyHadMultipleCalls] = 2;
  v14 = &v3[OBJC_IVAR____TtC15ConversationKit25BannerPresentationManager_defaults];
  if (one-time initialization token for shared != -1)
    swift_once();
  *(_QWORD *)v14 = static Defaults.shared;
  *((_QWORD *)v14 + 1) = &protocol witness table for Defaults;
  v15 = OBJC_IVAR____TtC15ConversationKit25BannerPresentationManager_features;
  v16 = one-time initialization token for shared;
  swift_retain();
  if (v16 != -1)
    swift_once();
  v17 = static Features.shared;
  *(_QWORD *)&v3[v15] = static Features.shared;
  OUTLINED_FUNCTION_2_0();
  swift_unknownObjectWeakAssign();
  v18 = v17;

  v60.receiver = v3;
  v60.super_class = (Class)type metadata accessor for BannerPresentationManager();
  v19 = objc_msgSendSuper2(&v60, sel_init);
  v20 = OUTLINED_FUNCTION_25_1((uint64_t)v19, sel_conversationManager);
  OUTLINED_FUNCTION_59((uint64_t)v20, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v21 = v19;
  v22 = (void *)static OS_dispatch_queue.main.getter();
  objc_msgSend(v20, sel_addDelegate_queue_, v21, v22);

  v23 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  OUTLINED_FUNCTION_86_14(v23, v24, v25, v26, *MEMORY[0x1E0DBD4A0]);

  v27 = OUTLINED_FUNCTION_146_4();
  OUTLINED_FUNCTION_86_14(v27, v28, v29, v30, *MEMORY[0x1E0DBD4F0]);

  v31 = OUTLINED_FUNCTION_146_4();
  v32 = one-time initialization token for appLaunchTriggeredPreferringHUDDismissal;
  v33 = (char *)v21;
  if (v32 != -1)
    swift_once();
  objc_msgSend(v31, sel_addObserver_selector_name_object_, v33, sel_handleAppLaunchWantsHUDDismissal_, static Strings.Notifications.appLaunchTriggeredPreferringHUDDismissal, 0);

  v34 = OUTLINED_FUNCTION_146_4();
  OUTLINED_FUNCTION_86_14(v34, v35, v36, v37, *MEMORY[0x1E0DBD408]);

  if (_TUIsInternalInstall())
  {
    v38 = OUTLINED_FUNCTION_7_0();
    OUTLINED_FUNCTION_28_3();
    swift_retain();
    v39 = static OS_dispatch_queue.main.getter();
    notifyRegisterDispatch(name:queue:handler:)(0xD000000000000027, 0x80000001BD672440, v39, (uint64_t)partial apply for closure #1 in BannerPresentationManager.init(delegate:), v38);

    swift_release_n();
  }
  v40 = *(_QWORD **)&v33[OBJC_IVAR____TtC15ConversationKit25BannerPresentationManager_features];
  v41 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v40) + 0xC8);
  v42 = v40;
  v43 = v41();

  if ((v43 & 1) != 0)
  {
    OUTLINED_FUNCTION_136_1();
    v45 = *(void (**)(char *))(v44 + 176);
    v46 = v33;
    v47 = OUTLINED_FUNCTION_24_10();
    v45(v33);

    v48 = OBJC_IVAR____TtC15ConversationKit25BannerPresentationManager_bannerActivityManager;
    v49 = *(void **)(v43 + OBJC_IVAR____TtC15ConversationKit25BannerPresentationManager_bannerActivityManager);
    OUTLINED_FUNCTION_136_1();
    v51 = *(void (**)(char *, _UNKNOWN **))(v50 + 152);
    v52 = (id)v43;
    v53 = v49;
    v51(v33, &protocol witness table for BannerPresentationManager);

    v54 = *(void **)(v43 + v48);
    OUTLINED_FUNCTION_136_1();
    v56 = *(void (**)(char *, _UNKNOWN **))(v55 + 200);
    v57 = v52;
    v58 = v54;
    v56(v33, &protocol witness table for BannerPresentationManager);

  }
  OUTLINED_FUNCTION_19_0();

  return v33;
}

void closure #1 in BannerPresentationManager.init(delegate:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x1C3B752C0](v1);
  if (v2)
  {
    v3 = (void *)v2;
    BannerPresentationManager.presentSystemHUD()();

  }
}

Swift::Void __swiftcall BannerPresentationManager.presentSystemHUD()()
{
  os_log_type_t v0;
  uint8_t *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(void);
  uint64_t v6;
  uint64_t v7;
  os_log_type_t v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  _WORD *v16;
  uint64_t v17;
  os_log_type_t v18;
  _WORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  Swift::String v26;
  uint64_t v27;
  NSObject *v28;
  NSObject *v29;

  OUTLINED_FUNCTION_206();
  v4 = OUTLINED_FUNCTION_26_62(v3);
  if (v4)
  {
    v1 = (uint8_t *)v4;
    OUTLINED_FUNCTION_198_3();
    v5();
    OUTLINED_FUNCTION_14_18();
    if (v2)
    {
      if (OUTLINED_FUNCTION_9(v6, sel_isContinuitySession))
      {
        if (one-time initialization token for conversationControls != -1)
          swift_once();
        v7 = OUTLINED_FUNCTION_17_2();
        OUTLINED_FUNCTION_3(v7, (uint64_t)&static Logger.conversationControls);
        v8 = OUTLINED_FUNCTION_23_41();
        if (OUTLINED_FUNCTION_5_9(v8, v9, v10, v11, v12, v13, v14, v15, v27, v28))
        {
          v16 = (_WORD *)OUTLINED_FUNCTION_105();
          OUTLINED_FUNCTION_52_3(v16);
          OUTLINED_FUNCTION_130(&dword_1BD004000, v29, v0, "Ignoring presentSystemHUD because systemHUD should not be shown during continuity sessions", v1);
          OUTLINED_FUNCTION_60();
        }

        return;
      }

    }
  }
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v17 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v17, (uint64_t)&static Logger.conversationControls);
  v18 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_5_3(v18))
  {
    v19 = (_WORD *)OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_47_2(v19);
    OUTLINED_FUNCTION_2_5(&dword_1BD004000, v20, v21, "Presenting system HUD");
    OUTLINED_FUNCTION_60();
  }

  OUTLINED_FUNCTION_154();
  if (((*(uint64_t (**)(void))(v22 + 200))() & 1) == 0
    || (OUTLINED_FUNCTION_154(), ((*(uint64_t (**)(void))(v23 + 320))() & 1) == 0))
  {
    OUTLINED_FUNCTION_20_75();
    OUTLINED_FUNCTION_141_6(v24, v25);
  }
  OUTLINED_FUNCTION_61();
  v26._countAndFlagsBits = 0xD000000000000010;
  BannerPresentationManager.requestEphemeralSystemApertureAlert(reason:shouldOverridePersistentAssertion:)(v26, 0);
}

id BannerPresentationManager.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void BannerPresentationManager.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id BannerPresentationManager.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BannerPresentationManager();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void *BannerPresentationManager.callForRequestedControlsType(_:)(uint64_t a1)
{
  _QWORD *v1;
  int v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t ObjectType;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v65;
  _QWORD v66[6];
  uint64_t v67;
  _BYTE v68[48];

  outlined init with copy of ConversationControlsType(a1, (uint64_t)v68);
  v3 = v68[40];
  v4 = outlined destroy of ConversationControlsType((uint64_t)v68);
  v5 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  if (v3 == 1)
  {
    v6 = (*(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x148))(v4);
    if (v6)
    {
      v7 = (void *)v6;
      if (one-time initialization token for conversationControls != -1)
        swift_once();
      v8 = type metadata accessor for Logger();
      __swift_project_value_buffer(v8, (uint64_t)&static Logger.conversationControls);
      outlined init with copy of ConversationControlsType(a1, (uint64_t)v68);
      v9 = v7;
      v10 = Logger.logObject.getter();
      v11 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v10, v11))
      {
        v12 = swift_slowAlloc();
        v65 = swift_slowAlloc();
        v67 = v65;
        *(_DWORD *)v12 = 136315394;
        outlined init with copy of ConversationControlsType((uint64_t)v68, (uint64_t)v66);
        v20 = specialized >> prefix<A>(_:)((uint64_t)v66, v13, v14, v15, v16, v17, v18, v19);
        v22 = v21;
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v66, &demangling cache variable for type metadata for ConversationControlsType?);
        v66[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v20, v22, &v67);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        outlined destroy of ConversationControlsType((uint64_t)v68);
        *(_WORD *)(v12 + 12) = 2080;
        v23 = objc_msgSend(v9, sel_callUUID);
        v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        v26 = v25;

        v66[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v24, v26, &v67);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BD004000, v10, v11, "Requested to present %s, using handed-off call %s", (uint8_t *)v12, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1C3B751B8](v65, -1, -1);
        MEMORY[0x1C3B751B8](v12, -1, -1);

      }
      else
      {
        outlined destroy of ConversationControlsType((uint64_t)v68);

      }
      lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop(&lazy protocol witness table cache variable for type TUCall and conformance TUCall, (unint64_t *)&lazy cache variable for type metadata for TUCall);
      return v7;
    }
  }
  v27 = (*(uint64_t (**)(void))((*v5 & *v1) + 0x160))();
  if (v27)
  {
    v7 = (void *)v27;
    lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop(&lazy protocol witness table cache variable for type TUCall and conformance TUCall, (unint64_t *)&lazy cache variable for type metadata for TUCall);
  }
  else
  {
    v29 = PlaceholderCallCenter.activeCall.getter();
    if (!v29)
    {
LABEL_13:
      if (one-time initialization token for conversationControls != -1)
        swift_once();
      v32 = type metadata accessor for Logger();
      __swift_project_value_buffer(v32, (uint64_t)&static Logger.conversationControls);
      outlined init with copy of ConversationControlsType(a1, (uint64_t)v68);
      v33 = Logger.logObject.getter();
      v34 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v33, v34))
      {
        v35 = (uint8_t *)swift_slowAlloc();
        v36 = swift_slowAlloc();
        v67 = v36;
        *(_DWORD *)v35 = 136315138;
        outlined init with copy of ConversationControlsType((uint64_t)v68, (uint64_t)v66);
        v44 = specialized >> prefix<A>(_:)((uint64_t)v66, v37, v38, v39, v40, v41, v42, v43);
        v46 = v45;
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v66, &demangling cache variable for type metadata for ConversationControlsType?);
        v66[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v44, v46, &v67);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        outlined destroy of ConversationControlsType((uint64_t)v68);
        _os_log_impl(&dword_1BD004000, v33, v34, "Requested to present %s, but there's no matching call", v35, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C3B751B8](v36, -1, -1);
        MEMORY[0x1C3B751B8](v35, -1, -1);
      }
      else
      {
        outlined destroy of ConversationControlsType((uint64_t)v68);
      }

      return 0;
    }
    v7 = v29;
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type PlaceholderCall and conformance PlaceholderCall, (void (*)(uint64_t))type metadata accessor for PlaceholderCall);
  }
  v30 = v28;
  ObjectType = swift_getObjectType();
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v30 + 184))(ObjectType, v30) == 6)
  {
    swift_unknownObjectRelease();
    goto LABEL_13;
  }
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v47 = type metadata accessor for Logger();
  __swift_project_value_buffer(v47, (uint64_t)&static Logger.conversationControls);
  outlined init with copy of ConversationControlsType(a1, (uint64_t)v68);
  swift_unknownObjectRetain_n();
  v48 = Logger.logObject.getter();
  v49 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v48, v49))
  {
    v50 = swift_slowAlloc();
    v51 = swift_slowAlloc();
    v67 = v51;
    *(_DWORD *)v50 = 136315394;
    outlined init with copy of ConversationControlsType((uint64_t)v68, (uint64_t)v66);
    v59 = specialized >> prefix<A>(_:)((uint64_t)v66, v52, v53, v54, v55, v56, v57, v58);
    v61 = v60;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v66, &demangling cache variable for type metadata for ConversationControlsType?);
    v66[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v59, v61, &v67);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    outlined destroy of ConversationControlsType((uint64_t)v68);
    *(_WORD *)(v50 + 12) = 2080;
    v62 = (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 48))(ObjectType, v30);
    v66[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v62, v63, &v67);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v48, v49, "Requested to present %s, using active or placeholder call %s", (uint8_t *)v50, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v51, -1, -1);
    MEMORY[0x1C3B751B8](v50, -1, -1);

  }
  else
  {
    outlined destroy of ConversationControlsType((uint64_t)v68);

    swift_unknownObjectRelease_n();
  }
  return v7;
}

void closure #1 in BannerPresentationManager.presentBanner(as:type:activityTypeForNewBanner:activityUUID:fromActivityManager:reply:)(_BOOL4 a1, uint64_t a2, void (*a3)(uint64_t, id), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  _BOOL4 v18;
  int8x16_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  id v42;
  _BYTE *v43;
  int v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  uint8_t *v49;
  char v50;
  char v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  NSObject *v57;
  os_log_type_t v58;
  uint8_t *v59;
  _QWORD *v60;
  _QWORD *v61;
  void *v62;
  int8x16_t v64;
  int EnumTagSinglePayload;
  uint64_t v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  NSObject *v71;
  os_log_type_t v72;
  _DWORD *v73;
  _DWORD *v74;
  _DWORD *v75;
  int v76;
  int v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t (*v80)(void);
  unsigned __int8 v81;
  char v82;
  _QWORD *v83;
  _QWORD *v84;
  uint64_t (*v85)(void);
  _QWORD *v86;
  _QWORD *v87;
  uint64_t (*v88)(void);
  _QWORD *v89;
  NSObject *v90;
  os_log_type_t v91;
  uint8_t *v92;
  char v93;
  NSObject *v94;
  os_log_type_t v95;
  uint8_t *v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  _BYTE *v100;
  id v101;
  void *v102;
  _BYTE *v103;
  _BYTE *v104;
  id v105;
  _BYTE *v106;
  id v107;
  id v108;
  id v109;
  NSObject *v110;
  os_log_type_t v111;
  uint8_t *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  unint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  _QWORD *v129;
  unint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t (*v133)(uint64_t);
  uint64_t v134;
  uint64_t v135;
  int v137;
  uint64_t (*v138)(void);
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char v143;
  uint64_t v144;
  uint64_t v145;
  BOOL v146;
  NSObject *v147;
  os_log_type_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  unint64_t v159;
  unint64_t v160;
  uint64_t v161;
  _QWORD *v162;
  _QWORD *v163;
  uint64_t (*v164)(void);
  _QWORD *v165;
  uint64_t v166;
  char v167;
  char v168;
  char v169;
  char v170;
  _QWORD *v171;
  NSObject *v172;
  os_log_type_t v173;
  _DWORD *v174;
  _DWORD *v175;
  uint64_t (*v176)(void);
  void *v177;
  _DWORD *v178;
  uint64_t v179;
  void *v180;
  uint64_t v181;
  void *v182;
  id v183;
  id v184;
  id v185;
  NSObject *v186;
  os_log_type_t v187;
  uint64_t v188;
  uint64_t v189;
  unint64_t v190;
  uint64_t v191;
  unint64_t v192;
  id v193;
  uint64_t v194;
  unint64_t v195;
  uint64_t v196;
  char v197;
  NSObject *v198;
  os_log_type_t v199;
  _BOOL4 v200;
  uint8_t *v201;
  uint8_t *v202;
  _QWORD *v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t ObjectType;
  uint64_t v207;
  void *v208;
  Swift::String v209;
  void *v210;
  void *v211;
  void *v212;
  id v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t (*v216)(void);
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  _BOOL4 v220;
  _QWORD *v221;
  uint64_t v222;
  _BOOL4 v223;
  int v224;
  uint64_t v225;
  _QWORD *v226;
  uint64_t v227;
  void (*v228)(uint64_t, id);
  __int128 v229[3];
  __int128 v230;
  uint64_t v231;
  uint64_t v232;
  unsigned __int8 v233;
  uint64_t v234;
  __int128 v235;
  __int128 v236;
  char v237;
  uint64_t v238;
  __int128 v239;
  __int128 v240;
  char v241;
  BOOL v242;
  uint64_t v243;
  int8x16_t v244;
  int8x16_t v245;
  char v246;
  uint64_t v247;
  int8x16_t v248;
  int8x16_t v249;
  char v250;
  _BYTE v251[48];
  id v252;

  v225 = a8;
  v227 = a4;
  v228 = a3;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PushToTalkNotice?);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v214 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v16 = MEMORY[0x1C3B752C0](a2 + 16);
  if (v16)
  {
    v17 = (_QWORD *)v16;
    v252 = 0;
    v18 = a5 == 0;
    outlined init with copy of ConversationControlsType(a6, (uint64_t)v251);
    if (!a5 && !a1)
    {
      outlined init with copy of ConversationControlsType((uint64_t)v251, (uint64_t)&v247);
      if (v250 == 6 && ((unint64_t)(v247 - 13) <= 1 || v247 == 20))
      {
        v20 = vorrq_s8(v248, v249);
        if (!*(_QWORD *)&vorr_s8(*(int8x8_t *)v20.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v20, v20, 8uLL)))
        {
          outlined destroy of ConversationControlsType((uint64_t)v251);
          if (one-time initialization token for conversationControls != -1)
            swift_once();
          v21 = type metadata accessor for Logger();
          __swift_project_value_buffer(v21, (uint64_t)&static Logger.conversationControls);
          outlined init with copy of ConversationControlsType(a6, (uint64_t)&v247);
          v22 = Logger.logObject.getter();
          v23 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v22, v23))
          {
            v24 = (uint8_t *)swift_slowAlloc();
            v25 = swift_slowAlloc();
            v221 = v17;
            v26 = v25;
            v238 = v25;
            *(_DWORD *)v24 = 136315138;
            outlined init with copy of ConversationControlsType((uint64_t)&v247, (uint64_t)&v243);
            v34 = specialized >> prefix<A>(_:)((uint64_t)&v243, v27, v28, v29, v30, v31, v32, v33);
            v36 = v35;
            outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v243, &demangling cache variable for type metadata for ConversationControlsType?);
            v243 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v34, v36, &v238);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            outlined destroy of ConversationControlsType((uint64_t)&v247);
            _os_log_impl(&dword_1BD004000, v22, v23, "InCallService is not visible, system controls shouldn't be presented for type %s", v24, 0xCu);
            swift_arrayDestroy();
            v37 = v26;
            v17 = v221;
            MEMORY[0x1C3B751B8](v37, -1, -1);
            MEMORY[0x1C3B751B8](v24, -1, -1);
          }
          else
          {
            outlined destroy of ConversationControlsType((uint64_t)&v247);
          }

          goto LABEL_87;
        }
      }
      outlined destroy of ConversationControlsType((uint64_t)&v247);
    }
    outlined destroy of ConversationControlsType((uint64_t)v251);
    ConversationControlsType.canShowOverICS.getter();
    LODWORD(v226) = v44;
    v223 = a1;
    if (!a5 && a1)
    {
      if ((v226 & 1) == 0)
      {
        if (one-time initialization token for conversationControls != -1)
          swift_once();
        v56 = type metadata accessor for Logger();
        __swift_project_value_buffer(v56, (uint64_t)&static Logger.conversationControls);
        v57 = Logger.logObject.getter();
        v58 = static os_log_type_t.fault.getter();
        if (os_log_type_enabled(v57, v58))
        {
          v59 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v59 = 0;
          _os_log_impl(&dword_1BD004000, v57, v58, "InCallService is visible, system controls shouldn't be presented", v59, 2u);
          MEMORY[0x1C3B751B8](v59, -1, -1);
        }

        v60 = (_QWORD *)MEMORY[0x1E0DEEDD8];
        v61 = (_QWORD *)(*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v17) + 0x188))();
        if (v61)
        {
          v62 = v61;
          (*(void (**)(uint64_t *__return_ptr))((*v60 & *v61) + 0x1F0))(&v247);
          outlined init with copy of ConversationControlsType((uint64_t)&v247, (uint64_t)&v243);
          if (v246 == 6 && ((unint64_t)(v243 - 13) <= 1 || v243 == 20))
          {
            v64 = vorrq_s8(v244, v245);
            if (!*(_QWORD *)&vorr_s8(*(int8x8_t *)v64.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v64, v64, 8uLL)))
            {

              outlined destroy of ConversationControlsType((uint64_t)&v247);
LABEL_87:
              lazy protocol witness table accessor for type BannerPresentationError and conformance BannerPresentationError();
              v42 = (id)swift_allocError();
              *v104 = 1;
LABEL_88:

              if (v228)
              {
                v105 = v42;
                v228(1, v42);

              }
LABEL_90:

              goto LABEL_165;
            }
          }
          outlined destroy of ConversationControlsType((uint64_t)&v243);

          outlined destroy of ConversationControlsType((uint64_t)&v247);
        }
        v102 = (void *)MEMORY[0x1C3B72E00](0xD000000000000040, 0x80000001BD68CA90);
        objc_msgSend(v17, sel_dismissPresentedBannerForReason_animated_, v102, 1);

        lazy protocol witness table accessor for type BannerPresentationError and conformance BannerPresentationError();
        v42 = (id)swift_allocError();
        *v103 = 1;
        goto LABEL_88;
      }
      if (one-time initialization token for conversationControls != -1)
        swift_once();
      v45 = type metadata accessor for Logger();
      __swift_project_value_buffer(v45, (uint64_t)&static Logger.conversationControls);
      v46 = Logger.logObject.getter();
      v47 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v46, v47))
      {
        v48 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v48 = 0;
        _os_log_impl(&dword_1BD004000, v46, v47, "InCallService is visible, but system controls want to be presented anyways", v48, 2u);
        v49 = v48;
        a5 = 0;
        v18 = 1;
        MEMORY[0x1C3B751B8](v49, -1, -1);
      }

      LOBYTE(a1) = v223;
    }
    v247 = 3;
    v248 = 0u;
    v249 = 0u;
    v250 = 6;
    static ConversationControlsType.== infix(_:_:)(a6);
    v51 = v50;
    outlined destroy of ConversationControlsType((uint64_t)&v247);
    outlined init with copy of ConversationControlsType(a6, (uint64_t)&v247);
    if ((v51 & 1) != 0)
    {
      outlined destroy of ConversationControlsType((uint64_t)&v247);
      v52 = (_QWORD *)MEMORY[0x1E0DEEDD8];
      if (a1)
      {
LABEL_53:
        v224 = 1;
LABEL_54:
        ConversationControlsType.associatedNotice.getter((uint64_t)&v243);
        v66 = v245.i64[0];
        if (v245.i64[0])
        {
          v67 = v245.i64[1];
          __swift_project_boxed_opaque_existential_1(&v243, v245.i64[0]);
          (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v67 + 64))(&v238, v66, v67);
          v68 = v238;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v243);
          if (v68 == 1)
          {
            swift_bridgeObjectRelease();
            LODWORD(v222) = 1;
          }
          else
          {
            LODWORD(v222) = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
          }
        }
        else
        {
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v243, (uint64_t *)&demangling cache variable for type metadata for Notice?);
          LODWORD(v222) = 0;
        }
        v220 = v18;
        if (one-time initialization token for conversationControls != -1)
          swift_once();
        v69 = type metadata accessor for Logger();
        v70 = __swift_project_value_buffer(v69, (uint64_t)&static Logger.conversationControls);
        v71 = Logger.logObject.getter();
        v72 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v71, v72))
        {
          v73 = (_DWORD *)swift_slowAlloc();
          v221 = v17;
          v74 = v73;
          *v73 = 67109632;
          LODWORD(v243) = v224 & 1;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *((_WORD *)v74 + 4) = 1024;
          LODWORD(v243) = v222 & 1;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *((_WORD *)v74 + 7) = 1024;
          LODWORD(v243) = v226 & 1;
          v52 = (_QWORD *)MEMORY[0x1E0DEEDD8];
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          _os_log_impl(&dword_1BD004000, v71, v72, "icsControlsVisible?:%{BOOL}d, dontIntegrateNotice?:%{BOOL}d, typeCanShowOverICS?:%{BOOL}d", (uint8_t *)v74, 0x14u);
          v75 = v74;
          v17 = v221;
          MEMORY[0x1C3B751B8](v75, -1, -1);
        }

        outlined init with copy of ConversationControlsType(a6, (uint64_t)&v243);
        if ((v224 & 1) != 0)
        {
          outlined init with copy of ConversationControlsType((uint64_t)&v243, (uint64_t)&v238);
          if ((v226 & 1) != 0)
          {
            ConversationControlsType.canShowOverICSAndInCallControls.getter();
            v77 = v76;
            outlined destroy of ConversationControlsType((uint64_t)&v238);
            v78 = outlined destroy of ConversationControlsType((uint64_t)&v243);
            if (((v77 | v222) & 1) == 0)
              goto LABEL_79;
          }
          else
          {
            outlined destroy of ConversationControlsType((uint64_t)&v238);
            v78 = outlined destroy of ConversationControlsType((uint64_t)&v243);
            if ((v222 & 1) == 0)
            {
LABEL_79:
              v94 = Logger.logObject.getter();
              v95 = static os_log_type_t.default.getter();
              if (os_log_type_enabled(v94, v95))
              {
                v96 = (uint8_t *)swift_slowAlloc();
                v97 = swift_slowAlloc();
                v238 = v97;
                *(_DWORD *)v96 = 136315138;
                v98 = ConversationControlsSizeClass.description.getter(a5);
                v234 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v98, v99, &v238);
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                swift_bridgeObjectRelease();
                _os_log_impl(&dword_1BD004000, v94, v95, "InCall controls are visible, %s shouldn't be presented", v96, 0xCu);
                swift_arrayDestroy();
                MEMORY[0x1C3B751B8](v97, -1, -1);
                MEMORY[0x1C3B751B8](v96, -1, -1);
              }

              lazy protocol witness table accessor for type BannerPresentationError and conformance BannerPresentationError();
              v42 = (id)swift_allocError();
              *v100 = 1;

              if (!v228)
                goto LABEL_90;
              v101 = v42;
              v228(0, v42);

LABEL_165:
              return;
            }
          }
        }
        else
        {
          v78 = outlined destroy of ConversationControlsType((uint64_t)&v243);
        }
        v79 = (_QWORD *)(*(uint64_t (**)(uint64_t))((*v52 & *v17) + 0x180))(v78);
        if (!v79)
        {

          return;
        }
        v219 = v70;
        v80 = *(uint64_t (**)(void))((*v52 & *v79) + 0x280);
        v226 = v79;
        v224 = v80();
        v81 = objc_msgSend(*(id *)((char *)v17+ OBJC_IVAR____TtC15ConversationKit25BannerPresentationManager_callCenter), sel_cnk_hasTooManyCallsForCallWaitingBanner);
        v82 = BannerPresentationManager.shouldPresentSystemApertureElementFromBanner(type:)(a6);
        v222 = OBJC_IVAR____TtC15ConversationKit25BannerPresentationManager_features;
        v83 = *(_QWORD **)((char *)v17 + OBJC_IVAR____TtC15ConversationKit25BannerPresentationManager_features);
        v84 = v52;
        v85 = *(uint64_t (**)(void))((*v52 & *v83) + 0x50);
        v86 = v83;
        LOBYTE(v85) = v85();

        if ((v85 & 1) != 0 && (v82 & 1) == 0)
        {
          if (!v223
            || (v87 = *(_QWORD **)((char *)v17 + v222),
                v88 = *(uint64_t (**)(void))((*v84 & *v87) + 0xA8),
                v89 = v87,
                LOBYTE(v88) = v88(),
                v89,
                !(v88 & 1 | ((v224 & 1) == 0) | v81 & 1)))
          {
            v90 = Logger.logObject.getter();
            v91 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v90, v91))
            {
              v92 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)v92 = 0;
              _os_log_impl(&dword_1BD004000, v90, v91, "[SystemAperture] System HUD presentation is managed by SpringBoard, updating system aperture element instead of presenting a new banner", v92, 2u);
              MEMORY[0x1C3B751B8](v92, -1, -1);
            }

            BannerPresentationManager.updatePresentedSystemApertureElement(type:sizeClass:dismissPresentedBannerReason:)(a6, a5, 0, 0xD000000000000022, 0x80000001BD68CA60, &v238);
            v93 = v238;
            if (v238 == 11)
            {

              v42 = 0;
              v252 = 0;
LABEL_95:
              v109 = v226;
              goto LABEL_96;
            }
            lazy protocol witness table accessor for type BannerPresentationError and conformance BannerPresentationError();
            v42 = (id)swift_allocError();
            *v106 = v93;

            v252 = v42;
            v238 = (uint64_t)v42;
            v107 = v42;
            v108 = v42;
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
            if ((swift_dynamicCast() & 1) == 0)
              goto LABEL_95;
            v109 = v226;
            if (v234 - 9 > 1)
            {
LABEL_96:
              if (v228)
              {
                v228(v42 == 0, v42);

                v42 = v252;
                goto LABEL_165;
              }

              goto LABEL_90;
            }

            outlined init with copy of ConversationControlsType(a6, (uint64_t)&v238);
            v110 = Logger.logObject.getter();
            v111 = static os_log_type_t.error.getter();
            if (os_log_type_enabled(v110, v111))
            {
              v221 = v17;
              v112 = (uint8_t *)swift_slowAlloc();
              v113 = swift_slowAlloc();
              v218 = a7;
              v114 = v113;
              *(_QWORD *)&v230 = v113;
              *(_DWORD *)v112 = 136315138;
              outlined init with copy of ConversationControlsType((uint64_t)&v238, (uint64_t)&v234);
              v122 = a5;
              v123 = specialized >> prefix<A>(_:)((uint64_t)&v234, v115, v116, v117, v118, v119, v120, v121);
              v217 = a6;
              v125 = v124;
              outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v234, &demangling cache variable for type metadata for ConversationControlsType?);
              v126 = v123;
              a5 = v122;
              v234 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v126, v125, (uint64_t *)&v230);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              a6 = v217;
              v17 = v221;
              swift_bridgeObjectRelease();
              outlined destroy of ConversationControlsType((uint64_t)&v238);
              _os_log_impl(&dword_1BD004000, v110, v111, "Presenting %s in system aperture is unsupported, falling back to regular banner presentation.", v112, 0xCu);
              swift_arrayDestroy();
              v127 = v114;
              v84 = (_QWORD *)MEMORY[0x1E0DEEDD8];
              a7 = v218;
              MEMORY[0x1C3B751B8](v127, -1, -1);
              MEMORY[0x1C3B751B8](v112, -1, -1);

            }
            else
            {

              outlined destroy of ConversationControlsType((uint64_t)&v238);
            }

            v252 = 0;
          }
        }
        v218 = a7;
        v242 = 0;
        v216 = *(uint64_t (**)(void))((*v84 & *v17) + 0x188);
        v128 = v216();
        v217 = a6;
        if (!v128)
        {
LABEL_133:
          type metadata accessor for SpringBoardUtilities();
          v220 = static SpringBoardUtilities.checkSpringBoardState(for:)();
          v223 = static SpringBoardUtilities.checkSpringBoardState(for:)();
          v162 = *(_QWORD **)((char *)v17 + v222);
          v163 = (_QWORD *)MEMORY[0x1E0DEEDD8];
          if (((*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v162) + 0x58))() & 1) != 0)
          {
            v164 = *(uint64_t (**)(void))((*v163 & *v162) + 0x50);
            v165 = v162;
            LODWORD(v166) = v164();

          }
          else
          {
            LODWORD(v166) = 1;
          }
          v238 = 23;
          v239 = 0u;
          v240 = 0u;
          v241 = 6;
          static ConversationControlsType.== infix(_:_:)(a6);
          v168 = v167;
          outlined destroy of ConversationControlsType((uint64_t)&v238);
          outlined init with copy of ConversationControlsType(a6, (uint64_t)&v238);
          if ((v168 & 1) != 0)
          {
            outlined destroy of ConversationControlsType((uint64_t)&v238);
          }
          else
          {
            v234 = 22;
            v235 = 0u;
            v236 = 0u;
            v237 = 6;
            static ConversationControlsType.== infix(_:_:)((uint64_t)&v238);
            v170 = v169;
            outlined destroy of ConversationControlsType((uint64_t)&v234);
            outlined destroy of ConversationControlsType((uint64_t)&v238);
            if ((v170 & 1) == 0)
            {
              LODWORD(v222) = 0;
              goto LABEL_141;
            }
          }
          LODWORD(v222) = BannerPresentationManager.onlyHasGreenTea3PCall.getter();
LABEL_141:
          v171 = v17;
          v172 = Logger.logObject.getter();
          v173 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v172, v173))
          {
            v174 = (_DWORD *)swift_slowAlloc();
            LODWORD(v221) = v166;
            v166 = a5;
            v175 = v174;
            *v174 = 67110144;
            v176 = v216;
            v177 = (void *)v216();

            LODWORD(v234) = v177 != 0;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();

            *((_WORD *)v175 + 4) = 1024;
            swift_beginAccess();
            LODWORD(v234) = v242;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *((_WORD *)v175 + 7) = 1024;
            LODWORD(v234) = v220;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *((_WORD *)v175 + 10) = 1024;
            LODWORD(v234) = v223;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *((_WORD *)v175 + 13) = 1024;
            LODWORD(v234) = v224 & 1;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            _os_log_impl(&dword_1BD004000, v172, v173, "bannerPresented?:%{BOOL}d, shouldUpdatePresentedBanner?:%{BOOL}d, isLocked: %{BOOL}d, isCoversheet: %{BOOL}d, hasMultipleCalls: %{BOOL}d", (uint8_t *)v175, 0x20u);
            v178 = v175;
            a5 = v166;
            LOBYTE(v166) = (_BYTE)v221;
            MEMORY[0x1C3B751B8](v178, -1, -1);
            v179 = v218;
          }
          else
          {

            v179 = v218;
            v176 = v216;
          }

          v180 = (void *)v176();
          if (v180 && (swift_beginAccess(), v242))
          {
            v181 = v217;
            v182 = (void *)BannerPresentationManager.updatePresentedBanner(type:)(v217);

            v252 = v182;
            outlined init with copy of ConversationControlsType(v181, (uint64_t)&v234);
            v183 = v182;
            v184 = v182;
            v185 = v182;
            v186 = Logger.logObject.getter();
            v187 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v186, v187))
            {
              v188 = swift_slowAlloc();
              v225 = swift_slowAlloc();
              *(_QWORD *)&v230 = v225;
              *(_DWORD *)v188 = 136315650;
              v189 = ConversationControlsSizeClass.description.getter(a5);
              *(_QWORD *)&v229[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v189, v190, (uint64_t *)&v230);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease();
              *(_WORD *)(v188 + 12) = 2080;
              ConversationControlsType.debugDescription.getter();
              *(_QWORD *)&v229[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v191, v192, (uint64_t *)&v230);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease();
              outlined destroy of ConversationControlsType((uint64_t)&v234);
              *(_WORD *)(v188 + 22) = 2080;
              *(_QWORD *)&v229[0] = v182;
              v193 = v182;
              __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error?);
              v194 = String.init<A>(describing:)();
              *(_QWORD *)&v229[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v194, v195, (uint64_t *)&v230);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease();

              _os_log_impl(&dword_1BD004000, v186, v187, "updatePresentedBanner sizeClass: %s, type: %s, error: %s", (uint8_t *)v188, 0x20u);
              v196 = v225;
              swift_arrayDestroy();
              MEMORY[0x1C3B751B8](v196, -1, -1);
              MEMORY[0x1C3B751B8](v188, -1, -1);
            }
            else
            {
              outlined destroy of ConversationControlsType((uint64_t)&v234);

            }
            if (v182)
            {
              v203 = (_QWORD *)MEMORY[0x1E0DEEDD8];
              (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v226) + 0x270))();
              v205 = v204;
              ObjectType = swift_getObjectType();
              LOBYTE(v205) = (*(uint64_t (**)(uint64_t, uint64_t))(v205 + 88))(ObjectType, v205);
              v207 = swift_unknownObjectRelease();
              if ((v205 & 1) != 0
                && (v208 = (void *)(*(uint64_t (**)(uint64_t))((*v203 & *v226) + 0x290))(v207),
                    v208,
                    !v208))
              {

              }
              else
              {
                static String._createEmpty(withInitialCapacity:)(27);
                swift_bridgeObjectRelease();
                v234 = 0xD000000000000019;
                *(_QWORD *)&v235 = 0x80000001BD68CA40;
                *(_QWORD *)&v230 = v182;
                __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error?);
                v209._countAndFlagsBits = String.init<A>(describing:)();
                String.append(_:)(v209);
                swift_bridgeObjectRelease();
                v210 = (void *)MEMORY[0x1C3B72E00](v234, v235);
                swift_bridgeObjectRelease();
                objc_msgSend(v171, sel_dismissPresentedBannerForReason_animated_, v210, 1);

              }
            }
          }
          else
          {
            v197 = v166 | ~v223 | v222 | v224;
            v198 = Logger.logObject.getter();
            v199 = static os_log_type_t.default.getter();
            v200 = os_log_type_enabled(v198, v199);
            if ((v197 & 1) != 0)
            {
              if (v200)
              {
                v201 = (uint8_t *)swift_slowAlloc();
                *(_WORD *)v201 = 0;
                _os_log_impl(&dword_1BD004000, v198, v199, "Presenting new banner", v201, 2u);
                MEMORY[0x1C3B751B8](v201, -1, -1);
              }

              outlined init with copy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v179, (uint64_t)&v230, &demangling cache variable for type metadata for ConversationControlsType?);
              outlined init with copy of ConversationControlsType(v217, (uint64_t)v229);
              if (v233 == 255)
              {
                outlined init with take of ConversationControlsType(v229, &v234);
                outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v230, &demangling cache variable for type metadata for ConversationControlsType?);
              }
              else
              {
                outlined destroy of ConversationControlsType((uint64_t)v229);
                outlined init with take of ConversationControlsType(&v230, &v234);
              }
              BannerPresentationManager.presentNewBanner(as:type:activityUUID:fromActivityManager:)();
              v212 = v211;
              outlined destroy of ConversationControlsType((uint64_t)&v234);

              v252 = v212;
            }
            else
            {
              if (v200)
              {
                v202 = (uint8_t *)swift_slowAlloc();
                *(_WORD *)v202 = 0;
                _os_log_impl(&dword_1BD004000, v198, v199, "Skipping banner presentation because we are on coversheet and don't have multiple calls", v202, 2u);
                MEMORY[0x1C3B751B8](v202, -1, -1);
              }

            }
          }
          if (!v228)
          {

            return;
          }
          swift_beginAccess();
          v42 = v252;
          v213 = v252;
          v228(v42 == 0, v42);

          goto LABEL_165;
        }
        v129 = (_QWORD *)v128;
        v131 = *(_QWORD *)(v128 + OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_bannerIdentifier);
        v130 = *(_QWORD *)(v128 + OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_bannerIdentifier + 8);
        v132 = HIBYTE(v130) & 0xF;
        if ((v130 & 0x2000000000000000) == 0)
          v132 = v131 & 0xFFFFFFFFFFFFLL;
        v221 = v17;
        if (v132)
        {
          v133 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v226) + 0x288);
          v134 = swift_bridgeObjectRetain();
          if (v131 == v133(v134) && v130 == v135)
            v137 = 1;
          else
            v137 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          v137 = 1;
        }
        v138 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v129) + 0x1D8);
        v139 = v138();
        outlined init with copy of ConversationControlsType(a6, (uint64_t)&v238);
        if (v139 == 2)
        {
          outlined destroy of ConversationControlsType((uint64_t)&v238);
          outlined init with copy of ConversationControlsType(a6, (uint64_t)&v234);
        }
        else
        {
          ConversationControlsType.associatedNotice.getter((uint64_t)&v234);
          outlined destroy of ConversationControlsType((uint64_t)&v238);
          v140 = v236;
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v234, (uint64_t *)&demangling cache variable for type metadata for Notice?);
          outlined init with copy of ConversationControlsType(a6, (uint64_t)&v234);
          if (v140)
          {
            ConversationControlsType.associatedNotice.getter((uint64_t)&v230);
            v141 = v231;
            if (v231)
            {
              v223 = v137;
              v142 = v232;
              __swift_project_boxed_opaque_existential_1(&v230, v231);
              (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v142 + 64))(v229, v141, v142);
              v143 = v229[0];
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v230);
              if ((v143 & 1) != 0)
                LODWORD(v141) = _stringCompareWithSmolCheck(_:_:expecting:)();
              else
                LODWORD(v141) = 1;
              swift_bridgeObjectRelease();
              v137 = v223;
            }
            else
            {
              outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v230, (uint64_t *)&demangling cache variable for type metadata for Notice?);
            }
LABEL_123:
            v144 = outlined destroy of ConversationControlsType((uint64_t)&v234);
            v145 = ((uint64_t (*)(uint64_t))v138)(v144);
            v215 = a5;
            if (v145 == 2 || v138() == 3)
            {
              if ((v137 & v141 & 1) == 0)
              {
                v146 = 0;
LABEL_129:
                v242 = v146;
                outlined init with copy of ConversationControlsType(a6, (uint64_t)&v238);
                v147 = Logger.logObject.getter();
                v148 = static os_log_type_t.default.getter();
                if (os_log_type_enabled(v147, v148))
                {
                  v149 = swift_slowAlloc();
                  v150 = swift_slowAlloc();
                  *(_QWORD *)&v230 = v150;
                  *(_DWORD *)v149 = 67110146;
                  swift_beginAccess();
                  LODWORD(v234) = v242;
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();
                  *(_WORD *)(v149 + 8) = 1024;
                  LODWORD(v234) = v137 & 1;
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();
                  *(_WORD *)(v149 + 14) = 1024;
                  LODWORD(v234) = v141 & 1;
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();
                  *(_WORD *)(v149 + 20) = 1024;
                  LODWORD(v234) = v220;
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();
                  *(_WORD *)(v149 + 26) = 2080;
                  outlined init with copy of ConversationControlsType((uint64_t)&v238, (uint64_t)&v234);
                  v158 = specialized >> prefix<A>(_:)((uint64_t)&v234, v151, v152, v153, v154, v155, v156, v157);
                  v160 = v159;
                  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v234, &demangling cache variable for type metadata for ConversationControlsType?);
                  v234 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v158, v160, (uint64_t *)&v230);
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();
                  swift_bridgeObjectRelease();
                  outlined destroy of ConversationControlsType((uint64_t)&v238);
                  _os_log_impl(&dword_1BD004000, v147, v148, "shouldUpdatePresentedBanner: %{BOOL}d, presentedBannerUsesActiveCall: %{BOOL}d, noticeShouldIntegrate: %{BOOL}d, presentedBannerWantsTransitionToHUD: %{BOOL}d, type: %s", (uint8_t *)v149, 0x24u);
                  swift_arrayDestroy();
                  MEMORY[0x1C3B751B8](v150, -1, -1);
                  v161 = v149;
                  a6 = v217;
                  MEMORY[0x1C3B751B8](v161, -1, -1);

                }
                else
                {
                  outlined destroy of ConversationControlsType((uint64_t)&v238);

                }
                v17 = v221;
                a5 = v215;
                goto LABEL_133;
              }
            }
            else
            {
              v220 = 0;
              v146 = 0;
              if ((v137 & v141 & 1) == 0)
                goto LABEL_129;
            }
            v146 = !v220;
            goto LABEL_129;
          }
        }
        LODWORD(v141) = 1;
        goto LABEL_123;
      }
    }
    else
    {
      ConversationControlsType.associatedNotice.getter((uint64_t)&v243);
      outlined destroy of ConversationControlsType((uint64_t)&v247);
      v52 = (_QWORD *)MEMORY[0x1E0DEEDD8];
      if (v245.i64[0])
      {
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Notice);
        v53 = type metadata accessor for PushToTalkNotice(0);
        LOBYTE(a1) = v223;
        v54 = swift_dynamicCast() ^ 1;
        v55 = (uint64_t)v15;
      }
      else
      {
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v243, (uint64_t *)&demangling cache variable for type metadata for Notice?);
        v53 = type metadata accessor for PushToTalkNotice(0);
        v55 = (uint64_t)v15;
        v54 = 1;
      }
      __swift_storeEnumTagSinglePayload(v55, v54, 1, v53);
      type metadata accessor for PushToTalkNotice(0);
      EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v15, 1, v53);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v15, &demangling cache variable for type metadata for PushToTalkNotice?);
      if (a1)
      {
        if (EnumTagSinglePayload)
        {
          v224 = (*(uint64_t (**)(void))((*v52 & *v17) + 0x218))();
          goto LABEL_54;
        }
        goto LABEL_53;
      }
    }
    v224 = 0;
    goto LABEL_54;
  }
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v38 = type metadata accessor for Logger();
  __swift_project_value_buffer(v38, (uint64_t)&static Logger.conversationControls);
  v39 = Logger.logObject.getter();
  v40 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v39, v40))
  {
    v41 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v41 = 0;
    _os_log_impl(&dword_1BD004000, v39, v40, "BannerPresentationManager deallocated before banner presentation performed.", v41, 2u);
    MEMORY[0x1C3B751B8](v41, -1, -1);
  }

  if (v228)
  {
    lazy protocol witness table accessor for type BannerPresentationError and conformance BannerPresentationError();
    v42 = (id)swift_allocError();
    *v43 = 4;
    v228(0, v42);
    goto LABEL_165;
  }
}

uint64_t BannerPresentationManager.shouldPresentSystemApertureElementFromBanner(type:)(uint64_t a1)
{
  uint64_t v1;
  int8x16_t v3;
  int8x8_t v4;
  uint64_t v7;
  int8x16_t v8;
  int8x16_t v9;
  char v10;

  if (((*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **(_QWORD **)(v1
                                                                   + OBJC_IVAR____TtC15ConversationKit25BannerPresentationManager_features))
                             + 0x50))() & 1) != 0)
  {
    outlined init with copy of ConversationControlsType(a1, (uint64_t)&v7);
    if (v10 == 6)
    {
      v3 = vorrq_s8(v8, v9);
      v4 = vorr_s8(*(int8x8_t *)v3.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v3, v3, 8uLL));
      if ((v7 & 0xFFFFFFFFFFFFFFFELL) == 0x16 && *(_QWORD *)&v4 == 0)
        return 1;
    }
    outlined destroy of ConversationControlsType((uint64_t)&v7);
  }
  return 0;
}

void BannerPresentationManager.updatePresentedSystemApertureElement(type:sizeClass:dismissPresentedBannerReason:)(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _BYTE *a6@<X8>)
{
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  _QWORD *v20;
  _QWORD *v21;
  char v22;
  BOOL v23;
  BOOL v24;
  int8x16_t v25;
  uint64_t v26;
  uint64_t (*v27)(void);
  void *v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  _QWORD *v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  _BOOL4 v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  _BOOL4 v46;
  _BYTE *v47;
  uint8_t *v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  char v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  char v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  _BYTE *v66;
  uint64_t v67;
  NSObject *v68;
  os_log_type_t v69;
  uint8_t *v70;
  _QWORD *v71;
  void *v72;
  uint64_t v73;
  int v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  unsigned __int8 v79;
  unsigned __int8 v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  NSObject *v84;
  os_log_type_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  unint64_t v96;
  uint64_t v97;
  unint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  unint64_t v103;
  uint64_t v104;
  unint64_t v105;
  char *v106;
  uint64_t v107;
  void *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  _QWORD *v116;
  uint64_t v117;
  uint64_t v118;
  int v119;
  _BYTE *v120;
  _QWORD v121[6];
  uint64_t v122[3];
  _QWORD v123[6];
  _QWORD v124[3];
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  __int128 v128;
  __int128 v129;
  char v130;
  uint64_t v131;
  int8x16_t v132;
  int8x16_t v133;
  char v134;

  v109 = a4;
  v110 = a5;
  v119 = a3;
  v117 = a2;
  v120 = a6;
  v8 = type metadata accessor for Date();
  v114 = *(_QWORD *)(v8 - 8);
  v115 = v8;
  MEMORY[0x1E0C80A78](v8);
  v113 = (char *)&v109 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for UUID();
  v111 = *(_QWORD *)(v10 - 8);
  v112 = v10;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v109 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (int *)type metadata accessor for HUDActivityManager.BannerUpdate(0);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v109 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v14);
  v19 = (char *)&v109 - v18;
  v20 = *(_QWORD **)((char *)v6 + OBJC_IVAR____TtC15ConversationKit25BannerPresentationManager_features);
  v21 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v22 = (*(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v20) + 0xC8))(v17);
  v116 = v6;
  v118 = a1;
  if ((v22 & 1) != 0)
  {
    outlined init with copy of ConversationControlsType(a1, (uint64_t)&v131);
    if (v134 == 3)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      if (v134 == 4)
      {
        v26 = 0x4085E00000000000;
LABEL_43:
        v55 = *(_QWORD **)((char *)v6 + OBJC_IVAR____TtC15ConversationKit25BannerPresentationManager_activityManager);
        v56 = v118;
        outlined init with copy of ConversationControlsType(v118, (uint64_t)&v131);
        v57 = ConversationControlsType.isTemporary.getter();
        UUID.init()();
        v58 = &v16[v13[11]];
        *((_QWORD *)v58 + 1) = 0;
        swift_unknownObjectWeakInit();
        *(_QWORD *)v16 = v26;
        outlined init with copy of ConversationControlsType((uint64_t)&v131, (uint64_t)(v16 + 8));
        *((_QWORD *)v16 + 7) = v117;
        v16[64] = v119 & 1;
        *((_QWORD *)v58 + 1) = 0;
        swift_unknownObjectWeakAssign();
        v16[65] = v57 & 1;
        v60 = v111;
        v59 = v112;
        (*(void (**)(char *, char *, uint64_t))(v111 + 16))(&v16[v13[8]], v12, v112);
        v61 = v113;
        static Date.now.getter();
        (*(void (**)(char *, uint64_t))(v60 + 8))(v12, v59);
        outlined destroy of ConversationControlsType((uint64_t)&v131);
        (*(void (**)(char *, char *, uint64_t))(v114 + 32))(&v16[v13[9]], v61, v115);
        *(_QWORD *)&v16[v13[10]] = 0;
        outlined init with take of HUDActivityManager.BannerUpdate((uint64_t)v16, (uint64_t)v19);
        v62 = (*(uint64_t (**)(char *))((*MEMORY[0x1E0DEEDD8] & *v55) + 0xF0))(v19);
        v64 = v63;
        outlined destroy of AccountUpdateNotice((uint64_t)v19, type metadata accessor for HUDActivityManager.BannerUpdate);
        v131 = 6;
        v132 = 0u;
        v133 = 0u;
        v134 = 6;
        static ConversationControlsType.== infix(_:_:)(v56);
        LOBYTE(v61) = v65;
        outlined destroy of ConversationControlsType((uint64_t)&v131);
        if ((v61 & 1) != 0)
        {
          v66 = v120;
          if (one-time initialization token for conversationControls != -1)
            swift_once();
          v67 = type metadata accessor for Logger();
          __swift_project_value_buffer(v67, (uint64_t)&static Logger.conversationControls);
          v68 = Logger.logObject.getter();
          v69 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v68, v69))
          {
            v70 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v70 = 0;
            _os_log_impl(&dword_1BD004000, v68, v69, "Adding incoming call activity", v70, 2u);
            MEMORY[0x1C3B751B8](v70, -1, -1);
          }

          BannerPresentationManager.incomingCallActivity.setter(v64);
          if (!v62)
            goto LABEL_52;
        }
        else
        {
          swift_release();
          v66 = v120;
          if (!v62)
          {
LABEL_52:
            *v66 = 11;
            return;
          }
        }
        v131 = v62;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
        if ((swift_dynamicCast() & 1) != 0)
          return;
        goto LABEL_52;
      }
      if (v134 != 6
        || ((v131 & 0xFFFFFFFFFFFFFFFELL) != 0x18 ? (v23 = v131 == 21) : (v23 = 1),
            !v23 ? (v24 = v131 == 6) : (v24 = 1),
            !v24
         || (v25 = vorrq_s8(v132, v133),
             *(_QWORD *)&vorr_s8(*(int8x8_t *)v25.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v25, v25, 8uLL)))))
      {
        outlined destroy of ConversationControlsType((uint64_t)&v131);
        v26 = 0x4082C00000000000;
        goto LABEL_43;
      }
    }
    v26 = 0x4089000000000000;
    goto LABEL_43;
  }
  v27 = *(uint64_t (**)(void))((*v21 & *v6) + 0x1A0);
  v28 = (void *)v27();

  if (!v28)
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v30 = type metadata accessor for Logger();
    __swift_project_value_buffer(v30, (uint64_t)&static Logger.conversationControls);
    v31 = Logger.logObject.getter();
    v32 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v33 = 0;
      _os_log_impl(&dword_1BD004000, v31, v32, "Unable to update presentedSystemApertureElement since its nil, making a new instance", v33, 2u);
      MEMORY[0x1C3B751B8](v33, -1, -1);
    }

    (*(void (**)(void))((*v21 & *v116) + 0x1D8))();
    v29 = swift_unknownObjectRelease();
  }
  v34 = ((uint64_t (*)(uint64_t))v27)(v29);
  if (v34)
  {
    v35 = (_QWORD *)v34;
    v36 = (*(uint64_t (**)(void))((*v21 & *v20) + 0x50))();
    v37 = v118;
    if ((v36 & 1) == 0)
    {
      if (one-time initialization token for conversationControls != -1)
        swift_once();
      v38 = type metadata accessor for Logger();
      __swift_project_value_buffer(v38, (uint64_t)&static Logger.conversationControls);
      v39 = Logger.logObject.getter();
      v40 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v39, v40))
      {
        v41 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v41 = 0;
        _os_log_impl(&dword_1BD004000, v39, v40, "Invalid state: features.isSystemApertureEnabled is false but presentedSystemApertureElement != nil", v41, 2u);
        MEMORY[0x1C3B751B8](v41, -1, -1);
      }

    }
    v42 = (*(uint64_t (**)(void))((*v21 & *v35) + 0x550))() == 4
       && (*(uint64_t (**)(void))((*v21 & *v35) + 0x1D8))() == 0;
    ConversationControlsType.associatedNotice.getter((uint64_t)&v131);
    v49 = v133.i64[0];
    if (v133.i64[0])
    {
      v50 = v133.i64[1];
      __swift_project_boxed_opaque_existential_1(&v131, v133.i64[0]);
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v50 + 64))(&v127, v49, v50);
      v51 = v127;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v131);
      if ((v51 & 1) != 0)
      {
        v52 = _stringCompareWithSmolCheck(_:_:expecting:)();
        v53 = swift_bridgeObjectRelease();
        v54 = v116;
        if ((v52 & 1) == 0)
          goto LABEL_59;
      }
      else
      {
        v53 = swift_bridgeObjectRelease();
        v54 = v116;
      }
      v71 = (_QWORD *)(*(uint64_t (**)(uint64_t))((*v21 & *v54) + 0x188))(v53);
      if (v71)
      {
        v72 = v71;
        v73 = (*(uint64_t (**)(void))((*v21 & *v71) + 0x1D8))();

        if (v73 == 3)
        {
          outlined init with copy of ConversationControlsType(v37, (uint64_t)&v131);
          if (!v42)
          {
            v127 = 25;
            v128 = 0u;
            v129 = 0u;
            v130 = 6;
            static ConversationControlsType.== infix(_:_:)((uint64_t)&v131);
            v75 = v74;
            outlined destroy of ConversationControlsType((uint64_t)&v127);
            outlined destroy of ConversationControlsType((uint64_t)&v131);
            goto LABEL_61;
          }
LABEL_60:
          outlined destroy of ConversationControlsType((uint64_t)&v131);
          v75 = 1;
LABEL_61:
          outlined init with copy of ConversationControlsType(v37, (uint64_t)&v127);
          if (v42)
          {
            ConversationControlsType.associatedNotice.getter((uint64_t)v124);
            v76 = v125;
            if (v125)
            {
              v77 = v126;
              __swift_project_boxed_opaque_existential_1(v124, v125);
              (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v77 + 64))(v123, v76, v77);
              v78 = v123[0];
              __swift_destroy_boxed_opaque_existential_1((uint64_t)v124);
              specialized == infix<A>(_:_:)(v78, 0);
              v80 = v79;
LABEL_66:
              outlined destroy of ConversationControlsType((uint64_t)&v127);
              if (one-time initialization token for conversationControls != -1)
                swift_once();
              v81 = type metadata accessor for Logger();
              v82 = __swift_project_value_buffer(v81, (uint64_t)&static Logger.conversationControls);
              outlined init with copy of ConversationControlsType(v37, (uint64_t)v124);
              outlined init with copy of ConversationControlsType(v37, (uint64_t)v123);
              v83 = v35;
              v115 = v82;
              v84 = Logger.logObject.getter();
              v85 = static os_log_type_t.default.getter();
              if (os_log_type_enabled(v84, v85))
              {
                LODWORD(v114) = v75;
                v86 = swift_slowAlloc();
                v113 = (char *)swift_slowAlloc();
                v122[0] = (uint64_t)v113;
                *(_DWORD *)v86 = 136447490;
                outlined init with copy of ConversationControlsType((uint64_t)v124, (uint64_t)v121);
                v94 = specialized >> prefix<A>(_:)((uint64_t)v121, v87, v88, v89, v90, v91, v92, v93);
                v96 = v95;
                outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v121, &demangling cache variable for type metadata for ConversationControlsType?);
                v121[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v94, v96, v122);
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                swift_bridgeObjectRelease();
                outlined destroy of ConversationControlsType((uint64_t)v124);
                *(_WORD *)(v86 + 12) = 2080;
                ConversationControlsType.associatedNotice.getter((uint64_t)v121);
                v97 = specialized >> prefix<A>(_:)((uint64_t)v121);
                v99 = v98;
                outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v121, (uint64_t *)&demangling cache variable for type metadata for Notice?);
                v121[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v97, v99, v122);
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                swift_bridgeObjectRelease();
                v100 = outlined destroy of ConversationControlsType((uint64_t)v123);
                *(_WORD *)(v86 + 22) = 2082;
                v121[0] = (*(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v83) + 0x1D8))(v100);
                v101 = String.init<A>(reflecting:)();
                v121[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v101, v102, v122);
                UnsafeMutableRawBufferPointer.copyMemory(from:)();

                swift_bridgeObjectRelease();
                *(_WORD *)(v86 + 32) = 2082;
                if ((v119 & 1) != 0)
                {
                  v103 = 0xE300000000000000;
                  v104 = 7104878;
                }
                else
                {
                  v121[0] = v117;
                  v104 = String.init<A>(reflecting:)();
                  v103 = v105;
                }
                v121[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v104, v103, v122);
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                swift_bridgeObjectRelease();
                *(_WORD *)(v86 + 42) = 1024;
                LOBYTE(v75) = v114;
                LODWORD(v121[0]) = v114 & 1;
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                *(_WORD *)(v86 + 48) = 1024;
                LODWORD(v121[0]) = v80 & 1;
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                _os_log_impl(&dword_1BD004000, v84, v85, "updateSystemApertureElement type:%{public}s,\nnotice:%s,\ncurrent sizeClass:%{public}s,\nupdated sizeClass:%{public}s,\nshouldDismissPresentedBanner:%{BOOL}d,\nshouldIgnoreSizeClassUpdate:%{BOOL}d", (uint8_t *)v86, 0x36u);
                v106 = v113;
                swift_arrayDestroy();
                MEMORY[0x1C3B751B8](v106, -1, -1);
                MEMORY[0x1C3B751B8](v86, -1, -1);

                v37 = v118;
              }
              else
              {
                outlined destroy of ConversationControlsType((uint64_t)v124);
                outlined destroy of ConversationControlsType((uint64_t)v123);

              }
              if ((v80 & 1) != 0)
                v107 = 0;
              else
                v107 = v117;
              (*(void (**)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD))((*MEMORY[0x1E0DEEDD8] & *v83) + 0x420))(v37, v107, (v80 | v119) & 1, 0, 0);
              if ((v75 & (v110 != 0)) == 1)
              {
                v108 = (void *)MEMORY[0x1C3B72E00](v109);
                objc_msgSend(v116, sel_dismissPresentedBannerForReason_animated_, v108, 0);

              }
              else
              {

              }
              *v120 = 11;
              return;
            }
            outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v124, (uint64_t *)&demangling cache variable for type metadata for Notice?);
          }
          v80 = 0;
          goto LABEL_66;
        }
      }
    }
    else
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v131, (uint64_t *)&demangling cache variable for type metadata for Notice?);
    }
LABEL_59:
    outlined init with copy of ConversationControlsType(v37, (uint64_t)&v131);
    goto LABEL_60;
  }
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v43 = type metadata accessor for Logger();
  __swift_project_value_buffer(v43, (uint64_t)&static Logger.conversationControls);
  v44 = Logger.logObject.getter();
  v45 = static os_log_type_t.error.getter();
  v46 = os_log_type_enabled(v44, v45);
  v47 = v120;
  if (v46)
  {
    v48 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v48 = 0;
    _os_log_impl(&dword_1BD004000, v44, v45, "Unable to makeSystemApertureElementProvider", v48, 2u);
    MEMORY[0x1C3B751B8](v48, -1, -1);
  }

  *v47 = 8;
}

uint64_t BannerPresentationManager.onlyHasGreenTea3PCall.getter()
{
  _QWORD *v0;
  uint64_t result;
  void *v2;
  id v3;
  unsigned int v4;
  id v5;
  unsigned int v6;
  char HasChinaSKU;

  result = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x160))();
  if (result)
  {
    v2 = (void *)result;
    v3 = objc_msgSend((id)result, sel_provider);
    v4 = objc_msgSend(v3, sel_supportsDynamicSystemUI);

    if (v4
      && (v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DBD2F0]), sel_init),
          v6 = objc_msgSend(v5, sel_groupConversations),
          v5,
          v6))
    {
      HasChinaSKU = TUDeviceHasChinaSKU();

      if ((HasChinaSKU & 1) != 0)
        return 1;
    }
    else
    {

    }
    return 0;
  }
  return result;
}

uint64_t BannerPresentationManager.updatePresentedBanner(type:)(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  _QWORD v28[6];
  uint64_t v29;
  _BYTE v30[48];
  _BYTE v31[56];

  v3 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v4 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x188))();
  if (v4)
  {
    v5 = (_QWORD *)v4;
    objc_msgSend(*(id *)((char *)v1 + OBJC_IVAR____TtC15ConversationKit25BannerPresentationManager_presentedBannerDismissalTimer), sel_invalidate);
    objc_msgSend(*(id *)((char *)v1+ OBJC_IVAR____TtC15ConversationKit25BannerPresentationManager_systemApertureElementDismissalTimer), sel_invalidate);
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v6 = type metadata accessor for Logger();
    __swift_project_value_buffer(v6, (uint64_t)&static Logger.conversationControls);
    outlined init with copy of ConversationControlsType(a1, (uint64_t)v31);
    outlined init with copy of ConversationControlsType(a1, (uint64_t)v30);
    v7 = Logger.logObject.getter();
    v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = swift_slowAlloc();
      v10 = swift_slowAlloc();
      v29 = v10;
      *(_DWORD *)v9 = 136315394;
      outlined init with copy of ConversationControlsType((uint64_t)v31, (uint64_t)v28);
      v18 = specialized >> prefix<A>(_:)((uint64_t)v28, v11, v12, v13, v14, v15, v16, v17);
      v20 = v19;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v28, &demangling cache variable for type metadata for ConversationControlsType?);
      v28[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v18, v20, &v29);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      outlined destroy of ConversationControlsType((uint64_t)v31);
      *(_WORD *)(v9 + 12) = 2080;
      ConversationControlsType.associatedNotice.getter((uint64_t)v28);
      v21 = specialized >> prefix<A>(_:)((uint64_t)v28);
      v23 = v22;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v28, (uint64_t *)&demangling cache variable for type metadata for Notice?);
      v28[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v21, v23, &v29);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      outlined destroy of ConversationControlsType((uint64_t)v30);
      _os_log_impl(&dword_1BD004000, v7, v8, "updatePresentedBanner type:%s, notice:%s", (uint8_t *)v9, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v10, -1, -1);
      v24 = v9;
      v3 = (_QWORD *)MEMORY[0x1E0DEEDD8];
      MEMORY[0x1C3B751B8](v24, -1, -1);
    }
    else
    {
      outlined destroy of ConversationControlsType((uint64_t)v31);
      outlined destroy of ConversationControlsType((uint64_t)v30);
    }

    if (((*(uint64_t (**)(uint64_t, _QWORD, uint64_t, _QWORD))((*v3 & *v5) + 0x418))(a1, 0, 1, 0) & 1) == 0)
    {
      lazy protocol witness table accessor for type BannerPresentationError and conformance BannerPresentationError();
      v25 = swift_allocError();
      *v26 = 8;

      return v25;
    }

  }
  return 0;
}

Swift::Void __swiftcall BannerPresentationManager.dismissPresentedBanner(forReason:animated:)(Swift::String forReason, Swift::Bool animated)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  void (*v10)(uint64_t);
  _QWORD *v11;
  uint64_t v12;

  OUTLINED_FUNCTION_6_6();
  v5 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v6 = OUTLINED_FUNCTION_308(*v3);
  if (v6)
  {
    v7 = (_QWORD *)v6;
    v8 = OUTLINED_FUNCTION_7_0();
    swift_unknownObjectWeakInit();
    v9 = (_QWORD *)OUTLINED_FUNCTION_15();
    v9[2] = v8;
    v9[3] = v7;
    v9[4] = v4;
    v9[5] = v2;
    v10 = *(void (**)(uint64_t))((*v5 & *v7) + 0x498);
    swift_retain();
    v11 = v7;
    swift_bridgeObjectRetain();
    v12 = OUTLINED_FUNCTION_124_0();
    v10(v12);

    swift_release();
    swift_release();
  }
  else
  {
    OUTLINED_FUNCTION_65_1();
  }
}

void closure #1 in BannerPresentationManager.dismissPresentedBanner(forReason:animated:)(int a1, uint64_t a2, _QWORD *a3, uint64_t a4, unint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  _QWORD *v17;
  char *v18;
  NSObject *v19;
  os_log_type_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  os_log_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  char *v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  _QWORD v43[2];
  int v44;
  int v45;
  os_log_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54[5];

  v10 = type metadata accessor for UUID();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v14 = MEMORY[0x1C3B752C0](a2 + 16);
  if (v14)
  {
    v15 = (void *)v14;
    (*(void (**)(__int128 *__return_ptr))((*MEMORY[0x1E0DEEDD8] & *a3) + 0x208))(&v51);
    if (v52)
    {
      outlined init with take of Notice(&v51, (uint64_t)v54);
      if (one-time initialization token for conversationControls != -1)
        swift_once();
      v16 = type metadata accessor for Logger();
      __swift_project_value_buffer(v16, (uint64_t)&static Logger.conversationControls);
      outlined init with copy of RadarReporting((uint64_t)v54, (uint64_t)&v51);
      v17 = a3;
      swift_bridgeObjectRetain_n();
      v18 = v17;
      v19 = Logger.logObject.getter();
      v20 = static os_log_type_t.default.getter();
      v21 = v20;
      if (os_log_type_enabled(v19, v20))
      {
        v22 = swift_slowAlloc();
        v48 = a4;
        v23 = v22;
        v47 = swift_slowAlloc();
        v50 = v47;
        *(_DWORD *)v23 = 136315906;
        v46 = v19;
        v44 = a1;
        v45 = v21;
        v24 = *(_QWORD *)&v18[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_bannerIdentifier];
        v25 = *(_QWORD *)&v18[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_bannerIdentifier + 8];
        swift_bridgeObjectRetain();
        v49 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v24, v25, &v50);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        *(_WORD *)(v23 + 12) = 2080;
        v43[1] = v23 + 14;
        v27 = v52;
        v26 = v53;
        __swift_project_boxed_opaque_existential_1(&v51, v52);
        (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v27, v26);
        lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
        v28 = dispatch thunk of CustomStringConvertible.description.getter();
        v30 = v29;
        (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
        v49 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v28, v30, &v50);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v51);
        *(_WORD *)(v23 + 22) = 1024;
        LODWORD(v49) = v44 & 1;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v23 + 28) = 2080;
        swift_bridgeObjectRetain();
        v49 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v48, a5, &v50);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        v31 = v46;
        _os_log_impl(&dword_1BD004000, v46, (os_log_type_t)v45, "Dismissed banner:%s, notice:%s with result:%{BOOL}d for reason:%s", (uint8_t *)v23, 0x26u);
        v32 = v47;
        swift_arrayDestroy();
        MEMORY[0x1C3B751B8](v32, -1, -1);
        MEMORY[0x1C3B751B8](v23, -1, -1);

      }
      else
      {
        swift_bridgeObjectRelease_n();

        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v51);
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
    }
    else
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v51, (uint64_t *)&demangling cache variable for type metadata for Notice?);
      if (one-time initialization token for conversationControls != -1)
        swift_once();
      v33 = type metadata accessor for Logger();
      __swift_project_value_buffer(v33, (uint64_t)&static Logger.conversationControls);
      v34 = a3;
      swift_bridgeObjectRetain_n();
      v35 = v34;
      v36 = Logger.logObject.getter();
      v37 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v36, v37))
      {
        v38 = swift_slowAlloc();
        v47 = swift_slowAlloc();
        v54[0] = v47;
        *(_DWORD *)v38 = 136315650;
        v48 = a4;
        v39 = a1;
        v40 = *(_QWORD *)&v35[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_bannerIdentifier];
        v41 = *(_QWORD *)&v35[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_bannerIdentifier + 8];
        swift_bridgeObjectRetain();
        *(_QWORD *)&v51 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v40, v41, v54);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        *(_WORD *)(v38 + 12) = 1024;
        LODWORD(v51) = v39 & 1;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v38 + 18) = 2080;
        swift_bridgeObjectRetain();
        *(_QWORD *)&v51 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v48, a5, v54);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1BD004000, v36, v37, "Dismissed banner:%s with result:%{BOOL}d for reason:%s", (uint8_t *)v38, 0x1Cu);
        v42 = v47;
        swift_arrayDestroy();
        MEMORY[0x1C3B751B8](v42, -1, -1);
        MEMORY[0x1C3B751B8](v38, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
    }
    BannerPresentationManager.presentedBanner.setter(0);

  }
}

Swift::Void __swiftcall BannerPresentationManager.dismissPresentedBanner(matching:forReason:animated:)(Swift::OpaquePointer matching, Swift::String forReason, Swift::Bool animated)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v13;
  void *v14;
  __int128 v15[3];
  _OWORD v16[3];

  v4 = v3;
  v7 = OUTLINED_FUNCTION_308(*v3);
  if (v7)
  {
    v8 = (void *)v7;
    OUTLINED_FUNCTION_16_23();
    OUTLINED_FUNCTION_205_3(v9, *(uint64_t *)&v15[0]);

    outlined init with take of ConversationControlsType(v15, v16);
    v10 = *((_QWORD *)matching._rawValue + 2);
    if (v10)
    {
      v11 = (char *)matching._rawValue + 32;
      swift_bridgeObjectRetain();
      while (1)
      {
        static ConversationControlsType.== infix(_:_:)((uint64_t)v11);
        if ((v12 & 1) != 0)
          break;
        v11 += 48;
        if (!--v10)
        {
          OUTLINED_FUNCTION_30_4();
          goto LABEL_8;
        }
      }
      OUTLINED_FUNCTION_30_4();
      v13 = OUTLINED_FUNCTION_49_16();
      v14 = (void *)MEMORY[0x1C3B72E00](v13);
      objc_msgSend(v4, sel_dismissPresentedBannerForReason_animated_, v14, animated);

    }
LABEL_8:
    outlined destroy of ConversationControlsType((uint64_t)v16);
  }
}

void BannerPresentationManager.getConversationControlsTypeForPresentedBanner()(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  __int128 v6[3];

  v3 = OUTLINED_FUNCTION_308(*v1);
  if (v3)
  {
    v4 = (void *)v3;
    OUTLINED_FUNCTION_351();
    OUTLINED_FUNCTION_205_3(v5, *(uint64_t *)&v6[0]);

    outlined init with take of ConversationControlsType(v6, (_OWORD *)a1);
  }
  else
  {
    *(_QWORD *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_BYTE *)(a1 + 40) = 6;
  }
  OUTLINED_FUNCTION_14_1();
}

void closure #1 in BannerPresentationManager.updatePresentedHUD(type:replacingNotice:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;

  v5 = a1 + 16;
  swift_beginAccess();
  v6 = MEMORY[0x1C3B752C0](v5);
  if (v6)
  {
    v7 = (void *)v6;
    BannerPresentationManager.updateWorkItem.setter(0);

  }
  swift_beginAccess();
  v8 = MEMORY[0x1C3B752C0](v5);
  if (v8)
  {
    v9 = (void *)v8;
    BannerPresentationManager._updatePresentedHUD(type:replacingNotice:)(a2, a3 & 1);

  }
}

void BannerPresentationManager._updatePresentedHUD(type:replacingNotice:)(uint64_t a1, char a2)
{
  char *v2;
  char *v3;
  _QWORD *v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  char v23;
  char v24;
  NSObject *v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t (*v34)(void);
  _QWORD *v35;
  char v36;
  char v37;
  char v38;
  char v39;
  os_log_type_t v40;
  uint8_t *v41;
  void *v42;
  os_log_type_t v43;
  uint8_t *v44;
  NSObject *v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  char v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  char v54;

  v3 = v2;
  v6 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v45 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)v2) + 0x1A0))();
  if (!v45)
  {
    updatedExistingBanner #1 () in BannerPresentationManager._updatePresentedHUD(type:replacingNotice:)(v2, a2 & 1, a1);
    return;
  }
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v7 = type metadata accessor for Logger();
  __swift_project_value_buffer(v7, (uint64_t)&static Logger.conversationControls);
  outlined init with copy of ConversationControlsType(a1, (uint64_t)&v51);
  v8 = Logger.logObject.getter();
  v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = swift_slowAlloc();
    v11 = swift_slowAlloc();
    v46 = v11;
    *(_DWORD *)v10 = 136446466;
    outlined init with copy of ConversationControlsType((uint64_t)&v51, (uint64_t)&v47);
    v19 = specialized >> prefix<A>(_:)((uint64_t)&v47, v12, v13, v14, v15, v16, v17, v18);
    v21 = v20;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v47, &demangling cache variable for type metadata for ConversationControlsType?);
    v47 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v19, v21, &v46);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v6 = (_QWORD *)MEMORY[0x1E0DEEDD8];
    swift_bridgeObjectRelease();
    outlined destroy of ConversationControlsType((uint64_t)&v51);
    *(_WORD *)(v10 + 12) = 1024;
    LODWORD(v47) = a2 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl(&dword_1BD004000, v8, v9, "updatePresentedSystemApertureHUD for type %{public}s replacingNotice: %{BOOL}d", (uint8_t *)v10, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v11, -1, -1);
    MEMORY[0x1C3B751B8](v10, -1, -1);
  }
  else
  {
    outlined destroy of ConversationControlsType((uint64_t)&v51);
  }

  if ((shouldUpdate #1 (existing:) in BannerPresentationManager._updatePresentedHUD(type:replacingNotice:)(v45, a2 & 1) & 1) == 0)
  {
    v25 = v45;
    (*(void (**)(uint64_t))((*v6 & (uint64_t)v45->isa) + 0x428))(a1);
    goto LABEL_29;
  }
  v22 = *(_QWORD **)&v3[OBJC_IVAR____TtC15ConversationKit25BannerPresentationManager_features];
  if (((*(uint64_t (**)(void))((*v6 & *v22) + 0xC0))() & 1) != 0 && (a2 & 1) != 0)
    (*(void (**)(void))((*v6 & **(_QWORD **)&v3[OBJC_IVAR____TtC15ConversationKit25BannerPresentationManager_activityManager])
                      + 0x100))();
  v23 = a2;
  BannerPresentationManager.updatePresentedSystemApertureElement(type:sizeClass:dismissPresentedBannerReason:)(a1, 0, 1, 0, 0, &v51);
  v24 = v51;
  if (v51 == 11)
  {
LABEL_19:
    v32 = *(_QWORD **)&v3[OBJC_IVAR____TtC15ConversationKit25BannerPresentationManager__conversationControlsManager];
    if (v32)
    {
      v33 = v6;
      v34 = *(uint64_t (**)(void))((*v6 & *v32) + 0x280);
      v35 = v32;
      if ((v34() & 1) != 0 && ((*(uint64_t (**)(void))((*v33 & *v22) + 0xA8))() & 1) == 0)
      {
        v25 = Logger.logObject.getter();
        v43 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v25, v43))
        {
          v44 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v44 = 0;
          _os_log_impl(&dword_1BD004000, v25, v43, "Skipping dismiss presented banner for updating SystemAperture HUD", v44, 2u);
          MEMORY[0x1C3B751B8](v44, -1, -1);
        }

        goto LABEL_29;
      }

    }
    v51 = 22;
    v52 = 0u;
    v53 = 0u;
    v54 = 6;
    static ConversationControlsType.== infix(_:_:)(a1);
    v37 = v36;
    outlined destroy of ConversationControlsType((uint64_t)&v51);
    outlined init with copy of ConversationControlsType(a1, (uint64_t)&v51);
    if ((v37 & 1) != 0)
    {
      outlined destroy of ConversationControlsType((uint64_t)&v51);
    }
    else
    {
      v47 = 23;
      v48 = 0u;
      v49 = 0u;
      v50 = 6;
      static ConversationControlsType.== infix(_:_:)((uint64_t)&v51);
      v39 = v38;
      outlined destroy of ConversationControlsType((uint64_t)&v47);
      outlined destroy of ConversationControlsType((uint64_t)&v51);
      if ((v39 & 1) == 0)
      {
        v42 = (void *)MEMORY[0x1C3B72E00](0xD00000000000001BLL, 0x80000001BD68CA20);
        objc_msgSend(v3, sel_dismissPresentedBannerForReason_animated_, v42, 1);

        goto LABEL_31;
      }
    }
    v25 = Logger.logObject.getter();
    v40 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v25, v40))
    {
      v41 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v41 = 0;
      _os_log_impl(&dword_1BD004000, v25, v40, "Skipping dismiss presented banner for updating SystemAperture HUD for GreenTea3P call", v41, 2u);
      MEMORY[0x1C3B751B8](v41, -1, -1);
    }

LABEL_29:
    return;
  }
  if (v51 - 9 > 1)
  {
    v26 = Logger.logObject.getter();
    v27 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc();
      v29 = swift_slowAlloc();
      v51 = v29;
      *(_DWORD *)v28 = 136315138;
      LOBYTE(v47) = v24;
      v30 = String.init<A>(reflecting:)();
      v47 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v30, v31, &v51);
      v6 = (_QWORD *)MEMORY[0x1E0DEEDD8];
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BD004000, v26, v27, "Unable to update presented system aperture element: %s", v28, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v29, -1, -1);
      MEMORY[0x1C3B751B8](v28, -1, -1);
    }

    goto LABEL_19;
  }
  updatedExistingBanner #1 () in BannerPresentationManager._updatePresentedHUD(type:replacingNotice:)(v3, v23 & 1, a1);
LABEL_31:

}

uint64_t shouldUpdate #1 (existing:) in BannerPresentationManager._updatePresentedHUD(type:replacingNotice:)(_QWORD *a1, char a2)
{
  _QWORD *v4;
  void (*v5)(unint64_t *__return_ptr);
  _BOOL8 v6;
  uint64_t result;
  uint64_t v8;
  int8x16_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  unint64_t v15;
  _BYTE v16[48];
  unint64_t v17;
  int8x16_t v18;
  int8x16_t v19;
  char v20;

  v4 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v5 = *(void (**)(unint64_t *__return_ptr))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x1F0);
  v5(&v17);
  if (v20 == 5)
  {
    swift_unknownObjectRelease();
    return 0;
  }
  v8 = outlined destroy of ConversationControlsType((uint64_t)&v17);
  ((void (*)(unint64_t *__return_ptr, uint64_t))v5)(&v17, v8);
  if (v20 == 6 && v17 == 25)
  {
    v9 = vorrq_s8(v18, v19);
    if (!*(_QWORD *)&vorr_s8(*(int8x8_t *)v9.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v9, v9, 8uLL)))
    {
      outlined destroy of ConversationControlsType((uint64_t)&v17);
      if (one-time initialization token for conversationControls != -1)
        swift_once();
      v10 = type metadata accessor for Logger();
      __swift_project_value_buffer(v10, (uint64_t)&static Logger.conversationControls);
      v11 = Logger.logObject.getter();
      v12 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v11, v12))
      {
        v13 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v13 = 0;
        _os_log_impl(&dword_1BD004000, v11, v12, "shouldUpdatePresentedHUD=false for controlsType= incomingScreenSharingRequest", v13, 2u);
        MEMORY[0x1C3B751B8](v13, -1, -1);
      }

      return 0;
    }
  }
  v14 = outlined destroy of ConversationControlsType((uint64_t)&v17);
  v15 = (*(uint64_t (**)(uint64_t))((*v4 & *a1) + 0x1D8))(v14);
  if (v15 < 2)
    goto LABEL_16;
  if (v15 == 2)
    return 0;
  if (v15 == 3)
  {
LABEL_16:
    if ((a2 & 1) != 0)
      return 1;
    v5(&v17);
    outlined init with copy of ConversationControlsType((uint64_t)&v17, (uint64_t)v16);
    v6 = v16[40] != 0;
    outlined destroy of ConversationControlsType((uint64_t)v16);
    outlined destroy of ConversationControlsType((uint64_t)&v17);
    return v6;
  }
  v17 = v15;
  result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
  __break(1u);
  return result;
}

uint64_t canUpdateBanner #1 (to:) in BannerPresentationManager._updatePresentedHUD(type:replacingNotice:)(uint64_t a1, id a2)
{
  char v3;
  char v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD v36[6];
  uint64_t v37;
  _BYTE v38[48];

  if (objc_msgSend(a2, sel_isPresentingFullScreenCallUI))
  {
    ConversationControlsType.canShowOverICS.getter();
    v4 = v3;
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v5 = type metadata accessor for Logger();
    __swift_project_value_buffer(v5, (uint64_t)&static Logger.conversationControls);
    outlined init with copy of ConversationControlsType(a1, (uint64_t)v38);
    v6 = Logger.logObject.getter();
    v7 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = swift_slowAlloc();
      v9 = swift_slowAlloc();
      v37 = v9;
      *(_DWORD *)v8 = 136315394;
      outlined init with copy of ConversationControlsType((uint64_t)v38, (uint64_t)v36);
      v17 = specialized >> prefix<A>(_:)((uint64_t)v36, v10, v11, v12, v13, v14, v15, v16);
      v19 = v18;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v36, &demangling cache variable for type metadata for ConversationControlsType?);
      v36[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v17, v19, &v37);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      outlined destroy of ConversationControlsType((uint64_t)v38);
      *(_WORD *)(v8 + 12) = 1024;
      LODWORD(v36[0]) = v4 & 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl(&dword_1BD004000, v6, v7, "canUpdateBanner for %s is %{BOOL}d, isPresentingFullScreenCallUI: 1", (uint8_t *)v8, 0x12u);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v9, -1, -1);
      MEMORY[0x1C3B751B8](v8, -1, -1);
    }
    else
    {
      outlined destroy of ConversationControlsType((uint64_t)v38);
    }

  }
  else
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v20 = type metadata accessor for Logger();
    __swift_project_value_buffer(v20, (uint64_t)&static Logger.conversationControls);
    outlined init with copy of ConversationControlsType(a1, (uint64_t)v38);
    v21 = Logger.logObject.getter();
    v22 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      v24 = swift_slowAlloc();
      v37 = v24;
      *(_DWORD *)v23 = 136315138;
      outlined init with copy of ConversationControlsType((uint64_t)v38, (uint64_t)v36);
      v32 = specialized >> prefix<A>(_:)((uint64_t)v36, v25, v26, v27, v28, v29, v30, v31);
      v34 = v33;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v36, &demangling cache variable for type metadata for ConversationControlsType?);
      v36[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v32, v34, &v37);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      outlined destroy of ConversationControlsType((uint64_t)v38);
      _os_log_impl(&dword_1BD004000, v21, v22, "canUpdateBanner to %s is true because isPresentingFullScreenCallUI: 0", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v24, -1, -1);
      MEMORY[0x1C3B751B8](v23, -1, -1);
    }
    else
    {
      outlined destroy of ConversationControlsType((uint64_t)v38);
    }

    v4 = 1;
  }
  return v4 & 1;
}

void updatedExistingBanner #1 () in BannerPresentationManager._updatePresentedHUD(type:replacingNotice:)(_QWORD *a1, char a2, uint64_t a3)
{
  _QWORD *v6;
  void *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  _QWORD v38[6];
  uint64_t v39;
  _BYTE v40[48];

  v6 = (_QWORD *)(*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x188))();
  if (v6)
  {
    v7 = v6;
    if ((shouldUpdate #1 (existing:) in BannerPresentationManager._updatePresentedHUD(type:replacingNotice:)(v6, a2 & 1) & 1) != 0&& (canUpdateBanner #1 (to:) in BannerPresentationManager._updatePresentedHUD(type:replacingNotice:)(a3, a1) & 1) != 0)
    {
      if (one-time initialization token for conversationControls != -1)
        swift_once();
      v8 = type metadata accessor for Logger();
      __swift_project_value_buffer(v8, (uint64_t)&static Logger.conversationControls);
      outlined init with copy of ConversationControlsType(a3, (uint64_t)v40);
      v9 = Logger.logObject.getter();
      v10 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v9, v10))
      {
        v11 = swift_slowAlloc();
        v12 = swift_slowAlloc();
        v39 = v12;
        *(_DWORD *)v11 = 136446466;
        outlined init with copy of ConversationControlsType((uint64_t)v40, (uint64_t)v38);
        v20 = specialized >> prefix<A>(_:)((uint64_t)v38, v13, v14, v15, v16, v17, v18, v19);
        v22 = v21;
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v38, &demangling cache variable for type metadata for ConversationControlsType?);
        v38[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v20, v22, &v39);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        outlined destroy of ConversationControlsType((uint64_t)v40);
        *(_WORD *)(v11 + 12) = 1024;
        LODWORD(v38[0]) = a2 & 1;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl(&dword_1BD004000, v9, v10, "updatePresentedHUD for type %{public}s replacingNotice: %{BOOL}d", (uint8_t *)v11, 0x12u);
        swift_arrayDestroy();
        MEMORY[0x1C3B751B8](v12, -1, -1);
        MEMORY[0x1C3B751B8](v11, -1, -1);
      }
      else
      {
        outlined destroy of ConversationControlsType((uint64_t)v40);
      }

      return;
    }

  }
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v23 = type metadata accessor for Logger();
  __swift_project_value_buffer(v23, (uint64_t)&static Logger.conversationControls);
  outlined init with copy of ConversationControlsType(a3, (uint64_t)v40);
  v24 = Logger.logObject.getter();
  v25 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v24, v25))
  {
    v26 = swift_slowAlloc();
    v27 = swift_slowAlloc();
    v39 = v27;
    *(_DWORD *)v26 = 136446466;
    outlined init with copy of ConversationControlsType((uint64_t)v40, (uint64_t)v38);
    v35 = specialized >> prefix<A>(_:)((uint64_t)v38, v28, v29, v30, v31, v32, v33, v34);
    v37 = v36;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v38, &demangling cache variable for type metadata for ConversationControlsType?);
    v38[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v35, v37, &v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    outlined destroy of ConversationControlsType((uint64_t)v40);
    *(_WORD *)(v26 + 12) = 1024;
    LODWORD(v38[0]) = a2 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl(&dword_1BD004000, v24, v25, "skipping updatePresentedHUD for type %{public}s replacingNotice: %{BOOL}d", (uint8_t *)v26, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v27, -1, -1);
    MEMORY[0x1C3B751B8](v26, -1, -1);
  }
  else
  {
    outlined destroy of ConversationControlsType((uint64_t)v40);
  }

}

Swift::Void __swiftcall BannerPresentationManager.updatePresentedHUDCornerRadius()()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  if (OUTLINED_FUNCTION_308(*v0))
  {
    OUTLINED_FUNCTION_128();
    OUTLINED_FUNCTION_12_78(v2, v3, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 1040));
    OUTLINED_FUNCTION_7_1(v4);
  }
  else
  {
    OUTLINED_FUNCTION_36();
  }
}

Swift::Void __swiftcall BannerPresentationManager.bannerDismissedBySpringBoard()()
{
  char *v0;
  uint64_t v1;
  os_log_type_t v2;
  uint64_t v3;
  NSObject *v4;
  uint64_t v5;
  uint64_t v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  Swift::String v17;
  uint64_t v18;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_4_1();
  v4 = *(NSObject **)&v0[OBJC_IVAR____TtC15ConversationKit25BannerPresentationManager_features];
  OUTLINED_FUNCTION_16_23();
  if (((*(uint64_t (**)(void))(v5 + 80))() & 1) != 0)
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v6 = OUTLINED_FUNCTION_17_2();
    OUTLINED_FUNCTION_3(v6, (uint64_t)&static Logger.conversationControls);
    v7 = OUTLINED_FUNCTION_12_0();
    if (OUTLINED_FUNCTION_4_14(v7))
    {
      v8 = (uint8_t *)OUTLINED_FUNCTION_105();
      *(_WORD *)v8 = 0;
      OUTLINED_FUNCTION_130(&dword_1BD004000, v4, v2, "SpringBoard requested banner dismissal", v8);
      OUTLINED_FUNCTION_60();
    }

    OUTLINED_FUNCTION_16_23();
    if (((*(uint64_t (**)(void))(v9 + 200))() & 1) != 0)
    {
      v10 = type metadata accessor for TaskPriority();
      OUTLINED_FUNCTION_77_0(v1, v11, v12, v10);
      type metadata accessor for MainActor();
      v13 = v0;
      v14 = static MainActor.shared.getter();
      v15 = (_QWORD *)OUTLINED_FUNCTION_15();
      v16 = MEMORY[0x1E0DF06E8];
      v15[2] = v14;
      v15[3] = v16;
      v15[4] = v13;
      _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCytSg_Tgm5();
      swift_release();
      OUTLINED_FUNCTION_61();
      v17._countAndFlagsBits = 0xD000000000000026;
      HUDActivityManager.dismissPresentedBanner(forReason:animated:)(v17, 1);
    }
    OUTLINED_FUNCTION_16_23();
    (*(void (**)(_QWORD))(v18 + 424))(0);
  }
  OUTLINED_FUNCTION_65_1();
}

uint64_t closure #1 in BannerPresentationManager.bannerDismissedBySpringBoard()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[2] = a1;
  v4[3] = a4;
  type metadata accessor for MainActor();
  v4[4] = static MainActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  return swift_task_switch();
}

uint64_t closure #1 in BannerPresentationManager.bannerDismissedBySpringBoard()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 24);
  swift_release();
  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit25BannerPresentationManager_incomingCallActivity);
  if (v2)
  {
    v3 = *(void (**)(uint64_t))(*(_QWORD *)v2 + 224);
    v4 = swift_retain();
    v3(v4);
    OUTLINED_FUNCTION_43();
  }
  **(_BYTE **)(v0 + 16) = v2 == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

Swift::Void __swiftcall BannerPresentationManager.preloadCallChanges()()
{
  void *v0;
  os_log_type_t v1;
  uint64_t v2;
  NSObject *v3;
  _QWORD *v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  _QWORD *v8;
  _QWORD *v9;

  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v2 = OUTLINED_FUNCTION_17_2();
  v3 = __swift_project_value_buffer(v2, (uint64_t)&static Logger.conversationControls);
  v4 = v0;
  v5 = v3;
  Logger.logObject.getter();
  v6 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_51_3(v6))
  {
    v7 = (uint8_t *)OUTLINED_FUNCTION_105();
    v8 = (_QWORD *)OUTLINED_FUNCTION_105();
    *(_DWORD *)v7 = 138412290;
    v9 = v4;
    OUTLINED_FUNCTION_31_3();
    *v8 = v4;

    OUTLINED_FUNCTION_48(&dword_1BD004000, v5, v1, "Prewarming %@ for a potential call change", v7);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

}

Swift::Void __swiftcall BannerPresentationManager.requestPreferredLayoutMode()()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  if (OUTLINED_FUNCTION_43_6(*v0))
  {
    OUTLINED_FUNCTION_128();
    OUTLINED_FUNCTION_12_78(v2, v3, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 1080));
    OUTLINED_FUNCTION_7_1(v4);
  }
  else
  {
    OUTLINED_FUNCTION_36();
  }
}

Swift::Void __swiftcall BannerPresentationManager.didOpenMessages()()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(OUTLINED_FUNCTION_7_0() + 16) = v0;
  v1 = v0;
  BannerPresentationManager.presentBanner(as:type:reply:)();
  v2 = swift_release();
  OUTLINED_FUNCTION_14_15(v2, v3, v4, v5, v6, v7, v8, v9, 0);
  OUTLINED_FUNCTION_8_15();
}

void closure #1 in BannerPresentationManager.didOpenMessages()(char a1, void *a2, _QWORD *a3)
{
  _QWORD *v4;
  NSObject *v5;
  uint64_t v7;
  id v8;
  id v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  os_log_type_t v18;
  uint8_t *v19;
  NSObject *oslog;
  uint64_t v21;

  if ((a1 & 1) != 0)
  {
    v4 = (_QWORD *)MEMORY[0x1E0DEEDD8];
    if (((*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **(_QWORD **)((char *)a3
                                                                     + OBJC_IVAR____TtC15ConversationKit25BannerPresentationManager_features))
                               + 0x50))() & 1) == 0)
      return;
    v5 = (*(uint64_t (**)(void))((*v4 & *a3) + 0x1A0))();
    if (v5)
    {
      oslog = v5;
      (*(void (**)(void))((*v4 & (uint64_t)v5->isa) + 0x438))();
    }
    else
    {
      if (one-time initialization token for conversationControls != -1)
        swift_once();
      v17 = type metadata accessor for Logger();
      __swift_project_value_buffer(v17, (uint64_t)&static Logger.conversationControls);
      oslog = Logger.logObject.getter();
      v18 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(oslog, v18))
      {
        v19 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v19 = 0;
        _os_log_impl(&dword_1BD004000, oslog, v18, "[SystemAperture] Unable to request preferredLayoutMode since there is no presentedSystemApertureElement", v19, 2u);
        MEMORY[0x1C3B751B8](v19, -1, -1);
      }
    }
    goto LABEL_11;
  }
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v7 = type metadata accessor for Logger();
  __swift_project_value_buffer(v7, (uint64_t)&static Logger.conversationControls);
  v8 = a2;
  v9 = a2;
  oslog = Logger.logObject.getter();
  v10 = static os_log_type_t.error.getter();
  if (!os_log_type_enabled(oslog, v10))
  {

LABEL_11:
    return;
  }
  v11 = (uint8_t *)swift_slowAlloc();
  v12 = swift_slowAlloc();
  v21 = v12;
  *(_DWORD *)v11 = 136315138;
  if (a2)
  {
    v13 = a2;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
    v14 = String.init<A>(reflecting:)();
    v16 = v15;
  }
  else
  {
    v16 = 0xE300000000000000;
    v14 = 7104878;
  }
  getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v14, v16, &v21);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_bridgeObjectRelease();

  _os_log_impl(&dword_1BD004000, oslog, v10, "Failed to present banner after opening messages with error: %s", v11, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x1C3B751B8](v12, -1, -1);
  MEMORY[0x1C3B751B8](v11, -1, -1);

}

Swift::Void __swiftcall BannerPresentationManager.didRequestAVLessDowngrade()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  NSObject *v9;
  _QWORD *v10;
  os_log_type_t v11;
  uint8_t *v12;
  _QWORD *v13;
  _QWORD *v14;
  void *v15;
  Class isa;
  _QWORD v17[2];

  OUTLINED_FUNCTION_93();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = OUTLINED_FUNCTION_33_0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_4_1();
  BannerPresentationManager.placeholderCallGroupUUID.getter((uint64_t)v4);
  OUTLINED_FUNCTION_19_7((uint64_t)v4);
  if (v7)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v4, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v8 = OUTLINED_FUNCTION_17_2();
    v9 = __swift_project_value_buffer(v8, (uint64_t)&static Logger.conversationControls);
    v10 = v0;
    Logger.logObject.getter();
    v11 = OUTLINED_FUNCTION_37_4();
    if (os_log_type_enabled(v9, v11))
    {
      v12 = (uint8_t *)OUTLINED_FUNCTION_105();
      v13 = (_QWORD *)OUTLINED_FUNCTION_105();
      *(_DWORD *)v12 = 138412290;
      v17[1] = v10;
      v14 = v10;
      OUTLINED_FUNCTION_31_3();
      *v13 = v10;

      OUTLINED_FUNCTION_48(&dword_1BD004000, v9, v11, "Requested AVLess downgrade, but couldn't find placeholderCallGroupUUID %@", v12);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_60();
    }

  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v1, v4, v5);
    v15 = (void *)OUTLINED_FUNCTION_16_3(*v0);
    if (v15)
    {
      if ((objc_msgSend(v15, sel_respondsToSelector_, sel_bannerPresentationManagerAVDowngradedGroupUUID_) & 1) != 0)
      {
        isa = UUID._bridgeToObjectiveC()().super.isa;
        OUTLINED_FUNCTION_137((uint64_t)isa, sel_bannerPresentationManagerAVDowngradedGroupUUID_);
        OUTLINED_FUNCTION_9_10();

      }
      else
      {
        OUTLINED_FUNCTION_9_10();
      }
    }
    OUTLINED_FUNCTION_39_0(v1, *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
  }
  OUTLINED_FUNCTION_52_1();
}

uint64_t BannerPresentationManager.placeholderCallGroupUUID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  if (PlaceholderCallCenter.activeCall.getter())
    PlaceholderCall.callGroupUUID.getter();
  v2 = type metadata accessor for UUID();
  return __swift_storeEnumTagSinglePayload(a1, 1, 1, v2);
}

Swift::Void __swiftcall BannerPresentationManager.requestEphemeralSystemApertureAlert(reason:shouldOverridePersistentAssertion:)(Swift::String reason, Swift::Bool shouldOverridePersistentAssertion)
{
  os_log_type_t v2;
  uint8_t *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t);
  uint64_t v11;
  os_log_type_t v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  _WORD *v20;
  uint64_t v21;
  NSObject *v22;
  NSObject *v23;

  OUTLINED_FUNCTION_6_6();
  OUTLINED_FUNCTION_4_75();
  v4 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  if ((OUTLINED_FUNCTION_12_67(v5) & 1) != 0)
  {
    v6 = (*(uint64_t (**)(void))((*v4 & *(_QWORD *)v3) + 0x1A0))();
    if (v6)
    {
      v7 = (void *)v6;
      OUTLINED_FUNCTION_136_1();
      (*(void (**)(void))(v8 + 696))();

      v9 = OUTLINED_FUNCTION_124_0();
      v10(v9);
      OUTLINED_FUNCTION_41_35();
    }
    else
    {
      OUTLINED_FUNCTION_8_15();
    }
  }
  else
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v11 = OUTLINED_FUNCTION_17_2();
    OUTLINED_FUNCTION_3(v11, (uint64_t)&static Logger.conversationControls);
    v12 = OUTLINED_FUNCTION_229_4();
    if (OUTLINED_FUNCTION_5_9(v12, v13, v14, v15, v16, v17, v18, v19, v21, v22))
    {
      v20 = (_WORD *)OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_52_3(v20);
      OUTLINED_FUNCTION_130(&dword_1BD004000, v23, v2, "requestEphemeralSystemApertureAlert called when system aperture isn't supported", v3);
      OUTLINED_FUNCTION_60();
    }
    OUTLINED_FUNCTION_42_0(v23);
  }
}

Swift::Void __swiftcall BannerPresentationManager.requestPersistentSystemApertureAlert(reason:)(Swift::String reason)
{
  os_log_type_t v1;
  uint8_t *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  void (*v6)(uint64_t);
  uint64_t v7;
  os_log_type_t v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  _WORD *v16;
  uint64_t v17;
  NSObject *v18;
  NSObject *v19;

  OUTLINED_FUNCTION_6_6();
  OUTLINED_FUNCTION_4_75();
  if ((OUTLINED_FUNCTION_12_67(v3) & 1) != 0)
  {
    v4 = (_QWORD *)OUTLINED_FUNCTION_119_4();
    if (v4)
    {
      OUTLINED_FUNCTION_131_8(v4);
      OUTLINED_FUNCTION_4_39();
      v5 = OUTLINED_FUNCTION_124_0();
      v6(v5);
      OUTLINED_FUNCTION_41_35();
    }
    else
    {
      OUTLINED_FUNCTION_8_15();
    }
  }
  else
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v7 = OUTLINED_FUNCTION_17_2();
    OUTLINED_FUNCTION_3(v7, (uint64_t)&static Logger.conversationControls);
    v8 = OUTLINED_FUNCTION_229_4();
    if (OUTLINED_FUNCTION_5_9(v8, v9, v10, v11, v12, v13, v14, v15, v17, v18))
    {
      v16 = (_WORD *)OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_52_3(v16);
      OUTLINED_FUNCTION_130(&dword_1BD004000, v19, v1, "requestPersistentSystemApertureAlert called when system aperture isn't supported", v2);
      OUTLINED_FUNCTION_60();
    }
    OUTLINED_FUNCTION_42_0(v19);
  }
}

Swift::Void __swiftcall BannerPresentationManager.invalidatePersistentSystemApertureAlert(reason:)(Swift::String reason)
{
  os_log_type_t v1;
  uint8_t *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  void (*v6)(uint64_t);
  uint64_t v7;
  os_log_type_t v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  _WORD *v16;
  uint64_t v17;
  NSObject *v18;
  NSObject *v19;

  OUTLINED_FUNCTION_6_6();
  OUTLINED_FUNCTION_4_75();
  if ((OUTLINED_FUNCTION_12_67(v3) & 1) != 0)
  {
    v4 = (_QWORD *)OUTLINED_FUNCTION_119_4();
    if (v4)
    {
      OUTLINED_FUNCTION_131_8(v4);
      OUTLINED_FUNCTION_4_39();
      v5 = OUTLINED_FUNCTION_124_0();
      v6(v5);
      OUTLINED_FUNCTION_41_35();
    }
    else
    {
      OUTLINED_FUNCTION_8_15();
    }
  }
  else
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v7 = OUTLINED_FUNCTION_17_2();
    OUTLINED_FUNCTION_3(v7, (uint64_t)&static Logger.conversationControls);
    v8 = OUTLINED_FUNCTION_229_4();
    if (OUTLINED_FUNCTION_5_9(v8, v9, v10, v11, v12, v13, v14, v15, v17, v18))
    {
      v16 = (_WORD *)OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_52_3(v16);
      OUTLINED_FUNCTION_130(&dword_1BD004000, v19, v1, "invalidatePersistentSystemApertureAlert called when system aperture isn't supported", v2);
      OUTLINED_FUNCTION_60();
    }
    OUTLINED_FUNCTION_42_0(v19);
  }
}

void BannerPresentationManager.presentShareCardViewController(_:)()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;

  OUTLINED_FUNCTION_9_33();
  v2 = OUTLINED_FUNCTION_308(v1);
  if (v2
    && (v3 = (void *)v2, OUTLINED_FUNCTION_351(), v5 = (void *)(*(uint64_t (**)(void))(v4 + 720))(), v3, v5))
  {
    type metadata accessor for ConversationHUDViewController();
    if (swift_dynamicCastClass())
      ConversationHUDViewController.presentShareCardViewController(_:)(v0);
    OUTLINED_FUNCTION_15_9(v5);
  }
  else
  {
    OUTLINED_FUNCTION_43_1();
  }
}

void BannerPresentationManager.isMicIndicatorVisible.getter()
{
  uint64_t v0;
  int v1;
  uint64_t (*v2)(void);
  void *v3;
  uint64_t v4;

  SBUIIsSystemApertureEnabled();
  OUTLINED_FUNCTION_128();
  if (v1)
    v2 = *(uint64_t (**)(void))(v0 + 416);
  else
    v2 = *(uint64_t (**)(void))(v0 + 392);
  v3 = (void *)v2();
  if (v3)
  {
    OUTLINED_FUNCTION_128();
    (*(void (**)(void))(v4 + 936))();

  }
  OUTLINED_FUNCTION_0();
}

uint64_t protocol witness for SystemConversationControlsDelegate.isAlertAvailable.getter in conformance BannerPresentationManager()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1B8))();
}

void protocol witness for SystemConversationControlsDelegate.dismissPresentedBanner(forReason:animated:) in conformance BannerPresentationManager(uint64_t a1, uint64_t a2, char a3)
{
  void *v3;
  id v5;

  v5 = (id)MEMORY[0x1C3B72E00]();
  objc_msgSend(v3, sel_dismissPresentedBannerForReason_animated_, v5, a3 & 1);

}

id protocol witness for SystemConversationControlsDelegate.deepLinkToFullScreenCallUI() in conformance BannerPresentationManager()
{
  void *v0;

  return objc_msgSend(v0, sel_deepLinkToFullScreenCallUI);
}

id protocol witness for SystemConversationControlsDelegate.isSpringBoardLocked.getter in conformance BannerPresentationManager()
{
  void *v0;

  return objc_msgSend(v0, sel_isSpringBoardLocked);
}

void protocol witness for SystemConversationControlsDelegate.invalidatePersistentSystemApertureAlert(reason:) in conformance BannerPresentationManager()
{
  void *v0;
  id v1;

  v1 = (id)MEMORY[0x1C3B72E00]();
  objc_msgSend(v0, sel_invalidatePersistentSystemApertureAlertWithReason_, v1);

}

void BannerPresentationManager.inCallSceneSessionIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;
  id v2;

  v1 = OUTLINED_FUNCTION_16_3(*v0);
  if (v1)
  {
    v2 = OUTLINED_FUNCTION_123(v1, sel_inCallSceneSessionIdentifier);
    OUTLINED_FUNCTION_19_0();
    if (v2)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();

    }
  }
  OUTLINED_FUNCTION_18();
}

void BannerPresentationManager.backgroundActivitiesToSuppress.getter()
{
  uint64_t *v0;
  void *v1;
  id v2;

  v1 = (void *)OUTLINED_FUNCTION_16_3(*v0);
  if (v1)
  {
    v2 = objc_msgSend(v1, sel_backgroundActivitiesToSuppress);
    OUTLINED_FUNCTION_19_0();
    type metadata accessor for STBackgroundActivityIdentifier(0);
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type STBackgroundActivityIdentifier and conformance STBackgroundActivityIdentifier, type metadata accessor for STBackgroundActivityIdentifier);
    static Set._unconditionallyBridgeFromObjectiveC(_:)();

  }
  OUTLINED_FUNCTION_0();
}

void BannerPresentationManager.hasPresentedFullScreenCallUI.getter()
{
  BannerPresentationManager.isAlertAvailable.getter();
}

void BannerPresentationManager.isPresentingFullScreenCallUI.getter()
{
  BannerPresentationManager.isAlertAvailable.getter();
}

void BannerPresentationManager.isAmbient.getter()
{
  BannerPresentationManager.isAlertAvailable.getter();
}

void BannerPresentationManager.isSpringBoardLocked.getter()
{
  uint64_t *v0;
  void *v1;
  uint64_t v2;

  v1 = (void *)OUTLINED_FUNCTION_16_3(*v0);
  if (v1)
  {
    v2 = (uint64_t)objc_msgSend(v1, sel_respondsToSelector_, sel_bannerPresentationManagerWantsSpringBoardIsLockedStatus);
    if ((v2 & 1) != 0)
      OUTLINED_FUNCTION_123(v2, sel_bannerPresentationManagerWantsSpringBoardIsLockedStatus);
    OUTLINED_FUNCTION_19_0();
  }
  OUTLINED_FUNCTION_0();
}

void BannerPresentationManager.presentFullscreenUI()()
{
  uint64_t *v0;
  void *v1;

  v1 = (void *)OUTLINED_FUNCTION_16_3(*v0);
  if (v1)
  {
    objc_msgSend(v1, sel_bannerPresentationManagerShowFullscreenUI);
    OUTLINED_FUNCTION_0_101();
  }
  else
  {
    OUTLINED_FUNCTION_0();
  }
}

Swift::Void __swiftcall BannerPresentationManager.deepLinkToFullScreenCallDetailsView()()
{
  BannerPresentationManager.deepLinkToFullScreenCallDetailsView()();
}

Swift::Void __swiftcall BannerPresentationManager.deepLinkToFullScreenPTTCallDetailsView()()
{
  BannerPresentationManager.deepLinkToFullScreenCallDetailsView()();
}

void BannerPresentationManager.deepLinkToFullScreenCallDetailsView()()
{
  SEL *v0;
  uint64_t v1;
  void *v2;
  void *v3;

  OUTLINED_FUNCTION_9_33();
  v2 = (void *)OUTLINED_FUNCTION_16_3(v1);
  if (v2)
  {
    v3 = v2;
    if ((objc_msgSend(v2, sel_respondsToSelector_, *v0) & 1) != 0)
      objc_msgSend(v3, *v0);
    OUTLINED_FUNCTION_0_101();
  }
  else
  {
    OUTLINED_FUNCTION_0();
  }
}

void BannerPresentationManager.didDismiss(_:reason:)(void *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  char v24;
  void *v25;
  void *v26;
  uint64_t v27[6];

  v3 = v2;
  OUTLINED_FUNCTION_4_75();
  v6 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  OUTLINED_FUNCTION_136_1();
  (*(void (**)(void))(v7 + 344))();
  OUTLINED_FUNCTION_136_1();
  v9 = OUTLINED_FUNCTION_54_0(*(uint64_t (**)(void))(v8 + 384));
  if (v9)
  {
    v10 = (void *)v9;
    OUTLINED_FUNCTION_136_1();
    (*(void (**)(uint64_t *__return_ptr))(v11 + 496))(v27);
    OUTLINED_FUNCTION_136_1();
    (*(void (**)(uint64_t *, uint64_t))(v12 + 2504))(v27, a2);

    OUTLINED_FUNCTION_14_15(v13, v14, v15, v16, v17, v18, v19, v20, v27[0]);
  }
  v21 = OUTLINED_FUNCTION_54_0(*(uint64_t (**)(void))((*v6 & *v2) + 0x188));
  if (v21)
  {
    v22 = (void *)v21;
    ObjC metadata update function for SystemBannerHostViewController();
    v23 = a1;
    OUTLINED_FUNCTION_315_0();
    v24 = static NSObject.== infix(_:_:)();

    if ((v24 & 1) != 0)
    {
      BannerPresentationManager.presentedBanner.setter(0);
      v25 = (void *)OUTLINED_FUNCTION_16_3(*v3);
      if (v25)
      {
        v26 = v25;
        if ((objc_msgSend(v25, sel_respondsToSelector_, sel_bannerPresentationManagerDidDismissBanner) & 1) != 0)
          objc_msgSend(v26, sel_bannerPresentationManagerDidDismissBanner);
        OUTLINED_FUNCTION_19_0();
      }
    }
  }
}

Swift::Void __swiftcall BannerPresentationManager.invalidateAndReschedulePresentedBannerTimer(reschedule:)(Swift::Bool reschedule)
{
  uint64_t v1;
  uint64_t v2;
  _BOOL8 v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;

  v2 = v1;
  v3 = reschedule;
  objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC15ConversationKit25BannerPresentationManager_presentedBannerDismissalTimer), sel_invalidate);
  if (v3)
  {
    OUTLINED_FUNCTION_39_6();
    if (OUTLINED_FUNCTION_54_0(*(uint64_t (**)(void))(v4 + 392)))
    {
      OUTLINED_FUNCTION_39_6();
      v18 = v6;
      if ((OUTLINED_FUNCTION_188_4(*(uint64_t (**)(void))(v5 + 1248)) & 1) == 0
        || (OUTLINED_FUNCTION_39_6(), (OUTLINED_FUNCTION_188_4(*(uint64_t (**)(void))(v7 + 1256)) & 1) != 0))
      {
        OUTLINED_FUNCTION_83_24(v18);
        return;
      }
      v8 = objc_opt_self();
      OUTLINED_FUNCTION_39_6();
      OUTLINED_FUNCTION_164_1(v9, v16, (uint64_t)v18);
      OUTLINED_FUNCTION_244_1();
      OUTLINED_FUNCTION_141_6(v10, v11);
      OUTLINED_FUNCTION_7_0();
      OUTLINED_FUNCTION_189_1();
      v12 = OUTLINED_FUNCTION_15();
      *(_QWORD *)(v12 + 16) = v3;
      *(_QWORD *)(v12 + 24) = v19;
      OUTLINED_FUNCTION_76_1((uint64_t)thunk for @escaping @callee_guaranteed @Sendable (@guaranteed NSTimer) -> (), v17, (uint64_t)v19, MEMORY[0x1E0C809B0], 1107296256, v21, v22);
      v13 = v20;
      v14 = swift_release();
      v15 = OUTLINED_FUNCTION_138_9(v14, sel_scheduledTimerWithTimeInterval_repeats_block_);
      OUTLINED_FUNCTION_214_1();
      BannerPresentationManager.presentedBannerDismissalTimer.setter(v8);

    }
  }
  OUTLINED_FUNCTION_121_5();
}

Swift::Void __swiftcall BannerPresentationManager.invalidateAndRescheduleSystemApertureTimer(reschedule:)(Swift::Bool reschedule)
{
  _QWORD *v1;
  _QWORD *v2;
  _BOOL8 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  os_log_type_t v8;
  _WORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;

  v2 = v1;
  v3 = reschedule;
  objc_msgSend(*(id *)((char *)v2 + OBJC_IVAR____TtC15ConversationKit25BannerPresentationManager_systemApertureElementDismissalTimer), sel_invalidate);
  if (!v3 || !OUTLINED_FUNCTION_54_0(*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v2) + 0x1A0)))
  {
LABEL_9:
    OUTLINED_FUNCTION_121_5();
    return;
  }
  OUTLINED_FUNCTION_154();
  if ((OUTLINED_FUNCTION_12_78(v5, v6, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 688)) & 1) != 0)
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v7 = OUTLINED_FUNCTION_17_2();
    OUTLINED_FUNCTION_3(v7, (uint64_t)&static Logger.conversationControls);
    v8 = OUTLINED_FUNCTION_12_0();
    if (OUTLINED_FUNCTION_5_3(v8))
    {
      v9 = (_WORD *)OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_47_2(v9);
      OUTLINED_FUNCTION_2_5(&dword_1BD004000, v10, v11, "[SystemAperture] scheduling new ephemeral state timer");
      OUTLINED_FUNCTION_60();
    }

    v12 = objc_opt_self();
    OUTLINED_FUNCTION_154();
    OUTLINED_FUNCTION_164_1(v13, v26, (uint64_t)v29);
    OUTLINED_FUNCTION_244_1();
    OUTLINED_FUNCTION_141_6(v14, v15);
    OUTLINED_FUNCTION_7_0();
    OUTLINED_FUNCTION_189_1();
    OUTLINED_FUNCTION_76_1((uint64_t)thunk for @escaping @callee_guaranteed @Sendable (@guaranteed NSTimer) -> (), v27, v30, MEMORY[0x1E0C809B0], 1107296256, v32, v33);
    v16 = swift_release();
    v17 = OUTLINED_FUNCTION_138_9(v16, sel_scheduledTimerWithTimeInterval_repeats_block_);
    OUTLINED_FUNCTION_214_1();
    BannerPresentationManager.systemApertureElementDismissalTimer.setter(v12);
    OUTLINED_FUNCTION_26_19(v18, v19, v20, v21, v22, v23, v24, v25, v28, v31);
    goto LABEL_9;
  }
  OUTLINED_FUNCTION_83_24(v29);
}

void closure #1 in BannerPresentationManager.invalidateAndReschedulePresentedBannerTimer(reschedule:)(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  void *v13;
  _QWORD *v14;
  _QWORD *v15;
  void *v16;
  __int128 v17;
  uint64_t v18;
  void *v19;
  void *v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;

  v5 = type metadata accessor for UUID();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v9 = MEMORY[0x1C3B752C0](a2 + 16);
  if (!v9)
    return;
  v10 = (_QWORD *)v9;
  v11 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  if ((*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *a3) + 0x1D8))() != 2)
  {
    (*(void (**)(uint64_t *__return_ptr))((*v11 & *a3) + 0x1F0))(&v24);
    __asm { BR              X10 }
  }
  v12 = (*(uint64_t (**)(void))((*v11 & *v10) + 0x180))();
  if (!v12)
  {
LABEL_11:
    v19 = (void *)MEMORY[0x1C3B72E00](0xD000000000000023, 0x80000001BD68C9F0);
    objc_msgSend(v10, sel_dismissPresentedBannerForReason_animated_, v19, 1);

    return;
  }
  v13 = (void *)v12;
  v14 = *(id *)(v12 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_noticeCoordinator);

  v15 = (_QWORD *)(*(uint64_t (**)(void))((*v11 & *v10) + 0x188))();
  if (!v15)
  {
    v23 = 0;
    v21 = 0u;
    v22 = 0u;
    goto LABEL_10;
  }
  v16 = v15;
  (*(void (**)(__int128 *__return_ptr))((*v11 & *v15) + 0x208))(&v21);

  if (!*((_QWORD *)&v22 + 1))
  {
LABEL_10:

    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v21, (uint64_t *)&demangling cache variable for type metadata for Notice?);
    goto LABEL_11;
  }
  outlined init with take of Notice(&v21, (uint64_t)&v24);
  v17 = v25;
  __swift_project_boxed_opaque_existential_1(&v24, v25);
  (*(void (**)(_QWORD, _QWORD))(*((_QWORD *)&v17 + 1) + 8))(v17, *((_QWORD *)&v17 + 1));
  ConversationControlsNoticeCoordinator.noticeDismissed(noticeUUID:dismissContext:)();
  v18 = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(__int128 *__return_ptr, uint64_t))((*v11 & *v14) + 0x88))(&v21, v18);
  if (*((_QWORD *)&v22 + 1))
  {

    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v21, (uint64_t *)&demangling cache variable for type metadata for Notice?);
  }
  else
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v21, (uint64_t *)&demangling cache variable for type metadata for Notice?);
    v20 = (void *)MEMORY[0x1C3B72E00](0xD000000000000023, 0x80000001BD68C9F0);
    objc_msgSend(v10, sel_dismissPresentedBannerForReason_animated_, v20, 1);

  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v24);
}

Swift::Void __swiftcall BannerPresentationManager.showInCallHUD()()
{
  BannerPresentationManager.showInCallHUD()();
}

void closure #1 in BannerPresentationManager.invalidateAndRescheduleSystemApertureTimer(reschedule:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x1C3B752C0](v2);
  if (v3)
  {
    v4 = (void *)v3;
    BannerPresentationManager.systemApertureElementDismissalTimerFired()();

  }
}

Swift::Void __swiftcall BannerPresentationManager.systemApertureElementDismissalTimerFired()()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  os_log_type_t v5;
  _WORD *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  OUTLINED_FUNCTION_206();
  if (OUTLINED_FUNCTION_43_6(v1))
  {
    OUTLINED_FUNCTION_351();
    v9 = v3;
    if ((OUTLINED_FUNCTION_188_4(*(uint64_t (**)(void))(v2 + 688)) & 1) != 0)
    {
      if (one-time initialization token for conversationControls != -1)
        swift_once();
      v4 = OUTLINED_FUNCTION_17_2();
      OUTLINED_FUNCTION_3(v4, (uint64_t)&static Logger.conversationControls);
      v5 = OUTLINED_FUNCTION_12_0();
      if (OUTLINED_FUNCTION_5_3(v5))
      {
        v6 = (_WORD *)OUTLINED_FUNCTION_105();
        OUTLINED_FUNCTION_47_2(v6);
        OUTLINED_FUNCTION_2_5(&dword_1BD004000, v7, v8, "[SystemAperture] ephemeral state timer fired, resetting banner to system HUD");
        OUTLINED_FUNCTION_60();
      }

      BannerPresentationManager.presentSystemHUD()();
    }
    OUTLINED_FUNCTION_15_9(v9);
  }
  else
  {
    OUTLINED_FUNCTION_43_1();
  }
}

void BannerPresentationManager.hasAssociatedCall.getter()
{
  if (BannerPresentationManager.associatedCall.getter())
    OUTLINED_FUNCTION_19_0();
  OUTLINED_FUNCTION_0();
}

void BannerPresentationManager.wantsBannerWithoutScene.getter()
{
  uint64_t v0;
  char HasHandedOff;

  if ((BannerPresentationManager.onlyHasHandoffEligibleCall.getter() & 1) != 0)
    HasHandedOff = 1;
  else
    HasHandedOff = BannerPresentationManager.onlyHasHandedOffCall.getter();
  BannerPresentationManager.onlyHasGreenTea3PCall.getter();
  if ((OUTLINED_FUNCTION_12_67(**(_QWORD **)(v0 + OBJC_IVAR____TtC15ConversationKit25BannerPresentationManager_features)) & 1) == 0
    && (HasHandedOff & 1) == 0)
  {
    if (one-time initialization token for shared != -1)
      swift_once();
    if (((*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 648))() & 1) == 0)
      BannerPresentationManager.onlyHasAVLessCall.getter();
  }
  OUTLINED_FUNCTION_18();
}

_QWORD *BannerPresentationManager.onlyHasHandoffEligibleCall.getter()
{
  char v0;
  _QWORD *result;
  int v2;

  BannerPresentationManager.onlyHasPlaceholderCall.getter();
  if ((v0 & 1) == 0)
    return 0;
  result = PlaceholderCallCenter.activeCall.getter();
  if (result)
  {
    v2 = *((unsigned __int8 *)result + 16);
    swift_release();
    return (_QWORD *)(v2 == 3);
  }
  return result;
}

uint64_t BannerPresentationManager.onlyHasHandedOffCall.getter()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  void *v3;

  v1 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v2 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x148))();

  if (!v2)
    return 0;
  v3 = (void *)(*(uint64_t (**)(void))((*v1 & *v0) + 0x160))();
  if (v3)
  {

    return 0;
  }
  return 1;
}

uint64_t BannerPresentationManager.onlyHasAVLessCall.getter()
{
  char v0;
  _QWORD *v1;
  int v2;
  uint64_t result;
  int v4;

  BannerPresentationManager.onlyHasPlaceholderCall.getter();
  if ((v0 & 1) == 0)
    return 0;
  v1 = PlaceholderCallCenter.activeCall.getter();
  if (v1)
  {
    v2 = *((unsigned __int8 *)v1 + 16);
    swift_release();
    if (v2 == 1)
      return 1;
  }
  result = (uint64_t)PlaceholderCallCenter.activeCall.getter();
  if (result)
  {
    v4 = *(unsigned __int8 *)(result + 16);
    swift_release();
    return v4 == 2;
  }
  return result;
}

void BannerPresentationManager.handleCallStatusDidChange(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)();
  uint64_t v23;

  OUTLINED_FUNCTION_93();
  v16 = v2;
  v19 = *(_QWORD *)(OUTLINED_FUNCTION_285_0() - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v3);
  v4 = OUTLINED_FUNCTION_20_3();
  v17 = *(_QWORD *)(v4 - 8);
  v18 = v4;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_11_2();
  v6 = OUTLINED_FUNCTION_23_65();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_59(v10, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v11 = (void *)OUTLINED_FUNCTION_7_22();
  v12 = OUTLINED_FUNCTION_7_0();
  swift_unknownObjectWeakInit();
  OUTLINED_FUNCTION_374_1((uint64_t)v9, v16, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 16));
  v13 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v12;
  OUTLINED_FUNCTION_374_1(v14 + v13, (uint64_t)v9, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 32));
  v22 = partial apply for closure #1 in BannerPresentationManager.handleCallStatusDidChange(_:);
  v23 = v14;
  v20 = MEMORY[0x1E0C809B0];
  v21 = 1107296256;
  v15 = OUTLINED_FUNCTION_15_1((uint64_t)thunk for @escaping @callee_guaranteed () -> ());
  swift_release();
  static DispatchQoS.unspecified.getter();
  v20 = MEMORY[0x1E0DEE9D8];
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))MEMORY[0x1E0DEF4F8]);
  OUTLINED_FUNCTION_31_11();
  OUTLINED_FUNCTION_34_7(&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  MEMORY[0x1C3B7361C](0, v1, v0, v15);
  _Block_release(v15);

  OUTLINED_FUNCTION_39_0(v0, *(uint64_t (**)(uint64_t, uint64_t))(v19 + 8));
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v1, v18);
  OUTLINED_FUNCTION_52_1();
}

void closure #1 in BannerPresentationManager.handleCallStatusDidChange(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  uint64_t v14;
  _QWORD *v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  char **v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  id v24;
  _QWORD *v25;
  uint64_t (*v26)(void);
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t (*v37)(uint64_t);
  uint64_t v38;
  void *v39;
  void *v40;
  unsigned int v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t (*v49)(id);
  id v50;
  uint64_t (*v51)(void);
  NSObject *v52;
  NSObject *v53;
  os_log_type_t v54;
  uint64_t v55;
  uint8_t *v56;
  NSObject *v57;
  _QWORD *v58;
  uint8_t *v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  void *v63;
  char v64;
  char v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t (*v68)(void);
  _QWORD *v69;
  uint64_t v70[5];
  char v71;
  uint64_t v72;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Notification();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v11 = MEMORY[0x1C3B752C0](a1 + 16);
  if (!v11)
    return;
  v12 = (_QWORD *)v11;
  Notification.object.getter();
  if (v70[3])
  {
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUCall);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v13 = (void *)v72;
      if (one-time initialization token for conversationControls != -1)
        swift_once();
      v14 = type metadata accessor for Logger();
      v15 = (_QWORD *)__swift_project_value_buffer(v14, (uint64_t)&static Logger.conversationControls);
      v16 = v13;
      v17 = Logger.logObject.getter();
      v18 = static os_log_type_t.debug.getter();
      v19 = &selRef_inputDevices;
      if (os_log_type_enabled(v17, v18))
      {
        v20 = swift_slowAlloc();
        v67 = (_QWORD *)swift_slowAlloc();
        v21 = swift_slowAlloc();
        v68 = (uint64_t (*)(void))v21;
        *(_DWORD *)v20 = 136315394;
        v69 = v15;
        v70[0] = v21;
        LODWORD(v72) = objc_msgSend(v16, sel_status);
        type metadata accessor for TUCallStatus(0);
        v22 = String.init<A>(describing:)();
        v72 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v22, v23, v70);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        *(_WORD *)(v20 + 12) = 2112;
        v72 = (uint64_t)v16;
        v24 = v16;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        v25 = v67;
        *v67 = v16;

        v19 = &selRef_inputDevices;
        _os_log_impl(&dword_1BD004000, v17, v18, "handleCallStatusDidChange, status:%s for call:%@", (uint8_t *)v20, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
        swift_arrayDestroy();
        MEMORY[0x1C3B751B8](v25, -1, -1);
        v26 = v68;
        swift_arrayDestroy();
        MEMORY[0x1C3B751B8](v26, -1, -1);
        MEMORY[0x1C3B751B8](v20, -1, -1);

      }
      else
      {

      }
      v35 = *(_QWORD *)((char *)v12 + OBJC_IVAR____TtC15ConversationKit25BannerPresentationManager_incomingCallActivity);
      v36 = (_QWORD *)MEMORY[0x1E0DEEDD8];
      if (v35)
      {
        v37 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v12) + 0x160);
        v38 = swift_retain();
        v39 = (void *)v37(v38);
        if (!v39 || (v40 = v39, v41 = objc_msgSend(v39, v19[30]), v40, v41 != 4))
        {
          v42 = type metadata accessor for TaskPriority();
          __swift_storeEnumTagSinglePayload((uint64_t)v6, 1, 1, v42);
          type metadata accessor for MainActor();
          swift_retain();
          v43 = v12;
          v44 = static MainActor.shared.getter();
          v45 = (_QWORD *)swift_allocObject();
          v46 = MEMORY[0x1E0DF06E8];
          v45[2] = v44;
          v45[3] = v46;
          v45[4] = v35;
          v45[5] = v43;
          _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
          swift_release();
        }
        swift_release();
      }
      v47 = (uint64_t)BannerPresentationManager.shouldPresentHandoffCompletedBanner(for:)(v16);
      v48 = v47;
      if ((v47 & 1) != 0)
      {
        v49 = *(uint64_t (**)(id))((*v36 & *v12) + 0x150);
        v50 = v16;
        v47 = v49(v16);
      }
      v51 = *(uint64_t (**)(void))((*v36 & *v12) + 0x180);

      if ((v48 & 1) != 0)
      {
        v52 = v16;
        v53 = Logger.logObject.getter();
        v54 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v53, v54))
        {
          v55 = swift_slowAlloc();
          v68 = v51;
          v56 = (uint8_t *)v55;
          v67 = (_QWORD *)swift_slowAlloc();
          v69 = v12;
          v70[0] = (uint64_t)v52;
          *(_DWORD *)v56 = 138412290;
          v57 = v52;
          v12 = v69;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          v58 = v67;
          *v67 = v52;

          v36 = (_QWORD *)MEMORY[0x1E0DEEDD8];
          _os_log_impl(&dword_1BD004000, v53, v54, "handleCallStatusDidChange: showing handoff continued session banner for call: %@", v56, 0xCu);
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
          swift_arrayDestroy();
          MEMORY[0x1C3B751B8](v58, -1, -1);
          v59 = v56;
          v51 = v68;
          MEMORY[0x1C3B751B8](v59, -1, -1);
        }
        else
        {

          v53 = v52;
        }

        v70[0] = outlined bridged method (pb) of @objc TUCall.localizedHandoffRecipientDeviceCategory.getter(v52);
        v70[1] = v60;
        v71 = 1;
        swift_allocObject();
        swift_unknownObjectWeakInit();
        swift_retain();
        BannerPresentationManager.presentBanner(as:type:reply:)();
        swift_release();
        outlined destroy of ConversationControlsType((uint64_t)v70);
        swift_release();
      }
      v61 = OBJC_IVAR____TtC15ConversationKit25BannerPresentationManager_shouldRequestHUDPresentationOnAVUpgradeOrDowngrade;
      if (*((_BYTE *)v12
           + OBJC_IVAR____TtC15ConversationKit25BannerPresentationManager_shouldRequestHUDPresentationOnAVUpgradeOrDowngrade) == 1
        && (objc_msgSend(v16, v19[30]) == 1 || objc_msgSend(v16, v19[30]) == 6))
      {
        *((_BYTE *)v12 + v61) = 0;
        BannerPresentationManager.presentSystemHUD()();
      }
      v62 = (_QWORD *)v51();
      if (v62)
      {
        v63 = v62;
        v64 = (*(uint64_t (**)(void))((*v36 & *v62) + 0x280))();

        v65 = v64 & 1;
      }
      else
      {
        v65 = 2;
      }
      BannerPresentationManager.previouslyHadMultipleCalls.setter(v65);

      return;
    }
  }
  else
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v70, &demangling cache variable for type metadata for Any?);
  }
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v27 = type metadata accessor for Logger();
  __swift_project_value_buffer(v27, (uint64_t)&static Logger.conversationControls);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a2, v7);
  v28 = Logger.logObject.getter();
  v29 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v28, v29))
  {
    v30 = (uint8_t *)swift_slowAlloc();
    v31 = swift_slowAlloc();
    v69 = v12;
    v70[0] = v31;
    v32 = v31;
    *(_DWORD *)v30 = 136315138;
    lazy protocol witness table accessor for type UUID and conformance UUID(lazy protocol witness table cache variable for type Notification and conformance Notification, (void (*)(uint64_t))MEMORY[0x1E0CAE648]);
    v33 = dispatch thunk of CustomStringConvertible.description.getter();
    v72 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v33, v34, v70);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    _os_log_impl(&dword_1BD004000, v28, v29, "handleCallStatusDidChange: notification didn't include a call object: %s", v30, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v32, -1, -1);
    MEMORY[0x1C3B751B8](v30, -1, -1);

  }
  else
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);

  }
}

uint64_t closure #1 in closure #1 in BannerPresentationManager.handleCallStatusDidChange(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[2] = a4;
  v5[3] = a5;
  type metadata accessor for MainActor();
  v5[4] = static MainActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  return swift_task_switch();
}

uint64_t closure #1 in closure #1 in BannerPresentationManager.handleCallStatusDidChange(_:)()
{
  uint8_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  _WORD *v7;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = swift_release();
  (*(void (**)(uint64_t))(*(_QWORD *)v2 + 224))(v3);
  BannerPresentationManager.incomingCallActivity.setter(0);
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v4 = OUTLINED_FUNCTION_17_2();
  v5 = OUTLINED_FUNCTION_3(v4, (uint64_t)&static Logger.conversationControls);
  v6 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (_WORD *)OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_124_3(v7);
    OUTLINED_FUNCTION_130(&dword_1BD004000, v5, v6, "Ended incoming call activity", v0);
    OUTLINED_FUNCTION_60();
  }

  return (*(uint64_t (**)(void))(v1 + 8))();
}

id BannerPresentationManager.shouldPresentHandoffCompletedBanner(for:)(void *a1)
{
  id v2;
  id v3;

  if (one-time initialization token for shared != -1)
    swift_once();
  if (((*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 584))() & 1) == 0
    || objc_msgSend(a1, sel_status) != 6
    || objc_msgSend(a1, sel_disconnectedReason) != 7)
  {
    return 0;
  }
  v2 = objc_msgSend(a1, sel_provider);
  v3 = objc_msgSend(v2, sel_isFaceTimeProvider);

  return v3;
}

void closure #2 in closure #1 in BannerPresentationManager.handleCallStatusDidChange(_:)(int a1, id a2, uint64_t a3)
{
  uint64_t v4;
  id v5;
  uint64_t v6;
  id v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  void *v17;
  uint64_t v18[3];

  if (a2)
  {
    v4 = a3 + 16;
    v5 = a2;
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v6 = type metadata accessor for Logger();
    __swift_project_value_buffer(v6, (uint64_t)&static Logger.conversationControls);
    v7 = a2;
    v8 = a2;
    v9 = Logger.logObject.getter();
    v10 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      v12 = swift_slowAlloc();
      v18[0] = v12;
      *(_DWORD *)v11 = 136315138;
      v13 = a2;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
      v14 = String.init<A>(reflecting:)();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v14, v15, v18);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1BD004000, v9, v10, "Failed to present handoff completed banner with error %s", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v12, -1, -1);
      MEMORY[0x1C3B751B8](v11, -1, -1);
    }
    else
    {

    }
    swift_beginAccess();
    v16 = (_QWORD *)MEMORY[0x1C3B752C0](v4);
    if (v16)
    {
      v17 = v16;
      (*(void (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & *v16) + 0x150))(0);

    }
    else
    {

    }
  }
}

void BannerPresentationManager.handleAppLaunchWantsHUDDismissal(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void (*v10)(uint64_t);
  uint64_t v11;

  OUTLINED_FUNCTION_93();
  v2 = OUTLINED_FUNCTION_285_0();
  v3 = (void (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v11 = *(_QWORD *)(v2 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v4);
  v5 = OUTLINED_FUNCTION_20_3();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_59(v6, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v7 = (void *)OUTLINED_FUNCTION_7_22();
  OUTLINED_FUNCTION_7_0();
  swift_unknownObjectWeakInit();
  v8 = OUTLINED_FUNCTION_15_1((uint64_t)thunk for @escaping @callee_guaranteed () -> ());
  swift_release();
  static DispatchQoS.unspecified.getter();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, v3);
  OUTLINED_FUNCTION_31_11();
  OUTLINED_FUNCTION_34_7(&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  MEMORY[0x1C3B7361C](0, v1, v0, v8);
  _Block_release(v8);

  OUTLINED_FUNCTION_39_0(v0, *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8));
  v9 = OUTLINED_FUNCTION_49_16();
  v10(v9);
  OUTLINED_FUNCTION_52_1();
}

void closure #1 in BannerPresentationManager.handleAppLaunchWantsHUDDismissal(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x1C3B752C0](v1);
  if (v2)
  {
    v3 = (void *)v2;
    v4 = (void *)MEMORY[0x1C3B72E00](0xD00000000000002ELL, 0x80000001BD68C9C0);
    objc_msgSend(v3, sel_dismissPresentedBannerForReason_animated_, v4, 1);

  }
}

Swift::Void __swiftcall BannerPresentationManager.didUpdatePresentationModeToDismissed()()
{
  void *v0;
  uint64_t v1;
  void *v2;

  OUTLINED_FUNCTION_4_75();
  if ((OUTLINED_FUNCTION_12_67(v1) & 1) != 0)
  {
    OUTLINED_FUNCTION_61();
    v2 = (void *)MEMORY[0x1C3B72E00](0xD000000000000017);
    objc_msgSend(v0, sel_dismissPresentedBannerForReason_animated_, v2, 1);
    OUTLINED_FUNCTION_7_1(v2);
  }
  else
  {
    OUTLINED_FUNCTION_36();
  }
}

Swift::Void __swiftcall BannerPresentationManager.didUpdatePresentationModeToFullScreen()()
{
  uint64_t *v0;
  uint8_t *v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  _WORD *v8;
  uint64_t v9;
  os_log_type_t v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  _WORD *v18;
  id v19;
  uint64_t v20;
  id v21;
  int v22;
  uint64_t v23;
  os_log_type_t v24;
  _DWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  _BYTE *v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  uint64_t v37;
  NSObject *v38;
  unsigned __int8 v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  char v43;
  uint64_t v44;

  v44 = *MEMORY[0x1E0C80C00];
  v2 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v3 = (_QWORD *)OUTLINED_FUNCTION_43_6(*v0);
  if (!v3)
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v9 = OUTLINED_FUNCTION_17_2();
    OUTLINED_FUNCTION_3(v9, (uint64_t)&static Logger.conversationControls);
    v10 = OUTLINED_FUNCTION_23_41();
    if (OUTLINED_FUNCTION_5_9(v10, v11, v12, v13, v14, v15, v16, v17, v37, v38))
    {
      v18 = (_WORD *)OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_52_3(v18);
      OUTLINED_FUNCTION_130(&dword_1BD004000, v38, (os_log_type_t)v0, "Ignore request to invalidate alerting assertion since no presentedSystemApertureElement.", (uint8_t *)v0);
      OUTLINED_FUNCTION_60();
    }
    goto LABEL_12;
  }
  if ((OUTLINED_FUNCTION_12_78((uint64_t)v3, v4, *(uint64_t (**)(uint64_t, uint64_t))((*v2 & *v3) + 0x460)) & 1) != 0)
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v5 = OUTLINED_FUNCTION_17_2();
    v6 = OUTLINED_FUNCTION_3(v5, (uint64_t)&static Logger.conversationControls);
    v7 = static os_log_type_t.default.getter();
    if (OUTLINED_FUNCTION_13_0(v7))
    {
      v8 = (_WORD *)OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_124_3(v8);
      OUTLINED_FUNCTION_130(&dword_1BD004000, v6, (os_log_type_t)v0, "Ignore request to invalidate alerting assertion since it should remain active even if full screen.", v1);
      OUTLINED_FUNCTION_60();
    }

LABEL_12:
    return;
  }
  (*(void (**)(void))((*v2 & (uint64_t)v38->isa) + 0x490))();
  if ((OUTLINED_FUNCTION_13_5(**(_QWORD **)((char *)v0
                                           + OBJC_IVAR____TtC15ConversationKit25BannerPresentationManager_features)) & 1) != 0)
  {
    v19 = objc_msgSend(objc_msgSend((id)objc_opt_self(), sel_sharedInstance), sel_frontmostAudioOrVideoCall);
    OUTLINED_FUNCTION_14_18();
    if (v1)
    {
      v21 = OUTLINED_FUNCTION_9(v20, sel_isEmergency);
      if ((_DWORD)v21 && OUTLINED_FUNCTION_9((uint64_t)v21, sel_isActive))
      {
        v40 = 7;
        v41 = 0u;
        v42 = 0u;
        v43 = 6;
        BannerPresentationManager.updatePresentedSystemApertureElement(type:sizeClass:dismissPresentedBannerReason:)((uint64_t)&v40, 0, 1, 0, 0, &v39);
        outlined destroy of ConversationControlsType((uint64_t)&v40);
        v22 = v39;
        if (one-time initialization token for conversationControls != -1)
          swift_once();
        v23 = OUTLINED_FUNCTION_17_2();
        OUTLINED_FUNCTION_3(v23, (uint64_t)&static Logger.conversationControls);
        v24 = OUTLINED_FUNCTION_12_0();
        if (os_log_type_enabled((os_log_t)v0, v24))
        {
          v25 = (_DWORD *)OUTLINED_FUNCTION_105();
          v26 = (_QWORD *)OUTLINED_FUNCTION_105();
          *v25 = 138412290;
          if (v22 == 11)
          {
            v40 = 0;
            OUTLINED_FUNCTION_82_8();
            v27 = 0;
          }
          else
          {
            lazy protocol witness table accessor for type BannerPresentationError and conformance BannerPresentationError();
            OUTLINED_FUNCTION_10_8();
            *v28 = v22;
            v27 = _swift_stdlib_bridgeErrorToNSError();
            OUTLINED_FUNCTION_222();
            OUTLINED_FUNCTION_82_8();
          }
          *v26 = v27;
          OUTLINED_FUNCTION_39_58(&dword_1BD004000, v0, v24, "EnhancedEmergency: entered full screen, update jindo back to in call controls, error = %@");
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
          OUTLINED_FUNCTION_21();
          OUTLINED_FUNCTION_60();
        }

      }
    }
  }
  v29 = (*(uint64_t (**)(void))((*v2 & **(_QWORD **)((char *)v0
                                                  + OBJC_IVAR____TtC15ConversationKit25BannerPresentationManager_bannerActivityManager))
                             + 0x160))();
  OUTLINED_FUNCTION_26_19(v29, v30, v31, v32, v33, v34, v35, v36, v37, v38);
}

Swift::Void __swiftcall BannerPresentationManager.handleLockScreenStatusChanged()()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  if (OUTLINED_FUNCTION_43_6(*v0))
  {
    OUTLINED_FUNCTION_128();
    OUTLINED_FUNCTION_12_78(v2, v3, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 1160));
    OUTLINED_FUNCTION_7_1(v4);
  }
  else
  {
    OUTLINED_FUNCTION_36();
  }
}

Swift::Void __swiftcall BannerPresentationManager.presentHUDForCurrentContext()()
{
  os_log_type_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  uint64_t v4;
  void *v5;
  uint64_t (**v6)(uint64_t, uint64_t);
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD v20[6];
  uint64_t v21;
  _BYTE v22[56];
  _BYTE v23[48];

  OUTLINED_FUNCTION_206();
  v2 = OUTLINED_FUNCTION_26_62(v1);
  if (v2)
  {
    v3 = v2;
    OUTLINED_FUNCTION_351();
    v5 = (void *)(*(uint64_t (**)(void))(v4 + 624))();
    ConversationControlsManager.controlsHUDUpdate(for:)(v5, v6);

    OUTLINED_FUNCTION_113();
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v7 = OUTLINED_FUNCTION_17_2();
    OUTLINED_FUNCTION_182_3(v7, (uint64_t)&static Logger.conversationControls);
    outlined init with copy of ControlsHUDUpdate((uint64_t)v23, (uint64_t)v22);
    Logger.logObject.getter();
    v8 = OUTLINED_FUNCTION_12_0();
    if (OUTLINED_FUNCTION_51_3(v8))
    {
      v9 = (uint8_t *)OUTLINED_FUNCTION_105();
      v21 = OUTLINED_FUNCTION_105();
      *(_DWORD *)v9 = 136315138;
      outlined init with copy of ConversationControlsType((uint64_t)v22, (uint64_t)v20);
      v17 = specialized >> prefix<A>(_:)((uint64_t)v20, v10, v11, v12, v13, v14, v15, v16);
      v19 = v18;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v20, &demangling cache variable for type metadata for ConversationControlsType?);
      v20[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v17, v19, &v21);
      OUTLINED_FUNCTION_31_3();
      swift_bridgeObjectRelease();
      outlined destroy of ControlsHUDUpdate((uint64_t)v22);
      OUTLINED_FUNCTION_48(&dword_1BD004000, v3, v0, "Presenting HUD for current context %s", v9);
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_60();
    }
    outlined destroy of ControlsHUDUpdate((uint64_t)v22);

    BannerPresentationManager.presentBanner(as:type:reply:)();
    outlined destroy of ControlsHUDUpdate((uint64_t)v23);
  }
}

Swift::Void __swiftcall BannerPresentationManager.showGreenTea3PHUD()()
{
  _QWORD *v0;
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;

  v1 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x160))();
  if (v1)
  {
    v13 = (id)v1;
    if ((BannerPresentationManager.onlyHasGreenTea3PCall.getter() & 1) == 0)
    {

      return;
    }
    if (objc_msgSend(v13, sel_status) == 4)
      SBSUndimScreen();
    OUTLINED_FUNCTION_193_4();
    OUTLINED_FUNCTION_26_19(v2, v3, v4, v5, v6, v7, v8, v9, v12, v13);
    OUTLINED_FUNCTION_141_6(v10, v11);
  }
  OUTLINED_FUNCTION_8_15();
}

Swift::Void __swiftcall BannerPresentationManager.showPTTHUD()()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_206();
  v1 = OUTLINED_FUNCTION_26_62(v0);
  if (v1)
  {
    v2 = (void *)v1;
    ConversationControlsManager.pttMarkChannelActive()();

  }
  OUTLINED_FUNCTION_10_105();
  OUTLINED_FUNCTION_14_15(v3, v4, v5, v6, v7, v8, v9, v10, 3);
  OUTLINED_FUNCTION_8_15();
}

Swift::Void __swiftcall BannerPresentationManager.showRemoteParticipantNoticeIfNeeded()()
{
  BannerPresentationManager.showInCallHUD()();
}

Swift::Void __swiftcall BannerPresentationManager.showAccessoryButtonEventsNoticeIfNeeded()()
{
  BannerPresentationManager.showInCallHUD()();
}

void BannerPresentationManager.showInCallHUD()()
{
  void (*v0)(void);
  uint64_t v1;
  uint64_t v2;
  void *v3;

  OUTLINED_FUNCTION_9_33();
  v2 = OUTLINED_FUNCTION_26_62(v1);
  if (v2)
  {
    v3 = (void *)v2;
    v0();
    OUTLINED_FUNCTION_7_1(v3);
  }
  else
  {
    OUTLINED_FUNCTION_36();
  }
}

Swift::Void __swiftcall BannerPresentationManager.showHandoffHUD()()
{
  BannerPresentationManager.showHandoffHUD()(4);
}

Swift::Void __swiftcall BannerPresentationManager.showShareNameAndPhotoHUD()()
{
  BannerPresentationManager.showHandoffHUD()(13);
}

Swift::Void __swiftcall BannerPresentationManager.showShareNameHUD()()
{
  BannerPresentationManager.showHandoffHUD()(14);
}

Swift::Void __swiftcall BannerPresentationManager.showIncomingNameUpdateHUD()()
{
  BannerPresentationManager.showHandoffHUD()(20);
}

void BannerPresentationManager.showHandoffHUD()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_193_4();
  OUTLINED_FUNCTION_14_15(v1, v2, v3, v4, v5, v6, v7, v8, a1);
  OUTLINED_FUNCTION_43_1();
}

Swift::Void __swiftcall BannerPresentationManager.showEnhancedEmergenctVideoStreamingHUD()()
{
  BannerPresentationManager.showEnhancedEmergenctVideoStreamingHUD()(15);
}

Swift::Void __swiftcall BannerPresentationManager.showEnhancedEmergenctMediaUploadHUD()()
{
  BannerPresentationManager.showEnhancedEmergenctVideoStreamingHUD()(16);
}

void BannerPresentationManager.showEnhancedEmergenctVideoStreamingHUD()(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_4_75();
  v3 = OUTLINED_FUNCTION_13_5(v2);
  if ((v3 & 1) != 0 && (OUTLINED_FUNCTION_123(v3, sel_isPresentingFullScreenCallUI) & 1) == 0)
  {
    OUTLINED_FUNCTION_10_105();
    OUTLINED_FUNCTION_14_15(v4, v5, v6, v7, v8, v9, v10, v11, a1);
  }
  OUTLINED_FUNCTION_14_1();
}

Swift::Void __swiftcall BannerPresentationManager.showEnhancedEmergencyMediaUploadDuringStreamingHUD()()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  os_log_type_t v4;
  _WORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_4_75();
  v2 = OUTLINED_FUNCTION_13_5(v1);
  if ((v2 & 1) != 0 && OUTLINED_FUNCTION_123(v2, sel_isPresentingFullScreenCallUI))
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v3 = OUTLINED_FUNCTION_17_2();
    OUTLINED_FUNCTION_3(v3, (uint64_t)&static Logger.conversationControls);
    v4 = OUTLINED_FUNCTION_12_0();
    if (OUTLINED_FUNCTION_5_3(v4))
    {
      v5 = (_WORD *)OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_47_2(v5);
      OUTLINED_FUNCTION_2_5(&dword_1BD004000, v6, v7, "showEnhancedEmergencyMediaUploadDuringStreamingHUD, about to show enhancedEmergencyMediaUploadRequestDuringStreaming");
      OUTLINED_FUNCTION_60();
    }

    OUTLINED_FUNCTION_10_105();
    OUTLINED_FUNCTION_14_15(v8, v9, v10, v11, v12, v13, v14, v15, 19);
  }
  OUTLINED_FUNCTION_14_1();
}

Swift::Void __swiftcall BannerPresentationManager.showEnhancedEmergencyRTTVideoStreamingHUD()()
{
  BannerPresentationManager.showEnhancedEmergencyRTTVideoStreamingHUD()(17);
}

Swift::Void __swiftcall BannerPresentationManager.showEnhancedEmergencyRTTMediaUploadHUD()()
{
  BannerPresentationManager.showEnhancedEmergencyRTTVideoStreamingHUD()(18);
}

void BannerPresentationManager.showEnhancedEmergencyRTTVideoStreamingHUD()(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_4_75();
  v3 = OUTLINED_FUNCTION_13_5(v2);
  if ((v3 & 1) != 0 && OUTLINED_FUNCTION_123(v3, sel_isPresentingFullScreenCallUI))
  {
    OUTLINED_FUNCTION_10_105();
    OUTLINED_FUNCTION_14_15(v4, v5, v6, v7, v8, v9, v10, v11, a1);
  }
  OUTLINED_FUNCTION_14_1();
}

Swift::Void __swiftcall BannerPresentationManager.showLagunaPullConversationHUD()()
{
  os_log_type_t v0;
  os_log_type_t v1;
  uint8_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  os_log_type_t v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  _WORD *v14;
  uint64_t v15;
  NSObject *v16;
  NSObject *v17;

  v1 = v0;
  if (one-time initialization token for shared != -1)
    swift_once();
  v2 = (uint8_t *)static Defaults.shared;
  if (((*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 600))() & 1) != 0)
  {
    OUTLINED_FUNCTION_20_75();
    OUTLINED_FUNCTION_141_6(v3, v4);
  }
  else
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v5 = OUTLINED_FUNCTION_17_2();
    OUTLINED_FUNCTION_3(v5, (uint64_t)&static Logger.conversationControls);
    v6 = OUTLINED_FUNCTION_23_41();
    if (OUTLINED_FUNCTION_5_9(v6, v7, v8, v9, v10, v11, v12, v13, v15, v16))
    {
      v14 = (_WORD *)OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_52_3(v14);
      OUTLINED_FUNCTION_130(&dword_1BD004000, v17, v1, "Cannot show Laguna pull back banner while feature is not enabled", v2);
      OUTLINED_FUNCTION_60();
    }

  }
}

Swift::Void __swiftcall BannerPresentationManager.presentReminderNotice()()
{
  uint64_t *v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _OWORD *v5;
  void *v6;
  uint64_t (*v7)(void);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  id v23;
  id v24;
  char *v25;
  _QWORD *v26;
  _QWORD *v27;
  _QWORD *v28;
  void *v29;
  void *v30;
  void *v31;

  v1 = (int *)type metadata accessor for SessionActionNotice(0);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_77();
  v5 = (_OWORD *)(v4 - v3);
  if (OUTLINED_FUNCTION_26_62(*v0))
  {
    OUTLINED_FUNCTION_198_3();
    v31 = v6;
    v8 = v7();
    if (!v8)
    {
      v13 = v31;
      goto LABEL_8;
    }
    v30 = (void *)v8;
    OUTLINED_FUNCTION_154();
    v10 = (*(uint64_t (**)(void))(v9 + 2256))();
    if (!v10)
    {
      OUTLINED_FUNCTION_266_3();
      v13 = v30;
      goto LABEL_8;
    }
    v29 = (void *)v10;
    OUTLINED_FUNCTION_154();
    v12 = (void *)(*(uint64_t (**)(void))(v11 + 392))();
    OUTLINED_FUNCTION_406(v12);
    if (v0)
    {
      OUTLINED_FUNCTION_266_3();

      v13 = v29;
LABEL_8:

      return;
    }
    v14 = (uint64_t)v5 + v1[5];
    v15 = type metadata accessor for Participant(0);
    v18 = OUTLINED_FUNCTION_77_0(v14, v16, v17, v15);
    v19 = (_QWORD *)((char *)v5 + v1[6]);
    OUTLINED_FUNCTION_59(v18, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
    v19[3] = v20;
    v19[4] = &protocol witness table for TUConversation;
    *v19 = v30;
    v21 = (_QWORD *)((char *)v5 + v1[7]);
    OUTLINED_FUNCTION_59((uint64_t)v30, (unint64_t *)&lazy cache variable for type metadata for TUConversationActivitySession);
    v21[3] = v22;
    v21[4] = &protocol witness table for TUConversationActivitySession;
    *v21 = v29;
    v23 = v30;
    v24 = v29;
    UUID.init()();
    Date.init()();
    *v5 = xmmword_1BD660840;
    v5[1] = xmmword_1BD646A10;
    *((_BYTE *)v5 + v1[8]) = 1;
    v25 = (char *)v5 + v1[9];
    *(_QWORD *)v25 = 0;
    v25[8] = 1;
    v26 = (_QWORD *)((char *)v5 + v1[12]);
    *v26 = 0;
    v26[1] = 0;
    *((_BYTE *)v5 + v1[13]) = 1;
    v27 = (_QWORD *)((char *)v5 + v1[14]);
    *v27 = 0;
    v27[1] = 0;
    v28 = (_QWORD *)((char *)v5 + v1[15]);
    *v28 = 0;
    v28[1] = 0;
    specialized ConversationControlsNoticeCoordinator.post(notice:)();

    outlined destroy of AccountUpdateNotice((uint64_t)v5, type metadata accessor for SessionActionNotice);
    OUTLINED_FUNCTION_266_3();
  }
}

void BannerPresentationManager.conversationManager(_:removedActiveConversation:)()
{
  uint64_t *v0;

}

void BannerPresentationManager.conversationManager(_:stateChangedFor:fromOldConversation:)()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  char **v26;
  uint64_t (*v27)(void);
  void *v28;
  _QWORD *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  os_log_type_t v37;
  uint64_t v38;
  _DWORD *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  id v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  void (*v51)(uint64_t, uint64_t);
  _QWORD v52[2];
  id v53;
  _DWORD *v54;
  uint64_t v55;
  _DWORD *v56;
  NSObject *v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  OUTLINED_FUNCTION_93();
  v2 = v0;
  v4 = v3;
  v6 = v5;
  v7 = OUTLINED_FUNCTION_33_0();
  v60 = *(_QWORD *)(v7 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_77();
  v59 = v10 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_4_1();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_79();
  v16 = v14 - v15;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v52 - v18;
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)v52 - v21;
  OUTLINED_FUNCTION_4_75();
  v24 = OUTLINED_FUNCTION_12_67(v23);
  if ((v24 & 1) == 0)
  {
    v25 = OUTLINED_FUNCTION_5_39(v24, sel_avMode);
    v26 = &selRef_associatedAppBundleIdentifier;
    if (!v25)
    {
      v25 = OUTLINED_FUNCTION_5_39(0, sel_state);
      if (v25)
      {
        v25 = OUTLINED_FUNCTION_5_39((uint64_t)v25, sel_state);
        if (v25 != (id)4)
        {
          v25 = objc_msgSend(v4, sel_state);
          if (!v25)
          {
            objc_msgSend(OUTLINED_FUNCTION_5_39(0, sel_presentationContext), sel_mode);
            OUTLINED_FUNCTION_4_39();
            v26 = &selRef_associatedAppBundleIdentifier;
            if (v4 != (void *)2)
            {
              if (one-time initialization token for conversationControls != -1)
                swift_once();
              v35 = OUTLINED_FUNCTION_17_2();
              OUTLINED_FUNCTION_182_3(v35, (uint64_t)&static Logger.conversationControls);
              v36 = v6;
              Logger.logObject.getter();
              v37 = OUTLINED_FUNCTION_12_0();
              LODWORD(v58) = v37;
              if (os_log_type_enabled((os_log_t)&selRef_associatedAppBundleIdentifier, v37))
              {
                v56 = (_DWORD *)OUTLINED_FUNCTION_105();
                v38 = OUTLINED_FUNCTION_105();
                v55 = v38;
                v61 = (uint64_t)v36;
                v62 = v38;
                v57 = &selRef_associatedAppBundleIdentifier;
                v39 = v56;
                *v56 = 136315138;
                v54 = v39 + 1;
                OUTLINED_FUNCTION_59(v38, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
                v52[1] = v40;
                v53 = v36;
                v41 = String.init<A>(reflecting:)();
                v61 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v41, v42, &v62);
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                v43 = v53;

                swift_bridgeObjectRelease();
                OUTLINED_FUNCTION_39_58(&dword_1BD004000, v57, (os_log_type_t)v58, "Presenting banner for joining AVLess conversation %s");
                OUTLINED_FUNCTION_21();
                OUTLINED_FUNCTION_60();
              }

              BannerPresentationManager.presentSystemHUD()();
              v26 = &selRef_associatedAppBundleIdentifier;
            }
          }
        }
      }
    }
    if (OUTLINED_FUNCTION_5_39((uint64_t)v25, v26[194]) == (id)4)
    {
      v58 = (_QWORD *)(*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v2) + 0x188))();
      if (v58)
      {
        v27 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v2) + 0x180);
        v28 = (void *)v27();
        OUTLINED_FUNCTION_406(v28);
        if (v2)
        {
          v29 = (_QWORD *)v27();
          if (v29
            && (v30 = v29,
                v31 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v29) + 0x290))(),
                v30,
                v31))
          {
            v33 = OUTLINED_FUNCTION_25_1(v32, sel_UUID);
            OUTLINED_FUNCTION_4_39();
            static UUID._unconditionallyBridgeFromObjectiveC(_:)();

            v34 = 0;
          }
          else
          {
            v34 = 1;
          }
          v44 = OUTLINED_FUNCTION_72((uint64_t)v22, v34);
          v45 = OUTLINED_FUNCTION_5_39(v44, sel_UUID);
          static UUID._unconditionallyBridgeFromObjectiveC(_:)();

          OUTLINED_FUNCTION_72((uint64_t)v19, 0);
          v46 = v1 + *(int *)(v11 + 48);
          OUTLINED_FUNCTION_179_2((uint64_t)v22, v1);
          OUTLINED_FUNCTION_179_2((uint64_t)v19, v46);
          OUTLINED_FUNCTION_19_7(v1);
          if (!v47)
          {
            outlined init with copy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v1, v16, (uint64_t *)&demangling cache variable for type metadata for UUID?);
            OUTLINED_FUNCTION_19_7(v46);
            if (!v47)
            {
              v49 = v59;
              v48 = v60;
              (*(void (**)(uint64_t, uint64_t, uint64_t))(v60 + 32))(v59, v46, v7);
              lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
              v50 = dispatch thunk of static Equatable.== infix(_:_:)();
              v51 = *(void (**)(uint64_t, uint64_t))(v48 + 8);
              v51(v49, v7);
              OUTLINED_FUNCTION_18_18((uint64_t)v19);
              OUTLINED_FUNCTION_18_18((uint64_t)v22);
              v51(v16, v7);
              OUTLINED_FUNCTION_18_18(v1);
              if ((v50 & 1) == 0)
                goto LABEL_29;
              goto LABEL_28;
            }
            OUTLINED_FUNCTION_9_42((uint64_t)v19);
            OUTLINED_FUNCTION_9_42((uint64_t)v22);
            OUTLINED_FUNCTION_39_0(v16, *(uint64_t (**)(uint64_t, uint64_t))(v60 + 8));
LABEL_26:
            outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v1, (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
LABEL_29:

            goto LABEL_30;
          }
          OUTLINED_FUNCTION_18_18((uint64_t)v19);
          OUTLINED_FUNCTION_18_18((uint64_t)v22);
          OUTLINED_FUNCTION_19_7(v46);
          if (!v47)
            goto LABEL_26;
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v1, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        }
LABEL_28:
        (*(void (**)(unint64_t, unint64_t, uint64_t, _QWORD, _QWORD))((*MEMORY[0x1E0DEEDD8] & *v58)
                                                                                            + 0x498))(0xD00000000000001BLL, 0x80000001BD68C780, 1, 0, 0);
        goto LABEL_29;
      }
    }
  }
LABEL_30:
  OUTLINED_FUNCTION_52_1();
}

void BannerPresentationManager.conversationForHandoffCompleted()()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  id v3;

  v1 = OUTLINED_FUNCTION_259_3(*v0);
  if (v1)
  {
    v2 = (void *)v1;
    v3 = objc_msgSend(*(id *)((char *)v0 + OBJC_IVAR____TtC15ConversationKit25BannerPresentationManager_callCenter), sel_activeConversationForCall_, v1);

  }
  OUTLINED_FUNCTION_0();
}

id outlined bridged method (mnnbnnn) of @objc BNBannerSource.post(_:options:userInfo:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  Class isa;
  id v10;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for NSSecureCoding);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v10 = objc_msgSend(a5, sel_postPresentable_options_userInfo_error_, a1, a2, isa, a4);

  return v10;
}

uint64_t outlined bridged method (pb) of @objc TUCall.localizedHandoffRecipientDeviceCategory.getter(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_localizedHandoffRecipientDeviceCategory);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

_QWORD *specialized ConversationControlsManager.__allocating_init(activeCall:callCenter:)(uint64_t a1, uint64_t a2, void *a3)
{
  void *v6;
  id v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  id v13;
  uint64_t ObjectType;
  id v15;
  void *v16;
  void *v17;
  uint64_t v18;
  id v19;
  id v20;
  uint64_t v21;
  void *v22;
  id v23;
  id v24;
  char *v25;
  _QWORD *v26;
  id v27;
  _QWORD *v28;
  id v29;
  void **v30;
  void *v31;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _UNKNOWN **v39;
  uint64_t v40[2];
  _BYTE *v41;
  _OWORD v42[2];
  uint64_t v43;

  v43 = 0;
  memset(v42, 0, sizeof(v42));
  swift_unknownObjectWeakInit();
  outlined init with take of DefaultParticipantMediaProviderCreator((uint64_t)&v35, (uint64_t)&v41);
  v36 = 0;
  swift_unknownObjectWeakInit();
  outlined init with take of DefaultParticipantCaptionsProviderCreator((uint64_t)&v35, (uint64_t)v40);
  v6 = (void *)objc_opt_self();
  swift_unknownObjectRetain();
  v7 = objc_msgSend(v6, sel_sharedManager);
  type metadata accessor for IDSCapabilitiesChecker();
  v8 = (_QWORD *)swift_allocObject();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUIDSLookupManager);
  v38 = v9;
  v39 = &protocol witness table for TUIDSLookupManager;
  v35 = v7;
  type metadata accessor for UUID();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
  v10 = MEMORY[0x1E0DEE9D8];
  v8[2] = Dictionary.init(dictionaryLiteral:)();
  v8[3] = Dictionary.init(dictionaryLiteral:)();
  v8[5] = 0;
  swift_unknownObjectWeakInit();
  v8[6] = v10;
  outlined init with copy of RadarReporting((uint64_t)&v35, (uint64_t)(v8 + 7));
  v11 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  objc_msgSend(v11, sel_addObserver_selector_name_object_, v8, sel_handleLookupManagerDidChangeNotification_, *MEMORY[0x1E0DBD648], v35);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v35);
  if (one-time initialization token for shared != -1)
    swift_once();
  v12 = static Defaults.shared;
  v13 = objc_allocWithZone((Class)type metadata accessor for ConversationController(0));
  outlined init with copy of DefaultParticipantMediaProviderCreator((uint64_t)&v41, (uint64_t)&v34);
  outlined init with copy of DefaultParticipantCaptionsProviderCreator((uint64_t)v40, (uint64_t)&v35);
  ObjectType = swift_getObjectType();
  v15 = a3;
  swift_retain();
  specialized ConversationController.init(activeCall:callCenter:participantMediaProviderCreator:participantCaptionsProviderCreator:includeLocalParticipantInVisibleParticipants:screenSharingSession:mode:idsCapabilitiesChecker:defaults:)(a1, (uint64_t)v15, (uint64_t)&v34, (uint64_t)&v35, 0, (uint64_t)v42, 0, (uint64_t)v8, v12, (uint64_t)v13, ObjectType, a2, v33, v34, (uint64_t)v35, v36, v37, v38, (uint64_t)v39,
    v40[0],
    v40[1],
    v41,
    *(uint64_t *)&v42[0],
    *((uint64_t *)&v42[0] + 1));
  v17 = v16;
  outlined destroy of DefaultParticipantCaptionsProviderCreator((uint64_t)v40);
  outlined destroy of DefaultParticipantMediaProviderCreator((uint64_t)&v41);
  type metadata accessor for EntitlementsChecker();
  v18 = swift_allocObject();
  v19 = objc_allocWithZone(MEMORY[0x1E0DBD2F0]);
  v20 = v17;
  *(_QWORD *)(v18 + 16) = objc_msgSend(v19, sel_init);
  v21 = static Defaults.shared;
  v22 = (void *)objc_opt_self();
  swift_retain();
  v23 = objc_msgSend(v22, sel_sharedInstance);
  v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DBD2F0]), sel_init);
  v25 = (char *)objc_allocWithZone((Class)type metadata accessor for ConversationControlsManager(0));
  v26 = specialized ConversationControlsManager.init(conversationController:entitlementsChecker:defaults:callCenter:featureFlags:)(v20, v18, v21, v23, v24, v25);
  v27 = objc_allocWithZone(MEMORY[0x1E0CD73A8]);
  v28 = v26;
  v29 = objc_msgSend(v27, sel_init);

  swift_unknownObjectRelease();
  v30 = (void **)((char *)v28 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_contentExtractor);
  swift_beginAccess();
  v31 = *v30;
  *v30 = v29;

  return v28;
}

_QWORD *specialized ConversationControlsManager.init(conversationController:entitlementsChecker:defaults:callCenter:featureFlags:)(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5, char *a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  void *v33;
  id v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  void *v43;
  char *v44;
  id v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  char *v50;
  char *v51;
  char *v52;
  char *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  void *v65;
  char *v66;
  uint64_t v67;
  void *v68;
  id v69;
  id v70;
  uint64_t v71;
  char v72;
  char *v73;
  BOOL v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t ObjectType;
  uint64_t (*v79)(uint64_t, uint64_t);
  char v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t (*v83)(uint64_t, uint64_t);
  char *v84;
  void *v85;
  id v86;
  objc_class *v87;
  id v88;
  id v89;
  _QWORD *v90;
  uint64_t v91;
  void *v92;
  uint64_t v93;
  id v94;
  uint64_t v95;
  void *v96;
  void *v97;
  _QWORD *v98;
  id v99;
  id v100;
  id v101;
  char *v102;
  id v103;
  id v104;
  void **v105;
  void *v106;
  uint64_t v107;
  _QWORD *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  void *v139;
  void *v140;
  void *v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  objc_super v147;
  BOOL v148;
  char v149;
  uint64_t v150;
  char v151;
  uint64_t v152;
  uint64_t v153;
  char v154;
  _QWORD v155[5];

  v141 = a5;
  v140 = a4;
  v146 = a3;
  v139 = a1;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Notice?>.Publisher);
  v143 = *(_QWORD *)(v8 - 8);
  v144 = v8;
  MEMORY[0x1E0C80A78](v8);
  v142 = (char *)&v113 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v137 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<ConversationControlsAppLaunchButtonType>);
  v136 = *(_QWORD *)(v137 - 8);
  MEMORY[0x1E0C80A78](v137);
  v135 = (char *)&v113 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = type metadata accessor for ConversationControlsAppLaunchButtonType(0);
  MEMORY[0x1E0C80A78](v134);
  v133 = (uint64_t)&v113 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v132 = (char *)&v113 - v13;
  v131 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<EphemeralAlert?>);
  v130 = *(_QWORD *)(v131 - 8);
  MEMORY[0x1E0C80A78](v131);
  v129 = (char *)&v113 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<ForegroundApp?>);
  v127 = *(_QWORD *)(v128 - 8);
  MEMORY[0x1E0C80A78](v128);
  v126 = (char *)&v113 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<TUCallTransmissionMode>);
  v124 = *(_QWORD *)(v125 - 8);
  MEMORY[0x1E0C80A78](v125);
  v123 = (char *)&v113 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<ConversationControlsManager.PushToTalkChannelState>);
  v121 = *(_QWORD *)(v122 - 8);
  MEMORY[0x1E0C80A78](v122);
  v120 = (char *)&v113 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<TUCallBluetoothAudioFormat?>);
  v118 = *(_QWORD *)(v119 - 8);
  MEMORY[0x1E0C80A78](v119);
  v117 = (char *)&v113 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v138 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<TURoute?>);
  v145 = *(_QWORD *)(v138 - 8);
  MEMORY[0x1E0C80A78](v138);
  v116 = (char *)&v113 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  v114 = *(_QWORD *)(v115 - 8);
  MEMORY[0x1E0C80A78](v115);
  v21 = (char *)&v113 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for OS_dispatch_queue.Attributes();
  MEMORY[0x1E0C80A78](v22);
  v23 = type metadata accessor for DispatchQoS();
  MEMORY[0x1E0C80A78](v23);
  v24 = type metadata accessor for EntitlementsChecker();
  v155[4] = &protocol witness table for EntitlementsChecker;
  v25 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&a6[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_ignoredScreenSharingRequestUUIDs] = MEMORY[0x1E0DEE9D8];
  v155[3] = v24;
  v155[0] = a2;
  *(_QWORD *)&a6[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_initiallyActiveParticipantIdentifiers] = MEMORY[0x1E0DEE9E8];
  v26 = OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_coreAnalyticsReporter;
  v27 = objc_allocWithZone((Class)CNKCoreAnalyticsReporter);
  v28 = a6;
  *(_QWORD *)&a6[v26] = objc_msgSend(v27, sel_init);
  v29 = OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_noticeCoordinator;
  *(_QWORD *)&v28[v29] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ConversationControlsNoticeCoordinator()), sel_init);
  *(_QWORD *)&v28[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_activeNoticeCancellable] = 0;
  *(_QWORD *)&v28[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_contentExtractor] = 0;
  v28[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_shouldShowCallDetailsWhenReady] = 0;
  *(_QWORD *)&v28[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_isOnScreenSubscription] = 0;
  v30 = OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_features;
  if (one-time initialization token for shared != -1)
    swift_once();
  v31 = static Features.shared;
  *(_QWORD *)&v28[v30] = static Features.shared;
  v32 = OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_notificationCenter;
  v33 = (void *)objc_opt_self();
  v34 = v31;
  *(_QWORD *)&v28[v32] = objc_msgSend(v33, sel_defaultCenter);
  *(_QWORD *)&v28[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_activeShareCardHandle] = 0;
  *(_QWORD *)&v28[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_minReactionCountForNotice] = 1;
  v28[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_canPostReactionNotice] = 0;
  swift_unknownObjectWeakInit();
  v28[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_hasInitializedCallControlsService] = 0;
  v35 = &v28[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager____lazy_storage___callControlsService];
  *(_QWORD *)v35 = 0;
  *((_QWORD *)v35 + 1) = 0;
  *((_QWORD *)v35 + 2) = 0;
  *(_OWORD *)(v35 + 24) = xmmword_1BD64E9C0;
  *(_QWORD *)&v28[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_systemBannerPresenter + 8] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v28[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_systemConversationControlsDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v28[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_systemAudioConversationControlsDelegate
                + 8] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v28[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_inCallConversationControlsDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v28[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_inCallDetailsViewControllerDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v28[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_handoffCompletedDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v28[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_approvalDelegate] = 0;
  *(_QWORD *)&v28[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_conduitLagunaNoticeManager] = 0;
  v36 = OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_lagunaQueue;
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  static DispatchQoS.unspecified.getter();
  v152 = v25;
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes, (void (*)(uint64_t))MEMORY[0x1E0DEF810]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type [OS_dispatch_queue.Attributes] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, _QWORD, uint64_t))(v114 + 104))(v21, *MEMORY[0x1E0DEF8D0], v115);
  *(_QWORD *)&v28[v36] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  v37 = OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_conversationDidChangePublisher;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PassthroughSubject<(), Never>);
  swift_allocObject();
  *(_QWORD *)&v28[v37] = PassthroughSubject.init()();
  v38 = OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_activityManager;
  if (one-time initialization token for shared != -1)
    swift_once();
  v39 = static HUDActivityManager.shared;
  *(_QWORD *)&v28[v38] = static HUDActivityManager.shared;
  v40 = OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_bannerActivityManager;
  v41 = one-time initialization token for shared;
  v42 = v39;
  if (v41 != -1)
    swift_once();
  v43 = static BannerActivityManager.shared;
  *(_QWORD *)&v28[v40] = static BannerActivityManager.shared;
  *(_QWORD *)&v28[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_incomingScreenSharingRequestActivity] = 0;
  v44 = &v28[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager__audioRoute];
  v152 = 0;
  v45 = v43;
  v115 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TURoute?);
  v46 = v116;
  Published.init(initialValue:)();
  v47 = v138;
  (*(void (**)(char *, char *, uint64_t))(v145 + 32))(v44, v46, v138);
  v48 = &v28[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager__bluetoothAudioFormat];
  v152 = 0;
  LOBYTE(v153) = 1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TUCallBluetoothAudioFormat?);
  v49 = v117;
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v118 + 32))(v48, v49, v119);
  *(_QWORD *)&v28[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_cancellables] = MEMORY[0x1E0DEE9D8];
  v50 = &v28[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager__pttChannelState];
  LOBYTE(v152) = 0;
  v51 = v120;
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v121 + 32))(v50, v51, v122);
  v52 = &v28[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager__pttChannelTransmissionMode];
  v152 = 1;
  type metadata accessor for TUCallTransmissionMode(0);
  v53 = v123;
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v124 + 32))(v52, v53, v125);
  *(_QWORD *)&v28[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager____lazy_storage___pttViewModel] = 0;
  *(_QWORD *)&v28[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager____lazy_storage___pttCallUpdateSubject] = 0;
  v54 = OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_incomingTransmissionReceivedSubject;
  LOBYTE(v152) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CurrentValueSubject<Bool, Never>);
  swift_allocObject();
  *(_QWORD *)&v28[v54] = CurrentValueSubject.init(_:)();
  *(_QWORD *)&v28[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_pttCallStatusUpdateCancellable] = 0;
  *(_QWORD *)&v28[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_pttCallIncomingTransmissionReceivedCancellable] = 0;
  *(_QWORD *)&v28[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_confirmLeavePTTChannelAlert] = 0;
  v55 = &v28[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager__foregroundApp];
  v152 = 0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ForegroundApp?);
  v56 = v126;
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v127 + 32))(v55, v56, v128);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [ConversationControlsManager.CollaborationPrompt]);
  Cache.init(countLimit:)();
  type metadata accessor for ForegroundCollaborationState(0);
  swift_storeEnumTagMultiPayload();
  v57 = &v28[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager__ephemeralAlert];
  v152 = 0;
  v153 = 0;
  v154 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EphemeralAlert?);
  v58 = v129;
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v130 + 32))(v57, v58, v131);
  v28[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_shouldShowDelayedLMIBanner] = 0;
  v28[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_isWaitingOnFirstRemoteFrame] = 0;
  v28[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_shouldShowAVLessLeaveConfirmation] = 0;
  v59 = (uint64_t)&v28[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_avLessLeaveConfirmationPresentedDate];
  v60 = type metadata accessor for Date();
  __swift_storeEnumTagSinglePayload(v59, 1, 1, v60);
  *(_QWORD *)&v28[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_activityLaunchTimer] = 0;
  *(_QWORD *)&v28[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_applicationState] = 0;
  v61 = &v28[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager__appLaunchButtonType];
  v62 = (uint64_t)v132;
  swift_storeEnumTagMultiPayload();
  _s15ConversationKit11ParticipantVWOcTm_2(v62, v133, type metadata accessor for ConversationControlsAppLaunchButtonType);
  v63 = v135;
  Published.init(initialValue:)();
  outlined destroy of AccountUpdateNotice(v62, type metadata accessor for ConversationControlsAppLaunchButtonType);
  (*(void (**)(char *, char *, uint64_t))(v136 + 32))(v61, v63, v137);
  *(_QWORD *)&v28[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_updateForegroundCollaborationStateTask] = 0;
  *(_QWORD *)&v28[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_screenShareCountdownTimer] = 0;
  v64 = OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_participantStateDidChangeSubject;
  swift_allocObject();
  *(_QWORD *)&v28[v64] = PassthroughSubject.init()();
  v65 = v139;
  *(_QWORD *)&v28[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_conversationController] = v139;
  type metadata accessor for ConversationControlsJoinCountdownActionController();
  swift_allocObject();
  v66 = v65;
  ConversationControlsJoinCountdownActionController.init()();
  *(_QWORD *)&v28[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_countdownController] = v67;
  v68 = v140;
  *(_QWORD *)&v28[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_callCenter] = v140;
  v69 = v68;
  v70 = objc_msgSend(v69, sel_conversationManager);
  type metadata accessor for CollaborationInitiationManager();
  v71 = swift_allocObject();
  *(_QWORD *)(v71 + 16) = v70;
  *(_QWORD *)&v28[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_collaborationInitiationManager] = v71;
  ConversationController.hasMessageCapableRemoteParticipants.getter();
  LOBYTE(v70) = v72;
  swift_beginAccess();
  v151 = v70 & 1;
  Published.init(initialValue:)();
  swift_endAccess();
  v73 = &v66[OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationState];
  swift_beginAccess();
  v74 = *(_QWORD *)v73 == 3;
  swift_beginAccess();
  LOBYTE(v150) = v74;
  Published.init(initialValue:)();
  swift_endAccess();
  v75 = ConversationController.audioRoute.getter();
  swift_beginAccess();
  (*(void (**)(char *, uint64_t))(v145 + 8))(v44, v47);
  v150 = v75;
  Published.init(initialValue:)();
  swift_endAccess();
  v76 = &v66[OBJC_IVAR____TtC15ConversationKit22ConversationController_call];
  swift_beginAccess();
  v77 = *((_QWORD *)v76 + 1);
  ObjectType = swift_getObjectType();
  v79 = *(uint64_t (**)(uint64_t, uint64_t))(v77 + 352);
  swift_unknownObjectRetain();
  LOBYTE(v77) = v79(ObjectType, v77);
  swift_unknownObjectRelease();
  swift_beginAccess();
  v148 = (v77 & 1) == 0;
  Published.init(initialValue:)();
  swift_endAccess();
  ConversationController.localVideoSupported.getter();
  LOBYTE(v63) = v80;
  v81 = *((_QWORD *)v76 + 1);
  v82 = swift_getObjectType();
  v83 = *(uint64_t (**)(uint64_t, uint64_t))(v81 + 304);
  swift_unknownObjectRetain();
  LOBYTE(v81) = v83(v82, v81);
  swift_unknownObjectRelease();
  swift_beginAccess();
  v148 = v63 & 1;
  v149 = v81 & 1;
  Published.init(initialValue:)();
  swift_endAccess();
  outlined init with copy of RadarReporting((uint64_t)v155, (uint64_t)&v28[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_entitlementsChecker]);
  v84 = &v28[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_defaults];
  *(_QWORD *)v84 = v146;
  *((_QWORD *)v84 + 1) = &protocol witness table for Defaults;
  v85 = v141;
  *(_QWORD *)&v28[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_featureFlags] = v141;
  *(_QWORD *)&v28[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_reactionNoticeHistory] = MEMORY[0x1E0DEE9D8];
  swift_retain();
  v86 = v85;

  v87 = (objc_class *)type metadata accessor for ConversationControlsManager(0);
  v147.receiver = v28;
  v147.super_class = v87;
  v88 = objc_msgSendSuper2(&v147, sel_init);
  v89 = objc_allocWithZone((Class)type metadata accessor for ConduitApprovalDelegate());
  v90 = v88;
  ConduitApprovalDelegate.init(_:)();
  v91 = OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_approvalDelegate;
  v92 = *(void **)((char *)v90 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_approvalDelegate);
  *(_QWORD *)((char *)v90 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_approvalDelegate) = v93;

  v94 = objc_msgSend(v69, sel_neighborhoodActivityConduit);
  objc_msgSend(v94, sel_setApprovalDelegate_, *(_QWORD *)((char *)v90 + v91));

  if (objc_msgSend(v86, sel_lagunaEnabled))
  {
    v95 = OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_lagunaQueue;
    v96 = *(void **)((char *)v90 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_lagunaQueue);
    v97 = (void *)objc_opt_self();
    v98 = v90;
    v99 = v96;
    v100 = objc_msgSend(v97, sel_sharedInstance);
    v101 = objc_allocWithZone((Class)type metadata accessor for ConduitLagunaNoticeManager(0));
    v102 = ConduitLagunaNoticeManager.init(_:queue:callCenter:)((uint64_t)v98, (uint64_t)v99, (uint64_t)v100);
    v103 = objc_msgSend(v69, sel_neighborhoodActivityConduit);
    objc_msgSend(v103, sel_addDelegate_queue_, v102, v99);

    v104 = objc_msgSend(v69, sel_conversationManager);
    objc_msgSend(v104, sel_addDelegate_queue_, v102, *(_QWORD *)((char *)v90 + v95));

    v105 = (void **)((char *)v98
                   + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_conduitLagunaNoticeManager);
    swift_beginAccess();
    v106 = *v105;
    *v105 = v102;

  }
  v107 = ConversationControlsManager.updateShareButtonState()();
  v108 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v90) + 0x960))(v107);
  ConversationControlsManager.setupConversationControllerObservers()();
  v109 = v142;
  (*(void (**)(void))((*v108 & **(_QWORD **)((char *)v90
                                           + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_noticeCoordinator))
                    + 0xA0))();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(lazy protocol witness table cache variable for type Published<Notice?>.Publisher and conformance Published<A>.Publisher, &demangling cache variable for type metadata for Published<Notice?>.Publisher);
  v110 = v144;
  v111 = Publisher<>.sink(receiveValue:)();

  swift_release();
  swift_release();

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v155);
  (*(void (**)(char *, uint64_t))(v143 + 8))(v109, v110);
  *(_QWORD *)((char *)v90 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_activeNoticeCancellable) = v111;
  swift_release();
  return v90;
}

_QWORD *specialized SystemBannerHostViewController.init(controlsManager:sizeClass:type:delegate:isSystemAperturePresentation:requesterIdentifier:destination:layoutDescription:defaults:features:notificationCenter:activityUUID:fromActivityManager:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9, void *a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, unsigned __int8 a15, char *a16)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  char *v36;
  char *v37;
  void **v38;
  char *v39;
  uint64_t v40;
  objc_class *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  id v47;
  id v48;
  uint64_t (*v49)(void);
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  void *v56;
  void *v57;
  id v58;
  Swift::String v59;
  Swift::String v60;
  uint64_t v61;
  void *v62;
  Swift::String v63;
  _QWORD *v64;
  unint64_t v65;
  unint64_t *v66;
  char *v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t);
  uint64_t v70;
  void *v71;
  id v72;
  char *v73;
  objc_class *v74;
  _QWORD *v75;
  void (*v76)(uint64_t, _QWORD, uint64_t, _QWORD);
  _QWORD *v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  _QWORD *v81;
  void *v82;
  char *v83;
  char *v84;
  char *v85;
  uint64_t v86;
  _QWORD *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  void (*v93)(char *, uint64_t);
  uint64_t v94;
  char *v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  int v109;
  uint64_t v110;
  id v111;
  id v112;
  uint64_t v113;
  uint64_t v114;
  void *v115;
  id v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  _QWORD *v122;
  _QWORD *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  id v149;
  objc_super v150;
  unint64_t v151;
  unint64_t v152;
  uint64_t v153;

  v110 = a8;
  v108 = a7;
  v107 = a6;
  LODWORD(v116) = a5;
  v145 = a4;
  v148 = a3;
  v106 = a2;
  v147 = a14;
  LODWORD(v112) = a15;
  v109 = a9;
  v146 = a11;
  v111 = a10;
  v115 = a13;
  v114 = a12;
  v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for OS_dispatch_queue.SchedulerOptions?);
  MEMORY[0x1E0C80A78](v17);
  v139 = (uint64_t)&v106 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSRunLoop.SchedulerTimeType.Stride?);
  MEMORY[0x1E0C80A78](v19);
  v133 = (uint64_t)&v106 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.Map<Publishers.Debounce<Publishers.Zip<Publishers.Filter<CurrentValueSubject<Bool, Never>>, Publishers.Filter<CurrentValueSubject<DispatchWorkItem?, Never>>>, NSRunLoop>, DispatchWorkItem?>);
  v132 = *(_QWORD *)(v134 - 8);
  MEMORY[0x1E0C80A78](v134);
  v131 = (char *)&v106 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v138 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.Delay<Publishers.Map<Publishers.Debounce<Publishers.Zip<Publishers.Filter<CurrentValueSubject<Bool, Never>>, Publishers.Filter<CurrentValueSubject<DispatchWorkItem?, Never>>>, NSRunLoop>, DispatchWorkItem?>, NSRunLoop>);
  v137 = *(_QWORD *)(v138 - 8);
  MEMORY[0x1E0C80A78](v138);
  v136 = (char *)&v106 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v142 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Publishers.ReceiveOn<Publishers.Delay<Publishers.Map<Publishers.Debounce<Publishers.Zip<Publishers.Filter<CurrentValueSubject<Bool, Never>>, Publishers.Filter<CurrentValueSubject<DispatchWorkItem?, Never>>>, NSRunLoop>, DispatchWorkItem?>, NSRunLoop>, OS_dispatch_queue>);
  v141 = *(_QWORD *)(v142 - 8);
  MEMORY[0x1E0C80A78](v142);
  v140 = (char *)&v106 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);
  MEMORY[0x1E0C80A78](v24);
  v129 = (uint64_t)&v106 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v130 = type metadata accessor for NSRunLoop.SchedulerTimeType.Stride();
  v127 = *(_QWORD *)(v130 - 8);
  MEMORY[0x1E0C80A78](v130);
  v128 = (char *)&v106 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = (_QWORD *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.Filter<CurrentValueSubject<DispatchWorkItem?, Never>>);
  v121 = *(v122 - 1);
  MEMORY[0x1E0C80A78](v122);
  v120 = (char *)&v106 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.Filter<CurrentValueSubject<Bool, Never>>);
  v118 = *(_QWORD *)(v119 - 8);
  MEMORY[0x1E0C80A78](v119);
  v117 = (char *)&v106 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.Zip<Publishers.Filter<CurrentValueSubject<Bool, Never>>, Publishers.Filter<CurrentValueSubject<DispatchWorkItem?, Never>>>);
  v125 = *(_QWORD *)(v126 - 8);
  MEMORY[0x1E0C80A78](v126);
  v124 = (char *)&v106 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v144 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.Debounce<Publishers.Zip<Publishers.Filter<CurrentValueSubject<Bool, Never>>, Publishers.Filter<CurrentValueSubject<DispatchWorkItem?, Never>>>, NSRunLoop>);
  v135 = *(_QWORD *)(v144 - 8);
  MEMORY[0x1E0C80A78](v144);
  v143 = (char *)&v106 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_unknownObjectWeakInit();
  v31 = (uint64_t)&a16[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_notice];
  *(_QWORD *)(v31 + 32) = 0;
  *(_OWORD *)v31 = 0u;
  *(_OWORD *)(v31 + 16) = 0u;
  v32 = &a16[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_captureGroupName];
  *(_QWORD *)v32 = 0xD00000000000001ALL;
  *((_QWORD *)v32 + 1) = 0x80000001BD686E80;
  *(_QWORD *)&a16[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController____lazy_storage___captureOnlyBackdropView] = 0;
  *(_QWORD *)&a16[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_shadowView] = 0;
  v33 = OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_invalidationTaskSubject;
  v153 = 0;
  v113 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CurrentValueSubject<DispatchWorkItem?, Never>);
  swift_allocObject();
  v34 = a16;
  *(_QWORD *)&a16[v33] = CurrentValueSubject.init(_:)();
  *(_QWORD *)&v34[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_invalidationCancellable] = 0;
  v35 = &v34[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_overriddenSystemApertureContent];
  *((_OWORD *)v35 + 1) = 0u;
  *((_OWORD *)v35 + 2) = 0u;
  *(_OWORD *)v35 = 0u;
  v35[48] = -1;
  v34[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_isTransitioningToEphemeralSystemApertureContent] = 0;
  *(_QWORD *)&v34[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController____lazy_storage___systemApertureAlertingManager] = 0;
  v36 = &v34[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_conversationControlsViewController];
  *(_QWORD *)v36 = 0;
  *((_QWORD *)v36 + 1) = 0;
  v34[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_expandedForMenuPresentation] = 0;
  v37 = &v34[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_requesterIdentifier];
  *(_QWORD *)v37 = 0;
  *((_QWORD *)v37 + 1) = 0;
  v38 = (void **)&v34[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_layoutDescription];
  *(_QWORD *)&v34[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_layoutDescription] = 0;
  *(_QWORD *)&v34[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_panGestureProxy] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v34[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_dismissalPreventionAssertion] = 0;
  *(_QWORD *)&v34[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_gesturePriorityAssertion] = 0;
  v34[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_isPresentingMenu] = 0;
  v34[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_forceSuppressSystemApertureOverAssociatedScene] = 0;
  v34[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_isShowingSystemApertureOverAssociatedScene] = 0;
  *(_QWORD *)&v34[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_activeLayoutMode] = 0;
  v34[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_canRequestAlertingAssertion] = 0;
  v39 = &v34[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_nextSystemApertureLayoutMode];
  *(_QWORD *)v39 = 0;
  v39[8] = 1;
  *(_QWORD *)&v34[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_contentRole] = 2;
  v40 = OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_leadingViewContainer;
  v41 = (objc_class *)type metadata accessor for SystemApertureContainerView();
  *(_QWORD *)&v34[v40] = objc_msgSend(objc_allocWithZone(v41), sel_init);
  v42 = OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_trailingViewContainer;
  *(_QWORD *)&v34[v42] = objc_msgSend(objc_allocWithZone(v41), sel_init);
  v43 = OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_minimalViewContainer;
  *(_QWORD *)&v34[v43] = objc_msgSend(objc_allocWithZone(v41), sel_init);
  v44 = OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_detachedMinimalViewContainer;
  *(_QWORD *)&v34[v44] = objc_msgSend(objc_allocWithZone(v41), sel_init);
  v45 = (void *)*MEMORY[0x1E0DAC938];
  *(_QWORD *)&v34[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_elementIdentifier] = *MEMORY[0x1E0DAC938];
  v46 = OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_keyColor;
  v47 = objc_allocWithZone(MEMORY[0x1E0DC3658]);
  v48 = v45;
  *(_QWORD *)&v34[v46] = objc_msgSend(v47, sel_initWithRed_green_blue_alpha_, 0.192, 0.82, 0.345, 1.0);
  *(_QWORD *)&v34[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_controlsManager] = a1;
  v49 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x288);
  v123 = a1;
  v50 = v49();
  v51 = (uint64_t *)&v34[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_bannerIdentifier];
  *v51 = v50;
  v51[1] = v52;
  v53 = v106;
  *(_QWORD *)&v34[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_sizeClass] = v106;
  v54 = v148;
  outlined init with copy of ConversationControlsType(v148, (uint64_t)&v34[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_controlsType]);
  ConversationControlsType.associatedNotice.getter((uint64_t)&v153);
  swift_beginAccess();
  outlined assign with take of Notice?((uint64_t)&v153, v31);
  swift_endAccess();
  v55 = &v34[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_defaults];
  *(_QWORD *)v55 = v146;
  *((_QWORD *)v55 + 1) = &protocol witness table for Defaults;
  v56 = (void *)v114;
  *(_QWORD *)&v34[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_features] = v114;
  v57 = v115;
  *(_QWORD *)&v34[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_notificationCenter] = v115;
  swift_beginAccess();
  swift_unknownObjectWeakAssign();
  v34[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_isSystemAperturePresentation] = (char)v116;
  v151 = 0;
  v152 = 0xE000000000000000;
  swift_retain();
  v116 = v56;
  v58 = v57;
  _StringGuts.grow(_:)(38);
  swift_bridgeObjectRelease();
  v151 = 0xD000000000000021;
  v152 = 0x80000001BD687710;
  v59._countAndFlagsBits = ConversationControlsSizeClass.description.getter(v53);
  String.append(_:)(v59);
  swift_bridgeObjectRelease();
  v60._countAndFlagsBits = 46;
  v60._object = (void *)0xE100000000000000;
  String.append(_:)(v60);
  v61 = *v51;
  v62 = (void *)v51[1];
  swift_bridgeObjectRetain();
  v63._countAndFlagsBits = v61;
  v63._object = v62;
  String.append(_:)(v63);
  v64 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  swift_bridgeObjectRelease();
  v65 = v152;
  v66 = (unint64_t *)&v34[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_requestIdentifier];
  *v66 = v151;
  v66[1] = v65;
  v67 = &v34[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_activityUUID];
  v68 = type metadata accessor for UUID();
  v114 = *(_QWORD *)(v68 - 8);
  v69 = *(void (**)(char *, uint64_t))(v114 + 16);
  v115 = (void *)v68;
  v69(v67, v147);
  swift_beginAccess();
  v70 = v108;
  *(_QWORD *)v37 = v107;
  *((_QWORD *)v37 + 1) = v70;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v71 = *v38;
  v72 = v111;
  *v38 = v111;
  v111 = v72;

  v73 = &v34[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_destination];
  *(_QWORD *)v73 = v110;
  v73[8] = v109 & 1;

  v74 = (objc_class *)type metadata accessor for SystemBannerHostViewController();
  v150.receiver = v34;
  v150.super_class = v74;
  v75 = objc_msgSendSuper2(&v150, sel_initWithNibName_bundle_, 0, 0);
  v76 = *(void (**)(uint64_t, _QWORD, uint64_t, _QWORD))((*v64 & *v75) + 0x418);
  v77 = v75;
  v76(v54, 0, 1, v112);
  objc_msgSend(v58, sel_addObserver_selector_name_object_, v77, sel_callStatusChanged_, *MEMORY[0x1E0DBD4A0], 0);
  v78 = one-time initialization token for contextMenuWillPresent;
  v79 = v77;
  if (v78 != -1)
    swift_once();
  objc_msgSend(v58, sel_addObserver_selector_name_object_, v79, sel_contextMenuWillPresent_, static NSNotificationName.contextMenuWillPresent, 0, v106);

  v80 = one-time initialization token for contextMenuDidDismiss;
  v81 = v79;
  if (v80 != -1)
    swift_once();
  objc_msgSend(v58, sel_addObserver_selector_name_object_, v81, sel_contextMenuDidDismiss_, static NSNotificationName.contextMenuDidDismiss, 0);

  objc_msgSend(v58, sel_addObserver_selector_name_object_, v81, sel_callDisplayContextChanged_, *MEMORY[0x1E0DBD500], 0);
  objc_msgSend(v58, sel_addObserver_selector_name_object_, v81, sel_handleSceneStateChangeNotification_, *MEMORY[0x1E0DC5318], 0);
  v82 = *(void **)((*(uint64_t (**)(id))((*v64 & *v81) + 0x2B8))(objc_msgSend(v58, sel_addObserver_selector_name_object_, v81, sel_handleSceneStateChangeNotification_, *MEMORY[0x1E0DC5308], 0))+ OBJC_IVAR____TtC15ConversationKit29SystemApertureAlertingManager_invalidationInProgressSubject);
  swift_retain();
  swift_release();
  v149 = v82;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CurrentValueSubject<Bool, Never>);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(lazy protocol witness table cache variable for type CurrentValueSubject<Bool, Never> and conformance CurrentValueSubject<A, B>, &demangling cache variable for type metadata for CurrentValueSubject<Bool, Never>);
  v83 = v117;
  Publisher.filter(_:)();
  swift_release();
  v149 = *(id *)((char *)v81 + OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_invalidationTaskSubject);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type CurrentValueSubject<DispatchWorkItem?, Never> and conformance CurrentValueSubject<A, B>, &demangling cache variable for type metadata for CurrentValueSubject<DispatchWorkItem?, Never>);
  swift_retain();
  v112 = v58;
  v84 = v120;
  Publisher.filter(_:)();
  swift_release();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Publishers.Filter<CurrentValueSubject<Bool, Never>> and conformance Publishers.Filter<A>, &demangling cache variable for type metadata for Publishers.Filter<CurrentValueSubject<Bool, Never>>);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(lazy protocol witness table cache variable for type Publishers.Filter<CurrentValueSubject<DispatchWorkItem?, Never>> and conformance Publishers.Filter<A>, &demangling cache variable for type metadata for Publishers.Filter<CurrentValueSubject<DispatchWorkItem?, Never>>);
  v85 = v124;
  v86 = v119;
  v87 = v122;
  Publisher.zip<A>(_:)();
  (*(void (**)(char *, _QWORD *))(v121 + 8))(v84, v87);
  (*(void (**)(char *, uint64_t))(v118 + 8))(v83, v86);
  v88 = v128;
  NSRunLoop.SchedulerTimeType.Stride.init(floatLiteral:)();
  v122 = (_QWORD *)objc_opt_self();
  v149 = objc_msgSend(v122, sel_mainRunLoop);
  v121 = type metadata accessor for NSRunLoop.SchedulerOptions();
  v89 = v129;
  __swift_storeEnumTagSinglePayload(v129, 1, 1, v121);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSRunLoop);
  v119 = v90;
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(lazy protocol witness table cache variable for type Publishers.Zip<Publishers.Filter<CurrentValueSubject<Bool, Never>>, Publishers.Filter<CurrentValueSubject<DispatchWorkItem?, Never>>> and conformance Publishers.Zip<A, B>, &demangling cache variable for type metadata for Publishers.Zip<Publishers.Filter<CurrentValueSubject<Bool, Never>>, Publishers.Filter<CurrentValueSubject<DispatchWorkItem?, Never>>>);
  lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop(&lazy protocol witness table cache variable for type NSRunLoop and conformance NSRunLoop, (unint64_t *)&lazy cache variable for type metadata for NSRunLoop);
  v120 = v91;
  v92 = v126;
  Publisher.debounce<A>(for:scheduler:options:)();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v89, (uint64_t *)&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);

  v93 = *(void (**)(char *, uint64_t))(v127 + 8);
  v94 = v130;
  v93(v88, v130);
  (*(void (**)(char *, uint64_t))(v125 + 8))(v85, v92);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DispatchWorkItem?);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Publishers.Debounce<Publishers.Zip<Publishers.Filter<CurrentValueSubject<Bool, Never>>, Publishers.Filter<CurrentValueSubject<DispatchWorkItem?, Never>>>, NSRunLoop> and conformance Publishers.Debounce<A, B>, &demangling cache variable for type metadata for Publishers.Debounce<Publishers.Zip<Publishers.Filter<CurrentValueSubject<Bool, Never>>, Publishers.Filter<CurrentValueSubject<DispatchWorkItem?, Never>>>, NSRunLoop>);
  v95 = v131;
  Publisher.map<A>(_:)();
  NSRunLoop.SchedulerTimeType.Stride.init(floatLiteral:)();
  v96 = v133;
  __swift_storeEnumTagSinglePayload(v133, 1, 1, v94);
  v149 = objc_msgSend(v122, sel_mainRunLoop);
  __swift_storeEnumTagSinglePayload(v89, 1, 1, v121);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Publishers.Map<Publishers.Debounce<Publishers.Zip<Publishers.Filter<CurrentValueSubject<Bool, Never>>, Publishers.Filter<CurrentValueSubject<DispatchWorkItem?, Never>>>, NSRunLoop>, DispatchWorkItem?> and conformance Publishers.Map<A, B>, &demangling cache variable for type metadata for Publishers.Map<Publishers.Debounce<Publishers.Zip<Publishers.Filter<CurrentValueSubject<Bool, Never>>, Publishers.Filter<CurrentValueSubject<DispatchWorkItem?, Never>>>, NSRunLoop>, DispatchWorkItem?>);
  v97 = v136;
  v98 = v134;
  Publisher.delay<A>(for:tolerance:scheduler:options:)();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v89, (uint64_t *)&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);

  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v96, &demangling cache variable for type metadata for NSRunLoop.SchedulerTimeType.Stride?);
  v93(v88, v94);
  (*(void (**)(char *, uint64_t))(v132 + 8))(v95, v98);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v149 = (id)static OS_dispatch_queue.main.getter();
  v99 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  v100 = v139;
  __swift_storeEnumTagSinglePayload(v139, 1, 1, v99);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(lazy protocol witness table cache variable for type Publishers.Delay<Publishers.Map<Publishers.Debounce<Publishers.Zip<Publishers.Filter<CurrentValueSubject<Bool, Never>>, Publishers.Filter<CurrentValueSubject<DispatchWorkItem?, Never>>>, NSRunLoop>, DispatchWorkItem?>, NSRunLoop> and conformance Publishers.Delay<A, B>, &demangling cache variable for type metadata for Publishers.Delay<Publishers.Map<Publishers.Debounce<Publishers.Zip<Publishers.Filter<CurrentValueSubject<Bool, Never>>, Publishers.Filter<CurrentValueSubject<DispatchWorkItem?, Never>>>, NSRunLoop>, DispatchWorkItem?>, NSRunLoop>);
  lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop(&lazy protocol witness table cache variable for type OS_dispatch_queue and conformance OS_dispatch_queue, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v101 = v140;
  v102 = v138;
  Publisher.receive<A>(on:options:)();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v100, (uint64_t *)&demangling cache variable for type metadata for OS_dispatch_queue.SchedulerOptions?);

  (*(void (**)(char *, uint64_t))(v137 + 8))(v97, v102);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Publishers.ReceiveOn<Publishers.Delay<Publishers.Map<Publishers.Debounce<Publishers.Zip<Publishers.Filter<CurrentValueSubject<Bool, Never>>, Publishers.Filter<CurrentValueSubject<DispatchWorkItem?, Never>>>, NSRunLoop>, DispatchWorkItem?>, NSRunLoop>, OS_dispatch_queue> and conformance Publishers.ReceiveOn<A, B>, (uint64_t *)&demangling cache variable for type metadata for Publishers.ReceiveOn<Publishers.Delay<Publishers.Map<Publishers.Debounce<Publishers.Zip<Publishers.Filter<CurrentValueSubject<Bool, Never>>, Publishers.Filter<CurrentValueSubject<DispatchWorkItem?, Never>>>, NSRunLoop>, DispatchWorkItem?>, NSRunLoop>, OS_dispatch_queue>);
  v103 = v142;
  v104 = Publisher<>.sink(receiveValue:)();

  swift_unknownObjectRelease();
  swift_release();

  swift_release();
  (*(void (**)(uint64_t, void *))(v114 + 8))(v147, v115);
  outlined destroy of ConversationControlsType(v148);
  (*(void (**)(char *, uint64_t))(v141 + 8))(v101, v103);
  (*(void (**)(char *, uint64_t))(v135 + 8))(v143, v144);
  *(_QWORD *)((char *)v81 + OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_invalidationCancellable) = v104;
  swift_release();
  return v81;
}

uint64_t sub_1BD458370()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BD458394()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id *v3;
  id *v4;

  v1 = *(_QWORD *)(OUTLINED_FUNCTION_33_0() - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  OUTLINED_FUNCTION_285();
  if (*(_QWORD *)(v0 + 24))
    swift_release();
  v3 = (id *)(v0 + 48);
  switch(*(_BYTE *)(v0 + 88))
  {
    case 0:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
      break;
    case 1:
    case 3:
      swift_bridgeObjectRelease();
      break;
    case 2:
      OUTLINED_FUNCTION_199_3(v3);
      break;
    case 5:
      OUTLINED_FUNCTION_6_35();
      break;
    default:
      break;
  }
  v4 = (id *)(v0 + 96);
  switch(*(_BYTE *)(v0 + 136))
  {
    case 0:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
      break;
    case 1:
    case 3:
      swift_bridgeObjectRelease();
      break;
    case 2:
      OUTLINED_FUNCTION_199_3(v4);
      break;
    case 5:
      OUTLINED_FUNCTION_6_35();
      break;
    default:
      break;
  }
  OUTLINED_FUNCTION_39_0(v0 + ((v2 + 137) & ~v2), *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  return OUTLINED_FUNCTION_6_10();
}

uint64_t outlined init with take of ConversationControlsType?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConversationControlsType?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void partial apply for closure #1 in BannerPresentationManager.presentBanner(as:type:activityTypeForNewBanner:activityUUID:fromActivityManager:reply:)(_BOOL4 a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(OUTLINED_FUNCTION_33_0() - 8);
  closure #1 in BannerPresentationManager.presentBanner(as:type:activityTypeForNewBanner:activityUUID:fromActivityManager:reply:)(a1, *(_QWORD *)(v1 + 16), *(void (**)(uint64_t, id))(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), v1 + 48, v1 + 96, v1 + ((*(unsigned __int8 *)(v3 + 80) + 137) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));
  OUTLINED_FUNCTION_36();
}

uint64_t sub_1BD458538()
{
  uint64_t v0;
  id *v1;

  OUTLINED_FUNCTION_285();
  v1 = (id *)(v0 + 24);
  switch(*(_BYTE *)(v0 + 64))
  {
    case 0:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v1);
      break;
    case 1:
    case 3:
      swift_bridgeObjectRelease();
      break;
    case 2:
      OUTLINED_FUNCTION_199_3(v1);
      break;
    case 5:
      OUTLINED_FUNCTION_6_35();
      break;
    default:
      return swift_deallocObject();
  }
  return swift_deallocObject();
}

void partial apply for closure #1 in BannerPresentationManager.updatePresentedHUD(type:replacingNotice:)()
{
  uint64_t v0;

  closure #1 in BannerPresentationManager.updatePresentedHUD(type:replacingNotice:)(*(_QWORD *)(v0 + 16), v0 + 24, *(_BYTE *)(v0 + 65));
}

uint64_t type metadata accessor for BannerPresentationManager()
{
  return objc_opt_self();
}

void partial apply for closure #1 in BannerPresentationManager.init(delegate:)()
{
  uint64_t v0;

  closure #1 in BannerPresentationManager.init(delegate:)(v0);
}

uint64_t sub_1BD4585D8()
{
  uint64_t v0;

  OUTLINED_FUNCTION_285();

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void partial apply for closure #1 in BannerPresentationManager.dismissPresentedBanner(forReason:animated:)(int a1)
{
  uint64_t v1;

  closure #1 in BannerPresentationManager.dismissPresentedBanner(forReason:animated:)(a1, *(_QWORD *)(v1 + 16), *(_QWORD **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_1BD458614()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in BannerPresentationManager.bannerDismissedBySpringBoard()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  v4 = OUTLINED_FUNCTION_20_27(v3);
  return closure #1 in BannerPresentationManager.bannerDismissedBySpringBoard()(v4, v5, v6, v2);
}

uint64_t sub_1BD45869C()
{
  uint64_t v0;

  return swift_deallocObject();
}

void partial apply for closure #1 in BannerPresentationManager.didOpenMessages()(char a1, void *a2)
{
  uint64_t v2;

  closure #1 in BannerPresentationManager.didOpenMessages()(a1, a2, *(_QWORD **)(v2 + 16));
}

uint64_t sub_1BD4586C8()
{
  uint64_t v0;

  OUTLINED_FUNCTION_285();

  return swift_deallocObject();
}

void partial apply for closure #1 in BannerPresentationManager.invalidateAndReschedulePresentedBannerTimer(reschedule:)(uint64_t a1)
{
  uint64_t v1;

  closure #1 in BannerPresentationManager.invalidateAndReschedulePresentedBannerTimer(reschedule:)(a1, *(_QWORD *)(v1 + 16), *(_QWORD **)(v1 + 24));
}

void partial apply for closure #1 in BannerPresentationManager.invalidateAndRescheduleSystemApertureTimer(reschedule:)(uint64_t a1)
{
  uint64_t v1;

  closure #1 in BannerPresentationManager.invalidateAndRescheduleSystemApertureTimer(reschedule:)(a1, v1);
}

uint64_t sub_1BD458700()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(OUTLINED_FUNCTION_23_65() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  OUTLINED_FUNCTION_285();
  OUTLINED_FUNCTION_39_0(v0 + v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  return OUTLINED_FUNCTION_6_10();
}

void partial apply for closure #1 in BannerPresentationManager.handleCallStatusDidChange(_:)()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(OUTLINED_FUNCTION_23_65() - 8) + 80);
  closure #1 in BannerPresentationManager.handleCallStatusDidChange(_:)(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

void partial apply for closure #1 in BannerPresentationManager.handleAppLaunchWantsHUDDismissal(_:)()
{
  uint64_t v0;

  closure #1 in BannerPresentationManager.handleAppLaunchWantsHUDDismissal(_:)(v0);
}

void specialized ConversationControlsNoticeCoordinator.post(notice:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  NSObject *v3;
  uint64_t v4;
  os_log_type_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  os_log_type_t v33;
  _WORD *v34;
  uint64_t v35;
  uint64_t v36;
  os_log_type_t v37;
  _WORD *v38;
  uint64_t v39;
  uint64_t v40;
  os_log_type_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD v48[5];
  _QWORD v49[11];
  _QWORD v50[5];
  uint64_t v51;

  OUTLINED_FUNCTION_93();
  v7 = v6;
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_134_8();
  MEMORY[0x1E0C80A78](v8);
  v9 = OUTLINED_FUNCTION_8_56();
  v10 = type metadata accessor for AppLaunchNotice(v9);
  v11 = OUTLINED_FUNCTION_96_5(v10, (uint64_t)&protocol witness table for AppLaunchNotice);
  OUTLINED_FUNCTION_55_33((uint64_t)v11);
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v12 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_43_52(v12, (uint64_t)&static Logger.conversationControls);
  OUTLINED_FUNCTION_99_9();
  OUTLINED_FUNCTION_204_4();
  v13 = OUTLINED_FUNCTION_165_6();
  if (OUTLINED_FUNCTION_75_21(v13))
  {
    v14 = (uint8_t *)OUTLINED_FUNCTION_105();
    v49[0] = OUTLINED_FUNCTION_105();
    *(_DWORD *)v14 = 136315394;
    OUTLINED_FUNCTION_74_18();
    AppLaunchNotice.description.getter();
    v17 = OUTLINED_FUNCTION_110_12(v15, v16);
    OUTLINED_FUNCTION_87_15(v17);
    OUTLINED_FUNCTION_27();
    OUTLINED_FUNCTION_66_28();
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
    OUTLINED_FUNCTION_77_15();
    OUTLINED_FUNCTION_584(v4, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    v18 = OUTLINED_FUNCTION_102_14();
    OUTLINED_FUNCTION_108_12(v18);
    OUTLINED_FUNCTION_2_1();
    OUTLINED_FUNCTION_60_28();
    OUTLINED_FUNCTION_26_6(&dword_1BD004000, v3, v5, "> Adding to queue, notice: %s, uuid: %s", v14);
    OUTLINED_FUNCTION_25_6();
    OUTLINED_FUNCTION_60();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v50);
  OUTLINED_FUNCTION_60_28();

  OUTLINED_FUNCTION_79_20();
  OUTLINED_FUNCTION_52_39();
  OUTLINED_FUNCTION_170_1();
  if (v0)
  {
    OUTLINED_FUNCTION_50_39(v19, v20);
    OUTLINED_FUNCTION_19_69();
  }
  OUTLINED_FUNCTION_100_10();
  OUTLINED_FUNCTION_81_19();
  v21 = OUTLINED_FUNCTION_70_24(*v2);
  if (v49[9])
  {
    v22 = OUTLINED_FUNCTION_80_18();
    if (v49[3])
    {
      if ((OUTLINED_FUNCTION_6_100() & 1) != 0)
      {
        OUTLINED_FUNCTION_94_8();
        if (v48[3])
        {
          OUTLINED_FUNCTION_29_63();
          if ((OUTLINED_FUNCTION_24((uint64_t)v49, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 208)) & 1) != 0)
          {
            OUTLINED_FUNCTION_46_34();
            OUTLINED_FUNCTION_63_26();
            v24 = OUTLINED_FUNCTION_251_0();
            if (OUTLINED_FUNCTION_71_0(v10))
            {
              v25 = OUTLINED_FUNCTION_105();
              v26 = OUTLINED_FUNCTION_105();
              OUTLINED_FUNCTION_261_4(v26);
              *(_DWORD *)v25 = 136315394;
              v27 = OUTLINED_FUNCTION_5_120(v48);
              v29 = OUTLINED_FUNCTION_16_82(v27, v28);
              OUTLINED_FUNCTION_23_72(v29);
              OUTLINED_FUNCTION_27();
              __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
              *(_WORD *)(v25 + 12) = 2080;
              OUTLINED_FUNCTION_1();
              v30 = OUTLINED_FUNCTION_5_120(v50);
              v32 = OUTLINED_FUNCTION_16_82(v30, v31);
              OUTLINED_FUNCTION_40_52(v32);
              OUTLINED_FUNCTION_27();
              OUTLINED_FUNCTION_26_6(&dword_1BD004000, v10, v24, "> Coalescing active notice with notice: %s, result: %s", (uint8_t *)v25);
              OUTLINED_FUNCTION_25_6();
              OUTLINED_FUNCTION_60();
            }
            OUTLINED_FUNCTION_61_28();

            OUTLINED_FUNCTION_1();
            v47 = v50;
          }
          else
          {
            OUTLINED_FUNCTION_46_34();
            OUTLINED_FUNCTION_63_26();
            v41 = OUTLINED_FUNCTION_369();
            if (OUTLINED_FUNCTION_43_7(v41))
            {
              OUTLINED_FUNCTION_105();
              OUTLINED_FUNCTION_105();
              v42 = OUTLINED_FUNCTION_15_90(4.8149e-34);
              v44 = OUTLINED_FUNCTION_16_82(v42, v43);
              OUTLINED_FUNCTION_58_34(v44);
              OUTLINED_FUNCTION_27();
              OUTLINED_FUNCTION_61_28();
              OUTLINED_FUNCTION_30_63(&dword_1BD004000, v45, v46, "> Replacing active notice with notice: %s");
              OUTLINED_FUNCTION_21();
              OUTLINED_FUNCTION_60();
            }
            OUTLINED_FUNCTION_61_28();

            v47 = v49;
          }
          OUTLINED_FUNCTION_65_23((uint64_t)v47);
          OUTLINED_FUNCTION_59_34();
          OUTLINED_FUNCTION_195_3();
        }
        else
        {
          OUTLINED_FUNCTION_161_7(v23, (uint64_t *)&demangling cache variable for type metadata for Notice?);
          OUTLINED_FUNCTION_63_26();
          v37 = OUTLINED_FUNCTION_232();
          if (OUTLINED_FUNCTION_5_3(v37))
          {
            v38 = (_WORD *)OUTLINED_FUNCTION_105();
            OUTLINED_FUNCTION_47_2(v38);
            OUTLINED_FUNCTION_2_5(&dword_1BD004000, v39, v40, "Tried to pop next notice but there wasn't a notice to pop");
            OUTLINED_FUNCTION_60();
          }

          OUTLINED_FUNCTION_27_61();
        }
      }
      OUTLINED_FUNCTION_60_28();
    }
    else
    {
      OUTLINED_FUNCTION_196_2(v22, (uint64_t *)&demangling cache variable for type metadata for Notice?);
    }
    OUTLINED_FUNCTION_103();
  }
  else
  {
    OUTLINED_FUNCTION_45_26(v21, (uint64_t *)&demangling cache variable for type metadata for Notice?);
    OUTLINED_FUNCTION_63_26();
    v33 = OUTLINED_FUNCTION_12_0();
    if (OUTLINED_FUNCTION_5_3(v33))
    {
      v34 = (_WORD *)OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_47_2(v34);
      OUTLINED_FUNCTION_2_5(&dword_1BD004000, v35, v36, "> No active notice, present just pushed notice");
      OUTLINED_FUNCTION_60();
    }

    OUTLINED_FUNCTION_94_8();
    OUTLINED_FUNCTION_33_55(*v2);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v51);
  OUTLINED_FUNCTION_52_1();
}

{
  specialized ConversationControlsNoticeCoordinator.post(notice:)();
}

{
  specialized ConversationControlsNoticeCoordinator.post(notice:)();
}

{
  NSObject *v0;
  uint64_t v1;
  os_log_type_t v2;
  uint64_t (*v3)(_QWORD *);
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t (*v7)(uint64_t);
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v15;
  os_log_type_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  void (*v25)(__int128 *, _QWORD);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  void *v31;
  uint64_t v32;
  os_log_type_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  os_log_type_t v40;
  _WORD *v41;
  uint64_t v42;
  uint64_t v43;
  os_log_type_t v44;
  _WORD *v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(__int128 *);
  os_log_type_t v49;
  _DWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  void (*v59)(__int128 *);
  uint64_t (*v60)(_QWORD *);
  uint64_t v61;
  _QWORD *v62;
  __int128 v63;
  uint64_t v64;
  uint64_t v65;
  __int128 v66;
  __int128 v67;
  uint64_t v68;
  __int128 v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72[3];
  void *v73;
  uint64_t v74;
  uint64_t v75[6];

  OUTLINED_FUNCTION_93();
  v60 = v3;
  v5 = v4;
  v7 = v6;
  v62 = v8;
  v10 = v9;
  v61 = *(_QWORD *)(OUTLINED_FUNCTION_33_0() - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v11);
  v12 = OUTLINED_FUNCTION_8_56();
  v13 = v7(v12);
  v75[3] = v13;
  v75[4] = v5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v75);
  _s15ConversationKit11ParticipantVWOcTm_2(v10, (uint64_t)boxed_opaque_existential_1, v7);
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v15 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_43_52(v15, (uint64_t)&static Logger.conversationControls);
  outlined init with copy of RadarReporting((uint64_t)v75, (uint64_t)&v69);
  Logger.logObject.getter();
  v16 = OUTLINED_FUNCTION_165_6();
  if (OUTLINED_FUNCTION_75_21(v16))
  {
    v17 = OUTLINED_FUNCTION_105();
    *(_QWORD *)&v66 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v17 = 136315394;
    v18 = OUTLINED_FUNCTION_74_18();
    v19 = v60(v18);
    *(_QWORD *)&v63 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v19, v20, (uint64_t *)&v66);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_27();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v72);
    *(_WORD *)(v17 + 12) = 2080;
    v21 = __swift_project_boxed_opaque_existential_1(&v69, v70);
    OUTLINED_FUNCTION_107_0(v1, (uint64_t)v21 + *(int *)(v13 + 24), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v61 + 16));
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
    v22 = OUTLINED_FUNCTION_77_15();
    v24 = v23;
    OUTLINED_FUNCTION_584(v1, *(uint64_t (**)(uint64_t, uint64_t))(v61 + 8));
    *(_QWORD *)&v63 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v22, v24, (uint64_t *)&v66);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_2_1();
    OUTLINED_FUNCTION_249();
    OUTLINED_FUNCTION_26_6(&dword_1BD004000, v0, v2, "> Adding to queue, notice: %s, uuid: %s", (uint8_t *)v17);
    OUTLINED_FUNCTION_25_6();
    OUTLINED_FUNCTION_60();
  }
  OUTLINED_FUNCTION_103();
  OUTLINED_FUNCTION_249();

  v25 = (void (*)(__int128 *, _QWORD))*((unsigned __int8 *)boxed_opaque_existential_1 + *(int *)(v13 + 32));
  ConversationControlsNoticeCoordinator.noticeQueue.modify(v72);
  specialized Dictionary.subscript.modify();
  OUTLINED_FUNCTION_170_1();
  if (v13)
  {
    OUTLINED_FUNCTION_50_39(v26, v27);
    OUTLINED_FUNCTION_19_69();
  }
  v25(&v69, 0);
  v28 = OUTLINED_FUNCTION_81_19();
  (*(void (**)(__int128 *__return_ptr, uint64_t))((*MEMORY[0x1E0DEEDD8] & *v62) + 0x88))(&v69, v28);
  if (v70)
  {
    outlined init with take of Notice(&v69, (uint64_t)v72);
    ConversationControlsNoticeCoordinator.peek()((uint64_t)&v66);
    if (*((_QWORD *)&v67 + 1))
    {
      outlined init with take of Notice(&v66, (uint64_t)&v69);
      v29 = v71;
      v30 = __swift_project_boxed_opaque_existential_1(&v69, v70);
      if ((OUTLINED_FUNCTION_24((uint64_t)v72, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v29 + 216)) & 1) != 0)
      {
        OUTLINED_FUNCTION_94_8();
        if (v64)
        {
          outlined init with take of Notice(&v63, (uint64_t)&v66);
          v31 = v73;
          v32 = v74;
          __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v72, (uint64_t)v73);
          if ((OUTLINED_FUNCTION_24((uint64_t)&v66, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v32 + 208)) & 1) != 0)
          {
            OUTLINED_FUNCTION_243_1((uint64_t)&v66);
            OUTLINED_FUNCTION_184_1();
            v33 = OUTLINED_FUNCTION_251_0();
            if (os_log_type_enabled((os_log_t)v32, v33))
            {
              v34 = OUTLINED_FUNCTION_105();
              OUTLINED_FUNCTION_105();
              *(_DWORD *)v34 = 136315394;
              v35 = OUTLINED_FUNCTION_5_120(&v63);
              v37 = OUTLINED_FUNCTION_149(v35, v36);
              OUTLINED_FUNCTION_256(v37);
              OUTLINED_FUNCTION_82_8();
              OUTLINED_FUNCTION_27();
              OUTLINED_FUNCTION_186();
              *(_WORD *)(v34 + 12) = 2080;
              OUTLINED_FUNCTION_1();
              v38 = OUTLINED_FUNCTION_5_120(v72);
              OUTLINED_FUNCTION_149(v38, v39);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              OUTLINED_FUNCTION_27();
              OUTLINED_FUNCTION_26_6(&dword_1BD004000, v32, v33, "> Coalescing active notice with notice: %s, result: %s", (uint8_t *)v34);
              OUTLINED_FUNCTION_25_6();
              OUTLINED_FUNCTION_60();
            }
            OUTLINED_FUNCTION_186();

            OUTLINED_FUNCTION_1();
            v58 = v72;
          }
          else
          {
            OUTLINED_FUNCTION_243_1((uint64_t)&v66);
            OUTLINED_FUNCTION_184_1();
            v49 = OUTLINED_FUNCTION_369();
            if (OUTLINED_FUNCTION_43_7(v49))
            {
              v50 = (_DWORD *)OUTLINED_FUNCTION_105();
              OUTLINED_FUNCTION_105();
              *v50 = 136315138;
              v51 = v64;
              v52 = v65;
              __swift_project_boxed_opaque_existential_1(&v63, v64);
              v53 = (*(uint64_t (**)(uint64_t, uint64_t))(v52 + 120))(v51, v52);
              v55 = OUTLINED_FUNCTION_149(v53, v54);
              OUTLINED_FUNCTION_256(v55);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              OUTLINED_FUNCTION_27();
              OUTLINED_FUNCTION_186();
              OUTLINED_FUNCTION_30_63(&dword_1BD004000, v56, v57, "> Replacing active notice with notice: %s");
              OUTLINED_FUNCTION_21();
              OUTLINED_FUNCTION_60();
            }
            OUTLINED_FUNCTION_186();

            v58 = (uint64_t *)&v66;
          }
          OUTLINED_FUNCTION_243_1((uint64_t)v58);
          OUTLINED_FUNCTION_268();
          v59(&v63);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v66);
        }
        else
        {
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v63, (uint64_t *)&demangling cache variable for type metadata for Notice?);
          OUTLINED_FUNCTION_184_1();
          v44 = OUTLINED_FUNCTION_232();
          if (OUTLINED_FUNCTION_5_3(v44))
          {
            v45 = (_WORD *)OUTLINED_FUNCTION_105();
            OUTLINED_FUNCTION_47_2(v45);
            OUTLINED_FUNCTION_2_5(&dword_1BD004000, v46, v47, "Tried to pop next notice but there wasn't a notice to pop");
            OUTLINED_FUNCTION_60();
          }

          v68 = 0;
          v66 = 0u;
          v67 = 0u;
          OUTLINED_FUNCTION_268();
          v48(&v66);
        }
      }
      OUTLINED_FUNCTION_249();
    }
    else
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v66, (uint64_t *)&demangling cache variable for type metadata for Notice?);
    }
    OUTLINED_FUNCTION_103();
  }
  else
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v69, (uint64_t *)&demangling cache variable for type metadata for Notice?);
    OUTLINED_FUNCTION_184_1();
    v40 = OUTLINED_FUNCTION_12_0();
    if (OUTLINED_FUNCTION_5_3(v40))
    {
      v41 = (_WORD *)OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_47_2(v41);
      OUTLINED_FUNCTION_2_5(&dword_1BD004000, v42, v43, "> No active notice, present just pushed notice");
      OUTLINED_FUNCTION_60();
    }

    OUTLINED_FUNCTION_94_8();
    OUTLINED_FUNCTION_33_55(*v62);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v75);
  OUTLINED_FUNCTION_52_1();
}

{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  NSObject *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  BOOL v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  os_log_type_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  os_log_type_t v41;
  _WORD *v42;
  uint64_t v43;
  uint64_t v44;
  os_log_type_t v45;
  _WORD *v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(__int128 *);
  os_log_type_t v50;
  _DWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  void (*v59)(_QWORD *);
  uint64_t v60;
  _QWORD v61[3];
  uint64_t v62;
  uint64_t v63;
  __int128 v64;
  __int128 v65;
  uint64_t v66;
  __int128 v67;
  uint64_t v68;
  uint64_t v69[3];
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  OUTLINED_FUNCTION_93();
  v3 = v2;
  v4 = OUTLINED_FUNCTION_33_0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_77_1();
  v60 = type metadata accessor for SessionActionNotice(0);
  v6 = OUTLINED_FUNCTION_96_5(v60, (uint64_t)&protocol witness table for SessionActionNotice);
  OUTLINED_FUNCTION_55_33((uint64_t)v6);
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v7 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_43_52(v7, (uint64_t)&static Logger.conversationControls);
  OUTLINED_FUNCTION_99_9();
  v8 = Logger.logObject.getter();
  v9 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_71_0(v8))
  {
    v10 = OUTLINED_FUNCTION_105();
    *(_QWORD *)&v64 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v10 = 136315394;
    OUTLINED_FUNCTION_74_18();
    SessionActionNotice.description.getter();
    v61[0] = OUTLINED_FUNCTION_110_12(v11, v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_27();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v69);
    *(_WORD *)(v10 + 12) = 2080;
    v13 = (char *)OUTLINED_FUNCTION_200_2();
    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 16))(v1, &v13[*(int *)(v60 + 40)], v4);
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
    v14 = dispatch thunk of CustomStringConvertible.description.getter();
    v16 = v15;
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v4);
    v61[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v14, v16, (uint64_t *)&v64);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_60_28();
    OUTLINED_FUNCTION_26_6(&dword_1BD004000, v8, (os_log_type_t)v9, "> Adding to queue, notice: %s, uuid: %s", (uint8_t *)v10);
    OUTLINED_FUNCTION_25_6();
    OUTLINED_FUNCTION_60();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v69);
  OUTLINED_FUNCTION_60_28();

  v17 = v0[2];
  if (v17 >> 62 == 3)
  {
    v18 = v0[3];
    v20 = *v0;
    v19 = v0[1];
    if (v17 == 0xC000000000000000 && !(v18 | v20 | v19)
      || !v18 && (v17 == 0xC000000000000000 ? (v21 = v20 == 1) : (v21 = 0), v21 && !v19)
      || !v18 && (v17 == 0xC000000000000000 ? (v22 = v20 == 7) : (v22 = 0), v22 && !v19)
      || (v23 = 4, !v18) && (v17 == 0xC000000000000000 ? (v24 = v20 == 10) : (v24 = 0), v24 && !v19))
    {
      v23 = 3;
    }
  }
  else
  {
    v23 = 4;
  }
  ConversationControlsNoticeCoordinator.noticeQueue.modify(v69);
  OUTLINED_FUNCTION_52_39();
  OUTLINED_FUNCTION_170_1();
  if (v0)
  {
    OUTLINED_FUNCTION_50_39(v25, v26);
    OUTLINED_FUNCTION_19_69();
  }
  OUTLINED_FUNCTION_100_10();
  v27 = OUTLINED_FUNCTION_81_19();
  v28 = (*(_QWORD *(**)(__int128 *__return_ptr, uint64_t))((*MEMORY[0x1E0DEEDD8] & *v3) + 0x88))(&v67, v27);
  if (v68)
  {
    outlined init with take of Notice(&v67, (uint64_t)v69);
    v29 = ConversationControlsNoticeCoordinator.peek()((uint64_t)&v64);
    if (*((_QWORD *)&v65 + 1))
    {
      if ((OUTLINED_FUNCTION_6_100() & 1) != 0)
      {
        ConversationControlsNoticeCoordinator.pop()();
        if (v62)
        {
          OUTLINED_FUNCTION_29_63();
          if ((OUTLINED_FUNCTION_24((uint64_t)&v64, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 208)) & 1) != 0)
          {
            OUTLINED_FUNCTION_46_34();
            OUTLINED_FUNCTION_182_4();
            v31 = OUTLINED_FUNCTION_251_0();
            if (OUTLINED_FUNCTION_71_0(v23))
            {
              v32 = OUTLINED_FUNCTION_105();
              v33 = OUTLINED_FUNCTION_105();
              OUTLINED_FUNCTION_261_4(v33);
              *(_DWORD *)v32 = 136315394;
              v34 = OUTLINED_FUNCTION_5_120(v61);
              v36 = OUTLINED_FUNCTION_16_82(v34, v35);
              OUTLINED_FUNCTION_23_72(v36);
              OUTLINED_FUNCTION_27();
              __swift_destroy_boxed_opaque_existential_1((uint64_t)v61);
              *(_WORD *)(v32 + 12) = 2080;
              OUTLINED_FUNCTION_1();
              v37 = v70;
              v38 = v71;
              __swift_project_boxed_opaque_existential_1(v69, v70);
              v39 = (*(uint64_t (**)(uint64_t, uint64_t))(v38 + 120))(v37, v38);
              OUTLINED_FUNCTION_16_82(v39, v40);
              OUTLINED_FUNCTION_82_8();
              OUTLINED_FUNCTION_27();
              OUTLINED_FUNCTION_26_6(&dword_1BD004000, v23, v31, "> Coalescing active notice with notice: %s, result: %s", (uint8_t *)v32);
              OUTLINED_FUNCTION_25_6();
              OUTLINED_FUNCTION_60();
            }
            OUTLINED_FUNCTION_61_28();

            OUTLINED_FUNCTION_1();
            v58 = v69;
          }
          else
          {
            OUTLINED_FUNCTION_46_34();
            OUTLINED_FUNCTION_182_4();
            v50 = OUTLINED_FUNCTION_369();
            if (OUTLINED_FUNCTION_43_7(v50))
            {
              v51 = (_DWORD *)OUTLINED_FUNCTION_105();
              OUTLINED_FUNCTION_105();
              *v51 = 136315138;
              v52 = v62;
              v53 = v63;
              __swift_project_boxed_opaque_existential_1(v61, v62);
              v54 = (*(uint64_t (**)(uint64_t, uint64_t))(v53 + 120))(v52, v53);
              OUTLINED_FUNCTION_16_82(v54, v55);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              OUTLINED_FUNCTION_27();
              OUTLINED_FUNCTION_61_28();
              OUTLINED_FUNCTION_30_63(&dword_1BD004000, v56, v57, "> Replacing active notice with notice: %s");
              OUTLINED_FUNCTION_21();
              OUTLINED_FUNCTION_60();
            }
            OUTLINED_FUNCTION_61_28();

            v58 = (uint64_t *)&v64;
          }
          OUTLINED_FUNCTION_65_23((uint64_t)v58);
          OUTLINED_FUNCTION_126_4();
          v59(v61);
          OUTLINED_FUNCTION_195_3();
        }
        else
        {
          OUTLINED_FUNCTION_161_7(v30, (uint64_t *)&demangling cache variable for type metadata for Notice?);
          OUTLINED_FUNCTION_182_4();
          v45 = OUTLINED_FUNCTION_232();
          if (OUTLINED_FUNCTION_5_3(v45))
          {
            v46 = (_WORD *)OUTLINED_FUNCTION_105();
            OUTLINED_FUNCTION_47_2(v46);
            OUTLINED_FUNCTION_2_5(&dword_1BD004000, v47, v48, "Tried to pop next notice but there wasn't a notice to pop");
            OUTLINED_FUNCTION_60();
          }

          v66 = 0;
          v64 = 0u;
          v65 = 0u;
          OUTLINED_FUNCTION_126_4();
          v49(&v64);
        }
      }
      OUTLINED_FUNCTION_60_28();
    }
    else
    {
      OUTLINED_FUNCTION_196_2(v29, (uint64_t *)&demangling cache variable for type metadata for Notice?);
    }
    OUTLINED_FUNCTION_103();
  }
  else
  {
    OUTLINED_FUNCTION_45_26((uint64_t)v28, (uint64_t *)&demangling cache variable for type metadata for Notice?);
    OUTLINED_FUNCTION_182_4();
    v41 = OUTLINED_FUNCTION_12_0();
    if (OUTLINED_FUNCTION_5_3(v41))
    {
      v42 = (_WORD *)OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_47_2(v42);
      OUTLINED_FUNCTION_2_5(&dword_1BD004000, v43, v44, "> No active notice, present just pushed notice");
      OUTLINED_FUNCTION_60();
    }

    ConversationControlsNoticeCoordinator.pop()();
    OUTLINED_FUNCTION_33_55(*v3);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v72);
  OUTLINED_FUNCTION_52_1();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  NSObject *v3;
  uint64_t v4;
  os_log_type_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  os_log_type_t v33;
  _WORD *v34;
  uint64_t v35;
  uint64_t v36;
  os_log_type_t v37;
  _WORD *v38;
  uint64_t v39;
  uint64_t v40;
  os_log_type_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD v48[5];
  _QWORD v49[11];
  _QWORD v50[5];
  uint64_t v51;

  OUTLINED_FUNCTION_93();
  v7 = v6;
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_134_8();
  MEMORY[0x1E0C80A78](v8);
  v9 = OUTLINED_FUNCTION_8_56();
  v10 = type metadata accessor for PushToTalkNotice(v9);
  v11 = OUTLINED_FUNCTION_96_5(v10, (uint64_t)&protocol witness table for PushToTalkNotice);
  OUTLINED_FUNCTION_55_33((uint64_t)v11);
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v12 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_43_52(v12, (uint64_t)&static Logger.conversationControls);
  OUTLINED_FUNCTION_99_9();
  OUTLINED_FUNCTION_204_4();
  v13 = OUTLINED_FUNCTION_165_6();
  if (OUTLINED_FUNCTION_75_21(v13))
  {
    v14 = (uint8_t *)OUTLINED_FUNCTION_105();
    v49[0] = OUTLINED_FUNCTION_105();
    *(_DWORD *)v14 = 136315394;
    OUTLINED_FUNCTION_74_18();
    PushToTalkNotice.description.getter();
    v17 = OUTLINED_FUNCTION_110_12(v15, v16);
    OUTLINED_FUNCTION_87_15(v17);
    OUTLINED_FUNCTION_27();
    OUTLINED_FUNCTION_66_28();
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
    OUTLINED_FUNCTION_77_15();
    OUTLINED_FUNCTION_584(v4, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    v18 = OUTLINED_FUNCTION_102_14();
    OUTLINED_FUNCTION_108_12(v18);
    OUTLINED_FUNCTION_2_1();
    OUTLINED_FUNCTION_60_28();
    OUTLINED_FUNCTION_26_6(&dword_1BD004000, v3, v5, "> Adding to queue, notice: %s, uuid: %s", v14);
    OUTLINED_FUNCTION_25_6();
    OUTLINED_FUNCTION_60();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v50);
  OUTLINED_FUNCTION_60_28();

  OUTLINED_FUNCTION_79_20();
  OUTLINED_FUNCTION_52_39();
  OUTLINED_FUNCTION_170_1();
  if (v0)
  {
    OUTLINED_FUNCTION_50_39(v19, v20);
    OUTLINED_FUNCTION_19_69();
  }
  OUTLINED_FUNCTION_100_10();
  OUTLINED_FUNCTION_81_19();
  v21 = OUTLINED_FUNCTION_70_24(*v2);
  if (v49[9])
  {
    v22 = OUTLINED_FUNCTION_80_18();
    if (v49[3])
    {
      if ((OUTLINED_FUNCTION_6_100() & 1) != 0)
      {
        OUTLINED_FUNCTION_94_8();
        if (v48[3])
        {
          OUTLINED_FUNCTION_29_63();
          if ((OUTLINED_FUNCTION_24((uint64_t)v49, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 208)) & 1) != 0)
          {
            OUTLINED_FUNCTION_46_34();
            OUTLINED_FUNCTION_63_26();
            v24 = OUTLINED_FUNCTION_251_0();
            if (OUTLINED_FUNCTION_71_0(v10))
            {
              v25 = OUTLINED_FUNCTION_105();
              v26 = OUTLINED_FUNCTION_105();
              OUTLINED_FUNCTION_261_4(v26);
              *(_DWORD *)v25 = 136315394;
              v27 = OUTLINED_FUNCTION_5_120(v48);
              v29 = OUTLINED_FUNCTION_16_82(v27, v28);
              OUTLINED_FUNCTION_23_72(v29);
              OUTLINED_FUNCTION_27();
              __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
              *(_WORD *)(v25 + 12) = 2080;
              OUTLINED_FUNCTION_1();
              v30 = OUTLINED_FUNCTION_5_120(v50);
              v32 = OUTLINED_FUNCTION_16_82(v30, v31);
              OUTLINED_FUNCTION_40_52(v32);
              OUTLINED_FUNCTION_27();
              OUTLINED_FUNCTION_26_6(&dword_1BD004000, v10, v24, "> Coalescing active notice with notice: %s, result: %s", (uint8_t *)v25);
              OUTLINED_FUNCTION_25_6();
              OUTLINED_FUNCTION_60();
            }
            OUTLINED_FUNCTION_61_28();

            OUTLINED_FUNCTION_1();
            v47 = v50;
          }
          else
          {
            OUTLINED_FUNCTION_46_34();
            OUTLINED_FUNCTION_63_26();
            v41 = OUTLINED_FUNCTION_369();
            if (OUTLINED_FUNCTION_43_7(v41))
            {
              OUTLINED_FUNCTION_105();
              OUTLINED_FUNCTION_105();
              v42 = OUTLINED_FUNCTION_15_90(4.8149e-34);
              v44 = OUTLINED_FUNCTION_16_82(v42, v43);
              OUTLINED_FUNCTION_58_34(v44);
              OUTLINED_FUNCTION_27();
              OUTLINED_FUNCTION_61_28();
              OUTLINED_FUNCTION_30_63(&dword_1BD004000, v45, v46, "> Replacing active notice with notice: %s");
              OUTLINED_FUNCTION_21();
              OUTLINED_FUNCTION_60();
            }
            OUTLINED_FUNCTION_61_28();

            v47 = v49;
          }
          OUTLINED_FUNCTION_65_23((uint64_t)v47);
          OUTLINED_FUNCTION_59_34();
          OUTLINED_FUNCTION_195_3();
        }
        else
        {
          OUTLINED_FUNCTION_161_7(v23, (uint64_t *)&demangling cache variable for type metadata for Notice?);
          OUTLINED_FUNCTION_63_26();
          v37 = OUTLINED_FUNCTION_232();
          if (OUTLINED_FUNCTION_5_3(v37))
          {
            v38 = (_WORD *)OUTLINED_FUNCTION_105();
            OUTLINED_FUNCTION_47_2(v38);
            OUTLINED_FUNCTION_2_5(&dword_1BD004000, v39, v40, "Tried to pop next notice but there wasn't a notice to pop");
            OUTLINED_FUNCTION_60();
          }

          OUTLINED_FUNCTION_27_61();
        }
      }
      OUTLINED_FUNCTION_60_28();
    }
    else
    {
      OUTLINED_FUNCTION_196_2(v22, (uint64_t *)&demangling cache variable for type metadata for Notice?);
    }
    OUTLINED_FUNCTION_103();
  }
  else
  {
    OUTLINED_FUNCTION_45_26(v21, (uint64_t *)&demangling cache variable for type metadata for Notice?);
    OUTLINED_FUNCTION_63_26();
    v33 = OUTLINED_FUNCTION_12_0();
    if (OUTLINED_FUNCTION_5_3(v33))
    {
      v34 = (_WORD *)OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_47_2(v34);
      OUTLINED_FUNCTION_2_5(&dword_1BD004000, v35, v36, "> No active notice, present just pushed notice");
      OUTLINED_FUNCTION_60();
    }

    OUTLINED_FUNCTION_94_8();
    OUTLINED_FUNCTION_33_55(*v2);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v51);
  OUTLINED_FUNCTION_52_1();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  NSObject *v3;
  uint64_t v4;
  os_log_type_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t updated;
  uint64_t *v11;
  uint64_t v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  os_log_type_t v32;
  _WORD *v33;
  uint64_t v34;
  uint64_t v35;
  os_log_type_t v36;
  _WORD *v37;
  uint64_t v38;
  uint64_t v39;
  os_log_type_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  _QWORD v48[5];
  _QWORD v49[11];
  _QWORD v50[5];
  uint64_t v51;

  OUTLINED_FUNCTION_93();
  v7 = v6;
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_134_8();
  MEMORY[0x1E0C80A78](v8);
  v9 = OUTLINED_FUNCTION_8_56();
  updated = type metadata accessor for SystemUpdateNotice(v9);
  v11 = OUTLINED_FUNCTION_96_5(updated, (uint64_t)&protocol witness table for SystemUpdateNotice);
  OUTLINED_FUNCTION_55_33((uint64_t)v11);
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v12 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_43_52(v12, (uint64_t)&static Logger.conversationControls);
  OUTLINED_FUNCTION_99_9();
  OUTLINED_FUNCTION_204_4();
  v13 = OUTLINED_FUNCTION_165_6();
  if (OUTLINED_FUNCTION_75_21(v13))
  {
    v47 = updated;
    v14 = OUTLINED_FUNCTION_105();
    v49[0] = OUTLINED_FUNCTION_105();
    *(_DWORD *)v14 = 136315394;
    OUTLINED_FUNCTION_74_18();
    SystemUpdateNotice.description.getter();
    v48[0] = OUTLINED_FUNCTION_110_12(v15, v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_27();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v50);
    *(_WORD *)(v14 + 12) = 2080;
    v17 = OUTLINED_FUNCTION_200_2();
    OUTLINED_FUNCTION_107_0(v4, (uint64_t)v17 + *(int *)(v47 + 24), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 16));
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
    OUTLINED_FUNCTION_77_15();
    OUTLINED_FUNCTION_584(v4, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    v48[0] = OUTLINED_FUNCTION_102_14();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_2_1();
    OUTLINED_FUNCTION_60_28();
    OUTLINED_FUNCTION_26_6(&dword_1BD004000, v3, v5, "> Adding to queue, notice: %s, uuid: %s", (uint8_t *)v14);
    OUTLINED_FUNCTION_25_6();
    OUTLINED_FUNCTION_60();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v50);
  OUTLINED_FUNCTION_60_28();

  OUTLINED_FUNCTION_79_20();
  OUTLINED_FUNCTION_52_39();
  OUTLINED_FUNCTION_170_1();
  if (v0)
  {
    OUTLINED_FUNCTION_50_39(v18, v19);
    OUTLINED_FUNCTION_19_69();
  }
  OUTLINED_FUNCTION_100_10();
  OUTLINED_FUNCTION_81_19();
  v20 = OUTLINED_FUNCTION_70_24(*v2);
  if (v49[9])
  {
    v21 = OUTLINED_FUNCTION_80_18();
    if (v49[3])
    {
      if ((OUTLINED_FUNCTION_6_100() & 1) != 0)
      {
        OUTLINED_FUNCTION_94_8();
        if (v48[3])
        {
          OUTLINED_FUNCTION_29_63();
          if ((OUTLINED_FUNCTION_24((uint64_t)v49, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(updated + 208)) & 1) != 0)
          {
            OUTLINED_FUNCTION_46_34();
            OUTLINED_FUNCTION_63_26();
            v23 = OUTLINED_FUNCTION_251_0();
            if (OUTLINED_FUNCTION_71_0(updated))
            {
              v24 = OUTLINED_FUNCTION_105();
              v25 = OUTLINED_FUNCTION_105();
              OUTLINED_FUNCTION_261_4(v25);
              *(_DWORD *)v24 = 136315394;
              v26 = OUTLINED_FUNCTION_5_120(v48);
              v28 = OUTLINED_FUNCTION_16_82(v26, v27);
              OUTLINED_FUNCTION_23_72(v28);
              OUTLINED_FUNCTION_27();
              __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
              *(_WORD *)(v24 + 12) = 2080;
              OUTLINED_FUNCTION_1();
              v29 = OUTLINED_FUNCTION_5_120(v50);
              v31 = OUTLINED_FUNCTION_16_82(v29, v30);
              OUTLINED_FUNCTION_40_52(v31);
              OUTLINED_FUNCTION_27();
              OUTLINED_FUNCTION_26_6(&dword_1BD004000, updated, v23, "> Coalescing active notice with notice: %s, result: %s", (uint8_t *)v24);
              OUTLINED_FUNCTION_25_6();
              OUTLINED_FUNCTION_60();
            }
            OUTLINED_FUNCTION_61_28();

            OUTLINED_FUNCTION_1();
            v46 = v50;
          }
          else
          {
            OUTLINED_FUNCTION_46_34();
            OUTLINED_FUNCTION_63_26();
            v40 = OUTLINED_FUNCTION_369();
            if (OUTLINED_FUNCTION_43_7(v40))
            {
              OUTLINED_FUNCTION_105();
              OUTLINED_FUNCTION_105();
              v41 = OUTLINED_FUNCTION_15_90(4.8149e-34);
              v43 = OUTLINED_FUNCTION_16_82(v41, v42);
              OUTLINED_FUNCTION_58_34(v43);
              OUTLINED_FUNCTION_27();
              OUTLINED_FUNCTION_61_28();
              OUTLINED_FUNCTION_30_63(&dword_1BD004000, v44, v45, "> Replacing active notice with notice: %s");
              OUTLINED_FUNCTION_21();
              OUTLINED_FUNCTION_60();
            }
            OUTLINED_FUNCTION_61_28();

            v46 = v49;
          }
          OUTLINED_FUNCTION_65_23((uint64_t)v46);
          OUTLINED_FUNCTION_59_34();
          OUTLINED_FUNCTION_195_3();
        }
        else
        {
          OUTLINED_FUNCTION_161_7(v22, (uint64_t *)&demangling cache variable for type metadata for Notice?);
          OUTLINED_FUNCTION_63_26();
          v36 = OUTLINED_FUNCTION_232();
          if (OUTLINED_FUNCTION_5_3(v36))
          {
            v37 = (_WORD *)OUTLINED_FUNCTION_105();
            OUTLINED_FUNCTION_47_2(v37);
            OUTLINED_FUNCTION_2_5(&dword_1BD004000, v38, v39, "Tried to pop next notice but there wasn't a notice to pop");
            OUTLINED_FUNCTION_60();
          }

          OUTLINED_FUNCTION_27_61();
        }
      }
      OUTLINED_FUNCTION_60_28();
    }
    else
    {
      OUTLINED_FUNCTION_196_2(v21, (uint64_t *)&demangling cache variable for type metadata for Notice?);
    }
    OUTLINED_FUNCTION_103();
  }
  else
  {
    OUTLINED_FUNCTION_45_26(v20, (uint64_t *)&demangling cache variable for type metadata for Notice?);
    OUTLINED_FUNCTION_63_26();
    v32 = OUTLINED_FUNCTION_12_0();
    if (OUTLINED_FUNCTION_5_3(v32))
    {
      v33 = (_WORD *)OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_47_2(v33);
      OUTLINED_FUNCTION_2_5(&dword_1BD004000, v34, v35, "> No active notice, present just pushed notice");
      OUTLINED_FUNCTION_60();
    }

    OUTLINED_FUNCTION_94_8();
    OUTLINED_FUNCTION_33_55(*v2);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v51);
  OUTLINED_FUNCTION_52_1();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v11;
  NSObject *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  void (*v19)(uint64_t *, char);
  uint64_t v20;
  void (*v21)(__int128 *, _QWORD);
  void (*v22)(__int128 *, _QWORD);
  uint64_t v23;
  uint64_t v24;
  void (*v25)(__int128 *__return_ptr);
  uint64_t v26;
  void *v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  void *v37;
  os_log_type_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t *);
  void *v42;
  os_log_type_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(__int128 *);
  os_log_type_t v47;
  _DWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  void (*v57)(__int128 *);
  os_log_type_t v58;
  uint64_t v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;
  __int128 v63;
  __int128 v64;
  uint64_t v65;
  __int128 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69[3];
  void *v70;
  uint64_t v71;
  uint64_t v72[6];

  OUTLINED_FUNCTION_93();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v6 = OUTLINED_FUNCTION_33_0();
  v59 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_77();
  v9 = v8 - v7;
  v72[3] = v3;
  v72[4] = v1;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v72);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(boxed_opaque_existential_1, v5, v3);
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v11 = OUTLINED_FUNCTION_17_2();
  __swift_project_value_buffer(v11, (uint64_t)&static Logger.conversationControls);
  outlined init with copy of IDSLookupManager((uint64_t)v72, (uint64_t)v69);
  outlined init with copy of IDSLookupManager((uint64_t)v72, (uint64_t)&v66);
  v12 = Logger.logObject.getter();
  v58 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v58))
  {
    v13 = OUTLINED_FUNCTION_105();
    *(_QWORD *)&v63 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v13 = 136315394;
    __swift_project_boxed_opaque_existential_1(v69, (uint64_t)v70);
    v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 120))(v3, v1);
    *(_QWORD *)&v60 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v14, v15, (uint64_t *)&v63);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_27();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v69);
    *(_WORD *)(v13 + 12) = 2080;
    __swift_project_boxed_opaque_existential_1(&v66, v67);
    OUTLINED_FUNCTION_61_29(v3);
    _s10Foundation4UUIDVACSHAAWlTm_3((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x1E0CB09F0]);
    v16 = dispatch thunk of CustomStringConvertible.description.getter();
    v18 = v17;
    (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v9, v6);
    *(_QWORD *)&v60 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v16, v18, (uint64_t *)&v63);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_249();
    OUTLINED_FUNCTION_26_6(&dword_1BD004000, v12, v58, "> Adding to queue, notice: %s, uuid: %s", (uint8_t *)v13);
    OUTLINED_FUNCTION_25_6();
    OUTLINED_FUNCTION_60();
  }
  OUTLINED_FUNCTION_103();
  OUTLINED_FUNCTION_249();

  OUTLINED_FUNCTION_61_29(v3);
  v19 = ConversationControlsNoticeCoordinator.noticeQueue.modify(v69);
  specialized Dictionary.subscript.modify();
  v22 = v21;
  v23 = *(_QWORD *)(v20 + 24);
  if (v23)
  {
    v24 = *(_QWORD *)(v20 + 32);
    __swift_mutable_project_boxed_opaque_existential_1(v20, *(_QWORD *)(v20 + 24));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v24 + 16))(v72, v23, v24);
  }
  v22(&v66, 0);
  v19(v69, 0);
  OUTLINED_FUNCTION_68_26();
  v25(&v66);
  if (v67)
  {
    outlined init with take of Notice(&v66, (uint64_t)v69);
    ConversationControlsNoticeCoordinator.peek()((uint64_t)&v63);
    if (*((_QWORD *)&v64 + 1))
    {
      outlined init with take of Notice(&v63, (uint64_t)&v66);
      v26 = v68;
      OUTLINED_FUNCTION_184(&v66);
      if ((OUTLINED_FUNCTION_24((uint64_t)v69, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 216)) & 1) != 0)
      {
        ConversationControlsNoticeCoordinator.pop()();
        if (v61)
        {
          outlined init with take of Notice(&v60, (uint64_t)&v63);
          v27 = v70;
          v28 = v71;
          __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v69, (uint64_t)v70);
          if ((OUTLINED_FUNCTION_24((uint64_t)&v63, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 208)) & 1) != 0)
          {
            OUTLINED_FUNCTION_65_25((uint64_t)&v63);
            v29 = OUTLINED_FUNCTION_41_37();
            v30 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v29, v30))
            {
              v31 = OUTLINED_FUNCTION_105();
              OUTLINED_FUNCTION_105();
              *(_DWORD *)v31 = 136315394;
              v32 = OUTLINED_FUNCTION_5_120(&v60);
              v34 = OUTLINED_FUNCTION_149(v32, v33);
              OUTLINED_FUNCTION_256(v34);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              OUTLINED_FUNCTION_27();
              OUTLINED_FUNCTION_186();
              *(_WORD *)(v31 + 12) = 2080;
              OUTLINED_FUNCTION_2_0();
              v35 = OUTLINED_FUNCTION_5_120(v69);
              OUTLINED_FUNCTION_149(v35, v36);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              OUTLINED_FUNCTION_27();
              OUTLINED_FUNCTION_26_6(&dword_1BD004000, v29, v30, "> Coalescing active notice with notice: %s, result: %s", (uint8_t *)v31);
              OUTLINED_FUNCTION_25_6();
              OUTLINED_FUNCTION_60();
            }
            OUTLINED_FUNCTION_186();

            OUTLINED_FUNCTION_2_0();
            v56 = v69;
          }
          else
          {
            OUTLINED_FUNCTION_65_25((uint64_t)&v63);
            OUTLINED_FUNCTION_41_37();
            v47 = OUTLINED_FUNCTION_369();
            if (OUTLINED_FUNCTION_43_7(v47))
            {
              v48 = (_DWORD *)OUTLINED_FUNCTION_105();
              OUTLINED_FUNCTION_105();
              *v48 = 136315138;
              v49 = v61;
              v50 = v62;
              __swift_project_boxed_opaque_existential_1(&v60, v61);
              v51 = (*(uint64_t (**)(uint64_t, uint64_t))(v50 + 120))(v49, v50);
              v53 = OUTLINED_FUNCTION_149(v51, v52);
              OUTLINED_FUNCTION_256(v53);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              OUTLINED_FUNCTION_27();
              OUTLINED_FUNCTION_186();
              OUTLINED_FUNCTION_30_63(&dword_1BD004000, v54, v55, "> Replacing active notice with notice: %s");
              OUTLINED_FUNCTION_21();
              OUTLINED_FUNCTION_60();
            }
            OUTLINED_FUNCTION_186();

            v56 = (uint64_t *)&v63;
          }
          OUTLINED_FUNCTION_65_25((uint64_t)v56);
          OUTLINED_FUNCTION_268();
          v57(&v60);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v63);
        }
        else
        {
          outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)&v60, (uint64_t *)&demangling cache variable for type metadata for Notice?);
          v42 = (void *)OUTLINED_FUNCTION_41_37();
          v43 = static os_log_type_t.error.getter();
          if (OUTLINED_FUNCTION_5_3(v43))
          {
            *(_WORD *)OUTLINED_FUNCTION_105() = 0;
            OUTLINED_FUNCTION_2_5(&dword_1BD004000, v44, v45, "Tried to pop next notice but there wasn't a notice to pop");
            OUTLINED_FUNCTION_60();
          }

          v65 = 0;
          v63 = 0u;
          v64 = 0u;
          OUTLINED_FUNCTION_268();
          v46(&v63);
        }
      }
      OUTLINED_FUNCTION_249();
    }
    else
    {
      outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)&v63, (uint64_t *)&demangling cache variable for type metadata for Notice?);
    }
    OUTLINED_FUNCTION_103();
  }
  else
  {
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)&v66, (uint64_t *)&demangling cache variable for type metadata for Notice?);
    v37 = (void *)OUTLINED_FUNCTION_41_37();
    v38 = static os_log_type_t.default.getter();
    if (OUTLINED_FUNCTION_5_3(v38))
    {
      *(_WORD *)OUTLINED_FUNCTION_105() = 0;
      OUTLINED_FUNCTION_2_5(&dword_1BD004000, v39, v40, "> No active notice, present just pushed notice");
      OUTLINED_FUNCTION_60();
    }

    ConversationControlsNoticeCoordinator.pop()();
    OUTLINED_FUNCTION_268();
    v41(v69);
  }
  OUTLINED_FUNCTION_100_2();
  OUTLINED_FUNCTION_52_1();
}

void sub_1BD459980()
{
  uint64_t *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = OUTLINED_FUNCTION_16_3(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD4599B0()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x100))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD4599E8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x118))();
  v0[1] = v2;
  OUTLINED_FUNCTION_0();
}

void sub_1BD459A20()
{
  uint64_t *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = OUTLINED_FUNCTION_259_3(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD459A50()
{
  uint64_t *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = OUTLINED_FUNCTION_308(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD459A80()
{
  uint64_t *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = OUTLINED_FUNCTION_43_6(v1);
  OUTLINED_FUNCTION_0();
}

uint64_t storeEnumTagSinglePayload for BannerPresentationError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_1BD459AFC + 4 * byte_1BD66086E[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_1BD459B30 + 4 * byte_1BD660869[v4]))();
}

uint64_t sub_1BD459B30(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD459B38(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD459B40);
  return result;
}

uint64_t sub_1BD459B4C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD459B54);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_1BD459B58(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD459B60(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BannerPresentationError()
{
  return &type metadata for BannerPresentationError;
}

uint64_t method lookup function for BannerPresentationManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BannerPresentationManager.presentationDelegate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of BannerPresentationManager.presentationDelegate.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of BannerPresentationManager.presentationDelegate.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of BannerPresentationManager.audioRoutingDelegate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of BannerPresentationManager.audioRoutingDelegate.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x108))();
}

uint64_t dispatch thunk of BannerPresentationManager.audioRoutingDelegate.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x110))();
}

uint64_t dispatch thunk of BannerPresentationManager.inCallConversationControlsDelegate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x118))();
}

uint64_t dispatch thunk of BannerPresentationManager.inCallConversationControlsDelegate.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x120))();
}

uint64_t dispatch thunk of BannerPresentationManager.inCallConversationControlsDelegate.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x128))();
}

uint64_t dispatch thunk of BannerPresentationManager.handedOffCall.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x148))();
}

uint64_t dispatch thunk of BannerPresentationManager.handedOffCall.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x150))();
}

uint64_t dispatch thunk of BannerPresentationManager.handedOffCall.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x158))();
}

uint64_t dispatch thunk of BannerPresentationManager.activeCall.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x160))();
}

uint64_t dispatch thunk of BannerPresentationManager.conversationControlsManager.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x180))();
}

uint64_t dispatch thunk of BannerPresentationManager.presentedBanner.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x188))();
}

uint64_t dispatch thunk of BannerPresentationManager.presentedSystemApertureElement.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1A0))();
}

uint64_t dispatch thunk of BannerPresentationManager.presentedSystemApertureElement.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1A8))();
}

uint64_t dispatch thunk of BannerPresentationManager.presentedSystemApertureElement.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1B0))();
}

uint64_t dispatch thunk of BannerPresentationManager.isAlertAvailable.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1B8))();
}

uint64_t dispatch thunk of BannerPresentationManager.makeSystemApertureElementProvider()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1D8))();
}

uint64_t dispatch thunk of BannerPresentationManager.makeOrphanSystemApertureElementProvider()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1E0))();
}

uint64_t dispatch thunk of BannerPresentationManager.inCallControlsVisible.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x218))();
}

uint64_t dispatch thunk of BannerPresentationManager.__allocating_init(delegate:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 600))();
}

void partial apply for closure #2 in closure #1 in BannerPresentationManager.handleCallStatusDidChange(_:)(int a1, void *a2)
{
  uint64_t v2;

  closure #2 in closure #1 in BannerPresentationManager.handleCallStatusDidChange(_:)(a1, a2, v2);
}

uint64_t sub_1BD459E00()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in BannerPresentationManager.handleCallStatusDidChange(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 40);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  v5 = OUTLINED_FUNCTION_20_27(v4);
  return closure #1 in closure #1 in BannerPresentationManager.handleCallStatusDidChange(_:)(v5, v6, v7, v3, v2);
}

void OUTLINED_FUNCTION_39_58(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  uint8_t *v4;

  _os_log_impl(a1, a2, a3, a4, v4, 0xCu);
}

BOOL OUTLINED_FUNCTION_75_21(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_85_19()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_87_15(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 104) = a1;
  *(_QWORD *)(v1 + 16) = v2;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

void OUTLINED_FUNCTION_99_9()
{
  uint64_t v0;
  uint64_t v1;

  outlined init with copy of RadarReporting(v1 - 128, v0 + 192);
}

uint64_t OUTLINED_FUNCTION_102_14()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v1, v2, (uint64_t *)(v0 + 144));
}

uint64_t OUTLINED_FUNCTION_119_4()
{
  _QWORD *v0;
  _QWORD *v1;

  return (*(uint64_t (**)(void))((*v1 & *v0) + 0x1A0))();
}

uint64_t OUTLINED_FUNCTION_127_7()
{
  uint64_t v0;

  return outlined destroy of ConversationControlsType(v0 - 144);
}

uint64_t OUTLINED_FUNCTION_131_8(_QWORD *a1)
{
  _QWORD *v1;

  return (*(uint64_t (**)(void))((*v1 & *a1) + 0x2B8))();
}

id OUTLINED_FUNCTION_138_9(uint64_t a1, const char *a2)
{
  uint64_t v2;
  void *v3;
  double v4;

  return objc_msgSend(v3, a2, 0, v2, v4);
}

uint64_t OUTLINED_FUNCTION_141_6(uint64_t a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  return outlined destroy of ConversationControlsType((uint64_t)va);
}

id OUTLINED_FUNCTION_146_4()
{
  void *v0;
  uint64_t v1;

  return objc_msgSend(v0, (SEL)(v1 + 3455));
}

void OUTLINED_FUNCTION_147_5()
{
  uint64_t v0;

}

uint64_t OUTLINED_FUNCTION_151_4()
{
  uint64_t v0;

  return outlined destroy of ConversationControlsType(v0 - 232);
}

void OUTLINED_FUNCTION_161_7(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v2 + 104, a2);
}

uint64_t OUTLINED_FUNCTION_163_4@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

_QWORD *OUTLINED_FUNCTION_164_1@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  return (*(_QWORD *(**)(uint64_t *__return_ptr))(a1 + 496))((uint64_t *)va);
}

uint64_t OUTLINED_FUNCTION_165_6()
{
  return static os_log_type_t.default.getter();
}

uint64_t OUTLINED_FUNCTION_168_2()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;

  return v0(*(_QWORD *)(v1 - 264));
}

id OUTLINED_FUNCTION_174_4(uint64_t a1, const char *a2)
{
  void *v2;
  uint64_t v3;

  return objc_msgSend(v2, a2, v3, 1);
}

uint64_t OUTLINED_FUNCTION_176_4(uint64_t a1, _BYTE *a2)
{
  *a2 = 0;
  return 0;
}

void OUTLINED_FUNCTION_179_2(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  outlined init with copy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_180_1(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 96) = a1;
  return v1 + 96;
}

uint64_t OUTLINED_FUNCTION_182_4()
{
  return Logger.logObject.getter();
}

uint64_t OUTLINED_FUNCTION_183_3()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_187_3()
{
  uint64_t (*v0)(_QWORD, _QWORD);

  return v0(0, 0);
}

uint64_t OUTLINED_FUNCTION_188_4@<X0>(uint64_t (*a1)(void)@<X8>)
{
  return a1();
}

void OUTLINED_FUNCTION_193_4()
{
  BannerPresentationManager.presentBanner(as:type:reply:)();
}

void OUTLINED_FUNCTION_196_2(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v2 + 144, a2);
}

void OUTLINED_FUNCTION_199_3(id *a1)
{

}

uint64_t OUTLINED_FUNCTION_204_4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 32) = v1;
  return Logger.logObject.getter();
}

_QWORD *OUTLINED_FUNCTION_205_3@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return (*(_QWORD *(**)(uint64_t *__return_ptr))(a1 + 496))(&a2);
}

uint64_t OUTLINED_FUNCTION_208_2()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(v0, v2);
}

uint64_t OUTLINED_FUNCTION_213_2()
{
  return Logger.logObject.getter();
}

void OUTLINED_FUNCTION_214_1()
{
  const void *v0;

  _Block_release(v0);
}

uint64_t OUTLINED_FUNCTION_215_2()
{
  return _convertNSErrorToError(_:)();
}

_QWORD *OUTLINED_FUNCTION_216_5()
{
  return PlaceholderCallCenter.activeCall.getter();
}

uint64_t OUTLINED_FUNCTION_227_1(uint64_t a1, _BYTE *a2)
{
  *a2 = 0;
  return 0;
}

uint64_t OUTLINED_FUNCTION_230_2()
{
  return swift_getObjectType();
}

void OUTLINED_FUNCTION_232_4(float a1)
{
  float *v1;

  *v1 = a1;
}

uint64_t OUTLINED_FUNCTION_234_0()
{
  return String.init<A>(reflecting:)();
}

uint64_t OUTLINED_FUNCTION_236_6()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_241_4(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, (uint64_t *)(v2 + 136));
}

void OUTLINED_FUNCTION_243_1(uint64_t a1)
{
  uint64_t v1;

  outlined init with copy of RadarReporting(a1, v1 + 120);
}

double OUTLINED_FUNCTION_244_1()
{
  return ConversationControlsType.dismissTimerDuration(inCallControls:)(0);
}

uint64_t OUTLINED_FUNCTION_245_1()
{
  uint64_t v0;
  uint64_t v1;

  return outlined init with copy of ConversationControlsType(*(_QWORD *)(v0 + 56), v1 - 144);
}

uint64_t OUTLINED_FUNCTION_246_2()
{
  uint64_t v0;
  uint64_t v1;

  return outlined init with copy of ConversationControlsType(v0, v1 - 144);
}

uint64_t OUTLINED_FUNCTION_259_3@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(void))((v1 & a1) + 0x148))();
}

uint64_t OUTLINED_FUNCTION_261_4(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 80) = result;
  return result;
}

void OUTLINED_FUNCTION_262_5()
{
  void *v0;

}

NSNumber OUTLINED_FUNCTION_265_5()
{
  return NSNumber.init(BOOLeanLiteral:)(1);
}

void OUTLINED_FUNCTION_266_3()
{
  uint64_t v0;

}

void ParticipantViewRepresentableViewModel.participant.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  outlined init with copy of ConversationControlsAppLaunchButtonType(v1, a1, type metadata accessor for Participant);
}

uint64_t ParticipantViewRepresentableViewModel.isLocal.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ParticipantViewRepresentableViewModel(0) + 20));
}

uint64_t type metadata accessor for ParticipantViewRepresentableViewModel(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for ParticipantViewRepresentableViewModel);
}

void ParticipantViewRepresentableViewModel.participantViewModel.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ParticipantViewRepresentableViewModel(0);
  outlined init with copy of ConversationControlsAppLaunchButtonType(v1 + *(int *)(v3 + 24), a1, type metadata accessor for ParticipantViewModel);
}

uint64_t ParticipantViewRepresentableViewModel.id.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v1 + *(int *)(OUTLINED_FUNCTION_152() + 20);
  v3 = type metadata accessor for UUID();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(v0, v2, v3);
}

#error "1BD45AD68: call analysis failed (funcsize=81)"

BOOL static ParticipantViewRepresentableViewModel.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;

  static Participant.== infix(_:_:)();
  if ((v4 & 1) != 0
    && (v5 = type metadata accessor for ParticipantViewRepresentableViewModel(0),
        *(unsigned __int8 *)(a1 + *(int *)(v5 + 20)) == *(unsigned __int8 *)(a2 + *(int *)(v5 + 20))))
  {
    return static ParticipantViewModel.== infix(_:_:)();
  }
  else
  {
    return 0;
  }
}

void ParticipantViewRepresentable.viewModel.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  outlined init with copy of ConversationControlsAppLaunchButtonType(v1, a1, type metadata accessor for ParticipantViewRepresentableViewModel);
}

uint64_t ParticipantViewRepresentable.viewModel.setter(uint64_t a1)
{
  uint64_t v1;

  return outlined assign with take of ParticipantViewRepresentableViewModel(a1, v1);
}

uint64_t outlined assign with take of ParticipantViewRepresentableViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ParticipantViewRepresentableViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*ParticipantViewRepresentable.viewModel.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void ParticipantViewRepresentable.init(viewModel:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  outlined init with take of StagedCollaboration(a1, a2, type metadata accessor for ParticipantViewRepresentableViewModel);
}

void ParticipantViewRepresentable.makeUIView(context:)()
{
  uint64_t v0;
  char v1;
  id v2;

  v1 = *(_BYTE *)(v0 + *(int *)(type metadata accessor for ParticipantViewRepresentableViewModel(0) + 20));
  v2 = objc_allocWithZone((Class)type metadata accessor for ParticipantView());
  ParticipantView.init(frame:localParticipant:)(v1);
  OUTLINED_FUNCTION_0();
}

void ParticipantViewRepresentable.updateUIView(_:context:)()
{
  uint64_t v0;
  uint64_t v1;

  v1 = type metadata accessor for ParticipantViewRepresentableViewModel(0);
  ParticipantView.configure(with:)((void *)(v0 + *(int *)(v1 + 24)));
}

uint64_t protocol witness for static View._makeView(view:inputs:) in conformance ParticipantViewRepresentable()
{
  _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type ParticipantViewRepresentable and conformance ParticipantViewRepresentable, type metadata accessor for ParticipantViewRepresentable, (uint64_t)&protocol conformance descriptor for ParticipantViewRepresentable);
  return static UIViewRepresentable._makeView(view:inputs:)();
}

uint64_t protocol witness for static View._makeViewList(view:inputs:) in conformance ParticipantViewRepresentable()
{
  _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type ParticipantViewRepresentable and conformance ParticipantViewRepresentable, type metadata accessor for ParticipantViewRepresentable, (uint64_t)&protocol conformance descriptor for ParticipantViewRepresentable);
  return static UIViewRepresentable._makeViewList(view:inputs:)();
}

void protocol witness for View.body.getter in conformance ParticipantViewRepresentable()
{
  _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type ParticipantViewRepresentable and conformance ParticipantViewRepresentable, type metadata accessor for ParticipantViewRepresentable, (uint64_t)&protocol conformance descriptor for ParticipantViewRepresentable);
  UIViewRepresentable.body.getter();
  __break(1u);
}

void associated type witness table accessor for Identifiable.ID : Hashable in ParticipantViewRepresentableViewModel()
{
  _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
}

void base witness table accessor for View in ParticipantViewRepresentable()
{
  _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type ParticipantViewRepresentable and conformance ParticipantViewRepresentable, type metadata accessor for ParticipantViewRepresentable, (uint64_t)&protocol conformance descriptor for ParticipantViewRepresentable);
}

uint64_t type metadata accessor for ParticipantViewRepresentable(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for ParticipantViewRepresentable);
}

_QWORD *initializeBufferWithCopyOfBuffer for ParticipantViewRepresentableViewModel(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  size_t v20;
  __int128 v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  int *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  __int128 v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  int EnumCaseMultiPayload;
  int *v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  int *v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  void *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  id v99;
  uint64_t v100;
  int *v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  __int128 v112;
  uint64_t v113;
  char *v114;
  char *v115;
  __int128 v116;
  uint64_t v117;
  __int128 v118;
  __int128 v119;
  uint64_t v120;
  void *v121;
  void *v122;
  id v123;
  uint64_t v124;
  void *v125;
  uint64_t v126;
  void *v127;
  uint64_t v128;
  id v129;
  id v130;
  id v131;
  void *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  id v138;
  uint64_t v139;
  uint64_t v140;
  void *v141;
  id v142;
  __int128 v143;
  uint64_t v145;
  void (*v146)(char *, char *, uint64_t);
  uint64_t v147;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for Participant.State(0);
    v147 = a3;
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        v8 = type metadata accessor for Date();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
        goto LABEL_18;
      case 4u:
        v10 = type metadata accessor for Date();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
        v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        v12 = *(int *)(v11 + 48);
        v13 = (char *)a1 + v12;
        v14 = (char *)a2 + v12;
        *(_OWORD *)v13 = *(_OWORD *)((char *)a2 + v12);
        v15 = *(_QWORD *)((char *)a2 + v12 + 16);
        v16 = *(_QWORD *)((char *)a2 + v12 + 24);
        *((_QWORD *)v13 + 2) = v15;
        *((_QWORD *)v13 + 3) = v16;
        *((_WORD *)v13 + 16) = *((_WORD *)v14 + 16);
        *((_QWORD *)v13 + 5) = *((_QWORD *)v14 + 5);
        v13[48] = v14[48];
        *(_OWORD *)(v13 + 56) = *(_OWORD *)(v14 + 56);
        *(_OWORD *)(v13 + 72) = *(_OWORD *)(v14 + 72);
        v13[88] = v14[88];
        v13[89] = v14[89];
        v17 = *((_QWORD *)v14 + 15);
        swift_bridgeObjectRetain();
        if (v17)
        {
          if (v17 == 1)
          {
            v18 = v13 + 96;
            v19 = v14 + 96;
            v20 = 209;
            goto LABEL_12;
          }
          v22 = *((_QWORD *)v14 + 16);
          *((_QWORD *)v13 + 15) = v17;
          *((_QWORD *)v13 + 16) = v22;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v17 - 8))((uint64_t)(v13 + 96), (uint64_t)(v14 + 96), v17);
        }
        else
        {
          v21 = *((_OWORD *)v14 + 7);
          *((_OWORD *)v13 + 6) = *((_OWORD *)v14 + 6);
          *((_OWORD *)v13 + 7) = v21;
          *((_QWORD *)v13 + 16) = *((_QWORD *)v14 + 16);
        }
        *((_DWORD *)v13 + 34) = *((_DWORD *)v14 + 34);
        v23 = *((_OWORD *)v14 + 10);
        *((_OWORD *)v13 + 9) = *((_OWORD *)v14 + 9);
        *((_OWORD *)v13 + 10) = v23;
        *((_OWORD *)v13 + 11) = *((_OWORD *)v14 + 11);
        v13[192] = v14[192];
        v18 = v13 + 208;
        v19 = v14 + 208;
        *((_QWORD *)v13 + 25) = *((_QWORD *)v14 + 25);
        v20 = 97;
LABEL_12:
        memcpy(v18, v19, v20);
        v24 = *((_QWORD *)v14 + 39);
        if (v24)
        {
          v25 = *((_QWORD *)v14 + 40);
          v26 = *((_QWORD *)v14 + 41);
          *((_QWORD *)v13 + 39) = v24;
          *((_QWORD *)v13 + 40) = v25;
          *((_QWORD *)v13 + 41) = v26;
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v13 + 312) = *(_OWORD *)(v14 + 312);
          *((_QWORD *)v13 + 41) = *((_QWORD *)v14 + 41);
        }
        v27 = *(int *)(v11 + 64);
        v28 = (char *)a1 + v27;
        v29 = (char *)a2 + v27;
        v30 = *((_QWORD *)v29 + 1);
        if (v30)
        {
          *(_QWORD *)v28 = *(_QWORD *)v29;
          *((_QWORD *)v28 + 1) = v30;
          v31 = *((_QWORD *)v29 + 3);
          *((_QWORD *)v28 + 2) = *((_QWORD *)v29 + 2);
          *((_QWORD *)v28 + 3) = v31;
          v28[32] = v29[32];
          *(_OWORD *)(v28 + 40) = *(_OWORD *)(v29 + 40);
          *((_QWORD *)v28 + 7) = *((_QWORD *)v29 + 7);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v32 = *((_OWORD *)v29 + 1);
          *(_OWORD *)v28 = *(_OWORD *)v29;
          *((_OWORD *)v28 + 1) = v32;
          v33 = *((_OWORD *)v29 + 3);
          *((_OWORD *)v28 + 2) = *((_OWORD *)v29 + 2);
          *((_OWORD *)v28 + 3) = v33;
        }
LABEL_18:
        swift_storeEnumTagMultiPayload();
LABEL_19:
        v34 = (int *)type metadata accessor for Participant(0);
        v35 = v34[5];
        v36 = (char *)a1 + v35;
        v37 = (char *)a2 + v35;
        v38 = type metadata accessor for UUID();
        v39 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16);
        v39(v36, v37, v38);
        v40 = v34[6];
        v41 = (char *)a1 + v40;
        v42 = (char *)a2 + v40;
        v41[4] = v42[4];
        *(_DWORD *)v41 = *(_DWORD *)v42;
        v43 = v34[7];
        v44 = (char *)a1 + v43;
        v45 = (char *)a2 + v43;
        v46 = *(void **)v45;
        v145 = v38;
        v146 = v39;
        if (*(_QWORD *)v45)
        {
          v47 = *((_QWORD *)v45 + 1);
          *(_QWORD *)v44 = v46;
          *((_QWORD *)v44 + 1) = v47;
          v44[16] = v45[16];
          v48 = *((_QWORD *)v45 + 4);
          *((_QWORD *)v44 + 3) = *((_QWORD *)v45 + 3);
          *((_QWORD *)v44 + 4) = v48;
          v49 = v46;
          swift_bridgeObjectRetain();
        }
        else
        {
          v50 = *((_OWORD *)v45 + 1);
          *(_OWORD *)v44 = *(_OWORD *)v45;
          *((_OWORD *)v44 + 1) = v50;
          *((_QWORD *)v44 + 4) = *((_QWORD *)v45 + 4);
        }
        *(_QWORD *)((char *)a1 + v34[8]) = *(_QWORD *)((char *)a2 + v34[8]);
        v51 = v34[9];
        v52 = (_QWORD *)((char *)a1 + v51);
        v53 = (_QWORD *)((char *)a2 + v51);
        v54 = v53[1];
        *v52 = *v53;
        v52[1] = v54;
        *((_BYTE *)a1 + v34[10]) = *((_BYTE *)a2 + v34[10]);
        *(_QWORD *)((char *)a1 + v34[11]) = *(_QWORD *)((char *)a2 + v34[11]);
        v55 = v34[12];
        v56 = *(void **)((char *)a2 + v55);
        *(_QWORD *)((char *)a1 + v55) = v56;
        *((_BYTE *)a1 + v34[13]) = *((_BYTE *)a2 + v34[13]);
        v57 = v34[14];
        v58 = (char *)a1 + v57;
        v59 = (char *)a2 + v57;
        v60 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v61 = v56;
        if (__swift_getEnumTagSinglePayload((uint64_t)v59, 1, v60))
        {
          v62 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
          memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 16))(v58, v59, v60);
          __swift_storeEnumTagSinglePayload((uint64_t)v58, 0, 1, v60);
        }
        v63 = type metadata accessor for Participant.CountdownInfo(0);
        v64 = *(int *)(v63 + 20);
        v65 = &v58[v64];
        v66 = &v59[v64];
        if (__swift_getEnumTagSinglePayload((uint64_t)&v59[v64], 1, v60))
        {
          v67 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
          memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 16))(v65, v66, v60);
          __swift_storeEnumTagSinglePayload((uint64_t)v65, 0, 1, v60);
        }
        v58[*(int *)(v63 + 24)] = v59[*(int *)(v63 + 24)];
        *((_BYTE *)a1 + v34[15]) = *((_BYTE *)a2 + v34[15]);
        *(_QWORD *)((char *)a1 + v34[16]) = *(_QWORD *)((char *)a2 + v34[16]);
        v68 = *(int *)(v147 + 24);
        *((_BYTE *)a1 + *(int *)(v147 + 20)) = *((_BYTE *)a2 + *(int *)(v147 + 20));
        v69 = (char *)a1 + v68;
        v70 = (char *)a2 + v68;
        type metadata accessor for ParticipantViewModel(0);
        swift_retain();
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2)
        {
          v146(v69, v70, v145);
          v84 = (int *)type metadata accessor for ParticipantViewModel.ParticipantDetails(0);
          v85 = v84[5];
          v86 = &v69[v85];
          v87 = &v70[v85];
          v89 = *(_QWORD *)v87;
          v88 = *((_QWORD *)v87 + 1);
          *(_QWORD *)v86 = v89;
          *((_QWORD *)v86 + 1) = v88;
          v69[v84[6]] = v70[v84[6]];
          v69[v84[7]] = v70[v84[7]];
          v69[v84[8]] = v70[v84[8]];
          v69[v84[9]] = v70[v84[9]];
          v69[v84[10]] = v70[v84[10]];
          v69[v84[11]] = v70[v84[11]];
          swift_bridgeObjectRetain();
          v90 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantMonogramView.ViewModel))
                       + 48);
          v91 = &v69[v90];
          v92 = &v70[v90];
          v93 = *(void **)&v70[v90];
          v94 = *((_QWORD *)v92 + 1);
          *(_QWORD *)v91 = v93;
          *((_QWORD *)v91 + 1) = v94;
          v95 = *((_QWORD *)v92 + 3);
          *((_QWORD *)v91 + 2) = *((_QWORD *)v92 + 2);
          *((_QWORD *)v91 + 3) = v95;
          v96 = *((_QWORD *)v92 + 5);
          *((_QWORD *)v91 + 4) = *((_QWORD *)v92 + 4);
          *((_QWORD *)v91 + 5) = v96;
          v97 = *((_QWORD *)v92 + 7);
          *((_QWORD *)v91 + 6) = *((_QWORD *)v92 + 6);
          *((_QWORD *)v91 + 7) = v97;
          v91[64] = v92[64];
          v91[65] = v92[65];
          v98 = *((_QWORD *)v92 + 10);
          v99 = v93;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v98)
          {
            *((_QWORD *)v91 + 9) = *((_QWORD *)v92 + 9);
            *((_QWORD *)v91 + 10) = v98;
            v100 = *((_QWORD *)v92 + 12);
            *((_QWORD *)v91 + 11) = *((_QWORD *)v92 + 11);
            *((_QWORD *)v91 + 12) = v100;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            v118 = *(_OWORD *)(v92 + 88);
            *(_OWORD *)(v91 + 72) = *(_OWORD *)(v92 + 72);
            *(_OWORD *)(v91 + 88) = v118;
          }
        }
        else if (EnumCaseMultiPayload == 1)
        {
          v146(v69, v70, v145);
          v72 = (int *)type metadata accessor for ParticipantViewModel.ParticipantDetails(0);
          v73 = v72[5];
          v74 = &v69[v73];
          v75 = &v70[v73];
          v77 = *(_QWORD *)v75;
          v76 = *((_QWORD *)v75 + 1);
          *(_QWORD *)v74 = v77;
          *((_QWORD *)v74 + 1) = v76;
          v69[v72[6]] = v70[v72[6]];
          v69[v72[7]] = v70[v72[7]];
          v69[v72[8]] = v70[v72[8]];
          v69[v72[9]] = v70[v72[9]];
          v69[v72[10]] = v70[v72[10]];
          v69[v72[11]] = v70[v72[11]];
          swift_bridgeObjectRetain();
          v78 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantVideoView.ViewModel, ParticipantVideoOverlayView.ViewModel));
          v79 = *(int *)(v78 + 48);
          v80 = &v69[v79];
          v81 = &v70[v79];
          v82 = *(_QWORD *)&v70[v79 + 24];
          if (v82)
          {
            v83 = *((_QWORD *)v81 + 4);
            *((_QWORD *)v80 + 3) = v82;
            *((_QWORD *)v80 + 4) = v83;
            (**(void (***)(char *, char *))(v82 - 8))(v80, v81);
          }
          else
          {
            v112 = *((_OWORD *)v81 + 1);
            *(_OWORD *)v80 = *(_OWORD *)v81;
            *((_OWORD *)v80 + 1) = v112;
            *((_QWORD *)v80 + 4) = *((_QWORD *)v81 + 4);
          }
          memcpy(v80 + 40, v81 + 40, 0x84uLL);
          v113 = *(int *)(v78 + 64);
          v114 = &v69[v113];
          v115 = &v70[v113];
          switch(v115[104])
          {
            case 1:
              v116 = *(_OWORD *)(v115 + 24);
              *(_OWORD *)(v114 + 24) = v116;
              (**(void (***)(void *, char *))(v116 - 8))(v114, v115);
              v117 = *((_QWORD *)v115 + 6);
              *((_QWORD *)v114 + 5) = *((_QWORD *)v115 + 5);
              *((_QWORD *)v114 + 6) = v117;
              v114[104] = 1;
              swift_bridgeObjectRetain();
              break;
            case 2:
              v120 = *((_QWORD *)v115 + 1);
              *(_QWORD *)v114 = *(_QWORD *)v115;
              *((_QWORD *)v114 + 1) = v120;
              v121 = (void *)*((_QWORD *)v115 + 3);
              *((_QWORD *)v114 + 2) = *((_QWORD *)v115 + 2);
              *((_QWORD *)v114 + 3) = v121;
              *((_WORD *)v114 + 16) = *((_WORD *)v115 + 16);
              *((_QWORD *)v114 + 5) = *((_QWORD *)v115 + 5);
              v114[48] = v115[48];
              v122 = (void *)*((_QWORD *)v115 + 7);
              *((_QWORD *)v114 + 7) = v122;
              v114[104] = 2;
              swift_bridgeObjectRetain();
              v123 = v121;
              goto LABEL_45;
            case 3:
              v124 = *((_QWORD *)v115 + 1);
              *(_QWORD *)v114 = *(_QWORD *)v115;
              *((_QWORD *)v114 + 1) = v124;
              v125 = (void *)*((_QWORD *)v115 + 3);
              *((_QWORD *)v114 + 2) = *((_QWORD *)v115 + 2);
              *((_QWORD *)v114 + 3) = v125;
              *((_WORD *)v114 + 16) = *((_WORD *)v115 + 16);
              *((_QWORD *)v114 + 5) = *((_QWORD *)v115 + 5);
              v114[48] = v115[48];
              v127 = (void *)*((_QWORD *)v115 + 7);
              v126 = *((_QWORD *)v115 + 8);
              *((_QWORD *)v114 + 7) = v127;
              *((_QWORD *)v114 + 8) = v126;
              v128 = *((_QWORD *)v115 + 9);
              v122 = (void *)*((_QWORD *)v115 + 10);
              *((_QWORD *)v114 + 9) = v128;
              *((_QWORD *)v114 + 10) = v122;
              v114[104] = 3;
              swift_bridgeObjectRetain();
              v129 = v125;
              v130 = v127;
              swift_bridgeObjectRetain();
LABEL_45:
              v131 = v122;
              break;
            case 4:
              v132 = *(void **)v115;
              v133 = *((_QWORD *)v115 + 1);
              *(_QWORD *)v114 = *(_QWORD *)v115;
              *((_QWORD *)v114 + 1) = v133;
              v134 = *((_QWORD *)v115 + 3);
              *((_QWORD *)v114 + 2) = *((_QWORD *)v115 + 2);
              *((_QWORD *)v114 + 3) = v134;
              v135 = *((_QWORD *)v115 + 5);
              *((_QWORD *)v114 + 4) = *((_QWORD *)v115 + 4);
              *((_QWORD *)v114 + 5) = v135;
              v136 = *((_QWORD *)v115 + 7);
              *((_QWORD *)v114 + 6) = *((_QWORD *)v115 + 6);
              *((_QWORD *)v114 + 7) = v136;
              v114[64] = v115[64];
              v114[65] = v115[65];
              v137 = *((_QWORD *)v115 + 10);
              v138 = v132;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (v137)
              {
                *((_QWORD *)v114 + 9) = *((_QWORD *)v115 + 9);
                *((_QWORD *)v114 + 10) = v137;
                v139 = *((_QWORD *)v115 + 11);
                v140 = *((_QWORD *)v115 + 12);
                *((_QWORD *)v114 + 11) = v139;
                *((_QWORD *)v114 + 12) = v140;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
              }
              else
              {
                v143 = *(_OWORD *)(v115 + 88);
                *(_OWORD *)(v114 + 72) = *(_OWORD *)(v115 + 72);
                *(_OWORD *)(v114 + 88) = v143;
              }
              v114[104] = 4;
              break;
            case 5:
              v141 = *(void **)v115;
              *(_QWORD *)v114 = *(_QWORD *)v115;
              v114[104] = 5;
              v142 = v141;
              break;
            default:
              memcpy(v114, v115, 0x69uLL);
              break;
          }
        }
        else
        {
          v146(v69, v70, v145);
          v101 = (int *)type metadata accessor for ParticipantViewModel.ParticipantDetails(0);
          v102 = v101[5];
          v103 = &v69[v102];
          v104 = &v70[v102];
          v106 = *(_QWORD *)v104;
          v105 = *((_QWORD *)v104 + 1);
          *(_QWORD *)v103 = v106;
          *((_QWORD *)v103 + 1) = v105;
          v69[v101[6]] = v70[v101[6]];
          v69[v101[7]] = v70[v101[7]];
          v69[v101[8]] = v70[v101[8]];
          v69[v101[9]] = v70[v101[9]];
          v69[v101[10]] = v70[v101[10]];
          v69[v101[11]] = v70[v101[11]];
          swift_bridgeObjectRetain();
          v107 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantVideoView.ViewModel))
                        + 48);
          v108 = &v69[v107];
          v109 = &v70[v107];
          v110 = *((_QWORD *)v109 + 3);
          if (v110)
          {
            v111 = *((_QWORD *)v109 + 4);
            *((_QWORD *)v108 + 3) = v110;
            *((_QWORD *)v108 + 4) = v111;
            (**(void (***)(char *, char *))(v110 - 8))(v108, v109);
          }
          else
          {
            v119 = *((_OWORD *)v109 + 1);
            *(_OWORD *)v108 = *(_OWORD *)v109;
            *((_OWORD *)v108 + 1) = v119;
            *((_QWORD *)v108 + 4) = *((_QWORD *)v109 + 4);
          }
          memcpy(v108 + 40, v109 + 40, 0x84uLL);
        }
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
        goto LABEL_19;
    }
  }
  return a1;
}

void destroy for ParticipantViewRepresentableViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  id *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int EnumCaseMultiPayload;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;

  type metadata accessor for Participant.State(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 5u:
      v4 = type metadata accessor for Date();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
      break;
    case 4u:
      v19 = type metadata accessor for Date();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(a1, v19);
      v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      v21 = a1 + *(int *)(v20 + 48);
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v21 + 120) >= 2uLL)
        __swift_destroy_boxed_opaque_existential_1(v21 + 96);
      if (*(_QWORD *)(v21 + 312))
      {
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
      }
      if (*(_QWORD *)(a1 + *(int *)(v20 + 64) + 8))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      break;
    default:
      break;
  }
  v5 = (int *)type metadata accessor for Participant(0);
  v6 = a1 + v5[5];
  v7 = type metadata accessor for UUID();
  v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
  v8(v6, v7);
  v9 = (id *)(a1 + v5[7]);
  if (*v9)
  {

    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v10 = a1 + v5[14];
  v11 = type metadata accessor for Date();
  if (!__swift_getEnumTagSinglePayload(v10, 1, v11))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  v12 = v10 + *(int *)(type metadata accessor for Participant.CountdownInfo(0) + 20);
  if (!__swift_getEnumTagSinglePayload(v12, 1, v11))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v12, v11);
  swift_release();
  v13 = a1 + *(int *)(a2 + 24);
  type metadata accessor for ParticipantViewModel(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v8(v13, v7);
      type metadata accessor for ParticipantViewModel.ParticipantDetails(0);
      swift_bridgeObjectRelease();
      v18 = v13
          + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantMonogramView.ViewModel))
                   + 48);
LABEL_19:

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v18 + 80))
      {
        swift_bridgeObjectRelease();
LABEL_21:
        swift_bridgeObjectRelease();
      }
      break;
    case 1:
      v8(v13, v7);
      type metadata accessor for ParticipantViewModel.ParticipantDetails(0);
      swift_bridgeObjectRelease();
      v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantVideoView.ViewModel, ParticipantVideoOverlayView.ViewModel));
      v17 = v13 + *(int *)(v16 + 48);
      if (*(_QWORD *)(v17 + 24))
        __swift_destroy_boxed_opaque_existential_1(v17);
      v18 = v13 + *(int *)(v16 + 64);
      switch(*(_BYTE *)(v18 + 104))
      {
        case 1:
          __swift_destroy_boxed_opaque_existential_1(v18);
          goto LABEL_21;
        case 2:
          swift_bridgeObjectRelease();

          v22 = *(id *)(v18 + 56);
          goto LABEL_32;
        case 3:
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          v22 = *(id *)(v18 + 80);
          goto LABEL_32;
        case 4:
          goto LABEL_19;
        case 5:
          v22 = *(id *)v18;
LABEL_32:

          break;
        default:
          return;
      }
      break;
    case 0:
      v8(v13, v7);
      type metadata accessor for ParticipantViewModel.ParticipantDetails(0);
      swift_bridgeObjectRelease();
      v15 = v13
          + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantVideoView.ViewModel))
                   + 48);
      if (*(_QWORD *)(v15 + 24))
        __swift_destroy_boxed_opaque_existential_1(v15);
      break;
  }
}

_BYTE *initializeWithCopy for ParticipantViewRepresentableViewModel(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  size_t v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  int *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  __int128 v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  int EnumCaseMultiPayload;
  int *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  int *v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  void *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  id v97;
  uint64_t v98;
  int *v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  __int128 v110;
  uint64_t v111;
  char *v112;
  char *v113;
  __int128 v114;
  uint64_t v115;
  __int128 v116;
  __int128 v117;
  uint64_t v118;
  void *v119;
  void *v120;
  id v121;
  uint64_t v122;
  void *v123;
  uint64_t v124;
  void *v125;
  uint64_t v126;
  id v127;
  id v128;
  id v129;
  void *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  id v136;
  uint64_t v137;
  uint64_t v138;
  void *v139;
  id v140;
  __int128 v141;
  uint64_t v143;
  void (*v144)(char *, char *, uint64_t);
  uint64_t v145;

  v6 = type metadata accessor for Participant.State(0);
  v145 = a3;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 5u:
      v7 = type metadata accessor for Date();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      goto LABEL_16;
    case 4u:
      v8 = type metadata accessor for Date();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      v10 = *(int *)(v9 + 48);
      v11 = &a1[v10];
      v12 = &a2[v10];
      *(_OWORD *)v11 = *(_OWORD *)&a2[v10];
      v13 = *(_QWORD *)&a2[v10 + 16];
      v14 = *(_QWORD *)&a2[v10 + 24];
      *((_QWORD *)v11 + 2) = v13;
      *((_QWORD *)v11 + 3) = v14;
      *((_WORD *)v11 + 16) = *((_WORD *)v12 + 16);
      *((_QWORD *)v11 + 5) = *((_QWORD *)v12 + 5);
      v11[48] = v12[48];
      *(_OWORD *)(v11 + 56) = *(_OWORD *)(v12 + 56);
      *(_OWORD *)(v11 + 72) = *(_OWORD *)(v12 + 72);
      v11[88] = v12[88];
      v11[89] = v12[89];
      v15 = *((_QWORD *)v12 + 15);
      swift_bridgeObjectRetain();
      if (v15)
      {
        if (v15 == 1)
        {
          v16 = v11 + 96;
          v17 = v12 + 96;
          v18 = 209;
          goto LABEL_10;
        }
        v20 = *((_QWORD *)v12 + 16);
        *((_QWORD *)v11 + 15) = v15;
        *((_QWORD *)v11 + 16) = v20;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v15 - 8))((uint64_t)(v11 + 96), (uint64_t)(v12 + 96), v15);
      }
      else
      {
        v19 = *((_OWORD *)v12 + 7);
        *((_OWORD *)v11 + 6) = *((_OWORD *)v12 + 6);
        *((_OWORD *)v11 + 7) = v19;
        *((_QWORD *)v11 + 16) = *((_QWORD *)v12 + 16);
      }
      *((_DWORD *)v11 + 34) = *((_DWORD *)v12 + 34);
      v21 = *((_OWORD *)v12 + 10);
      *((_OWORD *)v11 + 9) = *((_OWORD *)v12 + 9);
      *((_OWORD *)v11 + 10) = v21;
      *((_OWORD *)v11 + 11) = *((_OWORD *)v12 + 11);
      v11[192] = v12[192];
      v16 = v11 + 208;
      v17 = v12 + 208;
      *((_QWORD *)v11 + 25) = *((_QWORD *)v12 + 25);
      v18 = 97;
LABEL_10:
      memcpy(v16, v17, v18);
      v22 = *((_QWORD *)v12 + 39);
      if (v22)
      {
        v23 = *((_QWORD *)v12 + 40);
        v24 = *((_QWORD *)v12 + 41);
        *((_QWORD *)v11 + 39) = v22;
        *((_QWORD *)v11 + 40) = v23;
        *((_QWORD *)v11 + 41) = v24;
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v11 + 312) = *(_OWORD *)(v12 + 312);
        *((_QWORD *)v11 + 41) = *((_QWORD *)v12 + 41);
      }
      v25 = *(int *)(v9 + 64);
      v26 = &a1[v25];
      v27 = &a2[v25];
      v28 = *((_QWORD *)v27 + 1);
      if (v28)
      {
        *(_QWORD *)v26 = *(_QWORD *)v27;
        *((_QWORD *)v26 + 1) = v28;
        v29 = *((_QWORD *)v27 + 3);
        *((_QWORD *)v26 + 2) = *((_QWORD *)v27 + 2);
        *((_QWORD *)v26 + 3) = v29;
        v26[32] = v27[32];
        *(_OWORD *)(v26 + 40) = *(_OWORD *)(v27 + 40);
        *((_QWORD *)v26 + 7) = *((_QWORD *)v27 + 7);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v30 = *((_OWORD *)v27 + 1);
        *(_OWORD *)v26 = *(_OWORD *)v27;
        *((_OWORD *)v26 + 1) = v30;
        v31 = *((_OWORD *)v27 + 3);
        *((_OWORD *)v26 + 2) = *((_OWORD *)v27 + 2);
        *((_OWORD *)v26 + 3) = v31;
      }
LABEL_16:
      swift_storeEnumTagMultiPayload();
LABEL_17:
      v32 = (int *)type metadata accessor for Participant(0);
      v33 = v32[5];
      v34 = &a1[v33];
      v35 = &a2[v33];
      v36 = type metadata accessor for UUID();
      v37 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16);
      v37(v34, v35, v36);
      v38 = v32[6];
      v39 = &a1[v38];
      v40 = &a2[v38];
      v39[4] = v40[4];
      *(_DWORD *)v39 = *(_DWORD *)v40;
      v41 = v32[7];
      v42 = &a1[v41];
      v43 = &a2[v41];
      v44 = *(void **)v43;
      v143 = v36;
      v144 = v37;
      if (*(_QWORD *)v43)
      {
        v45 = *((_QWORD *)v43 + 1);
        *(_QWORD *)v42 = v44;
        *((_QWORD *)v42 + 1) = v45;
        v42[16] = v43[16];
        v46 = *((_QWORD *)v43 + 4);
        *((_QWORD *)v42 + 3) = *((_QWORD *)v43 + 3);
        *((_QWORD *)v42 + 4) = v46;
        v47 = v44;
        swift_bridgeObjectRetain();
      }
      else
      {
        v48 = *((_OWORD *)v43 + 1);
        *(_OWORD *)v42 = *(_OWORD *)v43;
        *((_OWORD *)v42 + 1) = v48;
        *((_QWORD *)v42 + 4) = *((_QWORD *)v43 + 4);
      }
      *(_QWORD *)&a1[v32[8]] = *(_QWORD *)&a2[v32[8]];
      v49 = v32[9];
      v50 = &a1[v49];
      v51 = &a2[v49];
      v52 = v51[1];
      *v50 = *v51;
      v50[1] = v52;
      a1[v32[10]] = a2[v32[10]];
      *(_QWORD *)&a1[v32[11]] = *(_QWORD *)&a2[v32[11]];
      v53 = v32[12];
      v54 = *(void **)&a2[v53];
      *(_QWORD *)&a1[v53] = v54;
      a1[v32[13]] = a2[v32[13]];
      v55 = v32[14];
      v56 = &a1[v55];
      v57 = &a2[v55];
      v58 = type metadata accessor for Date();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v59 = v54;
      if (__swift_getEnumTagSinglePayload((uint64_t)v57, 1, v58))
      {
        v60 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
        memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(v56, v57, v58);
        __swift_storeEnumTagSinglePayload((uint64_t)v56, 0, 1, v58);
      }
      v61 = type metadata accessor for Participant.CountdownInfo(0);
      v62 = *(int *)(v61 + 20);
      v63 = &v56[v62];
      v64 = &v57[v62];
      if (__swift_getEnumTagSinglePayload((uint64_t)&v57[v62], 1, v58))
      {
        v65 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
        memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(v63, v64, v58);
        __swift_storeEnumTagSinglePayload((uint64_t)v63, 0, 1, v58);
      }
      v56[*(int *)(v61 + 24)] = v57[*(int *)(v61 + 24)];
      a1[v32[15]] = a2[v32[15]];
      *(_QWORD *)&a1[v32[16]] = *(_QWORD *)&a2[v32[16]];
      v66 = *(int *)(v145 + 24);
      a1[*(int *)(v145 + 20)] = a2[*(int *)(v145 + 20)];
      v67 = &a1[v66];
      v68 = &a2[v66];
      type metadata accessor for ParticipantViewModel(0);
      swift_retain();
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        v144(v67, v68, v143);
        v82 = (int *)type metadata accessor for ParticipantViewModel.ParticipantDetails(0);
        v83 = v82[5];
        v84 = &v67[v83];
        v85 = &v68[v83];
        v87 = *(_QWORD *)v85;
        v86 = *((_QWORD *)v85 + 1);
        *(_QWORD *)v84 = v87;
        *((_QWORD *)v84 + 1) = v86;
        v67[v82[6]] = v68[v82[6]];
        v67[v82[7]] = v68[v82[7]];
        v67[v82[8]] = v68[v82[8]];
        v67[v82[9]] = v68[v82[9]];
        v67[v82[10]] = v68[v82[10]];
        v67[v82[11]] = v68[v82[11]];
        swift_bridgeObjectRetain();
        v88 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantMonogramView.ViewModel))
                     + 48);
        v89 = &v67[v88];
        v90 = &v68[v88];
        v91 = *(void **)&v68[v88];
        v92 = *((_QWORD *)v90 + 1);
        *(_QWORD *)v89 = v91;
        *((_QWORD *)v89 + 1) = v92;
        v93 = *((_QWORD *)v90 + 3);
        *((_QWORD *)v89 + 2) = *((_QWORD *)v90 + 2);
        *((_QWORD *)v89 + 3) = v93;
        v94 = *((_QWORD *)v90 + 5);
        *((_QWORD *)v89 + 4) = *((_QWORD *)v90 + 4);
        *((_QWORD *)v89 + 5) = v94;
        v95 = *((_QWORD *)v90 + 7);
        *((_QWORD *)v89 + 6) = *((_QWORD *)v90 + 6);
        *((_QWORD *)v89 + 7) = v95;
        v89[64] = v90[64];
        v89[65] = v90[65];
        v96 = *((_QWORD *)v90 + 10);
        v97 = v91;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v96)
        {
          *((_QWORD *)v89 + 9) = *((_QWORD *)v90 + 9);
          *((_QWORD *)v89 + 10) = v96;
          v98 = *((_QWORD *)v90 + 12);
          *((_QWORD *)v89 + 11) = *((_QWORD *)v90 + 11);
          *((_QWORD *)v89 + 12) = v98;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v116 = *(_OWORD *)(v90 + 88);
          *(_OWORD *)(v89 + 72) = *(_OWORD *)(v90 + 72);
          *(_OWORD *)(v89 + 88) = v116;
        }
      }
      else if (EnumCaseMultiPayload == 1)
      {
        v144(v67, v68, v143);
        v70 = (int *)type metadata accessor for ParticipantViewModel.ParticipantDetails(0);
        v71 = v70[5];
        v72 = &v67[v71];
        v73 = &v68[v71];
        v75 = *(_QWORD *)v73;
        v74 = *((_QWORD *)v73 + 1);
        *(_QWORD *)v72 = v75;
        *((_QWORD *)v72 + 1) = v74;
        v67[v70[6]] = v68[v70[6]];
        v67[v70[7]] = v68[v70[7]];
        v67[v70[8]] = v68[v70[8]];
        v67[v70[9]] = v68[v70[9]];
        v67[v70[10]] = v68[v70[10]];
        v67[v70[11]] = v68[v70[11]];
        swift_bridgeObjectRetain();
        v76 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantVideoView.ViewModel, ParticipantVideoOverlayView.ViewModel));
        v77 = *(int *)(v76 + 48);
        v78 = &v67[v77];
        v79 = &v68[v77];
        v80 = *(_QWORD *)&v68[v77 + 24];
        if (v80)
        {
          v81 = *((_QWORD *)v79 + 4);
          *((_QWORD *)v78 + 3) = v80;
          *((_QWORD *)v78 + 4) = v81;
          (**(void (***)(char *, char *))(v80 - 8))(v78, v79);
        }
        else
        {
          v110 = *((_OWORD *)v79 + 1);
          *(_OWORD *)v78 = *(_OWORD *)v79;
          *((_OWORD *)v78 + 1) = v110;
          *((_QWORD *)v78 + 4) = *((_QWORD *)v79 + 4);
        }
        memcpy(v78 + 40, v79 + 40, 0x84uLL);
        v111 = *(int *)(v76 + 64);
        v112 = &v67[v111];
        v113 = &v68[v111];
        switch(v113[104])
        {
          case 1:
            v114 = *(_OWORD *)(v113 + 24);
            *(_OWORD *)(v112 + 24) = v114;
            (**(void (***)(void *, char *))(v114 - 8))(v112, v113);
            v115 = *((_QWORD *)v113 + 6);
            *((_QWORD *)v112 + 5) = *((_QWORD *)v113 + 5);
            *((_QWORD *)v112 + 6) = v115;
            v112[104] = 1;
            swift_bridgeObjectRetain();
            break;
          case 2:
            v118 = *((_QWORD *)v113 + 1);
            *(_QWORD *)v112 = *(_QWORD *)v113;
            *((_QWORD *)v112 + 1) = v118;
            v119 = (void *)*((_QWORD *)v113 + 3);
            *((_QWORD *)v112 + 2) = *((_QWORD *)v113 + 2);
            *((_QWORD *)v112 + 3) = v119;
            *((_WORD *)v112 + 16) = *((_WORD *)v113 + 16);
            *((_QWORD *)v112 + 5) = *((_QWORD *)v113 + 5);
            v112[48] = v113[48];
            v120 = (void *)*((_QWORD *)v113 + 7);
            *((_QWORD *)v112 + 7) = v120;
            v112[104] = 2;
            swift_bridgeObjectRetain();
            v121 = v119;
            goto LABEL_43;
          case 3:
            v122 = *((_QWORD *)v113 + 1);
            *(_QWORD *)v112 = *(_QWORD *)v113;
            *((_QWORD *)v112 + 1) = v122;
            v123 = (void *)*((_QWORD *)v113 + 3);
            *((_QWORD *)v112 + 2) = *((_QWORD *)v113 + 2);
            *((_QWORD *)v112 + 3) = v123;
            *((_WORD *)v112 + 16) = *((_WORD *)v113 + 16);
            *((_QWORD *)v112 + 5) = *((_QWORD *)v113 + 5);
            v112[48] = v113[48];
            v125 = (void *)*((_QWORD *)v113 + 7);
            v124 = *((_QWORD *)v113 + 8);
            *((_QWORD *)v112 + 7) = v125;
            *((_QWORD *)v112 + 8) = v124;
            v126 = *((_QWORD *)v113 + 9);
            v120 = (void *)*((_QWORD *)v113 + 10);
            *((_QWORD *)v112 + 9) = v126;
            *((_QWORD *)v112 + 10) = v120;
            v112[104] = 3;
            swift_bridgeObjectRetain();
            v127 = v123;
            v128 = v125;
            swift_bridgeObjectRetain();
LABEL_43:
            v129 = v120;
            break;
          case 4:
            v130 = *(void **)v113;
            v131 = *((_QWORD *)v113 + 1);
            *(_QWORD *)v112 = *(_QWORD *)v113;
            *((_QWORD *)v112 + 1) = v131;
            v132 = *((_QWORD *)v113 + 3);
            *((_QWORD *)v112 + 2) = *((_QWORD *)v113 + 2);
            *((_QWORD *)v112 + 3) = v132;
            v133 = *((_QWORD *)v113 + 5);
            *((_QWORD *)v112 + 4) = *((_QWORD *)v113 + 4);
            *((_QWORD *)v112 + 5) = v133;
            v134 = *((_QWORD *)v113 + 7);
            *((_QWORD *)v112 + 6) = *((_QWORD *)v113 + 6);
            *((_QWORD *)v112 + 7) = v134;
            v112[64] = v113[64];
            v112[65] = v113[65];
            v135 = *((_QWORD *)v113 + 10);
            v136 = v130;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v135)
            {
              *((_QWORD *)v112 + 9) = *((_QWORD *)v113 + 9);
              *((_QWORD *)v112 + 10) = v135;
              v137 = *((_QWORD *)v113 + 11);
              v138 = *((_QWORD *)v113 + 12);
              *((_QWORD *)v112 + 11) = v137;
              *((_QWORD *)v112 + 12) = v138;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
            }
            else
            {
              v141 = *(_OWORD *)(v113 + 88);
              *(_OWORD *)(v112 + 72) = *(_OWORD *)(v113 + 72);
              *(_OWORD *)(v112 + 88) = v141;
            }
            v112[104] = 4;
            break;
          case 5:
            v139 = *(void **)v113;
            *(_QWORD *)v112 = *(_QWORD *)v113;
            v112[104] = 5;
            v140 = v139;
            break;
          default:
            memcpy(v112, v113, 0x69uLL);
            break;
        }
      }
      else
      {
        v144(v67, v68, v143);
        v99 = (int *)type metadata accessor for ParticipantViewModel.ParticipantDetails(0);
        v100 = v99[5];
        v101 = &v67[v100];
        v102 = &v68[v100];
        v104 = *(_QWORD *)v102;
        v103 = *((_QWORD *)v102 + 1);
        *(_QWORD *)v101 = v104;
        *((_QWORD *)v101 + 1) = v103;
        v67[v99[6]] = v68[v99[6]];
        v67[v99[7]] = v68[v99[7]];
        v67[v99[8]] = v68[v99[8]];
        v67[v99[9]] = v68[v99[9]];
        v67[v99[10]] = v68[v99[10]];
        v67[v99[11]] = v68[v99[11]];
        swift_bridgeObjectRetain();
        v105 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantVideoView.ViewModel))
                      + 48);
        v106 = &v67[v105];
        v107 = &v68[v105];
        v108 = *((_QWORD *)v107 + 3);
        if (v108)
        {
          v109 = *((_QWORD *)v107 + 4);
          *((_QWORD *)v106 + 3) = v108;
          *((_QWORD *)v106 + 4) = v109;
          (**(void (***)(char *, char *))(v108 - 8))(v106, v107);
        }
        else
        {
          v117 = *((_OWORD *)v107 + 1);
          *(_OWORD *)v106 = *(_OWORD *)v107;
          *((_OWORD *)v106 + 1) = v117;
          *((_QWORD *)v106 + 4) = *((_QWORD *)v107 + 4);
        }
        memcpy(v106 + 40, v107 + 40, 0x84uLL);
      }
      swift_storeEnumTagMultiPayload();
      return a1;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      goto LABEL_17;
  }
}

char *assignWithCopy for ParticipantViewRepresentableViewModel(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  void *v17;
  const void *v18;
  size_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  char *v28;
  char *v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  int *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  void *v45;
  void *v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  void *v59;
  void *v60;
  id v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  int EnumTagSinglePayload;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  int v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  int EnumCaseMultiPayload;
  int *v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  int *v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  char *v95;
  char *v96;
  void *v97;
  uint64_t v98;
  id v99;
  int *v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  __int128 v108;
  __int128 v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  void *v117;
  uint64_t v118;
  void *v119;
  id v120;
  void *v121;
  uint64_t v122;
  void *v123;
  id v124;
  id v125;
  id v126;
  void *v127;
  id v128;
  void *v129;
  id v130;
  __int128 v131;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;

  if (a1 != a2)
  {
    outlined destroy of RemoteControlRequest((uint64_t)a1, type metadata accessor for Participant.State);
    v6 = type metadata accessor for Participant.State(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        v7 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
        goto LABEL_17;
      case 4u:
        v8 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
        v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        v10 = *(int *)(v9 + 48);
        v11 = &a1[v10];
        v12 = &a2[v10];
        *(_OWORD *)v11 = *(_OWORD *)&a2[v10];
        *((_QWORD *)v11 + 2) = *(_QWORD *)&a2[v10 + 16];
        v13 = *(_QWORD *)&a2[v10 + 24];
        *((_WORD *)v11 + 16) = *((_WORD *)v12 + 16);
        *((_QWORD *)v11 + 3) = v13;
        *((_QWORD *)v11 + 5) = *((_QWORD *)v12 + 5);
        v11[48] = v12[48];
        v14 = *(_OWORD *)(v12 + 72);
        v15 = *(_OWORD *)(v12 + 56);
        v11[88] = v12[88];
        *(_OWORD *)(v11 + 56) = v15;
        *(_OWORD *)(v11 + 72) = v14;
        v11[89] = v12[89];
        v16 = *((_QWORD *)v12 + 15);
        swift_bridgeObjectRetain();
        if (v16)
        {
          if (v16 == 1)
          {
            v17 = v11 + 96;
            v18 = v12 + 96;
            v19 = 209;
            goto LABEL_11;
          }
          *((_QWORD *)v11 + 15) = v16;
          *((_QWORD *)v11 + 16) = *((_QWORD *)v12 + 16);
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v16 - 8))((uint64_t)(v11 + 96), (uint64_t)(v12 + 96), v16);
        }
        else
        {
          v20 = *((_OWORD *)v12 + 6);
          v21 = *((_OWORD *)v12 + 7);
          *((_QWORD *)v11 + 16) = *((_QWORD *)v12 + 16);
          *((_OWORD *)v11 + 6) = v20;
          *((_OWORD *)v11 + 7) = v21;
        }
        *((_DWORD *)v11 + 34) = *((_DWORD *)v12 + 34);
        *((_QWORD *)v11 + 18) = *((_QWORD *)v12 + 18);
        *((_QWORD *)v11 + 19) = *((_QWORD *)v12 + 19);
        v22 = *((_OWORD *)v12 + 10);
        v23 = *((_OWORD *)v12 + 11);
        v11[192] = v12[192];
        *((_OWORD *)v11 + 10) = v22;
        *((_OWORD *)v11 + 11) = v23;
        *((_QWORD *)v11 + 25) = *((_QWORD *)v12 + 25);
        v17 = v11 + 208;
        v18 = v12 + 208;
        v19 = 97;
LABEL_11:
        memcpy(v17, v18, v19);
        v24 = *((_QWORD *)v12 + 39);
        if (v24)
        {
          v25 = *((_QWORD *)v12 + 40);
          *((_QWORD *)v11 + 39) = v24;
          *((_QWORD *)v11 + 40) = v25;
          *((_QWORD *)v11 + 41) = *((_QWORD *)v12 + 41);
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v26 = *(_OWORD *)(v12 + 312);
          *((_QWORD *)v11 + 41) = *((_QWORD *)v12 + 41);
          *(_OWORD *)(v11 + 312) = v26;
        }
        v27 = *(int *)(v9 + 64);
        v28 = &a1[v27];
        v29 = &a2[v27];
        if (*((_QWORD *)v29 + 1))
        {
          *(_QWORD *)v28 = *(_QWORD *)v29;
          *((_QWORD *)v28 + 1) = *((_QWORD *)v29 + 1);
          *((_QWORD *)v28 + 2) = *((_QWORD *)v29 + 2);
          *((_QWORD *)v28 + 3) = *((_QWORD *)v29 + 3);
          v28[32] = v29[32];
          *((_QWORD *)v28 + 5) = *((_QWORD *)v29 + 5);
          *((_QWORD *)v28 + 6) = *((_QWORD *)v29 + 6);
          *((_QWORD *)v28 + 7) = *((_QWORD *)v29 + 7);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v30 = *(_OWORD *)v29;
          v31 = *((_OWORD *)v29 + 1);
          v32 = *((_OWORD *)v29 + 3);
          *((_OWORD *)v28 + 2) = *((_OWORD *)v29 + 2);
          *((_OWORD *)v28 + 3) = v32;
          *(_OWORD *)v28 = v30;
          *((_OWORD *)v28 + 1) = v31;
        }
LABEL_17:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        break;
    }
  }
  v33 = (int *)type metadata accessor for Participant(0);
  v34 = v33[5];
  v35 = &a1[v34];
  v36 = &a2[v34];
  v37 = type metadata accessor for UUID();
  v38 = *(_QWORD *)(v37 - 8);
  (*(void (**)(char *, char *, uint64_t))(v38 + 24))(v35, v36, v37);
  v39 = v33[6];
  v40 = &a1[v39];
  v41 = &a2[v39];
  *v40 = *v41;
  v40[1] = v41[1];
  v40[2] = v41[2];
  v40[3] = v41[3];
  v40[4] = v41[4];
  v42 = v33[7];
  v43 = &a1[v42];
  v44 = &a2[v42];
  v45 = *(void **)&a1[v42];
  v46 = *(void **)&a2[v42];
  v134 = v37;
  if (v45)
  {
    if (v46)
    {
      *(_QWORD *)v43 = v46;
      v47 = v46;

      v48 = *((_QWORD *)v44 + 1);
      v43[16] = v44[16];
      *((_QWORD *)v43 + 1) = v48;
      *((_QWORD *)v43 + 3) = *((_QWORD *)v44 + 3);
      *((_QWORD *)v43 + 4) = *((_QWORD *)v44 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      outlined destroy of Participant.RemoteIdentifiers((id *)v43);
      v51 = *((_QWORD *)v44 + 4);
      v52 = *((_OWORD *)v44 + 1);
      *(_OWORD *)v43 = *(_OWORD *)v44;
      *((_OWORD *)v43 + 1) = v52;
      *((_QWORD *)v43 + 4) = v51;
    }
  }
  else if (v46)
  {
    *(_QWORD *)v43 = v46;
    v49 = *((_QWORD *)v44 + 1);
    v43[16] = v44[16];
    *((_QWORD *)v43 + 1) = v49;
    *((_QWORD *)v43 + 3) = *((_QWORD *)v44 + 3);
    *((_QWORD *)v43 + 4) = *((_QWORD *)v44 + 4);
    v50 = v46;
    swift_bridgeObjectRetain();
  }
  else
  {
    v53 = *(_OWORD *)v44;
    v54 = *((_OWORD *)v44 + 1);
    *((_QWORD *)v43 + 4) = *((_QWORD *)v44 + 4);
    *(_OWORD *)v43 = v53;
    *((_OWORD *)v43 + 1) = v54;
  }
  *(_QWORD *)&a1[v33[8]] = *(_QWORD *)&a2[v33[8]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v55 = v33[9];
  v56 = &a1[v55];
  v57 = &a2[v55];
  *(_QWORD *)v56 = *(_QWORD *)v57;
  *((_QWORD *)v56 + 1) = *((_QWORD *)v57 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[v33[10]] = a2[v33[10]];
  *(_QWORD *)&a1[v33[11]] = *(_QWORD *)&a2[v33[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v58 = v33[12];
  v59 = *(void **)&a1[v58];
  v60 = *(void **)&a2[v58];
  *(_QWORD *)&a1[v58] = v60;
  v61 = v60;

  a1[v33[13]] = a2[v33[13]];
  v62 = v33[14];
  v63 = &a1[v62];
  v64 = &a2[v62];
  v65 = type metadata accessor for Date();
  LODWORD(v59) = __swift_getEnumTagSinglePayload((uint64_t)v63, 1, v65);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v64, 1, v65);
  v135 = a3;
  v133 = v38;
  if ((_DWORD)v59)
  {
    if (!EnumTagSinglePayload)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 16))(v63, v64, v65);
      __swift_storeEnumTagSinglePayload((uint64_t)v63, 0, 1, v65);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  v67 = *(_QWORD *)(v65 - 8);
  if (EnumTagSinglePayload)
  {
    (*(void (**)(char *, uint64_t))(v67 + 8))(v63, v65);
LABEL_30:
    v68 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v67 + 24))(v63, v64, v65);
LABEL_31:
  v69 = type metadata accessor for Participant.CountdownInfo(0);
  v70 = *(int *)(v69 + 20);
  v71 = &v63[v70];
  v72 = &v64[v70];
  v73 = __swift_getEnumTagSinglePayload((uint64_t)&v63[v70], 1, v65);
  v74 = __swift_getEnumTagSinglePayload((uint64_t)v72, 1, v65);
  if (v73)
  {
    if (!v74)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 16))(v71, v72, v65);
      __swift_storeEnumTagSinglePayload((uint64_t)v71, 0, 1, v65);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  v75 = *(_QWORD *)(v65 - 8);
  if (v74)
  {
    (*(void (**)(char *, uint64_t))(v75 + 8))(v71, v65);
LABEL_36:
    v76 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v75 + 24))(v71, v72, v65);
LABEL_37:
  v63[*(int *)(v69 + 24)] = v64[*(int *)(v69 + 24)];
  a1[v33[15]] = a2[v33[15]];
  *(_QWORD *)&a1[v33[16]] = *(_QWORD *)&a2[v33[16]];
  swift_retain();
  swift_release();
  a1[*(int *)(v135 + 20)] = a2[*(int *)(v135 + 20)];
  if (a1 != a2)
  {
    v77 = *(int *)(v135 + 24);
    v78 = &a1[v77];
    v79 = &a2[v77];
    outlined destroy of RemoteControlRequest((uint64_t)&a1[v77], type metadata accessor for ParticipantViewModel);
    type metadata accessor for ParticipantViewModel(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      (*(void (**)(char *, char *, uint64_t))(v133 + 16))(v78, v79, v134);
      v90 = (int *)type metadata accessor for ParticipantViewModel.ParticipantDetails(0);
      v91 = v90[5];
      v92 = &v78[v91];
      v93 = &v79[v91];
      *(_QWORD *)v92 = *(_QWORD *)v93;
      *((_QWORD *)v92 + 1) = *((_QWORD *)v93 + 1);
      v78[v90[6]] = v79[v90[6]];
      v78[v90[7]] = v79[v90[7]];
      v78[v90[8]] = v79[v90[8]];
      v78[v90[9]] = v79[v90[9]];
      v78[v90[10]] = v79[v90[10]];
      v78[v90[11]] = v79[v90[11]];
      swift_bridgeObjectRetain();
      v94 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantMonogramView.ViewModel))
                   + 48);
      v95 = &v78[v94];
      v96 = &v79[v94];
      v97 = *(void **)&v79[v94];
      *(_QWORD *)v95 = v97;
      *((_QWORD *)v95 + 1) = *((_QWORD *)v96 + 1);
      *((_QWORD *)v95 + 2) = *((_QWORD *)v96 + 2);
      *((_QWORD *)v95 + 3) = *((_QWORD *)v96 + 3);
      *((_QWORD *)v95 + 4) = *((_QWORD *)v96 + 4);
      *((_QWORD *)v95 + 5) = *((_QWORD *)v96 + 5);
      *((_QWORD *)v95 + 6) = *((_QWORD *)v96 + 6);
      *((_QWORD *)v95 + 7) = *((_QWORD *)v96 + 7);
      v95[64] = v96[64];
      v95[65] = v96[65];
      v98 = *((_QWORD *)v96 + 10);
      v99 = v97;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v98)
      {
        *((_QWORD *)v95 + 9) = *((_QWORD *)v96 + 9);
        *((_QWORD *)v95 + 10) = *((_QWORD *)v96 + 10);
        *((_QWORD *)v95 + 11) = *((_QWORD *)v96 + 11);
        *((_QWORD *)v95 + 12) = *((_QWORD *)v96 + 12);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v114 = *(_OWORD *)(v96 + 88);
        *(_OWORD *)(v95 + 72) = *(_OWORD *)(v96 + 72);
        *(_OWORD *)(v95 + 88) = v114;
      }
    }
    else if (EnumCaseMultiPayload == 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v133 + 16))(v78, v79, v134);
      v81 = (int *)type metadata accessor for ParticipantViewModel.ParticipantDetails(0);
      v82 = v81[5];
      v83 = &v78[v82];
      v84 = &v79[v82];
      *(_QWORD *)v83 = *(_QWORD *)v84;
      *((_QWORD *)v83 + 1) = *((_QWORD *)v84 + 1);
      v78[v81[6]] = v79[v81[6]];
      v78[v81[7]] = v79[v81[7]];
      v78[v81[8]] = v79[v81[8]];
      v78[v81[9]] = v79[v81[9]];
      v78[v81[10]] = v79[v81[10]];
      v78[v81[11]] = v79[v81[11]];
      swift_bridgeObjectRetain();
      v85 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantVideoView.ViewModel, ParticipantVideoOverlayView.ViewModel));
      v86 = *(int *)(v85 + 48);
      v87 = &v78[v86];
      v88 = &v79[v86];
      v89 = *(_QWORD *)&v79[v86 + 24];
      if (v89)
      {
        *((_QWORD *)v87 + 3) = v89;
        *((_QWORD *)v87 + 4) = *((_QWORD *)v88 + 4);
        (**(void (***)(char *, char *))(v89 - 8))(v87, v88);
      }
      else
      {
        v108 = *(_OWORD *)v88;
        v109 = *((_OWORD *)v88 + 1);
        *((_QWORD *)v87 + 4) = *((_QWORD *)v88 + 4);
        *(_OWORD *)v87 = v108;
        *((_OWORD *)v87 + 1) = v109;
      }
      memcpy(v87 + 40, v88 + 40, 0x84uLL);
      v110 = *(int *)(v85 + 64);
      v111 = &v78[v110];
      v112 = &v79[v110];
      switch(v112[104])
      {
        case 1:
          v113 = *((_QWORD *)v112 + 3);
          *((_QWORD *)v111 + 3) = v113;
          *((_QWORD *)v111 + 4) = *((_QWORD *)v112 + 4);
          (**(void (***)(void *, char *))(v113 - 8))(v111, v112);
          *((_QWORD *)v111 + 5) = *((_QWORD *)v112 + 5);
          *((_QWORD *)v111 + 6) = *((_QWORD *)v112 + 6);
          v111[104] = 1;
          swift_bridgeObjectRetain();
          break;
        case 2:
          *(_QWORD *)v111 = *(_QWORD *)v112;
          *((_QWORD *)v111 + 1) = *((_QWORD *)v112 + 1);
          *((_QWORD *)v111 + 2) = *((_QWORD *)v112 + 2);
          v117 = (void *)*((_QWORD *)v112 + 3);
          *((_QWORD *)v111 + 3) = v117;
          v111[32] = v112[32];
          v111[33] = v112[33];
          v118 = *((_QWORD *)v112 + 5);
          v111[48] = v112[48];
          *((_QWORD *)v111 + 5) = v118;
          v119 = (void *)*((_QWORD *)v112 + 7);
          *((_QWORD *)v111 + 7) = v119;
          v111[104] = 2;
          swift_bridgeObjectRetain();
          v120 = v117;
          goto LABEL_57;
        case 3:
          *(_QWORD *)v111 = *(_QWORD *)v112;
          *((_QWORD *)v111 + 1) = *((_QWORD *)v112 + 1);
          *((_QWORD *)v111 + 2) = *((_QWORD *)v112 + 2);
          v121 = (void *)*((_QWORD *)v112 + 3);
          *((_QWORD *)v111 + 3) = v121;
          v111[32] = v112[32];
          v111[33] = v112[33];
          v122 = *((_QWORD *)v112 + 5);
          v111[48] = v112[48];
          *((_QWORD *)v111 + 5) = v122;
          v123 = (void *)*((_QWORD *)v112 + 7);
          *((_QWORD *)v111 + 7) = v123;
          *((_QWORD *)v111 + 8) = *((_QWORD *)v112 + 8);
          *((_QWORD *)v111 + 9) = *((_QWORD *)v112 + 9);
          v119 = (void *)*((_QWORD *)v112 + 10);
          *((_QWORD *)v111 + 10) = v119;
          v111[104] = 3;
          swift_bridgeObjectRetain();
          v124 = v121;
          v125 = v123;
          swift_bridgeObjectRetain();
LABEL_57:
          v126 = v119;
          break;
        case 4:
          v127 = *(void **)v112;
          *(_QWORD *)v111 = *(_QWORD *)v112;
          *((_QWORD *)v111 + 1) = *((_QWORD *)v112 + 1);
          *((_QWORD *)v111 + 2) = *((_QWORD *)v112 + 2);
          *((_QWORD *)v111 + 3) = *((_QWORD *)v112 + 3);
          *((_QWORD *)v111 + 4) = *((_QWORD *)v112 + 4);
          *((_QWORD *)v111 + 5) = *((_QWORD *)v112 + 5);
          *((_QWORD *)v111 + 6) = *((_QWORD *)v112 + 6);
          *((_QWORD *)v111 + 7) = *((_QWORD *)v112 + 7);
          v111[64] = v112[64];
          v111[65] = v112[65];
          v136 = *((_QWORD *)v112 + 10);
          v128 = v127;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v136)
          {
            *((_QWORD *)v111 + 9) = *((_QWORD *)v112 + 9);
            *((_QWORD *)v111 + 10) = *((_QWORD *)v112 + 10);
            *((_QWORD *)v111 + 11) = *((_QWORD *)v112 + 11);
            *((_QWORD *)v111 + 12) = *((_QWORD *)v112 + 12);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            v131 = *(_OWORD *)(v112 + 88);
            *(_OWORD *)(v111 + 72) = *(_OWORD *)(v112 + 72);
            *(_OWORD *)(v111 + 88) = v131;
          }
          v111[104] = 4;
          break;
        case 5:
          v129 = *(void **)v112;
          *(_QWORD *)v111 = *(_QWORD *)v112;
          v111[104] = 5;
          v130 = v129;
          break;
        default:
          memcpy(v111, v112, 0x69uLL);
          break;
      }
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v133 + 16))(v78, v79, v134);
      v100 = (int *)type metadata accessor for ParticipantViewModel.ParticipantDetails(0);
      v101 = v100[5];
      v102 = &v78[v101];
      v103 = &v79[v101];
      *(_QWORD *)v102 = *(_QWORD *)v103;
      *((_QWORD *)v102 + 1) = *((_QWORD *)v103 + 1);
      v78[v100[6]] = v79[v100[6]];
      v78[v100[7]] = v79[v100[7]];
      v78[v100[8]] = v79[v100[8]];
      v78[v100[9]] = v79[v100[9]];
      v78[v100[10]] = v79[v100[10]];
      v78[v100[11]] = v79[v100[11]];
      swift_bridgeObjectRetain();
      v104 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantVideoView.ViewModel))
                    + 48);
      v105 = &v78[v104];
      v106 = &v79[v104];
      v107 = *((_QWORD *)v106 + 3);
      if (v107)
      {
        *((_QWORD *)v105 + 3) = v107;
        *((_QWORD *)v105 + 4) = *((_QWORD *)v106 + 4);
        (**(void (***)(char *, char *))(v107 - 8))(v105, v106);
      }
      else
      {
        v115 = *(_OWORD *)v106;
        v116 = *((_OWORD *)v106 + 1);
        *((_QWORD *)v105 + 4) = *((_QWORD *)v106 + 4);
        *(_OWORD *)v105 = v115;
        *((_OWORD *)v105 + 1) = v116;
      }
      memcpy(v105 + 40, v106 + 40, 0x84uLL);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *initializeWithTake for ParticipantViewRepresentableViewModel(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  __int128 v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  int EnumCaseMultiPayload;
  int *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  size_t v45;
  int *v46;
  uint64_t v47;
  uint64_t v48;
  void (*v50)(char *, char *, uint64_t);

  v5 = type metadata accessor for Participant.State(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 5u:
      v13 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a1, a2, v13);
      goto LABEL_5;
    case 4u:
      v6 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      memcpy(&a1[*(int *)(v7 + 48)], &a2[*(int *)(v7 + 48)], 0x150uLL);
      v8 = *(int *)(v7 + 64);
      v9 = &a1[v8];
      v10 = &a2[v8];
      v11 = *((_OWORD *)v10 + 1);
      *(_OWORD *)v9 = *(_OWORD *)v10;
      *((_OWORD *)v9 + 1) = v11;
      v12 = *((_OWORD *)v10 + 3);
      *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
      *((_OWORD *)v9 + 3) = v12;
LABEL_5:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
      break;
  }
  v14 = (int *)type metadata accessor for Participant(0);
  v15 = v14[5];
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = type metadata accessor for UUID();
  v50 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32);
  v50(v16, v17, v18);
  v19 = v14[6];
  v20 = &a1[v19];
  v21 = &a2[v19];
  *(_DWORD *)v20 = *(_DWORD *)v21;
  v20[4] = v21[4];
  v22 = v14[7];
  v23 = &a1[v22];
  v24 = &a2[v22];
  v25 = *((_OWORD *)v24 + 1);
  *(_OWORD *)v23 = *(_OWORD *)v24;
  *((_OWORD *)v23 + 1) = v25;
  *((_QWORD *)v23 + 4) = *((_QWORD *)v24 + 4);
  *(_QWORD *)&a1[v14[8]] = *(_QWORD *)&a2[v14[8]];
  *(_OWORD *)&a1[v14[9]] = *(_OWORD *)&a2[v14[9]];
  a1[v14[10]] = a2[v14[10]];
  *(_QWORD *)&a1[v14[11]] = *(_QWORD *)&a2[v14[11]];
  *(_QWORD *)&a1[v14[12]] = *(_QWORD *)&a2[v14[12]];
  a1[v14[13]] = a2[v14[13]];
  v26 = v14[14];
  v27 = &a1[v26];
  v28 = &a2[v26];
  v29 = type metadata accessor for Date();
  if (__swift_getEnumTagSinglePayload((uint64_t)v28, 1, v29))
  {
    v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v27, v28, v29);
    __swift_storeEnumTagSinglePayload((uint64_t)v27, 0, 1, v29);
  }
  v31 = type metadata accessor for Participant.CountdownInfo(0);
  v32 = *(int *)(v31 + 20);
  v33 = &v27[v32];
  v34 = &v28[v32];
  if (__swift_getEnumTagSinglePayload((uint64_t)&v28[v32], 1, v29))
  {
    v35 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v33, v34, v29);
    __swift_storeEnumTagSinglePayload((uint64_t)v33, 0, 1, v29);
  }
  v27[*(int *)(v31 + 24)] = v28[*(int *)(v31 + 24)];
  a1[v14[15]] = a2[v14[15]];
  *(_QWORD *)&a1[v14[16]] = *(_QWORD *)&a2[v14[16]];
  v36 = *(int *)(a3 + 24);
  a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
  v37 = &a1[v36];
  v38 = &a2[v36];
  type metadata accessor for ParticipantViewModel(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v50(v37, v38, v18);
    v46 = (int *)type metadata accessor for ParticipantViewModel.ParticipantDetails(0);
    *(_OWORD *)&v37[v46[5]] = *(_OWORD *)&v38[v46[5]];
    v37[v46[6]] = v38[v46[6]];
    v37[v46[7]] = v38[v46[7]];
    v37[v46[8]] = v38[v46[8]];
    v37[v46[9]] = v38[v46[9]];
    v37[v46[10]] = v38[v46[10]];
    v37[v46[11]] = v38[v46[11]];
    v47 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantMonogramView.ViewModel))
                 + 48);
    v43 = &v37[v47];
    v44 = &v38[v47];
    v45 = 104;
  }
  else
  {
    v50(v37, v38, v18);
    v40 = (int *)type metadata accessor for ParticipantViewModel.ParticipantDetails(0);
    *(_OWORD *)&v37[v40[5]] = *(_OWORD *)&v38[v40[5]];
    v37[v40[6]] = v38[v40[6]];
    v37[v40[7]] = v38[v40[7]];
    v37[v40[8]] = v38[v40[8]];
    v37[v40[9]] = v38[v40[9]];
    v37[v40[10]] = v38[v40[10]];
    v37[v40[11]] = v38[v40[11]];
    if (EnumCaseMultiPayload == 1)
    {
      v41 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantVideoView.ViewModel, ParticipantVideoOverlayView.ViewModel));
      memcpy(&v37[*(int *)(v41 + 48)], &v38[*(int *)(v41 + 48)], 0xACuLL);
      v42 = *(int *)(v41 + 64);
      v43 = &v37[v42];
      v44 = &v38[v42];
      v45 = 105;
    }
    else
    {
      v48 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantVideoView.ViewModel))
                   + 48);
      v43 = &v37[v48];
      v44 = &v38[v48];
      v45 = 172;
    }
  }
  memcpy(v43, v44, v45);
  swift_storeEnumTagMultiPayload();
  return a1;
}

char *assignWithTake for ParticipantViewRepresentableViewModel(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  void *v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  int EnumTagSinglePayload;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  int v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  int EnumCaseMultiPayload;
  int *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  size_t v60;
  int *v61;
  uint64_t v62;
  int *v63;
  uint64_t v64;
  uint64_t v66;
  uint64_t v67;

  if (a1 != a2)
  {
    outlined destroy of RemoteControlRequest((uint64_t)a1, type metadata accessor for Participant.State);
    v5 = type metadata accessor for Participant.State(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        v13 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a1, a2, v13);
        goto LABEL_5;
      case 4u:
        v6 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
        v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        memcpy(&a1[*(int *)(v7 + 48)], &a2[*(int *)(v7 + 48)], 0x150uLL);
        v8 = *(int *)(v7 + 64);
        v9 = &a1[v8];
        v10 = &a2[v8];
        v11 = *((_OWORD *)v10 + 1);
        *(_OWORD *)v9 = *(_OWORD *)v10;
        *((_OWORD *)v9 + 1) = v11;
        v12 = *((_OWORD *)v10 + 3);
        *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
        *((_OWORD *)v9 + 3) = v12;
LABEL_5:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
        break;
    }
  }
  v14 = (int *)type metadata accessor for Participant(0);
  v15 = v14[5];
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = type metadata accessor for UUID();
  v66 = *(_QWORD *)(v18 - 8);
  v67 = v18;
  (*(void (**)(char *, char *))(v66 + 40))(v16, v17);
  v19 = v14[6];
  v20 = &a1[v19];
  v21 = &a2[v19];
  *v20 = *v21;
  v20[1] = v21[1];
  v20[2] = v21[2];
  v20[3] = v21[3];
  v20[4] = v21[4];
  v22 = v14[7];
  v23 = &a1[v22];
  v24 = &a2[v22];
  v25 = *(void **)&a1[v22];
  if (v25)
  {
    if (*(_QWORD *)v24)
    {
      *(_QWORD *)v23 = *(_QWORD *)v24;

      *((_QWORD *)v23 + 1) = *((_QWORD *)v24 + 1);
      v23[16] = v24[16];
      v26 = *((_QWORD *)v24 + 4);
      *((_QWORD *)v23 + 3) = *((_QWORD *)v24 + 3);
      *((_QWORD *)v23 + 4) = v26;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    outlined destroy of Participant.RemoteIdentifiers((id *)v23);
  }
  v27 = *((_OWORD *)v24 + 1);
  *(_OWORD *)v23 = *(_OWORD *)v24;
  *((_OWORD *)v23 + 1) = v27;
  *((_QWORD *)v23 + 4) = *((_QWORD *)v24 + 4);
LABEL_11:
  *(_QWORD *)&a1[v14[8]] = *(_QWORD *)&a2[v14[8]];
  swift_bridgeObjectRelease();
  v28 = v14[9];
  v29 = &a1[v28];
  v30 = &a2[v28];
  v32 = *(_QWORD *)v30;
  v31 = *((_QWORD *)v30 + 1);
  *(_QWORD *)v29 = v32;
  *((_QWORD *)v29 + 1) = v31;
  swift_bridgeObjectRelease();
  a1[v14[10]] = a2[v14[10]];
  *(_QWORD *)&a1[v14[11]] = *(_QWORD *)&a2[v14[11]];
  swift_bridgeObjectRelease();
  v33 = v14[12];
  v34 = *(void **)&a1[v33];
  *(_QWORD *)&a1[v33] = *(_QWORD *)&a2[v33];

  a1[v14[13]] = a2[v14[13]];
  v35 = v14[14];
  v36 = &a1[v35];
  v37 = &a2[v35];
  v38 = type metadata accessor for Date();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v36, 1, v38);
  v40 = __swift_getEnumTagSinglePayload((uint64_t)v37, 1, v38);
  if (EnumTagSinglePayload)
  {
    if (!v40)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
      __swift_storeEnumTagSinglePayload((uint64_t)v36, 0, 1, v38);
      goto LABEL_17;
    }
    goto LABEL_16;
  }
  v41 = *(_QWORD *)(v38 - 8);
  if (v40)
  {
    (*(void (**)(char *, uint64_t))(v41 + 8))(v36, v38);
LABEL_16:
    v42 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    goto LABEL_17;
  }
  (*(void (**)(char *, char *, uint64_t))(v41 + 40))(v36, v37, v38);
LABEL_17:
  v43 = type metadata accessor for Participant.CountdownInfo(0);
  v44 = *(int *)(v43 + 20);
  v45 = &v36[v44];
  v46 = &v37[v44];
  v47 = __swift_getEnumTagSinglePayload((uint64_t)&v36[v44], 1, v38);
  v48 = __swift_getEnumTagSinglePayload((uint64_t)v46, 1, v38);
  if (v47)
  {
    if (!v48)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v45, v46, v38);
      __swift_storeEnumTagSinglePayload((uint64_t)v45, 0, 1, v38);
      goto LABEL_23;
    }
    goto LABEL_22;
  }
  v49 = *(_QWORD *)(v38 - 8);
  if (v48)
  {
    (*(void (**)(char *, uint64_t))(v49 + 8))(v45, v38);
LABEL_22:
    v50 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
    goto LABEL_23;
  }
  (*(void (**)(char *, char *, uint64_t))(v49 + 40))(v45, v46, v38);
LABEL_23:
  v36[*(int *)(v43 + 24)] = v37[*(int *)(v43 + 24)];
  a1[v14[15]] = a2[v14[15]];
  *(_QWORD *)&a1[v14[16]] = *(_QWORD *)&a2[v14[16]];
  swift_release();
  a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
  if (a1 != a2)
  {
    v51 = *(int *)(a3 + 24);
    v52 = &a1[v51];
    v53 = &a2[v51];
    outlined destroy of RemoteControlRequest((uint64_t)&a1[v51], type metadata accessor for ParticipantViewModel);
    type metadata accessor for ParticipantViewModel(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      (*(void (**)(char *, char *, uint64_t))(v66 + 32))(v52, v53, v67);
      v61 = (int *)type metadata accessor for ParticipantViewModel.ParticipantDetails(0);
      *(_OWORD *)&v52[v61[5]] = *(_OWORD *)&v53[v61[5]];
      v52[v61[6]] = v53[v61[6]];
      v52[v61[7]] = v53[v61[7]];
      v52[v61[8]] = v53[v61[8]];
      v52[v61[9]] = v53[v61[9]];
      v52[v61[10]] = v53[v61[10]];
      v52[v61[11]] = v53[v61[11]];
      v62 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantMonogramView.ViewModel))
                   + 48);
      v58 = &v52[v62];
      v59 = &v53[v62];
      v60 = 104;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v66 + 32))(v52, v53, v67);
      v55 = (int *)type metadata accessor for ParticipantViewModel.ParticipantDetails(0);
      *(_OWORD *)&v52[v55[5]] = *(_OWORD *)&v53[v55[5]];
      v52[v55[6]] = v53[v55[6]];
      v52[v55[7]] = v53[v55[7]];
      v52[v55[8]] = v53[v55[8]];
      v52[v55[9]] = v53[v55[9]];
      v52[v55[10]] = v53[v55[10]];
      v52[v55[11]] = v53[v55[11]];
      v56 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantVideoView.ViewModel, ParticipantVideoOverlayView.ViewModel));
      memcpy(&v52[*(int *)(v56 + 48)], &v53[*(int *)(v56 + 48)], 0xACuLL);
      v57 = *(int *)(v56 + 64);
      v58 = &v52[v57];
      v59 = &v53[v57];
      v60 = 105;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v66 + 32))(v52, v53, v67);
      v63 = (int *)type metadata accessor for ParticipantViewModel.ParticipantDetails(0);
      *(_OWORD *)&v52[v63[5]] = *(_OWORD *)&v53[v63[5]];
      v52[v63[6]] = v53[v63[6]];
      v52[v63[7]] = v53[v63[7]];
      v52[v63[8]] = v53[v63[8]];
      v52[v63[9]] = v53[v63[9]];
      v52[v63[10]] = v53[v63[10]];
      v52[v63[11]] = v53[v63[11]];
      v64 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantVideoView.ViewModel))
                   + 48);
      v58 = &v52[v64];
      v59 = &v53[v64];
      v60 = 172;
    }
    memcpy(v58, v59, v60);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for ParticipantViewRepresentableViewModel()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BD45E54C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;

  v6 = OUTLINED_FUNCTION_11_85();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)v3)
  {
    v7 = v6;
    v8 = v4;
    return __swift_getEnumTagSinglePayload(v8, v3, v7);
  }
  if ((_DWORD)v3 != 254)
  {
    v7 = OUTLINED_FUNCTION_4_129();
    v8 = v4 + *(int *)(a3 + 24);
    return __swift_getEnumTagSinglePayload(v8, v3, v7);
  }
  v9 = *(unsigned __int8 *)(v4 + *(int *)(a3 + 20));
  if (v9 >= 2)
    return ((v9 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ParticipantViewRepresentableViewModel()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BD45E5F0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = OUTLINED_FUNCTION_11_85();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
  {
    v9 = result;
    v10 = v5;
  }
  else
  {
    if (a3 == 254)
    {
      *(_BYTE *)(v5 + *(int *)(a4 + 20)) = v4 + 1;
      return result;
    }
    v9 = OUTLINED_FUNCTION_4_129();
    v10 = v5 + *(int *)(a4 + 24);
  }
  return __swift_storeEnumTagSinglePayload(v10, v4, v4, v9);
}

uint64_t type metadata completion function for ParticipantViewRepresentableViewModel()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for Participant(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for ParticipantViewModel(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for ParticipantViewRepresentable(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  size_t v20;
  __int128 v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  int *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  __int128 v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  int EnumCaseMultiPayload;
  int *v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  int *v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  void *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  id v99;
  uint64_t v100;
  int *v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  __int128 v112;
  uint64_t v113;
  char *v114;
  char *v115;
  __int128 v116;
  uint64_t v117;
  __int128 v118;
  __int128 v119;
  uint64_t v120;
  void *v121;
  void *v122;
  id v123;
  uint64_t v124;
  void *v125;
  uint64_t v126;
  void *v127;
  uint64_t v128;
  id v129;
  id v130;
  id v131;
  void *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  id v138;
  uint64_t v139;
  uint64_t v140;
  void *v141;
  id v142;
  __int128 v143;
  uint64_t v145;
  void (*v146)(char *, char *, uint64_t);
  uint64_t v147;

  v4 = type metadata accessor for ParticipantViewRepresentableViewModel(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = v4;
    v7 = type metadata accessor for Participant.State(0);
    v147 = v6;
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        v8 = type metadata accessor for Date();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
        goto LABEL_18;
      case 4u:
        v10 = type metadata accessor for Date();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
        v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        v12 = *(int *)(v11 + 48);
        v13 = (char *)a1 + v12;
        v14 = (char *)a2 + v12;
        *(_OWORD *)v13 = *(_OWORD *)((char *)a2 + v12);
        v15 = *(_QWORD *)((char *)a2 + v12 + 16);
        v16 = *(_QWORD *)((char *)a2 + v12 + 24);
        *((_QWORD *)v13 + 2) = v15;
        *((_QWORD *)v13 + 3) = v16;
        *((_WORD *)v13 + 16) = *((_WORD *)v14 + 16);
        *((_QWORD *)v13 + 5) = *((_QWORD *)v14 + 5);
        v13[48] = v14[48];
        *(_OWORD *)(v13 + 56) = *(_OWORD *)(v14 + 56);
        *(_OWORD *)(v13 + 72) = *(_OWORD *)(v14 + 72);
        v13[88] = v14[88];
        v13[89] = v14[89];
        v17 = *((_QWORD *)v14 + 15);
        swift_bridgeObjectRetain();
        if (v17)
        {
          if (v17 == 1)
          {
            v18 = v13 + 96;
            v19 = v14 + 96;
            v20 = 209;
            goto LABEL_12;
          }
          v22 = *((_QWORD *)v14 + 16);
          *((_QWORD *)v13 + 15) = v17;
          *((_QWORD *)v13 + 16) = v22;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v17 - 8))((uint64_t)(v13 + 96), (uint64_t)(v14 + 96), v17);
        }
        else
        {
          v21 = *((_OWORD *)v14 + 7);
          *((_OWORD *)v13 + 6) = *((_OWORD *)v14 + 6);
          *((_OWORD *)v13 + 7) = v21;
          *((_QWORD *)v13 + 16) = *((_QWORD *)v14 + 16);
        }
        *((_DWORD *)v13 + 34) = *((_DWORD *)v14 + 34);
        v23 = *((_OWORD *)v14 + 10);
        *((_OWORD *)v13 + 9) = *((_OWORD *)v14 + 9);
        *((_OWORD *)v13 + 10) = v23;
        *((_OWORD *)v13 + 11) = *((_OWORD *)v14 + 11);
        v13[192] = v14[192];
        v18 = v13 + 208;
        v19 = v14 + 208;
        *((_QWORD *)v13 + 25) = *((_QWORD *)v14 + 25);
        v20 = 97;
LABEL_12:
        memcpy(v18, v19, v20);
        v24 = *((_QWORD *)v14 + 39);
        if (v24)
        {
          v25 = *((_QWORD *)v14 + 40);
          v26 = *((_QWORD *)v14 + 41);
          *((_QWORD *)v13 + 39) = v24;
          *((_QWORD *)v13 + 40) = v25;
          *((_QWORD *)v13 + 41) = v26;
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v13 + 312) = *(_OWORD *)(v14 + 312);
          *((_QWORD *)v13 + 41) = *((_QWORD *)v14 + 41);
        }
        v27 = *(int *)(v11 + 64);
        v28 = (char *)a1 + v27;
        v29 = (char *)a2 + v27;
        v30 = *((_QWORD *)v29 + 1);
        if (v30)
        {
          *(_QWORD *)v28 = *(_QWORD *)v29;
          *((_QWORD *)v28 + 1) = v30;
          v31 = *((_QWORD *)v29 + 3);
          *((_QWORD *)v28 + 2) = *((_QWORD *)v29 + 2);
          *((_QWORD *)v28 + 3) = v31;
          v28[32] = v29[32];
          *(_OWORD *)(v28 + 40) = *(_OWORD *)(v29 + 40);
          *((_QWORD *)v28 + 7) = *((_QWORD *)v29 + 7);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v32 = *((_OWORD *)v29 + 1);
          *(_OWORD *)v28 = *(_OWORD *)v29;
          *((_OWORD *)v28 + 1) = v32;
          v33 = *((_OWORD *)v29 + 3);
          *((_OWORD *)v28 + 2) = *((_OWORD *)v29 + 2);
          *((_OWORD *)v28 + 3) = v33;
        }
LABEL_18:
        swift_storeEnumTagMultiPayload();
LABEL_19:
        v34 = (int *)type metadata accessor for Participant(0);
        v35 = v34[5];
        v36 = (char *)a1 + v35;
        v37 = (char *)a2 + v35;
        v38 = type metadata accessor for UUID();
        v39 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16);
        v39(v36, v37, v38);
        v40 = v34[6];
        v41 = (char *)a1 + v40;
        v42 = (char *)a2 + v40;
        v41[4] = v42[4];
        *(_DWORD *)v41 = *(_DWORD *)v42;
        v43 = v34[7];
        v44 = (char *)a1 + v43;
        v45 = (char *)a2 + v43;
        v46 = *(void **)v45;
        v145 = v38;
        v146 = v39;
        if (*(_QWORD *)v45)
        {
          v47 = *((_QWORD *)v45 + 1);
          *(_QWORD *)v44 = v46;
          *((_QWORD *)v44 + 1) = v47;
          v44[16] = v45[16];
          v48 = *((_QWORD *)v45 + 4);
          *((_QWORD *)v44 + 3) = *((_QWORD *)v45 + 3);
          *((_QWORD *)v44 + 4) = v48;
          v49 = v46;
          swift_bridgeObjectRetain();
        }
        else
        {
          v50 = *((_OWORD *)v45 + 1);
          *(_OWORD *)v44 = *(_OWORD *)v45;
          *((_OWORD *)v44 + 1) = v50;
          *((_QWORD *)v44 + 4) = *((_QWORD *)v45 + 4);
        }
        *(_QWORD *)((char *)a1 + v34[8]) = *(_QWORD *)((char *)a2 + v34[8]);
        v51 = v34[9];
        v52 = (_QWORD *)((char *)a1 + v51);
        v53 = (_QWORD *)((char *)a2 + v51);
        v54 = v53[1];
        *v52 = *v53;
        v52[1] = v54;
        *((_BYTE *)a1 + v34[10]) = *((_BYTE *)a2 + v34[10]);
        *(_QWORD *)((char *)a1 + v34[11]) = *(_QWORD *)((char *)a2 + v34[11]);
        v55 = v34[12];
        v56 = *(void **)((char *)a2 + v55);
        *(_QWORD *)((char *)a1 + v55) = v56;
        *((_BYTE *)a1 + v34[13]) = *((_BYTE *)a2 + v34[13]);
        v57 = v34[14];
        v58 = (char *)a1 + v57;
        v59 = (char *)a2 + v57;
        v60 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v61 = v56;
        if (__swift_getEnumTagSinglePayload((uint64_t)v59, 1, v60))
        {
          v62 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
          memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 16))(v58, v59, v60);
          __swift_storeEnumTagSinglePayload((uint64_t)v58, 0, 1, v60);
        }
        v63 = type metadata accessor for Participant.CountdownInfo(0);
        v64 = *(int *)(v63 + 20);
        v65 = &v58[v64];
        v66 = &v59[v64];
        if (__swift_getEnumTagSinglePayload((uint64_t)&v59[v64], 1, v60))
        {
          v67 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
          memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 16))(v65, v66, v60);
          __swift_storeEnumTagSinglePayload((uint64_t)v65, 0, 1, v60);
        }
        v58[*(int *)(v63 + 24)] = v59[*(int *)(v63 + 24)];
        *((_BYTE *)a1 + v34[15]) = *((_BYTE *)a2 + v34[15]);
        *(_QWORD *)((char *)a1 + v34[16]) = *(_QWORD *)((char *)a2 + v34[16]);
        *((_BYTE *)a1 + *(int *)(v147 + 20)) = *((_BYTE *)a2 + *(int *)(v147 + 20));
        v68 = *(int *)(v147 + 24);
        v69 = (char *)a1 + v68;
        v70 = (char *)a2 + v68;
        type metadata accessor for ParticipantViewModel(0);
        swift_retain();
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2)
        {
          v146(v69, v70, v145);
          v84 = (int *)type metadata accessor for ParticipantViewModel.ParticipantDetails(0);
          v85 = v84[5];
          v86 = &v69[v85];
          v87 = &v70[v85];
          v89 = *(_QWORD *)v87;
          v88 = *((_QWORD *)v87 + 1);
          *(_QWORD *)v86 = v89;
          *((_QWORD *)v86 + 1) = v88;
          v69[v84[6]] = v70[v84[6]];
          v69[v84[7]] = v70[v84[7]];
          v69[v84[8]] = v70[v84[8]];
          v69[v84[9]] = v70[v84[9]];
          v69[v84[10]] = v70[v84[10]];
          v69[v84[11]] = v70[v84[11]];
          swift_bridgeObjectRetain();
          v90 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantMonogramView.ViewModel))
                       + 48);
          v91 = &v69[v90];
          v92 = &v70[v90];
          v93 = *(void **)&v70[v90];
          v94 = *((_QWORD *)v92 + 1);
          *(_QWORD *)v91 = v93;
          *((_QWORD *)v91 + 1) = v94;
          v95 = *((_QWORD *)v92 + 3);
          *((_QWORD *)v91 + 2) = *((_QWORD *)v92 + 2);
          *((_QWORD *)v91 + 3) = v95;
          v96 = *((_QWORD *)v92 + 5);
          *((_QWORD *)v91 + 4) = *((_QWORD *)v92 + 4);
          *((_QWORD *)v91 + 5) = v96;
          v97 = *((_QWORD *)v92 + 7);
          *((_QWORD *)v91 + 6) = *((_QWORD *)v92 + 6);
          *((_QWORD *)v91 + 7) = v97;
          v91[64] = v92[64];
          v91[65] = v92[65];
          v98 = *((_QWORD *)v92 + 10);
          v99 = v93;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v98)
          {
            *((_QWORD *)v91 + 9) = *((_QWORD *)v92 + 9);
            *((_QWORD *)v91 + 10) = v98;
            v100 = *((_QWORD *)v92 + 12);
            *((_QWORD *)v91 + 11) = *((_QWORD *)v92 + 11);
            *((_QWORD *)v91 + 12) = v100;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            v118 = *(_OWORD *)(v92 + 88);
            *(_OWORD *)(v91 + 72) = *(_OWORD *)(v92 + 72);
            *(_OWORD *)(v91 + 88) = v118;
          }
        }
        else if (EnumCaseMultiPayload == 1)
        {
          v146(v69, v70, v145);
          v72 = (int *)type metadata accessor for ParticipantViewModel.ParticipantDetails(0);
          v73 = v72[5];
          v74 = &v69[v73];
          v75 = &v70[v73];
          v77 = *(_QWORD *)v75;
          v76 = *((_QWORD *)v75 + 1);
          *(_QWORD *)v74 = v77;
          *((_QWORD *)v74 + 1) = v76;
          v69[v72[6]] = v70[v72[6]];
          v69[v72[7]] = v70[v72[7]];
          v69[v72[8]] = v70[v72[8]];
          v69[v72[9]] = v70[v72[9]];
          v69[v72[10]] = v70[v72[10]];
          v69[v72[11]] = v70[v72[11]];
          swift_bridgeObjectRetain();
          v78 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantVideoView.ViewModel, ParticipantVideoOverlayView.ViewModel));
          v79 = *(int *)(v78 + 48);
          v80 = &v69[v79];
          v81 = &v70[v79];
          v82 = *(_QWORD *)&v70[v79 + 24];
          if (v82)
          {
            v83 = *((_QWORD *)v81 + 4);
            *((_QWORD *)v80 + 3) = v82;
            *((_QWORD *)v80 + 4) = v83;
            (**(void (***)(char *, char *))(v82 - 8))(v80, v81);
          }
          else
          {
            v112 = *((_OWORD *)v81 + 1);
            *(_OWORD *)v80 = *(_OWORD *)v81;
            *((_OWORD *)v80 + 1) = v112;
            *((_QWORD *)v80 + 4) = *((_QWORD *)v81 + 4);
          }
          memcpy(v80 + 40, v81 + 40, 0x84uLL);
          v113 = *(int *)(v78 + 64);
          v114 = &v69[v113];
          v115 = &v70[v113];
          switch(v115[104])
          {
            case 1:
              v116 = *(_OWORD *)(v115 + 24);
              *(_OWORD *)(v114 + 24) = v116;
              (**(void (***)(void *, char *))(v116 - 8))(v114, v115);
              v117 = *((_QWORD *)v115 + 6);
              *((_QWORD *)v114 + 5) = *((_QWORD *)v115 + 5);
              *((_QWORD *)v114 + 6) = v117;
              v114[104] = 1;
              swift_bridgeObjectRetain();
              break;
            case 2:
              v120 = *((_QWORD *)v115 + 1);
              *(_QWORD *)v114 = *(_QWORD *)v115;
              *((_QWORD *)v114 + 1) = v120;
              v121 = (void *)*((_QWORD *)v115 + 3);
              *((_QWORD *)v114 + 2) = *((_QWORD *)v115 + 2);
              *((_QWORD *)v114 + 3) = v121;
              *((_WORD *)v114 + 16) = *((_WORD *)v115 + 16);
              *((_QWORD *)v114 + 5) = *((_QWORD *)v115 + 5);
              v114[48] = v115[48];
              v122 = (void *)*((_QWORD *)v115 + 7);
              *((_QWORD *)v114 + 7) = v122;
              v114[104] = 2;
              swift_bridgeObjectRetain();
              v123 = v121;
              goto LABEL_45;
            case 3:
              v124 = *((_QWORD *)v115 + 1);
              *(_QWORD *)v114 = *(_QWORD *)v115;
              *((_QWORD *)v114 + 1) = v124;
              v125 = (void *)*((_QWORD *)v115 + 3);
              *((_QWORD *)v114 + 2) = *((_QWORD *)v115 + 2);
              *((_QWORD *)v114 + 3) = v125;
              *((_WORD *)v114 + 16) = *((_WORD *)v115 + 16);
              *((_QWORD *)v114 + 5) = *((_QWORD *)v115 + 5);
              v114[48] = v115[48];
              v127 = (void *)*((_QWORD *)v115 + 7);
              v126 = *((_QWORD *)v115 + 8);
              *((_QWORD *)v114 + 7) = v127;
              *((_QWORD *)v114 + 8) = v126;
              v128 = *((_QWORD *)v115 + 9);
              v122 = (void *)*((_QWORD *)v115 + 10);
              *((_QWORD *)v114 + 9) = v128;
              *((_QWORD *)v114 + 10) = v122;
              v114[104] = 3;
              swift_bridgeObjectRetain();
              v129 = v125;
              v130 = v127;
              swift_bridgeObjectRetain();
LABEL_45:
              v131 = v122;
              break;
            case 4:
              v132 = *(void **)v115;
              v133 = *((_QWORD *)v115 + 1);
              *(_QWORD *)v114 = *(_QWORD *)v115;
              *((_QWORD *)v114 + 1) = v133;
              v134 = *((_QWORD *)v115 + 3);
              *((_QWORD *)v114 + 2) = *((_QWORD *)v115 + 2);
              *((_QWORD *)v114 + 3) = v134;
              v135 = *((_QWORD *)v115 + 5);
              *((_QWORD *)v114 + 4) = *((_QWORD *)v115 + 4);
              *((_QWORD *)v114 + 5) = v135;
              v136 = *((_QWORD *)v115 + 7);
              *((_QWORD *)v114 + 6) = *((_QWORD *)v115 + 6);
              *((_QWORD *)v114 + 7) = v136;
              v114[64] = v115[64];
              v114[65] = v115[65];
              v137 = *((_QWORD *)v115 + 10);
              v138 = v132;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (v137)
              {
                *((_QWORD *)v114 + 9) = *((_QWORD *)v115 + 9);
                *((_QWORD *)v114 + 10) = v137;
                v139 = *((_QWORD *)v115 + 11);
                v140 = *((_QWORD *)v115 + 12);
                *((_QWORD *)v114 + 11) = v139;
                *((_QWORD *)v114 + 12) = v140;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
              }
              else
              {
                v143 = *(_OWORD *)(v115 + 88);
                *(_OWORD *)(v114 + 72) = *(_OWORD *)(v115 + 72);
                *(_OWORD *)(v114 + 88) = v143;
              }
              v114[104] = 4;
              break;
            case 5:
              v141 = *(void **)v115;
              *(_QWORD *)v114 = *(_QWORD *)v115;
              v114[104] = 5;
              v142 = v141;
              break;
            default:
              memcpy(v114, v115, 0x69uLL);
              break;
          }
        }
        else
        {
          v146(v69, v70, v145);
          v101 = (int *)type metadata accessor for ParticipantViewModel.ParticipantDetails(0);
          v102 = v101[5];
          v103 = &v69[v102];
          v104 = &v70[v102];
          v106 = *(_QWORD *)v104;
          v105 = *((_QWORD *)v104 + 1);
          *(_QWORD *)v103 = v106;
          *((_QWORD *)v103 + 1) = v105;
          v69[v101[6]] = v70[v101[6]];
          v69[v101[7]] = v70[v101[7]];
          v69[v101[8]] = v70[v101[8]];
          v69[v101[9]] = v70[v101[9]];
          v69[v101[10]] = v70[v101[10]];
          v69[v101[11]] = v70[v101[11]];
          swift_bridgeObjectRetain();
          v107 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantVideoView.ViewModel))
                        + 48);
          v108 = &v69[v107];
          v109 = &v70[v107];
          v110 = *((_QWORD *)v109 + 3);
          if (v110)
          {
            v111 = *((_QWORD *)v109 + 4);
            *((_QWORD *)v108 + 3) = v110;
            *((_QWORD *)v108 + 4) = v111;
            (**(void (***)(char *, char *))(v110 - 8))(v108, v109);
          }
          else
          {
            v119 = *((_OWORD *)v109 + 1);
            *(_OWORD *)v108 = *(_OWORD *)v109;
            *((_OWORD *)v108 + 1) = v119;
            *((_QWORD *)v108 + 4) = *((_QWORD *)v109 + 4);
          }
          memcpy(v108 + 40, v109 + 40, 0x84uLL);
        }
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
        goto LABEL_19;
    }
  }
  return a1;
}

void destroy for ParticipantViewRepresentable(uint64_t a1)
{
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  id *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;

  type metadata accessor for Participant.State(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 5u:
      v2 = type metadata accessor for Date();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
      break;
    case 4u:
      v17 = type metadata accessor for Date();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(a1, v17);
      v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      v19 = a1 + *(int *)(v18 + 48);
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v19 + 120) >= 2uLL)
        __swift_destroy_boxed_opaque_existential_1(v19 + 96);
      if (*(_QWORD *)(v19 + 312))
      {
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
      }
      if (*(_QWORD *)(a1 + *(int *)(v18 + 64) + 8))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      break;
    default:
      break;
  }
  v3 = (int *)type metadata accessor for Participant(0);
  v4 = a1 + v3[5];
  v5 = type metadata accessor for UUID();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v6(v4, v5);
  v7 = (id *)(a1 + v3[7]);
  if (*v7)
  {

    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v8 = a1 + v3[14];
  v9 = type metadata accessor for Date();
  if (!__swift_getEnumTagSinglePayload(v8, 1, v9))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  v10 = v8 + *(int *)(type metadata accessor for Participant.CountdownInfo(0) + 20);
  if (!__swift_getEnumTagSinglePayload(v10, 1, v9))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v10, v9);
  swift_release();
  v11 = a1 + *(int *)(type metadata accessor for ParticipantViewRepresentableViewModel(0) + 24);
  type metadata accessor for ParticipantViewModel(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v6(v11, v5);
      type metadata accessor for ParticipantViewModel.ParticipantDetails(0);
      swift_bridgeObjectRelease();
      v16 = v11
          + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantMonogramView.ViewModel))
                   + 48);
LABEL_19:

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v16 + 80))
      {
        swift_bridgeObjectRelease();
LABEL_21:
        swift_bridgeObjectRelease();
      }
      break;
    case 1:
      v6(v11, v5);
      type metadata accessor for ParticipantViewModel.ParticipantDetails(0);
      swift_bridgeObjectRelease();
      v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantVideoView.ViewModel, ParticipantVideoOverlayView.ViewModel));
      v15 = v11 + *(int *)(v14 + 48);
      if (*(_QWORD *)(v15 + 24))
        __swift_destroy_boxed_opaque_existential_1(v15);
      v16 = v11 + *(int *)(v14 + 64);
      switch(*(_BYTE *)(v16 + 104))
      {
        case 1:
          __swift_destroy_boxed_opaque_existential_1(v16);
          goto LABEL_21;
        case 2:
          swift_bridgeObjectRelease();

          v20 = *(id *)(v16 + 56);
          goto LABEL_32;
        case 3:
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          v20 = *(id *)(v16 + 80);
          goto LABEL_32;
        case 4:
          goto LABEL_19;
        case 5:
          v20 = *(id *)v16;
LABEL_32:

          break;
        default:
          return;
      }
      break;
    case 0:
      v6(v11, v5);
      type metadata accessor for ParticipantViewModel.ParticipantDetails(0);
      swift_bridgeObjectRelease();
      v13 = v11
          + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantVideoView.ViewModel))
                   + 48);
      if (*(_QWORD *)(v13 + 24))
        __swift_destroy_boxed_opaque_existential_1(v13);
      break;
  }
}

_BYTE *initializeWithCopy for ParticipantViewRepresentable(_BYTE *a1, _BYTE *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  size_t v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  int *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  __int128 v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  int EnumCaseMultiPayload;
  int *v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  int *v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  void *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  id v96;
  uint64_t v97;
  int *v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  __int128 v109;
  uint64_t v110;
  char *v111;
  char *v112;
  __int128 v113;
  uint64_t v114;
  __int128 v115;
  __int128 v116;
  uint64_t v117;
  void *v118;
  void *v119;
  id v120;
  uint64_t v121;
  void *v122;
  uint64_t v123;
  void *v124;
  uint64_t v125;
  id v126;
  id v127;
  id v128;
  void *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  id v135;
  uint64_t v136;
  uint64_t v137;
  void *v138;
  id v139;
  __int128 v140;
  uint64_t v142;
  void (*v143)(char *, char *, uint64_t);

  v4 = type metadata accessor for Participant.State(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 5u:
      v5 = type metadata accessor for Date();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
      goto LABEL_16;
    case 4u:
      v6 = type metadata accessor for Date();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      v8 = *(int *)(v7 + 48);
      v9 = &a1[v8];
      v10 = &a2[v8];
      *(_OWORD *)v9 = *(_OWORD *)&a2[v8];
      v11 = *(_QWORD *)&a2[v8 + 16];
      v12 = *(_QWORD *)&a2[v8 + 24];
      *((_QWORD *)v9 + 2) = v11;
      *((_QWORD *)v9 + 3) = v12;
      *((_WORD *)v9 + 16) = *((_WORD *)v10 + 16);
      *((_QWORD *)v9 + 5) = *((_QWORD *)v10 + 5);
      v9[48] = v10[48];
      *(_OWORD *)(v9 + 56) = *(_OWORD *)(v10 + 56);
      *(_OWORD *)(v9 + 72) = *(_OWORD *)(v10 + 72);
      v9[88] = v10[88];
      v9[89] = v10[89];
      v13 = *((_QWORD *)v10 + 15);
      swift_bridgeObjectRetain();
      if (v13)
      {
        if (v13 == 1)
        {
          v14 = v9 + 96;
          v15 = v10 + 96;
          v16 = 209;
          goto LABEL_10;
        }
        v18 = *((_QWORD *)v10 + 16);
        *((_QWORD *)v9 + 15) = v13;
        *((_QWORD *)v9 + 16) = v18;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v13 - 8))((uint64_t)(v9 + 96), (uint64_t)(v10 + 96), v13);
      }
      else
      {
        v17 = *((_OWORD *)v10 + 7);
        *((_OWORD *)v9 + 6) = *((_OWORD *)v10 + 6);
        *((_OWORD *)v9 + 7) = v17;
        *((_QWORD *)v9 + 16) = *((_QWORD *)v10 + 16);
      }
      *((_DWORD *)v9 + 34) = *((_DWORD *)v10 + 34);
      v19 = *((_OWORD *)v10 + 10);
      *((_OWORD *)v9 + 9) = *((_OWORD *)v10 + 9);
      *((_OWORD *)v9 + 10) = v19;
      *((_OWORD *)v9 + 11) = *((_OWORD *)v10 + 11);
      v9[192] = v10[192];
      v14 = v9 + 208;
      v15 = v10 + 208;
      *((_QWORD *)v9 + 25) = *((_QWORD *)v10 + 25);
      v16 = 97;
LABEL_10:
      memcpy(v14, v15, v16);
      v20 = *((_QWORD *)v10 + 39);
      if (v20)
      {
        v21 = *((_QWORD *)v10 + 40);
        v22 = *((_QWORD *)v10 + 41);
        *((_QWORD *)v9 + 39) = v20;
        *((_QWORD *)v9 + 40) = v21;
        *((_QWORD *)v9 + 41) = v22;
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v9 + 312) = *(_OWORD *)(v10 + 312);
        *((_QWORD *)v9 + 41) = *((_QWORD *)v10 + 41);
      }
      v23 = *(int *)(v7 + 64);
      v24 = &a1[v23];
      v25 = &a2[v23];
      v26 = *((_QWORD *)v25 + 1);
      if (v26)
      {
        *(_QWORD *)v24 = *(_QWORD *)v25;
        *((_QWORD *)v24 + 1) = v26;
        v27 = *((_QWORD *)v25 + 3);
        *((_QWORD *)v24 + 2) = *((_QWORD *)v25 + 2);
        *((_QWORD *)v24 + 3) = v27;
        v24[32] = v25[32];
        *(_OWORD *)(v24 + 40) = *(_OWORD *)(v25 + 40);
        *((_QWORD *)v24 + 7) = *((_QWORD *)v25 + 7);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v28 = *((_OWORD *)v25 + 1);
        *(_OWORD *)v24 = *(_OWORD *)v25;
        *((_OWORD *)v24 + 1) = v28;
        v29 = *((_OWORD *)v25 + 3);
        *((_OWORD *)v24 + 2) = *((_OWORD *)v25 + 2);
        *((_OWORD *)v24 + 3) = v29;
      }
LABEL_16:
      swift_storeEnumTagMultiPayload();
LABEL_17:
      v30 = (int *)type metadata accessor for Participant(0);
      v31 = v30[5];
      v32 = &a1[v31];
      v33 = &a2[v31];
      v34 = type metadata accessor for UUID();
      v35 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16);
      v35(v32, v33, v34);
      v36 = v30[6];
      v37 = &a1[v36];
      v38 = &a2[v36];
      v37[4] = v38[4];
      *(_DWORD *)v37 = *(_DWORD *)v38;
      v39 = v30[7];
      v40 = &a1[v39];
      v41 = &a2[v39];
      v42 = *(void **)v41;
      v142 = v34;
      v143 = v35;
      if (*(_QWORD *)v41)
      {
        v43 = *((_QWORD *)v41 + 1);
        *(_QWORD *)v40 = v42;
        *((_QWORD *)v40 + 1) = v43;
        v40[16] = v41[16];
        v44 = *((_QWORD *)v41 + 4);
        *((_QWORD *)v40 + 3) = *((_QWORD *)v41 + 3);
        *((_QWORD *)v40 + 4) = v44;
        v45 = v42;
        swift_bridgeObjectRetain();
      }
      else
      {
        v46 = *((_OWORD *)v41 + 1);
        *(_OWORD *)v40 = *(_OWORD *)v41;
        *((_OWORD *)v40 + 1) = v46;
        *((_QWORD *)v40 + 4) = *((_QWORD *)v41 + 4);
      }
      *(_QWORD *)&a1[v30[8]] = *(_QWORD *)&a2[v30[8]];
      v47 = v30[9];
      v48 = &a1[v47];
      v49 = &a2[v47];
      v50 = v49[1];
      *v48 = *v49;
      v48[1] = v50;
      a1[v30[10]] = a2[v30[10]];
      *(_QWORD *)&a1[v30[11]] = *(_QWORD *)&a2[v30[11]];
      v51 = v30[12];
      v52 = *(void **)&a2[v51];
      *(_QWORD *)&a1[v51] = v52;
      a1[v30[13]] = a2[v30[13]];
      v53 = v30[14];
      v54 = &a1[v53];
      v55 = &a2[v53];
      v56 = type metadata accessor for Date();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v57 = v52;
      if (__swift_getEnumTagSinglePayload((uint64_t)v55, 1, v56))
      {
        v58 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
        memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 16))(v54, v55, v56);
        __swift_storeEnumTagSinglePayload((uint64_t)v54, 0, 1, v56);
      }
      v59 = type metadata accessor for Participant.CountdownInfo(0);
      v60 = *(int *)(v59 + 20);
      v61 = &v54[v60];
      v62 = &v55[v60];
      if (__swift_getEnumTagSinglePayload((uint64_t)&v55[v60], 1, v56))
      {
        v63 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
        memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 16))(v61, v62, v56);
        __swift_storeEnumTagSinglePayload((uint64_t)v61, 0, 1, v56);
      }
      v54[*(int *)(v59 + 24)] = v55[*(int *)(v59 + 24)];
      a1[v30[15]] = a2[v30[15]];
      *(_QWORD *)&a1[v30[16]] = *(_QWORD *)&a2[v30[16]];
      v64 = type metadata accessor for ParticipantViewRepresentableViewModel(0);
      a1[*(int *)(v64 + 20)] = a2[*(int *)(v64 + 20)];
      v65 = *(int *)(v64 + 24);
      v66 = &a1[v65];
      v67 = &a2[v65];
      type metadata accessor for ParticipantViewModel(0);
      swift_retain();
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        v143(v66, v67, v142);
        v81 = (int *)type metadata accessor for ParticipantViewModel.ParticipantDetails(0);
        v82 = v81[5];
        v83 = &v66[v82];
        v84 = &v67[v82];
        v86 = *(_QWORD *)v84;
        v85 = *((_QWORD *)v84 + 1);
        *(_QWORD *)v83 = v86;
        *((_QWORD *)v83 + 1) = v85;
        v66[v81[6]] = v67[v81[6]];
        v66[v81[7]] = v67[v81[7]];
        v66[v81[8]] = v67[v81[8]];
        v66[v81[9]] = v67[v81[9]];
        v66[v81[10]] = v67[v81[10]];
        v66[v81[11]] = v67[v81[11]];
        swift_bridgeObjectRetain();
        v87 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantMonogramView.ViewModel))
                     + 48);
        v88 = &v66[v87];
        v89 = &v67[v87];
        v90 = *(void **)&v67[v87];
        v91 = *((_QWORD *)v89 + 1);
        *(_QWORD *)v88 = v90;
        *((_QWORD *)v88 + 1) = v91;
        v92 = *((_QWORD *)v89 + 3);
        *((_QWORD *)v88 + 2) = *((_QWORD *)v89 + 2);
        *((_QWORD *)v88 + 3) = v92;
        v93 = *((_QWORD *)v89 + 5);
        *((_QWORD *)v88 + 4) = *((_QWORD *)v89 + 4);
        *((_QWORD *)v88 + 5) = v93;
        v94 = *((_QWORD *)v89 + 7);
        *((_QWORD *)v88 + 6) = *((_QWORD *)v89 + 6);
        *((_QWORD *)v88 + 7) = v94;
        v88[64] = v89[64];
        v88[65] = v89[65];
        v95 = *((_QWORD *)v89 + 10);
        v96 = v90;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v95)
        {
          *((_QWORD *)v88 + 9) = *((_QWORD *)v89 + 9);
          *((_QWORD *)v88 + 10) = v95;
          v97 = *((_QWORD *)v89 + 12);
          *((_QWORD *)v88 + 11) = *((_QWORD *)v89 + 11);
          *((_QWORD *)v88 + 12) = v97;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v115 = *(_OWORD *)(v89 + 88);
          *(_OWORD *)(v88 + 72) = *(_OWORD *)(v89 + 72);
          *(_OWORD *)(v88 + 88) = v115;
        }
      }
      else if (EnumCaseMultiPayload == 1)
      {
        v143(v66, v67, v142);
        v69 = (int *)type metadata accessor for ParticipantViewModel.ParticipantDetails(0);
        v70 = v69[5];
        v71 = &v66[v70];
        v72 = &v67[v70];
        v74 = *(_QWORD *)v72;
        v73 = *((_QWORD *)v72 + 1);
        *(_QWORD *)v71 = v74;
        *((_QWORD *)v71 + 1) = v73;
        v66[v69[6]] = v67[v69[6]];
        v66[v69[7]] = v67[v69[7]];
        v66[v69[8]] = v67[v69[8]];
        v66[v69[9]] = v67[v69[9]];
        v66[v69[10]] = v67[v69[10]];
        v66[v69[11]] = v67[v69[11]];
        swift_bridgeObjectRetain();
        v75 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantVideoView.ViewModel, ParticipantVideoOverlayView.ViewModel));
        v76 = *(int *)(v75 + 48);
        v77 = &v66[v76];
        v78 = &v67[v76];
        v79 = *(_QWORD *)&v67[v76 + 24];
        if (v79)
        {
          v80 = *((_QWORD *)v78 + 4);
          *((_QWORD *)v77 + 3) = v79;
          *((_QWORD *)v77 + 4) = v80;
          (**(void (***)(char *, char *))(v79 - 8))(v77, v78);
        }
        else
        {
          v109 = *((_OWORD *)v78 + 1);
          *(_OWORD *)v77 = *(_OWORD *)v78;
          *((_OWORD *)v77 + 1) = v109;
          *((_QWORD *)v77 + 4) = *((_QWORD *)v78 + 4);
        }
        memcpy(v77 + 40, v78 + 40, 0x84uLL);
        v110 = *(int *)(v75 + 64);
        v111 = &v66[v110];
        v112 = &v67[v110];
        switch(v112[104])
        {
          case 1:
            v113 = *(_OWORD *)(v112 + 24);
            *(_OWORD *)(v111 + 24) = v113;
            (**(void (***)(void *, char *))(v113 - 8))(v111, v112);
            v114 = *((_QWORD *)v112 + 6);
            *((_QWORD *)v111 + 5) = *((_QWORD *)v112 + 5);
            *((_QWORD *)v111 + 6) = v114;
            v111[104] = 1;
            swift_bridgeObjectRetain();
            break;
          case 2:
            v117 = *((_QWORD *)v112 + 1);
            *(_QWORD *)v111 = *(_QWORD *)v112;
            *((_QWORD *)v111 + 1) = v117;
            v118 = (void *)*((_QWORD *)v112 + 3);
            *((_QWORD *)v111 + 2) = *((_QWORD *)v112 + 2);
            *((_QWORD *)v111 + 3) = v118;
            *((_WORD *)v111 + 16) = *((_WORD *)v112 + 16);
            *((_QWORD *)v111 + 5) = *((_QWORD *)v112 + 5);
            v111[48] = v112[48];
            v119 = (void *)*((_QWORD *)v112 + 7);
            *((_QWORD *)v111 + 7) = v119;
            v111[104] = 2;
            swift_bridgeObjectRetain();
            v120 = v118;
            goto LABEL_43;
          case 3:
            v121 = *((_QWORD *)v112 + 1);
            *(_QWORD *)v111 = *(_QWORD *)v112;
            *((_QWORD *)v111 + 1) = v121;
            v122 = (void *)*((_QWORD *)v112 + 3);
            *((_QWORD *)v111 + 2) = *((_QWORD *)v112 + 2);
            *((_QWORD *)v111 + 3) = v122;
            *((_WORD *)v111 + 16) = *((_WORD *)v112 + 16);
            *((_QWORD *)v111 + 5) = *((_QWORD *)v112 + 5);
            v111[48] = v112[48];
            v124 = (void *)*((_QWORD *)v112 + 7);
            v123 = *((_QWORD *)v112 + 8);
            *((_QWORD *)v111 + 7) = v124;
            *((_QWORD *)v111 + 8) = v123;
            v125 = *((_QWORD *)v112 + 9);
            v119 = (void *)*((_QWORD *)v112 + 10);
            *((_QWORD *)v111 + 9) = v125;
            *((_QWORD *)v111 + 10) = v119;
            v111[104] = 3;
            swift_bridgeObjectRetain();
            v126 = v122;
            v127 = v124;
            swift_bridgeObjectRetain();
LABEL_43:
            v128 = v119;
            break;
          case 4:
            v129 = *(void **)v112;
            v130 = *((_QWORD *)v112 + 1);
            *(_QWORD *)v111 = *(_QWORD *)v112;
            *((_QWORD *)v111 + 1) = v130;
            v131 = *((_QWORD *)v112 + 3);
            *((_QWORD *)v111 + 2) = *((_QWORD *)v112 + 2);
            *((_QWORD *)v111 + 3) = v131;
            v132 = *((_QWORD *)v112 + 5);
            *((_QWORD *)v111 + 4) = *((_QWORD *)v112 + 4);
            *((_QWORD *)v111 + 5) = v132;
            v133 = *((_QWORD *)v112 + 7);
            *((_QWORD *)v111 + 6) = *((_QWORD *)v112 + 6);
            *((_QWORD *)v111 + 7) = v133;
            v111[64] = v112[64];
            v111[65] = v112[65];
            v134 = *((_QWORD *)v112 + 10);
            v135 = v129;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v134)
            {
              *((_QWORD *)v111 + 9) = *((_QWORD *)v112 + 9);
              *((_QWORD *)v111 + 10) = v134;
              v136 = *((_QWORD *)v112 + 11);
              v137 = *((_QWORD *)v112 + 12);
              *((_QWORD *)v111 + 11) = v136;
              *((_QWORD *)v111 + 12) = v137;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
            }
            else
            {
              v140 = *(_OWORD *)(v112 + 88);
              *(_OWORD *)(v111 + 72) = *(_OWORD *)(v112 + 72);
              *(_OWORD *)(v111 + 88) = v140;
            }
            v111[104] = 4;
            break;
          case 5:
            v138 = *(void **)v112;
            *(_QWORD *)v111 = *(_QWORD *)v112;
            v111[104] = 5;
            v139 = v138;
            break;
          default:
            memcpy(v111, v112, 0x69uLL);
            break;
        }
      }
      else
      {
        v143(v66, v67, v142);
        v98 = (int *)type metadata accessor for ParticipantViewModel.ParticipantDetails(0);
        v99 = v98[5];
        v100 = &v66[v99];
        v101 = &v67[v99];
        v103 = *(_QWORD *)v101;
        v102 = *((_QWORD *)v101 + 1);
        *(_QWORD *)v100 = v103;
        *((_QWORD *)v100 + 1) = v102;
        v66[v98[6]] = v67[v98[6]];
        v66[v98[7]] = v67[v98[7]];
        v66[v98[8]] = v67[v98[8]];
        v66[v98[9]] = v67[v98[9]];
        v66[v98[10]] = v67[v98[10]];
        v66[v98[11]] = v67[v98[11]];
        swift_bridgeObjectRetain();
        v104 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantVideoView.ViewModel))
                      + 48);
        v105 = &v66[v104];
        v106 = &v67[v104];
        v107 = *((_QWORD *)v106 + 3);
        if (v107)
        {
          v108 = *((_QWORD *)v106 + 4);
          *((_QWORD *)v105 + 3) = v107;
          *((_QWORD *)v105 + 4) = v108;
          (**(void (***)(char *, char *))(v107 - 8))(v105, v106);
        }
        else
        {
          v116 = *((_OWORD *)v106 + 1);
          *(_OWORD *)v105 = *(_OWORD *)v106;
          *((_OWORD *)v105 + 1) = v116;
          *((_QWORD *)v105 + 4) = *((_QWORD *)v106 + 4);
        }
        memcpy(v105 + 40, v106 + 40, 0x84uLL);
      }
      swift_storeEnumTagMultiPayload();
      return a1;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
      goto LABEL_17;
  }
}

char *assignWithCopy for ParticipantViewRepresentable(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  size_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  char *v26;
  char *v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  int *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  void *v43;
  void *v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  void *v57;
  void *v58;
  id v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  int EnumTagSinglePayload;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  int v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  int EnumCaseMultiPayload;
  int *v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  int *v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  char *v95;
  char *v96;
  void *v97;
  uint64_t v98;
  id v99;
  int *v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  __int128 v108;
  __int128 v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  void *v117;
  uint64_t v118;
  void *v119;
  id v120;
  void *v121;
  uint64_t v122;
  void *v123;
  id v124;
  id v125;
  id v126;
  void *v127;
  id v128;
  void *v129;
  id v130;
  __int128 v131;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;

  if (a1 != a2)
  {
    outlined destroy of RemoteControlRequest((uint64_t)a1, type metadata accessor for Participant.State);
    v4 = type metadata accessor for Participant.State(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        v5 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
        goto LABEL_17;
      case 4u:
        v6 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
        v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        v8 = *(int *)(v7 + 48);
        v9 = &a1[v8];
        v10 = &a2[v8];
        *(_OWORD *)v9 = *(_OWORD *)&a2[v8];
        *((_QWORD *)v9 + 2) = *(_QWORD *)&a2[v8 + 16];
        v11 = *(_QWORD *)&a2[v8 + 24];
        *((_WORD *)v9 + 16) = *((_WORD *)v10 + 16);
        *((_QWORD *)v9 + 3) = v11;
        *((_QWORD *)v9 + 5) = *((_QWORD *)v10 + 5);
        v9[48] = v10[48];
        v12 = *(_OWORD *)(v10 + 72);
        v13 = *(_OWORD *)(v10 + 56);
        v9[88] = v10[88];
        *(_OWORD *)(v9 + 56) = v13;
        *(_OWORD *)(v9 + 72) = v12;
        v9[89] = v10[89];
        v14 = *((_QWORD *)v10 + 15);
        swift_bridgeObjectRetain();
        if (v14)
        {
          if (v14 == 1)
          {
            v15 = v9 + 96;
            v16 = v10 + 96;
            v17 = 209;
            goto LABEL_11;
          }
          *((_QWORD *)v9 + 15) = v14;
          *((_QWORD *)v9 + 16) = *((_QWORD *)v10 + 16);
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v14 - 8))((uint64_t)(v9 + 96), (uint64_t)(v10 + 96), v14);
        }
        else
        {
          v18 = *((_OWORD *)v10 + 6);
          v19 = *((_OWORD *)v10 + 7);
          *((_QWORD *)v9 + 16) = *((_QWORD *)v10 + 16);
          *((_OWORD *)v9 + 6) = v18;
          *((_OWORD *)v9 + 7) = v19;
        }
        *((_DWORD *)v9 + 34) = *((_DWORD *)v10 + 34);
        *((_QWORD *)v9 + 18) = *((_QWORD *)v10 + 18);
        *((_QWORD *)v9 + 19) = *((_QWORD *)v10 + 19);
        v20 = *((_OWORD *)v10 + 10);
        v21 = *((_OWORD *)v10 + 11);
        v9[192] = v10[192];
        *((_OWORD *)v9 + 10) = v20;
        *((_OWORD *)v9 + 11) = v21;
        *((_QWORD *)v9 + 25) = *((_QWORD *)v10 + 25);
        v15 = v9 + 208;
        v16 = v10 + 208;
        v17 = 97;
LABEL_11:
        memcpy(v15, v16, v17);
        v22 = *((_QWORD *)v10 + 39);
        if (v22)
        {
          v23 = *((_QWORD *)v10 + 40);
          *((_QWORD *)v9 + 39) = v22;
          *((_QWORD *)v9 + 40) = v23;
          *((_QWORD *)v9 + 41) = *((_QWORD *)v10 + 41);
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v24 = *(_OWORD *)(v10 + 312);
          *((_QWORD *)v9 + 41) = *((_QWORD *)v10 + 41);
          *(_OWORD *)(v9 + 312) = v24;
        }
        v25 = *(int *)(v7 + 64);
        v26 = &a1[v25];
        v27 = &a2[v25];
        if (*((_QWORD *)v27 + 1))
        {
          *(_QWORD *)v26 = *(_QWORD *)v27;
          *((_QWORD *)v26 + 1) = *((_QWORD *)v27 + 1);
          *((_QWORD *)v26 + 2) = *((_QWORD *)v27 + 2);
          *((_QWORD *)v26 + 3) = *((_QWORD *)v27 + 3);
          v26[32] = v27[32];
          *((_QWORD *)v26 + 5) = *((_QWORD *)v27 + 5);
          *((_QWORD *)v26 + 6) = *((_QWORD *)v27 + 6);
          *((_QWORD *)v26 + 7) = *((_QWORD *)v27 + 7);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v28 = *(_OWORD *)v27;
          v29 = *((_OWORD *)v27 + 1);
          v30 = *((_OWORD *)v27 + 3);
          *((_OWORD *)v26 + 2) = *((_OWORD *)v27 + 2);
          *((_OWORD *)v26 + 3) = v30;
          *(_OWORD *)v26 = v28;
          *((_OWORD *)v26 + 1) = v29;
        }
LABEL_17:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
        break;
    }
  }
  v31 = (int *)type metadata accessor for Participant(0);
  v32 = v31[5];
  v33 = &a1[v32];
  v34 = &a2[v32];
  v35 = type metadata accessor for UUID();
  v36 = *(_QWORD *)(v35 - 8);
  (*(void (**)(char *, char *, uint64_t))(v36 + 24))(v33, v34, v35);
  v37 = v31[6];
  v38 = &a1[v37];
  v39 = &a2[v37];
  *v38 = *v39;
  v38[1] = v39[1];
  v38[2] = v39[2];
  v38[3] = v39[3];
  v38[4] = v39[4];
  v40 = v31[7];
  v41 = &a1[v40];
  v42 = &a2[v40];
  v43 = *(void **)&a1[v40];
  v44 = *(void **)&a2[v40];
  v133 = v36;
  v134 = v35;
  if (v43)
  {
    if (v44)
    {
      *(_QWORD *)v41 = v44;
      v45 = v44;

      v46 = *((_QWORD *)v42 + 1);
      v41[16] = v42[16];
      *((_QWORD *)v41 + 1) = v46;
      *((_QWORD *)v41 + 3) = *((_QWORD *)v42 + 3);
      *((_QWORD *)v41 + 4) = *((_QWORD *)v42 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      outlined destroy of Participant.RemoteIdentifiers((id *)v41);
      v49 = *((_QWORD *)v42 + 4);
      v50 = *((_OWORD *)v42 + 1);
      *(_OWORD *)v41 = *(_OWORD *)v42;
      *((_OWORD *)v41 + 1) = v50;
      *((_QWORD *)v41 + 4) = v49;
    }
  }
  else if (v44)
  {
    *(_QWORD *)v41 = v44;
    v47 = *((_QWORD *)v42 + 1);
    v41[16] = v42[16];
    *((_QWORD *)v41 + 1) = v47;
    *((_QWORD *)v41 + 3) = *((_QWORD *)v42 + 3);
    *((_QWORD *)v41 + 4) = *((_QWORD *)v42 + 4);
    v48 = v44;
    swift_bridgeObjectRetain();
  }
  else
  {
    v51 = *(_OWORD *)v42;
    v52 = *((_OWORD *)v42 + 1);
    *((_QWORD *)v41 + 4) = *((_QWORD *)v42 + 4);
    *(_OWORD *)v41 = v51;
    *((_OWORD *)v41 + 1) = v52;
  }
  *(_QWORD *)&a1[v31[8]] = *(_QWORD *)&a2[v31[8]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v53 = v31[9];
  v54 = &a1[v53];
  v55 = &a2[v53];
  *(_QWORD *)v54 = *(_QWORD *)v55;
  *((_QWORD *)v54 + 1) = *((_QWORD *)v55 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[v31[10]] = a2[v31[10]];
  *(_QWORD *)&a1[v31[11]] = *(_QWORD *)&a2[v31[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v56 = v31[12];
  v57 = *(void **)&a1[v56];
  v58 = *(void **)&a2[v56];
  *(_QWORD *)&a1[v56] = v58;
  v59 = v58;

  a1[v31[13]] = a2[v31[13]];
  v60 = v31[14];
  v61 = &a1[v60];
  v62 = &a2[v60];
  v63 = type metadata accessor for Date();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v61, 1, v63);
  v65 = __swift_getEnumTagSinglePayload((uint64_t)v62, 1, v63);
  if (EnumTagSinglePayload)
  {
    if (!v65)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 16))(v61, v62, v63);
      __swift_storeEnumTagSinglePayload((uint64_t)v61, 0, 1, v63);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  v66 = *(_QWORD *)(v63 - 8);
  if (v65)
  {
    (*(void (**)(char *, uint64_t))(v66 + 8))(v61, v63);
LABEL_30:
    v67 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v66 + 24))(v61, v62, v63);
LABEL_31:
  v68 = type metadata accessor for Participant.CountdownInfo(0);
  v69 = *(int *)(v68 + 20);
  v70 = &v61[v69];
  v71 = &v62[v69];
  v72 = __swift_getEnumTagSinglePayload((uint64_t)&v61[v69], 1, v63);
  v73 = __swift_getEnumTagSinglePayload((uint64_t)v71, 1, v63);
  if (v72)
  {
    if (!v73)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 16))(v70, v71, v63);
      __swift_storeEnumTagSinglePayload((uint64_t)v70, 0, 1, v63);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  v74 = *(_QWORD *)(v63 - 8);
  if (v73)
  {
    (*(void (**)(char *, uint64_t))(v74 + 8))(v70, v63);
LABEL_36:
    v75 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v74 + 24))(v70, v71, v63);
LABEL_37:
  v61[*(int *)(v68 + 24)] = v62[*(int *)(v68 + 24)];
  a1[v31[15]] = a2[v31[15]];
  *(_QWORD *)&a1[v31[16]] = *(_QWORD *)&a2[v31[16]];
  swift_retain();
  swift_release();
  v76 = type metadata accessor for ParticipantViewRepresentableViewModel(0);
  a1[*(int *)(v76 + 20)] = a2[*(int *)(v76 + 20)];
  if (a1 != a2)
  {
    v77 = *(int *)(v76 + 24);
    v78 = &a1[v77];
    v79 = &a2[v77];
    outlined destroy of RemoteControlRequest((uint64_t)&a1[v77], type metadata accessor for ParticipantViewModel);
    type metadata accessor for ParticipantViewModel(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      (*(void (**)(char *, char *, uint64_t))(v133 + 16))(v78, v79, v134);
      v90 = (int *)type metadata accessor for ParticipantViewModel.ParticipantDetails(0);
      v91 = v90[5];
      v92 = &v78[v91];
      v93 = &v79[v91];
      *(_QWORD *)v92 = *(_QWORD *)v93;
      *((_QWORD *)v92 + 1) = *((_QWORD *)v93 + 1);
      v78[v90[6]] = v79[v90[6]];
      v78[v90[7]] = v79[v90[7]];
      v78[v90[8]] = v79[v90[8]];
      v78[v90[9]] = v79[v90[9]];
      v78[v90[10]] = v79[v90[10]];
      v78[v90[11]] = v79[v90[11]];
      swift_bridgeObjectRetain();
      v94 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantMonogramView.ViewModel))
                   + 48);
      v95 = &v78[v94];
      v96 = &v79[v94];
      v97 = *(void **)&v79[v94];
      *(_QWORD *)v95 = v97;
      *((_QWORD *)v95 + 1) = *((_QWORD *)v96 + 1);
      *((_QWORD *)v95 + 2) = *((_QWORD *)v96 + 2);
      *((_QWORD *)v95 + 3) = *((_QWORD *)v96 + 3);
      *((_QWORD *)v95 + 4) = *((_QWORD *)v96 + 4);
      *((_QWORD *)v95 + 5) = *((_QWORD *)v96 + 5);
      *((_QWORD *)v95 + 6) = *((_QWORD *)v96 + 6);
      *((_QWORD *)v95 + 7) = *((_QWORD *)v96 + 7);
      v95[64] = v96[64];
      v95[65] = v96[65];
      v98 = *((_QWORD *)v96 + 10);
      v99 = v97;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v98)
      {
        *((_QWORD *)v95 + 9) = *((_QWORD *)v96 + 9);
        *((_QWORD *)v95 + 10) = *((_QWORD *)v96 + 10);
        *((_QWORD *)v95 + 11) = *((_QWORD *)v96 + 11);
        *((_QWORD *)v95 + 12) = *((_QWORD *)v96 + 12);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v114 = *(_OWORD *)(v96 + 88);
        *(_OWORD *)(v95 + 72) = *(_OWORD *)(v96 + 72);
        *(_OWORD *)(v95 + 88) = v114;
      }
    }
    else if (EnumCaseMultiPayload == 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v133 + 16))(v78, v79, v134);
      v81 = (int *)type metadata accessor for ParticipantViewModel.ParticipantDetails(0);
      v82 = v81[5];
      v83 = &v78[v82];
      v84 = &v79[v82];
      *(_QWORD *)v83 = *(_QWORD *)v84;
      *((_QWORD *)v83 + 1) = *((_QWORD *)v84 + 1);
      v78[v81[6]] = v79[v81[6]];
      v78[v81[7]] = v79[v81[7]];
      v78[v81[8]] = v79[v81[8]];
      v78[v81[9]] = v79[v81[9]];
      v78[v81[10]] = v79[v81[10]];
      v78[v81[11]] = v79[v81[11]];
      swift_bridgeObjectRetain();
      v85 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantVideoView.ViewModel, ParticipantVideoOverlayView.ViewModel));
      v86 = *(int *)(v85 + 48);
      v87 = &v78[v86];
      v88 = &v79[v86];
      v89 = *(_QWORD *)&v79[v86 + 24];
      if (v89)
      {
        *((_QWORD *)v87 + 3) = v89;
        *((_QWORD *)v87 + 4) = *((_QWORD *)v88 + 4);
        (**(void (***)(char *, char *))(v89 - 8))(v87, v88);
      }
      else
      {
        v108 = *(_OWORD *)v88;
        v109 = *((_OWORD *)v88 + 1);
        *((_QWORD *)v87 + 4) = *((_QWORD *)v88 + 4);
        *(_OWORD *)v87 = v108;
        *((_OWORD *)v87 + 1) = v109;
      }
      memcpy(v87 + 40, v88 + 40, 0x84uLL);
      v110 = *(int *)(v85 + 64);
      v111 = &v78[v110];
      v112 = &v79[v110];
      switch(v112[104])
      {
        case 1:
          v113 = *((_QWORD *)v112 + 3);
          *((_QWORD *)v111 + 3) = v113;
          *((_QWORD *)v111 + 4) = *((_QWORD *)v112 + 4);
          (**(void (***)(void *, char *))(v113 - 8))(v111, v112);
          *((_QWORD *)v111 + 5) = *((_QWORD *)v112 + 5);
          *((_QWORD *)v111 + 6) = *((_QWORD *)v112 + 6);
          v111[104] = 1;
          swift_bridgeObjectRetain();
          break;
        case 2:
          *(_QWORD *)v111 = *(_QWORD *)v112;
          *((_QWORD *)v111 + 1) = *((_QWORD *)v112 + 1);
          *((_QWORD *)v111 + 2) = *((_QWORD *)v112 + 2);
          v117 = (void *)*((_QWORD *)v112 + 3);
          *((_QWORD *)v111 + 3) = v117;
          v111[32] = v112[32];
          v111[33] = v112[33];
          v118 = *((_QWORD *)v112 + 5);
          v111[48] = v112[48];
          *((_QWORD *)v111 + 5) = v118;
          v119 = (void *)*((_QWORD *)v112 + 7);
          *((_QWORD *)v111 + 7) = v119;
          v111[104] = 2;
          swift_bridgeObjectRetain();
          v120 = v117;
          goto LABEL_57;
        case 3:
          *(_QWORD *)v111 = *(_QWORD *)v112;
          *((_QWORD *)v111 + 1) = *((_QWORD *)v112 + 1);
          *((_QWORD *)v111 + 2) = *((_QWORD *)v112 + 2);
          v121 = (void *)*((_QWORD *)v112 + 3);
          *((_QWORD *)v111 + 3) = v121;
          v111[32] = v112[32];
          v111[33] = v112[33];
          v122 = *((_QWORD *)v112 + 5);
          v111[48] = v112[48];
          *((_QWORD *)v111 + 5) = v122;
          v123 = (void *)*((_QWORD *)v112 + 7);
          *((_QWORD *)v111 + 7) = v123;
          *((_QWORD *)v111 + 8) = *((_QWORD *)v112 + 8);
          *((_QWORD *)v111 + 9) = *((_QWORD *)v112 + 9);
          v119 = (void *)*((_QWORD *)v112 + 10);
          *((_QWORD *)v111 + 10) = v119;
          v111[104] = 3;
          swift_bridgeObjectRetain();
          v124 = v121;
          v125 = v123;
          swift_bridgeObjectRetain();
LABEL_57:
          v126 = v119;
          break;
        case 4:
          v127 = *(void **)v112;
          *(_QWORD *)v111 = *(_QWORD *)v112;
          *((_QWORD *)v111 + 1) = *((_QWORD *)v112 + 1);
          *((_QWORD *)v111 + 2) = *((_QWORD *)v112 + 2);
          *((_QWORD *)v111 + 3) = *((_QWORD *)v112 + 3);
          *((_QWORD *)v111 + 4) = *((_QWORD *)v112 + 4);
          *((_QWORD *)v111 + 5) = *((_QWORD *)v112 + 5);
          *((_QWORD *)v111 + 6) = *((_QWORD *)v112 + 6);
          *((_QWORD *)v111 + 7) = *((_QWORD *)v112 + 7);
          v111[64] = v112[64];
          v111[65] = v112[65];
          v135 = *((_QWORD *)v112 + 10);
          v128 = v127;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v135)
          {
            *((_QWORD *)v111 + 9) = *((_QWORD *)v112 + 9);
            *((_QWORD *)v111 + 10) = *((_QWORD *)v112 + 10);
            *((_QWORD *)v111 + 11) = *((_QWORD *)v112 + 11);
            *((_QWORD *)v111 + 12) = *((_QWORD *)v112 + 12);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            v131 = *(_OWORD *)(v112 + 88);
            *(_OWORD *)(v111 + 72) = *(_OWORD *)(v112 + 72);
            *(_OWORD *)(v111 + 88) = v131;
          }
          v111[104] = 4;
          break;
        case 5:
          v129 = *(void **)v112;
          *(_QWORD *)v111 = *(_QWORD *)v112;
          v111[104] = 5;
          v130 = v129;
          break;
        default:
          memcpy(v111, v112, 0x69uLL);
          break;
      }
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v133 + 16))(v78, v79, v134);
      v100 = (int *)type metadata accessor for ParticipantViewModel.ParticipantDetails(0);
      v101 = v100[5];
      v102 = &v78[v101];
      v103 = &v79[v101];
      *(_QWORD *)v102 = *(_QWORD *)v103;
      *((_QWORD *)v102 + 1) = *((_QWORD *)v103 + 1);
      v78[v100[6]] = v79[v100[6]];
      v78[v100[7]] = v79[v100[7]];
      v78[v100[8]] = v79[v100[8]];
      v78[v100[9]] = v79[v100[9]];
      v78[v100[10]] = v79[v100[10]];
      v78[v100[11]] = v79[v100[11]];
      swift_bridgeObjectRetain();
      v104 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantVideoView.ViewModel))
                    + 48);
      v105 = &v78[v104];
      v106 = &v79[v104];
      v107 = *((_QWORD *)v106 + 3);
      if (v107)
      {
        *((_QWORD *)v105 + 3) = v107;
        *((_QWORD *)v105 + 4) = *((_QWORD *)v106 + 4);
        (**(void (***)(char *, char *))(v107 - 8))(v105, v106);
      }
      else
      {
        v115 = *(_OWORD *)v106;
        v116 = *((_OWORD *)v106 + 1);
        *((_QWORD *)v105 + 4) = *((_QWORD *)v106 + 4);
        *(_OWORD *)v105 = v115;
        *((_OWORD *)v105 + 1) = v116;
      }
      memcpy(v105 + 40, v106 + 40, 0x84uLL);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *initializeWithTake for ParticipantViewRepresentable(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  __int128 v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  int EnumCaseMultiPayload;
  int *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  size_t v45;
  int *v46;
  uint64_t v47;
  uint64_t v48;
  void (*v50)(char *, char *, uint64_t);

  v4 = type metadata accessor for Participant.State(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 5u:
      v12 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, a2, v12);
      goto LABEL_5;
    case 4u:
      v5 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
      v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      memcpy(&a1[*(int *)(v6 + 48)], &a2[*(int *)(v6 + 48)], 0x150uLL);
      v7 = *(int *)(v6 + 64);
      v8 = &a1[v7];
      v9 = &a2[v7];
      v10 = *((_OWORD *)v9 + 1);
      *(_OWORD *)v8 = *(_OWORD *)v9;
      *((_OWORD *)v8 + 1) = v10;
      v11 = *((_OWORD *)v9 + 3);
      *((_OWORD *)v8 + 2) = *((_OWORD *)v9 + 2);
      *((_OWORD *)v8 + 3) = v11;
LABEL_5:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
      break;
  }
  v13 = (int *)type metadata accessor for Participant(0);
  v14 = v13[5];
  v15 = &a1[v14];
  v16 = &a2[v14];
  v17 = type metadata accessor for UUID();
  v50 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32);
  v50(v15, v16, v17);
  v18 = v13[6];
  v19 = &a1[v18];
  v20 = &a2[v18];
  *(_DWORD *)v19 = *(_DWORD *)v20;
  v19[4] = v20[4];
  v21 = v13[7];
  v22 = &a1[v21];
  v23 = &a2[v21];
  v24 = *((_OWORD *)v23 + 1);
  *(_OWORD *)v22 = *(_OWORD *)v23;
  *((_OWORD *)v22 + 1) = v24;
  *((_QWORD *)v22 + 4) = *((_QWORD *)v23 + 4);
  *(_QWORD *)&a1[v13[8]] = *(_QWORD *)&a2[v13[8]];
  *(_OWORD *)&a1[v13[9]] = *(_OWORD *)&a2[v13[9]];
  a1[v13[10]] = a2[v13[10]];
  *(_QWORD *)&a1[v13[11]] = *(_QWORD *)&a2[v13[11]];
  *(_QWORD *)&a1[v13[12]] = *(_QWORD *)&a2[v13[12]];
  a1[v13[13]] = a2[v13[13]];
  v25 = v13[14];
  v26 = &a1[v25];
  v27 = &a2[v25];
  v28 = type metadata accessor for Date();
  if (__swift_getEnumTagSinglePayload((uint64_t)v27, 1, v28))
  {
    v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v26, v27, v28);
    __swift_storeEnumTagSinglePayload((uint64_t)v26, 0, 1, v28);
  }
  v30 = type metadata accessor for Participant.CountdownInfo(0);
  v31 = *(int *)(v30 + 20);
  v32 = &v26[v31];
  v33 = &v27[v31];
  if (__swift_getEnumTagSinglePayload((uint64_t)&v27[v31], 1, v28))
  {
    v34 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v32, v33, v28);
    __swift_storeEnumTagSinglePayload((uint64_t)v32, 0, 1, v28);
  }
  v26[*(int *)(v30 + 24)] = v27[*(int *)(v30 + 24)];
  a1[v13[15]] = a2[v13[15]];
  *(_QWORD *)&a1[v13[16]] = *(_QWORD *)&a2[v13[16]];
  v35 = type metadata accessor for ParticipantViewRepresentableViewModel(0);
  a1[*(int *)(v35 + 20)] = a2[*(int *)(v35 + 20)];
  v36 = *(int *)(v35 + 24);
  v37 = &a1[v36];
  v38 = &a2[v36];
  type metadata accessor for ParticipantViewModel(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v50(v37, v38, v17);
    v46 = (int *)type metadata accessor for ParticipantViewModel.ParticipantDetails(0);
    *(_OWORD *)&v37[v46[5]] = *(_OWORD *)&v38[v46[5]];
    v37[v46[6]] = v38[v46[6]];
    v37[v46[7]] = v38[v46[7]];
    v37[v46[8]] = v38[v46[8]];
    v37[v46[9]] = v38[v46[9]];
    v37[v46[10]] = v38[v46[10]];
    v37[v46[11]] = v38[v46[11]];
    v47 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantMonogramView.ViewModel))
                 + 48);
    v43 = &v37[v47];
    v44 = &v38[v47];
    v45 = 104;
  }
  else
  {
    v50(v37, v38, v17);
    v40 = (int *)type metadata accessor for ParticipantViewModel.ParticipantDetails(0);
    *(_OWORD *)&v37[v40[5]] = *(_OWORD *)&v38[v40[5]];
    v37[v40[6]] = v38[v40[6]];
    v37[v40[7]] = v38[v40[7]];
    v37[v40[8]] = v38[v40[8]];
    v37[v40[9]] = v38[v40[9]];
    v37[v40[10]] = v38[v40[10]];
    v37[v40[11]] = v38[v40[11]];
    if (EnumCaseMultiPayload == 1)
    {
      v41 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantVideoView.ViewModel, ParticipantVideoOverlayView.ViewModel));
      memcpy(&v37[*(int *)(v41 + 48)], &v38[*(int *)(v41 + 48)], 0xACuLL);
      v42 = *(int *)(v41 + 64);
      v43 = &v37[v42];
      v44 = &v38[v42];
      v45 = 105;
    }
    else
    {
      v48 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantVideoView.ViewModel))
                   + 48);
      v43 = &v37[v48];
      v44 = &v38[v48];
      v45 = 172;
    }
  }
  memcpy(v43, v44, v45);
  swift_storeEnumTagMultiPayload();
  return a1;
}

char *assignWithTake for ParticipantViewRepresentable(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  void *v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  int EnumTagSinglePayload;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  int v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  int EnumCaseMultiPayload;
  int *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  size_t v60;
  int *v61;
  uint64_t v62;
  int *v63;
  uint64_t v64;
  uint64_t v66;
  uint64_t v67;

  if (a1 != a2)
  {
    outlined destroy of RemoteControlRequest((uint64_t)a1, type metadata accessor for Participant.State);
    v4 = type metadata accessor for Participant.State(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        v12 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, a2, v12);
        goto LABEL_5;
      case 4u:
        v5 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
        v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        memcpy(&a1[*(int *)(v6 + 48)], &a2[*(int *)(v6 + 48)], 0x150uLL);
        v7 = *(int *)(v6 + 64);
        v8 = &a1[v7];
        v9 = &a2[v7];
        v10 = *((_OWORD *)v9 + 1);
        *(_OWORD *)v8 = *(_OWORD *)v9;
        *((_OWORD *)v8 + 1) = v10;
        v11 = *((_OWORD *)v9 + 3);
        *((_OWORD *)v8 + 2) = *((_OWORD *)v9 + 2);
        *((_OWORD *)v8 + 3) = v11;
LABEL_5:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
        break;
    }
  }
  v13 = (int *)type metadata accessor for Participant(0);
  v14 = v13[5];
  v15 = &a1[v14];
  v16 = &a2[v14];
  v17 = type metadata accessor for UUID();
  v66 = *(_QWORD *)(v17 - 8);
  v67 = v17;
  (*(void (**)(char *, char *))(v66 + 40))(v15, v16);
  v18 = v13[6];
  v19 = &a1[v18];
  v20 = &a2[v18];
  *v19 = *v20;
  v19[1] = v20[1];
  v19[2] = v20[2];
  v19[3] = v20[3];
  v19[4] = v20[4];
  v21 = v13[7];
  v22 = &a1[v21];
  v23 = &a2[v21];
  v24 = *(void **)&a1[v21];
  if (v24)
  {
    if (*(_QWORD *)v23)
    {
      *(_QWORD *)v22 = *(_QWORD *)v23;

      *((_QWORD *)v22 + 1) = *((_QWORD *)v23 + 1);
      v22[16] = v23[16];
      v25 = *((_QWORD *)v23 + 4);
      *((_QWORD *)v22 + 3) = *((_QWORD *)v23 + 3);
      *((_QWORD *)v22 + 4) = v25;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    outlined destroy of Participant.RemoteIdentifiers((id *)v22);
  }
  v26 = *((_OWORD *)v23 + 1);
  *(_OWORD *)v22 = *(_OWORD *)v23;
  *((_OWORD *)v22 + 1) = v26;
  *((_QWORD *)v22 + 4) = *((_QWORD *)v23 + 4);
LABEL_11:
  *(_QWORD *)&a1[v13[8]] = *(_QWORD *)&a2[v13[8]];
  swift_bridgeObjectRelease();
  v27 = v13[9];
  v28 = &a1[v27];
  v29 = &a2[v27];
  v31 = *(_QWORD *)v29;
  v30 = *((_QWORD *)v29 + 1);
  *(_QWORD *)v28 = v31;
  *((_QWORD *)v28 + 1) = v30;
  swift_bridgeObjectRelease();
  a1[v13[10]] = a2[v13[10]];
  *(_QWORD *)&a1[v13[11]] = *(_QWORD *)&a2[v13[11]];
  swift_bridgeObjectRelease();
  v32 = v13[12];
  v33 = *(void **)&a1[v32];
  *(_QWORD *)&a1[v32] = *(_QWORD *)&a2[v32];

  a1[v13[13]] = a2[v13[13]];
  v34 = v13[14];
  v35 = &a1[v34];
  v36 = &a2[v34];
  v37 = type metadata accessor for Date();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v35, 1, v37);
  v39 = __swift_getEnumTagSinglePayload((uint64_t)v36, 1, v37);
  if (EnumTagSinglePayload)
  {
    if (!v39)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 32))(v35, v36, v37);
      __swift_storeEnumTagSinglePayload((uint64_t)v35, 0, 1, v37);
      goto LABEL_17;
    }
    goto LABEL_16;
  }
  v40 = *(_QWORD *)(v37 - 8);
  if (v39)
  {
    (*(void (**)(char *, uint64_t))(v40 + 8))(v35, v37);
LABEL_16:
    v41 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    goto LABEL_17;
  }
  (*(void (**)(char *, char *, uint64_t))(v40 + 40))(v35, v36, v37);
LABEL_17:
  v42 = type metadata accessor for Participant.CountdownInfo(0);
  v43 = *(int *)(v42 + 20);
  v44 = &v35[v43];
  v45 = &v36[v43];
  v46 = __swift_getEnumTagSinglePayload((uint64_t)&v35[v43], 1, v37);
  v47 = __swift_getEnumTagSinglePayload((uint64_t)v45, 1, v37);
  if (v46)
  {
    if (!v47)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 32))(v44, v45, v37);
      __swift_storeEnumTagSinglePayload((uint64_t)v44, 0, 1, v37);
      goto LABEL_23;
    }
    goto LABEL_22;
  }
  v48 = *(_QWORD *)(v37 - 8);
  if (v47)
  {
    (*(void (**)(char *, uint64_t))(v48 + 8))(v44, v37);
LABEL_22:
    v49 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
    goto LABEL_23;
  }
  (*(void (**)(char *, char *, uint64_t))(v48 + 40))(v44, v45, v37);
LABEL_23:
  v35[*(int *)(v42 + 24)] = v36[*(int *)(v42 + 24)];
  a1[v13[15]] = a2[v13[15]];
  *(_QWORD *)&a1[v13[16]] = *(_QWORD *)&a2[v13[16]];
  swift_release();
  v50 = type metadata accessor for ParticipantViewRepresentableViewModel(0);
  a1[*(int *)(v50 + 20)] = a2[*(int *)(v50 + 20)];
  if (a1 != a2)
  {
    v51 = *(int *)(v50 + 24);
    v52 = &a1[v51];
    v53 = &a2[v51];
    outlined destroy of RemoteControlRequest((uint64_t)&a1[v51], type metadata accessor for ParticipantViewModel);
    type metadata accessor for ParticipantViewModel(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      (*(void (**)(char *, char *, uint64_t))(v66 + 32))(v52, v53, v67);
      v61 = (int *)type metadata accessor for ParticipantViewModel.ParticipantDetails(0);
      *(_OWORD *)&v52[v61[5]] = *(_OWORD *)&v53[v61[5]];
      v52[v61[6]] = v53[v61[6]];
      v52[v61[7]] = v53[v61[7]];
      v52[v61[8]] = v53[v61[8]];
      v52[v61[9]] = v53[v61[9]];
      v52[v61[10]] = v53[v61[10]];
      v52[v61[11]] = v53[v61[11]];
      v62 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantMonogramView.ViewModel))
                   + 48);
      v58 = &v52[v62];
      v59 = &v53[v62];
      v60 = 104;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v66 + 32))(v52, v53, v67);
      v55 = (int *)type metadata accessor for ParticipantViewModel.ParticipantDetails(0);
      *(_OWORD *)&v52[v55[5]] = *(_OWORD *)&v53[v55[5]];
      v52[v55[6]] = v53[v55[6]];
      v52[v55[7]] = v53[v55[7]];
      v52[v55[8]] = v53[v55[8]];
      v52[v55[9]] = v53[v55[9]];
      v52[v55[10]] = v53[v55[10]];
      v52[v55[11]] = v53[v55[11]];
      v56 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantVideoView.ViewModel, ParticipantVideoOverlayView.ViewModel));
      memcpy(&v52[*(int *)(v56 + 48)], &v53[*(int *)(v56 + 48)], 0xACuLL);
      v57 = *(int *)(v56 + 64);
      v58 = &v52[v57];
      v59 = &v53[v57];
      v60 = 105;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v66 + 32))(v52, v53, v67);
      v63 = (int *)type metadata accessor for ParticipantViewModel.ParticipantDetails(0);
      *(_OWORD *)&v52[v63[5]] = *(_OWORD *)&v53[v63[5]];
      v52[v63[6]] = v53[v63[6]];
      v52[v63[7]] = v53[v63[7]];
      v52[v63[8]] = v53[v63[8]];
      v52[v63[9]] = v53[v63[9]];
      v52[v63[10]] = v53[v63[10]];
      v52[v63[11]] = v53[v63[11]];
      v64 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantVideoView.ViewModel))
                   + 48);
      v58 = &v52[v64];
      v59 = &v53[v64];
      v60 = 172;
    }
    memcpy(v58, v59, v60);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for ParticipantViewRepresentable()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BD461B88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_1_136();
  return __swift_getEnumTagSinglePayload(v1, v0, v2);
}

uint64_t storeEnumTagSinglePayload for ParticipantViewRepresentable()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BD461BBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_1_136();
  return __swift_storeEnumTagSinglePayload(v1, v0, v0, v2);
}

uint64_t type metadata completion function for ParticipantViewRepresentable()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ParticipantViewRepresentableViewModel(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

BOOL RemoteControlRequirements.isComplete.getter(int a1)
{
  return (~a1 & 0x1FLL) == 0;
}

uint64_t ScreenSharingSpectatorViewModel.__allocating_init(serverBag:interactionController:screenSharingStateMonitor:)()
{
  void *v0;
  void *v1;
  void *v2;
  uint64_t v3;

  swift_allocObject();
  swift_getObjectType();
  v0 = (void *)OUTLINED_FUNCTION_9_55();
  return OUTLINED_FUNCTION_52_40(v0, v1, v2, v3);
}

void *RemoteControlRequirements.hasGroupSession.unsafeMutableAddressor()
{
  return &static RemoteControlRequirements.hasGroupSession;
}

uint64_t static RemoteControlRequirements.hasGroupSession.getter()
{
  return 1;
}

void *RemoteControlRequirements.hasTwoParticipants.unsafeMutableAddressor()
{
  return &static RemoteControlRequirements.hasTwoParticipants;
}

uint64_t static RemoteControlRequirements.hasTwoParticipants.getter()
{
  return 2;
}

void *RemoteControlRequirements.devicesAreCompatible.unsafeMutableAddressor()
{
  return &static RemoteControlRequirements.devicesAreCompatible;
}

uint64_t static RemoteControlRequirements.devicesAreCompatible.getter()
{
  return 4;
}

void *RemoteControlRequirements.serverBagEnabled.unsafeMutableAddressor()
{
  return &static RemoteControlRequirements.serverBagEnabled;
}

uint64_t static RemoteControlRequirements.serverBagEnabled.getter()
{
  return 8;
}

void *RemoteControlRequirements.broadcasterIsEligible.unsafeMutableAddressor()
{
  return &static RemoteControlRequirements.broadcasterIsEligible;
}

uint64_t static RemoteControlRequirements.broadcasterIsEligible.getter()
{
  return 16;
}

uint64_t RemoteControlRequirements.rawValue.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*RemoteControlRequirements.rawValue.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t protocol witness for Decodable.init(from:) in conformance RemoteControlRequirements()
{
  lazy protocol witness table accessor for type RemoteControlRequirements and conformance RemoteControlRequirements();
  return RawRepresentable<>.init(from:)();
}

uint64_t protocol witness for Encodable.encode(to:) in conformance RemoteControlRequirements()
{
  lazy protocol witness table accessor for type RemoteControlRequirements and conformance RemoteControlRequirements();
  return RawRepresentable<>.encode(to:)();
}

void ScreenSharingSpectatorViewModel._broadcastingParticipant.modify()
{
  OUTLINED_FUNCTION_7_6();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for ScreenSharingSpectatorViewModel.broadcastingParticipant : ScreenSharingSpectatorViewModel(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(_QWORD **)a1 + 216))();
}

uint64_t key path setter for ScreenSharingSpectatorViewModel.broadcastingParticipant : ScreenSharingSpectatorViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(a1, (uint64_t)v6, &demangling cache variable for type metadata for Participant?);
  return (*(uint64_t (**)(char *))(**(_QWORD **)a2 + 224))(v6);
}

void ScreenSharingSpectatorViewModel.broadcastingParticipant.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  swift_getKeyPath();
  OUTLINED_FUNCTION_8_102();
  OUTLINED_FUNCTION_11_0();
  v3 = v1 + OBJC_IVAR____TtC15ConversationKit31ScreenSharingSpectatorViewModel__broadcastingParticipant;
  OUTLINED_FUNCTION_1();
  outlined init with copy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v3, a1, &demangling cache variable for type metadata for Participant?);
}

void ScreenSharingSpectatorViewModel.broadcastingParticipant.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t *);
  uint64_t v4;

  swift_getKeyPath();
  OUTLINED_FUNCTION_33_56();
  OUTLINED_FUNCTION_34_3(v2, (uint64_t)partial apply for closure #1 in ScreenSharingSpectatorViewModel.broadcastingParticipant.setter, v3, v4);
  OUTLINED_FUNCTION_22();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(a1, &demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_14_1();
}

uint64_t closure #1 in ScreenSharingSpectatorViewModel.broadcastingParticipant.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = a1 + OBJC_IVAR____TtC15ConversationKit31ScreenSharingSpectatorViewModel__broadcastingParticipant;
  swift_beginAccess();
  outlined assign with copy of Participant?(a2, v3);
  return swift_endAccess();
}

void ScreenSharingSpectatorViewModel.broadcastingParticipant.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_25_10();
  OUTLINED_FUNCTION_25_61((uint64_t)v1);
  OUTLINED_FUNCTION_8_17();
  OUTLINED_FUNCTION_4_130();
  OUTLINED_FUNCTION_17_22();
  OUTLINED_FUNCTION_15_8(OBJC_IVAR____TtC15ConversationKit31ScreenSharingSpectatorViewModel___observationRegistrar);
  _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type ScreenSharingSpectatorViewModel and conformance ScreenSharingSpectatorViewModel, (uint64_t (*)(uint64_t))type metadata accessor for ScreenSharingSpectatorViewModel, (uint64_t)&protocol conformance descriptor for ScreenSharingSpectatorViewModel);
  OUTLINED_FUNCTION_18_8(v2);
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_63_27();
  ScreenSharingSpectatorViewModel._broadcastingParticipant.modify();
  *(_QWORD *)(v0 + 56) = v3;
  OUTLINED_FUNCTION_91();
}

void ScreenSharingSpectatorViewModel.broadcastingParticipant.modify(_QWORD *a1)
{
  DropdownViewModel.menuItems.modify(a1);
}

void ScreenSharingSpectatorViewModel._isZoomEnabled.modify()
{
  OUTLINED_FUNCTION_7_6();
  OUTLINED_FUNCTION_0();
}

uint64_t ScreenSharingSpectatorViewModel.isZoomEnabled.getter()
{
  return ScreenSharingSpectatorViewModel.isZoomEnabled.getter((uint64_t)&unk_1BD660CD0, &OBJC_IVAR____TtC15ConversationKit31ScreenSharingSpectatorViewModel__isZoomEnabled);
}

void ScreenSharingSpectatorViewModel.isZoomEnabled.setter()
{
  ScreenSharingSpectatorViewModel.isZoomEnabled.setter();
}

{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;

  KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_60_29(KeyPath, *(uint64_t (**)(uint64_t, uint64_t, uint64_t *, uint64_t))(*(_QWORD *)v0 + 920), v2);
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_14_1();
}

uint64_t closure #1 in ScreenSharingSpectatorViewModel.isZoomEnabled.setter(uint64_t a1, char a2)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(a1 + OBJC_IVAR____TtC15ConversationKit31ScreenSharingSpectatorViewModel__isZoomEnabled);
  result = swift_beginAccess();
  *v3 = a2;
  return result;
}

void ScreenSharingSpectatorViewModel.isZoomEnabled.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_25_10();
  OUTLINED_FUNCTION_25_61((uint64_t)v1);
  OUTLINED_FUNCTION_8_17();
  OUTLINED_FUNCTION_4_130();
  OUTLINED_FUNCTION_17_22();
  OUTLINED_FUNCTION_15_8(OBJC_IVAR____TtC15ConversationKit31ScreenSharingSpectatorViewModel___observationRegistrar);
  _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type ScreenSharingSpectatorViewModel and conformance ScreenSharingSpectatorViewModel, (uint64_t (*)(uint64_t))type metadata accessor for ScreenSharingSpectatorViewModel, (uint64_t)&protocol conformance descriptor for ScreenSharingSpectatorViewModel);
  OUTLINED_FUNCTION_18_8(v2);
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_63_27();
  ScreenSharingSpectatorViewModel._isZoomEnabled.modify();
  *(_QWORD *)(v0 + 56) = v3;
  OUTLINED_FUNCTION_91();
}

void ScreenSharingSpectatorViewModel.isZoomEnabled.modify(_QWORD *a1)
{
  DropdownViewModel.menuItems.modify(a1);
}

void ScreenSharingSpectatorViewModel._isPipped.modify()
{
  OUTLINED_FUNCTION_7_6();
  OUTLINED_FUNCTION_0();
}

uint64_t ScreenSharingSpectatorViewModel.isPipped.getter()
{
  return ScreenSharingSpectatorViewModel.isZoomEnabled.getter((uint64_t)&unk_1BD660CF8, &OBJC_IVAR____TtC15ConversationKit31ScreenSharingSpectatorViewModel__isPipped);
}

void ScreenSharingSpectatorViewModel.isPipped.setter()
{
  ScreenSharingSpectatorViewModel.isZoomEnabled.setter();
}

uint64_t closure #1 in ScreenSharingSpectatorViewModel.isPipped.setter(uint64_t a1, char a2)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(a1 + OBJC_IVAR____TtC15ConversationKit31ScreenSharingSpectatorViewModel__isPipped);
  result = swift_beginAccess();
  *v3 = a2;
  return result;
}

void ScreenSharingSpectatorViewModel.isPipped.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_25_10();
  OUTLINED_FUNCTION_25_61((uint64_t)v1);
  OUTLINED_FUNCTION_8_17();
  OUTLINED_FUNCTION_4_130();
  OUTLINED_FUNCTION_17_22();
  OUTLINED_FUNCTION_15_8(OBJC_IVAR____TtC15ConversationKit31ScreenSharingSpectatorViewModel___observationRegistrar);
  _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type ScreenSharingSpectatorViewModel and conformance ScreenSharingSpectatorViewModel, (uint64_t (*)(uint64_t))type metadata accessor for ScreenSharingSpectatorViewModel, (uint64_t)&protocol conformance descriptor for ScreenSharingSpectatorViewModel);
  OUTLINED_FUNCTION_18_8(v2);
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_63_27();
  ScreenSharingSpectatorViewModel._isPipped.modify();
  *(_QWORD *)(v0 + 56) = v3;
  OUTLINED_FUNCTION_91();
}

void ScreenSharingSpectatorViewModel.isPipped.modify(_QWORD *a1)
{
  DropdownViewModel.menuItems.modify(a1);
}

void ScreenSharingSpectatorViewModel._disableRequestButton.modify()
{
  OUTLINED_FUNCTION_7_6();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for ScreenSharingSpectatorViewModel.disableRequestButton : ScreenSharingSpectatorViewModel@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 360))();
  *a2 = result & 1;
  return result;
}

uint64_t key path setter for ScreenSharingSpectatorViewModel.disableRequestButton : ScreenSharingSpectatorViewModel(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 368))(*a1);
}

uint64_t ScreenSharingSpectatorViewModel.disableRequestButton.getter()
{
  return ScreenSharingSpectatorViewModel.isZoomEnabled.getter((uint64_t)&unk_1BD660D20, &OBJC_IVAR____TtC15ConversationKit31ScreenSharingSpectatorViewModel__disableRequestButton);
}

uint64_t ScreenSharingSpectatorViewModel.isZoomEnabled.getter(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  unsigned __int8 *v4;

  swift_getKeyPath();
  OUTLINED_FUNCTION_8_102();
  OUTLINED_FUNCTION_11_0();
  v4 = (unsigned __int8 *)(v2 + *a2);
  OUTLINED_FUNCTION_1();
  return *v4;
}

void ScreenSharingSpectatorViewModel.disableRequestButton.setter()
{
  ScreenSharingSpectatorViewModel.isZoomEnabled.setter();
}

uint64_t closure #1 in ScreenSharingSpectatorViewModel.disableRequestButton.setter(uint64_t a1, char a2)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(a1 + OBJC_IVAR____TtC15ConversationKit31ScreenSharingSpectatorViewModel__disableRequestButton);
  result = swift_beginAccess();
  *v3 = a2;
  return result;
}

void ScreenSharingSpectatorViewModel.disableRequestButton.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_25_10();
  OUTLINED_FUNCTION_25_61((uint64_t)v1);
  OUTLINED_FUNCTION_8_17();
  OUTLINED_FUNCTION_4_130();
  OUTLINED_FUNCTION_17_22();
  OUTLINED_FUNCTION_15_8(OBJC_IVAR____TtC15ConversationKit31ScreenSharingSpectatorViewModel___observationRegistrar);
  _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type ScreenSharingSpectatorViewModel and conformance ScreenSharingSpectatorViewModel, (uint64_t (*)(uint64_t))type metadata accessor for ScreenSharingSpectatorViewModel, (uint64_t)&protocol conformance descriptor for ScreenSharingSpectatorViewModel);
  OUTLINED_FUNCTION_18_8(v2);
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_63_27();
  ScreenSharingSpectatorViewModel._disableRequestButton.modify();
  *(_QWORD *)(v0 + 56) = v3;
  OUTLINED_FUNCTION_91();
}

void ScreenSharingSpectatorViewModel.disableRequestButton.modify(_QWORD *a1)
{
  DropdownViewModel.menuItems.modify(a1);
}

void ScreenSharingSpectatorViewModel._activeParticipantObserver.modify()
{
  OUTLINED_FUNCTION_7_6();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for ScreenSharingSpectatorViewModel.activeParticipantObserver : ScreenSharingSpectatorViewModel@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 408))();
  *a2 = result;
  return result;
}

uint64_t key path setter for ScreenSharingSpectatorViewModel.activeParticipantObserver : ScreenSharingSpectatorViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))(**(_QWORD **)a2 + 416);
  v3 = swift_retain();
  return v2(v3);
}

uint64_t ScreenSharingSpectatorViewModel.activeParticipantObserver.getter()
{
  return ScreenSharingSpectatorViewModel.activeParticipantObserver.getter();
}

{
  swift_getKeyPath();
  OUTLINED_FUNCTION_8_102();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_1();
  return swift_retain();
}

uint64_t ScreenSharingSpectatorViewModel.activeParticipantObserver.setter()
{
  return ScreenSharingSpectatorViewModel.activeParticipantObserver.setter();
}

{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v3;

  KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_60_29(KeyPath, *(uint64_t (**)(uint64_t, uint64_t, uint64_t *, uint64_t))(*(_QWORD *)v0 + 920), v3);
  OUTLINED_FUNCTION_17_22();
  return OUTLINED_FUNCTION_22();
}

void ScreenSharingSpectatorViewModel.activeParticipantObserver.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_25_10();
  OUTLINED_FUNCTION_25_61((uint64_t)v1);
  OUTLINED_FUNCTION_8_17();
  OUTLINED_FUNCTION_4_130();
  OUTLINED_FUNCTION_17_22();
  OUTLINED_FUNCTION_15_8(OBJC_IVAR____TtC15ConversationKit31ScreenSharingSpectatorViewModel___observationRegistrar);
  _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type ScreenSharingSpectatorViewModel and conformance ScreenSharingSpectatorViewModel, (uint64_t (*)(uint64_t))type metadata accessor for ScreenSharingSpectatorViewModel, (uint64_t)&protocol conformance descriptor for ScreenSharingSpectatorViewModel);
  OUTLINED_FUNCTION_18_8(v2);
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_63_27();
  ScreenSharingSpectatorViewModel._activeParticipantObserver.modify();
  *(_QWORD *)(v0 + 56) = v3;
  OUTLINED_FUNCTION_91();
}

void ScreenSharingSpectatorViewModel.activeParticipantObserver.modify(_QWORD *a1)
{
  DropdownViewModel.menuItems.modify(a1);
}

void ScreenSharingSpectatorViewModel._sessionObserver.modify()
{
  OUTLINED_FUNCTION_7_6();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for ScreenSharingSpectatorViewModel.sessionObserver : ScreenSharingSpectatorViewModel@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 456))();
  *a2 = result;
  return result;
}

uint64_t key path setter for ScreenSharingSpectatorViewModel.sessionObserver : ScreenSharingSpectatorViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))(**(_QWORD **)a2 + 464);
  v3 = swift_retain();
  return v2(v3);
}

uint64_t ScreenSharingSpectatorViewModel.sessionObserver.getter()
{
  return ScreenSharingSpectatorViewModel.activeParticipantObserver.getter();
}

uint64_t ScreenSharingSpectatorViewModel.sessionObserver.setter()
{
  return ScreenSharingSpectatorViewModel.activeParticipantObserver.setter();
}

uint64_t closure #1 in ScreenSharingSpectatorViewModel.activeParticipantObserver.setter(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  _QWORD *v4;

  v4 = (_QWORD *)(a1 + *a3);
  swift_beginAccess();
  *v4 = a2;
  swift_retain();
  return swift_release();
}

void ScreenSharingSpectatorViewModel.sessionObserver.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_25_10();
  OUTLINED_FUNCTION_25_61((uint64_t)v1);
  OUTLINED_FUNCTION_8_17();
  OUTLINED_FUNCTION_4_130();
  OUTLINED_FUNCTION_17_22();
  OUTLINED_FUNCTION_15_8(OBJC_IVAR____TtC15ConversationKit31ScreenSharingSpectatorViewModel___observationRegistrar);
  _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type ScreenSharingSpectatorViewModel and conformance ScreenSharingSpectatorViewModel, (uint64_t (*)(uint64_t))type metadata accessor for ScreenSharingSpectatorViewModel, (uint64_t)&protocol conformance descriptor for ScreenSharingSpectatorViewModel);
  OUTLINED_FUNCTION_18_8(v2);
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_63_27();
  ScreenSharingSpectatorViewModel._sessionObserver.modify();
  *(_QWORD *)(v0 + 56) = v3;
  OUTLINED_FUNCTION_91();
}

void ScreenSharingSpectatorViewModel.sessionObserver.modify(_QWORD *a1)
{
  DropdownViewModel.menuItems.modify(a1);
}

uint64_t key path getter for ScreenSharingSpectatorViewModel.isTransitioningRemoteControlState : ScreenSharingSpectatorViewModel@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 504))();
  *a2 = result & 1;
  return result;
}

void key path setter for ScreenSharingSpectatorViewModel.isTransitioningRemoteControlState : ScreenSharingSpectatorViewModel()
{
  ScreenSharingSpectatorViewModel.isTransitioningRemoteControlState.setter();
}

uint64_t ScreenSharingSpectatorViewModel.isTransitioningRemoteControlState.getter()
{
  uint64_t v0;

  swift_getKeyPath();
  OUTLINED_FUNCTION_8_102();
  OUTLINED_FUNCTION_19();
  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC15ConversationKit31ScreenSharingSpectatorViewModel__isTransitioningRemoteControlState);
}

void ScreenSharingSpectatorViewModel.isTransitioningRemoteControlState.setter()
{
  ScreenSharingSpectatorViewModel.isZoomEnabled.setter();
}

uint64_t ScreenSharingSpectatorViewModel.isTransitioningRemoteControlStateTask.getter()
{
  swift_getKeyPath();
  OUTLINED_FUNCTION_8_102();
  OUTLINED_FUNCTION_19();
  return OUTLINED_FUNCTION_67_22();
}

uint64_t key path setter for ScreenSharingSpectatorViewModel.isTransitioningRemoteControlStateTask : ScreenSharingSpectatorViewModel()
{
  swift_retain();
  return ScreenSharingSpectatorViewModel.isTransitioningRemoteControlStateTask.setter();
}

uint64_t ScreenSharingSpectatorViewModel.isTransitioningRemoteControlStateTask.setter()
{
  return ScreenSharingSpectatorViewModel.activeParticipantObserver.setter();
}

uint64_t closure #1 in ScreenSharingSpectatorViewModel.isTransitioningRemoteControlStateTask.setter(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)(a1
            + OBJC_IVAR____TtC15ConversationKit31ScreenSharingSpectatorViewModel__isTransitioningRemoteControlStateTask) = a2;
  swift_retain();
  return swift_release();
}

void ScreenSharingSpectatorViewModel.remoteControlStateTransitionTime.getter()
{
  swift_getKeyPath();
  OUTLINED_FUNCTION_8_102();
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_0();
}

void key path setter for ScreenSharingSpectatorViewModel.remoteControlStateTransitionTime : ScreenSharingSpectatorViewModel()
{
  ScreenSharingSpectatorViewModel.remoteControlStateTransitionTime.setter();
}

void ScreenSharingSpectatorViewModel.remoteControlStateTransitionTime.setter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;

  KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_34_3(KeyPath, (uint64_t)partial apply for closure #1 in ScreenSharingSpectatorViewModel.remoteControlStateTransitionTime.setter, *(uint64_t (**)(uint64_t, uint64_t, uint64_t *))(*(_QWORD *)v0 + 920), v2);
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_14_1();
}

uint64_t ScreenSharingSpectatorViewModel._remoteControlState.didset(unint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  void (*v8)(unint64_t *__return_ptr, unint64_t);
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *a1;
  v8 = *(void (**)(unint64_t *__return_ptr, unint64_t))(*(_QWORD *)v2 + 648);
  v9 = *a1 >> 61;
  v10 = outlined copy of RemoteControlState(*a1);
  v8(&v23, v10);
  v11 = v23;
  if ((_DWORD)v9 == 4)
  {
    if (*(_QWORD *)(v7 + 16) >> 61 != 2 || (v23 & 0xE000000000000000) != 0xA000000000000000)
      goto LABEL_22;
LABEL_15:
    if (v23 != 0xA000000000000000)
    {
      if (v23 != 0xA000000000000010)
        goto LABEL_22;
      v11 = 0xA000000000000010;
    }
    goto LABEL_18;
  }
  if ((_DWORD)v9 == 2)
  {
    if (v23 >> 61 != 5)
      goto LABEL_22;
    goto LABEL_15;
  }
  if ((_DWORD)v9 != 1)
    goto LABEL_22;
  if (v23 >> 61 != 2)
  {
    if (v23 >> 61 == 4)
    {
      v12 = *(_QWORD *)(v23 + 16);
      outlined consume of RemoteControlState(v7);
      result = outlined consume of RemoteControlState(v11);
      if (v12 >> 61 != 2)
        return result;
      goto LABEL_19;
    }
LABEL_22:
    outlined consume of RemoteControlState(v7);
    return outlined consume of RemoteControlState(v11);
  }
LABEL_18:
  outlined consume of RemoteControlState(v7);
  outlined consume of RemoteControlState(v11);
LABEL_19:
  ScreenSharingSpectatorViewModel.isTransitioningRemoteControlState.setter();
  v15 = ScreenSharingSpectatorViewModel.isTransitioningRemoteControlStateTask.getter();
  if (v15)
  {
    v16 = v15;
    v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
    MEMORY[0x1C3B73268](v16, MEMORY[0x1E0DEE9C0] + 8, v17, MEMORY[0x1E0DEDB38]);
    swift_release();
  }
  v18 = type metadata accessor for TaskPriority();
  __swift_storeEnumTagSinglePayload((uint64_t)v6, 1, 1, v18);
  type metadata accessor for MainActor();
  swift_retain();
  v19 = static MainActor.shared.getter();
  v20 = (_QWORD *)swift_allocObject();
  v21 = MEMORY[0x1E0DF06E8];
  v20[2] = v19;
  v20[3] = v21;
  v20[4] = v2;
  _sScTss5Error_pRs_rlE8priority9operationScTyxsAA_pGScPSg_xyYaKYAcntcfCyt_Tgm5((uint64_t)v6, (uint64_t)&async function pointer to partial apply for closure #1 in ScreenSharingSpectatorViewModel._remoteControlState.didset, (uint64_t)v20);
  return ScreenSharingSpectatorViewModel.isTransitioningRemoteControlStateTask.setter();
}

uint64_t closure #1 in ScreenSharingSpectatorViewModel._remoteControlState.didset(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[2] = a4;
  v5 = type metadata accessor for ContinuousClock();
  v4[3] = v5;
  v4[4] = *(_QWORD *)(v5 - 8);
  v4[5] = swift_task_alloc();
  type metadata accessor for MainActor();
  v4[6] = static MainActor.shared.getter();
  v4[7] = dispatch thunk of Actor.unownedExecutor.getter();
  v4[8] = v6;
  return swift_task_switch();
}

uint64_t closure #1 in ScreenSharingSpectatorViewModel._remoteControlState.didset()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  char *v7;

  ScreenSharingSpectatorViewModel.remoteControlStateTransitionTime.getter();
  v2 = v1;
  v4 = v3;
  ContinuousClock.init()();
  v7 = (char *)&async function pointer to specialized Clock.sleep(for:tolerance:)
     + async function pointer to specialized Clock.sleep(for:tolerance:);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v5;
  *v5 = v0;
  v5[1] = closure #1 in ScreenSharingSpectatorViewModel._remoteControlState.didset;
  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, uint64_t))v7)(v2, v4, 0, 0, 1);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);

  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc();
  v2 = OUTLINED_FUNCTION_65_2();
  v3(v2);
  return OUTLINED_FUNCTION_26_47();
}

{
  uint64_t v0;

  swift_release();
  ScreenSharingSpectatorViewModel.isTransitioningRemoteControlState.setter();
  OUTLINED_FUNCTION_12();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t ScreenSharingSpectatorViewModel._remoteControlState.setter(_QWORD *a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v4;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit31ScreenSharingSpectatorViewModel__remoteControlState);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit31ScreenSharingSpectatorViewModel__remoteControlState) = *a1;
  outlined copy of RemoteControlState(v2);
  OUTLINED_FUNCTION_306();
  v4 = v2;
  ScreenSharingSpectatorViewModel._remoteControlState.didset(&v4);
  return outlined consume of RemoteControlState(v2);
}

_QWORD *key path getter for ScreenSharingSpectatorViewModel.remoteControlState : ScreenSharingSpectatorViewModel@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *result;
  uint64_t v4;

  result = (*(_QWORD *(**)(uint64_t *__return_ptr))(**(_QWORD **)a1 + 648))(&v4);
  *a2 = v4;
  return result;
}

void key path setter for ScreenSharingSpectatorViewModel.remoteControlState : ScreenSharingSpectatorViewModel(unint64_t *a1)
{
  outlined copy of RemoteControlState(*a1);
  ScreenSharingSpectatorViewModel.remoteControlState.setter();
}

unint64_t ScreenSharingSpectatorViewModel.remoteControlState.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t v3;

  swift_getKeyPath();
  OUTLINED_FUNCTION_8_102();
  OUTLINED_FUNCTION_11_0();
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit31ScreenSharingSpectatorViewModel__remoteControlState);
  *a1 = v3;
  return outlined copy of RemoteControlState(v3);
}

void ScreenSharingSpectatorViewModel.remoteControlState.setter()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t *);
  uint64_t v2;

  swift_getKeyPath();
  OUTLINED_FUNCTION_33_56();
  OUTLINED_FUNCTION_34_3(v0, (uint64_t)partial apply for closure #1 in ScreenSharingSpectatorViewModel.remoteControlState.setter, v1, v2);
  OUTLINED_FUNCTION_306();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_14_1();
}

unint64_t closure #1 in ScreenSharingSpectatorViewModel.remoteControlState.setter(uint64_t a1, unint64_t a2)
{
  unint64_t v3;

  v3 = a2;
  outlined copy of RemoteControlState(a2);
  return ScreenSharingSpectatorViewModel._remoteControlState.setter(&v3);
}

uint64_t ScreenSharingSpectatorViewModel.requirmentsLock.getter()
{
  swift_getKeyPath();
  OUTLINED_FUNCTION_8_102();
  OUTLINED_FUNCTION_19();
  return OUTLINED_FUNCTION_67_22();
}

void key path setter for ScreenSharingSpectatorViewModel.requirmentsLock : ScreenSharingSpectatorViewModel()
{
  swift_retain();
  ScreenSharingSpectatorViewModel.requirmentsLock.setter();
}

void ScreenSharingSpectatorViewModel.requirmentsLock.setter()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t *);
  uint64_t v2;

  swift_getKeyPath();
  OUTLINED_FUNCTION_33_56();
  OUTLINED_FUNCTION_34_3(v0, (uint64_t)partial apply for closure #1 in ScreenSharingSpectatorViewModel.requirmentsLock.setter, v1, v2);
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_14_1();
}

uint64_t closure #1 in ScreenSharingSpectatorViewModel.requirmentsLock.setter(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)(a1 + OBJC_IVAR____TtC15ConversationKit31ScreenSharingSpectatorViewModel__requirmentsLock) = a2;
  swift_retain();
  return swift_release();
}

void ScreenSharingSpectatorViewModel._remoteControlRequirements.didset()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_42_2();
  if (one-time initialization token for screenSharing != -1)
    swift_once();
  v1 = OUTLINED_FUNCTION_17_2();
  __swift_project_value_buffer(v1, (uint64_t)&static Log.screenSharing);
  OUTLINED_FUNCTION_29_1();
  v2 = Logger.logObject.getter();
  v3 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_78_0(v2))
  {
    v4 = (uint8_t *)OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_105();
    *(_DWORD *)v4 = 136315138;
    (*(void (**)(void))(*(_QWORD *)v0 + 752))();
    v5 = OUTLINED_FUNCTION_90_2();
    OUTLINED_FUNCTION_72_25(v5, v6, v7);
    OUTLINED_FUNCTION_59_1();
    OUTLINED_FUNCTION_23_0();
    OUTLINED_FUNCTION_27();
    OUTLINED_FUNCTION_48(&dword_1BD004000, v2, v3, "Updated remote control requirements satisfied %s", v4);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

  OUTLINED_FUNCTION_23_0();
  OUTLINED_FUNCTION_9_5();
}

void key path getter for ScreenSharingSpectatorViewModel.remoteControlRequirements : ScreenSharingSpectatorViewModel(uint64_t a1)
{
  uint64_t *v1;

  *v1 = OUTLINED_FUNCTION_68_25(a1);
  OUTLINED_FUNCTION_0();
}

void key path setter for ScreenSharingSpectatorViewModel.remoteControlRequirements : ScreenSharingSpectatorViewModel()
{
  OUTLINED_FUNCTION_126_5();
  OUTLINED_FUNCTION_0();
}

void ScreenSharingSpectatorViewModel.remoteControlRequirements.getter()
{
  swift_getKeyPath();
  OUTLINED_FUNCTION_8_102();
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_0();
}

void ScreenSharingSpectatorViewModel.remoteControlRequirements.setter()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t *);
  uint64_t v2;

  swift_getKeyPath();
  OUTLINED_FUNCTION_33_56();
  OUTLINED_FUNCTION_34_3(v0, (uint64_t)partial apply for closure #1 in ScreenSharingSpectatorViewModel.remoteControlRequirements.setter, v1, v2);
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_14_1();
}

id ScreenSharingSpectatorViewModel.interactionController.getter()
{
  uint64_t v0;

  return objc_retain(*(id *)(v0
                           + OBJC_IVAR____TtC15ConversationKit31ScreenSharingSpectatorViewModel_interactionController));
}

uint64_t ScreenSharingSpectatorViewModel.init(serverBag:interactionController:screenSharingStateMonitor:)()
{
  void *v0;
  void *v1;
  void *v2;
  uint64_t v3;

  swift_getObjectType();
  v0 = (void *)OUTLINED_FUNCTION_9_55();
  return OUTLINED_FUNCTION_52_40(v0, v1, v2, v3);
}

uint64_t closure #1 in ScreenSharingSpectatorViewModel.init(serverBag:interactionController:screenSharingStateMonitor:)(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_30_6();
  OUTLINED_FUNCTION_1();
  result = swift_weakLoadStrong();
  if (result)
  {
    v5 = result;
    v6 = type metadata accessor for TaskPriority();
    OUTLINED_FUNCTION_0_10(v6);
    type metadata accessor for MainActor();
    swift_retain();
    v7 = a2;
    v8 = static MainActor.shared.getter();
    v9 = (_QWORD *)OUTLINED_FUNCTION_15();
    v10 = MEMORY[0x1E0DF06E8];
    v9[2] = v8;
    v9[3] = v10;
    v9[4] = v5;
    v9[5] = v7;
    _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
    swift_release();
    return OUTLINED_FUNCTION_11_0();
  }
  return result;
}

uint64_t closure #1 in closure #1 in ScreenSharingSpectatorViewModel.init(serverBag:interactionController:screenSharingStateMonitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[2] = a4;
  v5[3] = a5;
  type metadata accessor for MainActor();
  v5[4] = static MainActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  return swift_task_switch();
}

void closure #1 in closure #1 in ScreenSharingSpectatorViewModel.init(serverBag:interactionController:screenSharingStateMonitor:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v1 = *(_QWORD **)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 16);
  v3 = swift_release();
  (*(void (**)(uint64_t *__return_ptr, uint64_t))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x178))(&v14, v3);
  ScreenSharingSpectatorViewModel.remoteControlState.setter();
  v4 = (*(_QWORD *(**)(uint64_t *__return_ptr))(*(_QWORD *)v2 + 648))(&v14);
  OUTLINED_FUNCTION_98_13((uint64_t)v4, v5, v6, v7, v8, v9, v10, v11, v13, v14);
  __asm { BR              X10 }
}

uint64_t sub_1BD4635C4(unint64_t a1)
{
  uint64_t v1;

  outlined consume of RemoteControlState(a1);
  (*(void (**)(_QWORD))(**(_QWORD **)(v1 + 16) + 368))(0);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

void sub_1BD4635F4(unint64_t a1)
{
  outlined consume of RemoteControlState(a1);
  JUMPOUT(0x1BD4635D8);
}

void closure #2 in ScreenSharingSpectatorViewModel.init(serverBag:interactionController:screenSharingStateMonitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  os_unfair_lock_s *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  OUTLINED_FUNCTION_93();
  v1 = v0;
  v3 = v2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Set<Participant>>.Publisher);
  v20 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v3;
  if (one-time initialization token for screenSharing != -1)
    swift_once();
  v8 = OUTLINED_FUNCTION_17_2();
  v9 = __swift_project_value_buffer(v8, (uint64_t)&static Log.screenSharing);
  OUTLINED_FUNCTION_29_1();
  Logger.logObject.getter();
  v10 = OUTLINED_FUNCTION_12_0();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)OUTLINED_FUNCTION_105();
    v22 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v11 = 136315138;
    if (v7)
    {
      v21 = v7;
      type metadata accessor for ScreenSharingInteractionSession();
      OUTLINED_FUNCTION_1_28();
      v12 = String.init<A>(reflecting:)();
      v14 = v13;
    }
    else
    {
      v14 = 0xE300000000000000;
      v12 = 7104878;
    }
    v21 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v12, v14, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_23_0();
    OUTLINED_FUNCTION_54_1();
    OUTLINED_FUNCTION_48(&dword_1BD004000, v9, v10, "Loading session into view model %s", v11);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

  OUTLINED_FUNCTION_23_0();
  if (v7)
  {
    OUTLINED_FUNCTION_1_28();
    GroupSession.activity.getter();
    if ((v22 & 1) != 0)
    {
      swift_getKeyPath();
      OUTLINED_FUNCTION_4_130();
      OUTLINED_FUNCTION_27_0();
      OUTLINED_FUNCTION_65_24();
      _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type ScreenSharingSpectatorViewModel and conformance ScreenSharingSpectatorViewModel, (uint64_t (*)(uint64_t))type metadata accessor for ScreenSharingSpectatorViewModel, (uint64_t)&protocol conformance descriptor for ScreenSharingSpectatorViewModel);
      OUTLINED_FUNCTION_50_40();
      OUTLINED_FUNCTION_21_11();
      v15 = *(_QWORD *)(v1
                      + OBJC_IVAR____TtC15ConversationKit31ScreenSharingSpectatorViewModel__remoteControlRequirements);
      if ((v15 & 0x10) == 0)
        *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit31ScreenSharingSpectatorViewModel__remoteControlRequirements) = v15 | 0x10;
      ScreenSharingSpectatorViewModel._remoteControlRequirements.didset();
      v22 = v1;
      swift_getKeyPath();
      OUTLINED_FUNCTION_51_43();
      OUTLINED_FUNCTION_21_11();
    }
    swift_getKeyPath();
    OUTLINED_FUNCTION_4_130();
    OUTLINED_FUNCTION_27_0();
    OUTLINED_FUNCTION_65_24();
    _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type ScreenSharingSpectatorViewModel and conformance ScreenSharingSpectatorViewModel, (uint64_t (*)(uint64_t))type metadata accessor for ScreenSharingSpectatorViewModel, (uint64_t)&protocol conformance descriptor for ScreenSharingSpectatorViewModel);
    OUTLINED_FUNCTION_50_40();
    OUTLINED_FUNCTION_21_11();
    v16 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit31ScreenSharingSpectatorViewModel__remoteControlRequirements);
    if ((v16 & 1) == 0)
      *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit31ScreenSharingSpectatorViewModel__remoteControlRequirements) = v16 | 1;
    ScreenSharingSpectatorViewModel._remoteControlRequirements.didset();
    v22 = v1;
    swift_getKeyPath();
    OUTLINED_FUNCTION_51_43();
    OUTLINED_FUNCTION_21_11();
    GroupSession.$activeParticipants.getter();
    v17 = OUTLINED_FUNCTION_15();
    *(_QWORD *)(v17 + 16) = v1;
    *(_QWORD *)(v17 + 24) = v7;
    lazy protocol witness table accessor for type Published<Set<Participant>>.Publisher and conformance Published<A>.Publisher(&lazy protocol witness table cache variable for type Published<Set<Participant>>.Publisher and conformance Published<A>.Publisher, &demangling cache variable for type metadata for Published<Set<Participant>>.Publisher);
    OUTLINED_FUNCTION_1_28();
    swift_retain();
    v18 = Publisher<>.sink(receiveValue:)();
    OUTLINED_FUNCTION_27_0();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v6, v4);
    (*(void (**)(uint64_t))(*(_QWORD *)v1 + 416))(v18);
  }
  else
  {
    v19 = (os_unfair_lock_s *)ScreenSharingSpectatorViewModel.requirmentsLock.getter();
    specialized OSAllocatedUnfairLock<A>.withLock<A>(_:)((_QWORD *(*)(uint64_t *__return_ptr))partial apply for closure #1 in closure #2 in ScreenSharingSpectatorViewModel.init(serverBag:interactionController:screenSharingStateMonitor:), v1, v19);
  }
  swift_release();
  OUTLINED_FUNCTION_52_1();
}

uint64_t closure #1 in closure #2 in ScreenSharingSpectatorViewModel.init(serverBag:interactionController:screenSharingStateMonitor:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  swift_getKeyPath();
  (*(void (**)(void))(*(_QWORD *)a1 + 912))();
  swift_release();
  swift_getKeyPath();
  _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type ScreenSharingSpectatorViewModel and conformance ScreenSharingSpectatorViewModel, (uint64_t (*)(uint64_t))type metadata accessor for ScreenSharingSpectatorViewModel, (uint64_t)&protocol conformance descriptor for ScreenSharingSpectatorViewModel);
  ObservationRegistrar.willSet<A, B>(_:keyPath:)();
  swift_release();
  v4 = *(_QWORD *)(a1 + OBJC_IVAR____TtC15ConversationKit31ScreenSharingSpectatorViewModel__remoteControlRequirements);
  if ((v4 & 1) != 0)
  {
    *(_QWORD *)(a1 + OBJC_IVAR____TtC15ConversationKit31ScreenSharingSpectatorViewModel__remoteControlRequirements) = v4 & 0xFFFFFFFFFFFFFFFELL;
    v5 = 1;
  }
  else
  {
    v5 = 0;
  }
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = (v4 & 1) == 0;
  ScreenSharingSpectatorViewModel._remoteControlRequirements.didset();
  swift_getKeyPath();
  ObservationRegistrar.didSet<A, B>(_:keyPath:)();
  return swift_release();
}

void specialized OSAllocatedUnfairLock<A>.withLock<A>(_:)(_QWORD *(*a1)(uint64_t *__return_ptr), uint64_t a2, os_unfair_lock_s *a3)
{
  os_unfair_lock_s *v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a3 + 4;
  os_unfair_lock_lock(a3 + 4);
  specialized closure #1 in OSAllocatedUnfairLock<A>.withLock<A>(_:)(v5, a1, (uint64_t)&v6);
  os_unfair_lock_unlock(v4);
}

uint64_t closure #2 in closure #2 in ScreenSharingSpectatorViewModel.init(serverBag:interactionController:screenSharingStateMonitor:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  os_unfair_lock_s *v6;

  v5 = *a1;
  v6 = (os_unfair_lock_s *)(ScreenSharingSpectatorViewModel.requirmentsLock.getter() + 16);
  os_unfair_lock_lock(v6);
  closure #1 in closure #2 in closure #2 in ScreenSharingSpectatorViewModel.init(serverBag:interactionController:screenSharingStateMonitor:)(v5, a3, a2);
  os_unfair_lock_unlock(v6);
  return swift_release();
}

uint64_t closure #1 in closure #2 in closure #2 in ScreenSharingSpectatorViewModel.init(serverBag:interactionController:screenSharingStateMonitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v18;

  if (one-time initialization token for screenSharing != -1)
    swift_once();
  v5 = type metadata accessor for Logger();
  __swift_project_value_buffer(v5, (uint64_t)&static Log.screenSharing);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  v6 = Logger.logObject.getter();
  v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc();
    v9 = swift_slowAlloc();
    v18 = v9;
    *(_DWORD *)v8 = 134218242;
    swift_bridgeObjectRelease();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2080;
    type metadata accessor for ScreenSharingInteractionSession();
    swift_retain();
    v10 = String.init<A>(reflecting:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v10, v11, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v6, v7, "Updating participant requirement with active count %ld for session %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v9, -1, -1);
    MEMORY[0x1C3B751B8](v8, -1, -1);

  }
  else
  {

    swift_release_n();
    swift_bridgeObjectRelease_n();
  }
  v12 = *(_QWORD *)(a1 + 16);
  swift_getKeyPath();
  (*(void (**)(void))(*(_QWORD *)a3 + 912))();
  swift_release();
  if (v12 == 2)
  {
    v18 = a3;
    swift_getKeyPath();
    _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type ScreenSharingSpectatorViewModel and conformance ScreenSharingSpectatorViewModel, (uint64_t (*)(uint64_t))type metadata accessor for ScreenSharingSpectatorViewModel, (uint64_t)&protocol conformance descriptor for ScreenSharingSpectatorViewModel);
    ObservationRegistrar.willSet<A, B>(_:keyPath:)();
    swift_release();
    v13 = OBJC_IVAR____TtC15ConversationKit31ScreenSharingSpectatorViewModel__remoteControlRequirements;
    v14 = *(_QWORD *)(a3 + OBJC_IVAR____TtC15ConversationKit31ScreenSharingSpectatorViewModel__remoteControlRequirements);
    if ((v14 & 2) == 0)
    {
      v15 = v14 | 2;
LABEL_11:
      *(_QWORD *)(a3 + v13) = v15;
    }
  }
  else
  {
    v18 = a3;
    swift_getKeyPath();
    _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type ScreenSharingSpectatorViewModel and conformance ScreenSharingSpectatorViewModel, (uint64_t (*)(uint64_t))type metadata accessor for ScreenSharingSpectatorViewModel, (uint64_t)&protocol conformance descriptor for ScreenSharingSpectatorViewModel);
    ObservationRegistrar.willSet<A, B>(_:keyPath:)();
    swift_release();
    v13 = OBJC_IVAR____TtC15ConversationKit31ScreenSharingSpectatorViewModel__remoteControlRequirements;
    v16 = *(_QWORD *)(a3 + OBJC_IVAR____TtC15ConversationKit31ScreenSharingSpectatorViewModel__remoteControlRequirements);
    if ((v16 & 2) != 0)
    {
      v15 = v16 & 0xFFFFFFFFFFFFFFFDLL;
      goto LABEL_11;
    }
  }
  ScreenSharingSpectatorViewModel._remoteControlRequirements.didset();
  v18 = a3;
  swift_getKeyPath();
  ObservationRegistrar.didSet<A, B>(_:keyPath:)();
  return swift_release();
}

void ScreenSharingSpectatorViewModel.activeControlParticipant.getter(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int v13;
  unsigned int v14;
  unint64_t v15;
  char v16;
  uint64_t v17[2];

  v4 = OUTLINED_FUNCTION_13_101(a1);
  v12 = OUTLINED_FUNCTION_98_13((uint64_t)v4, v5, v6, v7, v8, v9, v10, v11, v17[0], v17[1]);
  v14 = v13 - 2;
  v15 = outlined consume of RemoteControlState(v12);
  if (v14 <= 2
    && (*(uint64_t (**)(unint64_t))((*MEMORY[0x1E0DEEDD8] & **(_QWORD **)(v2
                                                                                         + OBJC_IVAR____TtC15ConversationKit31ScreenSharingSpectatorViewModel_interactionController))
                                                   + 0xF8))(v15))
  {
    ScreenSharingInteractionSession.activeControlParticipant.getter((char *)v17 + 7);
    OUTLINED_FUNCTION_43();
    v16 = HIBYTE(v17[0]);
  }
  else
  {
    v16 = 0;
  }
  *a2 = v16;
  OUTLINED_FUNCTION_45_0();
}

uint64_t ScreenSharingSpectatorViewModel.statusText.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(void);
  uint64_t v16;
  _QWORD *v17;
  unint64_t v18;
  int v19;
  char v20;
  char v21;
  objc_class *v22;
  unint64_t v23;
  NSBundle v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 *v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  Class v36;
  id v37;
  id v38;
  uint64_t v39;
  objc_class *v40;
  NSBundle v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  objc_class *v46;
  unint64_t v47;
  NSBundle v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  objc_class *v56;
  NSBundle v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __n128 *v63;
  void *v64;
  id v65;
  objc_class *v66;
  uint64_t v67;
  objc_class *v68;
  Class v69;
  id v70;
  id v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  objc_class *v77;
  NSBundle v78;
  uint64_t v79;
  uint64_t v80;
  __n128 *v81;
  void *v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  Class v87;
  id v88;
  id v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  void *v107;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  void *v117;
  unint64_t v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char v136;
  unsigned __int8 v137;
  unint64_t v138;
  uint64_t v139;
  uint64_t v140;

  OUTLINED_FUNCTION_93();
  v139 = v2;
  v140 = v3;
  v4 = type metadata accessor for PersonNameComponents();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_16_2();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v121 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_79();
  v13 = v11 - v12;
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_108_13();
  v15();
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9) != 1)
  {
    v16 = OUTLINED_FUNCTION_119_5((uint64_t)v8);
    v17 = (*(_QWORD *(**)(unint64_t *__return_ptr, uint64_t))(*(_QWORD *)v1 + 648))(&v138, v16);
    v18 = v138;
    (*(void (**)(unsigned __int8 *__return_ptr, _QWORD *))(*(_QWORD *)v1 + 784))(&v137, v17);
    v19 = v137;
    v20 = OUTLINED_FUNCTION_43_53();
    v21 = (*(uint64_t (**)(void))(*(_QWORD *)v1 + 264))();
    if (!v19)
      goto LABEL_6;
    if (v19 != 1)
    {
LABEL_23:
      v40 = (objc_class *)objc_msgSend((id)objc_opt_self(), sel_conversationKit);
      OUTLINED_FUNCTION_18_3();
      OUTLINED_FUNCTION_2_15();
      v41.super.isa = v40;
      OUTLINED_FUNCTION_49_2(v42, v43, v44, v45, v41);
      OUTLINED_FUNCTION_87_16();
LABEL_56:
      v52 = OUTLINED_FUNCTION_123_10();
      goto LABEL_57;
    }
    if ((v20 & 1) != 0)
    {
LABEL_6:
      if (v18 >> 61 != 2)
      {
        if (v18 >> 61 == 5 && (v18 == 0xA000000000000000 || v18 == 0xA000000000000010))
        {
          if ((v20 & 1) != 0)
            goto LABEL_27;
        }
        else
        {
          OUTLINED_FUNCTION_123_10();
        }
        goto LABEL_14;
      }
      if ((v21 & 1) == 0)
      {
        OUTLINED_FUNCTION_123_10();
        if ((v20 & 1) == 0)
        {
LABEL_27:
          v46 = (objc_class *)objc_msgSend((id)objc_opt_self(), sel_conversationKit);
          OUTLINED_FUNCTION_18_3();
          v47 = OUTLINED_FUNCTION_24_62();
          v48.super.isa = v46;
          OUTLINED_FUNCTION_49_2(v47, v49, v50, v51, v48);
          OUTLINED_FUNCTION_87_16();
LABEL_57:
          OUTLINED_FUNCTION_35_2(v52, type metadata accessor for Participant);
          return v1;
        }
LABEL_14:
        OUTLINED_FUNCTION_78_20();
        if (v131 == 1)
        {
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v128, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
          goto LABEL_35;
        }
        if ((v136 & 1) != 0)
        {
          OUTLINED_FUNCTION_124_10();
          goto LABEL_35;
        }
        v53 = v135;
        OUTLINED_FUNCTION_124_10();
        v54 = TUScreenShareDeviceFamily.displayName.getter(v53);
        if (!v55)
        {
LABEL_35:
          OUTLINED_FUNCTION_78_20();
          if (v131 == 1)
          {
            outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v128, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
            v72 = 0;
            v73 = 1;
          }
          else
          {
            v73 = v136;
            if (v136)
              v72 = 0;
            else
              v72 = v135;
            OUTLINED_FUNCTION_124_10();
          }
          v74 = String.deviceAdjustedLocalizedKey(forDeviceFamily:)(v72, v73, 0xD000000000000018, 0x80000001BD672F30);
          v76 = v75;
          v77 = (objc_class *)objc_msgSend((id)objc_opt_self(), sel_conversationKit);
          OUTLINED_FUNCTION_18_3();
          v78.super.isa = v77;
          v79 = OUTLINED_FUNCTION_49_2(v74, v76, 0x61737265766E6F43, 0xEF74694B6E6F6974, v78);
          OUTLINED_FUNCTION_86_15(v79, v80);
          swift_bridgeObjectRelease();

          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
          v81 = (__n128 *)OUTLINED_FUNCTION_15();
          OUTLINED_FUNCTION_84_15(v81, (__n128)xmmword_1BD6441D0);
          if (v82)
          {
            v83 = v82;
            outlined bridged method (pb) of @objc TUHandle.siriDisplayName.getter(v83);
            v123 = v85;
            if (v84)
            {
              v86 = v84;
              if ((objc_msgSend(v83, sel_shouldHideContact) & 1) != 0)
              {
                swift_bridgeObjectRetain();
                OUTLINED_FUNCTION_114_14();
                OUTLINED_FUNCTION_92_14();
                OUTLINED_FUNCTION_50_2();
                if (one-time initialization token for initials != -1)
                  swift_once();
                OUTLINED_FUNCTION_1();
                OUTLINED_FUNCTION_118_1();
                v87 = OUTLINED_FUNCTION_79_21();
                v88 = OUTLINED_FUNCTION_1_15((uint64_t)v87, sel_stringFromPersonNameComponents_);
                OUTLINED_FUNCTION_14();

                OUTLINED_FUNCTION_115_12();
                OUTLINED_FUNCTION_75_22();
                OUTLINED_FUNCTION_10_6();
                OUTLINED_FUNCTION_29_64();
                OUTLINED_FUNCTION_109_11();

                OUTLINED_FUNCTION_133();
                v89 = 0;
                v74 = v86;
                v5 = v123;
                goto LABEL_50;
              }

              OUTLINED_FUNCTION_25();
            }
            else
            {

            }
          }
          OUTLINED_FUNCTION_103_10();
          v90 = OUTLINED_FUNCTION_96_13();
          OUTLINED_FUNCTION_91_15(v90, v91, v92, v93, v94, v95, v96, v97, v121, v122, v123, v124, v125, v126, v127, v128, v129, v130, v131,
            v132);
          OUTLINED_FUNCTION_95_16();
          v89 = OUTLINED_FUNCTION_16_83(v98);
          swift_bridgeObjectRetain();
          OUTLINED_FUNCTION_5_0();
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_25();

          swift_release();
          OUTLINED_FUNCTION_141_7();
LABEL_50:
          OUTLINED_FUNCTION_2_1();
          OUTLINED_FUNCTION_25();

          v81[3].n128_u64[1] = MEMORY[0x1E0DEA968];
          v81[4].n128_u64[0] = lazy protocol witness table accessor for type String and conformance String();
          v81[2].n128_u64[0] = v5;
          v81[2].n128_u64[1] = v74;
          OUTLINED_FUNCTION_85_20();
LABEL_51:
          v1 = String.init(format:_:)();
          v52 = OUTLINED_FUNCTION_53();
          goto LABEL_57;
        }
        v124 = v55;
        v125 = v54;
        v56 = (objc_class *)objc_msgSend((id)objc_opt_self(), sel_conversationKit);
        OUTLINED_FUNCTION_18_3();
        OUTLINED_FUNCTION_2_15();
        v57.super.isa = v56;
        v122 = OUTLINED_FUNCTION_49_2(v58, v59, v60, v61, v57);
        v123 = v62;

        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
        v63 = (__n128 *)OUTLINED_FUNCTION_15();
        OUTLINED_FUNCTION_84_15(v63, (__n128)xmmword_1BD645380);
        if (v64)
        {
          v65 = v64;
          outlined bridged method (pb) of @objc TUHandle.siriDisplayName.getter(v65);
          v121 = v67;
          if (v66)
          {
            v68 = v66;
            if ((objc_msgSend(v65, sel_shouldHideContact) & 1) != 0)
            {
              swift_bridgeObjectRetain();
              OUTLINED_FUNCTION_114_14();
              OUTLINED_FUNCTION_92_14();
              OUTLINED_FUNCTION_50_2();
              if (one-time initialization token for initials != -1)
                swift_once();
              OUTLINED_FUNCTION_1();
              OUTLINED_FUNCTION_118_1();
              v69 = OUTLINED_FUNCTION_79_21();
              v70 = OUTLINED_FUNCTION_1_15((uint64_t)v69, sel_stringFromPersonNameComponents_);
              OUTLINED_FUNCTION_14();

              OUTLINED_FUNCTION_115_12();
              OUTLINED_FUNCTION_75_22();
              OUTLINED_FUNCTION_10_6();
              OUTLINED_FUNCTION_29_64();
              OUTLINED_FUNCTION_109_11();

              OUTLINED_FUNCTION_133();
              v71 = 0;
              v56 = v68;
              v5 = v121;
              goto LABEL_62;
            }

            OUTLINED_FUNCTION_54_1();
          }
          else
          {

          }
        }
        OUTLINED_FUNCTION_103_10();
        v109 = OUTLINED_FUNCTION_96_13();
        OUTLINED_FUNCTION_91_15(v109, v110, v111, v112, v113, v114, v115, v116, v123, v124, v125, v126, v127, v128, v129, v130, v131, v132, v133,
          v134);
        OUTLINED_FUNCTION_95_16();
        v71 = OUTLINED_FUNCTION_16_83(v117);
        swift_bridgeObjectRetain();
        OUTLINED_FUNCTION_5_0();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_54_1();

        swift_release();
        OUTLINED_FUNCTION_141_7();
LABEL_62:
        OUTLINED_FUNCTION_2_1();
        OUTLINED_FUNCTION_54_1();

        v118 = MEMORY[0x1E0DEA968];
        v63[3].n128_u64[1] = MEMORY[0x1E0DEA968];
        v119 = lazy protocol witness table accessor for type String and conformance String();
        v63[2].n128_u64[0] = v5;
        v63[2].n128_u64[1] = (unint64_t)v56;
        v63[6].n128_u64[0] = v118;
        v63[6].n128_u64[1] = v119;
        v120 = v125;
        v63[4].n128_u64[0] = v119;
        v63[4].n128_u64[1] = v120;
        v63[5].n128_u64[0] = v124;
        goto LABEL_51;
      }
      goto LABEL_23;
    }
    v22 = (objc_class *)objc_msgSend((id)objc_opt_self(), sel_conversationKit);
    OUTLINED_FUNCTION_18_3();
    v23 = OUTLINED_FUNCTION_24_62();
    v24.super.isa = v22;
    v28 = OUTLINED_FUNCTION_49_2(v23, v25, v26, v27, v24);
    OUTLINED_FUNCTION_86_15(v28, v29);

    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v30 = (__n128 *)OUTLINED_FUNCTION_15();
    OUTLINED_FUNCTION_84_15(v30, (__n128)xmmword_1BD6441D0);
    if (v31)
    {
      v32 = v31;
      outlined bridged method (pb) of @objc TUHandle.siriDisplayName.getter(v32);
      v123 = v34;
      if (v33)
      {
        v35 = v33;
        if ((objc_msgSend(v32, sel_shouldHideContact) & 1) != 0)
        {
          OUTLINED_FUNCTION_5_0();
          OUTLINED_FUNCTION_114_14();
          v122 = v35;
          PersonNameComponents.givenName.setter();
          OUTLINED_FUNCTION_50_2();
          if (one-time initialization token for initials != -1)
            swift_once();
          OUTLINED_FUNCTION_1();
          OUTLINED_FUNCTION_118_1();
          v36 = OUTLINED_FUNCTION_79_21();
          v37 = OUTLINED_FUNCTION_1_15((uint64_t)v36, sel_stringFromPersonNameComponents_);
          OUTLINED_FUNCTION_14();

          OUTLINED_FUNCTION_115_12();
          OUTLINED_FUNCTION_75_22();
          OUTLINED_FUNCTION_10_6();
          OUTLINED_FUNCTION_29_64();
          OUTLINED_FUNCTION_109_11();

          OUTLINED_FUNCTION_133();
          v38 = 0;
          v39 = v122;
          v5 = v123;
          goto LABEL_55;
        }

        OUTLINED_FUNCTION_27();
      }
      else
      {

      }
    }
    _s15ConversationKit11ParticipantVWOcTm_2(v0, v13, type metadata accessor for Participant);
    v99 = *(_QWORD *)(v0 + *(int *)(v9 + 64));
    swift_retain();
    v39 = v99;
    ParticipantContactDetailsCache.contactDetails(for:)(v13, v100, v101, v102, v103, v104, v105, v106, v121, v122, v123, v124, v125, v126, v127, v128, v129, v130, v131,
      v132);
    OUTLINED_FUNCTION_95_16();
    v38 = OUTLINED_FUNCTION_16_83(v107);
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_5_0();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_53();

    swift_release();
    outlined destroy of AccountUpdateNotice(v13, type metadata accessor for Participant);
LABEL_55:
    OUTLINED_FUNCTION_2_1();
    OUTLINED_FUNCTION_53();

    v30[3].n128_u64[1] = MEMORY[0x1E0DEA968];
    v30[4].n128_u64[0] = lazy protocol witness table accessor for type String and conformance String();
    v30[2].n128_u64[0] = v5;
    v30[2].n128_u64[1] = v39;
    OUTLINED_FUNCTION_85_20();
    v1 = String.init(format:_:)();
    OUTLINED_FUNCTION_53();
    goto LABEL_56;
  }
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v8, &demangling cache variable for type metadata for Participant?);
  return 0;
}

void ScreenSharingSpectatorViewModel.isContentTransformEnabled.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v0 = static Platform.current.getter();
  if (!(_BYTE)v0)
  {
    v1 = OUTLINED_FUNCTION_13_101(v0);
    v9 = OUTLINED_FUNCTION_98_13((uint64_t)v1, v2, v3, v4, v5, v6, v7, v8, v10, v11);
    outlined consume of RemoteControlState(v9);
  }
  OUTLINED_FUNCTION_36();
}

uint64_t ScreenSharingSpectatorViewModel.contentOrientation.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_30_6();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_59_35();
  if (((*(uint64_t (**)(void))(v4 + 800))() & 1) == 0)
    return 1;
  OUTLINED_FUNCTION_42_48();
  v5 = OUTLINED_FUNCTION_100_11();
  if ((_DWORD)v5)
  {
    OUTLINED_FUNCTION_30_7(v5, &demangling cache variable for type metadata for Participant?);
    return 0;
  }
  else
  {
    _s15ConversationKit11ParticipantVWOcTm_2(v1, v0, type metadata accessor for Participant);
    OUTLINED_FUNCTION_30_7(v7, &demangling cache variable for type metadata for Participant?);
    v6 = Participant.deviceOrientation.getter();
    outlined destroy of AccountUpdateNotice(v0, type metadata accessor for Participant);
  }
  return v6;
}

double ScreenSharingSpectatorViewModel.contentSize.getter()
{
  uint64_t v0;
  os_log_type_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(void);
  double v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(_QWORD);
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint8_t *v32;
  char v33;
  uint64_t v34;
  uint64_t v35[3];
  char v36;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_79();
  v5 = v3 - v4;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v32 - v7;
  v9 = OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_79();
  v13 = v11 - v12;
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_108_13();
  v15();
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v8, &demangling cache variable for type metadata for Participant?);
    return 0.0;
  }
  OUTLINED_FUNCTION_119_5((uint64_t)v8);
  v17 = ScreenSharingSpectatorViewModel.contentOrientation.getter();
  if ((v18 & 1) == 0)
  {
    if ((v17 | 2) == 3)
    {
      OUTLINED_FUNCTION_113_13();
      OUTLINED_FUNCTION_112_11();
      if ((v33 & 1) == 0)
      {
        OUTLINED_FUNCTION_111_10();
        v19 = OUTLINED_FUNCTION_110_13();
        v16 = 1.0;
        if ((v36 & 1) == 0)
          v16 = *(double *)v35;
LABEL_16:
        OUTLINED_FUNCTION_35_2(v19, type metadata accessor for Participant);
        return v16;
      }
    }
    else
    {
      OUTLINED_FUNCTION_113_13();
      OUTLINED_FUNCTION_112_11();
      if ((v33 & 1) == 0)
      {
        OUTLINED_FUNCTION_111_10();
        v19 = OUTLINED_FUNCTION_110_13();
        v16 = 1.0;
        if ((v36 & 1) == 0)
          v16 = *(double *)&v35[2];
        goto LABEL_16;
      }
    }
  }
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  v20 = OUTLINED_FUNCTION_17_2();
  v21 = __swift_project_value_buffer(v20, (uint64_t)&static Logger.conversationKit);
  v22 = OUTLINED_FUNCTION_65_2();
  _s15ConversationKit11ParticipantVWOcTm_2(v22, v23, v24);
  Logger.logObject.getter();
  v25 = OUTLINED_FUNCTION_232();
  if (OUTLINED_FUNCTION_41_3(v25))
  {
    v26 = (uint8_t *)OUTLINED_FUNCTION_105();
    v35[0] = OUTLINED_FUNCTION_105();
    *(_DWORD *)v26 = 136315138;
    v32 = v26 + 4;
    _s15ConversationKit11ParticipantVWOcTm_2(v13, v5, type metadata accessor for Participant);
    __swift_storeEnumTagSinglePayload(v5, 0, 1, v9);
    specialized >> prefix<A>(_:)(v5);
    v28 = v27;
    v30 = v29;
    OUTLINED_FUNCTION_30_7(v27, &demangling cache variable for type metadata for Participant?);
    v34 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v28, v30, v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_25();
    outlined destroy of AccountUpdateNotice(v13, type metadata accessor for Participant);
    OUTLINED_FUNCTION_48(&dword_1BD004000, v21, v1, "Couldn't determine participant orientation or size, falling back to a square aspect ratio for participant: %s", v26);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

  outlined destroy of AccountUpdateNotice(v13, type metadata accessor for Participant);
  outlined destroy of AccountUpdateNotice(v0, type metadata accessor for Participant);
  return 1.0;
}

double ScreenSharingSpectatorViewModel.contentScale.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v12;
  double v13;
  double v14;
  char v15;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_4_1();
  v2 = OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_58_35();
  (*(void (**)(void))(v4 + 216))();
  if (__swift_getEnumTagSinglePayload(v0, 1, v2) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v0, &demangling cache variable for type metadata for Participant?);
    return 1.0;
  }
  OUTLINED_FUNCTION_119_5(v0);
  OUTLINED_FUNCTION_78_20();
  if (v12 == 1)
  {
    OUTLINED_FUNCTION_131_9(v6, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
  }
  else
  {
    if ((v15 & 1) == 0)
    {
      v7 = v14;
      OUTLINED_FUNCTION_99_10();
      goto LABEL_9;
    }
    OUTLINED_FUNCTION_99_10();
  }
  v7 = 1.0;
LABEL_9:
  OUTLINED_FUNCTION_78_20();
  if (v12 == 1)
  {
    OUTLINED_FUNCTION_131_9(v8, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    v10 = 1.0;
  }
  else
  {
    v10 = v13;
    v9 = OUTLINED_FUNCTION_99_10();
  }
  v5 = v7 * v10;
  OUTLINED_FUNCTION_35_2(v9, type metadata accessor for Participant);
  return v5;
}

void ScreenSharingSpectatorViewModel.cornerRadius.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t EnumTagSinglePayload;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_16_2();
  v4 = OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_4_1();
  OUTLINED_FUNCTION_42_48();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v2, 1, v4);
  if ((_DWORD)EnumTagSinglePayload == 1)
  {
    OUTLINED_FUNCTION_30_7(EnumTagSinglePayload, &demangling cache variable for type metadata for Participant?);
    return;
  }
  outlined init with take of Participant(v2, v1);
  Participant.screenInfo.getter();
  if (v8 == 1)
  {
    OUTLINED_FUNCTION_131_9(v7, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    if (one-time initialization token for shared != -1)
      swift_once();
    (*(void (**)(void))(*(_QWORD *)static Defaults.shared + 392))();
    goto LABEL_11;
  }
  if ((v11 & 1) != 0 || (v9 & 1) == 0)
  {
LABEL_10:
    OUTLINED_FUNCTION_99_10();
LABEL_11:
    (*(void (**)(void))(*(_QWORD *)v0 + 824))();
    outlined destroy of AccountUpdateNotice(v1, type metadata accessor for Participant);
    return;
  }
  switch(v10)
  {
    case 0:
    case 1:
    case 3:
    case 4:
      goto LABEL_10;
    case 2:
      Participant.ScreenInfo.isMaybeTouchIDDevice()();
      goto LABEL_10;
    default:
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TUScreenShareDeviceFamily?);
      _diagnoseUnexpectedEnumCase<A>(type:)();
      __break(1u);
      break;
  }
}

uint64_t ScreenSharingSpectatorViewModel.bezelEffects.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 v4;
  unsigned __int8 v5;
  char v6;
  unsigned __int8 v7;
  uint64_t v8;

  v8 = MEMORY[0x1E0DEE9E8];
  v1 = (*(uint64_t (**)(void))(*(_QWORD *)v0 + 856))();
  if ((v1 & 1) != 0)
    v1 = specialized Set._Variant.insert(_:)(&v4, 0);
  if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)v0 + 264))(v1) & 1) == 0
    && ((*(uint64_t (**)(void))(*(_QWORD *)v0 + 312))() & 1) == 0)
  {
    v2 = specialized Set._Variant.insert(_:)(&v7, 1u);
    (*(void (**)(char *__return_ptr, uint64_t))(*(_QWORD *)v0 + 784))(&v6, v2);
    if (v6 == 1)
      specialized Set._Variant.insert(_:)(&v5, 2u);
  }
  return v8;
}

uint64_t ScreenSharingSpectatorViewModel.bezelShieldMaterial.getter(uint64_t a1)
{
  char v1;
  char v2;
  int v3;
  unint64_t v5;

  OUTLINED_FUNCTION_13_101(a1);
  v1 = OUTLINED_FUNCTION_43_53();
  if (v5 >> 61 == 4)
  {
    v2 = v1;
    v3 = *(unsigned __int8 *)(v5 + 24);
    OUTLINED_FUNCTION_306();
    if (!(v2 & 1 | (v3 != 2)))
      return 1;
  }
  else
  {
    OUTLINED_FUNCTION_306();
  }
  return 0;
}

void ScreenSharingSpectatorViewModel.shouldShowModalOverlay.getter()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = (*(uint64_t (**)(void))(*(_QWORD *)v0 + 312))();
  if ((v1 & 1) == 0)
  {
    OUTLINED_FUNCTION_13_101(v1);
    OUTLINED_FUNCTION_43_53();
    switch(v2 >> 61)
    {
      case 5uLL:
        if (v2 != 0xA000000000000000 && v2 != 0xA000000000000010)
          goto LABEL_3;
        break;
      default:
LABEL_3:
        OUTLINED_FUNCTION_306();
        break;
    }
  }
  OUTLINED_FUNCTION_36();
}

BOOL ScreenSharingSpectatorViewModel.shouldShowHomeButton.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t *v6;
  unint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(_QWORD);
  unint64_t v12;
  unint64_t v13[26];
  char v14;

  OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_30_6();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_59_35();
  (*(void (**)(unint64_t *__return_ptr))(v4 + 648))(v13);
  v5 = (v13[0] >> 61) - 2;
  outlined consume of RemoteControlState(v13[0]);
  if (v5 > 2)
    return 0;
  OUTLINED_FUNCTION_42_48();
  if (OUTLINED_FUNCTION_100_11())
  {
    v6 = &demangling cache variable for type metadata for Participant?;
    v7 = (unint64_t *)v1;
LABEL_6:
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v7, v6);
    return 0;
  }
  _s15ConversationKit11ParticipantVWOcTm_2(v1, v0, type metadata accessor for Participant);
  OUTLINED_FUNCTION_30_7(v8, &demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_78_20();
  v9 = OUTLINED_FUNCTION_65_2();
  outlined destroy of AccountUpdateNotice(v9, v10);
  if (v13[3] == 1)
  {
    v6 = (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?;
    v7 = v13;
    goto LABEL_6;
  }
  if ((v14 & 1) == 0)
  {
    v12 = v13[24];
    outlined destroy of Participant.ScreenInfo((uint64_t)v13);
    return v12 - 1 < 2;
  }
  outlined destroy of Participant.ScreenInfo((uint64_t)v13);
  return 0;
}

Swift::Void __swiftcall ScreenSharingSpectatorViewModel.handleHomeButtonTapped()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);
  uint64_t v5;
  void *v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  os_log_type_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_93();
  v2 = type metadata accessor for SystemGestureEvent();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_4_1();
  v4 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **(_QWORD **)(v0
                                                                 + OBJC_IVAR____TtC15ConversationKit31ScreenSharingSpectatorViewModel_interactionController))
                           + 0xF8);
  v5 = v4();
  if (v5)
  {
    v6 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 280))(v5);
    OUTLINED_FUNCTION_43();
    if (v6)
    {
      if (one-time initialization token for screenSharing != -1)
        swift_once();
      v7 = OUTLINED_FUNCTION_17_2();
      __swift_project_value_buffer(v7, (uint64_t)&static Log.screenSharing);
      OUTLINED_FUNCTION_29_1();
      v8 = Logger.logObject.getter();
      v9 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v8, v9))
      {
        v14 = v9;
        v10 = (uint8_t *)OUTLINED_FUNCTION_105();
        v15 = OUTLINED_FUNCTION_105();
        *(_DWORD *)v10 = 136315138;
        if (v4())
        {
          type metadata accessor for ScreenSharingInteractionSession();
          v11 = String.init<A>(reflecting:)();
          v13 = v12;
        }
        else
        {
          v13 = 0xE300000000000000;
          v11 = 7104878;
        }
        getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v11, v13, &v15);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        OUTLINED_FUNCTION_23_0();
        OUTLINED_FUNCTION_27();
        OUTLINED_FUNCTION_48(&dword_1BD004000, v8, v14, "Sending home button event to remote control session: %s", v10);
        OUTLINED_FUNCTION_21();
        OUTLINED_FUNCTION_60();
      }

      OUTLINED_FUNCTION_23_0();
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 104))(v1, *MEMORY[0x1E0D8BF80], v2);
      CaptureUIInteraction.sendHardwareGesture(_:)();

      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
    }
  }
  OUTLINED_FUNCTION_52_1();
}

#error "1BD465638: call analysis failed (funcsize=89)"

Swift::Void __swiftcall ScreenSharingSpectatorViewModel.requestRemoteControl()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_58_35();
  (*(void (**)(_QWORD))(v1 + 272))(0);
  v2 = type metadata accessor for TaskPriority();
  OUTLINED_FUNCTION_0_10(v2);
  v3 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
  swift_release();
  OUTLINED_FUNCTION_0();
}

uint64_t closure #1 in ScreenSharingSpectatorViewModel.requestRemoteControl()()
{
  _QWORD *v0;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RemoteControlRequest?);
  v0[5] = swift_task_alloc();
  v0[6] = type metadata accessor for RemoteControlRequest(0);
  v0[7] = swift_task_alloc();
  v0[8] = swift_task_alloc();
  return swift_task_switch();
}

{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL8 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int *v15;
  _QWORD *v16;
  uint64_t (*v18)(void);
  uint64_t v19;

  UUID.init()();
  Date.init()();
  if (one-time initialization token for screenSharing != -1)
    swift_once();
  v1 = v0[7];
  v2 = v0[8];
  v3 = OUTLINED_FUNCTION_17_2();
  v4 = __swift_project_value_buffer(v3, (uint64_t)&static Log.screenSharing);
  v0[9] = v4;
  _s15ConversationKit11ParticipantVWOcTm_2(v2, v1, type metadata accessor for RemoteControlRequest);
  Logger.logObject.getter();
  v5 = OUTLINED_FUNCTION_12_0();
  v6 = os_log_type_enabled(v4, v5);
  v7 = v0[7];
  if (v6)
  {
    v8 = v0[5];
    v9 = v0[6];
    v10 = (uint8_t *)OUTLINED_FUNCTION_105();
    v19 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v10 = 136446210;
    _s15ConversationKit11ParticipantVWOcTm_2(v7, v8, type metadata accessor for RemoteControlRequest);
    __swift_storeEnumTagSinglePayload(v8, 0, 1, v9);
    specialized >> prefix<A>(_:)(v8);
    v12 = v11;
    v14 = v13;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v8, &demangling cache variable for type metadata for RemoteControlRequest?);
    v0[4] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v12, v14, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    outlined destroy of AccountUpdateNotice(v7, type metadata accessor for RemoteControlRequest);
    OUTLINED_FUNCTION_48(&dword_1BD004000, v4, v5, "Sending remote control request %{public}s", v10);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }
  OUTLINED_FUNCTION_140_1(v6, type metadata accessor for RemoteControlRequest);

  if (one-time initialization token for shared != -1)
    swift_once();
  v15 = *(int **)((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)static ScreenSharingInteractionController.shared) + 0x228);
  v18 = (uint64_t (*)(void))((char *)v15 + *v15);
  v16 = (_QWORD *)swift_task_alloc();
  v0[10] = v16;
  *v16 = v0;
  v16[1] = closure #1 in ScreenSharingSpectatorViewModel.requestRemoteControl();
  return v18();
}

{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

{
  uint64_t v0;

  outlined destroy of AccountUpdateNotice(*(_QWORD *)(v0 + 64), type metadata accessor for RemoteControlRequest);
  OUTLINED_FUNCTION_121_6();
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_12();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v9;

  v1 = *(NSObject **)(v0 + 72);
  outlined destroy of AccountUpdateNotice(*(_QWORD *)(v0 + 64), type metadata accessor for RemoteControlRequest);
  OUTLINED_FUNCTION_15_63();
  OUTLINED_FUNCTION_15_63();
  Logger.logObject.getter();
  v2 = OUTLINED_FUNCTION_232();
  if (OUTLINED_FUNCTION_78_0(v1))
  {
    v3 = *(_QWORD *)(v0 + 88);
    v4 = (uint8_t *)OUTLINED_FUNCTION_105();
    v5 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v4 = 136315138;
    v9 = v5;
    *(_QWORD *)(v0 + 16) = v3;
    OUTLINED_FUNCTION_15_63();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
    v6 = String.init<A>(reflecting:)();
    *(_QWORD *)(v0 + 24) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v6, v7, &v9);
    OUTLINED_FUNCTION_59_1();
    OUTLINED_FUNCTION_54_1();
    OUTLINED_FUNCTION_19_2();
    OUTLINED_FUNCTION_19_2();
    OUTLINED_FUNCTION_48(&dword_1BD004000, v1, v2, "Error sending remote control request %s", v4);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }
  OUTLINED_FUNCTION_19_2();
  OUTLINED_FUNCTION_19_2();
  OUTLINED_FUNCTION_19_2();

  OUTLINED_FUNCTION_121_6();
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_12();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

Swift::Void __swiftcall ScreenSharingSpectatorViewModel.endRemoteControl()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **(_QWORD **)(v0
                                                                  + OBJC_IVAR____TtC15ConversationKit31ScreenSharingSpectatorViewModel_interactionController))
                            + 0x208))();
  if ((*(uint64_t (**)(uint64_t))(*(_QWORD *)v0 + 408))(v1))
  {
    AnyCancellable.cancel()();
    swift_release();
  }
  else
  {
    OUTLINED_FUNCTION_0();
  }
}

#error "1BD465DCC: call analysis failed (funcsize=12)"

#error "1BD465E5C: call analysis failed (funcsize=62)"

void ScreenSharingSpectatorViewModel.access<A>(keyPath:)()
{
  _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type ScreenSharingSpectatorViewModel and conformance ScreenSharingSpectatorViewModel, (uint64_t (*)(uint64_t))type metadata accessor for ScreenSharingSpectatorViewModel, (uint64_t)&protocol conformance descriptor for ScreenSharingSpectatorViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  OUTLINED_FUNCTION_45_0();
}

uint64_t ScreenSharingSpectatorViewModel.withMutation<A, B>(keyPath:_:)()
{
  _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type ScreenSharingSpectatorViewModel and conformance ScreenSharingSpectatorViewModel, (uint64_t (*)(uint64_t))type metadata accessor for ScreenSharingSpectatorViewModel, (uint64_t)&protocol conformance descriptor for ScreenSharingSpectatorViewModel);
  return ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
}

void ScreenSharingSpectatorViewModel.deinit()
{
  uint64_t v0;
  uint64_t v1;

  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v0 + OBJC_IVAR____TtC15ConversationKit31ScreenSharingSpectatorViewModel__broadcastingParticipant, &demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_3_88();
  OUTLINED_FUNCTION_3_88();
  OUTLINED_FUNCTION_3_88();
  outlined consume of RemoteControlState(*(_QWORD *)(v0
                                                   + OBJC_IVAR____TtC15ConversationKit31ScreenSharingSpectatorViewModel__remoteControlState));
  OUTLINED_FUNCTION_3_88();

  v1 = type metadata accessor for ObservationRegistrar();
  OUTLINED_FUNCTION_17_1(v1);
  OUTLINED_FUNCTION_0();
}

uint64_t ScreenSharingSpectatorViewModel.__deallocating_deinit()
{
  ScreenSharingSpectatorViewModel.deinit();
  return swift_deallocClassInstance();
}

void ScreenSharingSpectatorViewModel.screenSharingStateMonitorDidUpdateScreenInfoForParticipant(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  _QWORD *v19;
  void (*v20)(uint64_t);
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  char v32;
  uint64_t v33;
  char v34;
  char v35;
  char v36;
  char v37;
  uint64_t v38;
  NSObject *v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  _BOOL8 v43;
  uint8_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  NSObject *v56;
  os_log_type_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  os_unfair_lock_s *v66;
  uint64_t v67;
  uint8_t *v68;
  NSObject *v69;
  uint64_t v70;
  id v71;
  uint64_t v72[26];
  char v73;
  uint64_t v74[38];
  uint64_t v75;
  uint64_t v76;

  OUTLINED_FUNCTION_93();
  v75 = v1;
  v76 = v2;
  v3 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_79();
  v7 = v5 - v6;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v68 - v9;
  v11 = OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_79();
  v15 = v13 - v14;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v68 - v17;
  type metadata accessor for ScreenSharingStateMonitor();
  v19 = (_QWORD *)swift_dynamicCastClass();
  if (v19)
  {
    v20 = *(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v19) + 0x108);
    v21 = swift_unknownObjectRetain();
    v20(v21);
    if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11) == 1)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v10, &demangling cache variable for type metadata for Participant?);
      if (one-time initialization token for conversationKit != -1)
        swift_once();
      v22 = OUTLINED_FUNCTION_17_2();
      v23 = __swift_project_value_buffer(v22, (uint64_t)&static Logger.conversationKit);
      Logger.logObject.getter();
      v24 = OUTLINED_FUNCTION_232();
      if (OUTLINED_FUNCTION_78_0(v23))
      {
        v25 = (uint8_t *)OUTLINED_FUNCTION_105();
        *(_WORD *)v25 = 0;
        _os_log_impl(&dword_1BD004000, v23, v24, "Couldn't find active participant, not updating screen sharing view.", v25, 2u);
        OUTLINED_FUNCTION_60();
      }

      OUTLINED_FUNCTION_57_20(v7, 1);
      goto LABEL_23;
    }
    outlined init with take of Participant((uint64_t)v10, (uint64_t)v18);
    Participant.screenState.getter();
    v32 = v31;
    _s15ConversationKit11ParticipantVWOcTm_2((uint64_t)v18, v15, type metadata accessor for Participant);
    if (v32 == 2)
    {
      outlined destroy of AccountUpdateNotice(v15, type metadata accessor for Participant);
    }
    else
    {
      Participant.isReceivingScreenFrames.getter();
      v35 = v34;
      outlined destroy of AccountUpdateNotice(v15, type metadata accessor for Participant);
      if ((v35 & 1) != 0)
      {
        Participant.screenProvider.getter();
        if (v74[3])
        {
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v74, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
          (*(void (**)(void))(*(_QWORD *)v3 + 216))();
          Participant.requiresScreenInfoUpdate(from:)();
          v37 = v36;
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v7, &demangling cache variable for type metadata for Participant?);
          if ((v37 & 1) == 0)
            goto LABEL_22;
          _s15ConversationKit11ParticipantVWOcTm_2((uint64_t)v18, v7, type metadata accessor for Participant);
          OUTLINED_FUNCTION_57_20(v7, 0);
          Participant.screenInfo.getter();
          if (one-time initialization token for screenSharing != -1)
            swift_once();
          v38 = OUTLINED_FUNCTION_17_2();
          v39 = __swift_project_value_buffer(v38, (uint64_t)&static Log.screenSharing);
          OUTLINED_FUNCTION_125_8((uint64_t)v39, v40, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
          v69 = v39;
          v41 = Logger.logObject.getter();
          v42 = static os_log_type_t.default.getter();
          v43 = os_log_type_enabled(v41, v42);
          if (v43)
          {
            v44 = (uint8_t *)OUTLINED_FUNCTION_105();
            v71 = (id)OUTLINED_FUNCTION_105();
            *(_DWORD *)v44 = 136315138;
            v68 = v44 + 4;
            v52 = specialized >> prefix<A>(_:)((uint64_t)v72, v45, v46, v47, v48, v49, v50, v51);
            v70 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v52, v53, (uint64_t *)&v71);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            v54 = OUTLINED_FUNCTION_27();
            OUTLINED_FUNCTION_127_8(v54, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
            OUTLINED_FUNCTION_48(&dword_1BD004000, v41, v42, "Received broadcaster screen info %s", v44);
            OUTLINED_FUNCTION_21();
            OUTLINED_FUNCTION_60();
          }
          OUTLINED_FUNCTION_127_8(v43, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);

          v56 = v69;
          Logger.logObject.getter();
          v57 = OUTLINED_FUNCTION_12_0();
          if (OUTLINED_FUNCTION_41_3(v57))
          {
            v58 = OUTLINED_FUNCTION_105();
            v72[0] = OUTLINED_FUNCTION_105();
            *(_DWORD *)v58 = 136315138;
            v69 = (v58 + 4);
            v71 = objc_msgSend((id)objc_opt_self(), sel_currentDeviceFamily);
            type metadata accessor for TUScreenShareDeviceFamily(0);
            v59 = String.init<A>(reflecting:)();
            v71 = (id)getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v59, v60, v72);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            OUTLINED_FUNCTION_48(&dword_1BD004000, v56, (os_log_type_t)v11, "Local user device type is %s", (uint8_t *)v58);
            OUTLINED_FUNCTION_21();
            OUTLINED_FUNCTION_60();
          }

          OUTLINED_FUNCTION_125_8(v61, v62, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
          if (v72[3] == 1)
          {
            v63 = OUTLINED_FUNCTION_9_10();
            OUTLINED_FUNCTION_127_8(v63, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
          }
          else if ((v73 & 1) != 0)
          {
            outlined destroy of Participant.ScreenInfo((uint64_t)v72);
            OUTLINED_FUNCTION_9_10();
          }
          else
          {
            v64 = v72[23];
            outlined destroy of Participant.ScreenInfo((uint64_t)v72);
            v65 = objc_msgSend((id)objc_opt_self(), sel_currentDeviceFamily);
            v66 = (os_unfair_lock_s *)(ScreenSharingSpectatorViewModel.requirmentsLock.getter() + 16);
            os_unfair_lock_lock(v66);
            closure #1 in ScreenSharingSpectatorViewModel.screenSharingStateMonitorDidUpdateScreenInfoForParticipant(_:)((uint64_t)v65, v64, v3);
            os_unfair_lock_unlock(v66);
            OUTLINED_FUNCTION_9_10();
            OUTLINED_FUNCTION_43();
          }
          v55 = (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?;
        }
        else
        {
          OUTLINED_FUNCTION_9_10();
          v55 = (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?;
        }
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v74, v55);
        OUTLINED_FUNCTION_140_1(v67, type metadata accessor for Participant);
        goto LABEL_24;
      }
    }
LABEL_22:
    OUTLINED_FUNCTION_140_1(v33, type metadata accessor for Participant);
LABEL_23:
    OUTLINED_FUNCTION_9_10();
LABEL_24:
    OUTLINED_FUNCTION_52_1();
    return;
  }
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  v26 = OUTLINED_FUNCTION_17_2();
  __swift_project_value_buffer(v26, (uint64_t)&static Logger.conversationKit);
  swift_unknownObjectRetain_n();
  v69 = Logger.logObject.getter();
  v27 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v69, v27))
  {
    v28 = (uint8_t *)OUTLINED_FUNCTION_105();
    v74[0] = OUTLINED_FUNCTION_105();
    *(_DWORD *)v28 = 136315138;
    swift_getObjectType();
    v29 = _typeName(_:qualified:)();
    v72[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v29, v30, v74);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_25();
    OUTLINED_FUNCTION_133_9();
    OUTLINED_FUNCTION_48(&dword_1BD004000, v69, v27, "screenSharingStateMonitorDidUpdateScreenInfoForParticipant(_:) was unexpectedly passed a %s", v28);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }
  OUTLINED_FUNCTION_133_9();

}

uint64_t closure #1 in ScreenSharingSpectatorViewModel.screenSharingStateMonitorDidUpdateScreenInfoForParticipant(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (a1 == 1)
  {
    if (a2 != 1)
      goto LABEL_14;
  }
  else if (a1 == 3)
  {
    if (a2 != 3 && a2 != 2)
      goto LABEL_14;
  }
  else if (a1 != 2 || a2 != 2)
  {
LABEL_14:
    swift_getKeyPath();
    (*(void (**)(void))(*(_QWORD *)a3 + 912))();
    swift_release();
    swift_getKeyPath();
    _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type ScreenSharingSpectatorViewModel and conformance ScreenSharingSpectatorViewModel, (uint64_t (*)(uint64_t))type metadata accessor for ScreenSharingSpectatorViewModel, (uint64_t)&protocol conformance descriptor for ScreenSharingSpectatorViewModel);
    ObservationRegistrar.willSet<A, B>(_:keyPath:)();
    swift_release();
    v5 = OBJC_IVAR____TtC15ConversationKit31ScreenSharingSpectatorViewModel__remoteControlRequirements;
    v8 = *(_QWORD *)(a3 + OBJC_IVAR____TtC15ConversationKit31ScreenSharingSpectatorViewModel__remoteControlRequirements);
    if ((v8 & 4) != 0)
    {
      v7 = v8 & 0xFFFFFFFFFFFFFFFBLL;
      goto LABEL_16;
    }
    goto LABEL_17;
  }
  swift_getKeyPath();
  (*(void (**)(void))(*(_QWORD *)a3 + 912))();
  swift_release();
  swift_getKeyPath();
  _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type ScreenSharingSpectatorViewModel and conformance ScreenSharingSpectatorViewModel, (uint64_t (*)(uint64_t))type metadata accessor for ScreenSharingSpectatorViewModel, (uint64_t)&protocol conformance descriptor for ScreenSharingSpectatorViewModel);
  ObservationRegistrar.willSet<A, B>(_:keyPath:)();
  swift_release();
  v5 = OBJC_IVAR____TtC15ConversationKit31ScreenSharingSpectatorViewModel__remoteControlRequirements;
  v6 = *(_QWORD *)(a3 + OBJC_IVAR____TtC15ConversationKit31ScreenSharingSpectatorViewModel__remoteControlRequirements);
  if ((v6 & 4) == 0)
  {
    v7 = v6 | 4;
LABEL_16:
    *(_QWORD *)(a3 + v5) = v7;
  }
LABEL_17:
  ScreenSharingSpectatorViewModel._remoteControlRequirements.didset();
  swift_getKeyPath();
  ObservationRegistrar.didSet<A, B>(_:keyPath:)();
  return swift_release();
}

uint64_t specialized Clock.sleep(for:tolerance:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v12;

  *(_QWORD *)(v6 + 56) = v5;
  v12 = type metadata accessor for ContinuousClock.Instant();
  *(_QWORD *)(v6 + 64) = v12;
  *(_QWORD *)(v6 + 72) = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v6 + 80) = swift_task_alloc();
  *(_QWORD *)(v6 + 88) = swift_task_alloc();
  *(_QWORD *)(v6 + 40) = a1;
  *(_QWORD *)(v6 + 48) = a2;
  *(_QWORD *)(v6 + 16) = a3;
  *(_QWORD *)(v6 + 24) = a4;
  *(_BYTE *)(v6 + 32) = a5 & 1;
  return swift_task_switch();
}

uint64_t specialized Clock.sleep(for:tolerance:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  _QWORD *v6;

  v1 = v0[10];
  v2 = v0[8];
  v3 = v0[9];
  type metadata accessor for ContinuousClock();
  _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type ContinuousClock and conformance ContinuousClock, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0BA0], MEMORY[0x1E0DF0BB0]);
  dispatch thunk of Clock.now.getter();
  _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type ContinuousClock.Instant and conformance ContinuousClock.Instant, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0B60], MEMORY[0x1E0DF0B90]);
  MEMORY[0x1C3B73E14](v0 + 5, v2, v4);
  v5 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[12] = v5;
  v5(v1, v2);
  v6 = (_QWORD *)swift_task_alloc();
  v0[13] = v6;
  *v6 = v0;
  v6[1] = specialized Clock.sleep(for:tolerance:);
  return dispatch thunk of Clock.sleep(until:tolerance:)();
}

{
  uint64_t v0;
  uint64_t *v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;

  v2 = *(void (**)(uint64_t))(*v1 + 96);
  v3 = *v1;
  *(_QWORD *)(v3 + 112) = v0;
  swift_task_dealloc();
  v4 = OUTLINED_FUNCTION_65_2();
  v2(v4);
  if (v0)
    return OUTLINED_FUNCTION_26_47();
  swift_task_dealloc();
  OUTLINED_FUNCTION_29_0();
  return (*(uint64_t (**)(void))(v3 + 8))();
}

{
  uint64_t v0;

  swift_task_dealloc();
  OUTLINED_FUNCTION_29_0();
  return OUTLINED_FUNCTION_16(*(uint64_t (**)(void))(v0 + 8));
}

_QWORD *specialized closure #1 in OSAllocatedUnfairLock<A>.withLock<A>(_:)(uint64_t a1, _QWORD *(*a2)(uint64_t *__return_ptr))
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v4;

  result = a2(&v4);
  if (!v2)
    return (_QWORD *)v4;
  return result;
}

void sub_1BD4670C0(uint64_t a1)
{
  (*(void (**)(void))(**(_QWORD **)a1 + 216))();
  OUTLINED_FUNCTION_0();
}

uint64_t partial apply for closure #1 in ScreenSharingSpectatorViewModel.broadcastingParticipant.setter()
{
  uint64_t v0;

  return closure #1 in ScreenSharingSpectatorViewModel.broadcastingParticipant.setter(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t type metadata accessor for ScreenSharingSpectatorViewModel()
{
  uint64_t result;

  result = type metadata singleton initialization cache for ScreenSharingSpectatorViewModel;
  if (!type metadata singleton initialization cache for ScreenSharingSpectatorViewModel)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BD467138()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  v1 = (*(uint64_t (**)(void))(v0 + 264))();
  OUTLINED_FUNCTION_68_0(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD46715C(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_31_5(a1);
  (*(void (**)(uint64_t))(v2 + 272))(v1);
  OUTLINED_FUNCTION_0();
}

uint64_t partial apply for closure #1 in ScreenSharingSpectatorViewModel.isZoomEnabled.setter()
{
  uint64_t v0;

  return closure #1 in ScreenSharingSpectatorViewModel.isZoomEnabled.setter(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

void sub_1BD467198()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  v1 = (*(uint64_t (**)(void))(v0 + 312))();
  OUTLINED_FUNCTION_68_0(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD4671BC(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_31_5(a1);
  (*(void (**)(uint64_t))(v2 + 320))(v1);
  OUTLINED_FUNCTION_0();
}

uint64_t partial apply for closure #1 in ScreenSharingSpectatorViewModel.isPipped.setter()
{
  uint64_t v0;

  return closure #1 in ScreenSharingSpectatorViewModel.isPipped.setter(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

void sub_1BD4671F8()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  v1 = (*(uint64_t (**)(void))(v0 + 360))();
  OUTLINED_FUNCTION_68_0(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD46721C(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_31_5(a1);
  (*(void (**)(uint64_t))(v2 + 368))(v1);
  OUTLINED_FUNCTION_0();
}

uint64_t partial apply for closure #1 in ScreenSharingSpectatorViewModel.disableRequestButton.setter()
{
  uint64_t v0;

  return closure #1 in ScreenSharingSpectatorViewModel.disableRequestButton.setter(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

void sub_1BD467258()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))(v1 + 408))();
  OUTLINED_FUNCTION_0();
}

uint64_t partial apply for closure #1 in ScreenSharingSpectatorViewModel.activeParticipantObserver.setter()
{
  uint64_t v0;

  return closure #1 in ScreenSharingSpectatorViewModel.activeParticipantObserver.setter(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), &OBJC_IVAR____TtC15ConversationKit31ScreenSharingSpectatorViewModel__activeParticipantObserver);
}

void sub_1BD4672A0()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))(v1 + 456))();
  OUTLINED_FUNCTION_0();
}

uint64_t partial apply for closure #1 in ScreenSharingSpectatorViewModel.sessionObserver.setter()
{
  uint64_t v0;

  return closure #1 in ScreenSharingSpectatorViewModel.activeParticipantObserver.setter(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), &OBJC_IVAR____TtC15ConversationKit31ScreenSharingSpectatorViewModel__sessionObserver);
}

void sub_1BD4672E8()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  v1 = (*(uint64_t (**)(void))(v0 + 504))();
  OUTLINED_FUNCTION_68_0(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD46730C()
{
  ScreenSharingSpectatorViewModel.isTransitioningRemoteControlState.setter();
  OUTLINED_FUNCTION_0();
}

_QWORD *sub_1BD46732C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *result;
  uint64_t v4;

  result = OUTLINED_FUNCTION_13_101(a1);
  *a2 = v4;
  return result;
}

void sub_1BD467364(uint64_t a1)
{
  uint64_t *v1;

  *v1 = OUTLINED_FUNCTION_68_25(a1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD467380()
{
  OUTLINED_FUNCTION_126_5();
  OUTLINED_FUNCTION_0();
}

uint64_t outlined init with take of AspectRatio?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AspectRatio?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BD4673E0()
{
  OUTLINED_FUNCTION_67_1();
  OUTLINED_FUNCTION_239();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ScreenSharingSpectatorViewModel.requestRemoteControl()()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = partial apply for closure #1 in SyncedScreeningAlphaGradientView.gradient(for:);
  return closure #1 in ScreenSharingSpectatorViewModel.requestRemoteControl()();
}

unint64_t lazy protocol witness table accessor for type RemoteControlRequirements and conformance RemoteControlRequirements()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type RemoteControlRequirements and conformance RemoteControlRequirements;
  if (!lazy protocol witness table cache variable for type RemoteControlRequirements and conformance RemoteControlRequirements)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for RemoteControlRequirements, &type metadata for RemoteControlRequirements);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RemoteControlRequirements and conformance RemoteControlRequirements);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type RemoteControlRequirements and conformance RemoteControlRequirements;
  if (!lazy protocol witness table cache variable for type RemoteControlRequirements and conformance RemoteControlRequirements)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for RemoteControlRequirements, &type metadata for RemoteControlRequirements);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RemoteControlRequirements and conformance RemoteControlRequirements);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type RemoteControlRequirements and conformance RemoteControlRequirements;
  if (!lazy protocol witness table cache variable for type RemoteControlRequirements and conformance RemoteControlRequirements)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for RemoteControlRequirements, &type metadata for RemoteControlRequirements);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RemoteControlRequirements and conformance RemoteControlRequirements);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type RemoteControlRequirements and conformance RemoteControlRequirements;
  if (!lazy protocol witness table cache variable for type RemoteControlRequirements and conformance RemoteControlRequirements)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for RemoteControlRequirements, &type metadata for RemoteControlRequirements);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RemoteControlRequirements and conformance RemoteControlRequirements);
  }
  return result;
}

ValueMetadata *type metadata accessor for RemoteControlRequirements()
{
  return &type metadata for RemoteControlRequirements;
}

uint64_t ObjC metadata update function for ScreenSharingSpectatorViewModel()
{
  return type metadata accessor for ScreenSharingSpectatorViewModel();
}

void type metadata completion function for ScreenSharingSpectatorViewModel()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for Participant?();
  if (v0 <= 0x3F)
  {
    type metadata accessor for ObservationRegistrar();
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for ScreenSharingSpectatorViewModel()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ScreenSharingSpectatorViewModel.broadcastingParticipant.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of ScreenSharingSpectatorViewModel.broadcastingParticipant.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of ScreenSharingSpectatorViewModel.broadcastingParticipant.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of ScreenSharingSpectatorViewModel.isZoomEnabled.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of ScreenSharingSpectatorViewModel.isZoomEnabled.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t dispatch thunk of ScreenSharingSpectatorViewModel.isZoomEnabled.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 280))();
}

uint64_t dispatch thunk of ScreenSharingSpectatorViewModel.isPipped.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 312))();
}

uint64_t dispatch thunk of ScreenSharingSpectatorViewModel.isPipped.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 320))();
}

uint64_t dispatch thunk of ScreenSharingSpectatorViewModel.isPipped.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 328))();
}

uint64_t dispatch thunk of ScreenSharingSpectatorViewModel.disableRequestButton.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 360))();
}

uint64_t dispatch thunk of ScreenSharingSpectatorViewModel.disableRequestButton.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 368))();
}

uint64_t dispatch thunk of ScreenSharingSpectatorViewModel.disableRequestButton.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 376))();
}

uint64_t dispatch thunk of ScreenSharingSpectatorViewModel.activeParticipantObserver.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 408))();
}

uint64_t dispatch thunk of ScreenSharingSpectatorViewModel.activeParticipantObserver.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 416))();
}

uint64_t dispatch thunk of ScreenSharingSpectatorViewModel.activeParticipantObserver.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 424))();
}

uint64_t dispatch thunk of ScreenSharingSpectatorViewModel.sessionObserver.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 456))();
}

uint64_t dispatch thunk of ScreenSharingSpectatorViewModel.sessionObserver.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 464))();
}

uint64_t dispatch thunk of ScreenSharingSpectatorViewModel.sessionObserver.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 472))();
}

uint64_t dispatch thunk of ScreenSharingSpectatorViewModel.isTransitioningRemoteControlState.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 504))();
}

uint64_t dispatch thunk of ScreenSharingSpectatorViewModel.remoteControlState.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 648))();
}

uint64_t dispatch thunk of ScreenSharingSpectatorViewModel.remoteControlRequirements.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 752))();
}

uint64_t dispatch thunk of ScreenSharingSpectatorViewModel.__allocating_init(serverBag:interactionController:screenSharingStateMonitor:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 776))();
}

uint64_t dispatch thunk of ScreenSharingSpectatorViewModel.activeControlParticipant.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 784))();
}

uint64_t dispatch thunk of ScreenSharingSpectatorViewModel.statusText.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 792))();
}

uint64_t dispatch thunk of ScreenSharingSpectatorViewModel.isContentTransformEnabled.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 800))();
}

uint64_t dispatch thunk of ScreenSharingSpectatorViewModel.contentSize.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 816))();
}

uint64_t dispatch thunk of ScreenSharingSpectatorViewModel.contentScale.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 824))();
}

uint64_t dispatch thunk of ScreenSharingSpectatorViewModel.cornerRadius.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 832))();
}

uint64_t dispatch thunk of ScreenSharingSpectatorViewModel.bezelEffects.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 840))();
}

uint64_t dispatch thunk of ScreenSharingSpectatorViewModel.bezelShieldMaterial.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 848))() & 1;
}

uint64_t dispatch thunk of ScreenSharingSpectatorViewModel.shouldShowModalOverlay.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 856))();
}

uint64_t dispatch thunk of ScreenSharingSpectatorViewModel.shouldShowHomeButton.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 864))();
}

uint64_t dispatch thunk of ScreenSharingSpectatorViewModel.handleHomeButtonTapped()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 872))();
}

uint64_t dispatch thunk of ScreenSharingSpectatorViewModel.requestOrEndRemoteControl()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 880))();
}

uint64_t dispatch thunk of ScreenSharingSpectatorViewModel.requestRemoteControl()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 888))();
}

uint64_t dispatch thunk of ScreenSharingSpectatorViewModel.endRemoteControl()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 896))();
}

uint64_t dispatch thunk of ScreenSharingSpectatorViewModel.cancelOrEndRemoteControl()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 904))();
}

uint64_t dispatch thunk of ScreenSharingSpectatorViewModel.access<A>(keyPath:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 912))();
}

uint64_t dispatch thunk of ScreenSharingSpectatorViewModel.withMutation<A, B>(keyPath:_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 920))();
}

void partial apply for closure #1 in ScreenSharingSpectatorViewModel.remoteControlRequirements.setter()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)(v0 + 16)
            + OBJC_IVAR____TtC15ConversationKit31ScreenSharingSpectatorViewModel__remoteControlRequirements) = *(_QWORD *)(v0 + 24);
  ScreenSharingSpectatorViewModel._remoteControlRequirements.didset();
}

void sub_1BD467894(uint64_t *a1@<X8>)
{
  *a1 = ScreenSharingSpectatorViewModel.requirmentsLock.getter();
  OUTLINED_FUNCTION_0();
}

uint64_t partial apply for closure #1 in ScreenSharingSpectatorViewModel.requirmentsLock.setter()
{
  uint64_t v0;

  return closure #1 in ScreenSharingSpectatorViewModel.requirmentsLock.setter(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

unint64_t partial apply for closure #1 in ScreenSharingSpectatorViewModel.remoteControlState.setter()
{
  uint64_t v0;

  return closure #1 in ScreenSharingSpectatorViewModel.remoteControlState.setter(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1BD4678EC()
{
  OUTLINED_FUNCTION_67_1();
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ScreenSharingSpectatorViewModel._remoteControlState.didset()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  v4 = OUTLINED_FUNCTION_20_27(v3);
  return closure #1 in ScreenSharingSpectatorViewModel._remoteControlState.didset(v4, v5, v6, v2);
}

void sub_1BD467970(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  ScreenSharingSpectatorViewModel.remoteControlStateTransitionTime.getter();
  *a1 = v2;
  a1[1] = v3;
  OUTLINED_FUNCTION_0();
}

__n128 partial apply for closure #1 in ScreenSharingSpectatorViewModel.remoteControlStateTransitionTime.setter()
{
  uint64_t v0;
  __n128 result;

  result = *(__n128 *)(v0 + 24);
  *(__n128 *)(*(_QWORD *)(v0 + 16)
            + OBJC_IVAR____TtC15ConversationKit31ScreenSharingSpectatorViewModel__remoteControlStateTransitionTime) = result;
  return result;
}

void sub_1BD4679B0(uint64_t *a1@<X8>)
{
  *a1 = ScreenSharingSpectatorViewModel.isTransitioningRemoteControlStateTask.getter();
  OUTLINED_FUNCTION_0();
}

uint64_t partial apply for closure #1 in ScreenSharingSpectatorViewModel.isTransitioningRemoteControlStateTask.setter()
{
  uint64_t v0;

  return closure #1 in ScreenSharingSpectatorViewModel.isTransitioningRemoteControlStateTask.setter(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void partial apply for closure #1 in ScreenSharingSpectatorViewModel.isTransitioningRemoteControlState.setter()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16)
           + OBJC_IVAR____TtC15ConversationKit31ScreenSharingSpectatorViewModel__isTransitioningRemoteControlState) = *(_BYTE *)(v0 + 24);
}

uint64_t partial apply for closure #1 in closure #2 in ScreenSharingSpectatorViewModel.init(serverBag:interactionController:screenSharingStateMonitor:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return closure #1 in closure #2 in ScreenSharingSpectatorViewModel.init(serverBag:interactionController:screenSharingStateMonitor:)(v1, a1);
}

uint64_t sub_1BD467A20()
{
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_239();
  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in closure #2 in ScreenSharingSpectatorViewModel.init(serverBag:interactionController:screenSharingStateMonitor:)(uint64_t *a1)
{
  uint64_t v1;

  return closure #2 in closure #2 in ScreenSharingSpectatorViewModel.init(serverBag:interactionController:screenSharingStateMonitor:)(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

_QWORD *specialized closure #1 in OSAllocatedUnfairLock<A>.withLock<A>(_:)@<X0>(uint64_t a1@<X0>, _QWORD *(*a2)(uint64_t *__return_ptr)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  _QWORD *result;
  char v6;

  result = specialized closure #1 in OSAllocatedUnfairLock<A>.withLock<A>(_:)(a1, a2);
  if (!v3)
  {
    *(_QWORD *)a3 = result;
    *(_BYTE *)(a3 + 8) = v6 & 1;
  }
  return result;
}

uint64_t sub_1BD467A7C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_67_1();
  swift_release();

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in ScreenSharingSpectatorViewModel.init(serverBag:interactionController:screenSharingStateMonitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 40);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  v5 = OUTLINED_FUNCTION_20_27(v4);
  return closure #1 in closure #1 in ScreenSharingSpectatorViewModel.init(serverBag:interactionController:screenSharingStateMonitor:)(v5, v6, v7, v3, v2);
}

uint64_t sub_1BD467B14()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BD467B38()
{
  uint64_t v0;

  swift_release();

  OUTLINED_FUNCTION_239();
  return swift_deallocObject();
}

void lazy protocol witness table accessor for type Published<Set<Participant>>.Publisher and conformance Published<A>.Publisher(unint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  if (!*a1)
  {
    v3 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    atomic_store(MEMORY[0x1C3B750C8](MEMORY[0x1E0C96190], v3), a1);
  }
  OUTLINED_FUNCTION_0();
}

void OUTLINED_FUNCTION_75_22()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_85_20()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 344);
}

void OUTLINED_FUNCTION_87_16()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_99_10()
{
  uint64_t v0;

  return outlined destroy of Participant.ScreenInfo(v0 - 280);
}

void OUTLINED_FUNCTION_103_10()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);
  uint64_t v2;

  _s15ConversationKit11ParticipantVWOcTm_2(v0, v2, v1);
}

uint64_t OUTLINED_FUNCTION_109_11()
{
  return StringProtocol.localizedUppercase.getter();
}

uint64_t OUTLINED_FUNCTION_111_10()
{
  uint64_t v0;

  return outlined init with take of AspectRatio(v0 - 224, v0 - 184);
}

uint64_t OUTLINED_FUNCTION_112_11()
{
  uint64_t v0;

  return outlined init with take of AspectRatio?(v0 - 264, v0 - 224);
}

uint64_t OUTLINED_FUNCTION_119_5(uint64_t a1)
{
  uint64_t v1;

  return outlined init with take of Participant(a1, v1);
}

uint64_t OUTLINED_FUNCTION_121_6()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_124_10()
{
  uint64_t v0;

  return outlined destroy of Participant.ScreenInfo(v0 - 312);
}

void OUTLINED_FUNCTION_126_5()
{
  ScreenSharingSpectatorViewModel.remoteControlRequirements.setter();
}

void OUTLINED_FUNCTION_127_8(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v2 + 40, a2);
}

void OUTLINED_FUNCTION_131_9(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v2 - 280, a2);
}

uint64_t OUTLINED_FUNCTION_133_9()
{
  return swift_unknownObjectRelease_n();
}

void OUTLINED_FUNCTION_141_7()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;

  outlined destroy of AccountUpdateNotice(v1, v0);
}

void CNKBannerPresentationManager.presentationDelegate.getter()
{
  id v0;
  id v1;

  OUTLINED_FUNCTION_1_7();
  OUTLINED_FUNCTION_7_112();
  v1 = v0;
  OUTLINED_FUNCTION_14_95();
  OUTLINED_FUNCTION_37_0();
  OUTLINED_FUNCTION_32();
}

void CNKBannerPresentationManager.presentationDelegate.setter()
{
  void *v0;
  id v1;
  id v2;

  OUTLINED_FUNCTION_1_137();
  OUTLINED_FUNCTION_13_102();
  v2 = v1;
  OUTLINED_FUNCTION_17_73();

  OUTLINED_FUNCTION_9_0();
}

id key path getter for CNKBannerPresentationManager.presentationDelegate : CNKBannerPresentationManager@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_presentationDelegate);
  *a2 = result;
  return result;
}

void CNKBannerPresentationManager.audioRoutingDelegate.getter()
{
  id v0;
  id v1;

  OUTLINED_FUNCTION_1_7();
  OUTLINED_FUNCTION_7_112();
  v1 = v0;
  OUTLINED_FUNCTION_14_95();
  OUTLINED_FUNCTION_37_0();
  OUTLINED_FUNCTION_32();
}

void CNKBannerPresentationManager.audioRoutingDelegate.setter()
{
  void *v0;
  id v1;
  id v2;

  OUTLINED_FUNCTION_1_137();
  OUTLINED_FUNCTION_13_102();
  v2 = v1;
  OUTLINED_FUNCTION_17_73();

  OUTLINED_FUNCTION_9_0();
}

id key path getter for CNKBannerPresentationManager.audioRoutingDelegate : CNKBannerPresentationManager@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_audioRoutingDelegate);
  *a2 = result;
  return result;
}

void CNKBannerPresentationManager.handedOffCall.getter()
{
  id v0;
  id v1;

  OUTLINED_FUNCTION_1_7();
  OUTLINED_FUNCTION_7_112();
  v1 = v0;
  OUTLINED_FUNCTION_14_95();
  OUTLINED_FUNCTION_37_0();
  OUTLINED_FUNCTION_32();
}

void CNKBannerPresentationManager.handedOffCall.setter()
{
  void *v0;
  id v1;
  id v2;

  OUTLINED_FUNCTION_1_137();
  OUTLINED_FUNCTION_13_102();
  v2 = v1;
  OUTLINED_FUNCTION_17_73();

  OUTLINED_FUNCTION_9_0();
}

id key path getter for CNKBannerPresentationManager.handedOffCall : CNKBannerPresentationManager@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_handedOffCall);
  *a2 = result;
  return result;
}

void CNKBannerPresentationManager.inCallControlsVisible.getter()
{
  uint64_t v0;
  void (*v1)(void);
  id v2;
  id v3;

  OUTLINED_FUNCTION_1_7();
  OUTLINED_FUNCTION_7_112();
  v1 = *(void (**)(void))((*MEMORY[0x1E0DEEDD8] & v0) + 0x218);
  v3 = v2;
  v1();
  OUTLINED_FUNCTION_37_0();
  OUTLINED_FUNCTION_32();
}

void CNKBannerPresentationManager.isMicIndicatorVisible.getter()
{
  CNKBannerPresentationManager.isMicIndicatorVisible.getter(BannerPresentationManager.isMicIndicatorVisible.getter);
}

void CNKBannerPresentationManager.onlyHasPlaceholderCall.getter()
{
  CNKBannerPresentationManager.isMicIndicatorVisible.getter(BannerPresentationManager.onlyHasPlaceholderCall.getter);
}

void CNKBannerPresentationManager.conversationIsAVLess.getter()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_1_7();
  OUTLINED_FUNCTION_7_112();
  OUTLINED_FUNCTION_6_101(v1);
  OUTLINED_FUNCTION_10_106();
  OUTLINED_FUNCTION_49_5();
  if (v0)
  {
    OUTLINED_FUNCTION_15_91();
    (*(void (**)(void))(v2 + 800))();
    OUTLINED_FUNCTION_37_0();
  }
  OUTLINED_FUNCTION_9_0();
}

void CNKBannerPresentationManager.localAudioTogglingDelegate.getter()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_1_7();
  OUTLINED_FUNCTION_7_112();
  OUTLINED_FUNCTION_6_101(v1);
  OUTLINED_FUNCTION_10_106();
  OUTLINED_FUNCTION_49_5();
  if (v0)
  {
    OUTLINED_FUNCTION_15_91();
    (*(void (**)(void))(v2 + 1144))();
    OUTLINED_FUNCTION_37_0();
  }
  OUTLINED_FUNCTION_9_0();
}

void CNKBannerPresentationManager.localAudioTogglingDelegate.setter(uint64_t a1)
{
  void *v1;
  void *v3;
  uint64_t v4;

  OUTLINED_FUNCTION_1_137();
  OUTLINED_FUNCTION_13_102();
  OUTLINED_FUNCTION_11_97(v3);
  OUTLINED_FUNCTION_18_86();
  OUTLINED_FUNCTION_15_2();
  if (v1)
  {
    OUTLINED_FUNCTION_23_7();
    (*(void (**)(uint64_t))(v4 + 1152))(a1);

  }
  else
  {
    OUTLINED_FUNCTION_19_0();
  }
  OUTLINED_FUNCTION_2_3();
}

id key path getter for CNKBannerPresentationManager.localAudioTogglingDelegate : CNKBannerPresentationManager@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_localAudioTogglingDelegate);
  *a2 = result;
  return result;
}

void CNKBannerPresentationManager.placeholderCallGroupUUID.getter(uint64_t a1@<X8>)
{
  id v2;

  OUTLINED_FUNCTION_1_137();
  v2 = OUTLINED_FUNCTION_118_1();
  BannerPresentationManager.placeholderCallGroupUUID.getter(a1);

  OUTLINED_FUNCTION_32();
}

Class @objc CNKBannerPresentationManager.placeholderCallGroupUUID.getter(void *a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  Class isa;
  uint64_t v12;

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a1;
  a3();

  v9 = type metadata accessor for UUID();
  isa = 0;
  if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9) != 1)
  {
    isa = UUID._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);
  }
  return isa;
}

void CNKBannerPresentationManager.callUUID.getter(uint64_t a1@<X8>)
{
  void *v1;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_1_137();
  OUTLINED_FUNCTION_13_102();
  OUTLINED_FUNCTION_11_97(v3);
  OUTLINED_FUNCTION_18_86();
  OUTLINED_FUNCTION_15_2();
  if (v1)
  {
    OUTLINED_FUNCTION_23_7();
    (*(void (**)(void))(v4 + 632))();

    v5 = 0;
  }
  else
  {
    v5 = 1;
  }
  v6 = type metadata accessor for UUID();
  __swift_storeEnumTagSinglePayload(a1, v5, 1, v6);
  OUTLINED_FUNCTION_2_3();
}

void CNKBannerPresentationManager.shouldShowCallDetailsWhenReady.getter()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_1_7();
  OUTLINED_FUNCTION_7_112();
  OUTLINED_FUNCTION_6_101(v1);
  OUTLINED_FUNCTION_10_106();
  OUTLINED_FUNCTION_49_5();
  if (v0)
  {
    OUTLINED_FUNCTION_15_91();
    (*(void (**)(void))(v2 + 808))();
    OUTLINED_FUNCTION_37_0();
  }
  OUTLINED_FUNCTION_9_0();
}

void CNKBannerPresentationManager.applicationState.getter()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_1_7();
  OUTLINED_FUNCTION_7_112();
  OUTLINED_FUNCTION_6_101(v1);
  OUTLINED_FUNCTION_10_106();
  OUTLINED_FUNCTION_49_5();
  if (v0)
  {
    OUTLINED_FUNCTION_15_91();
    (*(void (**)(void))(v2 + 2328))();
    OUTLINED_FUNCTION_37_0();
  }
  OUTLINED_FUNCTION_9_0();
}

void CNKBannerPresentationManager.applicationState.setter(uint64_t a1)
{
  void *v1;
  void *v3;
  uint64_t v4;

  OUTLINED_FUNCTION_1_137();
  OUTLINED_FUNCTION_13_102();
  OUTLINED_FUNCTION_11_97(v3);
  OUTLINED_FUNCTION_18_86();
  OUTLINED_FUNCTION_15_2();
  if (v1)
  {
    OUTLINED_FUNCTION_23_7();
    (*(void (**)(uint64_t))(v4 + 2336))(a1);

  }
  OUTLINED_FUNCTION_2_3();
}

void CNKBannerPresentationManager.wantsBannerWithoutScene.getter()
{
  CNKBannerPresentationManager.isMicIndicatorVisible.getter(BannerPresentationManager.wantsBannerWithoutScene.getter);
}

void CNKBannerPresentationManager.isMicIndicatorVisible.getter(void (*a1)(void))
{
  OUTLINED_FUNCTION_1_137();
  OUTLINED_FUNCTION_118_1();
  a1();
  OUTLINED_FUNCTION_37_0();
  OUTLINED_FUNCTION_32();
}

void CNKBannerPresentationManager.activeCall.getter()
{
  id v0;
  id v1;

  OUTLINED_FUNCTION_1_7();
  OUTLINED_FUNCTION_7_112();
  v1 = v0;
  OUTLINED_FUNCTION_14_95();
  OUTLINED_FUNCTION_37_0();
  OUTLINED_FUNCTION_32();
}

void CNKBannerPresentationManager.hasAssociatedCall.getter()
{
  id *v0;
  id v1;

  OUTLINED_FUNCTION_1_7();
  v1 = *v0;
  BannerPresentationManager.associatedCall.getter();
  OUTLINED_FUNCTION_37_0();
  if (v0)
    OUTLINED_FUNCTION_19_0();
  OUTLINED_FUNCTION_32();
}

Swift::Void __swiftcall CNKBannerPresentationManager.presentSystemHUD()()
{
  CNKBannerPresentationManager.presentSystemHUD()(BannerPresentationManager.presentSystemHUD());
}

Swift::Void __swiftcall CNKBannerPresentationManager.presentHUDForCurrentContext()()
{
  CNKBannerPresentationManager.presentSystemHUD()(BannerPresentationManager.presentHUDForCurrentContext());
}

Swift::Void __swiftcall CNKBannerPresentationManager.showInCallHUD()()
{
  CNKBannerPresentationManager.presentSystemHUD()(BannerPresentationManager.showInCallHUD());
}

Swift::Void __swiftcall CNKBannerPresentationManager.showGreenTea3PHUD()()
{
  CNKBannerPresentationManager.presentSystemHUD()(BannerPresentationManager.showGreenTea3PHUD());
}

Swift::Void __swiftcall CNKBannerPresentationManager.showPTTHUD()()
{
  CNKBannerPresentationManager.presentSystemHUD()(BannerPresentationManager.showPTTHUD());
}

Swift::Void __swiftcall CNKBannerPresentationManager.showRemoteParticipantNoticeIfNeeded()()
{
  CNKBannerPresentationManager.presentSystemHUD()(BannerPresentationManager.showRemoteParticipantNoticeIfNeeded());
}

Swift::Void __swiftcall CNKBannerPresentationManager.showAccessoryButtonEventsNoticeIfNeeded()()
{
  CNKBannerPresentationManager.presentSystemHUD()(BannerPresentationManager.showAccessoryButtonEventsNoticeIfNeeded());
}

Swift::Void __swiftcall CNKBannerPresentationManager.showHandoffHUD()()
{
  CNKBannerPresentationManager.presentSystemHUD()(BannerPresentationManager.showHandoffHUD());
}

Swift::Void __swiftcall CNKBannerPresentationManager.showLagunaPullConversationHUD()()
{
  CNKBannerPresentationManager.presentSystemHUD()(BannerPresentationManager.showLagunaPullConversationHUD());
}

Swift::Void __swiftcall CNKBannerPresentationManager.presentReminderNotice()()
{
  CNKBannerPresentationManager.presentSystemHUD()(BannerPresentationManager.presentReminderNotice());
}

Swift::Void __swiftcall CNKBannerPresentationManager.preloadCallChanges()()
{
  CNKBannerPresentationManager.presentSystemHUD()(BannerPresentationManager.preloadCallChanges());
}

Swift::Void __swiftcall CNKBannerPresentationManager.bannerDismissedBySpringBoard()()
{
  CNKBannerPresentationManager.presentSystemHUD()(BannerPresentationManager.bannerDismissedBySpringBoard());
}

Swift::Void __swiftcall CNKBannerPresentationManager.refreshShareableContentWithBundleIdentifier(_:)(Swift::String_optional a1)
{
  void *object;
  uint64_t countAndFlagsBits;
  _QWORD *v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  id v6;
  id v7;
  _QWORD *v8;

  object = a1.value._object;
  countAndFlagsBits = a1.value._countAndFlagsBits;
  OUTLINED_FUNCTION_1_137();
  OUTLINED_FUNCTION_13_102();
  v3 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v5 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v4) + 0x180);
  v7 = v6;
  v8 = (_QWORD *)v5();

  if (v8)
  {
    (*(void (**)(uint64_t, void *))((*v3 & *v8) + 0x7A8))(countAndFlagsBits, object);

  }
  OUTLINED_FUNCTION_2_3();
}

Swift::Void __swiftcall CNKBannerPresentationManager.dismissPresentedBanner(forReason:animated:)(Swift::String forReason, Swift::Bool animated)
{
  void *object;
  uint64_t countAndFlagsBits;
  id v5;
  void *v6;

  object = forReason._object;
  countAndFlagsBits = forReason._countAndFlagsBits;
  OUTLINED_FUNCTION_1_137();
  v5 = OUTLINED_FUNCTION_118_1();
  v6 = (void *)MEMORY[0x1C3B72E00](countAndFlagsBits, object);
  objc_msgSend(v5, sel_dismissPresentedBannerForReason_animated_, v6, animated);

  OUTLINED_FUNCTION_9_0();
}

Swift::Void __swiftcall CNKBannerPresentationManager.invalidatePersistentSystemApertureAlert(reason:)(Swift::String reason)
{
  void *object;
  uint64_t countAndFlagsBits;
  id v3;
  void *v4;

  object = reason._object;
  countAndFlagsBits = reason._countAndFlagsBits;
  OUTLINED_FUNCTION_1_137();
  v3 = OUTLINED_FUNCTION_118_1();
  v4 = (void *)MEMORY[0x1C3B72E00](countAndFlagsBits, object);
  objc_msgSend(v3, sel_invalidatePersistentSystemApertureAlertWithReason_, v4);

  OUTLINED_FUNCTION_9_0();
}

Swift::Void __swiftcall CNKBannerPresentationManager.didUpdatePresentationModeToFullScreen()()
{
  CNKBannerPresentationManager.didUpdatePresentationModeToFullScreen()((SEL *)&selRef_didUpdatePresentationModeToFullScreen);
}

Swift::Void __swiftcall CNKBannerPresentationManager.didUpdatePresentationModeToDismissed()()
{
  CNKBannerPresentationManager.didUpdatePresentationModeToFullScreen()((SEL *)&selRef_didUpdatePresentationModeToDismissed);
}

void CNKBannerPresentationManager.didUpdatePresentationModeToFullScreen()(SEL *a1)
{
  id *v1;

  OUTLINED_FUNCTION_1_137();
  objc_msgSend(*v1, *a1);
  OUTLINED_FUNCTION_32();
}

void CNKBannerPresentationManager.makeSystemApertureElementProvider()()
{
  id v0;
  id v1;

  OUTLINED_FUNCTION_1_7();
  OUTLINED_FUNCTION_7_112();
  v1 = v0;
  OUTLINED_FUNCTION_14_95();
  OUTLINED_FUNCTION_37_0();
  OUTLINED_FUNCTION_32();
}

Swift::Void __swiftcall CNKBannerPresentationManager.handleLockScreenStatusChanged()()
{
  CNKBannerPresentationManager.presentSystemHUD()(BannerPresentationManager.handleLockScreenStatusChanged());
}

void CNKBannerPresentationManager.presentSystemHUD()(void (*a1)(void))
{
  id v2;

  OUTLINED_FUNCTION_1_137();
  v2 = OUTLINED_FUNCTION_118_1();
  a1();

  OUTLINED_FUNCTION_32();
}

void CNKBannerPresentationManager.conversationControlsManager.getter()
{
  id v0;
  id v1;

  OUTLINED_FUNCTION_1_7();
  OUTLINED_FUNCTION_7_112();
  v1 = v0;
  OUTLINED_FUNCTION_14_95();
  OUTLINED_FUNCTION_37_0();
  OUTLINED_FUNCTION_32();
}

id CNKBannerPresentationManager.value.getter()
{
  id *v0;

  OUTLINED_FUNCTION_1_7();
  return *v0;
}

void CNKBannerPresentationManager.value.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;

  v3 = (void **)(v1 + OBJC_IVAR___CNKBannerPresentationManager_value);
  OUTLINED_FUNCTION_2_0();
  v4 = *v3;
  *v3 = a1;

  OUTLINED_FUNCTION_32();
}

uint64_t (*CNKBannerPresentationManager.value.modify())()
{
  OUTLINED_FUNCTION_2_0();
  return CallRecordingPillViewController.cancellable.modify;
}

void __swiftcall CNKBannerPresentationManager.init()(CNKBannerPresentationManager *__return_ptr retstr)
{
  objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
}

id CNKBannerPresentationManager.init()()
{
  void *v0;
  char *v1;
  objc_super v3;

  objc_allocWithZone((Class)type metadata accessor for BannerPresentationManager());
  v1 = v0;
  *(_QWORD *)&v1[OBJC_IVAR___CNKBannerPresentationManager_value] = BannerPresentationManager.init(delegate:)();

  v3.receiver = v1;
  v3.super_class = (Class)CNKBannerPresentationManager;
  return objc_msgSendSuper2(&v3, sel_init);
}

id CNKBannerPresentationManager.init(delegate:)(uint64_t a1)
{
  id v1;

  v1 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithDelegate_, a1);
  OUTLINED_FUNCTION_19_0();
  return v1;
}

void CNKBannerPresentationManager.init(delegate:)(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  void (*v4)(uint64_t);
  id v5;
  id v6;

  objc_msgSend(v1, sel_init);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_13_102();
  v4 = *(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & v3) + 0xF0);
  v6 = v5;
  v4(a1);

  OUTLINED_FUNCTION_9_0();
}

char *keypath_get_selector_presentationDelegate()
{
  return sel_presentationDelegate;
}

id sub_1BD4691AC(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setPresentationDelegate_, *a1);
}

char *keypath_get_selector_audioRoutingDelegate()
{
  return sel_audioRoutingDelegate;
}

id sub_1BD4691D0(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setAudioRoutingDelegate_, *a1);
}

char *keypath_get_selector_handedOffCall()
{
  return sel_handedOffCall;
}

id sub_1BD4691F4(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setHandedOffCall_, *a1);
}

char *keypath_get_selector_localAudioTogglingDelegate()
{
  return sel_localAudioTogglingDelegate;
}

id sub_1BD469218(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setLocalAudioTogglingDelegate_, *a1);
}

char *keypath_get_selector_applicationState()
{
  return sel_applicationState;
}

id sub_1BD469238@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_applicationState);
  *a2 = result;
  return result;
}

id sub_1BD469268(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setApplicationState_, *a1);
}

unint64_t type metadata accessor for CNKBannerPresentationManager()
{
  unint64_t result;

  result = lazy cache variable for type metadata for CNKBannerPresentationManager;
  if (!lazy cache variable for type metadata for CNKBannerPresentationManager)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for CNKBannerPresentationManager);
  }
  return result;
}

uint64_t thunk for @escaping @callee_guaranteed @Sendable (@in_guaranteed Notification) -> ()(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void (*v6)(char *);
  uint64_t v8;

  v2 = type metadata accessor for Notification();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void (**)(char *))(a1 + 32);
  static Notification._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  v6(v5);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

id NotificationObserver.notificationCenter.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

uint64_t NotificationObserver.__allocating_init(name:notificationCenter:onNotificaiton:)(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;

  v8 = swift_allocObject();
  NotificationObserver.init(name:notificationCenter:onNotificaiton:)(a1, a2, a3, a4);
  return v8;
}

uint64_t NotificationObserver.init(name:notificationCenter:onNotificaiton:)(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  void *v7;
  id v8;
  id v9;
  _QWORD v11[6];

  *(_QWORD *)(v4 + 16) = a2;
  v11[4] = a3;
  v11[5] = a4;
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 1107296256;
  v11[2] = thunk for @escaping @callee_guaranteed @Sendable (@in_guaranteed Notification) -> ();
  v11[3] = &block_descriptor_87;
  v7 = _Block_copy(v11);
  v8 = a2;
  swift_retain();
  swift_retain();
  swift_release();
  v9 = objc_msgSend(v8, sel_addObserverForName_object_queue_usingBlock_, a1, v4, 0, v7);

  swift_release();
  _Block_release(v7);
  swift_unknownObjectRelease();

  swift_release();
  return v4;
}

uint64_t NotificationObserver.deinit()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 16);
  objc_msgSend(v1, sel_removeObserver_, v0);

  return v0;
}

uint64_t NotificationObserver.__deallocating_deinit()
{
  NotificationObserver.deinit();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for NotificationObserver()
{
  return objc_opt_self();
}

uint64_t method lookup function for NotificationObserver()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of NotificationObserver.__allocating_init(name:notificationCenter:onNotificaiton:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

id PushToTalkTalkButtonGestureRecognizer.__allocating_init(interval:maximumVerticalVelocity:target:action:)(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  objc_class *v4;
  id v9;

  v9 = objc_allocWithZone(v4);
  return PushToTalkTalkButtonGestureRecognizer.init(interval:maximumVerticalVelocity:target:action:)(a1, a2, a3, a4);
}

uint64_t PushToTalkTalkButtonGestureRecognizer.recognizedGestureWorkItem.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit37PushToTalkTalkButtonGestureRecognizer_recognizedGestureWorkItem) = a1;
  return swift_release();
}

id PushToTalkTalkButtonGestureRecognizer.init(interval:maximumVerticalVelocity:target:action:)(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  char *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t);
  objc_class *v26;
  id v27;
  _QWORD v29[2];
  objc_super v30;
  _QWORD v31[3];
  uint64_t v32;

  *(_QWORD *)&v4[OBJC_IVAR____TtC15ConversationKit37PushToTalkTalkButtonGestureRecognizer_timer] = 0;
  v9 = (uint64_t)&v4[OBJC_IVAR____TtC15ConversationKit37PushToTalkTalkButtonGestureRecognizer_previous];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (location: CGPoint, time: Date));
  OUTLINED_FUNCTION_77_0(v9, v11, v12, v10);
  *(_QWORD *)&v4[OBJC_IVAR____TtC15ConversationKit37PushToTalkTalkButtonGestureRecognizer_recognizedGestureWorkItem] = 0;
  v13 = &v4[OBJC_IVAR____TtC15ConversationKit37PushToTalkTalkButtonGestureRecognizer_interval];
  v14 = type metadata accessor for DispatchTimeInterval();
  v15 = *(_QWORD *)(v14 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v13, a1, v14);
  *(double *)&v4[OBJC_IVAR____TtC15ConversationKit37PushToTalkTalkButtonGestureRecognizer_maximumVerticalVelocity] = a4;
  outlined init with copy of (name: String, value: Any?)(a2, (uint64_t)v31, &demangling cache variable for type metadata for Any?);
  v16 = v32;
  if (v32)
  {
    v17 = __swift_project_boxed_opaque_existential_1(v31, v32);
    v29[1] = v29;
    v18 = a1;
    v19 = a3;
    v20 = *(_QWORD *)(v16 - 8);
    MEMORY[0x1E0C80A78](v17);
    OUTLINED_FUNCTION_77();
    v23 = v22 - v21;
    (*(void (**)(uint64_t))(v20 + 16))(v22 - v21);
    v24 = _bridgeAnythingToObjectiveC<A>(_:)();
    v25 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
    a3 = v19;
    a1 = v18;
    v25(v23, v16);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
  }
  else
  {
    v24 = 0;
  }
  v26 = (objc_class *)ObjC metadata update function for PushToTalkTalkButtonGestureRecognizer();
  v30.receiver = v4;
  v30.super_class = v26;
  v27 = objc_msgSendSuper2(&v30, sel_initWithTarget_action_, v24, a3);
  swift_unknownObjectRelease();
  outlined destroy of Conversation?(a2, &demangling cache variable for type metadata for Any?);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(a1, v14);
  return v27;
}

uint64_t type metadata accessor for PushToTalkTalkButtonGestureRecognizer()
{
  uint64_t result;

  result = type metadata singleton initialization cache for PushToTalkTalkButtonGestureRecognizer;
  if (!type metadata singleton initialization cache for PushToTalkTalkButtonGestureRecognizer)
    return swift_getSingletonMetadata();
  return result;
}

id PushToTalkTalkButtonGestureRecognizer.touchesBegan(_:with:)(uint64_t a1, uint64_t a2)
{
  return PushToTalkTalkButtonGestureRecognizer.touchesBegan(_:with:)(a1, a2, (SEL *)&selRef_touchesBegan_withEvent_);
}

unint64_t lazy protocol witness table accessor for type UITouch and conformance NSObject()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type UITouch and conformance NSObject;
  if (!lazy protocol witness table cache variable for type UITouch and conformance NSObject)
  {
    v1 = _sSo8NSObjectCMaTm_0(255, &lazy cache variable for type metadata for UITouch);
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type UITouch and conformance NSObject);
  }
  return result;
}

id PushToTalkTalkButtonGestureRecognizer.touchesMoved(_:with:)(uint64_t a1, uint64_t a2)
{
  return PushToTalkTalkButtonGestureRecognizer.touchesBegan(_:with:)(a1, a2, (SEL *)&selRef_touchesMoved_withEvent_);
}

id PushToTalkTalkButtonGestureRecognizer.touchesBegan(_:with:)(uint64_t a1, uint64_t a2, SEL *a3)
{
  void *v3;
  Class isa;
  uint64_t v7;
  id v8;
  double v9;
  double v10;
  double v11;
  double v12;
  objc_super v14;

  OUTLINED_FUNCTION_17_8(a1, &lazy cache variable for type metadata for UITouch);
  lazy protocol witness table accessor for type UITouch and conformance NSObject();
  isa = Set._bridgeToObjectiveC()().super.isa;
  v14.receiver = v3;
  v14.super_class = (Class)ObjC metadata update function for PushToTalkTalkButtonGestureRecognizer();
  objc_msgSendSuper2(&v14, *a3, isa, a2);

  v8 = OUTLINED_FUNCTION_25_1(v7, sel_view);
  objc_msgSend(v3, sel_locationInView_, v8);
  v10 = v9;
  v12 = v11;

  return PushToTalkTalkButtonGestureRecognizer.update(location:)(v10, v12);
}

uint64_t PushToTalkTalkButtonGestureRecognizer.touchesEnded(_:with:)(uint64_t a1, uint64_t a2)
{
  return PushToTalkTalkButtonGestureRecognizer.touchesEnded(_:with:)(a1, a2, (SEL *)&selRef_touchesEnded_withEvent_, 3);
}

uint64_t PushToTalkTalkButtonGestureRecognizer.touchesCancelled(_:with:)(uint64_t a1, uint64_t a2)
{
  return PushToTalkTalkButtonGestureRecognizer.touchesEnded(_:with:)(a1, a2, (SEL *)&selRef_touchesCancelled_withEvent_, 4);
}

uint64_t PushToTalkTalkButtonGestureRecognizer.touchesEnded(_:with:)(uint64_t a1, uint64_t a2, SEL *a3, uint64_t a4)
{
  void *v4;
  Class isa;
  uint64_t v9;
  uint64_t result;
  objc_super v11;

  OUTLINED_FUNCTION_17_8(a1, &lazy cache variable for type metadata for UITouch);
  lazy protocol witness table accessor for type UITouch and conformance NSObject();
  isa = Set._bridgeToObjectiveC()().super.isa;
  v11.receiver = v4;
  v11.super_class = (Class)ObjC metadata update function for PushToTalkTalkButtonGestureRecognizer();
  objc_msgSendSuper2(&v11, *a3, isa, a2);

  result = (uint64_t)OUTLINED_FUNCTION_25_1(v9, sel_state);
  if (result <= 2)
    return (uint64_t)objc_msgSend(v4, sel_setState_, a4);
  return result;
}

uint64_t @objc PushToTalkTalkButtonGestureRecognizer.touchesBegan(_:with:)(void *a1, uint64_t a2, uint64_t a3, void *a4, void (*a5)(uint64_t, id))
{
  uint64_t v8;
  id v9;
  id v10;

  OUTLINED_FUNCTION_17_8((uint64_t)a1, &lazy cache variable for type metadata for UITouch);
  lazy protocol witness table accessor for type UITouch and conformance NSObject();
  v8 = static Set._unconditionallyBridgeFromObjectiveC(_:)();
  v9 = a4;
  v10 = a1;
  a5(v8, v9);

  return swift_bridgeObjectRelease();
}

Swift::Void __swiftcall PushToTalkTalkButtonGestureRecognizer.reset()()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  objc_super v9;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (location: CGPoint, time: Date)?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_77();
  v4 = v3 - v2;
  v9.receiver = v0;
  v9.super_class = (Class)ObjC metadata update function for PushToTalkTalkButtonGestureRecognizer();
  objc_msgSendSuper2(&v9, sel_reset);
  objc_msgSend(v0, sel_setState_, 0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (location: CGPoint, time: Date));
  OUTLINED_FUNCTION_77_0(v4, v6, v7, v5);
  v8 = (uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit37PushToTalkTalkButtonGestureRecognizer_previous];
  OUTLINED_FUNCTION_60_0();
  outlined assign with take of (location: CGPoint, time: Date)?(v4, v8);
  swift_endAccess();
  if (*(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit37PushToTalkTalkButtonGestureRecognizer_recognizedGestureWorkItem])
  {
    swift_retain();
    dispatch thunk of DispatchWorkItem.cancel()();
    OUTLINED_FUNCTION_43();
  }
}

id PushToTalkTalkButtonGestureRecognizer.update(location:)(double a1, double a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double *v24;
  uint64_t v25;
  uint64_t v26;
  double *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  double *v33;
  uint64_t v34;
  id result;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  char *v46;
  void (*v47)(uint64_t, double *);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  double v58;
  double v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  double *v63;
  uint64_t v64;
  void (*v65)(char *, char *, uint64_t);
  uint64_t v66;
  double *v67;
  uint64_t v68;
  double v69;
  double v70;
  double v71;
  void (*v72)(uint64_t, uint64_t, double);
  uint64_t v73;
  char *v74;
  uint64_t v75;
  double *v76;
  double *v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  double *v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD aBlock[6];

  v84 = (double *)type metadata accessor for DispatchTime();
  v82 = *((_QWORD *)v84 - 1);
  MEMORY[0x1E0C80A78](v84);
  OUTLINED_FUNCTION_79();
  v81 = v5 - v6;
  MEMORY[0x1E0C80A78](v7);
  v83 = (char *)&v75 - v8;
  type metadata accessor for DispatchWorkItemFlags();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_77();
  v12 = v11 - v10;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (location: CGPoint, time: Date)?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_79();
  v16 = v14 - v15;
  MEMORY[0x1E0C80A78](v17);
  v19 = (double *)((char *)&v75 - v18);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (location: CGPoint, time: Date));
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v21);
  OUTLINED_FUNCTION_79();
  v24 = (double *)(v22 - v23);
  MEMORY[0x1E0C80A78](v25);
  v27 = (double *)((char *)&v75 - v26);
  MEMORY[0x1E0C80A78](v28);
  v30 = (char *)&v75 - v29;
  MEMORY[0x1E0C80A78](v31);
  v33 = (double *)((char *)&v75 - v32);
  v85 = v2;
  result = OUTLINED_FUNCTION_25_1(v34, sel_state);
  if (!result)
  {
    v76 = v27;
    v77 = v24;
    v78 = v30;
    v79 = v12;
    v80 = v16;
    v36 = (char *)v33 + *(int *)(v20 + 48);
    *v33 = a1;
    v33[1] = a2;
    Date.init()();
    v37 = v85 + OBJC_IVAR____TtC15ConversationKit37PushToTalkTalkButtonGestureRecognizer_previous;
    swift_beginAccess();
    outlined init with copy of (name: String, value: Any?)(v37, (uint64_t)v19, &demangling cache variable for type metadata for (location: CGPoint, time: Date)?);
    if (__swift_getEnumTagSinglePayload((uint64_t)v19, 1, v20) == 1)
    {
      outlined destroy of Conversation?((uint64_t)v19, &demangling cache variable for type metadata for (location: CGPoint, time: Date)?);
      v38 = swift_allocObject();
      v39 = v85;
      swift_unknownObjectWeakInit();
      aBlock[4] = partial apply for closure #1 in PushToTalkTalkButtonGestureRecognizer.update(location:);
      aBlock[5] = v38;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
      aBlock[3] = &block_descriptor_88;
      v78 = _Block_copy(aBlock);
      v86 = MEMORY[0x1E0DEE9D8];
      lazy protocol witness table accessor for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags();
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
      lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]();
      v40 = v20;
      v41 = v37;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      type metadata accessor for DispatchWorkItem();
      swift_allocObject();
      v42 = DispatchWorkItem.init(flags:block:)();
      swift_release();
      v43 = OUTLINED_FUNCTION_43();
      OUTLINED_FUNCTION_17_8(v43, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
      v44 = (void *)static OS_dispatch_queue.main.getter();
      v45 = v81;
      static DispatchTime.now()();
      v46 = v83;
      MEMORY[0x1C3B72C44](v45, v39 + OBJC_IVAR____TtC15ConversationKit37PushToTalkTalkButtonGestureRecognizer_interval);
      v47 = *(void (**)(uint64_t, double *))(v82 + 8);
      v48 = v45;
      v49 = (uint64_t)v84;
      v47(v48, v84);
      MEMORY[0x1C3B735BC](v46, v42);

      v47((uint64_t)v46, (double *)v49);
      v50 = swift_retain();
      PushToTalkTalkButtonGestureRecognizer.recognizedGestureWorkItem.setter(v50);
      swift_release();
      v51 = v80;
      outlined init with copy of (name: String, value: Any?)((uint64_t)v33, v80, &demangling cache variable for type metadata for (location: CGPoint, time: Date));
      __swift_storeEnumTagSinglePayload(v51, 0, 1, v40);
      OUTLINED_FUNCTION_60_0();
      v52 = v51;
      v53 = v41;
    }
    else
    {
      v83 = (char *)v37;
      v84 = v33;
      v54 = *(int *)(v20 + 48);
      v55 = (uint64_t)v78;
      v56 = (char *)v78 + v54;
      v57 = (char *)v19 + v54;
      v58 = *v19;
      v59 = v19[1];
      *v78 = *(_QWORD *)v19;
      *(double *)(v55 + 8) = v59;
      v60 = type metadata accessor for Date();
      v61 = *(_QWORD *)(v60 - 8);
      (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v56, v57, v60);
      v62 = *(int *)(v20 + 48);
      v63 = v76;
      v64 = (uint64_t)v76 + v62;
      *v76 = v58;
      v63[1] = v59;
      v65 = *(void (**)(char *, char *, uint64_t))(v61 + 16);
      v65((char *)v63 + v62, v56, v60);
      v66 = *(int *)(v20 + 48);
      v67 = v77;
      v68 = (uint64_t)v77 + v66;
      *v77 = a1;
      v67[1] = a2;
      v65((char *)v67 + v66, v36, v60);
      v69 = PushToTalkTalkButtonGestureRecognizer.velocity(previous:current:)(v64, v68, v58, v59, a1, a2);
      v71 = v70;
      v72 = *(void (**)(uint64_t, uint64_t, double))(v61 + 8);
      v72(v68, v60, v69);
      ((void (*)(uint64_t, uint64_t))v72)(v64, v60);
      if (*(double *)(v85
                     + OBJC_IVAR____TtC15ConversationKit37PushToTalkTalkButtonGestureRecognizer_maximumVerticalVelocity) < fabs(v71))
      {
        if (*(_QWORD *)(v85
                       + OBJC_IVAR____TtC15ConversationKit37PushToTalkTalkButtonGestureRecognizer_recognizedGestureWorkItem))
        {
          swift_retain();
          dispatch thunk of DispatchWorkItem.cancel()();
          OUTLINED_FUNCTION_43();
        }
      }
      OUTLINED_FUNCTION_11_98(v55);
      v33 = v84;
      v73 = v80;
      outlined init with copy of (name: String, value: Any?)((uint64_t)v84, v80, &demangling cache variable for type metadata for (location: CGPoint, time: Date));
      __swift_storeEnumTagSinglePayload(v73, 0, 1, v20);
      v74 = v83;
      OUTLINED_FUNCTION_60_0();
      v52 = v73;
      v53 = (uint64_t)v74;
    }
    outlined assign with take of (location: CGPoint, time: Date)?(v52, v53);
    swift_endAccess();
    return (id)outlined destroy of Conversation?((uint64_t)v33, &demangling cache variable for type metadata for (location: CGPoint, time: Date));
  }
  return result;
}

uint64_t outlined assign with take of (location: CGPoint, time: Date)?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (location: CGPoint, time: Date)?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void closure #1 in PushToTalkTalkButtonGestureRecognizer.update(location:)(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  void *v3;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = (void *)MEMORY[0x1C3B752C0](v1);
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, sel_setState_, 1);

  }
}

double PushToTalkTalkButtonGestureRecognizer.velocity(previous:current:)(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double *v16;
  uint64_t v17;
  uint64_t v18;
  double *v19;
  uint64_t v20;
  uint64_t v21;
  double *v22;
  uint64_t v23;
  uint64_t v24;
  double *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, char *, uint64_t);
  double v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;

  v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (location: CGPoint, time: Date));
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_79();
  v16 = (double *)(v14 - v15);
  MEMORY[0x1E0C80A78](v17);
  v19 = (double *)((char *)&v42 - v18);
  MEMORY[0x1E0C80A78](v20);
  v22 = (double *)((char *)&v42 - v21);
  MEMORY[0x1E0C80A78](v23);
  v25 = (double *)((char *)&v42 - v24);
  v27 = (char *)&v42 + *(int *)(v26 + 48) - v24;
  *v25 = a3;
  v25[1] = a4;
  v28 = type metadata accessor for Date();
  v43 = *(_QWORD *)(v28 - 8);
  OUTLINED_FUNCTION_7_113((uint64_t)v27, a1);
  v29 = (uint64_t)v22 + *(int *)(v12 + 48);
  *v22 = a5;
  v22[1] = a6;
  OUTLINED_FUNCTION_7_113(v29, a2);
  if ((static Date.> infix(_:_:)() & 1) != 0)
  {
    Date.distance(to:)();
    v31 = v30;
    v42 = (uint64_t)v19 + *(int *)(v12 + 48);
    v32 = v42;
    *v19 = a3;
    v19[1] = a4;
    OUTLINED_FUNCTION_7_113(v32, (uint64_t)v27);
    v33 = (uint64_t)v16 + *(int *)(v12 + 48);
    *v16 = a5;
    v16[1] = a6;
    OUTLINED_FUNCTION_7_113(v33, v29);
    v34 = a3 - a5;
    OUTLINED_FUNCTION_67_0(v33);
    OUTLINED_FUNCTION_67_0(v42);
    v35 = (uint64_t)v19 + *(int *)(v12 + 48);
    v36 = *((_QWORD *)v25 + 1);
    *v19 = *v25;
    *((_QWORD *)v19 + 1) = v36;
    v37 = *(void (**)(uint64_t, char *, uint64_t))(v43 + 32);
    v38 = v34 / v31;
    v37(v35, v27, v28);
    v39 = (uint64_t)v16 + *(int *)(v12 + 48);
    v40 = *((_QWORD *)v22 + 1);
    *v16 = *v22;
    *((_QWORD *)v16 + 1) = v40;
    v37(v39, (char *)v29, v28);
    OUTLINED_FUNCTION_67_0(v39);
    OUTLINED_FUNCTION_67_0(v35);
  }
  else
  {
    OUTLINED_FUNCTION_11_98((uint64_t)v22);
    OUTLINED_FUNCTION_11_98((uint64_t)v25);
    return 0.0;
  }
  return v38;
}

id PushToTalkTalkButtonGestureRecognizer.__allocating_init(target:action:)(_QWORD *a1, uint64_t a2)
{
  objc_class *v2;
  uint64_t v4;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;

  v4 = a1[3];
  if (v4)
  {
    v6 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    v7 = *(_QWORD *)(v4 - 8);
    MEMORY[0x1E0C80A78](v6);
    OUTLINED_FUNCTION_77();
    v10 = v9 - v8;
    (*(void (**)(uint64_t))(v7 + 16))(v9 - v8);
    v11 = _bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v10, v4);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v11 = 0;
  }
  v12 = objc_msgSend(objc_allocWithZone(v2), sel_initWithTarget_action_, v11, a2);
  swift_unknownObjectRelease();
  return v12;
}

void PushToTalkTalkButtonGestureRecognizer.init(target:action:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id PushToTalkTalkButtonGestureRecognizer.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)ObjC metadata update function for PushToTalkTalkButtonGestureRecognizer();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void type metadata completion function for PushToTalkTalkButtonGestureRecognizer()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for DispatchTimeInterval();
  if (v0 <= 0x3F)
  {
    type metadata accessor for (location: CGPoint, time: Date)?();
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for PushToTalkTalkButtonGestureRecognizer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PushToTalkTalkButtonGestureRecognizer.__allocating_init(interval:maximumVerticalVelocity:target:action:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 192))();
}

void type metadata accessor for (location: CGPoint, time: Date)?()
{
  unint64_t v0;
  uint64_t v1;

  if (!lazy cache variable for type metadata for (location: CGPoint, time: Date)?)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for (location: CGPoint, time: Date));
    v0 = type metadata accessor for Optional();
    if (!v1)
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for (location: CGPoint, time: Date)?);
  }
}

uint64_t sub_1BD46A75C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void partial apply for closure #1 in PushToTalkTalkButtonGestureRecognizer.update(location:)()
{
  uint64_t v0;

  closure #1 in PushToTalkTalkButtonGestureRecognizer.update(location:)(v0);
}

uint64_t static SymbolImageProviding.symbolImage(for:)(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[8];

  v5 = a1[3];
  v6 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v5);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v6 + 8))(v9, v5, v6);
  v7 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(a3 + 8))(v9, a2, a3);
  outlined release of SymbolImageDescription((uint64_t)v9);
  return v7;
}

void SymbolImageDescribers.ConversationControls.symbolImageDescription.getter(char a1)
{
  __asm { BR              X10 }
}

void sub_1BD46A840()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_16_84();
  OUTLINED_FUNCTION_21_82(MEMORY[0x1E0DC4AD0]);
  v4 = OUTLINED_FUNCTION_32_50();
  *(_QWORD *)v0 = v3;
  *(_QWORD *)(v0 + 8) = v2;
  *(_QWORD *)(v0 + 16) = 2;
  *(_QWORD *)(v0 + 24) = v1;
  *(_WORD *)(v0 + 32) = 0;
  *(_QWORD *)(v0 + 40) = 6;
  *(_BYTE *)(v0 + 48) = 0;
  *(_QWORD *)(v0 + 56) = v4;
  OUTLINED_FUNCTION_18();
}

__int128 *SymbolImageDescription.badConnectionTitle1.unsafeMutableAddressor()
{
  if (one-time initialization token for badConnectionTitle1 != -1)
    swift_once();
  return &static SymbolImageDescription.badConnectionTitle1;
}

uint64_t static SymbolImageDescribers.ConversationControls.continueHandoff.getter()
{
  if (static Platform.current.getter() == 1)
    return 24;
  else
    return 23;
}

uint64_t SymbolImageDescribers.ConversationActivityIcon.symbolName.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BD46AE7C + 4 * byte_1BD661240[a1]))(0x76742E79616C70, 0xE700000000000000);
}

uint64_t sub_1BD46AE7C()
{
  return 0x74656B636F72;
}

uint64_t sub_1BD46AE90()
{
  return 0x722E657275676966;
}

uint64_t sub_1BD46AEB0()
{
  return 6775138;
}

uint64_t sub_1BD46AEC0()
{
  return 1802465122;
}

uint64_t sub_1BD46AED0()
{
  return 0x65626F6C67;
}

uint64_t sub_1BD46AEE4()
{
  return 0x65762E736B6F6F62;
}

uint64_t sub_1BD46AF08()
{
  return 0x656C626269726373;
}

uint64_t sub_1BD46AF20()
{
  return 0x6F6E2E636973756DLL;
}

unint64_t sub_1BD46AF3C()
{
  return 0xD000000000000028;
}

uint64_t sub_1BD46AF5C()
{
  return 6516580;
}

uint64_t sub_1BD46AF6C()
{
  return 0x322E6E6F73726570;
}

unint64_t sub_1BD46AF90()
{
  return 0xD000000000000022;
}

uint64_t sub_1BD46AFAC()
{
  return 0x6F746F6870;
}

id SymbolImageDescription.symbol(enabled:)@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int v5;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  void *v11;
  Swift::String v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  id result;
  id v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v3 = v2;
  v5 = *(unsigned __int8 *)(v2 + 33);
  if (v5 == 1)
  {
    lazy protocol witness table accessor for type String and conformance String();
    v7 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
    v9 = (a1 & 1) == 0;
    if ((a1 & 1) != 0)
      v10 = 0x6C6C69662ELL;
    else
      v10 = 0;
    if (v9)
      v11 = (void *)0xE000000000000000;
    else
      v11 = (void *)0xE500000000000000;
    v24 = v7;
    v25 = v8;
    swift_bridgeObjectRetain();
    v12._countAndFlagsBits = v10;
    v12._object = v11;
    String.append(_:)(v12);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v14 = v25;
    v13 = v24;
    v15 = *(void **)(v2 + 24);
    v16 = *(void **)(v3 + 56);
    v17 = v16;
    result = v15;
    v19 = result;
  }
  else
  {
    v16 = *(void **)(v2 + 56);
    v19 = *(id *)(v2 + 24);
    v13 = *(_QWORD *)v3;
    v14 = *(_QWORD *)(v3 + 8);
    result = (id)outlined retain of SymbolImageDescription(v3);
  }
  v20 = *(_QWORD *)(v3 + 40);
  v21 = *(_BYTE *)(v3 + 48);
  v22 = *(_BYTE *)(v3 + 32);
  v23 = *(_QWORD *)(v3 + 16);
  *(_QWORD *)a2 = v13;
  *(_QWORD *)(a2 + 8) = v14;
  *(_QWORD *)(a2 + 16) = v23;
  *(_QWORD *)(a2 + 24) = v19;
  *(_BYTE *)(a2 + 32) = v22;
  *(_BYTE *)(a2 + 33) = v5;
  *(_QWORD *)(a2 + 40) = v20;
  *(_BYTE *)(a2 + 48) = v21;
  *(_QWORD *)(a2 + 56) = v16;
  return result;
}

void SymbolImageDescribers.LocalParticipantView.symbolImageDescription.getter(char a1)
{
  __asm { BR              X12 }
}

void sub_1BD46B184()
{
  uint64_t v0;
  char v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;

  OUTLINED_FUNCTION_15_92();
  v5 = v4 | 2;
  OUTLINED_FUNCTION_35_44();
  v7 = v6;
  *(_QWORD *)v0 = v5;
  *(_QWORD *)(v0 + 8) = v3;
  *(_QWORD *)(v0 + 16) = 2;
  *(_QWORD *)(v0 + 24) = v7;
  *(_BYTE *)(v0 + 32) = v1;
  *(_BYTE *)(v0 + 33) = v2;
  *(_QWORD *)(v0 + 40) = 4;
  OUTLINED_FUNCTION_9_96();
}

id one-time initialization function for badConnectionTitle1()
{
  void *v0;

  v0 = (void *)*MEMORY[0x1E0DC4B50];
  *(_QWORD *)&static SymbolImageDescription.badConnectionTitle1 = 0xD00000000000001DLL;
  *((_QWORD *)&static SymbolImageDescription.badConnectionTitle1 + 1) = 0x80000001BD68BFA0;
  qword_1EF4FD260 = 3;
  unk_1EF4FD268 = v0;
  LOWORD(xmmword_1EF4FD270) = 0;
  return OUTLINED_FUNCTION_0_141(v0, (uint64_t)&static SymbolImageDescription.badConnectionTitle1);
}

uint64_t SymbolImageDescription.init(name:scale:textStyle:staticWeight:hierarchicalColor:isPrivate:fillWhenEnabled:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, char a10)
{
  *(_QWORD *)a9 = result;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_BYTE *)(a9 + 32) = a8;
  *(_BYTE *)(a9 + 33) = a10;
  *(_QWORD *)(a9 + 40) = a5;
  *(_BYTE *)(a9 + 48) = a6 & 1;
  *(_QWORD *)(a9 + 56) = a7;
  return result;
}

uint64_t static SymbolImageDescription.badConnectionTitle1.getter@<X0>(uint64_t a1@<X8>)
{
  if (one-time initialization token for badConnectionTitle1 != -1)
    swift_once();
  return outlined init with copy of SymbolImageDescription((uint64_t)&static SymbolImageDescription.badConnectionTitle1, a1);
}

uint64_t outlined init with copy of SymbolImageDescription(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for SymbolImageDescription(a2, a1);
  return a2;
}

uint64_t SymbolImageDescription.name.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void SymbolImageDescription.name.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  OUTLINED_FUNCTION_18();
}

uint64_t (*SymbolImageDescription.name.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t SymbolImageDescription.scale.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t SymbolImageDescription.scale.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = result;
  return result;
}

uint64_t (*SymbolImageDescription.scale.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

id SymbolImageDescription.textStyle.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 24);
}

void SymbolImageDescription.textStyle.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = a1;
  OUTLINED_FUNCTION_0();
}

uint64_t (*SymbolImageDescription.textStyle.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t SymbolImageDescription.isPrivate.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t SymbolImageDescription.isPrivate.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 32) = result;
  return result;
}

uint64_t (*SymbolImageDescription.isPrivate.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t SymbolImageDescription.fillWhenEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 33);
}

uint64_t SymbolImageDescription.fillWhenEnabled.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 33) = result;
  return result;
}

uint64_t (*SymbolImageDescription.fillWhenEnabled.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t SymbolImageDescription.staticWeight.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

uint64_t SymbolImageDescription.staticWeight.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = result;
  *(_BYTE *)(v2 + 48) = a2 & 1;
  return result;
}

uint64_t (*SymbolImageDescription.staticWeight.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void *SymbolImageDescription.hierarchicalColor.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 56);
  v2 = v1;
  return v1;
}

void SymbolImageDescription.hierarchicalColor.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 56) = a1;
  OUTLINED_FUNCTION_0();
}

uint64_t (*SymbolImageDescription.hierarchicalColor.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void SymbolImageDescription.hash(into:)()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  Swift::UInt v3;
  void *v4;
  id v5;
  void *v6;

  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Hasher._combine(_:)(*(_QWORD *)(v0 + 16));
  v6 = *(void **)(v0 + 24);
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  v1 = v6;
  String.hash(into:)();
  v2 = swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_44_49(v2);
  Hasher._combine(_:)(*(_BYTE *)(v0 + 32) & 1);
  Hasher._combine(_:)(*(_BYTE *)(v0 + 33) & 1);
  if (*(_BYTE *)(v0 + 48) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    v3 = *(_QWORD *)(v0 + 40);
    Hasher._combine(_:)(1u);
    Hasher._combine(_:)(v3);
  }
  v4 = *(void **)(v0 + 56);
  if (v4)
  {
    Hasher._combine(_:)(1u);
    v5 = v4;
    NSObject.hash(into:)();

  }
  else
  {
    Hasher._combine(_:)(0);
  }
}

uint64_t static SymbolImageDescription.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  BOOL v4;
  char v5;
  uint64_t result;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  id *v14;
  id *v15;
  char v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  char v21;
  id v22;
  id v23;

  v4 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if (v4 || (v5 = _stringCompareWithSmolCheck(_:_:expecting:)(), result = 0, (v5 & 1) != 0))
  {
    if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
      return 0;
    v7 = *(void **)(a1 + 24);
    v22 = *(id *)(a2 + 24);
    v23 = v7;
    v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v10 = v9;
    if (v8 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v10 == v11)
    {
      outlined retain of UIColor?(&v23);
      outlined retain of UIColor?(&v22);
      swift_bridgeObjectRelease_n();
      v15 = outlined release of BackgroundView<A>(&v22);
      OUTLINED_FUNCTION_44_49((uint64_t)v15, v22, v23);
    }
    else
    {
      v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
      outlined retain of UIColor?(&v23);
      outlined retain of UIColor?(&v22);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = outlined release of BackgroundView<A>(&v22);
      OUTLINED_FUNCTION_44_49((uint64_t)v14, v22, v23);
      result = 0;
      if ((v13 & 1) == 0)
        return result;
    }
    if (((*(unsigned __int8 *)(a1 + 32) ^ *(unsigned __int8 *)(a2 + 32)) & 1) != 0
      || ((*(unsigned __int8 *)(a1 + 33) ^ *(unsigned __int8 *)(a2 + 33)) & 1) != 0)
    {
      return 0;
    }
    v16 = *(_BYTE *)(a2 + 48);
    if ((*(_BYTE *)(a1 + 48) & 1) != 0)
    {
      if (!*(_BYTE *)(a2 + 48))
        return 0;
    }
    else
    {
      if (*(_QWORD *)(a1 + 40) != *(_QWORD *)(a2 + 40))
        v16 = 1;
      if ((v16 & 1) != 0)
        return 0;
    }
    v17 = *(void **)(a1 + 56);
    v18 = *(void **)(a2 + 56);
    if (v17)
    {
      if (v18)
      {
        type metadata accessor for UIColor();
        v19 = v18;
        v20 = v17;
        v21 = static NSObject.== infix(_:_:)();

        if ((v21 & 1) != 0)
          return 1;
      }
    }
    else if (!v18)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

void SymbolImageDescription.hashValue.getter()
{
  OUTLINED_FUNCTION_5_1();
  SymbolImageDescription.hash(into:)();
  OUTLINED_FUNCTION_4_6();
  OUTLINED_FUNCTION_2();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance SymbolImageDescription()
{
  Hasher.init(_seed:)();
  SymbolImageDescription.hash(into:)();
  return Hasher._finalize()();
}

void *static SymbolImageDescribers.DrawerDisc.allCases.getter()
{
  return &outlined read-only object #0 of static SymbolImageDescribers.DrawerDisc.allCases.getter;
}

void protocol witness for static CaseIterable.allCases.getter in conformance SymbolImageDescribers.DrawerDisc(_QWORD *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static SymbolImageDescribers.DrawerDisc.allCases.getter;
}

BOOL static SymbolImageDescribers.DrawerPill.== infix(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void SymbolImageDescribers.DrawerPill.hash(into:)(uint64_t a1, char a2)
{
  Hasher._combine(_:)(a2 & 1);
  OUTLINED_FUNCTION_0();
}

void *static SymbolImageDescribers.DrawerPill.allCases.getter()
{
  return &outlined read-only object #0 of static SymbolImageDescribers.DrawerPill.allCases.getter;
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance SymbolImageDescribers.DrawerPill(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static SymbolImageDescribers.DrawerPill.== infix(_:_:)(*a1, *a2);
}

uint64_t protocol witness for Hashable.hashValue.getter in conformance SymbolImageDescribers.DrawerPill()
{
  unsigned __int8 *v0;

  return SymbolImageDescribers.DrawerPill.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance SymbolImageDescribers.DrawerPill(uint64_t a1)
{
  char *v1;

  SymbolImageDescribers.DrawerPill.hash(into:)(a1, *v1);
}

void protocol witness for static CaseIterable.allCases.getter in conformance SymbolImageDescribers.DrawerPill(_QWORD *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static SymbolImageDescribers.DrawerPill.allCases.getter;
}

void *static SymbolImageDescribers.DrawerTable.allCases.getter()
{
  return &outlined read-only object #0 of static SymbolImageDescribers.DrawerTable.allCases.getter;
}

void protocol witness for static CaseIterable.allCases.getter in conformance SymbolImageDescribers.DrawerTable(_QWORD *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static SymbolImageDescribers.DrawerTable.allCases.getter;
}

void *static SymbolImageDescribers.Captions.allCases.getter()
{
  return &outlined read-only object #0 of static SymbolImageDescribers.Captions.allCases.getter;
}

void protocol witness for static CaseIterable.allCases.getter in conformance SymbolImageDescribers.Captions(_QWORD *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static SymbolImageDescribers.Captions.allCases.getter;
}

void *static SymbolImageDescribers.ConversationControls.allCases.getter()
{
  return &outlined read-only object #0 of static SymbolImageDescribers.ConversationControls.allCases.getter;
}

void protocol witness for static CaseIterable.allCases.getter in conformance SymbolImageDescribers.ConversationControls(_QWORD *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static SymbolImageDescribers.ConversationControls.allCases.getter;
}

void *static SymbolImageDescribers.ConversationControlsSubtitles.allCases.getter()
{
  return &outlined read-only object #0 of static SymbolImageDescribers.ConversationControlsSubtitles.allCases.getter;
}

void protocol witness for static CaseIterable.allCases.getter in conformance SymbolImageDescribers.ConversationControlsSubtitles(_QWORD *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static SymbolImageDescribers.ConversationControlsSubtitles.allCases.getter;
}

BOOL static SymbolImageDescribers.ConversationActivityIcon.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

void SymbolImageDescribers.ConversationActivityIcon.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
  Hasher._combine(_:)(a2);
  OUTLINED_FUNCTION_0();
}

void *static SymbolImageDescribers.ConversationActivityIcon.allCases.getter()
{
  return &outlined read-only object #0 of static SymbolImageDescribers.ConversationActivityIcon.allCases.getter;
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance SymbolImageDescribers.ConversationActivityIcon(char *a1, char *a2)
{
  return static SymbolImageDescribers.ConversationActivityIcon.== infix(_:_:)(*a1, *a2);
}

uint64_t protocol witness for Hashable.hashValue.getter in conformance SymbolImageDescribers.ConversationActivityIcon()
{
  unsigned __int8 *v0;

  return SymbolImageDescribers.ConversationActivityIcon.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance SymbolImageDescribers.ConversationActivityIcon(uint64_t a1)
{
  unsigned __int8 *v1;

  SymbolImageDescribers.ConversationActivityIcon.hash(into:)(a1, *v1);
}

void protocol witness for static CaseIterable.allCases.getter in conformance SymbolImageDescribers.ConversationActivityIcon(_QWORD *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static SymbolImageDescribers.ConversationActivityIcon.allCases.getter;
}

void *static SymbolImageDescribers.EphemeralAlerts.allCases.getter()
{
  return &outlined read-only object #0 of static SymbolImageDescribers.EphemeralAlerts.allCases.getter;
}

void protocol witness for static CaseIterable.allCases.getter in conformance SymbolImageDescribers.EphemeralAlerts(_QWORD *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static SymbolImageDescribers.EphemeralAlerts.allCases.getter;
}

void *static SymbolImageDescribers.BottomBar.allCases.getter()
{
  return &outlined read-only object #0 of static SymbolImageDescribers.BottomBar.allCases.getter;
}

void protocol witness for static CaseIterable.allCases.getter in conformance SymbolImageDescribers.BottomBar(_QWORD *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static SymbolImageDescribers.BottomBar.allCases.getter;
}

uint64_t static SymbolImageDescribers.Roster.== infix(_:_:)()
{
  return 1;
}

void SymbolImageDescribers.Roster.hash(into:)()
{
  Swift::UInt v0;

  v0 = OUTLINED_FUNCTION_407();
  Hasher._combine(_:)(v0);
  OUTLINED_FUNCTION_0();
}

void *static SymbolImageDescribers.Roster.allCases.getter()
{
  return &outlined read-only object #0 of static SymbolImageDescribers.Roster.allCases.getter;
}

void protocol witness for static CaseIterable.allCases.getter in conformance SymbolImageDescribers.Roster(_QWORD *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static SymbolImageDescribers.Roster.allCases.getter;
}

void *static SymbolImageDescribers.LocalParticipantView.allCases.getter()
{
  return &outlined read-only object #0 of static SymbolImageDescribers.LocalParticipantView.allCases.getter;
}

void protocol witness for static CaseIterable.allCases.getter in conformance SymbolImageDescribers.LocalParticipantView(_QWORD *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static SymbolImageDescribers.LocalParticipantView.allCases.getter;
}

void *static SymbolImageDescribers.ParticipantView.allCases.getter()
{
  return &outlined read-only object #0 of static SymbolImageDescribers.ParticipantView.allCases.getter;
}

void protocol witness for static CaseIterable.allCases.getter in conformance SymbolImageDescribers.ParticipantView(_QWORD *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static SymbolImageDescribers.ParticipantView.allCases.getter;
}

void *static SymbolImageDescribers.TVHandoff.allCases.getter()
{
  return &outlined read-only object #0 of static SymbolImageDescribers.TVHandoff.allCases.getter;
}

void protocol witness for static CaseIterable.allCases.getter in conformance SymbolImageDescribers.TVHandoff(_QWORD *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static SymbolImageDescribers.TVHandoff.allCases.getter;
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance SymbolImageDescribers.DrawerDisc()
{
  int v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  char v9;

  v0 = OUTLINED_FUNCTION_40_53();
  OUTLINED_FUNCTION_22_7(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);
  OUTLINED_FUNCTION_4_6();
  OUTLINED_FUNCTION_2();
}

void SymbolImageDescribers.DrawerPill.hashValue.getter(char a1)
{
  OUTLINED_FUNCTION_5_1();
  Hasher._combine(_:)(a1 & 1);
  OUTLINED_FUNCTION_4_6();
  OUTLINED_FUNCTION_2();
}

void SymbolImageDescribers.DrawerDisc.symbolImageDescription.getter()
{
  OUTLINED_FUNCTION_44_20();
  __asm { BR              X12 }
}

void sub_1BD46BC50(id *a1@<X8>)
{
  uint64_t v1;
  id v2;

  v2 = OUTLINED_FUNCTION_21_82(a1);
  strcpy((char *)v1, "mic.slash.fill");
  *(_BYTE *)(v1 + 15) = -18;
  *(_QWORD *)(v1 + 16) = 3;
  *(_QWORD *)(v1 + 24) = v2;
  *(_WORD *)(v1 + 32) = 0;
  *(_QWORD *)(v1 + 40) = 4;
  OUTLINED_FUNCTION_9_96();
  OUTLINED_FUNCTION_18();
}

void protocol witness for SymbolImageDescribing.symbolImageDescription.getter in conformance SymbolImageDescribers.DrawerDisc()
{
  SymbolImageDescribers.DrawerDisc.symbolImageDescription.getter();
}

void protocol witness for SymbolImageDescribing.symbolImageDescription.getter in conformance SymbolImageDescribers.LocalParticipantView()
{
  char *v0;

  SymbolImageDescribers.LocalParticipantView.symbolImageDescription.getter(*v0);
}

void SymbolImageDescribers.DrawerPill.symbolImageDescription.getter(char a1@<W0>, unint64_t *a2@<X8>)
{
  id v4;
  unint64_t v5;
  unint64_t v6;

  v4 = (id)*MEMORY[0x1E0DC4AB8];
  v5 = 0xD000000000000010;
  if ((a1 & 1) != 0)
    v5 = 0xD000000000000016;
  v6 = 0x80000001BD68D1F0;
  if ((a1 & 1) == 0)
    v6 = 0x80000001BD680550;
  *a2 = v5;
  a2[1] = v6;
  OUTLINED_FUNCTION_23_73((uint64_t)v4, 3);
  OUTLINED_FUNCTION_0();
}

void protocol witness for SymbolImageDescribing.symbolImageDescription.getter in conformance SymbolImageDescribers.DrawerPill(unint64_t *a1@<X8>)
{
  char *v1;

  SymbolImageDescribers.DrawerPill.symbolImageDescription.getter(*v1, a1);
}

void SymbolImageDescribers.DrawerTable.symbolImageDescription.getter(char a1)
{
  __asm { BR              X10 }
}

void sub_1BD46BDB8()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  v2 = (id)*MEMORY[0x1E0DC4B10];
  v3 = OUTLINED_FUNCTION_6_102();
  *(_QWORD *)v0 = 0x6B72616D78;
  *(_QWORD *)(v0 + 8) = 0xE500000000000000;
  *(_QWORD *)(v0 + 16) = v4;
  *(_QWORD *)(v0 + 24) = v1;
  *(_BYTE *)(v0 + 32) = v5;
  *(_BYTE *)(v0 + 33) = 0;
  *(_QWORD *)(v0 + 40) = 7;
  *(_BYTE *)(v0 + 48) = 0;
  *(_QWORD *)(v0 + 56) = v3;
  OUTLINED_FUNCTION_18();
}

void protocol witness for SymbolImageDescribing.symbolImageDescription.getter in conformance SymbolImageDescribers.DrawerTable()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  v0 = OUTLINED_FUNCTION_25_62();
  SymbolImageDescribers.DrawerTable.symbolImageDescription.getter(v0);
  OUTLINED_FUNCTION_17_74(v1, v2, v3, v4, v5, v6, v7, v8, v10, v11, v9, v12);
  OUTLINED_FUNCTION_22_78();
}

void SymbolImageDescribers.Captions.symbolImageDescription.getter(char a1@<W0>, unint64_t *a2@<X8>)
{
  unint64_t v3;
  id *v4;
  unint64_t v5;
  BOOL v6;
  unint64_t v7;
  id *v8;
  char v9;
  unint64_t v10;
  id v11;

  v3 = 0xD000000000000028;
  v4 = (id *)MEMORY[0x1E0DC4A98];
  if (a1)
  {
    v5 = 0x80000001BD68D280;
    v6 = a1 == 1;
    v7 = 0xEF656C626275622ELL;
    v8 = (id *)MEMORY[0x1E0DC4A98];
    if (a1 == 1)
      v8 = (id *)MEMORY[0x1E0DC4A98];
    else
      v3 = 0x736E6F6974706163;
  }
  else
  {
    v9 = static Platform.current.getter();
    v8 = (id *)MEMORY[0x1E0DC4A88];
    v6 = v9 == 2;
    if (v9 == 2)
      v8 = v4;
    else
      v3 = 0xD000000000000034;
    v7 = 0x80000001BD68D2B0;
    v5 = 0x80000001BD68D2F0;
  }
  if (v6)
    v10 = v5;
  else
    v10 = v7;
  v11 = OUTLINED_FUNCTION_21_82(v8);
  *a2 = v3;
  a2[1] = v10;
  OUTLINED_FUNCTION_2_118((uint64_t)v11, -1);
  OUTLINED_FUNCTION_18();
}

void protocol witness for SymbolImageDescribing.symbolImageDescription.getter in conformance SymbolImageDescribers.Captions()
{
  char v0;
  unint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;

  v0 = OUTLINED_FUNCTION_25_62();
  SymbolImageDescribers.Captions.symbolImageDescription.getter(v0, v1);
  OUTLINED_FUNCTION_17_74(v2, v3, v4, v5, v6, v7, v8, v9, v11, v12, v10, v13);
  OUTLINED_FUNCTION_22_78();
}

void protocol witness for SymbolImageDescribing.symbolImageDescription.getter in conformance SymbolImageDescribers.ConversationControls()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  v0 = OUTLINED_FUNCTION_25_62();
  SymbolImageDescribers.ConversationControls.symbolImageDescription.getter(v0);
  OUTLINED_FUNCTION_17_74(v1, v2, v3, v4, v5, v6, v7, v8, v10, v11, v9, v12);
  OUTLINED_FUNCTION_22_78();
}

void SymbolImageDescribers.ConversationControlsSubtitles.symbolImageDescription.getter(char a1)
{
  __asm { BR              X10 }
}

void sub_1BD46C210()
{
  _QWORD *v0;
  id v1;

  v1 = (id)*MEMORY[0x1E0DC4B10];
  *v0 = 0x6F6E2E636973756DLL;
  v0[1] = 0xEA00000000006574;
  OUTLINED_FUNCTION_2_118((uint64_t)v1, 1);
  OUTLINED_FUNCTION_18();
}

void protocol witness for SymbolImageDescribing.symbolImageDescription.getter in conformance SymbolImageDescribers.ConversationControlsSubtitles()
{
  char *v0;

  SymbolImageDescribers.ConversationControlsSubtitles.symbolImageDescription.getter(*v0);
}

id SymbolImageDescribers.ConversationActivityIcon.symbolImageDescription.getter@<X0>(unsigned __int8 a1@<W0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v5;

  v5 = *MEMORY[0x1E0DC4AE8];
  *a2 = SymbolImageDescribers.ConversationActivityIcon.symbolName.getter(a1);
  a2[1] = v3;
  return (id)OUTLINED_FUNCTION_2_118(v5, 3);
}

id protocol witness for SymbolImageDescribing.symbolImageDescription.getter in conformance SymbolImageDescribers.ConversationActivityIcon@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;

  return SymbolImageDescribers.ConversationActivityIcon.symbolImageDescription.getter(*v1, a1);
}

void SymbolImageDescribers.EphemeralAlerts.symbolImageDescription.getter(char a1)
{
  __asm { BR              X11 }
}

void sub_1BD46C3FC()
{
  _QWORD *v0;
  id v1;

  v1 = (id)*MEMORY[0x1E0DC4AD0];
  *v0 = 0x6C6C69662E63696DLL;
  v0[1] = 0xE800000000000000;
  OUTLINED_FUNCTION_2_118((uint64_t)v1, 1);
  OUTLINED_FUNCTION_18();
}

void protocol witness for SymbolImageDescribing.symbolImageDescription.getter in conformance SymbolImageDescribers.EphemeralAlerts()
{
  char *v0;

  SymbolImageDescribers.EphemeralAlerts.symbolImageDescription.getter(*v0);
}

id SymbolImageDescribers.BottomBar.symbolImageDescription.getter@<X0>(uint64_t a1@<X8>)
{
  void *v1;

  v1 = (void *)*MEMORY[0x1E0DC4B50];
  *(_QWORD *)a1 = 0x7269632E706F7473;
  *(_QWORD *)(a1 + 8) = 0xEB00000000656C63;
  *(_QWORD *)(a1 + 16) = 3;
  *(_QWORD *)(a1 + 24) = v1;
  *(_WORD *)(a1 + 32) = 0;
  return OUTLINED_FUNCTION_0_141(v1, a1);
}

id SymbolImageDescribers.Roster.symbolImageDescription.getter@<X0>(uint64_t a1@<X8>)
{
  void *v1;

  v1 = (void *)*MEMORY[0x1E0DC4B50];
  *(_QWORD *)a1 = 1937075312;
  *(_QWORD *)(a1 + 8) = 0xE400000000000000;
  *(_QWORD *)(a1 + 16) = 3;
  *(_QWORD *)(a1 + 24) = v1;
  *(_WORD *)(a1 + 32) = 0;
  return OUTLINED_FUNCTION_0_141(v1, a1);
}

void SymbolImageDescribers.ParticipantView.symbolImageDescription.getter()
{
  OUTLINED_FUNCTION_44_20();
  __asm { BR              X11 }
}

void sub_1BD46C550()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;

  OUTLINED_FUNCTION_44_20();
  v3 = OUTLINED_FUNCTION_21_82(MEMORY[0x1E0DC4A88]);
  *(_QWORD *)v0 = v2;
  *(_QWORD *)(v0 + 8) = v1;
  *(_QWORD *)(v0 + 16) = 3;
  *(_QWORD *)(v0 + 24) = v3;
  *(_WORD *)(v0 + 32) = 0;
  *(_QWORD *)(v0 + 40) = 6;
  OUTLINED_FUNCTION_9_96();
}

void protocol witness for SymbolImageDescribing.symbolImageDescription.getter in conformance SymbolImageDescribers.ParticipantView()
{
  SymbolImageDescribers.ParticipantView.symbolImageDescription.getter();
}

id SymbolImageDescribers.TVHandoff.symbolImageDescription.getter@<X0>(uint64_t a1@<X8>)
{
  void *v1;

  v1 = (void *)*MEMORY[0x1E0DC4B10];
  strcpy((char *)a1, "appletv.fill");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
  *(_QWORD *)(a1 + 16) = 2;
  *(_QWORD *)(a1 + 24) = v1;
  *(_WORD *)(a1 + 32) = 0;
  return OUTLINED_FUNCTION_0_141(v1, a1);
}

void SymbolImageDescribers.Recents.symbolImageDescription.getter(char a1@<W0>, _QWORD *a2@<X8>)
{
  id v4;
  unint64_t v5;

  v4 = (id)*MEMORY[0x1E0DC4B10];
  v5 = 0x80000001BD68D350;
  if ((a1 & 1) == 0)
    v5 = 0x80000001BD68D370;
  *a2 = 0xD00000000000001ALL;
  a2[1] = v5;
  OUTLINED_FUNCTION_23_73((uint64_t)v4, 2);
  OUTLINED_FUNCTION_0();
}

void protocol witness for SymbolImageDescribing.symbolImageDescription.getter in conformance SymbolImageDescribers.Recents(_QWORD *a1@<X8>)
{
  char *v1;

  SymbolImageDescribers.Recents.symbolImageDescription.getter(*v1, a1);
}

void SymbolImageDescribers.VideoMessaging.symbolImageDescription.getter(char a1@<W0>, uint64_t a2@<X8>)
{
  id *v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  id v7;

  if (a1)
  {
    if (a1 == 1)
      v3 = (id *)MEMORY[0x1E0DC4A88];
    else
      v3 = (id *)MEMORY[0x1E0DC4B50];
    if (a1 == 1)
      v4 = 0x69662E6F65646976;
    else
      v4 = 0xD000000000000011;
    if (a1 == 1)
      v5 = 0xEA00000000006C6CLL;
    else
      v5 = 0x80000001BD68D390;
    if (a1 == 1)
      v6 = 5;
    else
      v6 = 4;
  }
  else
  {
    v5 = 0xE90000000000006CLL;
    v4 = 0x6C69662E79616C70;
    v3 = (id *)MEMORY[0x1E0DC4AD0];
    v6 = 4;
  }
  v7 = OUTLINED_FUNCTION_21_82(v3);
  *(_QWORD *)a2 = v4;
  *(_QWORD *)(a2 + 8) = v5;
  *(_QWORD *)(a2 + 16) = 2;
  *(_QWORD *)(a2 + 24) = v7;
  *(_WORD *)(a2 + 32) = 0;
  *(_QWORD *)(a2 + 40) = v6;
  OUTLINED_FUNCTION_9_96();
  OUTLINED_FUNCTION_18();
}

void protocol witness for SymbolImageDescribing.symbolImageDescription.getter in conformance SymbolImageDescribers.VideoMessaging(uint64_t a1@<X8>)
{
  char *v1;

  SymbolImageDescribers.VideoMessaging.symbolImageDescription.getter(*v1, a1);
}

unint64_t type metadata accessor for UIColor()
{
  unint64_t result;

  result = lazy cache variable for type metadata for UIColor;
  if (!lazy cache variable for type metadata for UIColor)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for UIColor);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type SymbolImageDescription and conformance SymbolImageDescription()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SymbolImageDescription and conformance SymbolImageDescription;
  if (!lazy protocol witness table cache variable for type SymbolImageDescription and conformance SymbolImageDescription)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for SymbolImageDescription, &type metadata for SymbolImageDescription);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SymbolImageDescription and conformance SymbolImageDescription);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type SymbolImageDescribers.DrawerDisc and conformance SymbolImageDescribers.DrawerDisc()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SymbolImageDescribers.DrawerDisc and conformance SymbolImageDescribers.DrawerDisc;
  if (!lazy protocol witness table cache variable for type SymbolImageDescribers.DrawerDisc and conformance SymbolImageDescribers.DrawerDisc)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for SymbolImageDescribers.DrawerDisc, &type metadata for SymbolImageDescribers.DrawerDisc);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SymbolImageDescribers.DrawerDisc and conformance SymbolImageDescribers.DrawerDisc);
  }
  return result;
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in SymbolImageDescribers.DrawerDisc()
{
  return lazy protocol witness table accessor for type [SymbolImageDescribers.DrawerDisc] and conformance [A](&lazy protocol witness table cache variable for type [SymbolImageDescribers.DrawerDisc] and conformance [A], &demangling cache variable for type metadata for [SymbolImageDescribers.DrawerDisc]);
}

unint64_t lazy protocol witness table accessor for type SymbolImageDescribers.DrawerPill and conformance SymbolImageDescribers.DrawerPill()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SymbolImageDescribers.DrawerPill and conformance SymbolImageDescribers.DrawerPill;
  if (!lazy protocol witness table cache variable for type SymbolImageDescribers.DrawerPill and conformance SymbolImageDescribers.DrawerPill)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for SymbolImageDescribers.DrawerPill, &type metadata for SymbolImageDescribers.DrawerPill);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SymbolImageDescribers.DrawerPill and conformance SymbolImageDescribers.DrawerPill);
  }
  return result;
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in SymbolImageDescribers.DrawerPill()
{
  return lazy protocol witness table accessor for type [SymbolImageDescribers.DrawerDisc] and conformance [A](&lazy protocol witness table cache variable for type [SymbolImageDescribers.DrawerPill] and conformance [A], &demangling cache variable for type metadata for [SymbolImageDescribers.DrawerPill]);
}

unint64_t lazy protocol witness table accessor for type SymbolImageDescribers.DrawerTable and conformance SymbolImageDescribers.DrawerTable()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SymbolImageDescribers.DrawerTable and conformance SymbolImageDescribers.DrawerTable;
  if (!lazy protocol witness table cache variable for type SymbolImageDescribers.DrawerTable and conformance SymbolImageDescribers.DrawerTable)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for SymbolImageDescribers.DrawerTable, &type metadata for SymbolImageDescribers.DrawerTable);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SymbolImageDescribers.DrawerTable and conformance SymbolImageDescribers.DrawerTable);
  }
  return result;
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in SymbolImageDescribers.DrawerTable()
{
  return lazy protocol witness table accessor for type [SymbolImageDescribers.DrawerDisc] and conformance [A](&lazy protocol witness table cache variable for type [SymbolImageDescribers.DrawerTable] and conformance [A], &demangling cache variable for type metadata for [SymbolImageDescribers.DrawerTable]);
}

unint64_t lazy protocol witness table accessor for type SymbolImageDescribers.Captions and conformance SymbolImageDescribers.Captions()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SymbolImageDescribers.Captions and conformance SymbolImageDescribers.Captions;
  if (!lazy protocol witness table cache variable for type SymbolImageDescribers.Captions and conformance SymbolImageDescribers.Captions)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for SymbolImageDescribers.Captions, &type metadata for SymbolImageDescribers.Captions);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SymbolImageDescribers.Captions and conformance SymbolImageDescribers.Captions);
  }
  return result;
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in SymbolImageDescribers.Captions()
{
  return lazy protocol witness table accessor for type [SymbolImageDescribers.DrawerDisc] and conformance [A](&lazy protocol witness table cache variable for type [SymbolImageDescribers.Captions] and conformance [A], &demangling cache variable for type metadata for [SymbolImageDescribers.Captions]);
}

unint64_t lazy protocol witness table accessor for type SymbolImageDescribers.ConversationControls and conformance SymbolImageDescribers.ConversationControls()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SymbolImageDescribers.ConversationControls and conformance SymbolImageDescribers.ConversationControls;
  if (!lazy protocol witness table cache variable for type SymbolImageDescribers.ConversationControls and conformance SymbolImageDescribers.ConversationControls)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for SymbolImageDescribers.ConversationControls, &type metadata for SymbolImageDescribers.ConversationControls);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SymbolImageDescribers.ConversationControls and conformance SymbolImageDescribers.ConversationControls);
  }
  return result;
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in SymbolImageDescribers.ConversationControls()
{
  return lazy protocol witness table accessor for type [SymbolImageDescribers.DrawerDisc] and conformance [A](&lazy protocol witness table cache variable for type [SymbolImageDescribers.ConversationControls] and conformance [A], &demangling cache variable for type metadata for [SymbolImageDescribers.ConversationControls]);
}

unint64_t lazy protocol witness table accessor for type SymbolImageDescribers.ConversationControlsSubtitles and conformance SymbolImageDescribers.ConversationControlsSubtitles()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SymbolImageDescribers.ConversationControlsSubtitles and conformance SymbolImageDescribers.ConversationControlsSubtitles;
  if (!lazy protocol witness table cache variable for type SymbolImageDescribers.ConversationControlsSubtitles and conformance SymbolImageDescribers.ConversationControlsSubtitles)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for SymbolImageDescribers.ConversationControlsSubtitles, &type metadata for SymbolImageDescribers.ConversationControlsSubtitles);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SymbolImageDescribers.ConversationControlsSubtitles and conformance SymbolImageDescribers.ConversationControlsSubtitles);
  }
  return result;
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in SymbolImageDescribers.ConversationControlsSubtitles()
{
  return lazy protocol witness table accessor for type [SymbolImageDescribers.DrawerDisc] and conformance [A](&lazy protocol witness table cache variable for type [SymbolImageDescribers.ConversationControlsSubtitles] and conformance [A], &demangling cache variable for type metadata for [SymbolImageDescribers.ConversationControlsSubtitles]);
}

unint64_t lazy protocol witness table accessor for type SymbolImageDescribers.ConversationActivityIcon and conformance SymbolImageDescribers.ConversationActivityIcon()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SymbolImageDescribers.ConversationActivityIcon and conformance SymbolImageDescribers.ConversationActivityIcon;
  if (!lazy protocol witness table cache variable for type SymbolImageDescribers.ConversationActivityIcon and conformance SymbolImageDescribers.ConversationActivityIcon)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for SymbolImageDescribers.ConversationActivityIcon, &type metadata for SymbolImageDescribers.ConversationActivityIcon);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SymbolImageDescribers.ConversationActivityIcon and conformance SymbolImageDescribers.ConversationActivityIcon);
  }
  return result;
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in SymbolImageDescribers.ConversationActivityIcon()
{
  return lazy protocol witness table accessor for type [SymbolImageDescribers.DrawerDisc] and conformance [A](&lazy protocol witness table cache variable for type [SymbolImageDescribers.ConversationActivityIcon] and conformance [A], &demangling cache variable for type metadata for [SymbolImageDescribers.ConversationActivityIcon]);
}

unint64_t lazy protocol witness table accessor for type SymbolImageDescribers.EphemeralAlerts and conformance SymbolImageDescribers.EphemeralAlerts()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SymbolImageDescribers.EphemeralAlerts and conformance SymbolImageDescribers.EphemeralAlerts;
  if (!lazy protocol witness table cache variable for type SymbolImageDescribers.EphemeralAlerts and conformance SymbolImageDescribers.EphemeralAlerts)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for SymbolImageDescribers.EphemeralAlerts, &type metadata for SymbolImageDescribers.EphemeralAlerts);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SymbolImageDescribers.EphemeralAlerts and conformance SymbolImageDescribers.EphemeralAlerts);
  }
  return result;
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in SymbolImageDescribers.EphemeralAlerts()
{
  return lazy protocol witness table accessor for type [SymbolImageDescribers.DrawerDisc] and conformance [A](&lazy protocol witness table cache variable for type [SymbolImageDescribers.EphemeralAlerts] and conformance [A], &demangling cache variable for type metadata for [SymbolImageDescribers.EphemeralAlerts]);
}

unint64_t lazy protocol witness table accessor for type SymbolImageDescribers.BottomBar and conformance SymbolImageDescribers.BottomBar()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SymbolImageDescribers.BottomBar and conformance SymbolImageDescribers.BottomBar;
  if (!lazy protocol witness table cache variable for type SymbolImageDescribers.BottomBar and conformance SymbolImageDescribers.BottomBar)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for SymbolImageDescribers.BottomBar, &type metadata for SymbolImageDescribers.BottomBar);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SymbolImageDescribers.BottomBar and conformance SymbolImageDescribers.BottomBar);
  }
  return result;
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in SymbolImageDescribers.BottomBar()
{
  return lazy protocol witness table accessor for type [SymbolImageDescribers.DrawerDisc] and conformance [A](&lazy protocol witness table cache variable for type [SymbolImageDescribers.BottomBar] and conformance [A], &demangling cache variable for type metadata for [SymbolImageDescribers.BottomBar]);
}

unint64_t lazy protocol witness table accessor for type SymbolImageDescribers.Roster and conformance SymbolImageDescribers.Roster()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SymbolImageDescribers.Roster and conformance SymbolImageDescribers.Roster;
  if (!lazy protocol witness table cache variable for type SymbolImageDescribers.Roster and conformance SymbolImageDescribers.Roster)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for SymbolImageDescribers.Roster, &type metadata for SymbolImageDescribers.Roster);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SymbolImageDescribers.Roster and conformance SymbolImageDescribers.Roster);
  }
  return result;
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in SymbolImageDescribers.Roster()
{
  return lazy protocol witness table accessor for type [SymbolImageDescribers.DrawerDisc] and conformance [A](&lazy protocol witness table cache variable for type [SymbolImageDescribers.Roster] and conformance [A], &demangling cache variable for type metadata for [SymbolImageDescribers.Roster]);
}

unint64_t lazy protocol witness table accessor for type SymbolImageDescribers.LocalParticipantView and conformance SymbolImageDescribers.LocalParticipantView()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SymbolImageDescribers.LocalParticipantView and conformance SymbolImageDescribers.LocalParticipantView;
  if (!lazy protocol witness table cache variable for type SymbolImageDescribers.LocalParticipantView and conformance SymbolImageDescribers.LocalParticipantView)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for SymbolImageDescribers.LocalParticipantView, &type metadata for SymbolImageDescribers.LocalParticipantView);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SymbolImageDescribers.LocalParticipantView and conformance SymbolImageDescribers.LocalParticipantView);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SymbolImageDescribers.LocalParticipantView and conformance SymbolImageDescribers.LocalParticipantView;
  if (!lazy protocol witness table cache variable for type SymbolImageDescribers.LocalParticipantView and conformance SymbolImageDescribers.LocalParticipantView)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for SymbolImageDescribers.LocalParticipantView, &type metadata for SymbolImageDescribers.LocalParticipantView);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SymbolImageDescribers.LocalParticipantView and conformance SymbolImageDescribers.LocalParticipantView);
  }
  return result;
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in SymbolImageDescribers.LocalParticipantView()
{
  return lazy protocol witness table accessor for type [SymbolImageDescribers.DrawerDisc] and conformance [A](&lazy protocol witness table cache variable for type [SymbolImageDescribers.LocalParticipantView] and conformance [A], &demangling cache variable for type metadata for [SymbolImageDescribers.LocalParticipantView]);
}

unint64_t lazy protocol witness table accessor for type SymbolImageDescribers.ParticipantView and conformance SymbolImageDescribers.ParticipantView()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SymbolImageDescribers.ParticipantView and conformance SymbolImageDescribers.ParticipantView;
  if (!lazy protocol witness table cache variable for type SymbolImageDescribers.ParticipantView and conformance SymbolImageDescribers.ParticipantView)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for SymbolImageDescribers.ParticipantView, &type metadata for SymbolImageDescribers.ParticipantView);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SymbolImageDescribers.ParticipantView and conformance SymbolImageDescribers.ParticipantView);
  }
  return result;
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in SymbolImageDescribers.ParticipantView()
{
  return lazy protocol witness table accessor for type [SymbolImageDescribers.DrawerDisc] and conformance [A](&lazy protocol witness table cache variable for type [SymbolImageDescribers.ParticipantView] and conformance [A], &demangling cache variable for type metadata for [SymbolImageDescribers.ParticipantView]);
}

unint64_t lazy protocol witness table accessor for type SymbolImageDescribers.TVHandoff and conformance SymbolImageDescribers.TVHandoff()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SymbolImageDescribers.TVHandoff and conformance SymbolImageDescribers.TVHandoff;
  if (!lazy protocol witness table cache variable for type SymbolImageDescribers.TVHandoff and conformance SymbolImageDescribers.TVHandoff)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for SymbolImageDescribers.TVHandoff, &type metadata for SymbolImageDescribers.TVHandoff);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SymbolImageDescribers.TVHandoff and conformance SymbolImageDescribers.TVHandoff);
  }
  return result;
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in SymbolImageDescribers.TVHandoff()
{
  return lazy protocol witness table accessor for type [SymbolImageDescribers.DrawerDisc] and conformance [A](&lazy protocol witness table cache variable for type [SymbolImageDescribers.TVHandoff] and conformance [A], &demangling cache variable for type metadata for [SymbolImageDescribers.TVHandoff]);
}

uint64_t lazy protocol witness table accessor for type [SymbolImageDescribers.DrawerDisc] and conformance [A](unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0DEAF50], v4);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type SymbolImageDescribers.VideoMessaging and conformance SymbolImageDescribers.VideoMessaging()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SymbolImageDescribers.VideoMessaging and conformance SymbolImageDescribers.VideoMessaging;
  if (!lazy protocol witness table cache variable for type SymbolImageDescribers.VideoMessaging and conformance SymbolImageDescribers.VideoMessaging)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for SymbolImageDescribers.VideoMessaging, &type metadata for SymbolImageDescribers.VideoMessaging);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SymbolImageDescribers.VideoMessaging and conformance SymbolImageDescribers.VideoMessaging);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type SymbolImageDescribers.Recents and conformance SymbolImageDescribers.Recents()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SymbolImageDescribers.Recents and conformance SymbolImageDescribers.Recents;
  if (!lazy protocol witness table cache variable for type SymbolImageDescribers.Recents and conformance SymbolImageDescribers.Recents)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for SymbolImageDescribers.Recents, &type metadata for SymbolImageDescribers.Recents);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SymbolImageDescribers.Recents and conformance SymbolImageDescribers.Recents);
  }
  return result;
}

void destroy for SymbolImageDescription(uint64_t a1)
{
  swift_bridgeObjectRelease();

}

uint64_t initializeWithCopy for SymbolImageDescription(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  id v7;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v5 = *(void **)(a2 + 56);
  *(_QWORD *)(a1 + 56) = v5;
  swift_bridgeObjectRetain();
  v6 = v4;
  v7 = v5;
  return a1;
}

uint64_t assignWithCopy for SymbolImageDescription(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(void **)(a2 + 24);
  v5 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v4;
  v6 = v4;

  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  v7 = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v7;
  v8 = *(void **)(a1 + 56);
  v9 = *(void **)(a2 + 56);
  *(_QWORD *)(a1 + 56) = v9;
  v10 = v9;

  return a1;
}

uint64_t assignWithTake for SymbolImageDescription(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;

  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v7 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);

  return a1;
}

void type metadata accessor for SymbolImageDescription()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for SymbolImageDescribers()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for SymbolImageDescribers.DrawerDisc()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for SymbolImageDescribers.DrawerPill()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for SymbolImageDescribers.DrawerTable()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for SymbolImageDescribers.Captions()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t getEnumTagSinglePayload for SymbolImageDescribers.ConversationControls(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xDD)
  {
    if (a2 + 35 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 35) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 36;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x24;
  v5 = v6 - 36;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for SymbolImageDescribers.ConversationControls(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 35 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 35) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xDD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xDC)
    return ((uint64_t (*)(void))((char *)&loc_1BD46D0D4 + 4 * byte_1BD66127F[v4]))();
  *a1 = a2 + 35;
  return ((uint64_t (*)(void))((char *)sub_1BD46D108 + 4 * byte_1BD66127A[v4]))();
}

uint64_t sub_1BD46D108(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD46D110(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD46D118);
  return result;
}

uint64_t sub_1BD46D124(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD46D12CLL);
  *(_BYTE *)result = a2 + 35;
  return result;
}

uint64_t sub_1BD46D130(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD46D138(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for SymbolImageDescribers.ConversationControls()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for SymbolImageDescribers.ConversationControlsSubtitles()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for SymbolImageDescribers.ConversationActivityIcon()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t getEnumTagSinglePayload for SymbolImageDescribers.DrawerDisc(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return OUTLINED_FUNCTION_30_64(-1);
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return OUTLINED_FUNCTION_30_64((*a1 | (v4 << 8)) - 6);
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return OUTLINED_FUNCTION_30_64((*a1 | (v4 << 8)) - 6);
    }
    v4 = a1[1];
    if (a1[1])
      return OUTLINED_FUNCTION_30_64((*a1 | (v4 << 8)) - 6);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return OUTLINED_FUNCTION_30_64(v8);
}

uint64_t storeEnumTagSinglePayload for SymbolImageDescribers.DrawerDisc(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1BD46D238 + 4 * byte_1BD661289[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)j__OUTLINED_FUNCTION_29_65 + 4 * byte_1BD661284[v4]))();
}

uint64_t sub_1BD46D270(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD46D278);
  return result;
}

_BYTE *sub_1BD46D280(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD46D288);
  return OUTLINED_FUNCTION_28_63((_BYTE *)a1, a2 + 5);
}

void type metadata accessor for SymbolImageDescribers.EphemeralAlerts()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for SymbolImageDescribers.BottomBar()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for SymbolImageDescribers.Roster()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t getEnumTagSinglePayload for SymbolImageDescribers.DrawerTable(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return OUTLINED_FUNCTION_30_64(-1);
  if (a2 < 0xF3)
    goto LABEL_17;
  if (a2 + 13 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 13) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return OUTLINED_FUNCTION_30_64((*a1 | (v4 << 8)) - 14);
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return OUTLINED_FUNCTION_30_64((*a1 | (v4 << 8)) - 14);
    }
    v4 = a1[1];
    if (a1[1])
      return OUTLINED_FUNCTION_30_64((*a1 | (v4 << 8)) - 14);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xE;
  v8 = v6 - 14;
  if (!v7)
    v8 = -1;
  return OUTLINED_FUNCTION_30_64(v8);
}

uint64_t storeEnumTagSinglePayload for SymbolImageDescribers.DrawerTable(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 13 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 13) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF3)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF2)
    return ((uint64_t (*)(void))((char *)&loc_1BD46D390 + 4 * byte_1BD661293[v4]))();
  *a1 = a2 + 13;
  return ((uint64_t (*)(void))((char *)j__OUTLINED_FUNCTION_29_65_0 + 4 * byte_1BD66128E[v4]))();
}

uint64_t sub_1BD46D3C8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD46D3D0);
  return result;
}

_BYTE *sub_1BD46D3D8(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD46D3E0);
  return OUTLINED_FUNCTION_28_63((_BYTE *)a1, a2 + 13);
}

void type metadata accessor for SymbolImageDescribers.LocalParticipantView()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t storeEnumTagSinglePayload for SymbolImageDescribers.ParticipantView(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BD46D448 + 4 * byte_1BD66129D[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BD46D47C + 4 * byte_1BD661298[v4]))();
}

uint64_t sub_1BD46D47C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD46D484(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD46D48CLL);
  return result;
}

uint64_t sub_1BD46D498(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD46D4A0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BD46D4A4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD46D4AC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for SymbolImageDescribers.ParticipantView()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t storeEnumTagSinglePayload for SymbolImageDescribers.BottomBar(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BD46D504 + 4 * byte_1BD6612A2[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BD46D524 + 4 * byte_1BD6612A7[v4]))();
}

_BYTE *sub_1BD46D504(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BD46D524(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BD46D52C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BD46D534(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BD46D53C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BD46D544(_DWORD *result)
{
  *result = 0;
  return result;
}

void type metadata accessor for SymbolImageDescribers.TVHandoff()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t getEnumTagSinglePayload for SymbolImageDescribers.Captions(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return OUTLINED_FUNCTION_30_64(-1);
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return OUTLINED_FUNCTION_30_64((*a1 | (v4 << 8)) - 3);
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return OUTLINED_FUNCTION_30_64((*a1 | (v4 << 8)) - 3);
    }
    v4 = a1[1];
    if (a1[1])
      return OUTLINED_FUNCTION_30_64((*a1 | (v4 << 8)) - 3);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return OUTLINED_FUNCTION_30_64(v8);
}

uint64_t storeEnumTagSinglePayload for SymbolImageDescribers.Captions(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BD46D62C + 4 * byte_1BD6612B1[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)j__OUTLINED_FUNCTION_29_65_1 + 4 * byte_1BD6612AC[v4]))();
}

uint64_t sub_1BD46D664(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD46D66CLL);
  return result;
}

_BYTE *sub_1BD46D674(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD46D67CLL);
  return OUTLINED_FUNCTION_28_63((_BYTE *)a1, a2 + 2);
}

void type metadata accessor for SymbolImageDescribers.VideoMessaging()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t getEnumTagSinglePayload for SymbolImageDescribers.DrawerPill(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return OUTLINED_FUNCTION_30_64(-1);
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return OUTLINED_FUNCTION_30_64((*a1 | (v4 << 8)) - 2);
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return OUTLINED_FUNCTION_30_64((*a1 | (v4 << 8)) - 2);
    }
    v4 = a1[1];
    if (a1[1])
      return OUTLINED_FUNCTION_30_64((*a1 | (v4 << 8)) - 2);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return OUTLINED_FUNCTION_30_64(v8);
}

uint64_t storeEnumTagSinglePayload for SymbolImageDescribers.DrawerPill(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BD46D768 + 4 * byte_1BD6612BB[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)j__OUTLINED_FUNCTION_29_65_2 + 4 * byte_1BD6612B6[v4]))();
}

uint64_t sub_1BD46D7A0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD46D7A8);
  return result;
}

_BYTE *sub_1BD46D7B0(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD46D7B8);
  return OUTLINED_FUNCTION_28_63((_BYTE *)a1, a2 + 1);
}

void type metadata accessor for SymbolImageDescribers.Recents()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t dispatch thunk of static SymbolImageProviding.symbolImage(for:)(__int128 *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t (*v10)(__int128 *);
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v19;

  v3 = *((_QWORD *)a1 + 2);
  v4 = *((_QWORD *)a1 + 3);
  v5 = *((_BYTE *)a1 + 32);
  v6 = *((_BYTE *)a1 + 33);
  v7 = *((_QWORD *)a1 + 5);
  v8 = *((_BYTE *)a1 + 48);
  v9 = *((_QWORD *)a1 + 7);
  v10 = *(uint64_t (**)(__int128 *))(a3 + 8);
  v12 = *a1;
  v13 = v3;
  v14 = v4;
  v15 = v5;
  v16 = v6;
  v17 = v7;
  v18 = v8;
  v19 = v9;
  return v10(&v12);
}

uint64_t dispatch thunk of SymbolImageDescribing.symbolImageDescription.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

void ClarityUIContact.displayName.getter()
{
  CNContact.clarityUIDisplayName.getter();
  OUTLINED_FUNCTION_0();
}

id ClarityUIContact.avatar.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  void *v2;
  id v3;
  id v5;

  v2 = *(void **)v1;
  v5 = *(id *)(v1 + 8);
  *a1 = *(_QWORD *)v1;
  a1[1] = v5;
  v3 = v2;
  return v5;
}

void ClarityUIContact.id.getter()
{
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_0();
}

void ClarityUIContact.callHistoryPredicate.getter()
{
  void **v0;
  void *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  Class isa;
  id v32;
  uint64_t v33;

  v1 = *v0;
  v32 = *v0;
  v33 = MEMORY[0x1E0DEE9D8];
  v2 = (uint64_t *)objc_msgSend(v1, sel_tuHandlesForPhoneNumbers);
  OUTLINED_FUNCTION_59((uint64_t)v2, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if ((unint64_t)v3 >> 62)
  {
    if (v3 < 0)
      v2 = (uint64_t *)v3;
    else
      v2 = (uint64_t *)(v3 & 0xFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
    v4 = OUTLINED_FUNCTION_25_3();
    swift_bridgeObjectRelease();
    if (!v4)
      goto LABEL_16;
  }
  else
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v4)
      goto LABEL_16;
  }
  if (v4 < 1)
  {
    __break(1u);
    goto LABEL_33;
  }
  v5 = 0;
  do
  {
    if ((v3 & 0xC000000000000001) != 0)
      v6 = (id)MEMORY[0x1C3B73D18](v5, v3);
    else
      v6 = *(id *)(v3 + 8 * v5 + 32);
    v7 = v6;
    v8 = objc_msgSend(v6, sel_value);
    v9 = OUTLINED_FUNCTION_75_2();
    v11 = v10;

    v12 = outlined bridged method (pb) of @objc TUHandle.normalizedValue.getter(v7, (SEL *)&selRef_normalizedValue);
    v14 = v13;
    v15 = objc_allocWithZone(MEMORY[0x1E0D0CE60]);
    @nonobjc CHHandle.init(type:value:normalizedValue:)(2, v9, v11, v12, v14);
    MEMORY[0x1C3B7301C]();
    if (*(_QWORD *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      OUTLINED_FUNCTION_1_2();
    ++v5;
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    v2 = &v33;
    specialized Array._endMutation()();

  }
  while (v4 != v5);
LABEL_16:
  swift_bridgeObjectRelease();
  v16 = (uint64_t *)objc_msgSend(v32, sel_tuHandlesForEmailAddresses);
  v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!((unint64_t)v17 >> 62))
  {
    v18 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v18)
      goto LABEL_18;
LABEL_31:
    OUTLINED_FUNCTION_13_3();
    v30 = (void *)objc_opt_self();
    OUTLINED_FUNCTION_59((uint64_t)v30, (unint64_t *)&lazy cache variable for type metadata for CHHandle);
    isa = Array._bridgeToObjectiveC()().super.isa;
    OUTLINED_FUNCTION_27();
    objc_msgSend(v30, sel_predicateForCallsWithAnyRemoteParticipantHandles_, isa);

    return;
  }
  if (v17 < 0)
    v16 = (uint64_t *)v17;
  else
    v16 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFF8);
  OUTLINED_FUNCTION_124();
  v18 = OUTLINED_FUNCTION_25_3();
  OUTLINED_FUNCTION_13_3();
  if (!v18)
    goto LABEL_31;
LABEL_18:
  if (v18 >= 1)
  {
    v19 = 0;
    do
    {
      if ((v17 & 0xC000000000000001) != 0)
        v20 = (id)MEMORY[0x1C3B73D18](v19, v17);
      else
        v20 = *(id *)(v17 + 8 * v19 + 32);
      v21 = v20;
      v22 = objc_msgSend(v20, sel_value);
      v23 = OUTLINED_FUNCTION_75_2();
      v25 = v24;

      v26 = outlined bridged method (pb) of @objc TUHandle.normalizedValue.getter(v21, (SEL *)&selRef_normalizedValue);
      v28 = v27;
      v29 = objc_allocWithZone(MEMORY[0x1E0D0CE60]);
      @nonobjc CHHandle.init(type:value:normalizedValue:)(3, v23, v25, v26, v28);
      MEMORY[0x1C3B7301C]();
      if (*(_QWORD *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        OUTLINED_FUNCTION_1_2();
      ++v19;
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      v16 = &v33;
      specialized Array._endMutation()();

    }
    while (v18 != v19);
    goto LABEL_31;
  }
LABEL_33:
  __break(1u);
}

void static ClarityUIContact.requiredDescriptors(for:)(uint64_t a1)
{
  unint64_t v2;
  unint64_t v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;

  OUTLINED_FUNCTION_59(a1, (unint64_t *)&lazy cache variable for type metadata for CNContact);
  static CNContact.requiredDescriptorsForClarityUIDisplayName.getter();
  v3 = v2;
  v4 = objc_msgSend((id)objc_opt_self(), sel_settingsWithContactStore_, a1);
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97470]), sel_initWithSettings_, v4);

  v6 = objc_msgSend(v5, sel_descriptorForRequiredKeys);
  v7 = (void *)*MEMORY[0x1E0C96708];
  v8 = (void *)*MEMORY[0x1E0C96688];
  v9 = (void *)*MEMORY[0x1E0C96728];
  if (v3 >> 62)
  {
    v14 = v7;
    v15 = v8;
    v16 = v9;
    OUTLINED_FUNCTION_124();
    v10 = OUTLINED_FUNCTION_25_3();
  }
  else
  {
    v10 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    v11 = v7;
    v12 = v8;
    v13 = v9;
    OUTLINED_FUNCTION_124();
  }
  if (!__OFADD__(v10, 4))
  {
    specialized Array._reserveCapacityImpl(minimumCapacity:growForAppend:)(v10 + 4, 1);
    OUTLINED_FUNCTION_26_0();
    swift_unknownObjectRetain();
    OUTLINED_FUNCTION_36_0();
  }
  __break(1u);
  JUMPOUT(0x1BD46DEB8);
}

ConversationKit::ClarityUIContact __swiftcall ClarityUIContact.init(cnContact:contactStore:)(CNContact cnContact, CNContactStore contactStore)
{
  objc_class **v2;
  objc_class **v4;
  objc_class *v5;
  objc_class *v6;
  id v7;
  uint64_t v8;
  objc_class *v9;
  objc_class *v10;
  objc_class *v11;
  objc_class *v12;
  uint64_t v13;
  void *v14;
  ConversationKit::ClarityUIContact result;

  v4 = v2;
  v5 = cnContact.super.isa;
  v6 = contactStore.super.isa;
  v7 = -[objc_class identifier](v5, sel_identifier);
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v10 = v9;

  *v4 = v5;
  v4[1] = v6;
  v4[2] = (objc_class *)v8;
  v4[3] = v10;
  result.id._object = v14;
  result.id._countAndFlagsBits = v13;
  result.contactStore.super.isa = v12;
  result.cnContact.super.isa = v11;
  return result;
}

uint64_t static ClarityUIContact.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24))
    return 1;
  else
    return _stringCompareWithSmolCheck(_:_:expecting:)();
}

void static CNContact.requiredDescriptorsForClarityUIDisplayName.getter()
{
  uint64_t v0;
  id v1;
  void *v2;
  void *v3;
  void *v4;
  void **v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1BD64C5C0;
  v1 = objc_msgSend((id)objc_opt_self(), sel_descriptorForRequiredKeysForStyle_, 0);
  v2 = (void *)*MEMORY[0x1E0C966D0];
  *(_QWORD *)(v0 + 32) = v1;
  *(_QWORD *)(v0 + 40) = v2;
  v3 = (void *)*MEMORY[0x1E0C96780];
  v4 = (void *)*MEMORY[0x1E0C966C0];
  v5 = (void **)MEMORY[0x1E0C967A0];
  *(_QWORD *)(v0 + 48) = *MEMORY[0x1E0C96780];
  *(_QWORD *)(v0 + 56) = v4;
  v6 = *v5;
  v7 = (void *)*MEMORY[0x1E0C966A8];
  *(_QWORD *)(v0 + 64) = *v5;
  *(_QWORD *)(v0 + 72) = v7;
  v8 = (void *)*MEMORY[0x1E0C967C0];
  *(_QWORD *)(v0 + 80) = *MEMORY[0x1E0C967C0];
  OUTLINED_FUNCTION_26_0();
  v9 = v2;
  v10 = v3;
  v11 = v4;
  v12 = v6;
  v13 = v7;
  v14 = v8;
  OUTLINED_FUNCTION_6_2();
}

uint64_t CNContact.clarityUIDisplayName.getter()
{
  void *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v2 = v0;
  v3 = type metadata accessor for CharacterSet();
  MEMORY[0x1E0C80A78](v3);
  v4 = objc_msgSend(v0, sel_nickname);
  OUTLINED_FUNCTION_75_2();
  OUTLINED_FUNCTION_15_93();
  OUTLINED_FUNCTION_17_75();
  static CharacterSet.whitespacesAndNewlines.getter();
  lazy protocol witness table accessor for type String and conformance String();
  v5 = OUTLINED_FUNCTION_8_104();
  v7 = v6;
  OUTLINED_FUNCTION_19_71();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v8 = HIBYTE(v7) & 0xF;
  if ((v7 & 0x2000000000000000) == 0)
    v8 = v5 & 0xFFFFFFFFFFFFLL;
  if (!v8)
  {
    swift_bridgeObjectRelease();
    v1 = CNContact.shortName.getter();
  }
  OUTLINED_FUNCTION_17_75();
  static CharacterSet.whitespacesAndNewlines.getter();
  v9 = OUTLINED_FUNCTION_8_104();
  v11 = v10;
  OUTLINED_FUNCTION_19_71();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v12 = HIBYTE(v11) & 0xF;
  if ((v11 & 0x2000000000000000) == 0)
    v12 = v9 & 0xFFFFFFFFFFFFLL;
  if (!v12)
  {
    swift_bridgeObjectRelease();
    if (objc_msgSend((id)objc_opt_self(), sel_stringFromContact_style_, v2, 0))
    {
      OUTLINED_FUNCTION_75_2();
      OUTLINED_FUNCTION_15_93();
    }
    else
    {
      return CNContact.fallbackDisplayName.getter();
    }
  }
  return v1;
}

uint64_t CNContact.shortName.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  Class isa;
  id v11;
  uint64_t v12;
  uint64_t v14;

  v1 = v0;
  v2 = type metadata accessor for PersonNameComponents();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  PersonNameComponents.init()();
  v6 = objc_msgSend(v1, sel_givenName);
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  PersonNameComponents.givenName.setter();
  v7 = objc_msgSend(v1, sel_middleName);
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  PersonNameComponents.middleName.setter();
  v8 = objc_msgSend(v1, sel_familyName);
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  PersonNameComponents.familyName.setter();
  v9 = (void *)objc_opt_self();
  isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
  v11 = objc_msgSend(v9, sel_localizedStringFromPersonNameComponents_style_options_, isa, 1, 0);

  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v12;
}

uint64_t CNContact.fallbackDisplayName.getter()
{
  void *v0;
  id v1;
  unint64_t v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  unint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;

  v1 = objc_msgSend(v0, sel_tuHandlesForEmailAddresses);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
  v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v2 >> 62))
  {
    if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_3;
LABEL_8:
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  v7 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v7)
    goto LABEL_8;
LABEL_3:
  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v2 & 0xC000000000000001) == 0, v2);
  if ((v2 & 0xC000000000000001) != 0)
    v3 = (id)MEMORY[0x1C3B73D18](0, v2);
  else
    v3 = *(id *)(v2 + 32);
  v4 = v3;
  swift_bridgeObjectRelease();
  outlined bridged method (ob) of @objc TUHandle.normalizedValue.getter(v4);
  if (v6)
    return v5;
LABEL_9:
  v8 = objc_msgSend(v0, sel_tuHandlesForPhoneNumbers);
  v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v9 >> 62))
  {
    if (*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_11;
LABEL_17:
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  swift_bridgeObjectRetain();
  v14 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v14)
    goto LABEL_17;
LABEL_11:
  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v9 & 0xC000000000000001) == 0, v9);
  if ((v9 & 0xC000000000000001) != 0)
    v10 = (id)MEMORY[0x1C3B73D18](0, v9);
  else
    v10 = *(id *)(v9 + 32);
  v11 = v10;
  swift_bridgeObjectRelease();
  outlined bridged method (ob) of @objc TUHandle.normalizedValue.getter(v11);
  if (v12)
    return v5;
LABEL_18:
  v15 = objc_msgSend(v0, sel_handles);
  v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (*(_QWORD *)(v16 + 16))
  {
    v13 = *(_QWORD *)(v16 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v13;
}

id ClarityUIContact.cnContact.getter()
{
  id *v0;

  return *v0;
}

id ClarityUIContact.contactStore.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 8);
}

void ClarityUIContact.contactStore.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = a1;
}

uint64_t (*ClarityUIContact.contactStore.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ClarityUIContact.fullImage.getter()
{
  void **v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  void *v6;
  void *v7;
  CGImage *v8;
  CGImage *v9;
  CGImageRef v10;
  CGImageRef v11;
  uint64_t v12;
  CGRect v14;

  v1 = *v0;
  v2 = outlined bridged method (pb) of @objc CNContact.imageData.getter(*v0);
  if (v3 >> 60 == 15)
    return 0;
  v4 = v2;
  v5 = v3;
  OUTLINED_FUNCTION_59(v2, (unint64_t *)&lazy cache variable for type metadata for UIImage);
  outlined copy of Data._Representation(v4, v5);
  UIImage.__allocating_init(data:)(v4, v5);
  if (!v6)
  {
LABEL_8:
    OUTLINED_FUNCTION_16_85();
    return 0;
  }
  v7 = v6;
  v8 = (CGImage *)objc_msgSend(v6, sel_CGImage);
  if (!v8)
  {

    goto LABEL_8;
  }
  v9 = v8;
  objc_msgSend(v1, sel_cropRect);
  v10 = CGImageCreateWithImageInRect(v9, v14);
  if (!v10)
  {

    goto LABEL_8;
  }
  v11 = v10;
  objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3870]), sel_initWithCGImage_, v10);
  v12 = Image.init(uiImage:)();

  OUTLINED_FUNCTION_16_85();
  return v12;
}

BOOL ClarityUIContact.preferredContentMode.getter()
{
  void **v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;

  v1 = outlined bridged method (pb) of @objc TUHandle.normalizedValue.getter(*v0, (SEL *)&selRef_imageType);
  v3 = v2;
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (!v3)
  {
    OUTLINED_FUNCTION_13_3();
    return 0;
  }
  if (v1 != v4 || v3 != v5)
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
    OUTLINED_FUNCTION_27();
    OUTLINED_FUNCTION_13_3();
    return (v7 & 1) != 0;
  }
  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_13_3();
  return 1;
}

void protocol witness for Identifiable.id.getter in conformance ClarityUIContact(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  ClarityUIContact.id.getter();
  *a1 = v2;
  a1[1] = v3;
}

uint64_t ClarityUIContact.hash(into:)()
{
  OUTLINED_FUNCTION_5_0();
  String.hash(into:)();
  return swift_bridgeObjectRelease();
}

Swift::Int ClarityUIContact.hashValue.getter()
{
  Hasher.init(_seed:)();
  OUTLINED_FUNCTION_5_0();
  String.hash(into:)();
  OUTLINED_FUNCTION_27();
  return Hasher._finalize()();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance ClarityUIContact()
{
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

id @nonobjc CHHandle.init(type:value:normalizedValue:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  void *v9;
  void *v10;
  id v11;

  v9 = (void *)MEMORY[0x1C3B72E00](a2, a3);
  swift_bridgeObjectRelease();
  if (a5)
  {
    v10 = (void *)MEMORY[0x1C3B72E00](a4, a5);
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = 0;
  }
  v11 = objc_msgSend(v5, sel_initWithType_value_normalizedValue_, a1, v9, v10);

  return v11;
}

uint64_t outlined bridged method (pb) of @objc TUHandle.normalizedValue.getter(void *a1)
{
  return outlined bridged method (pb) of @objc TUHandle.normalizedValue.getter(a1, (SEL *)&selRef_normalizedValue);
}

uint64_t outlined bridged method (pb) of @objc CNContact.imageData.getter(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_imageData);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = static Data._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t outlined bridged method (pb) of @objc TUHandle.normalizedValue.getter(void *a1, SEL *a2)
{
  id v2;
  void *v3;
  uint64_t v4;

  v2 = objc_msgSend(a1, *a2);
  if (!v2)
    return 0;
  v3 = v2;
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v4;
}

unint64_t lazy protocol witness table accessor for type ClarityUIContact and conformance ClarityUIContact()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ClarityUIContact and conformance ClarityUIContact;
  if (!lazy protocol witness table cache variable for type ClarityUIContact and conformance ClarityUIContact)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ClarityUIContact, &type metadata for ClarityUIContact);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ClarityUIContact and conformance ClarityUIContact);
  }
  return result;
}

uint64_t destroy for ClarityUIContact(id *a1)
{

  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for ClarityUIContact(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = *(_QWORD *)(a2 + 24);
  a1[2] = *(_QWORD *)(a2 + 16);
  a1[3] = v5;
  v6 = v3;
  v7 = v4;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ClarityUIContact(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ClarityUIContact(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ClarityUIContact()
{
  return &type metadata for ClarityUIContact;
}

uint64_t AnsweringMachineService.handleNewIncomingCall(_:)(uint64_t a1)
{
  uint64_t *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2[11] = a1;
  v2[12] = v1;
  v3 = *v1;
  v2[13] = v3;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  v2[14] = OUTLINED_FUNCTION_23_3();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Task<(), Error>);
  v4 = *(_QWORD *)(v3 + 80);
  v2[15] = v4;
  v5 = OUTLINED_FUNCTION_26_65();
  v2[16] = v5;
  v6 = type metadata accessor for Optional();
  v2[17] = v6;
  v2[18] = *(_QWORD *)(v6 - 8);
  v2[19] = swift_task_alloc();
  v2[20] = swift_task_alloc();
  v2[21] = *(_QWORD *)(v5 - 8);
  v2[22] = OUTLINED_FUNCTION_12_101();
  v2[23] = OUTLINED_FUNCTION_12_101();
  v2[24] = OUTLINED_FUNCTION_12_101();
  v2[25] = OUTLINED_FUNCTION_12_101();
  v2[26] = OUTLINED_FUNCTION_12_101();
  v7 = type metadata accessor for Optional();
  v2[27] = v7;
  v8 = OUTLINED_FUNCTION_26_65();
  v2[28] = v8;
  v2[29] = *(_QWORD *)(v8 - 8);
  v2[30] = OUTLINED_FUNCTION_23_3();
  v2[31] = *(_QWORD *)(v7 - 8);
  v2[32] = OUTLINED_FUNCTION_12_101();
  v2[33] = OUTLINED_FUNCTION_12_101();
  v2[34] = OUTLINED_FUNCTION_12_101();
  v9 = *(_QWORD *)(v4 - 8);
  v2[35] = v9;
  v2[36] = *(_QWORD *)(v9 + 64);
  v2[37] = OUTLINED_FUNCTION_5_55();
  v2[38] = OUTLINED_FUNCTION_5_55();
  v2[39] = OUTLINED_FUNCTION_5_55();
  if (one-time initialization token for shared != -1)
    swift_once();
  v2[40] = static CallScreeningActor.shared;
  return OUTLINED_FUNCTION_1_3();
}

uint64_t AnsweringMachineService.handleNewIncomingCall(_:)()
{
  NSObject *v0;
  os_log_type_t v1;
  _QWORD *v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t, uint64_t);
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint8_t *v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, uint64_t);
  int EnumTagSinglePayload;
  NSObject *v31;
  uint64_t v32;
  void (*v33)(_QWORD, _QWORD);
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  void (*v56)(char *, char *, uint64_t);
  char *v57;
  NSObject *v58;
  os_log_type_t v59;
  int v60;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint8_t *v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(uint64_t, uint64_t);
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  os_log_type_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint8_t *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t (*v98)(void);
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  void (*v118)(uint64_t, uint64_t *, uint64_t);
  _QWORD *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  NSObject *v143;
  uint64_t v144;
  os_log_type_t v145;
  uint64_t v146;
  uint64_t (*v147)(void);
  uint64_t v148;
  uint64_t v149;
  void (*v150)(uint64_t, uint64_t, uint64_t);
  uint64_t v151;

  v3 = v2[12] + direct field offset for AnsweringMachineService.logger;
  v4 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2[35] + 16);
  v4(v2[39], v2[11], v2[15]);
  v144 = v3;
  Logger.logObject.getter();
  v5 = OUTLINED_FUNCTION_31_6();
  v150 = v4;
  v141 = (uint64_t)(v2 + 11);
  if (OUTLINED_FUNCTION_131_0(v5))
  {
    v7 = v2[38];
    v6 = v2[39];
    v8 = v2[35];
    v9 = v2[15];
    v10 = (uint8_t *)OUTLINED_FUNCTION_105();
    v151 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v10 = 136446210;
    v150(v7, v6, v9);
    v11 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    v11(v6, v9);
    v12 = dispatch thunk of CustomStringConvertible.description.getter();
    v14 = v13;
    v11(v7, v9);
    v2[10] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v12, v14, &v151);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_48(&dword_1BD004000, v0, v1, "New incoming call: %{public}s", v10);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }
  v147 = *(uint64_t (**)(void))(v2[35] + 8);
  ((void (*)(_QWORD, _QWORD))v147)(v2[39], v2[15]);

  v139 = (uint64_t)(v2 + 9);
  v15 = v2[34];
  v17 = v2[15];
  v16 = v2[16];
  v18 = v2[12];
  v4(v15, v2[11], v17);
  v19 = 1;
  __swift_storeEnumTagSinglePayload(v15, 0, 1, v17);
  v20 = v18 + *(_QWORD *)(*(_QWORD *)v18 + 144);
  OUTLINED_FUNCTION_2_0();
  v149 = v20;
  if (!__swift_getEnumTagSinglePayload(v20, 1, v16))
  {
    v4(v2[33], v20 + *(int *)(v2[16] + 48), v2[15]);
    v19 = 0;
  }
  v22 = v2[33];
  v21 = v2[34];
  v23 = v2[30];
  v24 = v2[31];
  v25 = v2[27];
  v26 = v2[28];
  v27 = v2[15];
  __swift_storeEnumTagSinglePayload(v22, v19, 1, v27);
  v28 = v23 + *(int *)(v26 + 48);
  v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16);
  v29(v23, v21, v25);
  v29(v28, v22, v25);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v23, 1, v27);
  v31 = v2[15];
  if (EnumTagSinglePayload == 1)
  {
    v32 = v2[34];
    v33 = *(void (**)(_QWORD, _QWORD))(v2[31] + 8);
    OUTLINED_FUNCTION_32_51(v2[33]);
    OUTLINED_FUNCTION_32_51(v32);
    OUTLINED_FUNCTION_22_79();
    if (!v34)
      goto LABEL_12;
    v33(v2[30], v2[27]);
  }
  else
  {
    v29(v2[32], v2[30], v2[27]);
    OUTLINED_FUNCTION_22_79();
    if (v34)
    {
      v35 = v2[34];
      v36 = v2[32];
      v37 = v2[15];
      OUTLINED_FUNCTION_32_51(v2[33]);
      OUTLINED_FUNCTION_32_51(v35);
      OUTLINED_FUNCTION_50_42(v36, v37, v38, v39, v40, v41, v42, v43, v120, v122, v124, v126, v128, v129, v132, v135, v139, v141, v144,
        v147);
LABEL_12:
      (*(void (**)(_QWORD, _QWORD))(v2[29] + 8))(v2[30], v2[28]);
      goto LABEL_13;
    }
    v78 = v2[38];
    v79 = v2[34];
    v81 = v2[32];
    v80 = v2[33];
    v82 = v2[31];
    v135 = v2[30];
    v83 = v2[15];
    OUTLINED_FUNCTION_23_74(v78, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2[35] + 32));
    v84 = dispatch thunk of static Equatable.== infix(_:_:)();
    ((void (*)(uint64_t, uint64_t))v147)(v78, v83);
    v31 = *(NSObject **)(v82 + 8);
    v4 = v150;
    OUTLINED_FUNCTION_47_32(v80);
    OUTLINED_FUNCTION_47_32(v79);
    ((void (*)(uint64_t, uint64_t))v147)(v81, v83);
    OUTLINED_FUNCTION_47_32(v135);
    if ((v84 & 1) == 0)
    {
LABEL_13:
      (*(void (**)(_QWORD, uint64_t, _QWORD))(v2[18] + 16))(v2[20], v149, v2[17]);
      OUTLINED_FUNCTION_22_79();
      if (v34)
      {
        (*(void (**)(_QWORD, _QWORD))(v2[18] + 8))(v2[20], v2[17]);
      }
      else
      {
        v44 = v2[35];
        v46 = (_QWORD *)v2[25];
        v45 = (uint64_t *)v2[26];
        v48 = v2[23];
        v47 = v2[24];
        v49 = (uint64_t *)v2[20];
        v50 = v2[21];
        v51 = v2[15];
        v52 = v2[16];
        v53 = *(int *)(v52 + 48);
        v54 = (char *)v45 + v53;
        v55 = *v49;
        *v45 = *v49;
        v56 = *(void (**)(char *, char *, uint64_t))(v44 + 32);
        v56((char *)v45 + v53, (char *)v49 + v53, v51);
        v57 = (char *)v46 + *(int *)(v52 + 48);
        *v46 = v55;
        v150((uint64_t)v57, (uint64_t)v54, v51);
        OUTLINED_FUNCTION_23_74(v47, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v50 + 16));
        OUTLINED_FUNCTION_23_74(v48, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v50 + 32));
        swift_retain_n();
        v58 = Logger.logObject.getter();
        v59 = static os_log_type_t.error.getter();
        v60 = v59;
        if (os_log_type_enabled(v58, v59))
        {
          LODWORD(v144) = v60;
          v62 = v2[38];
          v63 = v2[24];
          v133 = v141 - 24;
          v136 = v2[23];
          v121 = v2[22];
          v123 = v2[21];
          v142 = (uint64_t)v58;
          v64 = v2[15];
          v125 = v2[16];
          v127 = v2[13];
          v65 = (uint8_t *)OUTLINED_FUNCTION_105();
          v130 = OUTLINED_FUNCTION_105();
          *(_DWORD *)v65 = 136446210;
          v151 = v130;
          v150(v121 + *(int *)(v52 + 48), v63 + *(int *)(v52 + 48), v64);
          v66 = OUTLINED_FUNCTION_53_41();
          ((void (*)(uint64_t))v56)(v66);
          v67 = v125;
          v68 = *(void (**)(uint64_t, uint64_t))(v123 + 8);
          v68(v63, v125);
          v69 = dispatch thunk of CustomStringConvertible.description.getter();
          v71 = v70;
          OUTLINED_FUNCTION_50_42(v62, v64, v72, v73, v74, v75, v76, v77, v121, v123, v125, v127, (uint64_t)(v65 + 4), v130, v133, v136, v139, v142, v144,
            v147);
          v2[8] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v69, v71, &v151);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          v68(v137, v67);
          OUTLINED_FUNCTION_48(&dword_1BD004000, v143, v145, "Removing call: %{public}s", v65);
          OUTLINED_FUNCTION_21();
          OUTLINED_FUNCTION_60();
        }
        v100 = v2[23];
        OUTLINED_FUNCTION_48_46(v2[24]);

        OUTLINED_FUNCTION_48_46(v100);
        v101 = v2[26];
        v102 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
        MEMORY[0x1C3B73268](v55, MEMORY[0x1E0DEE9C0] + 8, v102, MEMORY[0x1E0DEDB38]);
        swift_release();
        OUTLINED_FUNCTION_48_46(v101);
      }
      v103 = v2[38];
      v104 = v2[35];
      v105 = (uint64_t *)v2[19];
      v146 = v2[18];
      v148 = v2[17];
      v106 = v2[15];
      v108 = v2[13];
      v107 = v2[14];
      v109 = v2[11];
      v131 = v103;
      v134 = v2[12];
      v138 = v109;
      v140 = v2[16];
      static TaskPriority.userInitiated.getter();
      v110 = type metadata accessor for TaskPriority();
      __swift_storeEnumTagSinglePayload(v107, 0, 1, v110);
      OUTLINED_FUNCTION_46_36(v103, v109);
      v111 = static CallScreeningActor.shared;
      v112 = lazy protocol witness table accessor for type CallScreeningActor.ActorType and conformance CallScreeningActor.ActorType();
      v113 = v104;
      v114 = (*(unsigned __int8 *)(v104 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v104 + 80);
      v115 = swift_allocObject();
      *(_QWORD *)(v115 + 16) = v111;
      *(_QWORD *)(v115 + 24) = v112;
      *(_QWORD *)(v115 + 32) = v106;
      *(_OWORD *)(v115 + 40) = *(_OWORD *)(v108 + 88);
      *(_QWORD *)(v115 + 56) = *(_QWORD *)(v108 + 104);
      *(_QWORD *)(v115 + 64) = v134;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v113 + 32))(v115 + v114, v131, v106);
      swift_retain();
      swift_retain();
      v116 = _sScTss5Error_pRs_rlE8priority9operationScTyxsAA_pGScPSg_xyYaKYAcntcfCyt_Tgm5(v107, (uint64_t)&async function pointer to partial apply for closure #1 in AnsweringMachineService.handleNewIncomingCall(_:), v115);
      v2[41] = v116;
      v117 = (uint64_t)v105 + *(int *)(v140 + 48);
      *v105 = v116;
      OUTLINED_FUNCTION_46_36(v117, v138);
      OUTLINED_FUNCTION_0_87((uint64_t)v105, 0);
      OUTLINED_FUNCTION_2_0();
      v118 = *(void (**)(uint64_t, uint64_t *, uint64_t))(v146 + 40);
      swift_retain();
      v118(v149, v105, v148);
      swift_endAccess();
      v119 = (_QWORD *)swift_task_alloc();
      v2[42] = v119;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
      *v119 = v2;
      v119[1] = AnsweringMachineService.handleNewIncomingCall(_:);
      return Task.value.getter();
    }
  }
  v4(v2[37], v2[11], v2[15]);
  Logger.logObject.getter();
  v85 = OUTLINED_FUNCTION_31_6();
  if (os_log_type_enabled(v31, v85))
  {
    v92 = v2[37];
    v93 = v2[15];
    v94 = (uint8_t *)OUTLINED_FUNCTION_105();
    v151 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v94 = 136446210;
    OUTLINED_FUNCTION_40_54();
    ((void (*)(uint64_t, uint64_t))v147)(v92, v93);
    OUTLINED_FUNCTION_49_46();
    v95 = OUTLINED_FUNCTION_54_37();
    v96 = ((uint64_t (*)(uint64_t))v147)(v95);
    v2[9] = OUTLINED_FUNCTION_43_54(v96, v97, &v151);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_48(&dword_1BD004000, v31, v85, "New incoming call already being handled: %{public}s", v94);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }
  OUTLINED_FUNCTION_50_42(v2[37], v2[15], v86, v87, v88, v89, v90, v91, v120, v122, v124, v126, v128, v129, v132, v135, v139, v141, v144,
    v147);

  OUTLINED_FUNCTION_17_76();
  swift_task_dealloc();
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_81_0();
  OUTLINED_FUNCTION_625();
  OUTLINED_FUNCTION_633();
  OUTLINED_FUNCTION_575();
  OUTLINED_FUNCTION_535();
  OUTLINED_FUNCTION_578();
  OUTLINED_FUNCTION_541();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v98 = (uint64_t (*)(void))OUTLINED_FUNCTION_20();
  return v98();
}

{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 344) = v0;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_2_8();
}

{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_79_0();
  swift_release();
  OUTLINED_FUNCTION_17_76();
  swift_task_dealloc();
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_81_0();
  OUTLINED_FUNCTION_625();
  OUTLINED_FUNCTION_633();
  OUTLINED_FUNCTION_575();
  OUTLINED_FUNCTION_535();
  OUTLINED_FUNCTION_578();
  OUTLINED_FUNCTION_541();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_20();
  return OUTLINED_FUNCTION_8_6(v0);
}

{
  uint64_t v0;

  swift_release();
  OUTLINED_FUNCTION_81_0();
  OUTLINED_FUNCTION_625();
  OUTLINED_FUNCTION_633();
  OUTLINED_FUNCTION_575();
  OUTLINED_FUNCTION_535();
  OUTLINED_FUNCTION_578();
  OUTLINED_FUNCTION_541();
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_12();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t AnsweringMachineService.__allocating_init(shouldAutoScreenCall:requestToScreen:logger:)()
{
  uint64_t v0;

  OUTLINED_FUNCTION_7_26();
  v0 = swift_allocObject();
  AnsweringMachineService.init(shouldAutoScreenCall:requestToScreen:logger:)();
  return v0;
}

uint64_t AnsweringMachineService.currentCall.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *v1;
  v4 = (uint64_t)v1 + *(_QWORD *)(*v1 + 144);
  OUTLINED_FUNCTION_2_0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Task<(), Error>);
  v5 = *(_QWORD *)(v3 + 80);
  v6 = OUTLINED_FUNCTION_26_65();
  v7 = 1;
  if (!__swift_getEnumTagSinglePayload(v4, 1, v6))
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, v4 + *(int *)(v6 + 48), v5);
    v7 = 0;
  }
  return OUTLINED_FUNCTION_0_87(a1, v7);
}

_QWORD *AnsweringMachineService.init(shouldAutoScreenCall:requestToScreen:logger:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __int128 v14;

  OUTLINED_FUNCTION_7_26();
  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DBD1F8]), sel_init, (unsigned __int128)0, (unsigned __int128)0, 0);
  type metadata accessor for DeviceRingerStateObserver();
  v7 = swift_allocObject();
  *(_DWORD *)(v7 + 16) = 0;
  *(_BYTE *)(v7 + 20) = 0;
  type metadata accessor for ScreeningSoundAndHapticsManager();
  v8 = swift_allocObject();
  v1[6] = specialized ScreeningSoundAndHapticsManager.init(with:ringerStateObserver:feedbackGenerator:)((uint64_t)v6, v7, (uint64_t)&v14, v8);
  v9 = (uint64_t)v1 + *(_QWORD *)(*v1 + 144);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Task<(), Error>);
  v10 = OUTLINED_FUNCTION_26_65();
  __swift_storeEnumTagSinglePayload(v9, 1, 1, v10);
  v1[2] = v5;
  v1[3] = v4;
  v1[4] = v3;
  v1[5] = v2;
  v11 = (char *)v1 + direct field offset for AnsweringMachineService.logger;
  v12 = type metadata accessor for Logger();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v11, v0, v12);
  return v1;
}

uint64_t AnsweringMachineService.requestToScreen(call:)(uint64_t a1)
{
  uint64_t *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[6] = a1;
  v2[7] = v1;
  v3 = *v1;
  v2[8] = *v1;
  v4 = *(_QWORD *)(v3 + 80);
  v2[9] = v4;
  v2[10] = *(_QWORD *)(v4 - 8);
  v2[11] = OUTLINED_FUNCTION_5_55();
  v2[12] = OUTLINED_FUNCTION_5_55();
  v2[13] = OUTLINED_FUNCTION_5_55();
  v2[14] = OUTLINED_FUNCTION_5_55();
  if (one-time initialization token for shared != -1)
    swift_once();
  v2[15] = static CallScreeningActor.shared;
  return swift_task_switch();
}

uint64_t AnsweringMachineService.requestToScreen(call:)()
{
  _QWORD *v0;
  os_log_type_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(_QWORD, _QWORD);
  uint64_t v15;

  OUTLINED_FUNCTION_79_0();
  v2 = v0[6];
  v3 = v0[14];
  v4 = v0[9];
  v5 = v0[10];
  v0[16] = direct field offset for AnsweringMachineService.logger;
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  v0[17] = v6;
  v6(v3, v2, v4);
  v7 = Logger.logObject.getter();
  v8 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_4_14(v8))
  {
    v9 = (uint8_t *)OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_8_105(4.8751e-34);
    OUTLINED_FUNCTION_33_58();
    OUTLINED_FUNCTION_24_64();
    v10 = OUTLINED_FUNCTION_27_63();
    v0[5] = OUTLINED_FUNCTION_31_59(v10, v11, v12, v13);
    OUTLINED_FUNCTION_25_63();
    OUTLINED_FUNCTION_21_0();
    OUTLINED_FUNCTION_48(&dword_1BD004000, v7, v1, "Requesting to screen call: %{public}s", v9);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }
  v14 = *(void (**)(_QWORD, _QWORD))(v0[10] + 8);
  v14(v0[14], v0[9]);

  v0[18] = v14;
  v15 = v0[7];
  v0[19] = *(_QWORD *)(v15 + 32);
  v0[20] = *(_QWORD *)(v15 + 40);
  type metadata accessor for MainActor();
  v0[21] = static MainActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  OUTLINED_FUNCTION_167_2();
  return swift_task_switch();
}

{
  _QWORD *v0;
  void (*v1)(uint64_t, _QWORD);
  uint64_t v2;

  v1 = (void (*)(uint64_t, _QWORD))v0[19];
  v2 = v0[6];
  swift_release();
  v1(v2, 0);
  v0[22] = 0;
  return swift_task_switch();
}

uint64_t AnsweringMachineService.requestToScreen(call:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  os_log_type_t v29;
  void (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(void);

  OUTLINED_FUNCTION_79_0();
  a23 = v27;
  a24 = v28;
  a22 = v26;
  OUTLINED_FUNCTION_37_48(*(_QWORD *)(v26 + 96), *(uint64_t (**)(uint64_t, _QWORD, _QWORD))(v26 + 136));
  Logger.logObject.getter();
  v29 = OUTLINED_FUNCTION_31_6();
  if (OUTLINED_FUNCTION_131_0(v29))
  {
    v30 = *(void (**)(uint64_t, uint64_t))(v26 + 144);
    v31 = *(_QWORD *)(v26 + 96);
    v32 = *(_QWORD *)(v26 + 72);
    v33 = (uint8_t *)OUTLINED_FUNCTION_105();
    a13 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v33 = 136446210;
    OUTLINED_FUNCTION_40_54();
    v30(v31, v32);
    OUTLINED_FUNCTION_49_46();
    v34 = OUTLINED_FUNCTION_54_37();
    v35 = ((uint64_t (*)(uint64_t))v30)(v34);
    *(_QWORD *)(v26 + 32) = OUTLINED_FUNCTION_43_54(v35, v36, &a13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_48(&dword_1BD004000, v24, v25, "Screening call: %{public}s", v33);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }
  (*(void (**)(_QWORD, _QWORD))(v26 + 144))(*(_QWORD *)(v26 + 96), *(_QWORD *)(v26 + 72));

  swift_task_dealloc();
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_81_0();
  v37 = (uint64_t (*)(void))OUTLINED_FUNCTION_20();
  return OUTLINED_FUNCTION_8_6(v37);
}

{
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  void *v29;
  void (*v30)(uint64_t);
  void (*v31)(uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  id v40;
  uint64_t v41;
  void *v42;
  _QWORD *v44;

  OUTLINED_FUNCTION_79_0();
  a23 = v25;
  a24 = v26;
  a22 = v24;
  OUTLINED_FUNCTION_37_48(*(_QWORD *)(v24 + 88), *(uint64_t (**)(uint64_t, _QWORD, _QWORD))(v24 + 136));
  OUTLINED_FUNCTION_15_63();
  OUTLINED_FUNCTION_15_63();
  v27 = Logger.logObject.getter();
  v28 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v27, v28))
  {
    v29 = *(void **)(v24 + 176);
    v30 = *(void (**)(uint64_t))(v24 + 136);
    v31 = *(void (**)(uint64_t, uint64_t))(v24 + 144);
    v32 = *(_QWORD *)(v24 + 104);
    v33 = *(_QWORD *)(v24 + 88);
    v34 = *(_QWORD *)(v24 + 72);
    v35 = OUTLINED_FUNCTION_105();
    v44 = (_QWORD *)OUTLINED_FUNCTION_105();
    a12 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v35 = 136446466;
    v36 = OUTLINED_FUNCTION_53_41();
    v30(v36);
    v31(v33, v34);
    v37 = dispatch thunk of CustomStringConvertible.description.getter();
    v39 = v38;
    v31(v32, v34);
    *(_QWORD *)(v24 + 16) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v37, v39, &a12);
    OUTLINED_FUNCTION_53_41();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v35 + 12) = 2112;
    v40 = v29;
    v41 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v24 + 24) = v41;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *v44 = v41;

    _os_log_impl(&dword_1BD004000, v27, v28, "Failed to screen call: %{public}s with error %@", (uint8_t *)v35, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }
  v42 = *(void **)(v24 + 176);
  (*(void (**)(_QWORD, _QWORD))(v24 + 144))(*(_QWORD *)(v24 + 88), *(_QWORD *)(v24 + 72));

  swift_willThrow();
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_625();
  OUTLINED_FUNCTION_633();
  return OUTLINED_FUNCTION_8_6(*(uint64_t (**)(void))(v24 + 8));
}

uint64_t closure #1 in AnsweringMachineService.handleNewIncomingCall(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v5[5] = a4;
  v5[6] = a5;
  v6 = *a4;
  v5[7] = *a4;
  v7 = *(_QWORD *)(v6 + 80);
  v5[8] = v7;
  v5[9] = *(_QWORD *)(v7 - 8);
  v5[10] = swift_task_alloc();
  v5[11] = swift_task_alloc();
  v5[12] = swift_task_alloc();
  if (one-time initialization token for shared != -1)
    swift_once();
  v5[13] = static CallScreeningActor.shared;
  return swift_task_switch();
}

uint64_t closure #1 in AnsweringMachineService.handleNewIncomingCall(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  _QWORD *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t);
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(_QWORD, _QWORD);
  _QWORD *v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;

  OUTLINED_FUNCTION_79_0();
  v18 = v16[12];
  v19 = v16[8];
  v20 = v16[9];
  v21 = v16[6];
  v16[14] = direct field offset for AnsweringMachineService.logger;
  v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16);
  v16[15] = v22;
  v22(v18, v21, v19);
  v23 = Logger.logObject.getter();
  v24 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_4_14(v24))
  {
    v25 = (uint8_t *)OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_8_105(4.8751e-34);
    OUTLINED_FUNCTION_33_58();
    OUTLINED_FUNCTION_24_64();
    v26 = OUTLINED_FUNCTION_27_63();
    v16[4] = OUTLINED_FUNCTION_31_59(v26, v27, v28, v29);
    OUTLINED_FUNCTION_25_63();
    OUTLINED_FUNCTION_21_0();
    OUTLINED_FUNCTION_48(&dword_1BD004000, v23, v17, "Waiting to screen call: %{public}s", v25);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }
  v30 = *(void (**)(_QWORD, _QWORD))(v16[9] + 8);
  v30(v16[12], v16[8]);

  v16[16] = v30;
  v41 = **(int **)(v16[5] + 16) + *(_QWORD *)(v16[5] + 16);
  v31 = (_QWORD *)swift_task_alloc();
  v16[17] = v31;
  *v31 = v16;
  v31[1] = closure #1 in AnsweringMachineService.handleNewIncomingCall(_:);
  OUTLINED_FUNCTION_167_2();
  return v33(v32, v33, v34, v35, v36, v37, v38, v39, a9, a10, a11, v41, a13, a14, a15, a16);
}

uint64_t closure #1 in AnsweringMachineService.handleNewIncomingCall(_:)(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 144) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_BYTE *)(v4 + 168) = a1 & 1;
  return OUTLINED_FUNCTION_1_3();
}

uint64_t closure #1 in AnsweringMachineService.handleNewIncomingCall(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  os_log_type_t v29;
  _BOOL4 v30;
  void (*v31)(uint64_t, uint64_t);
  void (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint8_t *v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(void);
  _QWORD *v43;
  uint64_t v44;

  OUTLINED_FUNCTION_79_0();
  a23 = v27;
  a24 = v28;
  a22 = v26;
  if (*(_BYTE *)(v26 + 168) == 1 && (static Task<>.isCancelled.getter() & 1) == 0)
  {
    v43 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v26 + 152) = v43;
    *v43 = v26;
    v43[1] = closure #1 in AnsweringMachineService.handleNewIncomingCall(_:);
    OUTLINED_FUNCTION_167_2();
    return AnsweringMachineService.requestToScreen(call:)(v44);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v26 + 120))(*(_QWORD *)(v26 + 80), *(_QWORD *)(v26 + 48), *(_QWORD *)(v26 + 64));
    Logger.logObject.getter();
    v29 = OUTLINED_FUNCTION_31_6();
    v30 = OUTLINED_FUNCTION_131_0(v29);
    v31 = *(void (**)(uint64_t, uint64_t))(v26 + 128);
    if (v30)
    {
      v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 120);
      v34 = *(_QWORD *)(v26 + 80);
      v33 = *(_QWORD *)(v26 + 88);
      v35 = *(_QWORD *)(v26 + 64);
      v36 = (uint8_t *)OUTLINED_FUNCTION_105();
      a13 = OUTLINED_FUNCTION_105();
      *(_DWORD *)v36 = 136446210;
      v32(v33, v34, v35);
      v31(v34, v35);
      v37 = dispatch thunk of CustomStringConvertible.description.getter();
      v39 = v38;
      v40 = OUTLINED_FUNCTION_53_41();
      ((void (*)(uint64_t))v31)(v40);
      *(_QWORD *)(v26 + 24) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v37, v39, &a13);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_21_0();
      OUTLINED_FUNCTION_48(&dword_1BD004000, v24, v25, "Will not screen call: %{public}s", v36);
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_60();
    }
    v31(*(_QWORD *)(v26 + 80), *(_QWORD *)(v26 + 64));

    swift_task_dealloc();
    OUTLINED_FUNCTION_29_0();
    OUTLINED_FUNCTION_12();
    v41 = (uint64_t (*)(void))OUTLINED_FUNCTION_20();
    return OUTLINED_FUNCTION_8_6(v41);
  }
}

uint64_t closure #1 in AnsweringMachineService.handleNewIncomingCall(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v3)(void);

  *(_QWORD *)(*(_QWORD *)v1 + 160) = v0;
  swift_task_dealloc();
  if (v0)
    return OUTLINED_FUNCTION_2_8();
  swift_task_dealloc();
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_12();
  v3 = (uint64_t (*)(void))OUTLINED_FUNCTION_20();
  return v3();
}

{
  uint64_t v0;
  os_log_type_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  _QWORD *v6;
  uint64_t v7;

  OUTLINED_FUNCTION_15_63();
  OUTLINED_FUNCTION_15_63();
  v3 = Logger.logObject.getter();
  v4 = static os_log_type_t.error.getter();
  if (OUTLINED_FUNCTION_4_14(v4))
  {
    v5 = (uint8_t *)OUTLINED_FUNCTION_105();
    v6 = (_QWORD *)OUTLINED_FUNCTION_105();
    *(_DWORD *)v5 = 138412290;
    OUTLINED_FUNCTION_15_63();
    v7 = _swift_stdlib_bridgeErrorToNSError();
    OUTLINED_FUNCTION_13_103(v7);
    *v6 = v2;
    OUTLINED_FUNCTION_19_2();
    OUTLINED_FUNCTION_19_2();
    OUTLINED_FUNCTION_48(&dword_1BD004000, v3, v1, "Failed to handle new incoming call with error: %@", v5);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

  OUTLINED_FUNCTION_19_2();
  OUTLINED_FUNCTION_19_2();
  OUTLINED_FUNCTION_30_65();
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_625();
  OUTLINED_FUNCTION_633();
  return OUTLINED_FUNCTION_48_0(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  os_log_type_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  _QWORD *v6;
  uint64_t v7;

  OUTLINED_FUNCTION_15_63();
  OUTLINED_FUNCTION_15_63();
  v3 = Logger.logObject.getter();
  v4 = static os_log_type_t.error.getter();
  if (OUTLINED_FUNCTION_4_14(v4))
  {
    v5 = (uint8_t *)OUTLINED_FUNCTION_105();
    v6 = (_QWORD *)OUTLINED_FUNCTION_105();
    *(_DWORD *)v5 = 138412290;
    OUTLINED_FUNCTION_15_63();
    v7 = _swift_stdlib_bridgeErrorToNSError();
    OUTLINED_FUNCTION_13_103(v7);
    *v6 = v2;
    OUTLINED_FUNCTION_19_2();
    OUTLINED_FUNCTION_19_2();
    OUTLINED_FUNCTION_48(&dword_1BD004000, v3, v1, "Failed to handle new incoming call with error: %@", v5);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

  OUTLINED_FUNCTION_19_2();
  OUTLINED_FUNCTION_19_2();
  OUTLINED_FUNCTION_30_65();
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_625();
  OUTLINED_FUNCTION_633();
  return OUTLINED_FUNCTION_48_0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t AnsweringMachineService.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  swift_release();
  swift_release();
  v1 = type metadata accessor for Logger();
  OUTLINED_FUNCTION_17_1(v1);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Task<(), Error>);
  OUTLINED_FUNCTION_26_65();
  v2 = type metadata accessor for Optional();
  OUTLINED_FUNCTION_17_1(v2);
  return v0;
}

uint64_t AnsweringMachineService.__deallocating_deinit()
{
  AnsweringMachineService.deinit();
  return swift_deallocClassInstance();
}

unint64_t lazy protocol witness table accessor for type CallScreeningActor.ActorType and conformance CallScreeningActor.ActorType()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type CallScreeningActor.ActorType and conformance CallScreeningActor.ActorType;
  if (!lazy protocol witness table cache variable for type CallScreeningActor.ActorType and conformance CallScreeningActor.ActorType)
  {
    v1 = type metadata accessor for CallScreeningActor.ActorType();
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for CallScreeningActor.ActorType, v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type CallScreeningActor.ActorType and conformance CallScreeningActor.ActorType);
  }
  return result;
}

uint64_t sub_1BD470998()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in AnsweringMachineService.handleNewIncomingCall(_:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[3];
  v5 = *(unsigned __int8 *)(*(_QWORD *)(v1[4] - 8) + 80);
  v6 = v1[2];
  v7 = (uint64_t *)v1[8];
  v8 = (uint64_t)v1 + ((v5 + 72) & ~v5);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = dispatch thunk of CallScreeningStateMachine.transition(with:reason:validation:);
  return closure #1 in AnsweringMachineService.handleNewIncomingCall(_:)(a1, v6, v4, v7, v8);
}

uint64_t specialized ScreeningSoundAndHapticsManager.init(with:ringerStateObserver:feedbackGenerator:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v8;
  _QWORD v10[5];
  _QWORD v11[5];
  _QWORD v12[5];

  v12[3] = _sSo8NSObjectCMaTm_0(0, &lazy cache variable for type metadata for TUCallSoundPlayer);
  v12[4] = &protocol witness table for TUCallSoundPlayer;
  v12[0] = a1;
  v11[3] = type metadata accessor for DeviceRingerStateObserver();
  v11[4] = &protocol witness table for DeviceRingerStateObserver;
  v11[0] = a2;
  outlined init with copy of IDSLookupManager((uint64_t)v12, a4 + 56);
  outlined init with copy of IDSLookupManager((uint64_t)v11, a4 + 96);
  if (*(_QWORD *)(a3 + 24))
  {
    outlined init with copy of ShakyMaker?(a3, a4 + 16);
  }
  else
  {
    v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3A58]), sel_init);
    v10[3] = _sSo8NSObjectCMaTm_0(0, &lazy cache variable for type metadata for UINotificationFeedbackGenerator);
    v10[4] = &protocol witness table for UINotificationFeedbackGenerator;
    v10[0] = v8;
    outlined init with take of ShakyMaker?((uint64_t)v10, a4 + 16);
  }
  ScreeningSoundAndHapticsManager.registerForUpdates()();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  outlined destroy of ShakyMaker?(a3);
  return a4;
}

uint64_t type metadata completion function for AnsweringMachineService()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for Logger();
  if (v1 <= 0x3F)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Task<(), Error>);
    swift_getTupleTypeMetadata2();
    result = type metadata accessor for Optional();
    if (v2 <= 0x3F)
    {
      result = swift_initClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

void type metadata accessor for AnsweringMachineService()
{
  JUMPOUT(0x1C3B74FFCLL);
}

uint64_t method lookup function for AnsweringMachineService()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AnsweringMachineService.__allocating_init(shouldAutoScreenCall:requestToScreen:logger:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t outlined init with take of ShakyMaker?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ShakyMaker?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of ShakyMaker?(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ShakyMaker?);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id ConversationControlsNoticeCoordinator.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void ConversationControlsNoticeCoordinator.noticeTapped(notice:completionHandler:)()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  void (*v3)(_QWORD);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  os_log_type_t v15;
  uint64_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  void (*v24)(__int128 *__return_ptr);
  char *v25;
  char v26;
  _QWORD *v27;
  NSObject *v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  os_log_type_t v42;
  NSObject *v43;
  uint64_t v44;
  void (*v45)(void);
  uint64_t v46;
  char v47;
  _QWORD v48[3];
  NSObject *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  void (*v54)(_QWORD);
  _QWORD v55[3];
  uint64_t v56;
  char *v57;
  __int128 v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD v61[3];
  uint64_t v62;
  uint64_t v63;

  OUTLINED_FUNCTION_93();
  v2 = v0;
  v53 = v4;
  v54 = v3;
  v6 = v5;
  v7 = OUTLINED_FUNCTION_33_0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v52 = (char *)v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v48 - v11;
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v13 = OUTLINED_FUNCTION_17_2();
  v14 = __swift_project_value_buffer(v13, (uint64_t)&static Logger.conversationControls);
  outlined init with copy of IDSLookupManager(v6, (uint64_t)v61);
  v50 = v14;
  Logger.logObject.getter();
  v15 = OUTLINED_FUNCTION_369();
  if (os_log_type_enabled((os_log_t)v1, v15))
  {
    v16 = OUTLINED_FUNCTION_105();
    v51 = v6;
    v17 = (uint8_t *)v16;
    v18 = OUTLINED_FUNCTION_105();
    v49 = v7;
    v48[2] = v18;
    *(_QWORD *)&v58 = v18;
    *(_DWORD *)v17 = 136315138;
    v48[1] = v17 + 4;
    v19 = v62;
    v20 = v63;
    __swift_project_boxed_opaque_existential_1(v61, v62);
    v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 120))(v19, v20);
    v23 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v21, v22, (uint64_t *)&v58);
    OUTLINED_FUNCTION_19_72(v23);
    OUTLINED_FUNCTION_30_66();
    OUTLINED_FUNCTION_27();
    OUTLINED_FUNCTION_100_2();
    OUTLINED_FUNCTION_48(&dword_1BD004000, v1, v15, "noticeTapped: %s", v17);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }
  OUTLINED_FUNCTION_100_2();

  v24 = *(void (**)(__int128 *__return_ptr))((*MEMORY[0x1E0DEEDD8] & *v2) + 0x88);
  v24(&v58);
  if (v59)
  {
    outlined init with take of Notice(&v58, (uint64_t)v61);
    OUTLINED_FUNCTION_5_122();
    OUTLINED_FUNCTION_13_104();
    __swift_project_boxed_opaque_existential_1(v61, v62);
    v25 = v52;
    OUTLINED_FUNCTION_13_104();
    _s10Foundation4UUIDVACSHAAWlTm_3((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x1E0CB09D0]);
    v26 = dispatch thunk of static Equatable.== infix(_:_:)();
    v1 = *(_QWORD *)(v8 + 8);
    ((void (*)(char *, uint64_t))v1)(v25, v7);
    ((void (*)(char *, uint64_t))v1)(v12, v7);
    if ((v26 & 1) == 0)
    {
      outlined init with copy of IDSLookupManager(v6, (uint64_t)&v58);
      v27 = v2;
      v28 = Logger.logObject.getter();
      v29 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v28, (os_log_type_t)v29))
      {
        v49 = v28;
        LODWORD(v50) = v29;
        v51 = v6;
        v30 = OUTLINED_FUNCTION_105();
        v52 = (char *)OUTLINED_FUNCTION_105();
        v57 = v52;
        *(_DWORD *)v30 = 136315394;
        v31 = v59;
        v32 = v60;
        __swift_project_boxed_opaque_existential_1(&v58, v59);
        (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v31, v32);
        v33 = OUTLINED_FUNCTION_60_30();
        v35 = v34;
        OUTLINED_FUNCTION_57_21();
        v36 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v33, v35, (uint64_t *)&v57);
        OUTLINED_FUNCTION_19_72(v36);
        OUTLINED_FUNCTION_56_39();
        swift_bridgeObjectRelease();
        v37 = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v58);
        *(_WORD *)(v30 + 12) = 2080;
        ((void (*)(_QWORD *__return_ptr, uint64_t))v24)(v55, v37);
        v38 = v56;
        if (v56)
        {
          OUTLINED_FUNCTION_565(v55);
          OUTLINED_FUNCTION_61_29(v38);
          outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v55, (uint64_t *)&demangling cache variable for type metadata for Notice?);
          v39 = OUTLINED_FUNCTION_60_30();
          v41 = v40;
          OUTLINED_FUNCTION_57_21();
        }
        else
        {
          outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v55, (uint64_t *)&demangling cache variable for type metadata for Notice?);
          v41 = 0xE100000000000000;
          v39 = 45;
        }
        v42 = v50;
        v43 = v49;
        v44 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v39, v41, (uint64_t *)&v57);
        OUTLINED_FUNCTION_19_72(v44);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_26_6(&dword_1BD004000, v43, v42, "Tapped notice:%s doesn't match activeNotice:%s", (uint8_t *)v30);
        OUTLINED_FUNCTION_25_6();
        OUTLINED_FUNCTION_60();
      }
      OUTLINED_FUNCTION_103();

    }
    OUTLINED_FUNCTION_100_2();
  }
  else
  {
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)&v58, (uint64_t *)&demangling cache variable for type metadata for Notice?);
  }
  OUTLINED_FUNCTION_5_122();
  if ((OUTLINED_FUNCTION_36_4(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 152)) & 1) != 0)
  {
    OUTLINED_FUNCTION_5_122();
    v45 = (void (*)(void))OUTLINED_FUNCTION_36_4(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 160));
    if (v45)
    {
      v46 = (uint64_t)v45;
      v45();
      outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v46);
    }
  }
  if (v54)
  {
    OUTLINED_FUNCTION_5_122();
    v47 = OUTLINED_FUNCTION_36_4(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 136));
    v54(v47 & 1);
  }
  OUTLINED_FUNCTION_52_1();
}

void ConversationControlsNoticeCoordinator.post(notice:)(_QWORD *a1)
{
  OUTLINED_FUNCTION_565(a1);
  specialized ConversationControlsNoticeCoordinator.post(notice:)();
}

Swift::Void __swiftcall ConversationControlsNoticeCoordinator.flushNotices(priority:)(ConversationKit::NoticePriority priority)
{
  void (*v1)(uint64_t *, char);
  uint64_t v2;
  void (*v3)(uint64_t *, _QWORD);
  void (*v4)(uint64_t *, _QWORD);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8[4];

  v1 = ConversationControlsNoticeCoordinator.noticeQueue.modify(v8);
  specialized Dictionary.subscript.modify();
  v4 = v3;
  v5 = *(_QWORD *)(v2 + 24);
  if (v5)
  {
    v6 = *(_QWORD *)(v2 + 32);
    __swift_mutable_project_boxed_opaque_existential_1(v2, *(_QWORD *)(v2 + 24));
    (*(void (**)(uint64_t, uint64_t))(v6 + 40))(v5, v6);
  }
  v4(&v7, 0);
  v1(v8, 0);
}

void ConversationControlsNoticeCoordinator.dismissAndGetNextNotice(dismissContext:)()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  _QWORD *v8;
  uint8_t *v9;
  void (*v10)(_QWORD *__return_ptr);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  void (*v16)(uint64_t *__return_ptr);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19[5];
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;

  OUTLINED_FUNCTION_93();
  v2 = v1;
  v18 = OUTLINED_FUNCTION_33_0();
  MEMORY[0x1E0C80A78](v18);
  OUTLINED_FUNCTION_77();
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v3 = OUTLINED_FUNCTION_17_2();
  __swift_project_value_buffer(v3, (uint64_t)&static Logger.conversationControls);
  v4 = v0;
  v5 = Logger.logObject.getter();
  v6 = static os_log_type_t.default.getter();
  v7 = os_log_type_enabled(v5, v6);
  v8 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  if (v7)
  {
    v9 = (uint8_t *)OUTLINED_FUNCTION_105();
    v19[0] = OUTLINED_FUNCTION_105();
    *(_DWORD *)v9 = 136315138;
    OUTLINED_FUNCTION_68_26();
    v10(v20);
    v11 = v21;
    if (v21)
    {
      v12 = v22;
      __swift_project_boxed_opaque_existential_1(v20, v21);
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v12);
      outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v20, (uint64_t *)&demangling cache variable for type metadata for Notice?);
      v13 = UUID.uuidString.getter();
      v15 = v14;
      OUTLINED_FUNCTION_36_51();
    }
    else
    {
      outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v20, (uint64_t *)&demangling cache variable for type metadata for Notice?);
      v15 = 0xE600000000000000;
      v13 = 0x3E656E6F6E3CLL;
    }
    v20[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v13, v15, v19);
    OUTLINED_FUNCTION_56_39();

    OUTLINED_FUNCTION_27();
    OUTLINED_FUNCTION_48(&dword_1BD004000, v5, v6, "dismissing notice: %s", v9);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

  v16 = *(void (**)(uint64_t *__return_ptr))((*v8 & *v4) + 0x88);
  v16(v19);
  if (v19[3])
  {
    OUTLINED_FUNCTION_54_38();
    __swift_project_boxed_opaque_existential_1(v20, v21);
    OUTLINED_FUNCTION_13_104();
    ConversationControlsNoticeCoordinator.noticeDismissed(noticeUUID:dismissContext:)();
    v17 = OUTLINED_FUNCTION_36_51();
    v16((uint64_t *)v17);
    OUTLINED_FUNCTION_12_6();
  }
  else
  {
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v19, (uint64_t *)&demangling cache variable for type metadata for Notice?);
    *(_QWORD *)(v2 + 32) = 0;
    *(_OWORD *)v2 = 0u;
    *(_OWORD *)(v2 + 16) = 0u;
  }
  OUTLINED_FUNCTION_52_1();
}

void ConversationControlsNoticeCoordinator.noticeDismissed(noticeUUID:dismissContext:)()
{
  _QWORD *v0;
  _QWORD *v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  void (*v16)(uint64_t *__return_ptr);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  char v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  unint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  os_log_type_t v35;
  _DWORD *v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48[5];
  uint64_t v49[3];
  uint64_t v50;
  uint64_t v51;

  OUTLINED_FUNCTION_93();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v6 = OUTLINED_FUNCTION_33_0();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v42 - v12;
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v42 - v14;
  OUTLINED_FUNCTION_68_26();
  v16(v48);
  if (v48[3])
  {
    v45 = v5;
    v46 = v3;
    OUTLINED_FUNCTION_54_38();
    v17 = v6;
    v19 = v50;
    v18 = v51;
    __swift_project_boxed_opaque_existential_1(v49, v50);
    v20 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
    v21 = v18;
    v6 = v17;
    v20(v19, v21);
    v22 = static UUID.== infix(_:_:)();
    v23 = *(void (**)(char *, uint64_t))(v7 + 8);
    v23(v15, v17);
    if ((v22 & 1) != 0)
    {
      if (one-time initialization token for conversationControls != -1)
        swift_once();
      v24 = OUTLINED_FUNCTION_17_2();
      __swift_project_value_buffer(v24, (uint64_t)&static Logger.conversationControls);
      OUTLINED_FUNCTION_51_44((uint64_t)v13, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 16));
      v25 = v46;
      swift_bridgeObjectRetain_n();
      v26 = Logger.logObject.getter();
      v27 = static os_log_type_t.default.getter();
      v28 = v27;
      if (os_log_type_enabled(v26, v27))
      {
        v29 = OUTLINED_FUNCTION_105();
        v44 = OUTLINED_FUNCTION_105();
        v48[0] = v44;
        *(_DWORD *)v29 = 136315394;
        if (v25)
          v30 = v45;
        else
          v30 = 4271950;
        v43 = v6;
        if (v25)
          v31 = v25;
        else
          v31 = 0xE300000000000000;
        LODWORD(v45) = v28;
        swift_bridgeObjectRetain();
        v47 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v30, v31, v48);
        OUTLINED_FUNCTION_56_39();
        OUTLINED_FUNCTION_22_5();
        swift_bridgeObjectRelease();
        *(_WORD *)(v29 + 12) = 2080;
        v32 = OUTLINED_FUNCTION_60_30();
        v47 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v32, v33, v48);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        OUTLINED_FUNCTION_27();
        v23(v13, v43);
        OUTLINED_FUNCTION_26_6(&dword_1BD004000, v26, (os_log_type_t)v45, "[%s] noticeDismissed: %s", (uint8_t *)v29);
        OUTLINED_FUNCTION_25_6();
        OUTLINED_FUNCTION_60();
      }
      OUTLINED_FUNCTION_22_5();
      v23(v13, v6);

      v41 = (_QWORD *)MEMORY[0x1E0DEEDD8];
      ConversationControlsNoticeCoordinator.pop()();
      (*(void (**)(uint64_t *))((*v41 & *v1) + 0x90))(v48);
      OUTLINED_FUNCTION_12_6();
      goto LABEL_21;
    }
    OUTLINED_FUNCTION_12_6();
  }
  else
  {
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v48, (uint64_t *)&demangling cache variable for type metadata for Notice?);
  }
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v34 = OUTLINED_FUNCTION_17_2();
  __swift_project_value_buffer(v34, (uint64_t)&static Logger.conversationControls);
  OUTLINED_FUNCTION_51_44((uint64_t)v10, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 16));
  Logger.logObject.getter();
  v35 = OUTLINED_FUNCTION_369();
  if (OUTLINED_FUNCTION_43_7(v35))
  {
    v36 = (_DWORD *)OUTLINED_FUNCTION_105();
    v49[0] = OUTLINED_FUNCTION_105();
    *v36 = 136315138;
    v37 = UUID.uuidString.getter();
    v48[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v37, v38, v49);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_27();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    OUTLINED_FUNCTION_30_63(&dword_1BD004000, v39, v40, "Received request to dismiss previously dismissed notice: %s");
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);

LABEL_21:
  OUTLINED_FUNCTION_52_1();
}

id ConversationControlsNoticeCoordinator.conversationManager.getter()
{
  uint64_t v0;

  return objc_retain(*(id *)(v0
                           + OBJC_IVAR____TtC15ConversationKit37ConversationControlsNoticeCoordinator_conversationManager));
}

uint64_t key path setter for ConversationControlsNoticeCoordinator.unblockTimer : ConversationControlsNoticeCoordinator(id *a1, _QWORD **a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x78);
  v4 = *a1;
  return v3(v2);
}

void *ConversationControlsNoticeCoordinator.unblockTimer.getter()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;

  v1 = (void **)(v0 + OBJC_IVAR____TtC15ConversationKit37ConversationControlsNoticeCoordinator_unblockTimer);
  OUTLINED_FUNCTION_2_0();
  v2 = *v1;
  v3 = v2;
  return v2;
}

void ConversationControlsNoticeCoordinator.unblockTimer.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;

  v3 = (void **)(v1 + OBJC_IVAR____TtC15ConversationKit37ConversationControlsNoticeCoordinator_unblockTimer);
  OUTLINED_FUNCTION_2_0();
  v4 = *v3;
  *v3 = a1;

  OUTLINED_FUNCTION_32();
}

uint64_t (*ConversationControlsNoticeCoordinator.unblockTimer.modify())()
{
  OUTLINED_FUNCTION_2_0();
  return CallRecordingPillViewController.cancellable.modify;
}

uint64_t key path getter for ConversationControlsNoticeCoordinator.activeNotice : ConversationControlsNoticeCoordinator(_QWORD **a1)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x88))();
}

uint64_t key path setter for ConversationControlsNoticeCoordinator.activeNotice : ConversationControlsNoticeCoordinator(uint64_t a1, _QWORD **a2)
{
  _BYTE v4[40];

  outlined init with copy of VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>(a1, (uint64_t)v4, (uint64_t *)&demangling cache variable for type metadata for Notice?);
  return (*(uint64_t (**)(_BYTE *))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x90))(v4);
}

void ConversationControlsNoticeCoordinator.activeNotice.didset()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  double v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;
  __int128 aBlock;
  void (*v13)(uint64_t, void *);
  void *v14;
  void (*v15)(uint64_t);
  uint64_t v16;
  _QWORD v17[3];
  uint64_t v18;
  uint64_t v19;

  v1 = v0;
  v2 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v3 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
  objc_msgSend(v3, sel_invalidate);

  (*(void (**)(__int128 *__return_ptr))((*v2 & *v1) + 0x88))(&aBlock);
  if (v14)
  {
    outlined init with take of Notice(&aBlock, (uint64_t)v17);
    v4 = v18;
    v5 = v19;
    __swift_project_boxed_opaque_existential_1(v17, v18);
    v6 = (*(double (**)(uint64_t, uint64_t))(v5 + 48))(v4, v5);
    if (one-time initialization token for shared != -1)
      swift_once();
    v7 = v6 + (*(double (**)(void))(*(_QWORD *)static Defaults.shared + 1000))();
    v8 = (void *)objc_opt_self();
    v9 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v15 = partial apply for closure #1 in ConversationControlsNoticeCoordinator.activeNotice.didset;
    v16 = v9;
    *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
    *((_QWORD *)&aBlock + 1) = 1107296256;
    v13 = thunk for @escaping @callee_guaranteed @Sendable (@guaranteed NSTimer) -> ();
    v14 = &block_descriptor_89;
    v10 = _Block_copy(&aBlock);
    swift_release();
    v11 = objc_msgSend(v8, sel_scheduledTimerWithTimeInterval_repeats_block_, 0, v10, v7);
    _Block_release(v10);
    (*(void (**)(id))((*v2 & *v1) + 0x78))(v11);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  }
  else
  {
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)&aBlock, (uint64_t *)&demangling cache variable for type metadata for Notice?);
  }
}

void closure #1 in ConversationControlsNoticeCoordinator.activeNotice.didset(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x1C3B752C0](v2);
  if (v3)
  {
    v4 = (_QWORD *)v3;
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v5 = type metadata accessor for Logger();
    __swift_project_value_buffer(v5, (uint64_t)&static Logger.conversationControls);
    v6 = Logger.logObject.getter();
    v7 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v8 = 0;
      _os_log_impl(&dword_1BD004000, v6, v7, "unblockTimer fired, pop next notice", v8, 2u);
      MEMORY[0x1C3B751B8](v8, -1, -1);
    }

    ConversationControlsNoticeCoordinator.pop()();
    (*(void (**)(uint64_t *))((*MEMORY[0x1E0DEEDD8] & *v4) + 0x90))(&v9);

  }
}

void ConversationControlsNoticeCoordinator.pop()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(__int128 *__return_ptr);
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(void);
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  Class isa;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t i;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  os_log_type_t v39;
  _DWORD *v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE v47[32];
  uint64_t v48[5];
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;

  OUTLINED_FUNCTION_93();
  v2 = v1;
  v3 = OUTLINED_FUNCTION_33_0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_77();
  v7 = v6 - v5;
  OUTLINED_FUNCTION_68_26();
  v8(&v49);
  v46 = v2;
  if (*((_QWORD *)&v50 + 1))
  {
    OUTLINED_FUNCTION_50_43();
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v9 = OUTLINED_FUNCTION_17_2();
    __swift_project_value_buffer(v9, (uint64_t)&static Logger.conversationControls);
    OUTLINED_FUNCTION_40_55();
    v10 = Logger.logObject.getter();
    v11 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)OUTLINED_FUNCTION_105();
      v48[0] = OUTLINED_FUNCTION_105();
      *(_DWORD *)v12 = 136315138;
      v14 = *((_QWORD *)&v50 + 1);
      v13 = v51;
      OUTLINED_FUNCTION_184(&v49);
      v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 120))(v14, v13);
      v17 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v15, v16, v48);
      OUTLINED_FUNCTION_48_47(v17);
      OUTLINED_FUNCTION_30_66();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_32_52();
      OUTLINED_FUNCTION_48(&dword_1BD004000, v10, v11, "Popping next notice, dismiss active notice: %s", v12);
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_60();
    }
    OUTLINED_FUNCTION_32_52();

    v18 = v54;
    OUTLINED_FUNCTION_565(&v52);
    v19 = (void (*)(void))OUTLINED_FUNCTION_36_4(*(uint64_t (**)(uint64_t, uint64_t))(v18 + 184));
    if (v19)
    {
      v20 = (uint64_t)v19;
      v19();
      outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v20);
    }
    v21 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit37ConversationControlsNoticeCoordinator_conversationManager);
    v22 = v53;
    v23 = v54;
    OUTLINED_FUNCTION_184(&v52);
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v23);
    isa = UUID._bridgeToObjectiveC()().super.isa;
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
    objc_msgSend(v21, sel_removeConversationNoticeWithUUID_, isa);

    OUTLINED_FUNCTION_100_2();
  }
  else
  {
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)&v49, (uint64_t *)&demangling cache variable for type metadata for Notice?);
  }
  ConversationControlsNoticeCoordinator.noticeQueue.getter();
  swift_bridgeObjectRetain();
  specialized _copyCollectionToContiguousArray<A>(_:)();
  v26 = v25;
  OUTLINED_FUNCTION_27();
  *(_QWORD *)&v52 = v26;
  specialized MutableCollection<>.sort(by:)((uint64_t *)&v52);
  OUTLINED_FUNCTION_27();
  v27 = (void *)v52;
  v28 = *(_QWORD *)(v52 + 16);
  if (v28)
  {
    for (i = 0; v28 != i; ++i)
    {
      ConversationControlsNoticeCoordinator.noticeQueue.modify(v48);
      specialized Dictionary.subscript.modify();
      v32 = *(_QWORD *)(v31 + 24);
      if (v32)
      {
        v33 = *(_QWORD *)(v31 + 32);
        OUTLINED_FUNCTION_66_29(v30, v31);
        (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v33 + 32))(&v49, v32, v33);
        OUTLINED_FUNCTION_43_55((uint64_t)v47);
        OUTLINED_FUNCTION_42_49((uint64_t)v48);
        if (*((_QWORD *)&v50 + 1))
        {
          OUTLINED_FUNCTION_11_0();
          OUTLINED_FUNCTION_50_43();
          if (one-time initialization token for conversationControls != -1)
            swift_once();
          v38 = OUTLINED_FUNCTION_17_2();
          __swift_project_value_buffer(v38, (uint64_t)&static Logger.conversationControls);
          OUTLINED_FUNCTION_40_55();
          Logger.logObject.getter();
          v39 = OUTLINED_FUNCTION_369();
          if (OUTLINED_FUNCTION_43_7(v39))
          {
            v40 = (_DWORD *)OUTLINED_FUNCTION_105();
            v48[0] = OUTLINED_FUNCTION_105();
            *v40 = 136315138;
            v41 = OUTLINED_FUNCTION_5_120(&v49);
            v43 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v41, v42, v48);
            OUTLINED_FUNCTION_48_47(v43);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            OUTLINED_FUNCTION_27();
            OUTLINED_FUNCTION_32_52();
            OUTLINED_FUNCTION_30_63(&dword_1BD004000, v44, v45, "Popped next notice: %s");
            OUTLINED_FUNCTION_21();
            OUTLINED_FUNCTION_60();
          }
          OUTLINED_FUNCTION_32_52();

          outlined init with take of Notice(&v52, v46);
          goto LABEL_27;
        }
      }
      else
      {
        OUTLINED_FUNCTION_43_55((uint64_t)v47);
        OUTLINED_FUNCTION_42_49((uint64_t)v48);
        v49 = 0u;
        v50 = 0u;
        v51 = 0;
      }
      OUTLINED_FUNCTION_13_9((uint64_t)&v49);
    }
  }
  OUTLINED_FUNCTION_11_0();
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v34 = OUTLINED_FUNCTION_17_2();
  __swift_project_value_buffer(v34, (uint64_t)&static Logger.conversationControls);
  v35 = Logger.logObject.getter();
  v36 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_5_3(v36))
  {
    v37 = (uint8_t *)OUTLINED_FUNCTION_105();
    *(_WORD *)v37 = 0;
    _os_log_impl(&dword_1BD004000, v35, (os_log_type_t)v27, "No more notices to retrieve", v37, 2u);
    OUTLINED_FUNCTION_60();
  }

  *(_QWORD *)(v46 + 32) = 0;
  *(_OWORD *)v46 = 0u;
  *(_OWORD *)(v46 + 16) = 0u;
LABEL_27:
  OUTLINED_FUNCTION_52_1();
}

uint64_t ConversationControlsNoticeCoordinator.activeNotice.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  OUTLINED_FUNCTION_11_0();
  return swift_release();
}

void ConversationControlsNoticeCoordinator.activeNotice.setter(uint64_t a1)
{
  void *v1;
  id v3;
  _BYTE v4[40];

  swift_getKeyPath();
  swift_getKeyPath();
  outlined init with copy of VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>(a1, (uint64_t)v4, (uint64_t *)&demangling cache variable for type metadata for Notice?);
  v3 = v1;
  static Published.subscript.setter();
  ConversationControlsNoticeCoordinator.activeNotice.didset();
  OUTLINED_FUNCTION_13_9(a1);
}

void ConversationControlsNoticeCoordinator.activeNotice.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[10] = v1;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_18();
}

void ConversationControlsNoticeCoordinator.activeNotice.modify(uint64_t *a1, char a2)
{
  void *v2;

  v2 = (void *)*a1;
  if ((a2 & 1) != 0)
  {
    outlined init with copy of VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>(*a1, (uint64_t)v2 + 40, (uint64_t *)&demangling cache variable for type metadata for Notice?);
    ConversationControlsNoticeCoordinator.activeNotice.setter((uint64_t)v2 + 40);
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v2, (uint64_t *)&demangling cache variable for type metadata for Notice?);
  }
  else
  {
    ConversationControlsNoticeCoordinator.activeNotice.setter(*a1);
  }
  free(v2);
}

uint64_t key path setter for ConversationControlsNoticeCoordinator.$activeNotice : ConversationControlsNoticeCoordinator(uint64_t a1, _QWORD **a2)
{
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Notice?>.Publisher);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v8 + 16))(v7, a1, v5);
  return (*(uint64_t (**)(char *))((*MEMORY[0x1E0DEEDD8] & **a2) + 0xA8))(v7);
}

void ConversationControlsNoticeCoordinator.$activeNotice.getter()
{
  OUTLINED_FUNCTION_2_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Notice?>);
  Published.projectedValue.getter();
  swift_endAccess();
  OUTLINED_FUNCTION_32();
}

uint64_t ConversationControlsNoticeCoordinator.$activeNotice.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Notice?>.Publisher);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_77();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v5 - v4, a1, v2);
  OUTLINED_FUNCTION_2_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Notice?>);
  Published.projectedValue.setter();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

void ConversationControlsNoticeCoordinator.$activeNotice.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;

  v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Notice?>.Publisher);
  v3[4] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[5] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[6] = malloc(v6);
  v3[7] = malloc(v6);
  OUTLINED_FUNCTION_2_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Notice?>);
  Published.projectedValue.getter();
  swift_endAccess();
  OUTLINED_FUNCTION_18();
}

void ConversationControlsNoticeCoordinator.$activeNotice.modify(uint64_t a1, char a2)
{
  _QWORD *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 48);
  v4 = *(void **)(*(_QWORD *)a1 + 56);
  if ((a2 & 1) != 0)
  {
    v5 = v2[4];
    v6 = v2[5];
    (*(void (**)(_QWORD, void *, uint64_t))(v6 + 16))(*(_QWORD *)(*(_QWORD *)a1 + 48), v4, v5);
    ConversationControlsNoticeCoordinator.$activeNotice.setter((uint64_t)v3);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    ConversationControlsNoticeCoordinator.$activeNotice.setter(*(_QWORD *)(*(_QWORD *)a1 + 56));
  }
  free(v4);
  free(v3);
  free(v2);
}

uint64_t ConversationControlsNoticeCoordinator.noticeQueue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OBJC_IVAR____TtC15ConversationKit37ConversationControlsNoticeCoordinator____lazy_storage___noticeQueue;
  if (*(_QWORD *)(v0
                 + OBJC_IVAR____TtC15ConversationKit37ConversationControlsNoticeCoordinator____lazy_storage___noticeQueue))
  {
    v2 = *(_QWORD *)(v0
                   + OBJC_IVAR____TtC15ConversationKit37ConversationControlsNoticeCoordinator____lazy_storage___noticeQueue);
  }
  else
  {
    v2 = closure #1 in ConversationControlsNoticeCoordinator.noticeQueue.getter();
    *(_QWORD *)(v0 + v1) = v2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t closure #1 in ConversationControlsNoticeCoordinator.noticeQueue.getter()
{
  uint64_t inited;
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(NoticePriority, NoticeQueue)>);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BD6446F0;
  *(_BYTE *)(inited + 32) = 0;
  *(_QWORD *)(inited + 64) = &type metadata for CoalescingNoticeQueue;
  *(_QWORD *)(inited + 72) = &protocol witness table for CoalescingNoticeQueue;
  v1 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(inited + 40) = MEMORY[0x1E0DEE9D8];
  *(_BYTE *)(inited + 80) = 1;
  *(_QWORD *)(inited + 112) = &type metadata for ReplacingNoticeQueue;
  *(_QWORD *)(inited + 120) = &protocol witness table for ReplacingNoticeQueue;
  *(_QWORD *)(inited + 88) = v1;
  *(_BYTE *)(inited + 128) = 2;
  *(_QWORD *)(inited + 160) = &type metadata for CoalescingNoticeQueue;
  *(_QWORD *)(inited + 168) = &protocol witness table for CoalescingNoticeQueue;
  *(_QWORD *)(inited + 136) = v1;
  *(_BYTE *)(inited + 176) = 3;
  *(_QWORD *)(inited + 208) = &type metadata for CoalescingNoticeQueue;
  *(_QWORD *)(inited + 216) = &protocol witness table for CoalescingNoticeQueue;
  *(_QWORD *)(inited + 184) = v1;
  *(_BYTE *)(inited + 224) = 4;
  *(_QWORD *)(inited + 256) = &type metadata for CoalescingNoticeQueue;
  *(_QWORD *)(inited + 264) = &protocol witness table for CoalescingNoticeQueue;
  *(_QWORD *)(inited + 232) = v1;
  *(_BYTE *)(inited + 272) = 5;
  *(_QWORD *)(inited + 304) = &type metadata for ReplacingNoticeQueue;
  *(_QWORD *)(inited + 312) = &protocol witness table for ReplacingNoticeQueue;
  *(_QWORD *)(inited + 280) = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NoticeQueue);
  lazy protocol witness table accessor for type NoticePriority and conformance NoticePriority();
  return Dictionary.init(dictionaryLiteral:)();
}

uint64_t ConversationControlsNoticeCoordinator.noticeQueue.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit37ConversationControlsNoticeCoordinator____lazy_storage___noticeQueue) = a1;
  return swift_bridgeObjectRelease();
}

void (*ConversationControlsNoticeCoordinator.noticeQueue.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = ConversationControlsNoticeCoordinator.noticeQueue.getter();
  return ConversationControlsNoticeCoordinator.noticeQueue.modify;
}

void ConversationControlsNoticeCoordinator.noticeQueue.modify(uint64_t *a1, char a2)
{
  uint64_t v2;

  if ((a2 & 1) != 0)
  {
    v2 = swift_bridgeObjectRetain();
    ConversationControlsNoticeCoordinator.noticeQueue.setter(v2);
    OUTLINED_FUNCTION_32_2();
  }
  else
  {
    ConversationControlsNoticeCoordinator.noticeQueue.setter(*a1);
    OUTLINED_FUNCTION_0();
  }
}

id ConversationControlsNoticeCoordinator.init()()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  char *v8;
  id v9;
  id v10;
  char *v11;
  objc_super v13;
  char v14[40];
  _OWORD v15[2];
  uint64_t v16;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Notice?>);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_77();
  v5 = v4 - v3;
  v6 = OBJC_IVAR____TtC15ConversationKit37ConversationControlsNoticeCoordinator_conversationManager;
  v7 = (void *)objc_opt_self();
  v8 = v0;
  v9 = objc_msgSend(v7, sel_sharedInstance);
  v10 = objc_msgSend(v9, sel_conversationManager);

  *(_QWORD *)&v0[v6] = v10;
  *(_QWORD *)&v8[OBJC_IVAR____TtC15ConversationKit37ConversationControlsNoticeCoordinator_unblockTimer] = 0;
  v11 = &v8[OBJC_IVAR____TtC15ConversationKit37ConversationControlsNoticeCoordinator__activeNotice];
  v16 = 0;
  memset(v15, 0, sizeof(v15));
  outlined init with copy of VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>((uint64_t)v15, (uint64_t)v14, (uint64_t *)&demangling cache variable for type metadata for Notice?);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Notice?);
  Published.init(initialValue:)();
  OUTLINED_FUNCTION_13_9((uint64_t)v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 32))(v11, v5, v1);
  *(_QWORD *)&v8[OBJC_IVAR____TtC15ConversationKit37ConversationControlsNoticeCoordinator____lazy_storage___noticeQueue] = 0;

  v13.receiver = v8;
  v13.super_class = (Class)type metadata accessor for ConversationControlsNoticeCoordinator();
  return objc_msgSendSuper2(&v13, sel_init);
}

id ConversationControlsNoticeCoordinator.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ConversationControlsNoticeCoordinator();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t ConversationControlsNoticeCoordinator.peek()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t i;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  _BYTE v12[32];
  uint64_t v13[4];
  __int128 v14;
  __int128 v15;
  uint64_t v16;

  ConversationControlsNoticeCoordinator.noticeQueue.getter();
  swift_bridgeObjectRetain();
  specialized _copyCollectionToContiguousArray<A>(_:)();
  v3 = v2;
  OUTLINED_FUNCTION_27();
  *(_QWORD *)&v14 = v3;
  specialized MutableCollection<>.sort(by:)((uint64_t *)&v14);
  OUTLINED_FUNCTION_27();
  v4 = *(_QWORD *)(v14 + 16);
  if (v4)
  {
    v11 = a1;
    for (i = 0; i != v4; ++i)
    {
      ConversationControlsNoticeCoordinator.noticeQueue.modify(v13);
      specialized Dictionary.subscript.modify();
      v8 = *(_QWORD *)(v7 + 24);
      if (v8)
      {
        v9 = *(_QWORD *)(v7 + 32);
        OUTLINED_FUNCTION_66_29(v6, v7);
        (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v9 + 24))(&v14, v8, v9);
        OUTLINED_FUNCTION_43_55((uint64_t)v12);
        OUTLINED_FUNCTION_42_49((uint64_t)v13);
        if (*((_QWORD *)&v15 + 1))
        {
          OUTLINED_FUNCTION_11_0();
          return outlined init with take of Notice(&v14, v11);
        }
      }
      else
      {
        OUTLINED_FUNCTION_43_55((uint64_t)v12);
        OUTLINED_FUNCTION_42_49((uint64_t)v13);
        v14 = 0u;
        v15 = 0u;
        v16 = 0;
      }
      OUTLINED_FUNCTION_13_9((uint64_t)&v14);
    }
    result = OUTLINED_FUNCTION_11_0();
    a1 = v11;
  }
  else
  {
    result = OUTLINED_FUNCTION_11_0();
  }
  *(_QWORD *)(a1 + 32) = 0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t specialized _merge<A>(low:mid:high:buffer:by:)(unsigned __int8 *a1, unsigned __int8 *a2, unint64_t a3, unsigned __int8 *a4)
{
  unsigned __int8 *v4;
  unsigned __int8 *v6;
  unsigned __int8 *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 *v10;
  unsigned int v12;
  BOOL v13;
  unsigned __int8 *v16;
  unsigned __int8 *v17;
  unsigned int v18;
  BOOL v19;
  BOOL v20;

  v4 = a4;
  v6 = a2;
  v7 = a1;
  v8 = a2 - a1;
  v9 = a3 - (_QWORD)a2;
  if (a2 - a1 >= (uint64_t)(a3 - (_QWORD)a2))
  {
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(a2, a3 - (_QWORD)a2, a4);
    v10 = &v4[v9];
    if (v7 >= v6 || v9 < 1)
      goto LABEL_39;
    v16 = (unsigned __int8 *)(a3 - 1);
    while (1)
    {
      v17 = v16 + 1;
      v18 = *(v6 - 1);
      if (*(v10 - 1) >= v18)
      {
        v20 = v17 != v10 || v16 >= v10;
        LOBYTE(v18) = *--v10;
        if (!v20)
          goto LABEL_35;
      }
      else
      {
        v19 = v17 != v6 || v16 >= v6;
        --v6;
        if (!v19)
          goto LABEL_35;
      }
      *v16 = v18;
LABEL_35:
      --v16;
      if (v6 <= v7 || v10 <= v4)
        goto LABEL_39;
    }
  }
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, a2 - a1, a4);
  v10 = &v4[v8];
  if ((unint64_t)v6 < a3 && v8 >= 1)
  {
    while (1)
    {
      v12 = *v6;
      if (v12 < *v4)
        break;
      LOBYTE(v12) = *v4;
      v13 = v7 == v4++;
      if (!v13)
        goto LABEL_11;
LABEL_12:
      ++v7;
      if (v4 >= v10 || (unint64_t)v6 >= a3)
        goto LABEL_17;
    }
    v13 = v7 == v6++;
    if (v13)
      goto LABEL_12;
LABEL_11:
    *v7 = v12;
    goto LABEL_12;
  }
LABEL_17:
  v6 = v7;
LABEL_39:
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(v4, v10 - v4, v6);
  return 1;
}

uint64_t (*specialized Dictionary._Variant.subscript.modify(_QWORD *a1, char a2))()
{
  _QWORD *v4;
  char isUniquelyReferenced_nonNull_native;

  v4 = malloc(0x50uLL);
  *a1 = v4;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v4[8] = specialized Dictionary._Variant.asNative.modify(v4);
  v4[9] = specialized _NativeDictionary.subscript.modify((uint64_t)(v4 + 4), a2 & 1, isUniquelyReferenced_nonNull_native);
  return Dictionary._Variant.subscript.modifyspecialized ;
}

void (*specialized _NativeDictionary.subscript.modify(_QWORD *a1, uint64_t a2, char a3))(uint64_t *a1)
{
  uint64_t *v3;
  uint64_t *v4;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  _BOOL8 v13;
  Swift::Int v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  void (*result)(uint64_t *);

  v4 = v3;
  v8 = malloc(0x40uLL);
  *a1 = v8;
  v8[5] = v4;
  *((_BYTE *)v8 + 56) = a2;
  v9 = *v4;
  v10 = specialized __RawDictionaryStorage.find<A>(_:)(a2);
  *((_BYTE *)v8 + 57) = v11 & 1;
  v12 = *(_QWORD *)(v9 + 16);
  v13 = (v11 & 1) == 0;
  v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
    goto LABEL_10;
  }
  v15 = v10;
  v16 = v11;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<NoticePriority, NoticeQueue>);
  if (_NativeDictionary.ensureUnique(isUnique:capacity:)(a3 & 1, v14))
  {
    v17 = specialized __RawDictionaryStorage.find<A>(_:)(a2);
    if ((v16 & 1) == (v18 & 1))
    {
      v15 = v17;
      goto LABEL_5;
    }
LABEL_10:
    result = (void (*)(uint64_t *))KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
LABEL_5:
  v8[6] = v15;
  if ((v16 & 1) != 0)
  {
    outlined init with take of Notice((__int128 *)(*(_QWORD *)(*v4 + 56) + 40 * v15), (uint64_t)v8);
  }
  else
  {
    v8[4] = 0;
    *(_OWORD *)v8 = 0u;
    *((_OWORD *)v8 + 1) = 0u;
  }
  return _NativeDictionary.subscript.modifyspecialized ;
}

void _NativeDictionary.subscript.modifyspecialized (uint64_t *a1)
{
  void *v1;

  v1 = (void *)*a1;
  specialized $defer #1 <A, B>() in _NativeDictionary.subscript.modify(*a1, *(_BYTE *)(*a1 + 57), *(uint64_t **)(*a1 + 40), *(_QWORD *)(*a1 + 48), *(unsigned __int8 *)(*a1 + 56));
  outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v1, &demangling cache variable for type metadata for NoticeQueue?);
  OUTLINED_FUNCTION_11(v1);
}

void (*specialized _NativeDictionary.subscript.modify(uint64_t a1, char a2, char a3))(uint64_t a1)
{
  _QWORD *v3;
  _QWORD *v4;
  char v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  _BOOL8 v12;
  Swift::Int v13;
  unint64_t v14;
  char v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  void (*result)(uint64_t);

  v4 = v3;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 24) = a2;
  v7 = a2 & 1;
  v8 = *v3;
  v9 = specialized __RawDictionaryStorage.find<A>(_:)(a2 & 1);
  *(_BYTE *)(a1 + 25) = v10 & 1;
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v10 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_10;
  }
  v14 = v9;
  v15 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<SharePlayDiscoverabilityType, [String : Application]>);
  if (_NativeDictionary.ensureUnique(isUnique:capacity:)(a3 & 1, v13))
  {
    v16 = specialized __RawDictionaryStorage.find<A>(_:)(v7);
    if ((v15 & 1) == (v17 & 1))
    {
      v14 = v16;
      goto LABEL_5;
    }
LABEL_10:
    result = (void (*)(uint64_t))KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
LABEL_5:
  *(_QWORD *)(a1 + 16) = v14;
  if ((v15 & 1) != 0)
    v18 = *(_QWORD *)(*(_QWORD *)(*v4 + 56) + 8 * v14);
  else
    v18 = 0;
  *(_QWORD *)a1 = v18;
  return _NativeDictionary.subscript.modifyspecialized ;
}

uint64_t (*specialized Dictionary._Variant.asNative.modify(_QWORD *a1))(uint64_t result)
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = v1;
  *v1 = 0x8000000000000000;
  return Dictionary._Variant.asNative.modifyspecialized ;
}

void specialized $defer #1 <A, B>() in _NativeDictionary.subscript.modify(uint64_t a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5)
{
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  __int128 v12[2];

  outlined init with copy of VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>(a1, (uint64_t)&v10, &demangling cache variable for type metadata for NoticeQueue?);
  if (v11)
  {
    outlined init with take of Notice(&v10, (uint64_t)v12);
    v9 = *a3;
    if ((a2 & 1) != 0)
    {
      outlined init with take of Notice(v12, *(_QWORD *)(v9 + 56) + 40 * a4);
    }
    else
    {
      outlined init with take of Notice(v12, (uint64_t)&v10);
      specialized _NativeDictionary._insert(at:key:value:)(a4, a5, (uint64_t)&v10, v9);
    }
  }
  else
  {
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)&v10, &demangling cache variable for type metadata for NoticeQueue?);
    if ((a2 & 1) != 0)
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NoticeQueue);
      lazy protocol witness table accessor for type NoticePriority and conformance NoticePriority();
      _NativeDictionary._delete(at:)();
    }
  }
}

void sub_1BD474274(_QWORD **a1)
{
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x88))();
  OUTLINED_FUNCTION_0();
}

uint64_t type metadata accessor for ConversationControlsNoticeCoordinator()
{
  uint64_t result;

  result = type metadata singleton initialization cache for ConversationControlsNoticeCoordinator;
  if (!type metadata singleton initialization cache for ConversationControlsNoticeCoordinator)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BD4742E4(_QWORD **a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x70))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD474324(_QWORD **a1)
{
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0xA0))();
  OUTLINED_FUNCTION_0();
}

uint64_t ObjC metadata update function for ConversationControlsNoticeCoordinator()
{
  return type metadata accessor for ConversationControlsNoticeCoordinator();
}

void type metadata completion function for ConversationControlsNoticeCoordinator()
{
  unint64_t v0;

  type metadata accessor for Published<Notice?>();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for ConversationControlsNoticeCoordinator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ConversationControlsNoticeCoordinator.unblockTimer.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of ConversationControlsNoticeCoordinator.unblockTimer.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of ConversationControlsNoticeCoordinator.unblockTimer.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of ConversationControlsNoticeCoordinator.activeNotice.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of ConversationControlsNoticeCoordinator.activeNotice.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of ConversationControlsNoticeCoordinator.activeNotice.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of ConversationControlsNoticeCoordinator.$activeNotice.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of ConversationControlsNoticeCoordinator.$activeNotice.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of ConversationControlsNoticeCoordinator.$activeNotice.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

void type metadata accessor for Published<Notice?>()
{
  unint64_t v0;
  uint64_t v1;

  if (!lazy cache variable for type metadata for Published<Notice?>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&demangling cache variable for type metadata for Notice?);
    v0 = type metadata accessor for Published();
    if (!v1)
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for Published<Notice?>);
  }
}

unint64_t lazy protocol witness table accessor for type SharePlayDiscoverabilityType and conformance SharePlayDiscoverabilityType()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SharePlayDiscoverabilityType and conformance SharePlayDiscoverabilityType;
  if (!lazy protocol witness table cache variable for type SharePlayDiscoverabilityType and conformance SharePlayDiscoverabilityType)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for SharePlayDiscoverabilityType, &type metadata for SharePlayDiscoverabilityType);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SharePlayDiscoverabilityType and conformance SharePlayDiscoverabilityType);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SharePlayDiscoverabilityType and conformance SharePlayDiscoverabilityType;
  if (!lazy protocol witness table cache variable for type SharePlayDiscoverabilityType and conformance SharePlayDiscoverabilityType)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for SharePlayDiscoverabilityType, &type metadata for SharePlayDiscoverabilityType);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SharePlayDiscoverabilityType and conformance SharePlayDiscoverabilityType);
  }
  return result;
}

uint64_t sub_1BD4745C0()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void partial apply for closure #1 in ConversationControlsNoticeCoordinator.activeNotice.didset(uint64_t a1)
{
  uint64_t v1;

  closure #1 in ConversationControlsNoticeCoordinator.activeNotice.didset(a1, v1);
}

id EffectsLayoutController.__allocating_init(containingViewController:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return EffectsLayoutController.init(containingViewController:)(a1);
}

id EffectsLayoutController.init(containingViewController:)(void *a1)
{
  void *v1;
  id v3;
  objc_super v5;

  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for EffectsLayoutController();
  v3 = objc_msgSendSuper2(&v5, sel_init);

  return v3;
}

uint64_t type metadata accessor for EffectsLayoutController()
{
  return objc_opt_self();
}

BOOL EffectsLayoutController.shouldAlwaysPresentExpandedApps(for:)()
{
  id v0;
  id v1;
  uint64_t v2;
  id v4;
  id v5;

  v0 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
  v1 = objc_msgSend(v0, sel_userInterfaceIdiom);

  if (v1 == (id)1)
    return 1;
  v4 = OUTLINED_FUNCTION_123(v2, sel_currentDevice);
  v5 = objc_msgSend(v4, sel_userInterfaceIdiom);

  return v5 == (id)5;
}

void EffectsLayoutController.effectBrowserViewController(_:presentExpandedAppViewController:animated:completion:)(void *a1, void *a2, int a3, void (*a4)(void), uint64_t a5)
{
  uint64_t v5;
  void *v6;
  uint64_t v12;
  void *v13;
  id v14;
  double v15;
  double v16;
  double v17;
  double v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  void *v24;
  id v25;
  void *v26;
  id v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  id v32;
  double v33;
  id v34;
  void *v35;
  id v36;
  uint64_t v37;
  id v38;
  void *v39;
  id v40;
  char v41;
  double v42;
  id v43;
  double v44;
  uint64_t v45;
  id v46;
  id v47;
  id v48;
  uint64_t v49;
  id v50;
  void *v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  void *v66;
  void *v67;
  id v68;
  id v69;
  Class isa;
  void *v71;
  char aBlock;
  void *v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  id v79;
  id v80;
  void *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  id v85;
  id v86;
  uint64_t v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  int v98;
  double v99;

  if (a2)
  {
    v12 = MEMORY[0x1C3B752C0](v5 + OBJC_IVAR____TtC15ConversationKit23EffectsLayoutController_containingViewController);
    if (v12)
    {
      v13 = (void *)v12;
      v14 = a2;
      EffectsLayoutController.effectsBrowserSize(with:)();
      v16 = v15;
      v18 = v17;
      v19 = OUTLINED_FUNCTION_0_143();
      if (v19)
      {
        v20 = v19;
        objc_msgSend(v19, sel_setAlpha_, 0.0);

        v21 = OUTLINED_FUNCTION_0_143();
        if (v21)
        {
          v22 = v21;
          objc_msgSend(v21, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

          v23 = OUTLINED_FUNCTION_123((uint64_t)objc_msgSend(v13, sel_addChildViewController_, v14), sel_view);
          if (v23)
          {
            v24 = v23;
            v25 = OUTLINED_FUNCTION_0_143();
            if (v25)
            {
              v26 = v25;
              objc_msgSend(v24, sel_addSubview_, v25);

              objc_msgSend(v14, sel_didMoveToParentViewController_, v13);
              v27 = OUTLINED_FUNCTION_0_143();
              if (v27)
              {
                v28 = v27;
                LODWORD(v92) = a3;
                v90 = a5;
                v29 = objc_msgSend(v27, sel_centerXAnchor);

                v30 = OUTLINED_FUNCTION_10_107();
                if (v30)
                {
                  v31 = objc_msgSend(v30, sel_centerXAnchor);
                  OUTLINED_FUNCTION_11_42();
                  v32 = objc_msgSend(v29, sel_constraintEqualToAnchor_, v6);

                  type metadata accessor for UILayoutPriority(0);
                  lazy protocol witness table accessor for type UILayoutPriority and conformance UILayoutPriority();
                  static _UIKitNumericRawRepresentable.- infix(_:_:)();
                  LODWORD(v33) = v98;
                  objc_msgSend(v32, sel_setPriority_, v33);
                  v34 = OUTLINED_FUNCTION_0_143();
                  if (v34)
                  {
                    v35 = v34;
                    v36 = objc_msgSend(v34, sel_trailingAnchor);

                    v38 = OUTLINED_FUNCTION_123(v37, sel_view);
                    if (v38)
                    {
                      v39 = v38;
                      v40 = objc_msgSend(v38, sel_trailingAnchor);

                      v41 = static Platform.current.getter();
                      v42 = 0.0;
                      if (v41 == 1)
                      {
                        Layout.LocalParticipantViewCameraControls.init()();
                        static Platform.current.getter();
                        v42 = -v99;
                      }
                      v43 = objc_msgSend(v36, sel_constraintLessThanOrEqualToAnchor_constant_, v40, v42);

                      LODWORD(v44) = 1148846080;
                      objc_msgSend(v43, sel_setPriority_, v44);
                      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
                      v45 = OUTLINED_FUNCTION_15();
                      *(_OWORD *)(v45 + 16) = xmmword_1BD64C5C0;
                      *(_QWORD *)(v45 + 32) = v43;
                      *(_QWORD *)(v45 + 40) = v32;
                      v46 = v43;
                      v86 = v32;
                      v47 = OUTLINED_FUNCTION_0_143();
                      if (v47)
                      {
                        v48 = OUTLINED_FUNCTION_50_5(v47);
                        OUTLINED_FUNCTION_11_42();
                        v50 = OUTLINED_FUNCTION_123(v49, sel_view);
                        if (v50)
                        {
                          v51 = v50;
                          v52 = OUTLINED_FUNCTION_50_5(v50);

                          if (one-time initialization token for browserVerticalPadding != -1)
                            swift_once();
                          v53 = objc_msgSend(v43, sel_constraintGreaterThanOrEqualToAnchor_constant_, v52, *(double *)&static Layout.EffectsControlsView.browserVerticalPadding);

                          *(_QWORD *)(v45 + 48) = v53;
                          v54 = OUTLINED_FUNCTION_0_143();
                          if (v54)
                          {
                            v55 = objc_msgSend(v54, sel_bottomAnchor);
                            OUTLINED_FUNCTION_11_42();
                            v56 = OUTLINED_FUNCTION_10_107();
                            if (v56)
                            {
                              v57 = OUTLINED_FUNCTION_50_5(v56);
                              OUTLINED_FUNCTION_40_1();
                              v58 = objc_msgSend(v43, sel_constraintEqualToAnchor_constant_, a1, -*(double *)&static Layout.EffectsControlsView.browserVerticalPadding);

                              *(_QWORD *)(v45 + 56) = v58;
                              v59 = OUTLINED_FUNCTION_0_143();
                              if (v59)
                              {
                                v60 = objc_msgSend(v59, sel_widthAnchor);
                                OUTLINED_FUNCTION_40_1();
                                v61 = objc_msgSend(a1, sel_constraintEqualToConstant_, v16);

                                *(_QWORD *)(v45 + 64) = v61;
                                v62 = OUTLINED_FUNCTION_0_143();
                                if (v62)
                                {
                                  v63 = objc_msgSend(v62, sel_heightAnchor);
                                  OUTLINED_FUNCTION_40_1();
                                  v64 = objc_msgSend(a1, sel_constraintLessThanOrEqualToConstant_, v18);

                                  *(_QWORD *)(v45 + 72) = v64;
                                  v65 = OUTLINED_FUNCTION_0_143();
                                  if (v65)
                                  {
                                    v66 = v65;
                                    v67 = (void *)objc_opt_self();
                                    v68 = objc_msgSend(v66, sel_heightAnchor);

                                    v69 = objc_msgSend(v68, sel_constraintGreaterThanOrEqualToConstant_, v18 * 0.5);
                                    *(_QWORD *)(v45 + 80) = v69;
                                    specialized Array._endMutation()();
                                    type metadata accessor for NSLayoutConstraint();
                                    isa = Array._bridgeToObjectiveC()().super.isa;
                                    swift_bridgeObjectRelease();
                                    objc_msgSend(v67, sel_activateConstraints_, isa);

                                    if ((v92 & 1) != 0)
                                    {
                                      v71 = (void *)objc_opt_self();
                                      *(_QWORD *)(OUTLINED_FUNCTION_15() + 16) = v14;
                                      aBlock = MEMORY[0x1E0C809B0];
                                      v73 = OUTLINED_FUNCTION_7_114((uint64_t)thunk for @escaping @callee_guaranteed () -> (), v82, (uint64_t)v46, (uint64_t)v86, (uint64_t)a4, v90, v92, MEMORY[0x1E0C809B0], 1107296256, v94, v96);
                                      v74 = v14;
                                      swift_release();
                                      v75 = OUTLINED_FUNCTION_15();
                                      v76 = v89;
                                      *(_QWORD *)(v75 + 16) = v89;
                                      *(_QWORD *)(v75 + 24) = v91;
                                      v77 = OUTLINED_FUNCTION_7_114((uint64_t)thunk for @escaping @callee_guaranteed (@unowned Bool) -> (), v83, v84, v87, v89, v91, v93, aBlock, 1107296256, v95, v97);
                                      _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v76);
                                      swift_release();
                                      objc_msgSend(v71, sel_animateWithDuration_delay_options_animations_completion_, 0x10000, v73, v77, 0.3, 0.0);

                                      _Block_release(v77);
                                      _Block_release(v73);
LABEL_34:
                                      OUTLINED_FUNCTION_1_138();
                                      return;
                                    }
                                    v80 = OUTLINED_FUNCTION_0_143();
                                    if (v80)
                                    {
                                      v81 = v80;
                                      objc_msgSend(v80, sel_setAlpha_, 1.0);

                                      if (a4)
                                        a4();

                                      goto LABEL_34;
                                    }
                                    goto LABEL_50;
                                  }
LABEL_49:
                                  __break(1u);
LABEL_50:
                                  __break(1u);
                                  return;
                                }
LABEL_48:
                                __break(1u);
                                goto LABEL_49;
                              }
LABEL_47:
                              __break(1u);
                              goto LABEL_48;
                            }
LABEL_46:
                            __break(1u);
                            goto LABEL_47;
                          }
LABEL_45:
                          __break(1u);
                          goto LABEL_46;
                        }
LABEL_44:
                        __break(1u);
                        goto LABEL_45;
                      }
LABEL_43:
                      __break(1u);
                      goto LABEL_44;
                    }
LABEL_42:
                    __break(1u);
                    goto LABEL_43;
                  }
LABEL_41:
                  __break(1u);
                  goto LABEL_42;
                }
LABEL_40:
                __break(1u);
                goto LABEL_41;
              }
LABEL_39:
              __break(1u);
              goto LABEL_40;
            }
LABEL_38:
            __break(1u);
            goto LABEL_39;
          }
LABEL_37:
          __break(1u);
          goto LABEL_38;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      goto LABEL_37;
    }
    v78 = one-time initialization token for conversationKit;
    a2;
    if (v78 != -1)
      swift_once();
    static os_log_type_t.error.getter();
    os_log(_:dso:log:type:_:)();
    OUTLINED_FUNCTION_1_138();

  }
  else
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.error.getter();
    OUTLINED_FUNCTION_1_138();
    os_log(_:dso:log:type:_:)();
  }
}

void EffectsLayoutController.effectBrowserViewController(_:dismissExpandedAppViewController:animated:completion:)(uint64_t a1, void *a2, char a3, uint64_t (*a4)(id), uint64_t a5)
{
  _QWORD *v9;
  void *v10;
  char aBlock;
  void *v12;
  id v13;
  uint64_t v14;
  void *v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  if (a2)
  {
    v9 = (_QWORD *)OUTLINED_FUNCTION_15();
    v9[2] = a2;
    v9[3] = a4;
    v9[4] = a5;
    if ((a3 & 1) != 0)
    {
      v10 = (void *)objc_opt_self();
      *(_QWORD *)(OUTLINED_FUNCTION_15() + 16) = a2;
      aBlock = MEMORY[0x1E0C809B0];
      v12 = OUTLINED_FUNCTION_76_1((uint64_t)thunk for @escaping @callee_guaranteed () -> (), v18, (uint64_t)v20, MEMORY[0x1E0C809B0], 1107296256, v23, v25);
      v13 = a2;
      OUTLINED_FUNCTION_9_97();
      swift_release();
      v14 = OUTLINED_FUNCTION_15();
      *(_QWORD *)(v14 + 16) = partial apply for closure #1 in EffectsLayoutController.effectBrowserViewController(_:dismissExpandedAppViewController:animated:completion:);
      *(_QWORD *)(v14 + 24) = v9;
      v15 = OUTLINED_FUNCTION_76_1((uint64_t)thunk for @escaping @callee_guaranteed (@unowned Bool) -> (), v19, (uint64_t)v21, aBlock, 1107296256, v24, v26);
      swift_retain();
      swift_release();
      objc_msgSend(v10, sel_animateWithDuration_delay_options_animations_completion_, 0x20000, v12, v15, 0.3, 0.0);
      swift_release();
      _Block_release(v15);
      _Block_release(v12);
    }
    else
    {
      v22 = a2;
      OUTLINED_FUNCTION_9_97();
      v16 = objc_msgSend(v22, sel_view);
      if (v16)
      {
        v17 = v16;
        objc_msgSend(v16, sel_setAlpha_, 0.0);

        closure #1 in EffectsLayoutController.effectBrowserViewController(_:dismissExpandedAppViewController:animated:completion:)(v22, a4);
        swift_release();

      }
      else
      {

        __break(1u);
      }
    }
  }
}

id closure #1 in EffectsLayoutController.effectBrowserViewController(_:dismissExpandedAppViewController:animated:completion:)(void *a1, uint64_t (*a2)(id))
{
  id result;
  void *v5;

  result = objc_msgSend(a1, sel_view);
  if (result)
  {
    v5 = result;
    objc_msgSend(result, sel_removeFromSuperview);

    result = objc_msgSend(a1, sel_removeFromParentViewController);
    if (a2)
      return (id)a2(result);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void closure #1 in EffectsLayoutController.effectBrowserViewController(_:presentExpandedAppViewController:animated:completion:)(void *a1, double a2)
{
  id v3;
  id v4;

  v3 = objc_msgSend(a1, sel_view);
  if (v3)
  {
    v4 = v3;
    objc_msgSend(v3, sel_setAlpha_, a2);

  }
  else
  {
    __break(1u);
  }
}

void EffectsLayoutController.effectsBrowserSize(with:)()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  unsigned int v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  double v12;
  double v13;
  double v14;
  double v15;
  uint64_t v16;
  id v17;
  id v18;
  void *v19;
  double v20;
  CGFloat v21;
  double v22;
  CGFloat v23;
  double v24;
  CGFloat v25;
  double v26;
  CGFloat v27;
  CGRect v28;

  v1 = (void *)MEMORY[0x1C3B752C0](v0 + OBJC_IVAR____TtC15ConversationKit23EffectsLayoutController_containingViewController);
  if (!v1)
    return;
  v2 = v1;
  v3 = objc_msgSend(v1, sel_view);
  if (!v3)
  {
    __break(1u);
    goto LABEL_13;
  }
  v4 = v3;
  v5 = OUTLINED_FUNCTION_4_131();
  v6 = objc_msgSend(v4, sel_containsView_, v5);

  if (v6)
  {
    v8 = OUTLINED_FUNCTION_4_131();
    if (!v8)
    {
LABEL_14:
      __break(1u);
      goto LABEL_15;
    }
    v9 = v8;
    v10 = OUTLINED_FUNCTION_4_131();
    if (!v10)
    {
LABEL_15:
      __break(1u);
      return;
    }
    v11 = v10;
    objc_msgSend(v10, sel_frame);
    v13 = v12;
    v15 = v14;

    v17 = OUTLINED_FUNCTION_123(v16, sel_view);
    objc_msgSend(v9, sel_convertPoint_toView_, v17, v13, v15);

  }
  v18 = OUTLINED_FUNCTION_123(v7, sel_view);
  if (!v18)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v19 = v18;
  objc_msgSend(v18, sel_safeAreaInsetFrame);
  v21 = v20;
  v23 = v22;
  v25 = v24;
  v27 = v26;

  v28.origin.x = v21;
  v28.origin.y = v23;
  v28.size.width = v25;
  v28.size.height = v27;
  CGRectGetHeight(v28);
  if (one-time initialization token for browserVerticalPadding != -1)
    swift_once();

}

id EffectsLayoutController.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void EffectsLayoutController.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id EffectsLayoutController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EffectsLayoutController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BD475780()
{
  uint64_t v0;

  return swift_deallocObject();
}

void partial apply for closure #1 in EffectsLayoutController.effectBrowserViewController(_:presentExpandedAppViewController:animated:completion:)()
{
  uint64_t v0;

  closure #1 in EffectsLayoutController.effectBrowserViewController(_:presentExpandedAppViewController:animated:completion:)(*(void **)(v0 + 16), 1.0);
}

uint64_t sub_1BD4757C0()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in EffectsLayoutController.effectBrowserViewController(_:presentExpandedAppViewController:animated:completion:)()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t result;

  v1 = *(uint64_t (**)(void))(v0 + 16);
  if (v1)
    return v1();
  return result;
}

uint64_t sub_1BD475814()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 24))
    swift_release();
  return swift_deallocObject();
}

id partial apply for closure #1 in EffectsLayoutController.effectBrowserViewController(_:dismissExpandedAppViewController:animated:completion:)()
{
  uint64_t v0;

  return closure #1 in EffectsLayoutController.effectBrowserViewController(_:dismissExpandedAppViewController:animated:completion:)(*(void **)(v0 + 16), *(uint64_t (**)(id))(v0 + 24));
}

void partial apply for closure #2 in EffectsLayoutController.effectBrowserViewController(_:dismissExpandedAppViewController:animated:completion:)()
{
  uint64_t v0;

  closure #1 in EffectsLayoutController.effectBrowserViewController(_:presentExpandedAppViewController:animated:completion:)(*(void **)(v0 + 16), 0.0);
}

uint64_t sub_1BD475870()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t method lookup function for EffectsLayoutController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of EffectsLayoutController.__allocating_init(containingViewController:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of EffectsLayoutController.shouldAlwaysPresentExpandedApps(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of EffectsLayoutController.effectBrowserViewController(_:presentExpandedAppViewController:animated:completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of EffectsLayoutController.effectBrowserViewController(_:dismissExpandedAppViewController:animated:completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of EffectsLayoutController.expandedAppViewControllerSize(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t sub_1BD475918()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t partial apply for thunk for @escaping @callee_unowned @convention(block) () -> ()()
{
  uint64_t v0;

  return thunk for @escaping @callee_unowned @convention(block) () -> ()(*(_QWORD *)(v0 + 16));
}

void InCallControlsActivityCellViewModel.cellStyle.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_3_116();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_2_119();
  v1 = OUTLINED_FUNCTION_29_66();
  v3 = v2(v1);
  if (!v4)
  {
    OUTLINED_FUNCTION_5_123(v3, 0, (uint64_t (*)(_QWORD))type metadata accessor for InCallControlsActivityCellViewModel);
LABEL_8:
    OUTLINED_FUNCTION_35_2(v10, (uint64_t (*)(_QWORD))type metadata accessor for InCallControlsActivityCellViewModel);
    goto LABEL_9;
  }
  v5 = v3;
  v6 = v4;
  v7 = swift_bridgeObjectRelease();
  if ((v6 & 0x2000000000000000) != 0)
    v9 = HIBYTE(v6) & 0xF;
  else
    v9 = v5 & 0xFFFFFFFFFFFFLL;
  OUTLINED_FUNCTION_5_123(v7, v8, (uint64_t (*)(_QWORD))type metadata accessor for InCallControlsActivityCellViewModel);
  if (!v9)
    goto LABEL_8;
  InCallControlsActivityCellViewModel.shouldBeSmallCell.getter();
  OUTLINED_FUNCTION_35_2(v11, (uint64_t (*)(_QWORD))type metadata accessor for InCallControlsActivityCellViewModel);
LABEL_9:
  OUTLINED_FUNCTION_91();
}

uint64_t type metadata accessor for InCallControlsActivityCellViewModel()
{
  uint64_t result;

  result = type metadata singleton initialization cache for InCallControlsActivityCellViewModel;
  if (!type metadata singleton initialization cache for InCallControlsActivityCellViewModel)
    return swift_getSingletonMetadata();
  return result;
}

BOOL static InCallControlsActivityCellViewModel.CellStyle.== infix(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void InCallControlsActivityCellViewModel.activityMetadata.getter()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  id v36;
  Class isa;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  void *v51;
  void *v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;

  v2 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Collaboration?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_63_3();
  v4 = type metadata accessor for PersonNameComponents();
  v68 = *(_QWORD *)(v4 - 8);
  v69 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_1_1();
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v70 = (uint64_t)&v68 - v15;
  v16 = v0 + 2;
  v17 = v0[5];
  v18 = v0[6];
  OUTLINED_FUNCTION_4_0(v0 + 2);
  v19 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v18 + 16))(v17, v18);
  if (v19 == 2)
  {
    OUTLINED_FUNCTION_8_106();
    InCallControlsActivityCellViewModel.shouldCollaborationShowAppIcon.getter();
    if ((v22 & 1) == 0)
    {
      v23 = v0[5];
      v24 = v0[6];
      OUTLINED_FUNCTION_4_0(v16);
      (*(void (**)(uint64_t, uint64_t))(v24 + 112))(v23, v24);
      v25 = OUTLINED_FUNCTION_239_0();
      if (__swift_getEnumTagSinglePayload(v1, 1, v25) == 1)
      {
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v1, &demangling cache variable for type metadata for Collaboration?);
      }
      else
      {
        v45 = *(_QWORD *)(v1 + 88);
        v44 = *(_QWORD *)(v1 + 96);
        swift_bridgeObjectRetain();
        outlined destroy of AccountUpdateNotice(v1, type metadata accessor for Collaboration);
        if (v44)
        {
          if (one-time initialization token for shared != -1)
            swift_once();
          v46 = (id)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)static CollaborationImageFetcher.shared
                                                                + 136))(v45, v44);
          v22 = OUTLINED_FUNCTION_53();
          if (v46)
            goto LABEL_21;
        }
      }
    }
    OUTLINED_FUNCTION_59(v22, (unint64_t *)&lazy cache variable for type metadata for UIImageView);
    v48 = v2[5];
    v47 = v2[6];
    __swift_project_boxed_opaque_existential_1(v16, v48);
    v49 = (*(uint64_t (**)(uint64_t, uint64_t))(v47 + 32))(v48, v47);
    static UIImageView.appIcon(for:)(v49, v50);
    v52 = v51;
    OUTLINED_FUNCTION_133();
    if (!v52)
      goto LABEL_32;
    v46 = objc_msgSend(v52, sel_image);

    if (!v46)
      goto LABEL_32;
LABEL_21:
    v53 = OUTLINED_FUNCTION_48_1(objc_allocWithZone(MEMORY[0x1E0CC1178]), sel_initWithPlatformImage_);
    OUTLINED_FUNCTION_39_4((uint64_t)v53, sel_setImage_);

    goto LABEL_32;
  }
  if (v19 != 6)
  {
    OUTLINED_FUNCTION_8_106();
    goto LABEL_32;
  }
  v20 = OUTLINED_FUNCTION_3_116();
  OUTLINED_FUNCTION_39_60((uint64_t)v0 + *(int *)(v20 + 32), v21, &demangling cache variable for type metadata for Participant?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v9, &demangling cache variable for type metadata for Participant?);
    objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CC11A8]), sel_init);
    goto LABEL_32;
  }
  v26 = v70;
  outlined init with take of Participant((uint64_t)v9, v70);
  v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CC11A8]), sel_init);
  v28 = *(void **)(v26 + *(int *)(v10 + 28));
  if (v28)
  {
    v29 = v28;
    outlined bridged method (pb) of @objc TUHandle.siriDisplayName.getter(v29);
    if (v31)
    {
      v32 = v30;
      v33 = v31;
      if ((objc_msgSend(v29, sel_shouldHideContact) & 1) != 0)
      {
        v34 = v29;
        v35 = v32;
        swift_bridgeObjectRetain();
        PersonNameComponents.init()();
        PersonNameComponents.givenName.setter();
        OUTLINED_FUNCTION_50_2();
        if (one-time initialization token for initials != -1)
          swift_once();
        OUTLINED_FUNCTION_15_94();
        v36 = (id)static NSPersonNameComponentsFormatter.initials;
        isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
        v38 = OUTLINED_FUNCTION_48_1(v36, sel_stringFromPersonNameComponents_);

        v39 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        v41 = v40;

        (*(void (**)(char *, uint64_t))(v68 + 8))(v6, v69);
        v71 = v39;
        v72 = v41;
        lazy protocol witness table accessor for type String and conformance String();
        StringProtocol.localizedUppercase.getter();

        OUTLINED_FUNCTION_53();
        v42 = 0;
        v43 = v35;
        goto LABEL_25;
      }

      OUTLINED_FUNCTION_25();
    }
    else
    {

    }
  }
  _s15ConversationKit11ParticipantVWOcTm_2(v70, (uint64_t)v14, type metadata accessor for Participant);
  swift_retain();
  ParticipantContactDetailsCache.contactDetails(for:)((uint64_t)v14, v54, v55, v56, v57, v58, v59, v60, v68, v69, v70, v71, v72, (uint64_t)v73, v74, v75, v76, v77, v78,
    v79);
  v43 = v74;
  v33 = v75;
  v42 = v73;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_25();

  swift_release();
  outlined destroy of AccountUpdateNotice((uint64_t)v14, type metadata accessor for Participant);
LABEL_25:
  OUTLINED_FUNCTION_27();
  swift_bridgeObjectRelease();

  outlined bridged method (mbnn) of @objc UINavigationItem.title.setter(v43, v33, v27);
  v61 = (char *)v2 + *(int *)(v20 + 36);
  if ((v61[96] & 1) == 0)
  {
    v62 = *((_QWORD *)v61 + 9);
    v63 = TUScreenShareDeviceFamily.displayName.getter(v62);
    if (v64)
    {
      v65 = (void *)MEMORY[0x1C3B72E00](v63);
      v63 = OUTLINED_FUNCTION_133();
    }
    else
    {
      v65 = 0;
    }
    OUTLINED_FUNCTION_39_4(v63, sel_setSummary_);

    v66 = TUScreenShareDeviceFamily.linkPresentationImage.getter(v62);
    if (v66)
    {
      v67 = (void *)v66;
      objc_msgSend(v27, sel_setImage_, v66);

    }
  }
  outlined destroy of AccountUpdateNotice(v70, type metadata accessor for Participant);
LABEL_32:
  OUTLINED_FUNCTION_52_1();
}

void InCallControlsActivityCellViewModel.contacts.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t v25;
  id v26;
  Class isa;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  id v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v3 = v0;
  v43 = type metadata accessor for PersonNameComponents();
  v4 = *(_QWORD *)(v43 - 8);
  MEMORY[0x1E0C80A78](v43);
  OUTLINED_FUNCTION_16_2();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v5);
  v6 = OUTLINED_FUNCTION_63_3();
  v7 = type metadata accessor for Participant(v6);
  OUTLINED_FUNCTION_1_1();
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v43 - v12;
  v14 = v0[5];
  v15 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v14);
  v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 104))(v14, v15);
  v17 = (void *)v16;
  if (v16)
  {
    v18 = OUTLINED_FUNCTION_25_1(v16, sel_activity);
    v19 = objc_msgSend(v18, sel_isScreenSharingActivity);

    if (v19)
    {
      v20 = OUTLINED_FUNCTION_3_116();
      outlined init with copy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v3 + *(int *)(v20 + 32), v2, &demangling cache variable for type metadata for Participant?);
      if (__swift_getEnumTagSinglePayload(v2, 1, v7) == 1)
      {
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v2, &demangling cache variable for type metadata for Participant?);
        goto LABEL_19;
      }
      v21 = (uint64_t)v13;
      outlined init with take of Participant(v2, (uint64_t)v13);
      v22 = *(int *)(v7 + 28);
      v23 = *(void **)&v13[v22];
      if (v23)
      {
        v24 = v23;
        outlined bridged method (pb) of @objc TUHandle.siriDisplayName.getter(v24);
        if (v25)
        {
          if ((objc_msgSend(v24, sel_shouldHideContact) & 1) != 0)
          {
            swift_bridgeObjectRetain();
            PersonNameComponents.init()();
            PersonNameComponents.givenName.setter();
            OUTLINED_FUNCTION_50_2();
            if (one-time initialization token for initials != -1)
              swift_once();
            OUTLINED_FUNCTION_15_94();
            v26 = (id)static NSPersonNameComponentsFormatter.initials;
            isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
            v28 = OUTLINED_FUNCTION_48_1(v26, sel_stringFromPersonNameComponents_);

            v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            v31 = v30;

            (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v43);
            v44 = v29;
            v45 = v31;
            lazy protocol witness table accessor for type String and conformance String();
            StringProtocol.localizedUppercase.getter();

            OUTLINED_FUNCTION_133();
            OUTLINED_FUNCTION_27();
            swift_bridgeObjectRelease_n();
LABEL_15:
            if (!*(_QWORD *)&v13[v22])
            {
LABEL_18:
              outlined destroy of AccountUpdateNotice(v21, type metadata accessor for Participant);
              goto LABEL_19;
            }
            v40 = OUTLINED_FUNCTION_48_1(objc_allocWithZone(MEMORY[0x1E0C97360]), sel__initWithHandle_);
LABEL_17:
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
            v41 = swift_allocObject();
            *(_OWORD *)(v41 + 16) = xmmword_1BD6443F0;
            *(_QWORD *)(v41 + 32) = v40;
            v44 = v41;
            v42 = v40;
            specialized Array._endMutation()();

            goto LABEL_18;
          }

          swift_bridgeObjectRelease();
        }
        else
        {

        }
      }
      _s15ConversationKit11ParticipantVWOcTm_2((uint64_t)v13, (uint64_t)v11, type metadata accessor for Participant);
      swift_retain();
      ParticipantContactDetailsCache.contactDetails(for:)((uint64_t)v11, v32, v33, v34, v35, v36, v37, v38, v43, v44, v45, (uint64_t)v46, v47, v48, v49, v50, v51, v52, v53,
        v54);
      v39 = v46;
      v40 = v46;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_release();
      outlined destroy of AccountUpdateNotice((uint64_t)v11, type metadata accessor for Participant);
      OUTLINED_FUNCTION_25();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v39)
        goto LABEL_17;
      goto LABEL_15;
    }
  }
LABEL_19:
  OUTLINED_FUNCTION_52_1();
}

void InCallControlsActivityCellViewModel.shouldShowActionButton.getter()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 (*v2)(uint64_t);
  uint64_t v3;
  uint64_t ObjectType;

  OUTLINED_FUNCTION_7_115();
  v1 = OUTLINED_FUNCTION_31_13();
  if (v2(v1) == 6)
  {
    v3 = *(_QWORD *)(v0 + 8);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v3 + 328))(ObjectType, v3);
  }
  OUTLINED_FUNCTION_18();
}

double InCallControlsActivityCellViewModel.activityCellHeight.getter()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  char v7;
  double result;

  OUTLINED_FUNCTION_7_115();
  v0 = OUTLINED_FUNCTION_31_13();
  v2 = v1(v0);
  if (!v3)
    return 60.0;
  v4 = v2;
  v5 = v3;
  swift_bridgeObjectRelease();
  v6 = HIBYTE(v5) & 0xF;
  if ((v5 & 0x2000000000000000) == 0)
    v6 = v4 & 0xFFFFFFFFFFFFLL;
  if (!v6)
    return 60.0;
  InCallControlsActivityCellViewModel.shouldBeSmallCell.getter();
  result = 173.0;
  if ((v7 & 1) != 0)
    return 60.0;
  return result;
}

uint64_t InCallControlsActivitySectionHeaderViewModel.init(activity:)(_QWORD *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  int EnumTagSinglePayload;
  objc_class *v10;
  NSBundle v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 (*v17)(uint64_t);
  char *v18;
  uint64_t v19;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Collaboration?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_16_2();
  OUTLINED_FUNCTION_30_67();
  v6 = (void *)(*(uint64_t (**)(void *, uint64_t))(v3 + 104))(v1, v3);
  if (v6)
  {
    v1 = v6;
    v7 = (uint64_t)objc_msgSend(v6, sel_activeRemoteParticipants);
    OUTLINED_FUNCTION_59(v7, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
    lazy protocol witness table accessor for type TUConversationParticipant and conformance NSObject();
    v3 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    LOBYTE(v7) = specialized Set.isEmpty.getter(v3);
    OUTLINED_FUNCTION_133();
    if ((v7 & 1) == 0)
    {
      OUTLINED_FUNCTION_4_0(a1);
      v16 = OUTLINED_FUNCTION_29_66();
      v18 = (char *)&loc_1BD47667C + *((int *)qword_1BD476848 + v17(v16));
      __asm { BR              X10 }
    }

  }
  OUTLINED_FUNCTION_30_67();
  (*(void (**)(void *, uint64_t))(v3 + 112))(v1, v3);
  v8 = OUTLINED_FUNCTION_239_0();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v2, 1, v8);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v2, &demangling cache variable for type metadata for Collaboration?);
  v10 = (objc_class *)objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  if (EnumTagSinglePayload == 1)
    OUTLINED_FUNCTION_43_56();
  else
    OUTLINED_FUNCTION_27_64();
  OUTLINED_FUNCTION_7_14();
  v11.super.isa = v10;
  OUTLINED_FUNCTION_49_2(v12, v13, v14, v15, v11);
  OUTLINED_FUNCTION_23_75();
  String.init(format:_:)();
  OUTLINED_FUNCTION_27();
  lazy protocol witness table accessor for type String and conformance String();
  v19 = StringProtocol.localizedUppercase.getter();
  OUTLINED_FUNCTION_53();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v19;
}

void sub_1BD476780()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  OUTLINED_FUNCTION_27_64();
  JUMPOUT(0x1BD4766FCLL);
}

void sub_1BD4767BC()
{
  void *v0;
  id v1;
  id v2;

  v1 = objc_msgSend(v0, sel_activity);

  v2 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  JUMPOUT(0x1BD4766F8);
}

void InCallControlsActivityCellViewModel.init(call:activity:localParticipant:participants:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t ObjectType;
  uint64_t (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t);
  char v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  Swift::Bool v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t (*v76)(uint64_t, uint64_t);
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  _OWORD *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  _OWORD v93[14];
  _QWORD v94[2];
  unsigned __int8 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  uint64_t v100;
  _QWORD v101[4];
  char v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char v109;
  _OWORD v110[15];

  v85 = a5;
  v86 = a4;
  v88 = type metadata accessor for Participant.State(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_5_27();
  v87 = v11;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v73 - v13;
  v83 = type metadata accessor for Participant(0);
  *(_QWORD *)&v92 = *(_QWORD *)(v83 - 8);
  MEMORY[0x1E0C80A78](v83);
  OUTLINED_FUNCTION_5_27();
  v75 = v15;
  v17 = MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v73 - v18;
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v73 - v20;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v73 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  *a6 = a1;
  a6[1] = a2;
  v80 = a3;
  outlined init with copy of IDSLookupManager(a3, (uint64_t)(a6 + 2));
  v25 = OUTLINED_FUNCTION_3_116();
  v26 = (uint64_t)a6 + *(int *)(v25 + 24);
  outlined init with copy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v86, v26, &demangling cache variable for type metadata for Participant?);
  v81 = v25;
  v82 = a6;
  *(_QWORD *)((char *)a6 + *(int *)(v25 + 28)) = v85;
  ObjectType = swift_getObjectType();
  v28 = *(uint64_t (**)(uint64_t, uint64_t))(a2 + 328);
  swift_unknownObjectRetain();
  v78 = a2;
  v79 = a1;
  v76 = v28;
  v77 = ObjectType;
  if ((v28(ObjectType, a2) & 1) != 0)
  {
    outlined init with copy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v26, (uint64_t)v24, &demangling cache variable for type metadata for Participant?);
    goto LABEL_23;
  }
  v74 = v24;
  v29 = *(_QWORD *)(v85 + 16);
  if (v29)
  {
    v30 = v85 + ((*(unsigned __int8 *)(v92 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v92 + 80));
    *(_QWORD *)&v90 = &v110[2];
    *(_QWORD *)&v91 = v101;
    v84 = &v93[2];
    *(_QWORD *)&v92 = *(_QWORD *)(v92 + 72);
    swift_bridgeObjectRetain();
    v31 = type metadata accessor for Participant;
    v32 = v87;
    while (1)
    {
      _s15ConversationKit11ParticipantVWOcTm_2(v30, (uint64_t)v21, v31);
      _s15ConversationKit11ParticipantVWOcTm_2((uint64_t)v21, (uint64_t)v14, type metadata accessor for Participant.State);
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        v33 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        OUTLINED_FUNCTION_7_2((uint64_t *)&v14[*(int *)(v33 + 64)]);
        OUTLINED_FUNCTION_32_53();
        v34 = type metadata accessor for Date();
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(v14, v34);
        outlined init with copy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v91, (uint64_t)v110, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
        outlined destroy of Participant.MediaInfo((uint64_t)v94);
        if (*((_QWORD *)&v110[1] + 1) != 1)
        {
          OUTLINED_FUNCTION_33_59();
          v35 = v97;
          LODWORD(v89) = BYTE3(v97);
          outlined destroy of Participant.ScreenInfo((uint64_t)v94);
          v32 = v87;
          goto LABEL_10;
        }
      }
      else
      {
        OUTLINED_FUNCTION_71_2((uint64_t)v14);
        memset(v110, 0, 24);
        *((_QWORD *)&v110[1] + 1) = 1;
        OUTLINED_FUNCTION_54_13((void *)v90);
      }
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v110, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
      v35 = 2;
LABEL_10:
      _s15ConversationKit11ParticipantVWOcTm_2((uint64_t)v21, (uint64_t)v19, v31);
      if (v35 == 2)
        goto LABEL_17;
      _s15ConversationKit11ParticipantVWOcTm_2((uint64_t)v19, v32, type metadata accessor for Participant.State);
      if (swift_getEnumCaseMultiPayload() != 4)
      {
        OUTLINED_FUNCTION_71_2(v32);
        memset(v93, 0, 24);
        *((_QWORD *)&v93[1] + 1) = 1;
        OUTLINED_FUNCTION_54_13(v84);
LABEL_16:
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v93, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
LABEL_17:
        outlined destroy of AccountUpdateNotice((uint64_t)v19, v31);
        v38 = v31;
        goto LABEL_18;
      }
      v36 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      OUTLINED_FUNCTION_7_2((uint64_t *)(v32 + *(int *)(v36 + 64)));
      OUTLINED_FUNCTION_32_53();
      v37 = type metadata accessor for Date();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 8))(v32, v37);
      outlined init with copy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v91, (uint64_t)v93, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
      outlined destroy of Participant.MediaInfo((uint64_t)v94);
      if (*((_QWORD *)&v93[1] + 1) == 1)
        goto LABEL_16;
      memcpy(v110, v93, 0xD1uLL);
      v38 = v31;
      v39 = BYTE8(v110[2]);
      outlined destroy of Participant.ScreenInfo((uint64_t)v110);
      OUTLINED_FUNCTION_71_2((uint64_t)v19);
      if ((v39 & 1) != 0)
      {
        v24 = v74;
        outlined init with take of Participant((uint64_t)v21, (uint64_t)v74);
        v61 = (uint64_t)v24;
        v62 = 0;
        goto LABEL_22;
      }
LABEL_18:
      OUTLINED_FUNCTION_71_2((uint64_t)v21);
      v30 += v92;
      --v29;
      v31 = v38;
      if (!v29)
        goto LABEL_21;
    }
  }
  swift_bridgeObjectRetain();
LABEL_21:
  v24 = v74;
  v61 = (uint64_t)v74;
  v62 = 1;
LABEL_22:
  __swift_storeEnumTagSinglePayload(v61, v62, 1, v83);
  swift_bridgeObjectRelease();
LABEL_23:
  v41 = v81;
  v40 = v82;
  v42 = (uint64_t)v82 + *(int *)(v81 + 32);
  outlined init with take of Participant?((uint64_t)v24, v42);
  v43 = v78;
  v44 = v77;
  if ((v76(v77, v78) & 1) != 0)
  {
    v45 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v43 + 176))(v44, v43);
    if (v45)
    {
      v46 = v45;
      specialized Participant.ScreenShareAttributes.init(_:)(v46, (uint64_t)v94);
      v47 = v94[0];
      v48 = v94[1];
      v49 = v95;
      v91 = v97;
      v92 = v96;
      v89 = v99;
      v90 = v98;
      v50 = v100;

      v51 = OUTLINED_FUNCTION_202();
      OUTLINED_FUNCTION_44_50(v51, &demangling cache variable for type metadata for Participant?);
      OUTLINED_FUNCTION_40_56();
      v52 = (uint64_t)v40 + *(int *)(v41 + 36);
      *(_QWORD *)v52 = v47;
      *(_QWORD *)(v52 + 8) = v48;
      *(_QWORD *)(v52 + 16) = v49;
      *(_OWORD *)(v52 + 24) = v92;
      *(_OWORD *)(v52 + 40) = v91;
      *(_OWORD *)(v52 + 56) = v90;
      *(_OWORD *)(v52 + 72) = v89;
      *(_QWORD *)(v52 + 88) = v50;
      *(_BYTE *)(v52 + 96) = 0;
      return;
    }
  }
  if (__swift_getEnumTagSinglePayload(v42, 1, v83))
  {
    memset(v110, 0, 24);
    *((_QWORD *)&v110[1] + 1) = 1;
    OUTLINED_FUNCTION_54_13(&v110[2]);
LABEL_29:
    v54 = OUTLINED_FUNCTION_202();
    OUTLINED_FUNCTION_44_50(v54, &demangling cache variable for type metadata for Participant?);
    OUTLINED_FUNCTION_40_56();
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v110, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    v55 = (uint64_t)v40 + *(int *)(v41 + 36);
    *(_OWORD *)(v55 + 64) = 0u;
    *(_OWORD *)(v55 + 80) = 0u;
    *(_OWORD *)(v55 + 32) = 0u;
    *(_OWORD *)(v55 + 48) = 0u;
    *(_OWORD *)v55 = 0u;
    *(_OWORD *)(v55 + 16) = 0u;
    *(_BYTE *)(v55 + 96) = 1;
    return;
  }
  v53 = v75;
  _s15ConversationKit11ParticipantVWOcTm_2(v42, v75, type metadata accessor for Participant);
  Participant.screenInfo.getter();
  outlined destroy of AccountUpdateNotice(v53, type metadata accessor for Participant);
  if (*((_QWORD *)&v110[1] + 1) == 1)
    goto LABEL_29;
  OUTLINED_FUNCTION_33_59();
  v56 = v109;
  if ((v109 & 1) != 0)
  {
    v57 = OUTLINED_FUNCTION_202();
    v58 = 0;
    v59 = 0x4024000000000000;
    v60 = 1;
LABEL_41:
    OUTLINED_FUNCTION_44_50(v57, &demangling cache variable for type metadata for Participant?);
    OUTLINED_FUNCTION_40_56();
    if ((v60 & 1) != 0)
    {
      v64 = 0;
      v65 = 0;
      v66 = 0;
      v67 = 0uLL;
      v68 = 0uLL;
      v69 = 0uLL;
    }
    else
    {
      v64 = v108;
      v65 = v107;
      v66 = v106;
      v69 = v105;
      v68 = v104;
      v67 = v103;
    }
    v93[0] = v67;
    v93[1] = v68;
    v93[2] = v69;
    LOBYTE(v93[3]) = v60;
    outlined destroy of Participant.ScreenInfo((uint64_t)v94);
    Participant.ScreenShareAttributes.init(displayScale:displayCornerRadius:deviceFamily:deviceHomeButtonType:style:systemRootLayerTransform:)(v58, v56, v59, 0, v66, v60, v65, v60, (uint64_t)v110, v64, v60);
    v70 = LOBYTE(v110[1]);
    v71 = *((_QWORD *)&v110[5] + 1);
    v72 = (char *)v82 + *(int *)(v81 + 36);
    *(_OWORD *)v72 = v110[0];
    *((_QWORD *)v72 + 2) = v70;
    *(_OWORD *)(v72 + 24) = *(_OWORD *)((char *)&v110[1] + 8);
    *(_OWORD *)(v72 + 40) = *(_OWORD *)((char *)&v110[2] + 8);
    *(_OWORD *)(v72 + 56) = *(_OWORD *)((char *)&v110[3] + 8);
    *(_OWORD *)(v72 + 72) = *(_OWORD *)((char *)&v110[4] + 8);
    *((_QWORD *)v72 + 11) = v71;
    v72[96] = 0;
    return;
  }
  v58 = v101[2];
  if ((v102 & 1) == 0)
  {
    v59 = v101[3];
    v57 = OUTLINED_FUNCTION_202();
    v60 = 0;
    goto LABEL_41;
  }
  switch(v106)
  {
    case 0:
    case 1:
    case 4:
      v57 = OUTLINED_FUNCTION_202();
      v60 = 0;
      v59 = 0x4024000000000000;
      goto LABEL_41;
    case 2:
      v63 = Participant.ScreenInfo.isMaybeTouchIDDevice()();
      v57 = OUTLINED_FUNCTION_202();
      if (v63)
        v59 = 0x4024000000000000;
      else
        v59 = 0x4049000000000000;
      v60 = v109;
      goto LABEL_41;
    case 3:
      v57 = OUTLINED_FUNCTION_202();
      v60 = 0;
      v59 = 0x4034000000000000;
      goto LABEL_41;
    default:
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TUScreenShareDeviceFamily?);
      _diagnoseUnexpectedEnumCase<A>(type:)();
      __break(1u);
      break;
  }
}

uint64_t TUScreenShareDeviceFamily.displayName.getter(uint64_t a1)
{
  objc_class *v1;
  uint64_t v2;
  id v3;
  NSBundle v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  Swift::String v10;
  Swift::String v11;

  v2 = a1;
  switch(a1)
  {
    case 0:
      return v2;
    case 1:
    case 2:
    case 3:
    case 4:
      v3 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
      OUTLINED_FUNCTION_6_8();
      OUTLINED_FUNCTION_7_14();
      v4.super.isa = v1;
      v2 = OUTLINED_FUNCTION_49_2(v5, v6, v7, v8, v4);

      break;
    default:
      OUTLINED_FUNCTION_16_87();
      v10._countAndFlagsBits = 0xD000000000000038;
      v10._object = (void *)0x80000001BD68D6A0;
      String.append(_:)(v10);
      v11._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      OUTLINED_FUNCTION_11_71(v11);
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_13_105();
      __break(1u);
      JUMPOUT(0x1BD477288);
  }
  return v2;
}

void InCallControlsActivitySectionHeaderViewModel.title.getter()
{
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_0();
}

void InCallControlsActivityCellViewModel.CellStyle.hash(into:)(uint64_t a1, char a2)
{
  Hasher._combine(_:)(a2 & 1);
  OUTLINED_FUNCTION_0();
}

Swift::Int InCallControlsActivityCellViewModel.CellStyle.hashValue.getter(char a1)
{
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1 & 1);
  return Hasher._finalize()();
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance InCallControlsActivityCellViewModel.CellStyle(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static InCallControlsActivityCellViewModel.CellStyle.== infix(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance InCallControlsActivityCellViewModel.CellStyle()
{
  char *v0;

  return InCallControlsActivityCellViewModel.CellStyle.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance InCallControlsActivityCellViewModel.CellStyle(uint64_t a1)
{
  char *v1;

  InCallControlsActivityCellViewModel.CellStyle.hash(into:)(a1, *v1);
}

void InCallControlsActivityCellViewModel.call.getter()
{
  swift_unknownObjectRetain();
  OUTLINED_FUNCTION_0();
}

uint64_t InCallControlsActivityCellViewModel.activity.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return outlined init with copy of IDSLookupManager(v1 + 16, a1);
}

void InCallControlsActivityCellViewModel.localParticipant.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_3_116();
  OUTLINED_FUNCTION_39_60(v0 + *(int *)(v1 + 24), v2, &demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_0();
}

uint64_t InCallControlsActivityCellViewModel.participants.getter()
{
  OUTLINED_FUNCTION_3_116();
  return swift_bridgeObjectRetain();
}

void InCallControlsActivityCellViewModel.sharingParticipant.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_3_116();
  OUTLINED_FUNCTION_39_60(v0 + *(int *)(v1 + 32), v2, &demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_0();
}

void InCallControlsActivityCellViewModel.sharingAttributes.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  char v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v3 = v1 + *(int *)(OUTLINED_FUNCTION_3_116() + 36);
  v4 = *(_BYTE *)(v3 + 96);
  v5 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_OWORD *)(a1 + 16) = v5;
  v6 = *(_OWORD *)(v3 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v3 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  v7 = *(_OWORD *)(v3 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(v3 + 64);
  *(_OWORD *)(a1 + 80) = v7;
  *(_BYTE *)(a1 + 96) = v4;
  OUTLINED_FUNCTION_0();
}

uint64_t TUScreenShareDeviceFamily.linkPresentationImage.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t result;
  Swift::String v7;
  Swift::String v8;

  v1 = a1;
  v2 = 0xE600000000000000;
  v3 = 0x656E6F687069;
  switch(a1)
  {
    case 0:
      goto LABEL_8;
    case 1:
      v2 = 0xE700000000000000;
      v3 = 0x79616C70736964;
      goto LABEL_5;
    case 2:
      goto LABEL_5;
    case 3:
      v2 = 0xEE00657061637364;
      v3 = 0x6E616C2E64617069;
      goto LABEL_5;
    case 4:
      v2 = 0xEA00000000006F72;
      v3 = 0x702E6E6F69736976;
LABEL_5:
      OUTLINED_FUNCTION_59(a1, (unint64_t *)&lazy cache variable for type metadata for UIImage);
      v4 = @nonobjc UIImage.init(_systemName:)(v3, v2);
      if (v4)
      {
        v5 = v4;
        v1 = (uint64_t)OUTLINED_FUNCTION_48_1(objc_allocWithZone(MEMORY[0x1E0CC1178]), sel_initWithPlatformImage_);

      }
      else
      {
        v1 = 0;
      }
LABEL_8:
      result = v1;
      break;
    default:
      OUTLINED_FUNCTION_16_87();
      v7._object = (void *)0x80000001BD68D6A0;
      v7._countAndFlagsBits = 0xD000000000000038;
      String.append(_:)(v7);
      v8._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      OUTLINED_FUNCTION_11_71(v8);
      swift_bridgeObjectRelease();
      result = OUTLINED_FUNCTION_13_105();
      __break(1u);
      break;
  }
  return result;
}

void InCallControlsActivityCellViewModel.shouldCollaborationShowAppIcon.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Collaboration?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_7_115();
  v3 = OUTLINED_FUNCTION_31_13();
  v4(v3);
  v5 = OUTLINED_FUNCTION_239_0();
  if (__swift_getEnumTagSinglePayload((uint64_t)v2, 1, v5) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v2, &demangling cache variable for type metadata for Collaboration?);
  }
  else
  {
    v7 = *((_QWORD *)v2 + 11);
    v6 = *((_QWORD *)v2 + 12);
    v8 = swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_35_2(v8, type metadata accessor for Collaboration);
    if (v6)
    {
      if (one-time initialization token for shared != -1)
        swift_once();
      v9 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)static CollaborationImageFetcher.shared
                                                               + 136))(v7, v6);
      swift_bridgeObjectRelease();
      if (v9)

    }
  }
  OUTLINED_FUNCTION_18();
}

void InCallControlsActivityCellViewModel.shouldBeSmallCell.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;
  unsigned __int8 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_3_116();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_2_119();
  v1 = OUTLINED_FUNCTION_29_66();
  v3 = (void *)v2(v1);
  if (v3)
  {
    v5 = v3;
    v6 = objc_msgSend(v3, sel_activity);
    v7 = objc_msgSend(v6, sel_isScreenSharingActivity);

    OUTLINED_FUNCTION_5_123(v8, v9, (uint64_t (*)(_QWORD))type metadata accessor for InCallControlsActivityCellViewModel);
    if ((v7 & 1) != 0)
      goto LABEL_6;
  }
  else
  {
    OUTLINED_FUNCTION_5_123(0, v4, (uint64_t (*)(_QWORD))type metadata accessor for InCallControlsActivityCellViewModel);
  }
  InCallControlsActivityCellViewModel.shouldCollaborationShowAppIcon.getter();
LABEL_6:
  OUTLINED_FUNCTION_35_2(v10, (uint64_t (*)(_QWORD))type metadata accessor for InCallControlsActivityCellViewModel);
  OUTLINED_FUNCTION_91();
}

uint64_t outlined init with take of Participant?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void specialized Participant.ScreenShareAttributes.init(_:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  void *v5;
  double v6;
  double v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  double v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  id v21;
  id v22;
  id v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  uint64_t v29;

  v4 = objc_msgSend(a1, sel_displayScale);
  if (v4)
  {
    v5 = v4;
    objc_msgSend(v4, sel_doubleValue);
    v7 = v6;

  }
  else
  {
    v7 = 1.0;
  }
  v8 = OUTLINED_FUNCTION_25_1((uint64_t)v4, sel_cornerRadius);
  v9 = v8;
  v10 = 0;
  v11 = 0;
  if (v8)
  {
    objc_msgSend(v8, sel_doubleValue);
    v11 = v12;

  }
  v13 = OUTLINED_FUNCTION_25_1((uint64_t)v8, sel_systemRootLayerTransform);
  if (v13)
  {
    v14 = v13;
    objc_msgSend(v13, sel_CGAffineTransformValue);
    v16 = v24;
    v15 = v25;
    v18 = v26;
    v17 = v27;
    v19 = v28;
    v10 = v29;

  }
  else
  {
    v17 = 1.0;
    v19 = 0;
    v18 = 0;
    v15 = 0;
    v16 = 1.0;
  }
  v20 = v9 == 0;
  v21 = OUTLINED_FUNCTION_25_1((uint64_t)v13, sel_deviceFamily);
  v22 = OUTLINED_FUNCTION_25_1((uint64_t)v21, sel_deviceHomeButtonType);
  v23 = OUTLINED_FUNCTION_25_1((uint64_t)v22, sel_style);

  *(double *)a2 = v7;
  *(_QWORD *)(a2 + 8) = v11;
  *(_BYTE *)(a2 + 16) = v20;
  *(double *)(a2 + 24) = v16;
  *(_QWORD *)(a2 + 32) = v15;
  *(_QWORD *)(a2 + 40) = v18;
  *(double *)(a2 + 48) = v17;
  *(_QWORD *)(a2 + 56) = v19;
  *(_QWORD *)(a2 + 64) = v10;
  *(_QWORD *)(a2 + 72) = v21;
  *(_QWORD *)(a2 + 80) = v22;
  *(_QWORD *)(a2 + 88) = v23;
}

unint64_t lazy protocol witness table accessor for type InCallControlsActivityCellViewModel.CellStyle and conformance InCallControlsActivityCellViewModel.CellStyle()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type InCallControlsActivityCellViewModel.CellStyle and conformance InCallControlsActivityCellViewModel.CellStyle;
  if (!lazy protocol witness table cache variable for type InCallControlsActivityCellViewModel.CellStyle and conformance InCallControlsActivityCellViewModel.CellStyle)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for InCallControlsActivityCellViewModel.CellStyle, &type metadata for InCallControlsActivityCellViewModel.CellStyle);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type InCallControlsActivityCellViewModel.CellStyle and conformance InCallControlsActivityCellViewModel.CellStyle);
  }
  return result;
}

ValueMetadata *type metadata accessor for InCallControlsActivitySectionHeaderViewModel()
{
  return &type metadata for InCallControlsActivitySectionHeaderViewModel;
}

uint64_t initializeBufferWithCopyOfBuffer for InCallControlsActivityCellViewModel(uint64_t a1, uint64_t *a2, int *a3)
{
  int v4;
  uint64_t v5;
  int *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t *v9;
  __int128 v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  const void *v28;
  size_t v29;
  __int128 v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  __int128 v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void *v88;
  const void *v89;
  size_t v90;
  __int128 v91;
  uint64_t v92;
  __int128 v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  __int128 v102;
  __int128 v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  char *v112;
  char *v113;
  void *v114;
  uint64_t v115;
  uint64_t v116;
  id v117;
  __int128 v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  void *v124;
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  id v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v137;
  uint64_t v138;
  int *v139;
  int *v140;
  uint64_t *v141;
  uint64_t *v142;
  uint64_t v143;
  uint64_t v144;

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v5 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    *(_QWORD *)a1 = v5;
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    v6 = a3;
    v7 = a2;
    v8 = a2[1];
    *(_QWORD *)a1 = v5;
    *(_QWORD *)(a1 + 8) = v8;
    v9 = a2 + 2;
    v10 = *(_OWORD *)(a2 + 5);
    *(_OWORD *)(a1 + 40) = v10;
    v11 = v10;
    v12 = **(void (***)(uint64_t, uint64_t *, uint64_t))(v10 - 8);
    swift_unknownObjectRetain();
    v12(a1 + 16, v9, v11);
    v13 = v6[6];
    v14 = (char *)(a1 + v13);
    v15 = (char *)v7 + v13;
    v16 = (int *)type metadata accessor for Participant(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, (uint64_t)v16))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      v141 = v7;
      v18 = type metadata accessor for Participant.State(0);
      v143 = (uint64_t)v16;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
        case 2u:
        case 3u:
        case 5u:
          v19 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v14, v15, v19);
          goto LABEL_20;
        case 4u:
          v20 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v14, v15, v20);
          v137 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
          v21 = *(int *)(v137 + 48);
          v22 = &v14[v21];
          v23 = &v15[v21];
          *(_OWORD *)v22 = *(_OWORD *)&v15[v21];
          v24 = *(_QWORD *)&v15[v21 + 16];
          v25 = *(_QWORD *)&v15[v21 + 24];
          *((_QWORD *)v22 + 2) = v24;
          *((_QWORD *)v22 + 3) = v25;
          *((_WORD *)v22 + 16) = *((_WORD *)v23 + 16);
          *((_QWORD *)v22 + 5) = *((_QWORD *)v23 + 5);
          v22[48] = v23[48];
          *(_OWORD *)(v22 + 56) = *(_OWORD *)(v23 + 56);
          *(_OWORD *)(v22 + 72) = *(_OWORD *)(v23 + 72);
          v22[88] = v23[88];
          v22[89] = v23[89];
          v26 = *((_QWORD *)v23 + 15);
          swift_bridgeObjectRetain();
          if (v26)
          {
            if (v26 == 1)
            {
              v27 = v22 + 96;
              v28 = v23 + 96;
              v29 = 209;
              goto LABEL_14;
            }
            v31 = *((_QWORD *)v23 + 16);
            *((_QWORD *)v22 + 15) = v26;
            *((_QWORD *)v22 + 16) = v31;
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v26 - 8))((uint64_t)(v22 + 96), (uint64_t)(v23 + 96), v26);
          }
          else
          {
            v30 = *((_OWORD *)v23 + 7);
            *((_OWORD *)v22 + 6) = *((_OWORD *)v23 + 6);
            *((_OWORD *)v22 + 7) = v30;
            *((_QWORD *)v22 + 16) = *((_QWORD *)v23 + 16);
          }
          *((_DWORD *)v22 + 34) = *((_DWORD *)v23 + 34);
          v32 = *((_OWORD *)v23 + 10);
          *((_OWORD *)v22 + 9) = *((_OWORD *)v23 + 9);
          *((_OWORD *)v22 + 10) = v32;
          *((_OWORD *)v22 + 11) = *((_OWORD *)v23 + 11);
          v22[192] = v23[192];
          v27 = v22 + 208;
          v28 = v23 + 208;
          *((_QWORD *)v22 + 25) = *((_QWORD *)v23 + 25);
          v29 = 97;
LABEL_14:
          memcpy(v27, v28, v29);
          v33 = *((_QWORD *)v23 + 39);
          if (v33)
          {
            v34 = *((_QWORD *)v23 + 40);
            v35 = *((_QWORD *)v23 + 41);
            *((_QWORD *)v22 + 39) = v33;
            *((_QWORD *)v22 + 40) = v34;
            *((_QWORD *)v22 + 41) = v35;
            swift_unknownObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v22 + 312) = *(_OWORD *)(v23 + 312);
            *((_QWORD *)v22 + 41) = *((_QWORD *)v23 + 41);
          }
          v36 = *(int *)(v137 + 64);
          v37 = &v14[v36];
          v38 = &v15[v36];
          v39 = *((_QWORD *)v38 + 1);
          v16 = (int *)v143;
          if (v39)
          {
            *(_QWORD *)v37 = *(_QWORD *)v38;
            *((_QWORD *)v37 + 1) = v39;
            v40 = *((_QWORD *)v38 + 3);
            *((_QWORD *)v37 + 2) = *((_QWORD *)v38 + 2);
            *((_QWORD *)v37 + 3) = v40;
            v37[32] = v38[32];
            *(_OWORD *)(v37 + 40) = *(_OWORD *)(v38 + 40);
            *((_QWORD *)v37 + 7) = *((_QWORD *)v38 + 7);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            v41 = *((_OWORD *)v38 + 1);
            *(_OWORD *)v37 = *(_OWORD *)v38;
            *((_OWORD *)v37 + 1) = v41;
            v42 = *((_OWORD *)v38 + 3);
            *((_OWORD *)v37 + 2) = *((_OWORD *)v38 + 2);
            *((_OWORD *)v37 + 3) = v42;
          }
LABEL_20:
          swift_storeEnumTagMultiPayload();
LABEL_21:
          v43 = v16[5];
          v44 = &v14[v43];
          v45 = &v15[v43];
          v46 = type metadata accessor for UUID();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v44, v45, v46);
          v47 = v16[6];
          v48 = &v14[v47];
          v49 = &v15[v47];
          v48[4] = v49[4];
          *(_DWORD *)v48 = *(_DWORD *)v49;
          v50 = v16[7];
          v51 = &v14[v50];
          v52 = &v15[v50];
          v53 = *(void **)v52;
          v139 = v6;
          if (*(_QWORD *)v52)
          {
            v54 = *((_QWORD *)v52 + 1);
            *(_QWORD *)v51 = v53;
            *((_QWORD *)v51 + 1) = v54;
            v51[16] = v52[16];
            v55 = *((_QWORD *)v52 + 4);
            *((_QWORD *)v51 + 3) = *((_QWORD *)v52 + 3);
            *((_QWORD *)v51 + 4) = v55;
            v56 = v53;
            swift_bridgeObjectRetain();
          }
          else
          {
            v57 = *((_OWORD *)v52 + 1);
            *(_OWORD *)v51 = *(_OWORD *)v52;
            *((_OWORD *)v51 + 1) = v57;
            *((_QWORD *)v51 + 4) = *((_QWORD *)v52 + 4);
          }
          *(_QWORD *)&v14[v16[8]] = *(_QWORD *)&v15[v16[8]];
          v58 = v16[9];
          v59 = &v14[v58];
          v60 = &v15[v58];
          v61 = *((_QWORD *)v60 + 1);
          *(_QWORD *)v59 = *(_QWORD *)v60;
          *((_QWORD *)v59 + 1) = v61;
          v14[v16[10]] = v15[v16[10]];
          *(_QWORD *)&v14[v16[11]] = *(_QWORD *)&v15[v16[11]];
          v62 = v16[12];
          v63 = *(void **)&v15[v62];
          *(_QWORD *)&v14[v62] = v63;
          v14[v16[13]] = v15[v16[13]];
          v64 = v16[14];
          v65 = &v14[v64];
          v66 = &v15[v64];
          v67 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v68 = v63;
          if (__swift_getEnumTagSinglePayload((uint64_t)v66, 1, v67))
          {
            v69 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
            memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 16))(v65, v66, v67);
            __swift_storeEnumTagSinglePayload((uint64_t)v65, 0, 1, v67);
          }
          v70 = type metadata accessor for Participant.CountdownInfo(0);
          v71 = *(int *)(v70 + 20);
          v72 = &v65[v71];
          v73 = &v66[v71];
          if (__swift_getEnumTagSinglePayload((uint64_t)&v66[v71], 1, v67))
          {
            v74 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
            memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 16))(v72, v73, v67);
            __swift_storeEnumTagSinglePayload((uint64_t)v72, 0, 1, v67);
          }
          v6 = v139;
          v65[*(int *)(v70 + 24)] = v66[*(int *)(v70 + 24)];
          v16 = (int *)v143;
          v14[*(int *)(v143 + 60)] = v15[*(int *)(v143 + 60)];
          *(_QWORD *)&v14[*(int *)(v143 + 64)] = *(_QWORD *)&v15[*(int *)(v143 + 64)];
          swift_retain();
          __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v143);
          v7 = v141;
          break;
        default:
          memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
          goto LABEL_21;
      }
    }
    v75 = v6[8];
    *(_QWORD *)(a1 + v6[7]) = *(uint64_t *)((char *)v7 + v6[7]);
    v76 = (char *)(a1 + v75);
    v77 = (char *)v7 + v75;
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v77, 1, (uint64_t)v16))
    {
      v78 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
      memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
    }
    else
    {
      v142 = v7;
      v79 = type metadata accessor for Participant.State(0);
      v144 = (uint64_t)v16;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
        case 2u:
        case 3u:
        case 5u:
          v80 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v80 - 8) + 16))(v76, v77, v80);
          goto LABEL_48;
        case 4u:
          v81 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v81 - 8) + 16))(v76, v77, v81);
          v138 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
          v82 = *(int *)(v138 + 48);
          v83 = &v76[v82];
          v84 = &v77[v82];
          *(_OWORD *)v83 = *(_OWORD *)&v77[v82];
          v85 = *(_QWORD *)&v77[v82 + 16];
          v86 = *(_QWORD *)&v77[v82 + 24];
          *((_QWORD *)v83 + 2) = v85;
          *((_QWORD *)v83 + 3) = v86;
          *((_WORD *)v83 + 16) = *((_WORD *)v84 + 16);
          *((_QWORD *)v83 + 5) = *((_QWORD *)v84 + 5);
          v83[48] = v84[48];
          *(_OWORD *)(v83 + 56) = *(_OWORD *)(v84 + 56);
          *(_OWORD *)(v83 + 72) = *(_OWORD *)(v84 + 72);
          v83[88] = v84[88];
          v83[89] = v84[89];
          v87 = *((_QWORD *)v84 + 15);
          swift_bridgeObjectRetain();
          if (v87)
          {
            if (v87 == 1)
            {
              v88 = v83 + 96;
              v89 = v84 + 96;
              v90 = 209;
              goto LABEL_42;
            }
            v92 = *((_QWORD *)v84 + 16);
            *((_QWORD *)v83 + 15) = v87;
            *((_QWORD *)v83 + 16) = v92;
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v87 - 8))((uint64_t)(v83 + 96), (uint64_t)(v84 + 96), v87);
          }
          else
          {
            v91 = *((_OWORD *)v84 + 7);
            *((_OWORD *)v83 + 6) = *((_OWORD *)v84 + 6);
            *((_OWORD *)v83 + 7) = v91;
            *((_QWORD *)v83 + 16) = *((_QWORD *)v84 + 16);
          }
          *((_DWORD *)v83 + 34) = *((_DWORD *)v84 + 34);
          v93 = *((_OWORD *)v84 + 10);
          *((_OWORD *)v83 + 9) = *((_OWORD *)v84 + 9);
          *((_OWORD *)v83 + 10) = v93;
          *((_OWORD *)v83 + 11) = *((_OWORD *)v84 + 11);
          v83[192] = v84[192];
          v88 = v83 + 208;
          v89 = v84 + 208;
          *((_QWORD *)v83 + 25) = *((_QWORD *)v84 + 25);
          v90 = 97;
LABEL_42:
          memcpy(v88, v89, v90);
          v94 = *((_QWORD *)v84 + 39);
          if (v94)
          {
            v95 = *((_QWORD *)v84 + 40);
            v96 = *((_QWORD *)v84 + 41);
            *((_QWORD *)v83 + 39) = v94;
            *((_QWORD *)v83 + 40) = v95;
            *((_QWORD *)v83 + 41) = v96;
            swift_unknownObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v83 + 312) = *(_OWORD *)(v84 + 312);
            *((_QWORD *)v83 + 41) = *((_QWORD *)v84 + 41);
          }
          v97 = *(int *)(v138 + 64);
          v98 = &v76[v97];
          v99 = &v77[v97];
          v100 = *((_QWORD *)v99 + 1);
          v16 = (int *)v144;
          if (v100)
          {
            *(_QWORD *)v98 = *(_QWORD *)v99;
            *((_QWORD *)v98 + 1) = v100;
            v101 = *((_QWORD *)v99 + 3);
            *((_QWORD *)v98 + 2) = *((_QWORD *)v99 + 2);
            *((_QWORD *)v98 + 3) = v101;
            v98[32] = v99[32];
            *(_OWORD *)(v98 + 40) = *(_OWORD *)(v99 + 40);
            *((_QWORD *)v98 + 7) = *((_QWORD *)v99 + 7);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            v102 = *((_OWORD *)v99 + 1);
            *(_OWORD *)v98 = *(_OWORD *)v99;
            *((_OWORD *)v98 + 1) = v102;
            v103 = *((_OWORD *)v99 + 3);
            *((_OWORD *)v98 + 2) = *((_OWORD *)v99 + 2);
            *((_OWORD *)v98 + 3) = v103;
          }
LABEL_48:
          swift_storeEnumTagMultiPayload();
LABEL_49:
          v104 = v16[5];
          v105 = &v76[v104];
          v106 = &v77[v104];
          v107 = type metadata accessor for UUID();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v107 - 8) + 16))(v105, v106, v107);
          v108 = v16[6];
          v109 = &v76[v108];
          v110 = &v77[v108];
          v109[4] = v110[4];
          *(_DWORD *)v109 = *(_DWORD *)v110;
          v111 = v16[7];
          v112 = &v76[v111];
          v113 = &v77[v111];
          v114 = *(void **)v113;
          v140 = v6;
          if (*(_QWORD *)v113)
          {
            v115 = *((_QWORD *)v113 + 1);
            *(_QWORD *)v112 = v114;
            *((_QWORD *)v112 + 1) = v115;
            v112[16] = v113[16];
            v116 = *((_QWORD *)v113 + 4);
            *((_QWORD *)v112 + 3) = *((_QWORD *)v113 + 3);
            *((_QWORD *)v112 + 4) = v116;
            v117 = v114;
            swift_bridgeObjectRetain();
          }
          else
          {
            v118 = *((_OWORD *)v113 + 1);
            *(_OWORD *)v112 = *(_OWORD *)v113;
            *((_OWORD *)v112 + 1) = v118;
            *((_QWORD *)v112 + 4) = *((_QWORD *)v113 + 4);
          }
          *(_QWORD *)&v76[v16[8]] = *(_QWORD *)&v77[v16[8]];
          v119 = v16[9];
          v120 = &v76[v119];
          v121 = &v77[v119];
          v122 = *((_QWORD *)v121 + 1);
          *(_QWORD *)v120 = *(_QWORD *)v121;
          *((_QWORD *)v120 + 1) = v122;
          v76[v16[10]] = v77[v16[10]];
          *(_QWORD *)&v76[v16[11]] = *(_QWORD *)&v77[v16[11]];
          v123 = v16[12];
          v124 = *(void **)&v77[v123];
          *(_QWORD *)&v76[v123] = v124;
          v76[v16[13]] = v77[v16[13]];
          v125 = v16[14];
          v126 = &v76[v125];
          v127 = &v77[v125];
          v128 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v129 = v124;
          if (__swift_getEnumTagSinglePayload((uint64_t)v127, 1, v128))
          {
            v130 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
            memcpy(v126, v127, *(_QWORD *)(*(_QWORD *)(v130 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v128 - 8) + 16))(v126, v127, v128);
            __swift_storeEnumTagSinglePayload((uint64_t)v126, 0, 1, v128);
          }
          v131 = type metadata accessor for Participant.CountdownInfo(0);
          v132 = *(int *)(v131 + 20);
          v133 = &v126[v132];
          v134 = &v127[v132];
          if (__swift_getEnumTagSinglePayload((uint64_t)&v127[v132], 1, v128))
          {
            v135 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
            memcpy(v133, v134, *(_QWORD *)(*(_QWORD *)(v135 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v128 - 8) + 16))(v133, v134, v128);
            __swift_storeEnumTagSinglePayload((uint64_t)v133, 0, 1, v128);
          }
          v6 = v140;
          v126[*(int *)(v131 + 24)] = v127[*(int *)(v131 + 24)];
          v76[*(int *)(v144 + 60)] = v77[*(int *)(v144 + 60)];
          *(_QWORD *)&v76[*(int *)(v144 + 64)] = *(_QWORD *)&v77[*(int *)(v144 + 64)];
          swift_retain();
          __swift_storeEnumTagSinglePayload((uint64_t)v76, 0, 1, v144);
          v7 = v142;
          break;
        default:
          memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
          goto LABEL_49;
      }
    }
    memcpy((void *)(a1 + v6[9]), (char *)v7 + v6[9], 0x61uLL);
  }
  return a1;
}

uint64_t destroy for InCallControlsActivityCellViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v4 = a1 + 16;
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v4);
  v5 = a1 + *(int *)(a2 + 24);
  v6 = (int *)type metadata accessor for Participant(0);
  if (!__swift_getEnumTagSinglePayload(v5, 1, (uint64_t)v6))
  {
    type metadata accessor for Participant.State(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        v7 = type metadata accessor for Date();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v5, v7);
        break;
      case 4u:
        v23 = type metadata accessor for Date();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v5, v23);
        v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        v25 = v5 + *(int *)(v24 + 48);
        swift_bridgeObjectRelease();
        if (*(_QWORD *)(v25 + 120) >= 2uLL)
          __swift_destroy_boxed_opaque_existential_1(v25 + 96);
        if (*(_QWORD *)(v25 + 312))
        {
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
        }
        if (*(_QWORD *)(v5 + *(int *)(v24 + 64) + 8))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        break;
      default:
        break;
    }
    v8 = v5 + v6[5];
    v9 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
    v10 = (id *)(v5 + v6[7]);
    if (*v10)
    {

      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v11 = v5 + v6[14];
    v12 = type metadata accessor for Date();
    if (!__swift_getEnumTagSinglePayload(v11, 1, v12))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
    v13 = v11 + *(int *)(type metadata accessor for Participant.CountdownInfo(0) + 20);
    if (!__swift_getEnumTagSinglePayload(v13, 1, v12))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v13, v12);
    swift_release();
  }
  swift_bridgeObjectRelease();
  v14 = a1 + *(int *)(a2 + 32);
  result = __swift_getEnumTagSinglePayload(v14, 1, (uint64_t)v6);
  if (!(_DWORD)result)
  {
    type metadata accessor for Participant.State(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        v16 = type metadata accessor for Date();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v14, v16);
        break;
      case 4u:
        v26 = type metadata accessor for Date();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v14, v26);
        v27 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        v28 = v14 + *(int *)(v27 + 48);
        swift_bridgeObjectRelease();
        if (*(_QWORD *)(v28 + 120) >= 2uLL)
          __swift_destroy_boxed_opaque_existential_1(v28 + 96);
        if (*(_QWORD *)(v28 + 312))
        {
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
        }
        if (*(_QWORD *)(v14 + *(int *)(v27 + 64) + 8))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        break;
      default:
        break;
    }
    v17 = v14 + v6[5];
    v18 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
    v19 = (id *)(v14 + v6[7]);
    if (*v19)
    {

      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v20 = v14 + v6[14];
    v21 = type metadata accessor for Date();
    if (!__swift_getEnumTagSinglePayload(v20, 1, v21))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v20, v21);
    v22 = v20 + *(int *)(type metadata accessor for Participant.CountdownInfo(0) + 20);
    if (!__swift_getEnumTagSinglePayload(v22, 1, v21))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v22, v21);
    return swift_release();
  }
  return result;
}

_OWORD *initializeWithCopy for InCallControlsActivityCellViewModel(_OWORD *a1, _OWORD *a2, int *a3)
{
  _OWORD *v4;
  _OWORD *v5;
  _OWORD *v6;
  _OWORD *v7;
  __int128 v8;
  uint64_t v9;
  void (*v10)(_OWORD *, _OWORD *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  const void *v26;
  size_t v27;
  __int128 v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  __int128 v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  const void *v87;
  size_t v88;
  __int128 v89;
  uint64_t v90;
  __int128 v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  __int128 v100;
  __int128 v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  char *v110;
  char *v111;
  void *v112;
  uint64_t v113;
  uint64_t v114;
  id v115;
  __int128 v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  void *v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  id v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  uint64_t v135;
  uint64_t v136;
  int *v137;
  int *v138;
  _OWORD *v139;
  _OWORD *v140;
  _OWORD *v141;
  _OWORD *v142;

  v4 = a2;
  v5 = a1;
  *a1 = *a2;
  v6 = a1 + 1;
  v7 = a2 + 1;
  v8 = *(_OWORD *)((char *)a2 + 40);
  *(_OWORD *)((char *)a1 + 40) = v8;
  v9 = v8;
  v10 = **(void (***)(_OWORD *, _OWORD *, uint64_t))(v8 - 8);
  swift_unknownObjectRetain();
  v10(v6, v7, v9);
  v11 = a3[6];
  v12 = (char *)v5 + v11;
  v13 = (char *)v4 + v11;
  v14 = (int *)type metadata accessor for Participant(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, (uint64_t)v14))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    v141 = v4;
    v16 = type metadata accessor for Participant.State(0);
    v137 = a3;
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        v17 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v12, v13, v17);
        goto LABEL_18;
      case 4u:
        v18 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v12, v13, v18);
        v135 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        v19 = *(int *)(v135 + 48);
        v20 = &v12[v19];
        v21 = &v13[v19];
        *(_OWORD *)v20 = *(_OWORD *)&v13[v19];
        v22 = *(_QWORD *)&v13[v19 + 16];
        v23 = *(_QWORD *)&v13[v19 + 24];
        *((_QWORD *)v20 + 2) = v22;
        *((_QWORD *)v20 + 3) = v23;
        *((_WORD *)v20 + 16) = *((_WORD *)v21 + 16);
        *((_QWORD *)v20 + 5) = *((_QWORD *)v21 + 5);
        v20[48] = v21[48];
        *(_OWORD *)(v20 + 56) = *(_OWORD *)(v21 + 56);
        *(_OWORD *)(v20 + 72) = *(_OWORD *)(v21 + 72);
        v20[88] = v21[88];
        v20[89] = v21[89];
        v24 = *((_QWORD *)v21 + 15);
        swift_bridgeObjectRetain();
        if (v24)
        {
          if (v24 == 1)
          {
            v25 = v20 + 96;
            v26 = v21 + 96;
            v27 = 209;
            goto LABEL_12;
          }
          v29 = *((_QWORD *)v21 + 16);
          *((_QWORD *)v20 + 15) = v24;
          *((_QWORD *)v20 + 16) = v29;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v24 - 8))((uint64_t)(v20 + 96), (uint64_t)(v21 + 96), v24);
        }
        else
        {
          v28 = *((_OWORD *)v21 + 7);
          *((_OWORD *)v20 + 6) = *((_OWORD *)v21 + 6);
          *((_OWORD *)v20 + 7) = v28;
          *((_QWORD *)v20 + 16) = *((_QWORD *)v21 + 16);
        }
        *((_DWORD *)v20 + 34) = *((_DWORD *)v21 + 34);
        v30 = *((_OWORD *)v21 + 10);
        *((_OWORD *)v20 + 9) = *((_OWORD *)v21 + 9);
        *((_OWORD *)v20 + 10) = v30;
        *((_OWORD *)v20 + 11) = *((_OWORD *)v21 + 11);
        v20[192] = v21[192];
        v25 = v20 + 208;
        v26 = v21 + 208;
        *((_QWORD *)v20 + 25) = *((_QWORD *)v21 + 25);
        v27 = 97;
LABEL_12:
        memcpy(v25, v26, v27);
        v31 = *((_QWORD *)v21 + 39);
        if (v31)
        {
          v32 = *((_QWORD *)v21 + 40);
          v33 = *((_QWORD *)v21 + 41);
          *((_QWORD *)v20 + 39) = v31;
          *((_QWORD *)v20 + 40) = v32;
          *((_QWORD *)v20 + 41) = v33;
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v20 + 312) = *(_OWORD *)(v21 + 312);
          *((_QWORD *)v20 + 41) = *((_QWORD *)v21 + 41);
        }
        v34 = *(int *)(v135 + 64);
        v35 = &v12[v34];
        v36 = &v13[v34];
        v37 = *((_QWORD *)v36 + 1);
        if (v37)
        {
          *(_QWORD *)v35 = *(_QWORD *)v36;
          *((_QWORD *)v35 + 1) = v37;
          v38 = *((_QWORD *)v36 + 3);
          *((_QWORD *)v35 + 2) = *((_QWORD *)v36 + 2);
          *((_QWORD *)v35 + 3) = v38;
          v35[32] = v36[32];
          *(_OWORD *)(v35 + 40) = *(_OWORD *)(v36 + 40);
          *((_QWORD *)v35 + 7) = *((_QWORD *)v36 + 7);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v39 = *((_OWORD *)v36 + 1);
          *(_OWORD *)v35 = *(_OWORD *)v36;
          *((_OWORD *)v35 + 1) = v39;
          v40 = *((_OWORD *)v36 + 3);
          *((_OWORD *)v35 + 2) = *((_OWORD *)v36 + 2);
          *((_OWORD *)v35 + 3) = v40;
        }
LABEL_18:
        swift_storeEnumTagMultiPayload();
LABEL_19:
        v41 = v14[5];
        v42 = &v12[v41];
        v43 = &v13[v41];
        v44 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(v42, v43, v44);
        v45 = v14[6];
        v46 = &v12[v45];
        v47 = &v13[v45];
        v46[4] = v47[4];
        *(_DWORD *)v46 = *(_DWORD *)v47;
        v48 = v14[7];
        v49 = &v12[v48];
        v50 = &v13[v48];
        v51 = *(void **)v50;
        v139 = v5;
        if (*(_QWORD *)v50)
        {
          v52 = *((_QWORD *)v50 + 1);
          *(_QWORD *)v49 = v51;
          *((_QWORD *)v49 + 1) = v52;
          v49[16] = v50[16];
          v53 = *((_QWORD *)v50 + 4);
          *((_QWORD *)v49 + 3) = *((_QWORD *)v50 + 3);
          *((_QWORD *)v49 + 4) = v53;
          v54 = v51;
          swift_bridgeObjectRetain();
        }
        else
        {
          v55 = *((_OWORD *)v50 + 1);
          *(_OWORD *)v49 = *(_OWORD *)v50;
          *((_OWORD *)v49 + 1) = v55;
          *((_QWORD *)v49 + 4) = *((_QWORD *)v50 + 4);
        }
        *(_QWORD *)&v12[v14[8]] = *(_QWORD *)&v13[v14[8]];
        v56 = v14[9];
        v57 = &v12[v56];
        v58 = &v13[v56];
        v59 = *((_QWORD *)v58 + 1);
        *(_QWORD *)v57 = *(_QWORD *)v58;
        *((_QWORD *)v57 + 1) = v59;
        v12[v14[10]] = v13[v14[10]];
        *(_QWORD *)&v12[v14[11]] = *(_QWORD *)&v13[v14[11]];
        v60 = v14[12];
        v61 = *(void **)&v13[v60];
        *(_QWORD *)&v12[v60] = v61;
        v12[v14[13]] = v13[v14[13]];
        v62 = v14[14];
        v63 = &v12[v62];
        v64 = &v13[v62];
        v65 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v66 = v61;
        if (__swift_getEnumTagSinglePayload((uint64_t)v64, 1, v65))
        {
          v67 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
          memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 16))(v63, v64, v65);
          __swift_storeEnumTagSinglePayload((uint64_t)v63, 0, 1, v65);
        }
        v5 = v139;
        v68 = type metadata accessor for Participant.CountdownInfo(0);
        v69 = *(int *)(v68 + 20);
        v70 = &v63[v69];
        v71 = &v64[v69];
        if (__swift_getEnumTagSinglePayload((uint64_t)&v64[v69], 1, v65))
        {
          v72 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
          memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 16))(v70, v71, v65);
          __swift_storeEnumTagSinglePayload((uint64_t)v70, 0, 1, v65);
        }
        a3 = v137;
        v63[*(int *)(v68 + 24)] = v64[*(int *)(v68 + 24)];
        v12[v14[15]] = v13[v14[15]];
        *(_QWORD *)&v12[v14[16]] = *(_QWORD *)&v13[v14[16]];
        swift_retain();
        __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, (uint64_t)v14);
        v4 = v141;
        break;
      default:
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
        goto LABEL_19;
    }
  }
  v73 = a3[8];
  *(_QWORD *)((char *)v5 + a3[7]) = *(_QWORD *)((char *)v4 + a3[7]);
  v74 = (char *)v5 + v73;
  v75 = (char *)v4 + v73;
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v75, 1, (uint64_t)v14))
  {
    v76 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
    memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
  }
  else
  {
    v142 = v4;
    v77 = type metadata accessor for Participant.State(0);
    v138 = a3;
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        v78 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v78 - 8) + 16))(v74, v75, v78);
        goto LABEL_46;
      case 4u:
        v79 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v79 - 8) + 16))(v74, v75, v79);
        v136 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        v80 = *(int *)(v136 + 48);
        v81 = &v74[v80];
        v82 = &v75[v80];
        *(_OWORD *)v81 = *(_OWORD *)&v75[v80];
        v83 = *(_QWORD *)&v75[v80 + 16];
        v84 = *(_QWORD *)&v75[v80 + 24];
        *((_QWORD *)v81 + 2) = v83;
        *((_QWORD *)v81 + 3) = v84;
        *((_WORD *)v81 + 16) = *((_WORD *)v82 + 16);
        *((_QWORD *)v81 + 5) = *((_QWORD *)v82 + 5);
        v81[48] = v82[48];
        *(_OWORD *)(v81 + 56) = *(_OWORD *)(v82 + 56);
        *(_OWORD *)(v81 + 72) = *(_OWORD *)(v82 + 72);
        v81[88] = v82[88];
        v81[89] = v82[89];
        v85 = *((_QWORD *)v82 + 15);
        swift_bridgeObjectRetain();
        if (v85)
        {
          if (v85 == 1)
          {
            v86 = v81 + 96;
            v87 = v82 + 96;
            v88 = 209;
            goto LABEL_40;
          }
          v90 = *((_QWORD *)v82 + 16);
          *((_QWORD *)v81 + 15) = v85;
          *((_QWORD *)v81 + 16) = v90;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v85 - 8))((uint64_t)(v81 + 96), (uint64_t)(v82 + 96), v85);
        }
        else
        {
          v89 = *((_OWORD *)v82 + 7);
          *((_OWORD *)v81 + 6) = *((_OWORD *)v82 + 6);
          *((_OWORD *)v81 + 7) = v89;
          *((_QWORD *)v81 + 16) = *((_QWORD *)v82 + 16);
        }
        *((_DWORD *)v81 + 34) = *((_DWORD *)v82 + 34);
        v91 = *((_OWORD *)v82 + 10);
        *((_OWORD *)v81 + 9) = *((_OWORD *)v82 + 9);
        *((_OWORD *)v81 + 10) = v91;
        *((_OWORD *)v81 + 11) = *((_OWORD *)v82 + 11);
        v81[192] = v82[192];
        v86 = v81 + 208;
        v87 = v82 + 208;
        *((_QWORD *)v81 + 25) = *((_QWORD *)v82 + 25);
        v88 = 97;
LABEL_40:
        memcpy(v86, v87, v88);
        v92 = *((_QWORD *)v82 + 39);
        if (v92)
        {
          v93 = *((_QWORD *)v82 + 40);
          v94 = *((_QWORD *)v82 + 41);
          *((_QWORD *)v81 + 39) = v92;
          *((_QWORD *)v81 + 40) = v93;
          *((_QWORD *)v81 + 41) = v94;
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v81 + 312) = *(_OWORD *)(v82 + 312);
          *((_QWORD *)v81 + 41) = *((_QWORD *)v82 + 41);
        }
        v95 = *(int *)(v136 + 64);
        v96 = &v74[v95];
        v97 = &v75[v95];
        v98 = *((_QWORD *)v97 + 1);
        if (v98)
        {
          *(_QWORD *)v96 = *(_QWORD *)v97;
          *((_QWORD *)v96 + 1) = v98;
          v99 = *((_QWORD *)v97 + 3);
          *((_QWORD *)v96 + 2) = *((_QWORD *)v97 + 2);
          *((_QWORD *)v96 + 3) = v99;
          v96[32] = v97[32];
          *(_OWORD *)(v96 + 40) = *(_OWORD *)(v97 + 40);
          *((_QWORD *)v96 + 7) = *((_QWORD *)v97 + 7);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v100 = *((_OWORD *)v97 + 1);
          *(_OWORD *)v96 = *(_OWORD *)v97;
          *((_OWORD *)v96 + 1) = v100;
          v101 = *((_OWORD *)v97 + 3);
          *((_OWORD *)v96 + 2) = *((_OWORD *)v97 + 2);
          *((_OWORD *)v96 + 3) = v101;
        }
LABEL_46:
        swift_storeEnumTagMultiPayload();
LABEL_47:
        v102 = v14[5];
        v103 = &v74[v102];
        v104 = &v75[v102];
        v105 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v105 - 8) + 16))(v103, v104, v105);
        v106 = v14[6];
        v107 = &v74[v106];
        v108 = &v75[v106];
        v107[4] = v108[4];
        *(_DWORD *)v107 = *(_DWORD *)v108;
        v109 = v14[7];
        v110 = &v74[v109];
        v111 = &v75[v109];
        v112 = *(void **)v111;
        v140 = v5;
        if (*(_QWORD *)v111)
        {
          v113 = *((_QWORD *)v111 + 1);
          *(_QWORD *)v110 = v112;
          *((_QWORD *)v110 + 1) = v113;
          v110[16] = v111[16];
          v114 = *((_QWORD *)v111 + 4);
          *((_QWORD *)v110 + 3) = *((_QWORD *)v111 + 3);
          *((_QWORD *)v110 + 4) = v114;
          v115 = v112;
          swift_bridgeObjectRetain();
        }
        else
        {
          v116 = *((_OWORD *)v111 + 1);
          *(_OWORD *)v110 = *(_OWORD *)v111;
          *((_OWORD *)v110 + 1) = v116;
          *((_QWORD *)v110 + 4) = *((_QWORD *)v111 + 4);
        }
        *(_QWORD *)&v74[v14[8]] = *(_QWORD *)&v75[v14[8]];
        v117 = v14[9];
        v118 = &v74[v117];
        v119 = &v75[v117];
        v120 = *((_QWORD *)v119 + 1);
        *(_QWORD *)v118 = *(_QWORD *)v119;
        *((_QWORD *)v118 + 1) = v120;
        v74[v14[10]] = v75[v14[10]];
        *(_QWORD *)&v74[v14[11]] = *(_QWORD *)&v75[v14[11]];
        v121 = v14[12];
        v122 = *(void **)&v75[v121];
        *(_QWORD *)&v74[v121] = v122;
        v74[v14[13]] = v75[v14[13]];
        v123 = v14[14];
        v124 = &v74[v123];
        v125 = &v75[v123];
        v126 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v127 = v122;
        if (__swift_getEnumTagSinglePayload((uint64_t)v125, 1, v126))
        {
          v128 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
          memcpy(v124, v125, *(_QWORD *)(*(_QWORD *)(v128 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v126 - 8) + 16))(v124, v125, v126);
          __swift_storeEnumTagSinglePayload((uint64_t)v124, 0, 1, v126);
        }
        v5 = v140;
        v129 = type metadata accessor for Participant.CountdownInfo(0);
        v130 = *(int *)(v129 + 20);
        v131 = &v124[v130];
        v132 = &v125[v130];
        if (__swift_getEnumTagSinglePayload((uint64_t)&v125[v130], 1, v126))
        {
          v133 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
          memcpy(v131, v132, *(_QWORD *)(*(_QWORD *)(v133 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v126 - 8) + 16))(v131, v132, v126);
          __swift_storeEnumTagSinglePayload((uint64_t)v131, 0, 1, v126);
        }
        a3 = v138;
        v124[*(int *)(v129 + 24)] = v125[*(int *)(v129 + 24)];
        v74[v14[15]] = v75[v14[15]];
        *(_QWORD *)&v74[v14[16]] = *(_QWORD *)&v75[v14[16]];
        swift_retain();
        __swift_storeEnumTagSinglePayload((uint64_t)v74, 0, 1, (uint64_t)v14);
        v4 = v142;
        break;
      default:
        memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
        goto LABEL_47;
    }
  }
  memcpy((char *)v5 + a3[9], (char *)v4 + a3[9], 0x61uLL);
  return v5;
}

_QWORD *assignWithCopy for InCallControlsActivityCellViewModel(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  int *v10;
  int EnumTagSinglePayload;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  void *v26;
  const void *v27;
  size_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  void *v37;
  const void *v38;
  size_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  char *v48;
  char *v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  int v60;
  uint64_t v61;
  char *v62;
  char *v63;
  void *v64;
  uint64_t v65;
  id v66;
  __int128 v67;
  __int128 v68;
  uint64_t v69;
  _QWORD *v70;
  _QWORD *v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  uint64_t v89;
  uint64_t v90;
  __int128 v91;
  uint64_t v92;
  char *v93;
  char *v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  _BYTE *v103;
  _BYTE *v104;
  uint64_t v105;
  char *v106;
  char *v107;
  void *v108;
  void *v109;
  id v110;
  uint64_t v111;
  uint64_t v112;
  id v113;
  uint64_t v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  uint64_t v118;
  _QWORD *v119;
  _QWORD *v120;
  uint64_t v121;
  void *v122;
  void *v123;
  id v124;
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  int v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  char *v135;
  int v136;
  int v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  char *v142;
  int v143;
  int v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  char *v153;
  uint64_t v154;
  __int128 v155;
  __int128 v156;
  uint64_t v157;
  void *v158;
  const void *v159;
  size_t v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  char *v164;
  uint64_t v165;
  __int128 v166;
  __int128 v167;
  uint64_t v168;
  void *v169;
  const void *v170;
  size_t v171;
  __int128 v172;
  __int128 v173;
  __int128 v174;
  __int128 v175;
  uint64_t v176;
  uint64_t v177;
  __int128 v178;
  uint64_t v179;
  char *v180;
  char *v181;
  __int128 v182;
  __int128 v183;
  __int128 v184;
  uint64_t v185;
  char *v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  char *v190;
  char *v191;
  int v192;
  uint64_t v193;
  char *v194;
  char *v195;
  void *v196;
  uint64_t v197;
  id v198;
  __int128 v199;
  __int128 v200;
  uint64_t v201;
  char *v202;
  char *v203;
  uint64_t v204;
  void *v205;
  uint64_t v206;
  char *v207;
  char *v208;
  uint64_t v209;
  id v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  char *v214;
  char *v215;
  uint64_t v216;
  __int128 v217;
  __int128 v218;
  __int128 v219;
  __int128 v220;
  uint64_t v221;
  uint64_t v222;
  __int128 v223;
  uint64_t v224;
  char *v225;
  char *v226;
  __int128 v227;
  __int128 v228;
  __int128 v229;
  uint64_t v230;
  char *v231;
  char *v232;
  uint64_t v233;
  uint64_t v234;
  char *v235;
  char *v236;
  uint64_t v237;
  char *v238;
  char *v239;
  void *v240;
  void *v241;
  _QWORD *v242;
  id v243;
  uint64_t v244;
  uint64_t v245;
  id v246;
  uint64_t v247;
  __int128 v248;
  __int128 v249;
  __int128 v250;
  uint64_t v251;
  char *v252;
  char *v253;
  uint64_t v254;
  void *v255;
  void *v256;
  id v257;
  uint64_t v258;
  char *v259;
  char *v260;
  uint64_t v261;
  int v262;
  int v263;
  char *v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  char *v269;
  char *v270;
  int v271;
  int v272;
  uint64_t v273;
  uint64_t v274;
  int *__src;
  int *__srca;
  char *__srcb;
  int *__srcc;
  int *__srcd;
  char *__srce;
  _QWORD *v282;
  _QWORD *v283;
  int *v284;
  int *v285;
  int *v286;
  int *v287;
  _QWORD *v288;
  _QWORD *v289;

  v4 = a2;
  v5 = a1;
  v6 = a2[1];
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v5[1] = v6;
  __swift_assign_boxed_opaque_existential_1(v5 + 2, v4 + 2);
  v7 = a3[6];
  v8 = (char *)v5 + v7;
  v9 = (char *)v4 + v7;
  v10 = (int *)type metadata accessor for Participant(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, (uint64_t)v10);
  v12 = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, (uint64_t)v10);
  if (EnumTagSinglePayload)
  {
    if (!v12)
    {
      v288 = v4;
      v13 = type metadata accessor for Participant.State(0);
      v284 = a3;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
        case 2u:
        case 3u:
        case 5u:
          v14 = type metadata accessor for Date();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v8, v9, v14);
          goto LABEL_28;
        case 4u:
          v18 = type metadata accessor for Date();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v8, v9, v18);
          __src = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
          v19 = __src[12];
          v20 = &v8[v19];
          v21 = &v9[v19];
          *(_OWORD *)v20 = *(_OWORD *)&v9[v19];
          *((_QWORD *)v20 + 2) = *(_QWORD *)&v9[v19 + 16];
          v22 = *(_QWORD *)&v9[v19 + 24];
          *((_WORD *)v20 + 16) = *((_WORD *)v21 + 16);
          *((_QWORD *)v20 + 3) = v22;
          *((_QWORD *)v20 + 5) = *((_QWORD *)v21 + 5);
          v20[48] = v21[48];
          v23 = *(_OWORD *)(v21 + 72);
          v24 = *(_OWORD *)(v21 + 56);
          v20[88] = v21[88];
          *(_OWORD *)(v20 + 56) = v24;
          *(_OWORD *)(v20 + 72) = v23;
          v20[89] = v21[89];
          v25 = *((_QWORD *)v21 + 15);
          swift_bridgeObjectRetain();
          if (v25)
          {
            if (v25 == 1)
            {
              v26 = v20 + 96;
              v27 = v21 + 96;
              v28 = 209;
              goto LABEL_22;
            }
            *((_QWORD *)v20 + 15) = v25;
            *((_QWORD *)v20 + 16) = *((_QWORD *)v21 + 16);
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v25 - 8))((uint64_t)(v20 + 96), (uint64_t)(v21 + 96), v25);
          }
          else
          {
            v40 = *((_OWORD *)v21 + 6);
            v41 = *((_OWORD *)v21 + 7);
            *((_QWORD *)v20 + 16) = *((_QWORD *)v21 + 16);
            *((_OWORD *)v20 + 6) = v40;
            *((_OWORD *)v20 + 7) = v41;
          }
          *((_DWORD *)v20 + 34) = *((_DWORD *)v21 + 34);
          *((_QWORD *)v20 + 18) = *((_QWORD *)v21 + 18);
          *((_QWORD *)v20 + 19) = *((_QWORD *)v21 + 19);
          v42 = *((_OWORD *)v21 + 10);
          v43 = *((_OWORD *)v21 + 11);
          v20[192] = v21[192];
          *((_OWORD *)v20 + 10) = v42;
          *((_OWORD *)v20 + 11) = v43;
          *((_QWORD *)v20 + 25) = *((_QWORD *)v21 + 25);
          v26 = v20 + 208;
          v27 = v21 + 208;
          v28 = 97;
LABEL_22:
          memcpy(v26, v27, v28);
          v44 = *((_QWORD *)v21 + 39);
          if (v44)
          {
            v45 = *((_QWORD *)v21 + 40);
            *((_QWORD *)v20 + 39) = v44;
            *((_QWORD *)v20 + 40) = v45;
            *((_QWORD *)v20 + 41) = *((_QWORD *)v21 + 41);
            swift_unknownObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            v46 = *(_OWORD *)(v21 + 312);
            *((_QWORD *)v20 + 41) = *((_QWORD *)v21 + 41);
            *(_OWORD *)(v20 + 312) = v46;
          }
          v47 = __src[16];
          v48 = &v8[v47];
          v49 = &v9[v47];
          if (*((_QWORD *)v49 + 1))
          {
            *(_QWORD *)v48 = *(_QWORD *)v49;
            *((_QWORD *)v48 + 1) = *((_QWORD *)v49 + 1);
            *((_QWORD *)v48 + 2) = *((_QWORD *)v49 + 2);
            *((_QWORD *)v48 + 3) = *((_QWORD *)v49 + 3);
            v48[32] = v49[32];
            *((_QWORD *)v48 + 5) = *((_QWORD *)v49 + 5);
            *((_QWORD *)v48 + 6) = *((_QWORD *)v49 + 6);
            *((_QWORD *)v48 + 7) = *((_QWORD *)v49 + 7);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            v50 = *(_OWORD *)v49;
            v51 = *((_OWORD *)v49 + 1);
            v52 = *((_OWORD *)v49 + 3);
            *((_OWORD *)v48 + 2) = *((_OWORD *)v49 + 2);
            *((_OWORD *)v48 + 3) = v52;
            *(_OWORD *)v48 = v50;
            *((_OWORD *)v48 + 1) = v51;
          }
LABEL_28:
          swift_storeEnumTagMultiPayload();
LABEL_29:
          v53 = v10[5];
          v54 = &v8[v53];
          v55 = &v9[v53];
          v56 = type metadata accessor for UUID();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 16))(v54, v55, v56);
          v57 = v10[6];
          v58 = &v8[v57];
          v59 = &v9[v57];
          v60 = *(_DWORD *)v59;
          v58[4] = v59[4];
          *(_DWORD *)v58 = v60;
          v61 = v10[7];
          v62 = &v8[v61];
          v63 = &v9[v61];
          v64 = *(void **)v63;
          v282 = v5;
          if (*(_QWORD *)v63)
          {
            *(_QWORD *)v62 = v64;
            v65 = *((_QWORD *)v63 + 1);
            v62[16] = v63[16];
            *((_QWORD *)v62 + 1) = v65;
            *((_QWORD *)v62 + 3) = *((_QWORD *)v63 + 3);
            *((_QWORD *)v62 + 4) = *((_QWORD *)v63 + 4);
            v66 = v64;
            swift_bridgeObjectRetain();
          }
          else
          {
            v67 = *(_OWORD *)v63;
            v68 = *((_OWORD *)v63 + 1);
            *((_QWORD *)v62 + 4) = *((_QWORD *)v63 + 4);
            *(_OWORD *)v62 = v67;
            *((_OWORD *)v62 + 1) = v68;
          }
          *(_QWORD *)&v8[v10[8]] = *(_QWORD *)&v9[v10[8]];
          v69 = v10[9];
          v70 = &v8[v69];
          v71 = &v9[v69];
          *v70 = *v71;
          v70[1] = v71[1];
          v8[v10[10]] = v9[v10[10]];
          *(_QWORD *)&v8[v10[11]] = *(_QWORD *)&v9[v10[11]];
          v72 = v10[12];
          v73 = *(void **)&v9[v72];
          *(_QWORD *)&v8[v72] = v73;
          v8[v10[13]] = v9[v10[13]];
          v74 = v10[14];
          v75 = &v8[v74];
          v76 = &v9[v74];
          v77 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v78 = v73;
          if (__swift_getEnumTagSinglePayload((uint64_t)v76, 1, v77))
          {
            v79 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
            memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v77 - 8) + 16))(v75, v76, v77);
            __swift_storeEnumTagSinglePayload((uint64_t)v75, 0, 1, v77);
          }
          v5 = v282;
          v80 = type metadata accessor for Participant.CountdownInfo(0);
          v81 = *(int *)(v80 + 20);
          v82 = &v75[v81];
          v83 = &v76[v81];
          if (__swift_getEnumTagSinglePayload((uint64_t)&v76[v81], 1, v77))
          {
            v84 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
            memcpy(v82, v83, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v77 - 8) + 16))(v82, v83, v77);
            __swift_storeEnumTagSinglePayload((uint64_t)v82, 0, 1, v77);
          }
          a3 = v284;
          v75[*(int *)(v80 + 24)] = v76[*(int *)(v80 + 24)];
          v8[v10[15]] = v9[v10[15]];
          *(_QWORD *)&v8[v10[16]] = *(_QWORD *)&v9[v10[16]];
          swift_retain();
          __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, (uint64_t)v10);
          break;
        default:
          memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
          goto LABEL_29;
      }
      goto LABEL_69;
    }
LABEL_7:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_70;
  }
  if (v12)
  {
    outlined destroy of AccountUpdateNotice((uint64_t)v8, type metadata accessor for Participant);
    goto LABEL_7;
  }
  v285 = a3;
  v288 = v4;
  if (v5 != v4)
  {
    outlined destroy of AccountUpdateNotice((uint64_t)v8, type metadata accessor for Participant.State);
    v16 = type metadata accessor for Participant.State(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        v17 = type metadata accessor for Date();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v8, v9, v17);
        goto LABEL_48;
      case 4u:
        v29 = type metadata accessor for Date();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v8, v9, v29);
        __srca = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        v30 = __srca[12];
        v31 = &v8[v30];
        v32 = &v9[v30];
        *(_OWORD *)v31 = *(_OWORD *)&v9[v30];
        *((_QWORD *)v31 + 2) = *(_QWORD *)&v9[v30 + 16];
        v33 = *(_QWORD *)&v9[v30 + 24];
        *((_WORD *)v31 + 16) = *((_WORD *)v32 + 16);
        *((_QWORD *)v31 + 3) = v33;
        *((_QWORD *)v31 + 5) = *((_QWORD *)v32 + 5);
        v31[48] = v32[48];
        v34 = *(_OWORD *)(v32 + 72);
        v35 = *(_OWORD *)(v32 + 56);
        v31[88] = v32[88];
        *(_OWORD *)(v31 + 56) = v35;
        *(_OWORD *)(v31 + 72) = v34;
        v31[89] = v32[89];
        v36 = *((_QWORD *)v32 + 15);
        swift_bridgeObjectRetain();
        if (v36)
        {
          if (v36 == 1)
          {
            v37 = v31 + 96;
            v38 = v32 + 96;
            v39 = 209;
            goto LABEL_42;
          }
          *((_QWORD *)v31 + 15) = v36;
          *((_QWORD *)v31 + 16) = *((_QWORD *)v32 + 16);
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v36 - 8))((uint64_t)(v31 + 96), (uint64_t)(v32 + 96), v36);
        }
        else
        {
          v85 = *((_OWORD *)v32 + 6);
          v86 = *((_OWORD *)v32 + 7);
          *((_QWORD *)v31 + 16) = *((_QWORD *)v32 + 16);
          *((_OWORD *)v31 + 6) = v85;
          *((_OWORD *)v31 + 7) = v86;
        }
        *((_DWORD *)v31 + 34) = *((_DWORD *)v32 + 34);
        *((_QWORD *)v31 + 18) = *((_QWORD *)v32 + 18);
        *((_QWORD *)v31 + 19) = *((_QWORD *)v32 + 19);
        v87 = *((_OWORD *)v32 + 10);
        v88 = *((_OWORD *)v32 + 11);
        v31[192] = v32[192];
        *((_OWORD *)v31 + 10) = v87;
        *((_OWORD *)v31 + 11) = v88;
        *((_QWORD *)v31 + 25) = *((_QWORD *)v32 + 25);
        v37 = v31 + 208;
        v38 = v32 + 208;
        v39 = 97;
LABEL_42:
        memcpy(v37, v38, v39);
        v89 = *((_QWORD *)v32 + 39);
        if (v89)
        {
          v90 = *((_QWORD *)v32 + 40);
          *((_QWORD *)v31 + 39) = v89;
          *((_QWORD *)v31 + 40) = v90;
          *((_QWORD *)v31 + 41) = *((_QWORD *)v32 + 41);
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v91 = *(_OWORD *)(v32 + 312);
          *((_QWORD *)v31 + 41) = *((_QWORD *)v32 + 41);
          *(_OWORD *)(v31 + 312) = v91;
        }
        v92 = __srca[16];
        v93 = &v8[v92];
        v94 = &v9[v92];
        if (*((_QWORD *)v94 + 1))
        {
          *(_QWORD *)v93 = *(_QWORD *)v94;
          *((_QWORD *)v93 + 1) = *((_QWORD *)v94 + 1);
          *((_QWORD *)v93 + 2) = *((_QWORD *)v94 + 2);
          *((_QWORD *)v93 + 3) = *((_QWORD *)v94 + 3);
          v93[32] = v94[32];
          *((_QWORD *)v93 + 5) = *((_QWORD *)v94 + 5);
          *((_QWORD *)v93 + 6) = *((_QWORD *)v94 + 6);
          *((_QWORD *)v93 + 7) = *((_QWORD *)v94 + 7);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v95 = *(_OWORD *)v94;
          v96 = *((_OWORD *)v94 + 1);
          v97 = *((_OWORD *)v94 + 3);
          *((_OWORD *)v93 + 2) = *((_OWORD *)v94 + 2);
          *((_OWORD *)v93 + 3) = v97;
          *(_OWORD *)v93 = v95;
          *((_OWORD *)v93 + 1) = v96;
        }
LABEL_48:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
        break;
    }
  }
  v98 = v10[5];
  v99 = &v8[v98];
  v100 = &v9[v98];
  v101 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v101 - 8) + 24))(v99, v100, v101);
  v102 = v10[6];
  v103 = &v8[v102];
  v104 = &v9[v102];
  *v103 = *v104;
  v103[1] = v104[1];
  v103[2] = v104[2];
  v103[3] = v104[3];
  v103[4] = v104[4];
  v105 = v10[7];
  v106 = &v8[v105];
  v107 = &v9[v105];
  v108 = *(void **)&v8[v105];
  v109 = *(void **)&v9[v105];
  if (v108)
  {
    if (v109)
    {
      *(_QWORD *)v106 = v109;
      v110 = v109;

      v111 = *((_QWORD *)v107 + 1);
      v106[16] = v107[16];
      *((_QWORD *)v106 + 1) = v111;
      *((_QWORD *)v106 + 3) = *((_QWORD *)v107 + 3);
      *((_QWORD *)v106 + 4) = *((_QWORD *)v107 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      outlined destroy of Participant.RemoteIdentifiers((id *)v106);
      v114 = *((_QWORD *)v107 + 4);
      v115 = *((_OWORD *)v107 + 1);
      *(_OWORD *)v106 = *(_OWORD *)v107;
      *((_OWORD *)v106 + 1) = v115;
      *((_QWORD *)v106 + 4) = v114;
    }
  }
  else if (v109)
  {
    *(_QWORD *)v106 = v109;
    v112 = *((_QWORD *)v107 + 1);
    v106[16] = v107[16];
    *((_QWORD *)v106 + 1) = v112;
    *((_QWORD *)v106 + 3) = *((_QWORD *)v107 + 3);
    *((_QWORD *)v106 + 4) = *((_QWORD *)v107 + 4);
    v113 = v109;
    swift_bridgeObjectRetain();
  }
  else
  {
    v116 = *(_OWORD *)v107;
    v117 = *((_OWORD *)v107 + 1);
    *((_QWORD *)v106 + 4) = *((_QWORD *)v107 + 4);
    *(_OWORD *)v106 = v116;
    *((_OWORD *)v106 + 1) = v117;
  }
  *(_QWORD *)&v8[v10[8]] = *(_QWORD *)&v9[v10[8]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v118 = v10[9];
  v119 = &v8[v118];
  v120 = &v9[v118];
  *v119 = *v120;
  v119[1] = v120[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8[v10[10]] = v9[v10[10]];
  *(_QWORD *)&v8[v10[11]] = *(_QWORD *)&v9[v10[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v121 = v10[12];
  v122 = *(void **)&v8[v121];
  v123 = *(void **)&v9[v121];
  *(_QWORD *)&v8[v121] = v123;
  v124 = v123;

  v8[v10[13]] = v9[v10[13]];
  v125 = v10[14];
  v126 = &v8[v125];
  v127 = &v9[v125];
  v128 = type metadata accessor for Date();
  LODWORD(v122) = __swift_getEnumTagSinglePayload((uint64_t)v126, 1, v128);
  v129 = __swift_getEnumTagSinglePayload((uint64_t)v127, 1, v128);
  if ((_DWORD)v122)
  {
    if (!v129)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v128 - 8) + 16))(v126, v127, v128);
      __swift_storeEnumTagSinglePayload((uint64_t)v126, 0, 1, v128);
      goto LABEL_62;
    }
    goto LABEL_61;
  }
  v130 = *(_QWORD *)(v128 - 8);
  if (v129)
  {
    (*(void (**)(char *, uint64_t))(v130 + 8))(v126, v128);
LABEL_61:
    v131 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v126, v127, *(_QWORD *)(*(_QWORD *)(v131 - 8) + 64));
    goto LABEL_62;
  }
  (*(void (**)(char *, char *, uint64_t))(v130 + 24))(v126, v127, v128);
LABEL_62:
  v132 = type metadata accessor for Participant.CountdownInfo(0);
  v133 = *(int *)(v132 + 20);
  v134 = &v126[v133];
  __srcb = v127;
  v135 = &v127[v133];
  v136 = __swift_getEnumTagSinglePayload((uint64_t)&v126[v133], 1, v128);
  v137 = __swift_getEnumTagSinglePayload((uint64_t)v135, 1, v128);
  if (!v136)
  {
    v138 = *(_QWORD *)(v128 - 8);
    if (!v137)
    {
      (*(void (**)(char *, char *, uint64_t))(v138 + 24))(v134, v135, v128);
      goto LABEL_68;
    }
    (*(void (**)(char *, uint64_t))(v138 + 8))(v134, v128);
    goto LABEL_67;
  }
  if (v137)
  {
LABEL_67:
    v139 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v134, v135, *(_QWORD *)(*(_QWORD *)(v139 - 8) + 64));
    goto LABEL_68;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v128 - 8) + 16))(v134, v135, v128);
  __swift_storeEnumTagSinglePayload((uint64_t)v134, 0, 1, v128);
LABEL_68:
  a3 = v285;
  v126[*(int *)(v132 + 24)] = __srcb[*(int *)(v132 + 24)];
  v8[v10[15]] = v9[v10[15]];
  *(_QWORD *)&v8[v10[16]] = *(_QWORD *)&v9[v10[16]];
  swift_retain();
  swift_release();
LABEL_69:
  v4 = v288;
LABEL_70:
  *(_QWORD *)((char *)v5 + a3[7]) = *(_QWORD *)((char *)v4 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v140 = a3[8];
  v141 = (char *)v5 + v140;
  v142 = (char *)v4 + v140;
  v143 = __swift_getEnumTagSinglePayload((uint64_t)v5 + v140, 1, (uint64_t)v10);
  v144 = __swift_getEnumTagSinglePayload((uint64_t)v142, 1, (uint64_t)v10);
  if (!v143)
  {
    if (v144)
    {
      outlined destroy of AccountUpdateNotice((uint64_t)v141, type metadata accessor for Participant);
      goto LABEL_76;
    }
    v287 = a3;
    v289 = v4;
    if (v5 != v4)
    {
      outlined destroy of AccountUpdateNotice((uint64_t)v141, type metadata accessor for Participant.State);
      v148 = type metadata accessor for Participant.State(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
        case 2u:
        case 3u:
        case 5u:
          v149 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v149 - 8) + 16))(v141, v142, v149);
          goto LABEL_119;
        case 4u:
          v161 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v161 - 8) + 16))(v141, v142, v161);
          __srcd = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
          v162 = __srcd[12];
          v163 = &v141[v162];
          v164 = &v142[v162];
          *(_OWORD *)v163 = *(_OWORD *)&v142[v162];
          *((_QWORD *)v163 + 2) = *(_QWORD *)&v142[v162 + 16];
          v165 = *(_QWORD *)&v142[v162 + 24];
          *((_WORD *)v163 + 16) = *((_WORD *)v164 + 16);
          *((_QWORD *)v163 + 3) = v165;
          *((_QWORD *)v163 + 5) = *((_QWORD *)v164 + 5);
          v163[48] = v164[48];
          v166 = *(_OWORD *)(v164 + 72);
          v167 = *(_OWORD *)(v164 + 56);
          v163[88] = v164[88];
          *(_OWORD *)(v163 + 56) = v167;
          *(_OWORD *)(v163 + 72) = v166;
          v163[89] = v164[89];
          v168 = *((_QWORD *)v164 + 15);
          swift_bridgeObjectRetain();
          if (v168)
          {
            if (v168 == 1)
            {
              v169 = v163 + 96;
              v170 = v164 + 96;
              v171 = 209;
              goto LABEL_113;
            }
            *((_QWORD *)v163 + 15) = v168;
            *((_QWORD *)v163 + 16) = *((_QWORD *)v164 + 16);
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v168 - 8))((uint64_t)(v163 + 96), (uint64_t)(v164 + 96), v168);
          }
          else
          {
            v217 = *((_OWORD *)v164 + 6);
            v218 = *((_OWORD *)v164 + 7);
            *((_QWORD *)v163 + 16) = *((_QWORD *)v164 + 16);
            *((_OWORD *)v163 + 6) = v217;
            *((_OWORD *)v163 + 7) = v218;
          }
          *((_DWORD *)v163 + 34) = *((_DWORD *)v164 + 34);
          *((_QWORD *)v163 + 18) = *((_QWORD *)v164 + 18);
          *((_QWORD *)v163 + 19) = *((_QWORD *)v164 + 19);
          v219 = *((_OWORD *)v164 + 10);
          v220 = *((_OWORD *)v164 + 11);
          v163[192] = v164[192];
          *((_OWORD *)v163 + 10) = v219;
          *((_OWORD *)v163 + 11) = v220;
          *((_QWORD *)v163 + 25) = *((_QWORD *)v164 + 25);
          v169 = v163 + 208;
          v170 = v164 + 208;
          v171 = 97;
LABEL_113:
          memcpy(v169, v170, v171);
          v221 = *((_QWORD *)v164 + 39);
          if (v221)
          {
            v222 = *((_QWORD *)v164 + 40);
            *((_QWORD *)v163 + 39) = v221;
            *((_QWORD *)v163 + 40) = v222;
            *((_QWORD *)v163 + 41) = *((_QWORD *)v164 + 41);
            swift_unknownObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            v223 = *(_OWORD *)(v164 + 312);
            *((_QWORD *)v163 + 41) = *((_QWORD *)v164 + 41);
            *(_OWORD *)(v163 + 312) = v223;
          }
          v224 = __srcd[16];
          v225 = &v141[v224];
          v226 = &v142[v224];
          if (*((_QWORD *)v226 + 1))
          {
            *(_QWORD *)v225 = *(_QWORD *)v226;
            *((_QWORD *)v225 + 1) = *((_QWORD *)v226 + 1);
            *((_QWORD *)v225 + 2) = *((_QWORD *)v226 + 2);
            *((_QWORD *)v225 + 3) = *((_QWORD *)v226 + 3);
            v225[32] = v226[32];
            *((_QWORD *)v225 + 5) = *((_QWORD *)v226 + 5);
            *((_QWORD *)v225 + 6) = *((_QWORD *)v226 + 6);
            *((_QWORD *)v225 + 7) = *((_QWORD *)v226 + 7);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            v227 = *(_OWORD *)v226;
            v228 = *((_OWORD *)v226 + 1);
            v229 = *((_OWORD *)v226 + 3);
            *((_OWORD *)v225 + 2) = *((_OWORD *)v226 + 2);
            *((_OWORD *)v225 + 3) = v229;
            *(_OWORD *)v225 = v227;
            *((_OWORD *)v225 + 1) = v228;
          }
LABEL_119:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v141, v142, *(_QWORD *)(*(_QWORD *)(v148 - 8) + 64));
          break;
      }
    }
    v230 = v10[5];
    v231 = &v141[v230];
    v232 = &v142[v230];
    v233 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v233 - 8) + 24))(v231, v232, v233);
    v234 = v10[6];
    v235 = &v141[v234];
    v236 = &v142[v234];
    *v235 = *v236;
    v235[1] = v236[1];
    v235[2] = v236[2];
    v235[3] = v236[3];
    v235[4] = v236[4];
    v237 = v10[7];
    v238 = &v141[v237];
    v239 = &v142[v237];
    v240 = *(void **)&v141[v237];
    v241 = *(void **)&v142[v237];
    v242 = v5;
    if (v240)
    {
      if (v241)
      {
        *(_QWORD *)v238 = v241;
        v243 = v241;

        v244 = *((_QWORD *)v239 + 1);
        v238[16] = v239[16];
        *((_QWORD *)v238 + 1) = v244;
        *((_QWORD *)v238 + 3) = *((_QWORD *)v239 + 3);
        *((_QWORD *)v238 + 4) = *((_QWORD *)v239 + 4);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
      }
      else
      {
        outlined destroy of Participant.RemoteIdentifiers((id *)v238);
        v247 = *((_QWORD *)v239 + 4);
        v248 = *((_OWORD *)v239 + 1);
        *(_OWORD *)v238 = *(_OWORD *)v239;
        *((_OWORD *)v238 + 1) = v248;
        *((_QWORD *)v238 + 4) = v247;
      }
    }
    else if (v241)
    {
      *(_QWORD *)v238 = v241;
      v245 = *((_QWORD *)v239 + 1);
      v238[16] = v239[16];
      *((_QWORD *)v238 + 1) = v245;
      *((_QWORD *)v238 + 3) = *((_QWORD *)v239 + 3);
      *((_QWORD *)v238 + 4) = *((_QWORD *)v239 + 4);
      v246 = v241;
      swift_bridgeObjectRetain();
    }
    else
    {
      v249 = *(_OWORD *)v239;
      v250 = *((_OWORD *)v239 + 1);
      *((_QWORD *)v238 + 4) = *((_QWORD *)v239 + 4);
      *(_OWORD *)v238 = v249;
      *((_OWORD *)v238 + 1) = v250;
    }
    *(_QWORD *)&v141[v10[8]] = *(_QWORD *)&v142[v10[8]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v251 = v10[9];
    v252 = &v141[v251];
    v253 = &v142[v251];
    *(_QWORD *)v252 = *(_QWORD *)v253;
    *((_QWORD *)v252 + 1) = *((_QWORD *)v253 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v141[v10[10]] = v142[v10[10]];
    *(_QWORD *)&v141[v10[11]] = *(_QWORD *)&v142[v10[11]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v254 = v10[12];
    v255 = *(void **)&v141[v254];
    v256 = *(void **)&v142[v254];
    *(_QWORD *)&v141[v254] = v256;
    v257 = v256;

    v141[v10[13]] = v142[v10[13]];
    v258 = v10[14];
    v259 = &v141[v258];
    v260 = &v142[v258];
    v261 = type metadata accessor for Date();
    v262 = __swift_getEnumTagSinglePayload((uint64_t)v259, 1, v261);
    __srce = v260;
    v263 = __swift_getEnumTagSinglePayload((uint64_t)v260, 1, v261);
    if (v262)
    {
      if (!v263)
      {
        v264 = v260;
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v261 - 8) + 16))(v259, v260, v261);
        __swift_storeEnumTagSinglePayload((uint64_t)v259, 0, 1, v261);
        goto LABEL_133;
      }
    }
    else
    {
      v265 = *(_QWORD *)(v261 - 8);
      if (!v263)
      {
        v264 = v260;
        (*(void (**)(char *, char *, uint64_t))(v265 + 24))(v259, v260, v261);
LABEL_133:
        v5 = v242;
        v267 = type metadata accessor for Participant.CountdownInfo(0);
        v268 = *(int *)(v267 + 20);
        v269 = &v259[v268];
        v270 = &v264[v268];
        v271 = __swift_getEnumTagSinglePayload((uint64_t)&v259[v268], 1, v261);
        v272 = __swift_getEnumTagSinglePayload((uint64_t)v270, 1, v261);
        if (v271)
        {
          if (!v272)
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v261 - 8) + 16))(v269, v270, v261);
            __swift_storeEnumTagSinglePayload((uint64_t)v269, 0, 1, v261);
LABEL_139:
            a3 = v287;
            v259[*(int *)(v267 + 24)] = __srce[*(int *)(v267 + 24)];
            v141[v10[15]] = v142[v10[15]];
            *(_QWORD *)&v141[v10[16]] = *(_QWORD *)&v142[v10[16]];
            swift_retain();
            swift_release();
LABEL_140:
            v4 = v289;
            goto LABEL_141;
          }
        }
        else
        {
          v273 = *(_QWORD *)(v261 - 8);
          if (!v272)
          {
            (*(void (**)(char *, char *, uint64_t))(v273 + 24))(v269, v270, v261);
            goto LABEL_139;
          }
          (*(void (**)(char *, uint64_t))(v273 + 8))(v269, v261);
        }
        v274 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
        memcpy(v269, v270, *(_QWORD *)(*(_QWORD *)(v274 - 8) + 64));
        goto LABEL_139;
      }
      (*(void (**)(char *, uint64_t))(v265 + 8))(v259, v261);
    }
    v266 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    v264 = v260;
    memcpy(v259, v260, *(_QWORD *)(*(_QWORD *)(v266 - 8) + 64));
    goto LABEL_133;
  }
  if (!v144)
  {
    v289 = v4;
    v145 = type metadata accessor for Participant.State(0);
    v286 = a3;
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        v146 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v146 - 8) + 16))(v141, v142, v146);
        goto LABEL_99;
      case 4u:
        v150 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v150 - 8) + 16))(v141, v142, v150);
        __srcc = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        v151 = __srcc[12];
        v152 = &v141[v151];
        v153 = &v142[v151];
        *(_OWORD *)v152 = *(_OWORD *)&v142[v151];
        *((_QWORD *)v152 + 2) = *(_QWORD *)&v142[v151 + 16];
        v154 = *(_QWORD *)&v142[v151 + 24];
        *((_WORD *)v152 + 16) = *((_WORD *)v153 + 16);
        *((_QWORD *)v152 + 3) = v154;
        *((_QWORD *)v152 + 5) = *((_QWORD *)v153 + 5);
        v152[48] = v153[48];
        v155 = *(_OWORD *)(v153 + 72);
        v156 = *(_OWORD *)(v153 + 56);
        v152[88] = v153[88];
        *(_OWORD *)(v152 + 56) = v156;
        *(_OWORD *)(v152 + 72) = v155;
        v152[89] = v153[89];
        v157 = *((_QWORD *)v153 + 15);
        swift_bridgeObjectRetain();
        if (v157)
        {
          if (v157 == 1)
          {
            v158 = v152 + 96;
            v159 = v153 + 96;
            v160 = 209;
            goto LABEL_93;
          }
          *((_QWORD *)v152 + 15) = v157;
          *((_QWORD *)v152 + 16) = *((_QWORD *)v153 + 16);
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v157 - 8))((uint64_t)(v152 + 96), (uint64_t)(v153 + 96), v157);
        }
        else
        {
          v172 = *((_OWORD *)v153 + 6);
          v173 = *((_OWORD *)v153 + 7);
          *((_QWORD *)v152 + 16) = *((_QWORD *)v153 + 16);
          *((_OWORD *)v152 + 6) = v172;
          *((_OWORD *)v152 + 7) = v173;
        }
        *((_DWORD *)v152 + 34) = *((_DWORD *)v153 + 34);
        *((_QWORD *)v152 + 18) = *((_QWORD *)v153 + 18);
        *((_QWORD *)v152 + 19) = *((_QWORD *)v153 + 19);
        v174 = *((_OWORD *)v153 + 10);
        v175 = *((_OWORD *)v153 + 11);
        v152[192] = v153[192];
        *((_OWORD *)v152 + 10) = v174;
        *((_OWORD *)v152 + 11) = v175;
        *((_QWORD *)v152 + 25) = *((_QWORD *)v153 + 25);
        v158 = v152 + 208;
        v159 = v153 + 208;
        v160 = 97;
LABEL_93:
        memcpy(v158, v159, v160);
        v176 = *((_QWORD *)v153 + 39);
        if (v176)
        {
          v177 = *((_QWORD *)v153 + 40);
          *((_QWORD *)v152 + 39) = v176;
          *((_QWORD *)v152 + 40) = v177;
          *((_QWORD *)v152 + 41) = *((_QWORD *)v153 + 41);
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v178 = *(_OWORD *)(v153 + 312);
          *((_QWORD *)v152 + 41) = *((_QWORD *)v153 + 41);
          *(_OWORD *)(v152 + 312) = v178;
        }
        v179 = __srcc[16];
        v180 = &v141[v179];
        v181 = &v142[v179];
        if (*((_QWORD *)v181 + 1))
        {
          *(_QWORD *)v180 = *(_QWORD *)v181;
          *((_QWORD *)v180 + 1) = *((_QWORD *)v181 + 1);
          *((_QWORD *)v180 + 2) = *((_QWORD *)v181 + 2);
          *((_QWORD *)v180 + 3) = *((_QWORD *)v181 + 3);
          v180[32] = v181[32];
          *((_QWORD *)v180 + 5) = *((_QWORD *)v181 + 5);
          *((_QWORD *)v180 + 6) = *((_QWORD *)v181 + 6);
          *((_QWORD *)v180 + 7) = *((_QWORD *)v181 + 7);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v182 = *(_OWORD *)v181;
          v183 = *((_OWORD *)v181 + 1);
          v184 = *((_OWORD *)v181 + 3);
          *((_OWORD *)v180 + 2) = *((_OWORD *)v181 + 2);
          *((_OWORD *)v180 + 3) = v184;
          *(_OWORD *)v180 = v182;
          *((_OWORD *)v180 + 1) = v183;
        }
LABEL_99:
        swift_storeEnumTagMultiPayload();
LABEL_100:
        v185 = v10[5];
        v186 = &v141[v185];
        v187 = &v142[v185];
        v188 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v188 - 8) + 16))(v186, v187, v188);
        v189 = v10[6];
        v190 = &v141[v189];
        v191 = &v142[v189];
        v192 = *(_DWORD *)v191;
        v190[4] = v191[4];
        *(_DWORD *)v190 = v192;
        v193 = v10[7];
        v194 = &v141[v193];
        v195 = &v142[v193];
        v196 = *(void **)v195;
        v283 = v5;
        if (*(_QWORD *)v195)
        {
          *(_QWORD *)v194 = v196;
          v197 = *((_QWORD *)v195 + 1);
          v194[16] = v195[16];
          *((_QWORD *)v194 + 1) = v197;
          *((_QWORD *)v194 + 3) = *((_QWORD *)v195 + 3);
          *((_QWORD *)v194 + 4) = *((_QWORD *)v195 + 4);
          v198 = v196;
          swift_bridgeObjectRetain();
        }
        else
        {
          v199 = *(_OWORD *)v195;
          v200 = *((_OWORD *)v195 + 1);
          *((_QWORD *)v194 + 4) = *((_QWORD *)v195 + 4);
          *(_OWORD *)v194 = v199;
          *((_OWORD *)v194 + 1) = v200;
        }
        *(_QWORD *)&v141[v10[8]] = *(_QWORD *)&v142[v10[8]];
        v201 = v10[9];
        v202 = &v141[v201];
        v203 = &v142[v201];
        *(_QWORD *)v202 = *(_QWORD *)v203;
        *((_QWORD *)v202 + 1) = *((_QWORD *)v203 + 1);
        v141[v10[10]] = v142[v10[10]];
        *(_QWORD *)&v141[v10[11]] = *(_QWORD *)&v142[v10[11]];
        v204 = v10[12];
        v205 = *(void **)&v142[v204];
        *(_QWORD *)&v141[v204] = v205;
        v141[v10[13]] = v142[v10[13]];
        v206 = v10[14];
        v207 = &v141[v206];
        v208 = &v142[v206];
        v209 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v210 = v205;
        if (__swift_getEnumTagSinglePayload((uint64_t)v208, 1, v209))
        {
          v211 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
          memcpy(v207, v208, *(_QWORD *)(*(_QWORD *)(v211 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v209 - 8) + 16))(v207, v208, v209);
          __swift_storeEnumTagSinglePayload((uint64_t)v207, 0, 1, v209);
        }
        v5 = v283;
        v212 = type metadata accessor for Participant.CountdownInfo(0);
        v213 = *(int *)(v212 + 20);
        v214 = &v207[v213];
        v215 = &v208[v213];
        if (__swift_getEnumTagSinglePayload((uint64_t)&v208[v213], 1, v209))
        {
          v216 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
          memcpy(v214, v215, *(_QWORD *)(*(_QWORD *)(v216 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v209 - 8) + 16))(v214, v215, v209);
          __swift_storeEnumTagSinglePayload((uint64_t)v214, 0, 1, v209);
        }
        a3 = v286;
        v207[*(int *)(v212 + 24)] = v208[*(int *)(v212 + 24)];
        v141[v10[15]] = v142[v10[15]];
        *(_QWORD *)&v141[v10[16]] = *(_QWORD *)&v142[v10[16]];
        swift_retain();
        __swift_storeEnumTagSinglePayload((uint64_t)v141, 0, 1, (uint64_t)v10);
        break;
      default:
        memcpy(v141, v142, *(_QWORD *)(*(_QWORD *)(v145 - 8) + 64));
        goto LABEL_100;
    }
    goto LABEL_140;
  }
LABEL_76:
  v147 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  memcpy(v141, v142, *(_QWORD *)(*(_QWORD *)(v147 - 8) + 64));
LABEL_141:
  memcpy((char *)v5 + a3[9], (char *)v4 + a3[9], 0x61uLL);
  return v5;
}

uint64_t initializeWithTake for InCallControlsActivityCellViewModel(uint64_t a1, uint64_t a2, int *a3)
{
  int *v3;
  uint64_t v4;
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  __int128 v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  __int128 v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  int *v77;
  int *v78;
  uint64_t v79;
  uint64_t v80;

  v3 = a3;
  v4 = a2;
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v7 = a3[6];
  v8 = (char *)(a1 + v7);
  v9 = (char *)(a2 + v7);
  v10 = (int *)type metadata accessor for Participant(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, (uint64_t)v10))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v12 = type metadata accessor for Participant.State(0);
    v77 = v3;
    v79 = v4;
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        v20 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v8, v9, v20);
        goto LABEL_7;
      case 4u:
        v13 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v8, v9, v13);
        v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        memcpy(&v8[*(int *)(v14 + 48)], &v9[*(int *)(v14 + 48)], 0x150uLL);
        v15 = *(int *)(v14 + 64);
        v16 = &v8[v15];
        v17 = &v9[v15];
        v18 = *((_OWORD *)v17 + 1);
        *(_OWORD *)v16 = *(_OWORD *)v17;
        *((_OWORD *)v16 + 1) = v18;
        v19 = *((_OWORD *)v17 + 3);
        *((_OWORD *)v16 + 2) = *((_OWORD *)v17 + 2);
        *((_OWORD *)v16 + 3) = v19;
LABEL_7:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
        break;
    }
    v21 = v10[5];
    v22 = &v8[v21];
    v23 = &v9[v21];
    v24 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
    v25 = v10[6];
    v26 = &v8[v25];
    v27 = &v9[v25];
    *(_DWORD *)v26 = *(_DWORD *)v27;
    v26[4] = v27[4];
    v28 = v10[7];
    v29 = &v8[v28];
    v30 = &v9[v28];
    v31 = *((_OWORD *)v30 + 1);
    *(_OWORD *)v29 = *(_OWORD *)v30;
    *((_OWORD *)v29 + 1) = v31;
    *((_QWORD *)v29 + 4) = *((_QWORD *)v30 + 4);
    *(_QWORD *)&v8[v10[8]] = *(_QWORD *)&v9[v10[8]];
    *(_OWORD *)&v8[v10[9]] = *(_OWORD *)&v9[v10[9]];
    v8[v10[10]] = v9[v10[10]];
    *(_QWORD *)&v8[v10[11]] = *(_QWORD *)&v9[v10[11]];
    *(_QWORD *)&v8[v10[12]] = *(_QWORD *)&v9[v10[12]];
    v8[v10[13]] = v9[v10[13]];
    v32 = v10[14];
    v33 = &v8[v32];
    v34 = &v9[v32];
    v35 = type metadata accessor for Date();
    if (__swift_getEnumTagSinglePayload((uint64_t)v34, 1, v35))
    {
      v36 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
      memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v33, v34, v35);
      __swift_storeEnumTagSinglePayload((uint64_t)v33, 0, 1, v35);
    }
    v37 = type metadata accessor for Participant.CountdownInfo(0);
    v38 = *(int *)(v37 + 20);
    v39 = &v33[v38];
    v40 = &v34[v38];
    if (__swift_getEnumTagSinglePayload((uint64_t)&v34[v38], 1, v35))
    {
      v41 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
      memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v39, v40, v35);
      __swift_storeEnumTagSinglePayload((uint64_t)v39, 0, 1, v35);
    }
    v33[*(int *)(v37 + 24)] = v34[*(int *)(v37 + 24)];
    v8[v10[15]] = v9[v10[15]];
    *(_QWORD *)&v8[v10[16]] = *(_QWORD *)&v9[v10[16]];
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, (uint64_t)v10);
    v3 = v77;
    v4 = v79;
  }
  v42 = v3[8];
  *(_QWORD *)(a1 + v3[7]) = *(_QWORD *)(v4 + v3[7]);
  v43 = (char *)(a1 + v42);
  v44 = (char *)(v4 + v42);
  if (__swift_getEnumTagSinglePayload(v4 + v42, 1, (uint64_t)v10))
  {
    v45 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
  }
  else
  {
    v46 = type metadata accessor for Participant.State(0);
    v78 = v3;
    v80 = v4;
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        v54 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 32))(v43, v44, v54);
        goto LABEL_21;
      case 4u:
        v47 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 32))(v43, v44, v47);
        v48 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        memcpy(&v43[*(int *)(v48 + 48)], &v44[*(int *)(v48 + 48)], 0x150uLL);
        v49 = *(int *)(v48 + 64);
        v50 = &v43[v49];
        v51 = &v44[v49];
        v52 = *((_OWORD *)v51 + 1);
        *(_OWORD *)v50 = *(_OWORD *)v51;
        *((_OWORD *)v50 + 1) = v52;
        v53 = *((_OWORD *)v51 + 3);
        *((_OWORD *)v50 + 2) = *((_OWORD *)v51 + 2);
        *((_OWORD *)v50 + 3) = v53;
LABEL_21:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
        break;
    }
    v55 = v10[5];
    v56 = &v43[v55];
    v57 = &v44[v55];
    v58 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 32))(v56, v57, v58);
    v59 = v10[6];
    v60 = &v43[v59];
    v61 = &v44[v59];
    *(_DWORD *)v60 = *(_DWORD *)v61;
    v60[4] = v61[4];
    v62 = v10[7];
    v63 = &v43[v62];
    v64 = &v44[v62];
    v65 = *((_OWORD *)v64 + 1);
    *(_OWORD *)v63 = *(_OWORD *)v64;
    *((_OWORD *)v63 + 1) = v65;
    *((_QWORD *)v63 + 4) = *((_QWORD *)v64 + 4);
    *(_QWORD *)&v43[v10[8]] = *(_QWORD *)&v44[v10[8]];
    *(_OWORD *)&v43[v10[9]] = *(_OWORD *)&v44[v10[9]];
    v43[v10[10]] = v44[v10[10]];
    *(_QWORD *)&v43[v10[11]] = *(_QWORD *)&v44[v10[11]];
    *(_QWORD *)&v43[v10[12]] = *(_QWORD *)&v44[v10[12]];
    v43[v10[13]] = v44[v10[13]];
    v66 = v10[14];
    v67 = &v43[v66];
    v68 = &v44[v66];
    v69 = type metadata accessor for Date();
    if (__swift_getEnumTagSinglePayload((uint64_t)v68, 1, v69))
    {
      v70 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
      memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v69 - 8) + 32))(v67, v68, v69);
      __swift_storeEnumTagSinglePayload((uint64_t)v67, 0, 1, v69);
    }
    v71 = type metadata accessor for Participant.CountdownInfo(0);
    v72 = *(int *)(v71 + 20);
    v73 = &v67[v72];
    v74 = &v68[v72];
    if (__swift_getEnumTagSinglePayload((uint64_t)&v68[v72], 1, v69))
    {
      v75 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
      memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v69 - 8) + 32))(v73, v74, v69);
      __swift_storeEnumTagSinglePayload((uint64_t)v73, 0, 1, v69);
    }
    v67[*(int *)(v71 + 24)] = v68[*(int *)(v71 + 24)];
    v43[v10[15]] = v44[v10[15]];
    *(_QWORD *)&v43[v10[16]] = *(_QWORD *)&v44[v10[16]];
    __swift_storeEnumTagSinglePayload((uint64_t)v43, 0, 1, (uint64_t)v10);
    v3 = v78;
    v4 = v80;
  }
  memcpy((void *)(a1 + v3[9]), (const void *)(v4 + v3[9]), 0x61uLL);
  return a1;
}

uint64_t assignWithTake for InCallControlsActivityCellViewModel(uint64_t a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  char *v9;
  char *v10;
  int *v11;
  int EnumTagSinglePayload;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  __int128 v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  void *v63;
  uint64_t v64;
  __int128 v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  int v77;
  int v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  int v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  int v93;
  int v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  __int128 v103;
  __int128 v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  char *v114;
  char *v115;
  __int128 v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  char *v131;
  __int128 v132;
  __int128 v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  char *v141;
  uint64_t v142;
  char *v143;
  char *v144;
  void *v145;
  uint64_t v146;
  __int128 v147;
  uint64_t v148;
  char *v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  void *v154;
  uint64_t v155;
  char *v156;
  char *v157;
  uint64_t v158;
  int v159;
  int v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  char *v167;
  int v168;
  int v169;
  uint64_t v170;
  uint64_t v171;
  char *__src;
  char *__srca;
  int *v175;
  int *v176;
  _QWORD *v177;
  _QWORD *v178;

  v4 = a2;
  v6 = a2[1];
  *(_QWORD *)a1 = *a2;
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 8) = v6;
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  v7 = *((_OWORD *)v4 + 2);
  *(_OWORD *)(a1 + 16) = *((_OWORD *)v4 + 1);
  *(_OWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 48) = v4[6];
  v8 = a3[6];
  v9 = (char *)(a1 + v8);
  v10 = (char *)v4 + v8;
  v11 = (int *)type metadata accessor for Participant(0);
  LODWORD(v6) = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, (uint64_t)v11);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, (uint64_t)v11);
  if ((_DWORD)v6)
  {
    if (!EnumTagSinglePayload)
    {
      v13 = type metadata accessor for Participant.State(0);
      v175 = a3;
      v177 = v4;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
        case 2u:
        case 3u:
        case 5u:
          v23 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v9, v10, v23);
          goto LABEL_12;
        case 4u:
          v16 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v9, v10, v16);
          v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
          memcpy(&v9[*(int *)(v17 + 48)], &v10[*(int *)(v17 + 48)], 0x150uLL);
          v18 = *(int *)(v17 + 64);
          v19 = &v9[v18];
          v20 = &v10[v18];
          v21 = *((_OWORD *)v20 + 1);
          *(_OWORD *)v19 = *(_OWORD *)v20;
          *((_OWORD *)v19 + 1) = v21;
          v22 = *((_OWORD *)v20 + 3);
          *((_OWORD *)v19 + 2) = *((_OWORD *)v20 + 2);
          *((_OWORD *)v19 + 3) = v22;
LABEL_12:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
          break;
      }
      v24 = v11[5];
      v25 = &v9[v24];
      v26 = &v10[v24];
      v27 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
      v28 = v11[6];
      v29 = &v9[v28];
      v30 = &v10[v28];
      *(_DWORD *)v29 = *(_DWORD *)v30;
      v29[4] = v30[4];
      v31 = v11[7];
      v32 = &v9[v31];
      v33 = &v10[v31];
      v34 = *((_OWORD *)v33 + 1);
      *(_OWORD *)v32 = *(_OWORD *)v33;
      *((_OWORD *)v32 + 1) = v34;
      *((_QWORD *)v32 + 4) = *((_QWORD *)v33 + 4);
      *(_QWORD *)&v9[v11[8]] = *(_QWORD *)&v10[v11[8]];
      *(_OWORD *)&v9[v11[9]] = *(_OWORD *)&v10[v11[9]];
      v9[v11[10]] = v10[v11[10]];
      *(_QWORD *)&v9[v11[11]] = *(_QWORD *)&v10[v11[11]];
      *(_QWORD *)&v9[v11[12]] = *(_QWORD *)&v10[v11[12]];
      v9[v11[13]] = v10[v11[13]];
      v35 = v11[14];
      v36 = &v9[v35];
      v37 = &v10[v35];
      v38 = type metadata accessor for Date();
      if (__swift_getEnumTagSinglePayload((uint64_t)v37, 1, v38))
      {
        v39 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
        memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
        __swift_storeEnumTagSinglePayload((uint64_t)v36, 0, 1, v38);
      }
      v40 = type metadata accessor for Participant.CountdownInfo(0);
      v41 = *(int *)(v40 + 20);
      v42 = &v36[v41];
      v43 = &v37[v41];
      if (__swift_getEnumTagSinglePayload((uint64_t)&v37[v41], 1, v38))
      {
        v44 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
        memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v42, v43, v38);
        __swift_storeEnumTagSinglePayload((uint64_t)v42, 0, 1, v38);
      }
      v36[*(int *)(v40 + 24)] = v37[*(int *)(v40 + 24)];
      v9[v11[15]] = v10[v11[15]];
      *(_QWORD *)&v9[v11[16]] = *(_QWORD *)&v10[v11[16]];
      __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, (uint64_t)v11);
      goto LABEL_42;
    }
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_43;
  }
  if (EnumTagSinglePayload)
  {
    outlined destroy of AccountUpdateNotice((uint64_t)v9, type metadata accessor for Participant);
    goto LABEL_6;
  }
  if ((_QWORD *)a1 != v4)
  {
    outlined destroy of AccountUpdateNotice((uint64_t)v9, type metadata accessor for Participant.State);
    v15 = type metadata accessor for Participant.State(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        v52 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v9, v10, v52);
        goto LABEL_23;
      case 4u:
        v45 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 32))(v9, v10, v45);
        v46 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        memcpy(&v9[*(int *)(v46 + 48)], &v10[*(int *)(v46 + 48)], 0x150uLL);
        v47 = *(int *)(v46 + 64);
        v48 = &v9[v47];
        v49 = &v10[v47];
        v50 = *((_OWORD *)v49 + 1);
        *(_OWORD *)v48 = *(_OWORD *)v49;
        *((_OWORD *)v48 + 1) = v50;
        v51 = *((_OWORD *)v49 + 3);
        *((_OWORD *)v48 + 2) = *((_OWORD *)v49 + 2);
        *((_OWORD *)v48 + 3) = v51;
LABEL_23:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
        break;
    }
  }
  v177 = v4;
  v53 = v11[5];
  v54 = &v9[v53];
  v55 = &v10[v53];
  v56 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 40))(v54, v55, v56);
  v57 = v11[6];
  v58 = &v9[v57];
  v59 = &v10[v57];
  *v58 = *v59;
  v58[1] = v59[1];
  v58[2] = v59[2];
  v58[3] = v59[3];
  v58[4] = v59[4];
  v60 = v11[7];
  v61 = &v9[v60];
  v62 = &v10[v60];
  v63 = *(void **)&v9[v60];
  if (v63)
  {
    if (*(_QWORD *)v62)
    {
      *(_QWORD *)v61 = *(_QWORD *)v62;

      *((_QWORD *)v61 + 1) = *((_QWORD *)v62 + 1);
      v61[16] = v62[16];
      v64 = *((_QWORD *)v62 + 4);
      *((_QWORD *)v61 + 3) = *((_QWORD *)v62 + 3);
      *((_QWORD *)v61 + 4) = v64;
      swift_bridgeObjectRelease();
      goto LABEL_29;
    }
    outlined destroy of Participant.RemoteIdentifiers((id *)v61);
  }
  v65 = *((_OWORD *)v62 + 1);
  *(_OWORD *)v61 = *(_OWORD *)v62;
  *((_OWORD *)v61 + 1) = v65;
  *((_QWORD *)v61 + 4) = *((_QWORD *)v62 + 4);
LABEL_29:
  *(_QWORD *)&v9[v11[8]] = *(_QWORD *)&v10[v11[8]];
  swift_bridgeObjectRelease();
  v66 = v11[9];
  v67 = &v9[v66];
  v68 = &v10[v66];
  v70 = *(_QWORD *)v68;
  v69 = *((_QWORD *)v68 + 1);
  *(_QWORD *)v67 = v70;
  *((_QWORD *)v67 + 1) = v69;
  swift_bridgeObjectRelease();
  v9[v11[10]] = v10[v11[10]];
  *(_QWORD *)&v9[v11[11]] = *(_QWORD *)&v10[v11[11]];
  swift_bridgeObjectRelease();
  v71 = v11[12];
  v72 = *(void **)&v9[v71];
  *(_QWORD *)&v9[v71] = *(_QWORD *)&v10[v71];

  v9[v11[13]] = v10[v11[13]];
  v73 = v11[14];
  v74 = &v9[v73];
  v75 = &v10[v73];
  v76 = type metadata accessor for Date();
  v77 = __swift_getEnumTagSinglePayload((uint64_t)v74, 1, v76);
  __src = v75;
  v78 = __swift_getEnumTagSinglePayload((uint64_t)v75, 1, v76);
  v175 = a3;
  if (v77)
  {
    if (!v78)
    {
      v79 = v75;
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v76 - 8) + 32))(v74, v75, v76);
      __swift_storeEnumTagSinglePayload((uint64_t)v74, 0, 1, v76);
      goto LABEL_35;
    }
    goto LABEL_34;
  }
  v80 = *(_QWORD *)(v76 - 8);
  if (v78)
  {
    (*(void (**)(char *, uint64_t))(v80 + 8))(v74, v76);
LABEL_34:
    v81 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    v79 = v75;
    memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
    goto LABEL_35;
  }
  v79 = v75;
  (*(void (**)(char *, char *, uint64_t))(v80 + 40))(v74, v75, v76);
LABEL_35:
  v82 = type metadata accessor for Participant.CountdownInfo(0);
  v83 = *(int *)(v82 + 20);
  v84 = &v74[v83];
  v85 = &v79[v83];
  v86 = __swift_getEnumTagSinglePayload((uint64_t)&v74[v83], 1, v76);
  v87 = __swift_getEnumTagSinglePayload((uint64_t)v85, 1, v76);
  if (!v86)
  {
    v88 = *(_QWORD *)(v76 - 8);
    if (!v87)
    {
      (*(void (**)(char *, char *, uint64_t))(v88 + 40))(v84, v85, v76);
      goto LABEL_41;
    }
    (*(void (**)(char *, uint64_t))(v88 + 8))(v84, v76);
    goto LABEL_40;
  }
  if (v87)
  {
LABEL_40:
    v89 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v84, v85, *(_QWORD *)(*(_QWORD *)(v89 - 8) + 64));
    goto LABEL_41;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v76 - 8) + 32))(v84, v85, v76);
  __swift_storeEnumTagSinglePayload((uint64_t)v84, 0, 1, v76);
LABEL_41:
  v74[*(int *)(v82 + 24)] = __src[*(int *)(v82 + 24)];
  v9[v11[15]] = v10[v11[15]];
  *(_QWORD *)&v9[v11[16]] = *(_QWORD *)&v10[v11[16]];
  swift_release();
LABEL_42:
  a3 = v175;
  v4 = v177;
LABEL_43:
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)((char *)v4 + a3[7]);
  swift_bridgeObjectRelease();
  v90 = a3[8];
  v91 = (char *)(a1 + v90);
  v92 = (char *)v4 + v90;
  v93 = __swift_getEnumTagSinglePayload(a1 + v90, 1, (uint64_t)v11);
  v94 = __swift_getEnumTagSinglePayload((uint64_t)v92, 1, (uint64_t)v11);
  if (!v93)
  {
    if (v94)
    {
      outlined destroy of AccountUpdateNotice((uint64_t)v91, type metadata accessor for Participant);
      goto LABEL_48;
    }
    if ((_QWORD *)a1 != v4)
    {
      outlined destroy of AccountUpdateNotice((uint64_t)v91, type metadata accessor for Participant.State);
      v97 = type metadata accessor for Participant.State(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
        case 2u:
        case 3u:
        case 5u:
          v134 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v134 - 8) + 32))(v91, v92, v134);
          goto LABEL_67;
        case 4u:
          v127 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v127 - 8) + 32))(v91, v92, v127);
          v128 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
          memcpy(&v91[*(int *)(v128 + 48)], &v92[*(int *)(v128 + 48)], 0x150uLL);
          v129 = *(int *)(v128 + 64);
          v130 = &v91[v129];
          v131 = &v92[v129];
          v132 = *((_OWORD *)v131 + 1);
          *(_OWORD *)v130 = *(_OWORD *)v131;
          *((_OWORD *)v130 + 1) = v132;
          v133 = *((_OWORD *)v131 + 3);
          *((_OWORD *)v130 + 2) = *((_OWORD *)v131 + 2);
          *((_OWORD *)v130 + 3) = v133;
LABEL_67:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v91, v92, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
          break;
      }
    }
    v178 = v4;
    v135 = v11[5];
    v136 = &v91[v135];
    v137 = &v92[v135];
    v138 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v138 - 8) + 40))(v136, v137, v138);
    v139 = v11[6];
    v140 = &v91[v139];
    v141 = &v92[v139];
    *v140 = *v141;
    v140[1] = v141[1];
    v140[2] = v141[2];
    v140[3] = v141[3];
    v140[4] = v141[4];
    v142 = v11[7];
    v143 = &v91[v142];
    v144 = &v92[v142];
    v145 = *(void **)&v91[v142];
    if (v145)
    {
      if (*(_QWORD *)v144)
      {
        *(_QWORD *)v143 = *(_QWORD *)v144;

        *((_QWORD *)v143 + 1) = *((_QWORD *)v144 + 1);
        v143[16] = v144[16];
        v146 = *((_QWORD *)v144 + 4);
        *((_QWORD *)v143 + 3) = *((_QWORD *)v144 + 3);
        *((_QWORD *)v143 + 4) = v146;
        swift_bridgeObjectRelease();
        goto LABEL_73;
      }
      outlined destroy of Participant.RemoteIdentifiers((id *)v143);
    }
    v147 = *((_OWORD *)v144 + 1);
    *(_OWORD *)v143 = *(_OWORD *)v144;
    *((_OWORD *)v143 + 1) = v147;
    *((_QWORD *)v143 + 4) = *((_QWORD *)v144 + 4);
LABEL_73:
    *(_QWORD *)&v91[v11[8]] = *(_QWORD *)&v92[v11[8]];
    swift_bridgeObjectRelease();
    v148 = v11[9];
    v149 = &v91[v148];
    v150 = &v92[v148];
    v152 = *(_QWORD *)v150;
    v151 = *((_QWORD *)v150 + 1);
    *(_QWORD *)v149 = v152;
    *((_QWORD *)v149 + 1) = v151;
    swift_bridgeObjectRelease();
    v91[v11[10]] = v92[v11[10]];
    *(_QWORD *)&v91[v11[11]] = *(_QWORD *)&v92[v11[11]];
    swift_bridgeObjectRelease();
    v153 = v11[12];
    v154 = *(void **)&v91[v153];
    *(_QWORD *)&v91[v153] = *(_QWORD *)&v92[v153];

    v91[v11[13]] = v92[v11[13]];
    v155 = v11[14];
    v156 = &v91[v155];
    v157 = &v92[v155];
    v158 = type metadata accessor for Date();
    v159 = __swift_getEnumTagSinglePayload((uint64_t)v156, 1, v158);
    __srca = v157;
    v160 = __swift_getEnumTagSinglePayload((uint64_t)v157, 1, v158);
    v176 = a3;
    if (v159)
    {
      if (!v160)
      {
        v161 = v157;
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v158 - 8) + 32))(v156, v157, v158);
        __swift_storeEnumTagSinglePayload((uint64_t)v156, 0, 1, v158);
        goto LABEL_79;
      }
    }
    else
    {
      v162 = *(_QWORD *)(v158 - 8);
      if (!v160)
      {
        v161 = v157;
        (*(void (**)(char *, char *, uint64_t))(v162 + 40))(v156, v157, v158);
LABEL_79:
        v164 = type metadata accessor for Participant.CountdownInfo(0);
        v165 = *(int *)(v164 + 20);
        v166 = &v156[v165];
        v167 = &v161[v165];
        v168 = __swift_getEnumTagSinglePayload((uint64_t)&v156[v165], 1, v158);
        v169 = __swift_getEnumTagSinglePayload((uint64_t)v167, 1, v158);
        if (v168)
        {
          if (!v169)
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v158 - 8) + 32))(v166, v167, v158);
            __swift_storeEnumTagSinglePayload((uint64_t)v166, 0, 1, v158);
LABEL_85:
            v156[*(int *)(v164 + 24)] = __srca[*(int *)(v164 + 24)];
            v91[v11[15]] = v92[v11[15]];
            *(_QWORD *)&v91[v11[16]] = *(_QWORD *)&v92[v11[16]];
            swift_release();
LABEL_86:
            a3 = v176;
            v4 = v178;
            goto LABEL_87;
          }
        }
        else
        {
          v170 = *(_QWORD *)(v158 - 8);
          if (!v169)
          {
            (*(void (**)(char *, char *, uint64_t))(v170 + 40))(v166, v167, v158);
            goto LABEL_85;
          }
          (*(void (**)(char *, uint64_t))(v170 + 8))(v166, v158);
        }
        v171 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
        memcpy(v166, v167, *(_QWORD *)(*(_QWORD *)(v171 - 8) + 64));
        goto LABEL_85;
      }
      (*(void (**)(char *, uint64_t))(v162 + 8))(v156, v158);
    }
    v163 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    v161 = v157;
    memcpy(v156, v157, *(_QWORD *)(*(_QWORD *)(v163 - 8) + 64));
    goto LABEL_79;
  }
  if (!v94)
  {
    v95 = type metadata accessor for Participant.State(0);
    v176 = a3;
    v178 = v4;
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        v105 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v105 - 8) + 32))(v91, v92, v105);
        goto LABEL_54;
      case 4u:
        v98 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v98 - 8) + 32))(v91, v92, v98);
        v99 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        memcpy(&v91[*(int *)(v99 + 48)], &v92[*(int *)(v99 + 48)], 0x150uLL);
        v100 = *(int *)(v99 + 64);
        v101 = &v91[v100];
        v102 = &v92[v100];
        v103 = *((_OWORD *)v102 + 1);
        *(_OWORD *)v101 = *(_OWORD *)v102;
        *((_OWORD *)v101 + 1) = v103;
        v104 = *((_OWORD *)v102 + 3);
        *((_OWORD *)v101 + 2) = *((_OWORD *)v102 + 2);
        *((_OWORD *)v101 + 3) = v104;
LABEL_54:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v91, v92, *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64));
        break;
    }
    v106 = v11[5];
    v107 = &v91[v106];
    v108 = &v92[v106];
    v109 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v109 - 8) + 32))(v107, v108, v109);
    v110 = v11[6];
    v111 = &v91[v110];
    v112 = &v92[v110];
    *(_DWORD *)v111 = *(_DWORD *)v112;
    v111[4] = v112[4];
    v113 = v11[7];
    v114 = &v91[v113];
    v115 = &v92[v113];
    v116 = *((_OWORD *)v115 + 1);
    *(_OWORD *)v114 = *(_OWORD *)v115;
    *((_OWORD *)v114 + 1) = v116;
    *((_QWORD *)v114 + 4) = *((_QWORD *)v115 + 4);
    *(_QWORD *)&v91[v11[8]] = *(_QWORD *)&v92[v11[8]];
    *(_OWORD *)&v91[v11[9]] = *(_OWORD *)&v92[v11[9]];
    v91[v11[10]] = v92[v11[10]];
    *(_QWORD *)&v91[v11[11]] = *(_QWORD *)&v92[v11[11]];
    *(_QWORD *)&v91[v11[12]] = *(_QWORD *)&v92[v11[12]];
    v91[v11[13]] = v92[v11[13]];
    v117 = v11[14];
    v118 = &v91[v117];
    v119 = &v92[v117];
    v120 = type metadata accessor for Date();
    if (__swift_getEnumTagSinglePayload((uint64_t)v119, 1, v120))
    {
      v121 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
      memcpy(v118, v119, *(_QWORD *)(*(_QWORD *)(v121 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v120 - 8) + 32))(v118, v119, v120);
      __swift_storeEnumTagSinglePayload((uint64_t)v118, 0, 1, v120);
    }
    v122 = type metadata accessor for Participant.CountdownInfo(0);
    v123 = *(int *)(v122 + 20);
    v124 = &v118[v123];
    v125 = &v119[v123];
    if (__swift_getEnumTagSinglePayload((uint64_t)&v119[v123], 1, v120))
    {
      v126 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
      memcpy(v124, v125, *(_QWORD *)(*(_QWORD *)(v126 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v120 - 8) + 32))(v124, v125, v120);
      __swift_storeEnumTagSinglePayload((uint64_t)v124, 0, 1, v120);
    }
    v118[*(int *)(v122 + 24)] = v119[*(int *)(v122 + 24)];
    v91[v11[15]] = v92[v11[15]];
    *(_QWORD *)&v91[v11[16]] = *(_QWORD *)&v92[v11[16]];
    __swift_storeEnumTagSinglePayload((uint64_t)v91, 0, 1, (uint64_t)v11);
    goto LABEL_86;
  }
LABEL_48:
  v96 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  memcpy(v91, v92, *(_QWORD *)(*(_QWORD *)(v96 - 8) + 64));
LABEL_87:
  memcpy((void *)(a1 + a3[9]), (char *)v4 + a3[9], 0x61uLL);
  return a1;
}

uint64_t getEnumTagSinglePayload for InCallControlsActivityCellViewModel()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1BD47CB90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    OUTLINED_FUNCTION_18();
  }
  else
  {
    v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
    __swift_getEnumTagSinglePayload(a1 + *(int *)(a3 + 24), a2, v6);
  }
}

uint64_t storeEnumTagSinglePayload for InCallControlsActivityCellViewModel()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_QWORD *sub_1BD47CC0C(_QWORD *result, uint64_t a2, int a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *result = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
    return (_QWORD *)__swift_storeEnumTagSinglePayload((uint64_t)v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

void type metadata completion function for InCallControlsActivityCellViewModel()
{
  unint64_t v0;

  type metadata accessor for Participant?();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t storeEnumTagSinglePayload for InCallControlsActivityCellViewModel.CellStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BD47CD5C + 4 * byte_1BD66211B[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BD47CD90 + 4 * byte_1BD662116[v4]))();
}

uint64_t sub_1BD47CD90(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD47CD98(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD47CDA0);
  return result;
}

uint64_t sub_1BD47CDAC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD47CDB4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BD47CDB8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD47CDC0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for InCallControlsActivityCellViewModel.CellStyle()
{
  return &type metadata for InCallControlsActivityCellViewModel.CellStyle;
}

void OUTLINED_FUNCTION_39_60(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  outlined init with copy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(a1, v3, a3);
}

uint64_t SharePlayAppCell.init(app:onTap:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  __int128 v4;
  uint64_t *v5;

  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a4 = *(_OWORD *)a1;
  *(_OWORD *)(a4 + 16) = v4;
  *(_QWORD *)(a4 + 32) = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a4 + 40) = a2;
  *(_QWORD *)(a4 + 48) = a3;
  v5 = (uint64_t *)(a4 + *(int *)(OUTLINED_FUNCTION_1_139() + 24));
  *v5 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  return swift_storeEnumTagMultiPayload();
}

uint64_t type metadata accessor for SharePlayAppCell()
{
  uint64_t result;

  result = type metadata singleton initialization cache for SharePlayAppCell;
  if (!type metadata singleton initialization cache for SharePlayAppCell)
    return swift_getSingletonMetadata();
  return result;
}

id SharePlayAppCell.app.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v6;

  v2 = v1[1];
  v3 = v1[2];
  v4 = v1[3];
  v6 = (id)v1[4];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  a1[4] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v6;
}

uint64_t SharePlayAppCell.onTap.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_retain();
  return v1;
}

void SharePlayAppCell.body.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD v14[4];

  v14[1] = a1;
  v2 = OUTLINED_FUNCTION_1_139();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x1E0C80A78](v2);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Group<_ConditionalContent<ModifiedContent<VStack<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, ModifiedContent<ModifiedContent<<<opaque return type of View.lineLimit(_:reservesSpace:)>>.0, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>)>>, _FlexFrameLayout>, HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _FixedSizeLayout>)>>>>);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Group<_ConditionalContent<ModifiedContent<VStack<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, ModifiedContent<ModifiedContent<<<opaque return type of View.lineLimit(_:reservesSpace:)>>.0, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>)>>, _FlexFrameLayout>, HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _FixedSizeLayout>)>>>>, AccessibilityAttachmentModifier>);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  closure #1 in SharePlayAppCell.body.getter(v1, (uint64_t)v7);
  v11 = *(_QWORD *)(v1 + 24);
  v14[2] = *(_QWORD *)(v1 + 16);
  v14[3] = v11;
  lazy protocol witness table accessor for type Group<_ConditionalContent<ModifiedContent<VStack<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, ModifiedContent<ModifiedContent<<<opaque return type of View.lineLimit(_:reservesSpace:)>>.0, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>)>>, _FlexFrameLayout>, HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _FixedSizeLayout>)>>>> and conformance <A> Group<A>();
  lazy protocol witness table accessor for type String and conformance String();
  View.accessibilityLabel<A>(_:)();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v7, &demangling cache variable for type metadata for Group<_ConditionalContent<ModifiedContent<VStack<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, ModifiedContent<ModifiedContent<<<opaque return type of View.lineLimit(_:reservesSpace:)>>.0, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>)>>, _FlexFrameLayout>, HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _FixedSizeLayout>)>>>>);
  outlined init with copy of SharePlayAppCell(v1, (uint64_t)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v13 = swift_allocObject();
  outlined init with take of SharePlayAppCell((uint64_t)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v13 + v12);
  lazy protocol witness table accessor for type ModifiedContent<Group<_ConditionalContent<ModifiedContent<VStack<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, ModifiedContent<ModifiedContent<<<opaque return type of View.lineLimit(_:reservesSpace:)>>.0, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>)>>, _FlexFrameLayout>, HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _FixedSizeLayout>)>>>>, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>();
  View.onTapGesture(count:perform:)();
  swift_release();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v10, &demangling cache variable for type metadata for ModifiedContent<Group<_ConditionalContent<ModifiedContent<VStack<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, ModifiedContent<ModifiedContent<<<opaque return type of View.lineLimit(_:reservesSpace:)>>.0, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>)>>, _FlexFrameLayout>, HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _FixedSizeLayout>)>>>>, AccessibilityAttachmentModifier>);
}

void closure #1 in SharePlayAppCell.body.getter(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE v31[128];
  _BYTE v32[152];

  v30 = a2;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<VStack<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, ModifiedContent<ModifiedContent<<<opaque return type of View.lineLimit(_:reservesSpace:)>>.0, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>)>>, _FlexFrameLayout>, HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _FixedSizeLayout>)>>>.Storage);
  MEMORY[0x1E0C80A78](v28);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, ModifiedContent<ModifiedContent<<<opaque return type of View.lineLimit(_:reservesSpace:)>>.0, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>)>>);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, ModifiedContent<ModifiedContent<<<opaque return type of View.lineLimit(_:reservesSpace:)>>.0, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>)>>, _FlexFrameLayout>);
  MEMORY[0x1E0C80A78](v29);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v27 = (uint64_t)&v26 - v11;
  v12 = type metadata accessor for DynamicTypeSize();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v26 - v17;
  type metadata accessor for SharePlayAppCell();
  v19 = a1;
  specialized Environment.wrappedValue.getter();
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E0CD98E0], v12);
  LOBYTE(a1) = static DynamicTypeSize.< infix(_:_:)();
  v20 = *(void (**)(char *, uint64_t))(v13 + 8);
  v20(v15, v12);
  v20(v18, v12);
  static Platform.current.getter();
  if ((a1 & 1) != 0)
  {
    *(_QWORD *)v7 = static HorizontalAlignment.center.getter();
    *((_QWORD *)v7 + 1) = 0x4020000000000000;
    v7[16] = 0;
    v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_VStackLayout, TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, ModifiedContent<ModifiedContent<<<opaque return type of View.lineLimit(_:reservesSpace:)>>.0, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>)>>);
    closure #1 in closure #1 in SharePlayAppCell.body.getter(v19, (uint64_t)&v7[*(int *)(v21 + 44)]);
    static Platform.current.getter();
    v22 = static Alignment.center.getter();
    specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(0, 1, 0, 1, 0x4054000000000000, 0, 0, 1, 0, 1, 0, 1, v22, v23);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v7, &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, ModifiedContent<ModifiedContent<<<opaque return type of View.lineLimit(_:reservesSpace:)>>.0, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>)>>);
    v24 = v27;
    outlined init with take of Any?((uint64_t)v9, v27, &demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, ModifiedContent<ModifiedContent<<<opaque return type of View.lineLimit(_:reservesSpace:)>>.0, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>)>>, _FlexFrameLayout>);
    outlined init with copy of FeatureEligibility?(v24, (uint64_t)v4, &demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, ModifiedContent<ModifiedContent<<<opaque return type of View.lineLimit(_:reservesSpace:)>>.0, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>)>>, _FlexFrameLayout>);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _FixedSizeLayout>)>>);
    lazy protocol witness table accessor for type ModifiedContent<VStack<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, ModifiedContent<ModifiedContent<<<opaque return type of View.lineLimit(_:reservesSpace:)>>.0, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>)>>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _FixedSizeLayout>)>> and conformance HStack<A>, &demangling cache variable for type metadata for HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _FixedSizeLayout>)>>, MEMORY[0x1E0CDFB10]);
    _ConditionalContent<>.init(storage:)();
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v24, &demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, ModifiedContent<ModifiedContent<<<opaque return type of View.lineLimit(_:reservesSpace:)>>.0, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>)>>, _FlexFrameLayout>);
  }
  else
  {
    v25 = static VerticalAlignment.center.getter();
    closure #2 in closure #1 in SharePlayAppCell.body.getter(v19, (uint64_t)v31);
    v32[136] = 0;
    memcpy(&v32[7], v31, 0x7BuLL);
    *(_QWORD *)v4 = v25;
    *((_QWORD *)v4 + 1) = 0x4020000000000000;
    v4[16] = 0;
    memcpy(v4 + 17, v32, 0x82uLL);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _FixedSizeLayout>)>>);
    lazy protocol witness table accessor for type ModifiedContent<VStack<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, ModifiedContent<ModifiedContent<<<opaque return type of View.lineLimit(_:reservesSpace:)>>.0, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>)>>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _FixedSizeLayout>)>> and conformance HStack<A>, &demangling cache variable for type metadata for HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _FixedSizeLayout>)>>, MEMORY[0x1E0CDFB10]);
    _ConditionalContent<>.init(storage:)();
  }
}

unint64_t lazy protocol witness table accessor for type Group<_ConditionalContent<ModifiedContent<VStack<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, ModifiedContent<ModifiedContent<<<opaque return type of View.lineLimit(_:reservesSpace:)>>.0, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>)>>, _FlexFrameLayout>, HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _FixedSizeLayout>)>>>> and conformance <A> Group<A>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = lazy protocol witness table cache variable for type Group<_ConditionalContent<ModifiedContent<VStack<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, ModifiedContent<ModifiedContent<<<opaque return type of View.lineLimit(_:reservesSpace:)>>.0, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>)>>, _FlexFrameLayout>, HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _FixedSizeLayout>)>>>> and conformance <A> Group<A>;
  if (!lazy protocol witness table cache variable for type Group<_ConditionalContent<ModifiedContent<VStack<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, ModifiedContent<ModifiedContent<<<opaque return type of View.lineLimit(_:reservesSpace:)>>.0, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>)>>, _FlexFrameLayout>, HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _FixedSizeLayout>)>>>> and conformance <A> Group<A>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Group<_ConditionalContent<ModifiedContent<VStack<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, ModifiedContent<ModifiedContent<<<opaque return type of View.lineLimit(_:reservesSpace:)>>.0, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>)>>, _FlexFrameLayout>, HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _FixedSizeLayout>)>>>>);
    v2 = lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<VStack<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, ModifiedContent<ModifiedContent<<<opaque return type of View.lineLimit(_:reservesSpace:)>>.0, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>)>>, _FlexFrameLayout>, HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _FixedSizeLayout>)>>> and conformance <> _ConditionalContent<A, B>();
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDF690], v1, &v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Group<_ConditionalContent<ModifiedContent<VStack<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, ModifiedContent<ModifiedContent<<<opaque return type of View.lineLimit(_:reservesSpace:)>>.0, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>)>>, _FlexFrameLayout>, HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _FixedSizeLayout>)>>>> and conformance <A> Group<A>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<VStack<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, ModifiedContent<ModifiedContent<<<opaque return type of View.lineLimit(_:reservesSpace:)>>.0, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>)>>, _FlexFrameLayout>, HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _FixedSizeLayout>)>>> and conformance <> _ConditionalContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type _ConditionalContent<ModifiedContent<VStack<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, ModifiedContent<ModifiedContent<<<opaque return type of View.lineLimit(_:reservesSpace:)>>.0, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>)>>, _FlexFrameLayout>, HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _FixedSizeLayout>)>>> and conformance <> _ConditionalContent<A, B>;
  if (!lazy protocol witness table cache variable for type _ConditionalContent<ModifiedContent<VStack<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, ModifiedContent<ModifiedContent<<<opaque return type of View.lineLimit(_:reservesSpace:)>>.0, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>)>>, _FlexFrameLayout>, HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _FixedSizeLayout>)>>> and conformance <> _ConditionalContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<VStack<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, ModifiedContent<ModifiedContent<<<opaque return type of View.lineLimit(_:reservesSpace:)>>.0, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>)>>, _FlexFrameLayout>, HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _FixedSizeLayout>)>>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<VStack<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, ModifiedContent<ModifiedContent<<<opaque return type of View.lineLimit(_:reservesSpace:)>>.0, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>)>>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _FixedSizeLayout>)>> and conformance HStack<A>, &demangling cache variable for type metadata for HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _FixedSizeLayout>)>>, MEMORY[0x1E0CDFB10]);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDB8A0], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _ConditionalContent<ModifiedContent<VStack<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, ModifiedContent<ModifiedContent<<<opaque return type of View.lineLimit(_:reservesSpace:)>>.0, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>)>>, _FlexFrameLayout>, HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _FixedSizeLayout>)>>> and conformance <> _ConditionalContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<VStack<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, ModifiedContent<ModifiedContent<<<opaque return type of View.lineLimit(_:reservesSpace:)>>.0, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>)>>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<VStack<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, ModifiedContent<ModifiedContent<<<opaque return type of View.lineLimit(_:reservesSpace:)>>.0, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>)>>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<VStack<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, ModifiedContent<ModifiedContent<<<opaque return type of View.lineLimit(_:reservesSpace:)>>.0, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>)>>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, ModifiedContent<ModifiedContent<<<opaque return type of View.lineLimit(_:reservesSpace:)>>.0, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>)>>, _FlexFrameLayout>);
    lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type VStack<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, ModifiedContent<ModifiedContent<<<opaque return type of View.lineLimit(_:reservesSpace:)>>.0, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>)>> and conformance VStack<A>, &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, ModifiedContent<ModifiedContent<<<opaque return type of View.lineLimit(_:reservesSpace:)>>.0, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>)>>, MEMORY[0x1E0CDFCC0]);
    v3[0] = v2;
    v3[1] = MEMORY[0x1E0CDA228];
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v3);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<VStack<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, ModifiedContent<ModifiedContent<<<opaque return type of View.lineLimit(_:reservesSpace:)>>.0, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>)>>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t closure #1 in closure #1 in SharePlayAppCell.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t KeyPath;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  unsigned __int8 v62;
  uint64_t v63;
  unsigned __int8 v64;
  uint64_t v65;
  uint64_t v66;

  v4 = type metadata accessor for Font.Leading();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.lineLimit(_:reservesSpace:)>>.0);
  v55 = *(_QWORD *)(v8 - 8);
  v56 = v8;
  MEMORY[0x1E0C80A78](v8);
  v49 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.lineLimit(_:reservesSpace:)>>.0, _EnvironmentKeyWritingModifier<TextAlignment>>);
  MEMORY[0x1E0C80A78](v54);
  v50 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.lineLimit(_:reservesSpace:)>>.0, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>);
  MEMORY[0x1E0C80A78](v53);
  v51 = (uint64_t)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v52 = (uint64_t)&v41 - v13;
  v14 = type metadata accessor for Image.ResizingMode();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(id *)(a1 + 32);
  Image.init(uiImage:)();
  (*(void (**)(char *, _QWORD, uint64_t))(v15 + 104))(v17, *MEMORY[0x1E0CDF6F8], v14);
  v48 = Image.resizable(capInsets:resizingMode:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  static Platform.current.getter();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  v47 = v61;
  v46 = v62;
  v45 = v63;
  v44 = v64;
  v43 = v65;
  v42 = v66;
  v19 = *(_QWORD *)(a1 + 24);
  v57 = *(_QWORD *)(a1 + 16);
  v58 = v19;
  lazy protocol witness table accessor for type String and conformance String();
  swift_bridgeObjectRetain();
  v20 = Text.init<A>(_:)();
  v22 = v21;
  LOBYTE(v14) = v23 & 1;
  static Font.caption2.getter();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0CDD6D8], v4);
  Font.leading(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v24 = Text.font(_:)();
  v26 = v25;
  LOBYTE(v15) = v27;
  v29 = v28;
  swift_release();
  outlined consume of Text.Storage(v20, v22, v14);
  swift_bridgeObjectRelease();
  v57 = v24;
  v58 = v26;
  v59 = v15 & 1;
  v60 = v29;
  v30 = v49;
  View.lineLimit(_:reservesSpace:)();
  outlined consume of Text.Storage(v24, v26, v15 & 1);
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath();
  v33 = v55;
  v32 = v56;
  v34 = (uint64_t)v50;
  (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v50, v30, v56);
  v35 = v34 + *(int *)(v54 + 36);
  *(_QWORD *)v35 = KeyPath;
  *(_BYTE *)(v35 + 8) = 1;
  (*(void (**)(char *, uint64_t))(v33 + 8))(v30, v32);
  v36 = v51;
  outlined init with copy of FeatureEligibility?(v34, v51, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.lineLimit(_:reservesSpace:)>>.0, _EnvironmentKeyWritingModifier<TextAlignment>>);
  *(_WORD *)(v36 + *(int *)(v53 + 36)) = 256;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v34, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.lineLimit(_:reservesSpace:)>>.0, _EnvironmentKeyWritingModifier<TextAlignment>>);
  v37 = v52;
  outlined init with take of Any?(v36, v52, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.lineLimit(_:reservesSpace:)>>.0, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>);
  outlined init with copy of FeatureEligibility?(v37, v36, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.lineLimit(_:reservesSpace:)>>.0, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>);
  *(_QWORD *)a2 = v48;
  *(_QWORD *)(a2 + 8) = 0x3FF0000000000000;
  *(_WORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = v47;
  *(_BYTE *)(a2 + 32) = v46;
  *(_QWORD *)(a2 + 40) = v45;
  *(_BYTE *)(a2 + 48) = v44;
  v38 = v42;
  *(_QWORD *)(a2 + 56) = v43;
  *(_QWORD *)(a2 + 64) = v38;
  v39 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, ModifiedContent<ModifiedContent<<<opaque return type of View.lineLimit(_:reservesSpace:)>>.0, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>));
  outlined init with copy of FeatureEligibility?(v36, a2 + *(int *)(v39 + 48), &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.lineLimit(_:reservesSpace:)>>.0, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>);
  swift_retain();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v37, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.lineLimit(_:reservesSpace:)>>.0, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v36, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.lineLimit(_:reservesSpace:)>>.0, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>);
  return swift_release();
}

uint64_t closure #2 in closure #1 in SharePlayAppCell.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t KeyPath;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v31;
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned __int8 v42;
  uint64_t v43;
  unsigned __int8 v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  _BYTE v48[7];
  char v49;
  _BYTE v50[7];
  char v51;
  char v52;
  int v53;
  __int16 v54;
  char v55;

  v4 = type metadata accessor for Font.Leading();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Image.ResizingMode();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(id *)(a1 + 32);
  Image.init(uiImage:)();
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0CDF6F8], v8);
  v38 = Image.resizable(capInsets:resizingMode:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  static Platform.current.getter();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  v36 = v43;
  v37 = v41;
  v32 = v44;
  v33 = v42;
  v34 = v46;
  v35 = v45;
  v13 = *(_QWORD *)(a1 + 16);
  v14 = *(_QWORD *)(a1 + 24);
  v39 = v13;
  v40 = v14;
  lazy protocol witness table accessor for type String and conformance String();
  swift_bridgeObjectRetain();
  v15 = Text.init<A>(_:)();
  v17 = v16;
  v19 = v18 & 1;
  static Font.caption2.getter();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0CDD6D8], v4);
  Font.leading(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v20 = Text.font(_:)();
  v22 = v21;
  LOBYTE(v5) = v23;
  v25 = v24;
  swift_release();
  outlined consume of Text.Storage(v15, v17, v19);
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath();
  v55 = 0;
  v28 = v32;
  v27 = v33;
  v52 = v33;
  v51 = v32;
  v49 = v5 & 1;
  v47 = 0;
  *(_DWORD *)(a2 + 18) = v53;
  *(_WORD *)(a2 + 22) = v54;
  *(_DWORD *)(a2 + 33) = v39;
  *(_DWORD *)(a2 + 36) = *(_DWORD *)((char *)&v39 + 3);
  *(_DWORD *)(a2 + 52) = *(_DWORD *)&v50[3];
  *(_DWORD *)(a2 + 49) = *(_DWORD *)v50;
  *(_DWORD *)(a2 + 92) = *(_DWORD *)&v48[3];
  *(_DWORD *)(a2 + 89) = *(_DWORD *)v48;
  *(_QWORD *)a2 = v38;
  *(_QWORD *)(a2 + 8) = 0x3FF0000000000000;
  *(_WORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = v37;
  *(_BYTE *)(a2 + 32) = v27;
  *(_QWORD *)(a2 + 40) = v36;
  *(_BYTE *)(a2 + 48) = v28;
  v29 = v34;
  *(_QWORD *)(a2 + 56) = v35;
  *(_QWORD *)(a2 + 64) = v29;
  *(_QWORD *)(a2 + 72) = v20;
  *(_QWORD *)(a2 + 80) = v22;
  *(_BYTE *)(a2 + 88) = v5 & 1;
  *(_QWORD *)(a2 + 96) = v25;
  *(_QWORD *)(a2 + 104) = KeyPath;
  *(_QWORD *)(a2 + 112) = 2;
  *(_BYTE *)(a2 + 120) = 0;
  *(_WORD *)(a2 + 121) = 256;
  swift_retain();
  outlined copy of Text.Storage(v20, v22, v5 & 1);
  swift_bridgeObjectRetain();
  swift_retain();
  outlined consume of Text.Storage(v20, v22, v5 & 1);
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t outlined init with copy of SharePlayAppCell(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SharePlayAppCell();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BD47DE44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(OUTLINED_FUNCTION_1_139() - 8) + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v2 = type metadata accessor for DynamicTypeSize();
    OUTLINED_FUNCTION_17_1(v2);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in SharePlayAppCell.body.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_OWORD *);
  __int128 v4;
  _OWORD v6[2];
  uint64_t v7;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(OUTLINED_FUNCTION_1_139() - 8) + 80);
  v2 = v0 + ((v1 + 16) & ~v1);
  v3 = *(uint64_t (**)(_OWORD *))(v2 + 40);
  v4 = *(_OWORD *)(v2 + 16);
  v6[0] = *(_OWORD *)v2;
  v6[1] = v4;
  v7 = *(_QWORD *)(v2 + 32);
  return v3(v6);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<Group<_ConditionalContent<ModifiedContent<VStack<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, ModifiedContent<ModifiedContent<<<opaque return type of View.lineLimit(_:reservesSpace:)>>.0, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>)>>, _FlexFrameLayout>, HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _FixedSizeLayout>)>>>>, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<Group<_ConditionalContent<ModifiedContent<VStack<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, ModifiedContent<ModifiedContent<<<opaque return type of View.lineLimit(_:reservesSpace:)>>.0, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>)>>, _FlexFrameLayout>, HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _FixedSizeLayout>)>>>>, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<Group<_ConditionalContent<ModifiedContent<VStack<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, ModifiedContent<ModifiedContent<<<opaque return type of View.lineLimit(_:reservesSpace:)>>.0, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>)>>, _FlexFrameLayout>, HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _FixedSizeLayout>)>>>>, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Group<_ConditionalContent<ModifiedContent<VStack<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, ModifiedContent<ModifiedContent<<<opaque return type of View.lineLimit(_:reservesSpace:)>>.0, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>)>>, _FlexFrameLayout>, HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _FixedSizeLayout>)>>>>, AccessibilityAttachmentModifier>);
    v2[0] = lazy protocol witness table accessor for type Group<_ConditionalContent<ModifiedContent<VStack<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, ModifiedContent<ModifiedContent<<<opaque return type of View.lineLimit(_:reservesSpace:)>>.0, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>)>>, _FlexFrameLayout>, HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _FixedSizeLayout>)>>>> and conformance <A> Group<A>();
    v2[1] = lazy protocol witness table accessor for type AccessibilityAttachmentModifier and conformance AccessibilityAttachmentModifier();
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<Group<_ConditionalContent<ModifiedContent<VStack<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, ModifiedContent<ModifiedContent<<<opaque return type of View.lineLimit(_:reservesSpace:)>>.0, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>)>>, _FlexFrameLayout>, HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _FixedSizeLayout>)>>>>, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t associated type witness table accessor for View.Body : View in SharePlayAppCell()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t initializeBufferWithCopyOfBuffer for SharePlayAppCell(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v15;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v13 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v13 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    v6 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v6;
    v7 = a2[6];
    v15 = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 32) = v15;
    v8 = *(int *)(a3 + 24);
    v9 = (_QWORD *)(a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    *(_QWORD *)(a1 + 48) = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11 = (id)v15;
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v9, v10, v12);
    }
    else
    {
      *v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for SharePlayAppCell(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  v4 = a1 + *(int *)(a2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v5 = type metadata accessor for DynamicTypeSize();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t initializeWithCopy for SharePlayAppCell(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  id v10;
  uint64_t v11;
  __int128 v13;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 48);
  v13 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v13;
  v7 = *(int *)(a3 + 24);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + 48) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10 = (id)v13;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v11 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v8, v9, v11);
  }
  else
  {
    *v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *assignWithCopy for SharePlayAppCell(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (void *)a2[4];
  v7 = (void *)a1[4];
  a1[4] = v6;
  v8 = v6;

  v9 = a2[6];
  a1[5] = a2[5];
  a1[6] = v9;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v10 = *(int *)(a3 + 24);
    v11 = (_QWORD *)((char *)a1 + v10);
    v12 = (_QWORD *)((char *)a2 + v10);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)a1 + v10, &demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v13 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
    }
    else
    {
      *v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithTake for SharePlayAppCell(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  void *v6;
  const void *v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v5 = *(int *)(a3 + 24);
  v6 = (void *)(a1 + v5);
  v7 = (const void *)(a2 + v5);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v9 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v6, v7, v9);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  return a1;
}

uint64_t assignWithTake for SharePlayAppCell(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  v8 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);

  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  if (a1 != a2)
  {
    v9 = *(int *)(a3 + 24);
    v10 = (void *)(a1 + v9);
    v11 = (const void *)(a2 + v9);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(a1 + v9, &demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v13 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v10, v11, v13);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for SharePlayAppCell()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BD47E55C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>);
    return __swift_getEnumTagSinglePayload(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for SharePlayAppCell()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BD47E5E0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>);
    return __swift_storeEnumTagSinglePayload(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

void type metadata completion function for SharePlayAppCell()
{
  unint64_t v0;

  type metadata accessor for Environment<DynamicTypeSize>.Content();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void type metadata accessor for Environment<DynamicTypeSize>.Content()
{
  unint64_t v0;
  uint64_t v1;

  if (!lazy cache variable for type metadata for Environment<DynamicTypeSize>.Content)
  {
    type metadata accessor for DynamicTypeSize();
    v0 = type metadata accessor for Environment.Content();
    if (!v1)
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  }
}

uint64_t sub_1BD47E724()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Group<_ConditionalContent<ModifiedContent<VStack<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, ModifiedContent<ModifiedContent<<<opaque return type of View.lineLimit(_:reservesSpace:)>>.0, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>)>>, _FlexFrameLayout>, HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _FixedSizeLayout>)>>>>, AccessibilityAttachmentModifier>);
  lazy protocol witness table accessor for type ModifiedContent<Group<_ConditionalContent<ModifiedContent<VStack<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, ModifiedContent<ModifiedContent<<<opaque return type of View.lineLimit(_:reservesSpace:)>>.0, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>)>>, _FlexFrameLayout>, HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _FixedSizeLayout>)>>>>, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>();
  return swift_getOpaqueTypeConformance2();
}

uint64_t ParticipantAvatar.init(_:colorStyle:)@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  Class isa;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v6 = type metadata accessor for Participant(0);
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_77();
  v9 = v8 - v7;
  v10 = type metadata accessor for PersonNameComponents();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_77();
  v14 = v13 - v12;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_77();
  v18 = v17 - v16;
  HIDWORD(v50) = *a2;
  outlined init with copy of Participant?(a1, v17 - v16);
  if (__swift_getEnumTagSinglePayload(v18, 1, v6) != 1)
  {
    v27 = *(void **)(v18 + *(int *)(v6 + 28));
    v48 = a1;
    if (v27)
    {
      v28 = v27;
      outlined bridged method (pb) of @objc TUHandle.siriDisplayName.getter(v28);
      v49 = v30;
      if (v29)
      {
        v31 = v29;
        if ((objc_msgSend(v28, sel_shouldHideContact) & 1) != 0)
        {
          v47 = v31;
          swift_bridgeObjectRetain();
          PersonNameComponents.init()();
          PersonNameComponents.givenName.setter();
          PersonNameComponents.familyName.setter();
          if (one-time initialization token for initials != -1)
            swift_once();
          OUTLINED_FUNCTION_2_0();
          v32 = (id)static NSPersonNameComponentsFormatter.initials;
          isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
          v34 = objc_msgSend(v32, sel_stringFromPersonNameComponents_, isa);

          static String._unconditionallyBridgeFromObjectiveC(_:)();
          (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v14, v10);
          lazy protocol witness table accessor for type String and conformance String();
          v25 = StringProtocol.localizedUppercase.getter();
          v26 = v35;

          swift_bridgeObjectRelease();
          v20 = 0;
          v21 = v49;
          v23 = v49;
          v22 = v47;
          v24 = v47;
          goto LABEL_12;
        }

        swift_bridgeObjectRelease();
      }
      else
      {

      }
    }
    outlined init with copy of Participant(v18, v9);
    swift_retain();
    ParticipantContactDetailsCache.contactDetails(for:)(v9, v36, v37, v38, v39, v40, v41, v42, v45, v46, a1, v49, v50, v51, v52, v53, v55, v57, v59,
      v61);
    v20 = v54;
    v22 = v58;
    v23 = v60;
    v24 = v62;
    v26 = v64;
    v43 = v54;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v21 = v56;
    swift_release();
    v44 = v9;
    v25 = v63;
    outlined destroy of Participant(v44);
LABEL_12:
    outlined destroy of Participant?(v48);
    result = outlined destroy of Participant(v18);
    goto LABEL_13;
  }
  outlined destroy of Participant?(a1);
  result = outlined destroy of Participant?(v18);
  v20 = 0;
  v21 = 0;
  v22 = 0;
  v23 = 0;
  v24 = 0;
  v25 = 0;
  v26 = 0;
LABEL_13:
  *(_QWORD *)a3 = v20;
  *(_QWORD *)(a3 + 8) = v21;
  *(_QWORD *)(a3 + 16) = v22;
  *(_QWORD *)(a3 + 24) = v23;
  *(_QWORD *)(a3 + 32) = v24;
  *(_QWORD *)(a3 + 40) = v25;
  *(_QWORD *)(a3 + 48) = v26;
  *(_BYTE *)(a3 + 56) = BYTE4(v50);
  return result;
}

uint64_t outlined init with copy of Participant?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

char *ParticipantContactView.__allocating_init(colorStyle:)(unsigned __int8 *a1)
{
  OUTLINED_FUNCTION_12_3();
  return ParticipantContactView.init(colorStyle:)(a1);
}

void ParticipantContactView.gradient.setter(uint64_t a1)
{
  GradientView.colors.setter(a1);
  OUTLINED_FUNCTION_0();
}

void ParticipantContactView.contactDetails.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;

  v2 = *a1;
  v3 = a1[3];
  v9 = *((_OWORD *)a1 + 2);
  v10 = *(_OWORD *)(a1 + 1);
  v4 = a1[6];
  v5 = v1 + OBJC_IVAR____TtC15ConversationKit22ParticipantContactView_contactDetails;
  OUTLINED_FUNCTION_2_0();
  v6 = *(void **)v5;
  v7 = *(_QWORD *)(v5 + 8);
  v8 = *(_QWORD *)(v5 + 16);
  *(_QWORD *)v5 = v2;
  *(_OWORD *)(v5 + 8) = v10;
  *(_QWORD *)(v5 + 24) = v3;
  *(_OWORD *)(v5 + 32) = v9;
  *(_QWORD *)(v5 + 48) = v4;
  outlined consume of ParticipantContactDetails?(v6, v7, v8);
  ParticipantContactView.contactDetails.didset();
}

void *ParticipantContactView.contactDetails.getter@<X0>(_QWORD *a1@<X8>)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_2_0();
  v2 = (void *)OUTLINED_FUNCTION_1_140();
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  return outlined copy of ParticipantContactDetails?(v2, v3, v4);
}

void *key path getter for ParticipantContactView.contactDetails : ParticipantContactView@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *a1 + OBJC_IVAR____TtC15ConversationKit22ParticipantContactView_contactDetails;
  swift_beginAccess();
  v4 = *(void **)v3;
  v5 = *(_QWORD *)(v3 + 8);
  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(v3 + 32);
  v9 = *(_QWORD *)(v3 + 40);
  v10 = *(_QWORD *)(v3 + 48);
  *a2 = *(_QWORD *)v3;
  a2[1] = v5;
  a2[2] = v6;
  a2[3] = v7;
  a2[4] = v8;
  a2[5] = v9;
  a2[6] = v10;
  return outlined copy of ParticipantContactDetails?(v4, v5, v6);
}

void key path setter for ParticipantContactView.contactDetails : ParticipantContactView(uint64_t a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7[7];

  v1 = *(void **)(a1 + 8);
  v2 = *(void **)(a1 + 16);
  v3 = *(void **)(a1 + 24);
  v4 = *(void **)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  v6 = *(void **)(a1 + 48);
  v7[0] = *(void **)a1;
  v7[1] = v1;
  v7[2] = v2;
  v7[3] = v3;
  v7[4] = v4;
  v7[5] = v5;
  v7[6] = v6;
  outlined copy of ParticipantContactDetails?(v7[0], (uint64_t)v1, (uint64_t)v2);
  ParticipantContactView.contactDetails.setter((uint64_t *)v7);
}

void ParticipantContactView.contactDetails.didset()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[7];

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit22ParticipantContactView_contactDetails;
  swift_beginAccess();
  v2 = *(void **)v1;
  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 40);
  v8 = *(_QWORD *)(v1 + 48);
  v9[0] = v2;
  v9[1] = v3;
  v9[2] = v4;
  v9[3] = v5;
  v9[4] = v6;
  v9[5] = v7;
  v9[6] = v8;
  outlined copy of ParticipantContactDetails?(v2, v3, v4);
  ParticipantContactView.updateViews(using:)((uint64_t)v9);
  outlined consume of ParticipantContactDetails?(v2, v3, v4);
}

id ParticipantContactView.updateViews(using:)(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  id v11;
  void *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  void *v33;
  id v34;
  void *v35;
  id v36;
  uint64_t v37;
  void *v38;
  void *v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  void *v44;
  char **v45;
  id v46;
  uint64_t v47;
  unint64_t v48;
  id v49;
  uint64_t v50;
  unint64_t v51;
  _BOOL8 v52;
  id v54;
  id v55;
  uint64_t v56;
  id v57;

  v2 = v1;
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
    v16 = *(void **)&v1[OBJC_IVAR____TtC15ConversationKit22ParticipantContactView_contactMonogram];
    MonogramView.text.setter(0, 0xE000000000000000);
    v17 = *(void **)&v1[OBJC_IVAR____TtC15ConversationKit22ParticipantContactView_contactImageView];
    specialized static UIImage.image(named:)(6);
    v19 = v18;
    objc_msgSend(v17, sel_setImage_, v18);

    v20 = objc_msgSend(v17, sel_layer);
    type metadata accessor for NSObject(0, &lazy cache variable for type metadata for CAFilter);
    v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    CAFilter.__allocating_init(type:)(v21, v22);
    v24 = v23;
    objc_msgSend(v20, sel_setCompositingFilter_, v23);

    objc_msgSend(v17, sel_setHidden_, 0);
    objc_msgSend(v16, sel_setHidden_, 1);
    objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC15ConversationKit22ParticipantContactView_gradientView], sel_setHidden_, 0);
    goto LABEL_27;
  }
  v5 = *(id *)a1;
  v4 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  v8 = one-time initialization token for shared;
  v57 = *(id *)a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v8 != -1)
    swift_once();
  v9 = (*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 616))();
  v10 = v9;
  v56 = v4;
  if (v5)
  {
    v11 = objc_msgSend(v57, sel_thumbnailImageData);
    if (v11)
    {
      v12 = v11;
      v13 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      v15 = v14;

    }
    else
    {
      v13 = 0;
      v15 = 0xF000000000000000;
    }
    if ((v10 & 1) != 0)
    {
LABEL_12:
      if (v15 >> 60 != 15)
      {
        v31 = *(void **)&v2[OBJC_IVAR____TtC15ConversationKit22ParticipantContactView_contactImageView];
        type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
        outlined copy of Data._Representation(v13, v15);
        outlined copy of Data._Representation(v13, v15);
        UIImage.__allocating_init(data:)(v13, v15);
        v33 = v32;
        objc_msgSend(v31, sel_setImage_, v32);

        v34 = objc_msgSend(v31, sel_layer);
        objc_msgSend(v34, sel_setCompositingFilter_, 0);

        objc_msgSend(v31, sel_setHidden_, 0);
        objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC15ConversationKit22ParticipantContactView_contactMonogram], sel_setHidden_, 1);
        objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC15ConversationKit22ParticipantContactView_gradientView], sel_setHidden_, 1);
        outlined consume of ParticipantContactDetails?(v5, v56, v3);
        outlined consume of Data?(v13, v15);
        outlined consume of Data?(v13, v15);
        goto LABEL_27;
      }
      goto LABEL_13;
    }
  }
  else
  {
    v13 = 0;
    v15 = 0xF000000000000000;
    if ((v9 & 1) != 0)
      goto LABEL_12;
  }
  outlined consume of Data?(v13, v15);
LABEL_13:
  v25 = *(void **)&v2[OBJC_IVAR____TtC15ConversationKit22ParticipantContactView_contactMonogram];
  if (v5)
  {
    v26 = v57;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v27 = String.count.getter();
    v28 = v56;
    outlined consume of ParticipantContactDetails?(v5, v56, v3);
    if ((unint64_t)(v27 - 1) > 1)
    {
      v29 = 0;
      v30 = 0xE000000000000000;
    }
    else
    {
      swift_bridgeObjectRetain();
      v29 = v7;
      v30 = v6;
    }
  }
  else
  {
    v29 = 0;
    v30 = 0xE000000000000000;
    v28 = v56;
  }
  v54 = v25;
  MonogramView.text.setter(v29, v30);
  v35 = *(void **)&v2[OBJC_IVAR____TtC15ConversationKit22ParticipantContactView_contactImageView];
  if (v5
    && (v36 = v57,
        swift_bridgeObjectRetain(),
        swift_bridgeObjectRetain(),
        swift_bridgeObjectRetain(),
        v37 = String.count.getter(),
        outlined consume of ParticipantContactDetails?(v5, v28, v3),
        (unint64_t)(v37 - 1) < 2))
  {
    v38 = 0;
  }
  else
  {
    specialized static UIImage.image(named:)(6);
    v38 = v39;
  }
  objc_msgSend(v35, sel_setImage_, v38, v54);

  v40 = objc_msgSend(v35, sel_layer);
  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for CAFilter);
  v41 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  CAFilter.__allocating_init(type:)(v41, v42);
  v44 = v43;
  objc_msgSend(v40, sel_setCompositingFilter_, v43);

  v45 = &selRef_associatedAppBundleIdentifier;
  if (v5)
  {
    v46 = v57;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v47 = String.count.getter();
    outlined consume of ParticipantContactDetails?(v5, v56, v3);
    v48 = v47 - 1;
    v28 = v56;
    objc_msgSend(v35, sel_setHidden_, v48 < 2);
    v49 = v46;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v50 = String.count.getter();
    outlined consume of ParticipantContactDetails?(v5, v56, v3);
    v51 = v50 - 3;
    v45 = &selRef_associatedAppBundleIdentifier;
    v52 = v51 < 0xFFFFFFFFFFFFFFFELL;
  }
  else
  {
    objc_msgSend(v35, sel_setHidden_, 0);
    v52 = 1;
  }
  objc_msgSend(v55, v45[154], v52);
  objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC15ConversationKit22ParticipantContactView_gradientView], v45[154], 0);
  outlined consume of ParticipantContactDetails?(v5, v28, v3);
LABEL_27:
  objc_msgSend(v2, sel_setNeedsLayout);
  return objc_msgSend(v2, sel_layoutIfNeeded);
}

void ParticipantContactView.contactDetails.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void ParticipantContactView.contactDetails.modify(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    ParticipantContactView.contactDetails.didset();
  OUTLINED_FUNCTION_0();
}

uint64_t ParticipantContactView.gradient.getter()
{
  OUTLINED_FUNCTION_2_0();
  return swift_bridgeObjectRetain();
}

void key path setter for ParticipantContactView.gradient : ParticipantContactView()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  ParticipantContactView.gradient.setter(v0);
}

void ParticipantContactView.gradient.modify(uint64_t *a1)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = ParticipantContactView.gradient.getter();
  OUTLINED_FUNCTION_0();
}

void ParticipantContactView.gradient.modify(uint64_t *a1, char a2)
{
  uint64_t v2;

  if ((a2 & 1) != 0)
  {
    v2 = swift_bridgeObjectRetain();
    GradientView.colors.setter(v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    GradientView.colors.setter(*a1);
    OUTLINED_FUNCTION_0();
  }
}

char *ParticipantContactView.init(colorStyle:)(unsigned __int8 *a1)
{
  char *v1;
  objc_class *v3;
  unsigned __int8 v4;
  uint64_t v5;
  id v6;
  char *v7;
  uint64_t v8;
  char *v9;
  id v10;
  char *v11;
  void *v12;
  char *v13;
  uint64_t v14;
  id v15;
  void *v16;
  void *v17;
  uint64_t v18;
  char *v19;
  void *v20;
  void *v21;
  char *v22;
  id v23;
  uint64_t v24;
  id v25;
  char *v26;
  id v27;
  objc_super v29;
  unsigned __int8 v30;

  v3 = (objc_class *)OUTLINED_FUNCTION_15_6();
  v4 = *a1;
  v5 = OBJC_IVAR____TtC15ConversationKit22ParticipantContactView_gradientView;
  v6 = objc_allocWithZone((Class)OUTLINED_FUNCTION_6_103());
  v7 = v1;
  *(_QWORD *)&v1[v5] = objc_msgSend(v6, sel_init);
  v8 = OBJC_IVAR____TtC15ConversationKit22ParticipantContactView_contactImageView;
  *(_QWORD *)&v7[v8] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_init);
  v9 = &v7[OBJC_IVAR____TtC15ConversationKit22ParticipantContactView_contactDetails];
  *((_QWORD *)v9 + 6) = 0;
  *((_OWORD *)v9 + 1) = 0u;
  *((_OWORD *)v9 + 2) = 0u;
  *(_OWORD *)v9 = 0u;
  v30 = v4;
  v10 = objc_allocWithZone((Class)type metadata accessor for MonogramView());
  *(_QWORD *)&v7[OBJC_IVAR____TtC15ConversationKit22ParticipantContactView_contactMonogram] = MonogramView.init(colorStyle:)(&v30);

  v29.receiver = v7;
  v29.super_class = v3;
  v11 = (char *)objc_msgSendSuper2(&v29, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v12 = *(void **)&v11[OBJC_IVAR____TtC15ConversationKit22ParticipantContactView_gradientView];
  v13 = v11;
  objc_msgSend(v12, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v14 = OBJC_IVAR____TtC15ConversationKit22ParticipantContactView_contactImageView;
  v15 = *(id *)&v13[OBJC_IVAR____TtC15ConversationKit22ParticipantContactView_contactImageView];
  specialized static UIImage.image(named:)(6);
  v17 = v16;
  objc_msgSend(v15, sel_setImage_, v16);

  if ((v4 & 1) != 0)
  {
    OUTLINED_FUNCTION_3_117();
    v18 = one-time initialization token for overlayContent;
    v19 = v13;
    if (v18 != -1)
      swift_once();
    objc_msgSend(v19, sel_setBackgroundColor_, static Colors.ParticipantViews.overlayContent);

    v20 = *(void **)&v13[v14];
    v21 = (void *)objc_opt_self();
    v22 = v20;
    v23 = objc_msgSend(v21, sel_whiteColor);
    objc_msgSend(v22, sel_setTintColor_, v23);
    goto LABEL_11;
  }
  OUTLINED_FUNCTION_3_117();
  OUTLINED_FUNCTION_3_117();
  v24 = one-time initialization token for contactMonogramIcon;
  v25 = *(id *)&v13[v14];
  if (v24 != -1)
    swift_once();
  objc_msgSend(v25, sel_setTintColor_, static Colors.ParticipantViews.contactMonogramIcon);

  if (one-time initialization token for shared != -1)
    swift_once();
  if (((*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 320))() & 1) == 0)
  {
    v22 = v13;
    v23 = objc_msgSend(v22, sel_layer);
    closure #1 in ParticipantContactView.init(colorStyle:)(v23);
LABEL_11:

  }
  OUTLINED_FUNCTION_3_117();
  v26 = v13;
  v27 = objc_msgSend(v26, sel_layer);
  objc_msgSend(v27, sel_setShadowPathIsBounds_, 1);

  return v26;
}

id closure #1 in ParticipantContactView.init(colorStyle:)(void *a1)
{
  id v2;
  double v3;

  if (one-time initialization token for shadow != -1)
    swift_once();
  v2 = objc_msgSend((id)static Colors.ParticipantViews.shadow, sel_CGColor);
  objc_msgSend(a1, sel_setShadowColor_, v2);

  objc_msgSend(a1, sel_setShadowRadius_, 25.0);
  LODWORD(v3) = 1062501089;
  return objc_msgSend(a1, sel_setShadowOpacity_, v3);
}

id ParticipantContactView.__allocating_init()()
{
  return objc_msgSend(OUTLINED_FUNCTION_12_3(), sel_init);
}

void ParticipantContactView.init()()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;

  v1 = OBJC_IVAR____TtC15ConversationKit22ParticipantContactView_gradientView;
  v2 = objc_allocWithZone((Class)OUTLINED_FUNCTION_6_103());
  *(_QWORD *)(v0 + v1) = OUTLINED_FUNCTION_70_0(v2);
  v3 = OBJC_IVAR____TtC15ConversationKit22ParticipantContactView_contactImageView;
  *(_QWORD *)(v0 + v3) = OUTLINED_FUNCTION_70_0(objc_allocWithZone(MEMORY[0x1E0DC3890]));
  OUTLINED_FUNCTION_0_144(OBJC_IVAR____TtC15ConversationKit22ParticipantContactView_contactDetails);
  OUTLINED_FUNCTION_0_48();
  __break(1u);
}

id ParticipantContactView.__allocating_init(coder:)(void *a1)
{
  id v2;

  v2 = objc_msgSend(OUTLINED_FUNCTION_12_3(), sel_initWithCoder_, a1);

  return v2;
}

void ParticipantContactView.init(coder:)()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;

  v1 = OBJC_IVAR____TtC15ConversationKit22ParticipantContactView_gradientView;
  v2 = objc_allocWithZone((Class)OUTLINED_FUNCTION_6_103());
  *(_QWORD *)(v0 + v1) = OUTLINED_FUNCTION_70_0(v2);
  v3 = OBJC_IVAR____TtC15ConversationKit22ParticipantContactView_contactImageView;
  *(_QWORD *)(v0 + v3) = OUTLINED_FUNCTION_70_0(objc_allocWithZone(MEMORY[0x1E0DC3890]));
  OUTLINED_FUNCTION_0_144(OBJC_IVAR____TtC15ConversationKit22ParticipantContactView_contactDetails);
  OUTLINED_FUNCTION_0_48();
  __break(1u);
}

id ParticipantContactView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

void ParticipantContactView.init(frame:)()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;

  v1 = OBJC_IVAR____TtC15ConversationKit22ParticipantContactView_gradientView;
  v2 = objc_allocWithZone((Class)OUTLINED_FUNCTION_6_103());
  *(_QWORD *)(v0 + v1) = OUTLINED_FUNCTION_70_0(v2);
  v3 = OBJC_IVAR____TtC15ConversationKit22ParticipantContactView_contactImageView;
  *(_QWORD *)(v0 + v3) = OUTLINED_FUNCTION_70_0(objc_allocWithZone(MEMORY[0x1E0DC3890]));
  OUTLINED_FUNCTION_0_144(OBJC_IVAR____TtC15ConversationKit22ParticipantContactView_contactDetails);
  OUTLINED_FUNCTION_0_48();
  __break(1u);
}

Swift::Void __swiftcall ParticipantContactView.layoutSubviews()()
{
  void *v0;
  objc_super v1;

  v1.receiver = v0;
  v1.super_class = (Class)OUTLINED_FUNCTION_15_6();
  objc_msgSendSuper2(&v1, sel_layoutSubviews);
  ParticipantContactView._layout()();
}

void ParticipantContactView._layout()()
{
  char *v0;
  uint64_t v1;
  double v2;
  double v3;
  double v4;
  double v5;
  void *v6;
  id v7;
  double v8;
  double v9;
  void *v10;
  id v11;
  _QWORD *v12;
  void *v13;
  id v14;
  void *v15;
  CGFloat v16;
  double width;
  double height;
  CGFloat v19;
  CGRect v20;
  CGRect v21;
  CGRect v22;
  CGRect v23;
  CGRect v24;

  v1 = (uint64_t)v0;
  objc_msgSend(v0, sel_bounds);
  if (!CGRectIsInfinite(v20) || (objc_msgSend(v0, sel_bounds), !CGRectIsEmpty(v21)))
  {
    objc_msgSend(v0, sel_bounds);
    v3 = v2;
    v5 = v4;
    v6 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit22ParticipantContactView_gradientView];
    v7 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC15ConversationKit22ParticipantContactView_gradientView), sel_superview);

    if (v5 >= v3)
      v8 = v3;
    else
      v8 = v5;
    v9 = v8 * 0.5;
    if (v7)
      v10 = v6;
    else
      v10 = (void *)v1;
    v11 = objc_msgSend(v10, sel_layer);
    objc_msgSend(v11, sel_setCornerRadius_, v9);

    objc_msgSend(v6, sel_setFrame_, 0.0, 0.0, v3, v5);
    objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC15ConversationKit22ParticipantContactView_contactMonogram), sel_setFrame_, 0.0, 0.0, v3, v5);
    if (one-time initialization token for shared != -1)
      swift_once();
    if (((*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 616))() & 1) != 0
      && (v12 = (_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit22ParticipantContactView_contactDetails),
          swift_beginAccess(),
          v12[2])
      && *v12)
    {
      v13 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit22ParticipantContactView_contactImageView);
      objc_msgSend(v13, sel_setFrame_, 0.0, 0.0, v3, v5);
      v14 = objc_msgSend(v13, sel_layer);
      closure #2 in ParticipantContactView._layout()(v14, v1);
    }
    else
    {
      v15 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit22ParticipantContactView_contactImageView);
      v22.origin.x = 0.0;
      v22.origin.y = 0.0;
      v22.size.width = v3;
      v22.size.height = v5;
      v16 = fmax(floor(v3 * 0.04), 1.0);
      v23 = CGRectInset(v22, v16, v16);
      width = v23.size.width;
      height = v23.size.height;
      v23.origin.x = 0.0;
      v23.origin.y = 0.0;
      v23.size.width = v3;
      v23.size.height = v5;
      v19 = CGRectGetMidX(v23) - width * 0.5;
      v24.origin.x = 0.0;
      v24.origin.y = 0.0;
      v24.size.width = v3;
      v24.size.height = v5;
      objc_msgSend(v15, sel_setFrame_, v19, CGRectGetMidY(v24) - height * 0.5, width, height);
      v14 = objc_msgSend(v15, sel_layer);
      objc_msgSend(v14, sel_setMasksToBounds_, 0);
      objc_msgSend(v14, sel_setCornerRadius_, 0.0);
    }

  }
}

id closure #2 in ParticipantContactView._layout()(void *a1, uint64_t a2)
{
  CGRect v5;

  objc_msgSend(a1, sel_setMasksToBounds_, 1);
  objc_msgSend(*(id *)(a2 + OBJC_IVAR____TtC15ConversationKit22ParticipantContactView_contactImageView), sel_frame);
  return objc_msgSend(a1, sel_setCornerRadius_, CGRectGetHeight(v5) * 0.5);
}

id ParticipantContactView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)OUTLINED_FUNCTION_15_6();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void *ParticipantAvatar.contactDetails.getter()
{
  void *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v0 = (void *)OUTLINED_FUNCTION_1_140();
  *v2 = v0;
  v2[1] = v1;
  v2[2] = v3;
  v2[3] = v4;
  v2[4] = v5;
  v2[5] = v6;
  v2[6] = v7;
  return outlined copy of ParticipantContactDetails?(v0, v1, v3);
}

__n128 ParticipantAvatar.contactDetails.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  __n128 result;
  __n128 v7;
  __int128 v8;
  __int128 v9;

  v8 = a1[1];
  v9 = *a1;
  v7 = (__n128)a1[2];
  v2 = *((_QWORD *)a1 + 6);
  v3 = (void *)OUTLINED_FUNCTION_1_140();
  outlined consume of ParticipantContactDetails?(v3, v4, v5);
  *(_OWORD *)v1 = v9;
  *(_OWORD *)(v1 + 16) = v8;
  result = v7;
  *(__n128 *)(v1 + 32) = v7;
  *(_QWORD *)(v1 + 48) = v2;
  return result;
}

uint64_t (*ParticipantAvatar.contactDetails.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void ParticipantAvatar.colorStyle.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 56);
}

_BYTE *ParticipantAvatar.colorStyle.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 56) = *result;
  return result;
}

uint64_t (*ParticipantAvatar.colorStyle.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

__n128 ParticipantAvatar.init(contactDetails:colorStyle:)@<Q0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  char v4;
  __int128 v5;
  __n128 result;

  v3 = *(_QWORD *)(a1 + 48);
  v4 = *a2;
  v5 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a3 = *(_OWORD *)a1;
  *(_OWORD *)(a3 + 16) = v5;
  result = *(__n128 *)(a1 + 32);
  *(__n128 *)(a3 + 32) = result;
  *(_QWORD *)(a3 + 48) = v3;
  *(_BYTE *)(a3 + 56) = v4;
  return result;
}

char *ParticipantAvatar.makeUIView(context:)()
{
  uint64_t v0;
  id v1;
  unsigned __int8 v3;

  v3 = *(_BYTE *)(v0 + 56);
  v1 = objc_allocWithZone((Class)type metadata accessor for ParticipantContactView());
  return ParticipantContactView.init(colorStyle:)(&v3);
}

void ParticipantAvatar.updateUIView(_:context:)()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6[7];

  v6[0] = (void *)OUTLINED_FUNCTION_1_140();
  v6[1] = v0;
  v6[2] = v1;
  v6[3] = v2;
  v6[4] = v3;
  v6[5] = v4;
  v6[6] = v5;
  outlined copy of ParticipantContactDetails?(v6[0], (uint64_t)v0, (uint64_t)v1);
  ParticipantContactView.contactDetails.setter((uint64_t *)v6);
}

uint64_t protocol witness for static View._makeView(view:inputs:) in conformance ParticipantAvatar()
{
  lazy protocol witness table accessor for type ParticipantAvatar and conformance ParticipantAvatar();
  return static UIViewRepresentable._makeView(view:inputs:)();
}

uint64_t protocol witness for static View._makeViewList(view:inputs:) in conformance ParticipantAvatar()
{
  lazy protocol witness table accessor for type ParticipantAvatar and conformance ParticipantAvatar();
  return static UIViewRepresentable._makeViewList(view:inputs:)();
}

void protocol witness for View.body.getter in conformance ParticipantAvatar()
{
  lazy protocol witness table accessor for type ParticipantAvatar and conformance ParticipantAvatar();
  UIViewRepresentable.body.getter();
  __break(1u);
}

uint64_t type metadata accessor for ParticipantContactView()
{
  return objc_opt_self();
}

unint64_t lazy protocol witness table accessor for type ParticipantAvatar and conformance ParticipantAvatar()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ParticipantAvatar and conformance ParticipantAvatar;
  if (!lazy protocol witness table cache variable for type ParticipantAvatar and conformance ParticipantAvatar)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ParticipantAvatar, &type metadata for ParticipantAvatar);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ParticipantAvatar and conformance ParticipantAvatar);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ParticipantAvatar and conformance ParticipantAvatar;
  if (!lazy protocol witness table cache variable for type ParticipantAvatar and conformance ParticipantAvatar)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ParticipantAvatar, &type metadata for ParticipantAvatar);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ParticipantAvatar and conformance ParticipantAvatar);
  }
  return result;
}

void sub_1BD4802CC(uint64_t *a1@<X8>)
{
  *a1 = ParticipantContactView.gradient.getter();
  OUTLINED_FUNCTION_0();
}

uint64_t method lookup function for ParticipantContactView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ParticipantContactView.__allocating_init(colorStyle:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t destroy for ParticipantAvatar(uint64_t a1)
{
  uint64_t result;
  void *v3;

  result = *(_QWORD *)(a1 + 16);
  if (result)
  {
    v3 = *(void **)a1;
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for ParticipantAvatar(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  __int128 v12;

  v4 = *(_QWORD *)(a2 + 16);
  if (v4)
  {
    v5 = *(void **)a2;
    v6 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v6;
    v7 = *(_QWORD *)(a2 + 24);
    v8 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 16) = v4;
    *(_QWORD *)(a1 + 24) = v7;
    v9 = *(_QWORD *)(a2 + 40);
    v10 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 32) = v8;
    *(_QWORD *)(a1 + 40) = v9;
    *(_QWORD *)(a1 + 48) = v10;
    v11 = v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v12 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v12;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  }
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

uint64_t assignWithCopy for ParticipantAvatar(uint64_t a1, __int128 *a2)
{
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;

  v4 = *((_QWORD *)a2 + 2);
  if (*(_QWORD *)(a1 + 16))
  {
    if (v4)
    {
      v5 = *(id *)a1;
      v6 = *(void **)a2;
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v7 = v6;

      *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
      *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 24) = *((_QWORD *)a2 + 3);
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
      *(_QWORD *)(a1 + 48) = *((_QWORD *)a2 + 6);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      outlined destroy of ParticipantContactDetails((id *)a1);
      v11 = a2[1];
      v10 = a2[2];
      v12 = *a2;
      *(_QWORD *)(a1 + 48) = *((_QWORD *)a2 + 6);
      *(_OWORD *)(a1 + 16) = v11;
      *(_OWORD *)(a1 + 32) = v10;
      *(_OWORD *)a1 = v12;
    }
  }
  else if (v4)
  {
    v8 = *(void **)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
    *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
    *(_QWORD *)(a1 + 24) = *((_QWORD *)a2 + 3);
    *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
    *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
    *(_QWORD *)(a1 + 48) = *((_QWORD *)a2 + 6);
    v9 = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v13 = *a2;
    v14 = a2[1];
    v15 = a2[2];
    *(_QWORD *)(a1 + 48) = *((_QWORD *)a2 + 6);
    *(_OWORD *)(a1 + 16) = v14;
    *(_OWORD *)(a1 + 32) = v15;
    *(_OWORD *)a1 = v13;
  }
  *(_BYTE *)(a1 + 56) = *((_BYTE *)a2 + 56);
  return a1;
}

id *outlined destroy of ParticipantContactDetails(id *a1)
{
  destroy for ParticipantContactDetails(a1);
  return a1;
}

uint64_t assignWithTake for ParticipantAvatar(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;

  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 16);
  if (!v4)
  {
    outlined destroy of ParticipantContactDetails((id *)a1);
LABEL_5:
    v8 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v8;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    goto LABEL_6;
  }
  v5 = *(id *)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v7;
  swift_bridgeObjectRelease();
LABEL_6:
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for ParticipantAvatar(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 57))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 16);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ParticipantAvatar(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 56) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 57) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 57) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticipantAvatar()
{
  return &type metadata for ParticipantAvatar;
}

uint64_t *CollaborationImageFetcher.shared.unsafeMutableAddressor()
{
  if (one-time initialization token for shared != -1)
    swift_once();
  return &static CollaborationImageFetcher.shared;
}

void IMCoreCollaborationImageProvider.fetchCollaborationImage(for:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  uint64_t v21;
  void *v22;

  v9 = type metadata accessor for DispatchQoS.QoSClass();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_77();
  v13 = v12 - v11;
  v14 = type metadata accessor for DispatchQoS();
  OUTLINED_FUNCTION_168();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_77();
  v18 = v17 - v16;
  v19 = (void *)MEMORY[0x1C3B72E00](a1, a2);
  static DispatchQoS.default.getter();
  DispatchQoS.qosClass.getter();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v18, v14);
  DispatchQoS.QoSClass.rawValue.getter();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v13, v9);
  type metadata accessor for OS_dispatch_queue();
  v20 = (void *)static OS_dispatch_queue.main.getter();
  v21 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v21 + 16) = a3;
  *(_QWORD *)(v21 + 24) = a4;
  v22 = OUTLINED_FUNCTION_15_1((uint64_t)thunk for @escaping @callee_guaranteed (@guaranteed [Any]?) -> ());
  swift_retain();
  swift_release();
  IMSPIQueryMessageWithGUIDAndLoadAttachmentsWithQOS();

  _Block_release(v22);
  OUTLINED_FUNCTION_52_1();
}

void closure #1 in IMCoreCollaborationImageProvider.fetchCollaborationImage(for:completion:)(uint64_t a1, void (*a2)(id))
{
  unint64_t v3;
  unint64_t v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;

  if (!a1)
    goto LABEL_13;
  v3 = specialized _arrayConditionalCast<A, B>(_:)(a1);
  if (!v3)
    goto LABEL_13;
  v4 = v3;
  if (!(v3 >> 62))
  {
    if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_5;
LABEL_12:
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  if (!_CocoaArrayWrapper.endIndex.getter())
    goto LABEL_12;
LABEL_5:
  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v4 & 0xC000000000000001) == 0, v4);
  if ((v4 & 0xC000000000000001) != 0)
    v5 = (id)MEMORY[0x1C3B73D18](0, v4);
  else
    v5 = *(id *)(v4 + 32);
  v6 = v5;
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(v6, sel_richLinkMetadata);

  if (v7)
  {
    v8 = objc_msgSend(v7, sel_image);

    if (v8)
    {
      v9 = objc_msgSend(v8, sel_platformImage);

      if (v9)
      {
        v10 = v9;
        a2(v9);

        return;
      }
    }
  }
LABEL_13:
  a2(0);
}

uint64_t IMCoreCollaborationImageProvider.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t IMCoreCollaborationImageProvider.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t IMCoreCollaborationImageProvider.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t IMCoreCollaborationImageProvider.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t protocol witness for CollaborationImageProvider.fetchCollaborationImage(for:completion:) in conformance IMCoreCollaborationImageProvider()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 80))();
}

uint64_t sub_1BD480AE4()
{
  swift_release();
  return swift_deallocObject();
}

void partial apply for closure #1 in IMCoreCollaborationImageProvider.fetchCollaborationImage(for:completion:)(uint64_t a1)
{
  uint64_t v1;

  closure #1 in IMCoreCollaborationImageProvider.fetchCollaborationImage(for:completion:)(a1, *(void (**)(id))(v1 + 16));
}

uint64_t CollaborationImageFetcher.__allocating_init(provider:)(uint64_t a1)
{
  return CollaborationImageFetcher.__allocating_init(provider:)(a1, specialized CollaborationImageFetcher.__allocating_init(provider:));
}

uint64_t static CollaborationImageFetcher.shared.getter()
{
  if (one-time initialization token for shared != -1)
    swift_once();
  return swift_retain();
}

uint64_t CollaborationImageFetcher.provider.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return outlined init with copy of IDSLookupManager(v1 + 16, a1);
}

uint64_t CollaborationImageFetcher.init(provider:)(uint64_t a1)
{
  return CollaborationImageFetcher.__allocating_init(provider:)(a1, specialized CollaborationImageFetcher.init(provider:));
}

uint64_t CollaborationImageFetcher.__allocating_init(provider:)(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = __swift_mutable_project_boxed_opaque_existential_1(a1, v5);
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_77();
  v10 = v9 - v8;
  (*(void (**)(uint64_t))(v11 + 16))(v9 - v8);
  v12 = a2(v10, v2, v5, v6);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v12;
}

UIImage_optional __swiftcall CollaborationImageFetcher.image(for:)(Swift::String a1)
{
  uint64_t v1;
  _QWORD *v2;
  void *v3;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v6;
  uint64_t v7;
  id v8;
  char v9;
  objc_class *v10;
  Swift::Bool v11;
  uint64_t v12;
  objc_class *v13;
  objc_class *v14;
  UIImage_optional result;

  object = a1._object;
  countAndFlagsBits = a1._countAndFlagsBits;
  v6 = type metadata accessor for DispatchPredicate();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_3_118();
  *v2 = v3;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v2, *MEMORY[0x1E0DEF740], v6);
  v8 = v3;
  v9 = _dispatchPreconditionTest(_:)();
  v10 = (objc_class *)OUTLINED_FUNCTION_40_0(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
  if ((v9 & 1) != 0)
  {
    swift_beginAccess();
    v12 = *(_QWORD *)(v1 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    specialized Dictionary.subscript.getter(countAndFlagsBits, (uint64_t)object, v12);
    v14 = v13;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v14 == (objc_class *)1)
      v10 = 0;
    else
      v10 = v14;
  }
  else
  {
    __break(1u);
  }
  result.value.super.isa = v10;
  result.is_nil = v11;
  return result;
}

void CollaborationImageFetcher.startTrackingCollaborations(with:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _QWORD *v15;
  void *v16;
  _QWORD v17[3];
  _QWORD aBlock[6];
  __int128 v19[2];

  v6 = v3;
  type metadata accessor for DispatchWorkItemFlags();
  OUTLINED_FUNCTION_168();
  MEMORY[0x1E0C80A78](v10);
  v11 = OUTLINED_FUNCTION_20_3();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[1] = *(_QWORD *)(v6 + 56);
  outlined init with copy of IDSLookupManager(a1, (uint64_t)v19);
  v15 = (_QWORD *)OUTLINED_FUNCTION_15();
  outlined init with take of Notice(v19, (uint64_t)(v15 + 2));
  v15[7] = v6;
  v15[8] = a2;
  v15[9] = a3;
  aBlock[4] = partial apply for closure #1 in CollaborationImageFetcher.startTrackingCollaborations(with:completion:);
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed @Sendable () -> ();
  aBlock[3] = &block_descriptor_6_11;
  v16 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  static DispatchQoS.unspecified.getter();
  v17[2] = MEMORY[0x1E0DEE9D8];
  lazy protocol witness table accessor for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]();
  OUTLINED_FUNCTION_7_116();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  MEMORY[0x1C3B7361C](0, v14, v4, v16);
  _Block_release(v16);
  OUTLINED_FUNCTION_4_30(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  OUTLINED_FUNCTION_40_0(*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8));
  swift_release();
  OUTLINED_FUNCTION_52_1();
}

uint64_t closure #1 in CollaborationImageFetcher.startTrackingCollaborations(with:completion:)(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  void (*v29)(uint64_t, uint64_t, uint64_t (*)(void *), _QWORD *, uint64_t, uint64_t);
  _BYTE v31[24];

  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Collaboration?);
  MEMORY[0x1E0C80A78](v8);
  v10 = &v31[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v11);
  v13 = &v31[-v12];
  v14 = a1[3];
  v15 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v14);
  Conversation.currentCollaboration.getter(v14, v15, (uint64_t)v13);
  outlined init with copy of Collaboration?((uint64_t)v13, (uint64_t)v10);
  v16 = type metadata accessor for Collaboration(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v16) == 1)
  {
    v17 = outlined destroy of Collaboration?((uint64_t)v10);
LABEL_6:
    (*(void (**)(uint64_t))(*a2 + 152))(v17);
    return outlined destroy of Collaboration?((uint64_t)v13);
  }
  v19 = *((_QWORD *)v10 + 11);
  v18 = *((_QWORD *)v10 + 12);
  swift_bridgeObjectRetain();
  v17 = outlined destroy of Collaboration((uint64_t)v10);
  if (!v18)
    goto LABEL_6;
  swift_beginAccess();
  v20 = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  specialized Dictionary.subscript.getter(v19, v18, v20);
  v22 = v21;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  outlined consume of UIView??(v22);
  if (v22 == (void *)1)
  {
    (*(void (**)(void))(*a2 + 152))();
    swift_beginAccess();
    swift_bridgeObjectRetain();
    specialized Dictionary._Variant.removeValue(forKey:)();
    v24 = v23;
    swift_endAccess();
    swift_bridgeObjectRelease();
    outlined consume of UIView??(v24);
    v25 = a2[5];
    v26 = a2[6];
    __swift_project_boxed_opaque_existential_1(a2 + 2, v25);
    v27 = swift_allocObject();
    swift_weakInit();
    v28 = (_QWORD *)swift_allocObject();
    v28[2] = v27;
    v28[3] = v19;
    v28[4] = v18;
    v28[5] = a3;
    v28[6] = a4;
    v29 = *(void (**)(uint64_t, uint64_t, uint64_t (*)(void *), _QWORD *, uint64_t, uint64_t))(v26 + 8);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    v29(v19, v18, partial apply for closure #1 in closure #1 in CollaborationImageFetcher.startTrackingCollaborations(with:completion:), v28, v25, v26);
    swift_bridgeObjectRelease();
    swift_release();
    outlined destroy of Collaboration?((uint64_t)v13);
    return swift_release();
  }
  else
  {
    outlined destroy of Collaboration?((uint64_t)v13);
    return swift_bridgeObjectRelease();
  }
}

uint64_t closure #1 in closure #1 in CollaborationImageFetcher.startTrackingCollaborations(with:completion:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t result;
  id v19;
  id v20;
  _QWORD *v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD aBlock[6];

  v25 = a5;
  v11 = type metadata accessor for DispatchWorkItemFlags();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for DispatchQoS();
  v26 = *(_QWORD *)(v15 - 8);
  v27 = v15;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v19 = *(id *)(result + 56);
    v24 = v12;
    v20 = v19;
    swift_release();
    v21 = (_QWORD *)swift_allocObject();
    v21[2] = a2;
    v21[3] = a3;
    v21[4] = a4;
    v21[5] = a1;
    v21[6] = v25;
    v21[7] = a6;
    aBlock[4] = partial apply for closure #1 in closure #1 in closure #1 in CollaborationImageFetcher.startTrackingCollaborations(with:completion:);
    aBlock[5] = v21;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = thunk for @escaping @callee_guaranteed @Sendable () -> ();
    aBlock[3] = &block_descriptor_21_6;
    v22 = _Block_copy(aBlock);
    v23 = a1;
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    static DispatchQoS.unspecified.getter();
    v28 = MEMORY[0x1E0DEE9D8];
    lazy protocol witness table accessor for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
    lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    MEMORY[0x1C3B7361C](0, v17, v14, v22);
    _Block_release(v22);

    (*(void (**)(char *, uint64_t))(v24 + 8))(v14, v11);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v17, v27);
    return swift_release();
  }
  return result;
}

uint64_t closure #1 in closure #1 in closure #1 in CollaborationImageFetcher.startTrackingCollaborations(with:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t (*a5)(uint64_t))
{
  uint64_t result;
  id v10;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    swift_beginAccess();
    v10 = a4;
    swift_bridgeObjectRetain();
    specialized Dictionary._Variant.setValue(_:forKey:)((uint64_t)a4, a2, a3);
    swift_endAccess();
    swift_release();
    result = swift_bridgeObjectRelease();
  }
  if (a4)
    return a5(result);
  return result;
}

Swift::Void __swiftcall CollaborationImageFetcher.stopTrackingAll()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v3 = type metadata accessor for DispatchWorkItemFlags();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_20_3();
  OUTLINED_FUNCTION_168();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_3_118();
  v6 = OUTLINED_FUNCTION_15_1((uint64_t)thunk for @escaping @callee_guaranteed @Sendable () -> ());
  swift_retain();
  static DispatchQoS.unspecified.getter();
  lazy protocol witness table accessor for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]();
  OUTLINED_FUNCTION_7_116();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  MEMORY[0x1C3B7361C](0, v1, v0, v6);
  _Block_release(v6);
  OUTLINED_FUNCTION_4_30(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  OUTLINED_FUNCTION_40_0(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  swift_release();
  OUTLINED_FUNCTION_52_1();
}

uint64_t closure #1 in CollaborationImageFetcher.stopTrackingAll()()
{
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String : UIImage?]._Variant);
  Dictionary._Variant.removeAll(keepingCapacity:)(0);
  return swift_endAccess();
}

uint64_t CollaborationImageFetcher.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t CollaborationImageFetcher.__deallocating_deinit()
{
  CollaborationImageFetcher.deinit();
  return swift_deallocClassInstance();
}

uint64_t specialized CollaborationImageFetcher.__allocating_init(provider:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v7 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CollaborationImageFetcher();
  v10 = swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, a3);
  v11 = specialized CollaborationImageFetcher.init(provider:)((uint64_t)v9, v10, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, a3);
  return v11;
}

uint64_t specialized CollaborationImageFetcher.init(provider:)(uint64_t a1, uint64_t a2)
{
  __int128 v5;
  uint64_t v6;
  _UNKNOWN **v7;

  v6 = type metadata accessor for IMCoreCollaborationImageProvider();
  v7 = &protocol witness table for IMCoreCollaborationImageProvider;
  *(_QWORD *)&v5 = a1;
  type metadata accessor for OS_dispatch_queue();
  *(_QWORD *)(a2 + 56) = static OS_dispatch_queue.main.getter();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UIImage?);
  *(_QWORD *)(a2 + 64) = Dictionary.init(dictionaryLiteral:)();
  outlined init with take of Notice(&v5, a2 + 16);
  return a2;
}

uint64_t specialized CollaborationImageFetcher.init(provider:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *boxed_opaque_existential_1;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;

  v10 = a3;
  v11 = a4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v9);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(boxed_opaque_existential_1, a1, a3);
  type metadata accessor for OS_dispatch_queue();
  *(_QWORD *)(a2 + 56) = static OS_dispatch_queue.main.getter();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UIImage?);
  *(_QWORD *)(a2 + 64) = Dictionary.init(dictionaryLiteral:)();
  outlined init with take of Notice(&v9, a2 + 16);
  return a2;
}

uint64_t sub_1BD481828()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in CollaborationImageFetcher.startTrackingCollaborations(with:completion:)()
{
  uint64_t v0;

  return closure #1 in CollaborationImageFetcher.startTrackingCollaborations(with:completion:)((_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72));
}

uint64_t partial apply for closure #1 in CollaborationImageFetcher.stopTrackingAll()()
{
  return closure #1 in CollaborationImageFetcher.stopTrackingAll()();
}

uint64_t dispatch thunk of CollaborationImageProvider.fetchCollaborationImage(for:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

uint64_t type metadata accessor for IMCoreCollaborationImageProvider()
{
  return objc_opt_self();
}

uint64_t method lookup function for IMCoreCollaborationImageProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of IMCoreCollaborationImageProvider.fetchCollaborationImage(for:completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 80))();
}

uint64_t dispatch thunk of IMCoreCollaborationImageProvider.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t type metadata accessor for CollaborationImageFetcher()
{
  return objc_opt_self();
}

uint64_t method lookup function for CollaborationImageFetcher()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CollaborationImageFetcher.__allocating_init(provider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of CollaborationImageFetcher.image(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of CollaborationImageFetcher.startTrackingCollaborations(with:completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of CollaborationImageFetcher.stopTrackingAll()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t outlined init with copy of Collaboration?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Collaboration?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of Collaboration?(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Collaboration?);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BD48199C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BD4819C0()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in CollaborationImageFetcher.startTrackingCollaborations(with:completion:)(void *a1)
{
  uint64_t *v1;

  return closure #1 in closure #1 in CollaborationImageFetcher.startTrackingCollaborations(with:completion:)(a1, v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_1BD481A04()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in closure #1 in CollaborationImageFetcher.startTrackingCollaborations(with:completion:)()
{
  uint64_t v0;

  return closure #1 in closure #1 in closure #1 in CollaborationImageFetcher.startTrackingCollaborations(with:completion:)(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(void **)(v0 + 40), *(uint64_t (**)(uint64_t))(v0 + 48));
}

void specialized Sequence.forEach(_:)(uint64_t a1, const char *a2, SEL *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  id v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v28;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  void *v36;

  v4 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    OUTLINED_FUNCTION_10_108();
    lazy protocol witness table accessor for type TUHandle and conformance NSObject();
    OUTLINED_FUNCTION_16_88();
    v4 = v31;
    v26 = v32;
    v5 = v33;
    v6 = v34;
    v7 = v35;
  }
  else
  {
    v26 = a1 + 56;
    OUTLINED_FUNCTION_291_0();
    v7 = v8 & v9;
    swift_bridgeObjectRetain();
    v5 = v3;
    v6 = 0;
  }
  v25 = (unint64_t)(v5 + 64) >> 6;
  if (v4 < 0)
    goto LABEL_7;
  while (1)
  {
    if (v7)
    {
      v10 = (v7 - 1) & v7;
      v11 = __clz(__rbit64(v7)) | (v6 << 6);
      v12 = v6;
      goto LABEL_26;
    }
    v14 = v6 + 1;
    if (__OFADD__(v6, 1))
      break;
    if (v14 >= v25)
      goto LABEL_33;
    v15 = *(_QWORD *)(v26 + 8 * v14);
    v12 = v6 + 1;
    if (!v15)
    {
      v12 = v6 + 2;
      if (v6 + 2 >= v25)
        goto LABEL_33;
      v15 = *(_QWORD *)(v26 + 8 * v12);
      if (!v15)
      {
        v12 = v6 + 3;
        if (v6 + 3 >= v25)
          goto LABEL_33;
        v15 = *(_QWORD *)(v26 + 8 * v12);
        if (!v15)
        {
          v12 = v6 + 4;
          if (v6 + 4 >= v25)
            goto LABEL_33;
          v15 = *(_QWORD *)(v26 + 8 * v12);
          if (!v15)
          {
            v12 = v6 + 5;
            if (v6 + 5 >= v25)
              goto LABEL_33;
            v15 = *(_QWORD *)(v26 + 8 * v12);
            if (!v15)
            {
              v16 = v6 + 6;
              while (v16 < v25)
              {
                v15 = *(_QWORD *)(v26 + 8 * v16++);
                if (v15)
                {
                  v12 = v16 - 1;
                  goto LABEL_25;
                }
              }
LABEL_33:
              outlined consume of [String : Application].Iterator._Variant();
              return;
            }
          }
        }
      }
    }
LABEL_25:
    v10 = (v15 - 1) & v15;
    v11 = __clz(__rbit64(v15)) + (v12 << 6);
LABEL_26:
    v13 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v11);
    if (!v13)
      goto LABEL_33;
    while (1)
    {
      v30 = v10;
      if (one-time initialization token for logger != -1)
        swift_once();
      v17 = type metadata accessor for Logger();
      __swift_project_value_buffer(v17, (uint64_t)static ReportSpamManager.logger);
      v18 = v13;
      v19 = Logger.logObject.getter();
      v20 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v19, v20))
      {
        v28 = swift_slowAlloc();
        v36 = (void *)swift_slowAlloc();
        *(_DWORD *)v28 = 136315138;
        v21 = objc_msgSend(v18, sel_value);
        v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        v24 = v23;

        *(_QWORD *)(v28 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v22, v24, (uint64_t *)&v36);
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BD004000, v19, v20, a2, (uint8_t *)v28, 0xCu);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_60();
      }

      objc_msgSend(v18, *a3);
      v6 = v12;
      v7 = v30;
      if ((v4 & 0x8000000000000000) == 0)
        break;
LABEL_7:
      if (__CocoaSet.Iterator.next()())
      {
        OUTLINED_FUNCTION_10_108();
        swift_unknownObjectRetain();
        OUTLINED_FUNCTION_366();
        v13 = v36;
        swift_unknownObjectRelease();
        v12 = v6;
        v10 = v7;
        if (v36)
          continue;
      }
      goto LABEL_33;
    }
  }
  __break(1u);
}

void specialized Sequence.allSatisfy(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  id v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  Swift::Bool v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  void *v22;

  v2 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    OUTLINED_FUNCTION_10_108();
    lazy protocol witness table accessor for type TUHandle and conformance NSObject();
    OUTLINED_FUNCTION_16_88();
    v2 = v17;
    v16 = v18;
    v1 = v19;
    v3 = v20;
    v4 = v21;
  }
  else
  {
    v16 = a1 + 56;
    OUTLINED_FUNCTION_291_0();
    v4 = v5 & v6;
    swift_bridgeObjectRetain();
    v3 = 0;
  }
  v7 = (unint64_t)(v1 + 64) >> 6;
  while (1)
  {
    v8 = v3;
    if ((v2 & 0x8000000000000000) == 0)
      break;
    if (!__CocoaSet.Iterator.next()())
      goto LABEL_29;
    OUTLINED_FUNCTION_10_108();
    swift_unknownObjectRetain();
    OUTLINED_FUNCTION_366();
    v11 = v22;
    swift_unknownObjectRelease();
    if (!v22)
      goto LABEL_29;
LABEL_28:
    v15 = TUHandle.isBlocked()();

    if (!v15)
      goto LABEL_29;
  }
  if (v4)
  {
    v9 = __clz(__rbit64(v4));
    v4 &= v4 - 1;
    v10 = v9 | (v3 << 6);
LABEL_27:
    v11 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v10);
    if (!v11)
      goto LABEL_29;
    goto LABEL_28;
  }
  v12 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    if (v12 >= v7)
      goto LABEL_29;
    v13 = *(_QWORD *)(v16 + 8 * v12);
    ++v3;
    if (!v13)
    {
      v3 = v8 + 2;
      if (v8 + 2 >= v7)
        goto LABEL_29;
      v13 = *(_QWORD *)(v16 + 8 * v3);
      if (!v13)
      {
        v3 = v8 + 3;
        if (v8 + 3 >= v7)
          goto LABEL_29;
        v13 = *(_QWORD *)(v16 + 8 * v3);
        if (!v13)
        {
          v3 = v8 + 4;
          if (v8 + 4 >= v7)
            goto LABEL_29;
          v13 = *(_QWORD *)(v16 + 8 * v3);
          if (!v13)
          {
            v3 = v8 + 5;
            if (v8 + 5 >= v7)
              goto LABEL_29;
            v13 = *(_QWORD *)(v16 + 8 * v3);
            if (!v13)
            {
              v14 = v8 + 6;
              while (v14 < v7)
              {
                v13 = *(_QWORD *)(v16 + 8 * v14++);
                if (v13)
                {
                  v3 = v14 - 1;
                  goto LABEL_26;
                }
              }
LABEL_29:
              outlined consume of [String : Application].Iterator._Variant();
              return;
            }
          }
        }
      }
    }
LABEL_26:
    v4 = (v13 - 1) & v13;
    v10 = __clz(__rbit64(v13)) + (v3 << 6);
    goto LABEL_27;
  }
  __break(1u);
}

Swift::Bool __swiftcall TUCall.isBlocked()()
{
  void *v0;
  id v1;
  unint64_t v2;
  Swift::Bool result;

  v1 = objc_msgSend(v0, sel_remoteParticipantHandles);
  v2 = OUTLINED_FUNCTION_2_120();
  lazy protocol witness table accessor for type TUHandle and conformance NSObject();
  OUTLINED_FUNCTION_7_117();
  OUTLINED_FUNCTION_49_5();
  specialized Sequence.allSatisfy(_:)(v2);
  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_45_0();
  return result;
}

Swift::Void __swiftcall TUCall.unblock()()
{
  TUCall.unblock()("TUCall: unblock handle %s", (SEL *)&selRef_unblock);
}

void RecentsCallItem.isGroupFaceTimeWithAllUnknownContacts.getter()
{
  uint64_t v0;

  RecentsCallItem.tuHandles.getter();
  specialized Sequence.compactMap<A>(_:)(v0);
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_2_1();
  RecentsCallItem.isGroupFaceTimeCall.getter();
  OUTLINED_FUNCTION_45_0();
}

uint64_t RecentsCallItem.isOneToOneFaceTime.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  char v6;

  OUTLINED_FUNCTION_52_6();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_30_6();
  RecentsCallItem.isTelephony.getter();
  v4 = v3;
  outlined init with copy of RecentsCallItem(v1, v0);
  if ((v4 & 1) != 0)
  {
    v5 = 0;
  }
  else
  {
    RecentsCallItem.isOneToOne.getter();
    v5 = v6;
  }
  outlined destroy of RecentsCallItem(v0);
  return v5 & 1;
}

uint64_t outlined init with copy of RecentsCallItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RecentsCallItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t SpamModelable.messageKey.getter()
{
  SpamModelable.messageKey.getter();
  return 0xD000000000000010;
}

{
  return 0xD000000000000010;
}

unint64_t specialized SpamModelable.messageKey.getter()
{
  return 0xD000000000000010;
}

BOOL TUCall.isGroupFaceTimeWithAllUnknownContacts.getter(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;

  v3 = OUTLINED_FUNCTION_25_1(a1, sel_remoteParticipantHandles);
  OUTLINED_FUNCTION_2_120();
  lazy protocol witness table accessor for type TUHandle and conformance NSObject();
  v4 = OUTLINED_FUNCTION_23_76();

  specialized Sequence.compactMap<A>(_:)(v4);
  v6 = v5;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(v6 + 16);
  v8 = OUTLINED_FUNCTION_13_3();
  v9 = OUTLINED_FUNCTION_25_1(v8, sel_remoteParticipantHandles);
  OUTLINED_FUNCTION_23_76();
  OUTLINED_FUNCTION_49_5();
  v10 = specialized Set.count.getter(v2);
  OUTLINED_FUNCTION_27();
  return v10 > 1 && v7 == 0;
}

void TUCall.spamModel(with:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  void *v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v5 = v3;
  v7 = type metadata accessor for Date();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_11_2();
  v39 = TUCall.formattedTUCallHandle.getter();
  TUCall.faceTimeSpamCallType.getter(v39);
  v37 = v10;
  v38 = v9;
  objc_msgSend(v3, sel_callDuration);
  v12 = v11;
  v13 = TUCall.initiatorHandle.getter();
  if (!v13)
  {
    v14 = objc_msgSend(v3, sel_remoteParticipantHandles);
    OUTLINED_FUNCTION_17_77();
    OUTLINED_FUNCTION_21_83();
    OUTLINED_FUNCTION_8_107();

    specialized Collection.first.getter();
    v13 = v15;
    OUTLINED_FUNCTION_2_1();
  }
  v16 = objc_msgSend(v3, sel_callUUID);
  v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v19 = v18;

  objc_msgSend(v5, sel_callDuration);
  Date.init(timeIntervalSinceNow:)();
  Date.timeIntervalSince1970.getter();
  v21 = v20;
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v4, v7);
  v22 = TUCall.pendingOrHandledNickname.getter();
  if (v22)
  {
    v23 = v22;
    v24 = objc_msgSend(v22, sel_firstName);

    v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v27 = v26;

  }
  else
  {
    v25 = 0;
    v27 = 0;
  }
  v28 = TUCall.pendingOrHandledNickname.getter();
  v29 = v28;
  if (v28)
  {
    v30 = OUTLINED_FUNCTION_25_1((uint64_t)v28, sel_lastName);

    v29 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
    v32 = v31;

  }
  else
  {
    v32 = 0;
  }
  v36.n128_u64[0] = v25;
  v36.n128_u64[1] = v27;
  *((_QWORD *)&v33 + 1) = v17;
  *(_QWORD *)&v33 = v13;
  *(_QWORD *)&v35 = 0xD000000000000011;
  *((_QWORD *)&v35 + 1) = 0x80000001BD67DD70;
  *(_QWORD *)&v34 = 0xD000000000000010;
  *((_QWORD *)&v34 + 1) = 0x80000001BD68D830;
  ReportSpamManager.SpamDataModel.init(invitedMembers:callType:callLength:hasLink:recipientHandleValue:senderHandle:messageId:spamTime:messageKey:callStatus:linkName:snapFirstName:snapLastName:)(v39, v38, v37, v12, 0, 0, a1, a2, a3, v33, v19, v21, 0, v34, v35, 0, v36, (uint64_t)v29, v32);
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_7_7();
}

uint64_t TUCall.formattedTUCallHandle.getter()
{
  void *v0;
  id v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = objc_msgSend(v0, sel_remoteParticipantHandles);
  v2 = OUTLINED_FUNCTION_2_120();
  lazy protocol witness table accessor for type TUHandle and conformance NSObject();
  OUTLINED_FUNCTION_7_117();
  OUTLINED_FUNCTION_49_5();
  specialized Sequence.compactMap<A>(_:)(v2);
  v4 = v3;
  OUTLINED_FUNCTION_27();
  return v4;
}

void TUCall.faceTimeSpamCallType.getter(uint64_t a1)
{
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  id v5;

  v2 = OUTLINED_FUNCTION_25_1(a1, sel_remoteParticipantHandles);
  OUTLINED_FUNCTION_2_120();
  OUTLINED_FUNCTION_21_83();
  v3 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  specialized Set.count.getter(v3);
  v4 = OUTLINED_FUNCTION_2_1();
  v5 = OUTLINED_FUNCTION_25_1(v4, sel_provider);
  objc_msgSend(v5, sel_isFaceTimeProvider);

  OUTLINED_FUNCTION_18();
}

id TUCall.initiatorHandle.getter()
{
  uint64_t v0;
  id v1;
  id v2;
  id v3;

  v1 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v2 = objc_msgSend(v1, sel_activeConversationForCall_, v0);

  if (!v2)
    return 0;
  v3 = objc_msgSend(v2, sel_initiator);

  return v3;
}

void *TUCall.pendingOrHandledNickname.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;

  if (one-time initialization token for shared != -1)
    swift_once();
  TUCall.formattedInitiatorHandle.getter();
  v2 = (void *)NameAndPhotoUtilities.pendingOrCurrentIMNickname(from:)(v0, v1);
  swift_bridgeObjectRelease();
  if (one-time initialization token for logger != -1)
    swift_once();
  v3 = type metadata accessor for Logger();
  __swift_project_value_buffer(v3, (uint64_t)static ReportSpamManager.logger);
  v4 = v2;
  v5 = Logger.logObject.getter();
  v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v12 = v8;
    *(_DWORD *)v7 = 136315138;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IMNickname?);
    v9 = Optional.debugDescription.getter();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v9, v10, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v5, v6, "reporting nickname: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v8, -1, -1);
    MEMORY[0x1C3B751B8](v7, -1, -1);

  }
  else
  {

  }
  return v2;
}

void TUCall.formattedInitiatorHandle.getter()
{
  id v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  id v6;

  v0 = TUCall.initiatorHandle.getter();
  if (!v0 || (v1 = v0, TUHandle.formattedPhoneNumber.getter((uint64_t)v0), v3 = v2, v1, !v3))
  {
    v4 = TUCall.initiatorHandle.getter();
    v5 = v4;
    if (v4)
    {
      v6 = objc_msgSend(v4, sel_value);

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      swift_bridgeObjectRelease();

    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  OUTLINED_FUNCTION_18();
}

Swift::Void __swiftcall TUCall.block()()
{
  TUCall.unblock()("TUCall: block handle %s", (SEL *)&selRef_block);
}

uint64_t TUCall.unblock()(const char *a1, SEL *a2)
{
  void *v2;
  id v5;
  uint64_t v6;

  v5 = objc_msgSend(v2, sel_remoteParticipantHandles);
  OUTLINED_FUNCTION_17_77();
  OUTLINED_FUNCTION_21_83();
  v6 = OUTLINED_FUNCTION_8_107();

  specialized Sequence.forEach(_:)(v6, a1, a2);
  return swift_bridgeObjectRelease();
}

BOOL protocol witness for SpamModelable.isGroupFaceTimeWithAllUnknownContacts.getter in conformance TUCall(uint64_t a1)
{
  return TUCall.isGroupFaceTimeWithAllUnknownContacts.getter(a1);
}

void protocol witness for SpamModelable.formattedInitiatorHandle.getter in conformance TUCall()
{
  TUCall.formattedInitiatorHandle.getter();
}

void protocol witness for SpamModelable.spamModel(with:) in conformance TUCall(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  TUCall.spamModel(with:)(a1, a2, a3);
}

void protocol witness for SpamModelable.block() in conformance TUCall()
{
  TUCall.block()();
}

void protocol witness for SpamModelable.unblock() in conformance TUCall()
{
  TUCall.unblock()();
}

BOOL protocol witness for SpamModelable.isBlocked() in conformance TUCall()
{
  return TUCall.isBlocked()();
}

void RecentsCallItem.spamModel(with:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int EnumTagSinglePayload;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  id v47;
  unint64_t v48;
  void *v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __n128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void *v79;

  v5 = v3;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_11_2();
  RecentsCallItem.tuHandles.getter();
  specialized Sequence.compactMap<A>(_:)(v9);
  v11 = v10;
  OUTLINED_FUNCTION_13_3();
  RecentsCallItem.faceTimeSpamCallType.getter();
  v75 = v13;
  v76 = v12;
  RecentsCallItem.duration.getter();
  v74 = v14;
  v73 = v15;
  RecentsCallItem.conversationLink.getter(v14, v15, v16, v17, v18, v19, v20, v21, v63, v65);
  v22 = v79;
  if (v79)
    outlined consume of ConversationLink?(v79);
  RecentsCallItem.tuHandles.getter();
  specialized Collection.first.getter();
  v72 = v23;
  OUTLINED_FUNCTION_13_3();
  RecentsCallItem.callUniqueId.getter();
  v25 = v24;
  v70 = v26;
  v27 = OUTLINED_FUNCTION_52_6();
  outlined init with copy of Date?((uint64_t)v5 + *(int *)(v27 + 36), v4);
  v28 = type metadata accessor for Date();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v4, 1, v28);
  v71 = v25;
  if (EnumTagSinglePayload == 1)
  {
    outlined destroy of Date?(v4);
    v30 = 0;
  }
  else
  {
    Date.timeIntervalSince1970.getter();
    v32 = v31;
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v4, v28);
    v30 = v32;
  }
  RecentsCallItem.callStatus.getter();
  v77 = v11;
  if ((v33 & 0x100000000) != 0)
  {
    v41 = 0;
    v42 = 0;
  }
  else
  {
    v33 = UInt32.stringValue.getter(v33);
    v41 = v33;
    v42 = v34;
  }
  v43 = RecentsCallItem.linkName.getter(v33, v34, v35, v36, v37, v38, v39, v40, v64, v66);
  v68 = v44;
  v69 = v43;
  v45 = RecentsCallItem.pendingOrHandledNickname.getter();
  v46 = (uint64_t)v45;
  if (v45)
  {
    v47 = objc_msgSend(v45, sel_firstName);
    OUTLINED_FUNCTION_49_5();
    v46 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v67 = v48;

  }
  else
  {
    v67 = 0;
  }
  v49 = RecentsCallItem.pendingOrHandledNickname.getter();
  v50 = v49;
  if (v49)
  {
    v51 = v41;
    v52 = v30;
    v53 = a1;
    v54 = a2;
    v55 = OUTLINED_FUNCTION_25_1((uint64_t)v49, sel_lastName);

    v50 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
    v57 = v56;

    a2 = v54;
    a1 = v53;
    v30 = v52;
    v41 = v51;
    v22 = v79;
  }
  else
  {
    v57 = 0;
  }
  v62.n128_u64[0] = v46;
  v62.n128_u64[1] = v67;
  *((_QWORD *)&v61 + 1) = v68;
  *((_QWORD *)&v60 + 1) = v42;
  *(_QWORD *)&v61 = v69;
  *(_QWORD *)&v60 = v41;
  *((_QWORD *)&v58 + 1) = v71;
  *(_QWORD *)&v58 = v72;
  *(_QWORD *)&v59 = 0xD000000000000010;
  *((_QWORD *)&v59 + 1) = 0x80000001BD68D830;
  ReportSpamManager.SpamDataModel.init(invitedMembers:callType:callLength:hasLink:recipientHandleValue:senderHandle:messageId:spamTime:messageKey:callStatus:linkName:snapFirstName:snapLastName:)(v77, v76, v75, v74, v73 & 1, v22 != 0, a1, a2, a3, v58, v70, v30, EnumTagSinglePayload == 1, v59, v60, v61, v62, (uint64_t)v50, v57);
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_7_7();
}

void *RecentsCallItem.pendingOrHandledNickname.getter()
{
  void *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;

  if (one-time initialization token for shared != -1)
    swift_once();
  v0 = RecentsCallItem.formattedInitiatorHandle.getter();
  v2 = (void *)NameAndPhotoUtilities.pendingOrCurrentIMNickname(from:)((uint64_t)v0, v1);
  swift_bridgeObjectRelease();
  if (one-time initialization token for logger != -1)
    swift_once();
  v3 = type metadata accessor for Logger();
  __swift_project_value_buffer(v3, (uint64_t)static ReportSpamManager.logger);
  v4 = v2;
  v5 = Logger.logObject.getter();
  v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v12 = v8;
    *(_DWORD *)v7 = 136315138;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IMNickname?);
    v9 = Optional.debugDescription.getter();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v9, v10, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v5, v6, "reporting nickname: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v8, -1, -1);
    MEMORY[0x1C3B751B8](v7, -1, -1);

  }
  else
  {

  }
  return v2;
}

void *RecentsCallItem.formattedInitiatorHandle.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;

  v2 = v1;
  OUTLINED_FUNCTION_52_6();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_30_6();
  RecentsCallItem.tuHandles.getter();
  specialized Collection.first.getter();
  v5 = v4;
  v6 = OUTLINED_FUNCTION_27();
  if (v5)
  {
    v7 = TUHandle.formattedPhoneNumber.getter(v6);
    v9 = v8;

  }
  else
  {
    v7 = 0;
    v9 = 0;
  }
  outlined init with copy of RecentsCallItem(v2, v0);
  if (!v9)
  {
    RecentsCallItem.tuHandles.getter();
    specialized Collection.first.getter();
    v7 = v10;
    v11 = OUTLINED_FUNCTION_2_1();
    if (v7)
    {
      v12 = OUTLINED_FUNCTION_25_1(v11, sel_value);

      v7 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
    }
  }
  outlined destroy of RecentsCallItem(v0);
  return v7;
}

Swift::Void __swiftcall RecentsCallItem.block()()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  NSObject *oslog;

  RecentsCallItem.tuHandles.getter();
  v1 = specialized Set.isEmpty.getter(v0);
  OUTLINED_FUNCTION_13_3();
  if ((v1 & 1) != 0)
  {
    if (one-time initialization token for logger != -1)
      swift_once();
    v2 = type metadata accessor for Logger();
    __swift_project_value_buffer(v2, (uint64_t)static ReportSpamManager.logger);
    oslog = Logger.logObject.getter();
    v3 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v3))
    {
      v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v4 = 0;
      _os_log_impl(&dword_1BD004000, oslog, v3, "RecentsCallItem: unable to block handles due to no valid handle", v4, 2u);
      MEMORY[0x1C3B751B8](v4, -1, -1);
    }

  }
  else
  {
    RecentsCallItem.tuHandles.getter();
    specialized Sequence.forEach(_:)(v5, "[RecentsCallItem] TUCall: block handle %s", (SEL *)&selRef_block);
    OUTLINED_FUNCTION_1_54();
  }
}

Swift::Void __swiftcall RecentsCallItem.unblock()()
{
  uint64_t v0;

  RecentsCallItem.tuHandles.getter();
  specialized Sequence.forEach(_:)(v0, "[RecentsCallItem] TUCall: unblock handle %s", (SEL *)&selRef_unblock);
  OUTLINED_FUNCTION_1_54();
}

Swift::Bool __swiftcall RecentsCallItem.isBlocked()()
{
  uint64_t v0;
  Swift::Bool result;

  RecentsCallItem.tuHandles.getter();
  specialized Sequence.allSatisfy(_:)(v0);
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_45_0();
  return result;
}

uint64_t dispatch thunk of SpamModelable.isGroupFaceTimeWithAllUnknownContacts.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of SpamModelable.messageKey.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of SpamModelable.formattedInitiatorHandle.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of SpamModelable.spamModel(with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of SpamModelable.block()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of SpamModelable.unblock()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of SpamModelable.isBlocked()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t NSDiffableDataSourceSnapshot.appendItemsRemovingDupes(_:toSection:onDupe:)()
{
  uint64_t v0;

  Set.init()();
  v0 = type metadata accessor for Array();
  swift_bridgeObjectRetain();
  MEMORY[0x1C3B750C8](MEMORY[0x1E0DEAF60], v0);
  _ArrayProtocol.filter(_:)();
  NSDiffableDataSourceSnapshot.appendItems(_:toSection:)();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

BOOL closure #1 in NSDiffableDataSourceSnapshot.appendItemsRemovingDupes(_:toSection:onDupe:)(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char v14;
  uint64_t v16;
  void (*v17)(uint64_t);

  v16 = a4;
  v17 = a3;
  v8 = *(_QWORD *)(a6 - 8);
  MEMORY[0x1E0C80A78](a1);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v16 - v12;
  swift_bridgeObjectRetain();
  v14 = Set.contains(_:)();
  swift_bridgeObjectRelease();
  if ((v14 & 1) != 0)
  {
    if (v17)
      v17(a1);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, a6);
    type metadata accessor for Set();
    Set.insert(_:)();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, a6);
  }
  return (v14 & 1) == 0;
}

BOOL partial apply for closure #1 in NSDiffableDataSourceSnapshot.appendItemsRemovingDupes(_:toSection:onDupe:)(uint64_t a1)
{
  uint64_t v1;

  return closure #1 in NSDiffableDataSourceSnapshot.appendItemsRemovingDupes(_:toSection:onDupe:)(a1, *(_QWORD *)(v1 + 48), *(void (**)(uint64_t))(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

BOOL SGURL.isValidConversationLink.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  unint64_t v3;
  id v4;
  NSURL *v5;
  void *v6;
  void *v7;
  uint64_t v9;

  type metadata accessor for URL();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for TUConversationLink();
  v4 = OUTLINED_FUNCTION_25_1(v3, sel_url);
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  @nonobjc TUConversationLink.init(url:)((uint64_t)v2, v5);
  v7 = v6;
  if (v6)

  return v7 != 0;
}

unint64_t type metadata accessor for TUConversationLink()
{
  unint64_t result;

  result = lazy cache variable for type metadata for TUConversationLink;
  if (!lazy cache variable for type metadata for TUConversationLink)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for TUConversationLink);
  }
  return result;
}

void SGURL.recentsDate.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t EnumTagSinglePayload;
  id v11;

  v4 = OUTLINED_FUNCTION_33();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78]();
  OUTLINED_FUNCTION_11_2();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78]();
  OUTLINED_FUNCTION_4_1();
  v7 = OUTLINED_FUNCTION_25_1(v6, sel_documentDate);
  if (!v7)
  {
    EnumTagSinglePayload = OUTLINED_FUNCTION_83_0(v1, 1);
    goto LABEL_5;
  }
  v8 = v7;
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32);
  v9(v1, v2, v4);
  OUTLINED_FUNCTION_83_0(v1, 0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v1, 1, v4);
  if ((_DWORD)EnumTagSinglePayload == 1)
  {
LABEL_5:
    v11 = OUTLINED_FUNCTION_25_1(EnumTagSinglePayload, sel_receivedAt);
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    OUTLINED_FUNCTION_14_97();
    goto LABEL_6;
  }
  v9(a1, v1, v4);
LABEL_6:
  OUTLINED_FUNCTION_65_1();
}

void SGURL.endDate.getter(uint64_t a1@<X8>)
{
  void *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_11_2();
  v5 = OUTLINED_FUNCTION_33();
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v6);
  v11 = (char *)&v17 - v10;
  v12 = OUTLINED_FUNCTION_25_1(v9, sel_documentDate);
  if (!v12)
  {
    OUTLINED_FUNCTION_19_3(v2, 1);
    goto LABEL_7;
  }
  v13 = v12;
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  OUTLINED_FUNCTION_49_14(v2, (uint64_t)v8);
  OUTLINED_FUNCTION_19_3(v2, 0);
  if (__swift_getEnumTagSinglePayload(v2, 1, v5) == 1)
  {
LABEL_7:
    outlined destroy of Date?(v2);
    goto LABEL_8;
  }
  v14 = OUTLINED_FUNCTION_49_14((uint64_t)v11, v2);
  v15 = (uint64_t)OUTLINED_FUNCTION_25_1(v14, sel_flags);
  if ((v15 & 0x40) != 0)
  {
    OUTLINED_FUNCTION_49_14(a1, (uint64_t)v11);
LABEL_11:
    v16 = 0;
    goto LABEL_12;
  }
  if ((OUTLINED_FUNCTION_25_1(v15, sel_flags) & 0x20) != 0)
  {
    objc_msgSend(v1, sel_documentTimeInterval);
    Date.addingTimeInterval(_:)();
    OUTLINED_FUNCTION_47();
    goto LABEL_11;
  }
  OUTLINED_FUNCTION_47();
LABEL_8:
  v16 = 1;
LABEL_12:
  OUTLINED_FUNCTION_19_3(a1, v16);
  OUTLINED_FUNCTION_65_1();
}

uint64_t SGURL.receivedFromDisplayName(using:)()
{
  void *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v1 = outlined bridged method (pb) of @objc SGURL.receivedFromHandle.getter(v0);
  if (!v2)
    return 0;
  v3 = v1;
  v4 = v2;
  v5 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0)
    v5 = v1 & 0xFFFFFFFFFFFFLL;
  if (!v5)
  {
    OUTLINED_FUNCTION_27();
    return 0;
  }
  v6 = (void *)objc_opt_self();
  v7 = (void *)MEMORY[0x1C3B72E00](v3, v4);
  OUTLINED_FUNCTION_27();
  v8 = objc_msgSend(v6, sel_normalizedHandleWithDestinationID_, v7);

  if (!v8)
    return 0;
  swift_retain();
  ParticipantContactDetailsCache.contactDetails(for:nickname:)((uint64_t)v8, 0, 0, v9, v10, v11, v12, v13, v17, v18, v20, v22, v23, v24, v25, v26, v27, v28, v29,
    v30);
  v14 = v21;
  v15 = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  static ParticipantContactDetails.initialsFor(_:)(v19);
  lazy protocol witness table accessor for type String and conformance String();
  StringProtocol.localizedUppercase.getter();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_27();
  swift_bridgeObjectRelease();

  return v14;
}

uint64_t SGURL.applicationLocalizedName.getter()
{
  id v0;
  void *v1;
  id v2;
  uint64_t countAndFlagsBits;
  Swift::String v4;
  Swift::String_optional v5;
  Swift::String v6;
  Swift::String v8;

  v0 = SGURL.applicationRecord.getter();
  if (v0)
  {
    v1 = v0;
    v2 = objc_msgSend(v0, sel_localizedName);
    countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)();

  }
  else
  {
    v2 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
    v8._object = (void *)0xE000000000000000;
    v4._countAndFlagsBits = 0x6E776F6E6B6E55;
    v4._object = (void *)0xE700000000000000;
    v5.value._countAndFlagsBits = 0x61737265766E6F43;
    v5.value._object = (void *)0xEF74694B6E6F6974;
    v6._countAndFlagsBits = 0;
    v6._object = (void *)0xE000000000000000;
    v8._countAndFlagsBits = 0;
    countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v4, v5, (NSBundle)v2, v6, v8)._countAndFlagsBits;
  }

  return countAndFlagsBits;
}

uint64_t SGURL.hasEventDate.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v1 = OUTLINED_FUNCTION_33();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_4_1();
  v7 = OUTLINED_FUNCTION_25_1(v6, sel_documentDate);
  if (!v7)
  {
    OUTLINED_FUNCTION_72(v0, 1);
    goto LABEL_7;
  }
  v8 = v7;
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v0, v4, v1);
  OUTLINED_FUNCTION_72(v0, 0);
  if (__swift_getEnumTagSinglePayload(v0, 1, v1) == 1)
  {
LABEL_7:
    OUTLINED_FUNCTION_14_97();
    return 0;
  }
  v9 = OUTLINED_FUNCTION_14_97();
  v10 = (uint64_t)OUTLINED_FUNCTION_25_1(v9, sel_flags);
  if ((v10 & 0x20) != 0)
    return 1;
  v11 = (uint64_t)OUTLINED_FUNCTION_25_1(v10, sel_flags);
  if ((v11 & 0x80) != 0)
    return 1;
  else
    return (OUTLINED_FUNCTION_25_1(v11, sel_flags) >> 6) & 1;
}

void @nonobjc TUConversationLink.init(url:)(uint64_t a1@<X0>, NSURL *a2@<X8>)
{
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;

  URL._bridgeToObjectiveC()(a2);
  v4 = v3;
  v5 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_conversationLinkForURL_, v3);

  v6 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
  OUTLINED_FUNCTION_18();
}

void SGURL.applicationIcon.getter()
{
  id v0;
  void *v1;
  void *v2;
  id v3;
  id v4;

  v0 = SGURL.applicationRecord.getter();
  if (v0)
  {
    v1 = v0;
    v2 = (void *)objc_opt_self();
    v3 = objc_msgSend(v1, sel_compatibilityObject);
    v4 = objc_msgSend(v2, sel__iconForResourceProxy_format_, v3, 5);

  }
  OUTLINED_FUNCTION_18();
}

id SGURL.applicationRecord.getter()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;

  v1 = objc_msgSend(v0, sel_bundleIdentifier);
  v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v4 = v3;

  v5 = objc_allocWithZone(MEMORY[0x1E0CA5870]);
  return @nonobjc LSApplicationRecord.init(bundleIdentifier:allowPlaceholder:)(v2, v4, 1);
}

uint64_t outlined bridged method (pb) of @objc SGURL.receivedFromHandle.getter(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_receivedFromHandle);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

id ConversationControlsTrailingActionsView.__allocating_init(recipe:controlsManager:menuHostViewController:context:)(uint64_t a1, void *a2, void *a3, uint64_t a4, char a5)
{
  objc_class *v5;
  id v11;

  v11 = objc_allocWithZone(v5);
  return ConversationControlsTrailingActionsView.init(recipe:controlsManager:menuHostViewController:context:)(a1, a2, a3, a4, a5);
}

void ConversationControlsTrailingActionsView.recipe.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  outlined init with copy of ConversationControlsAction(v1 + OBJC_IVAR____TtC15ConversationKit39ConversationControlsTrailingActionsView_recipe, a1, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
}

id ConversationControlsTrailingActionsView.controlsManager.getter()
{
  uint64_t v0;

  return objc_retain(*(id *)(v0
                           + OBJC_IVAR____TtC15ConversationKit39ConversationControlsTrailingActionsView_controlsManager));
}

uint64_t ConversationControlsTrailingActionsView.context.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC15ConversationKit39ConversationControlsTrailingActionsView_context);
}

id ConversationControlsTrailingActionsView.alignmentView.getter()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  id v7;
  id v9;

  ConversationControlsTrailingActionsView.actionButtonsHStack.getter();
  v1 = v0;
  v2 = objc_msgSend(v0, sel_arrangedSubviews);

  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIView);
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if ((unint64_t)v3 >> 62)
  {
    if (v3 < 0)
      v4 = v3;
    else
      v4 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    OUTLINED_FUNCTION_7_15();
    if (v4)
    {
LABEL_3:
      v5 = __OFSUB__(v4, 1);
      v6 = v4 - 1;
      if (v5)
      {
        __break(1u);
      }
      else
      {
        specialized Array._checkSubscript(_:wasNativeTypeChecked:)(v6, (v3 & 0xC000000000000001) == 0, v3);
        if ((v3 & 0xC000000000000001) == 0)
        {
          v7 = *(id *)(v3 + 8 * v6 + 32);
LABEL_6:
          OUTLINED_FUNCTION_7_15();
          return (id)v6;
        }
      }
      MEMORY[0x1C3B73D18](v6, v3);
      goto LABEL_6;
    }
  }
  else
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v4)
      goto LABEL_3;
  }
  swift_bridgeObjectRelease();
  return v9;
}

void ConversationControlsTrailingActionsView.actionButtonsHStack.getter()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  id v3;
  id v4;

  v2 = *(void **)((char *)v0
                + OBJC_IVAR____TtC15ConversationKit39ConversationControlsTrailingActionsView____lazy_storage___actionButtonsHStack);
  if (!v2)
  {
    v3 = closure #1 in ConversationControlsTrailingActionsView.actionButtonsHStack.getter(v0);
    OUTLINED_FUNCTION_17_3(v3);

    v2 = 0;
  }
  v4 = v2;
  OUTLINED_FUNCTION_18();
}

id closure #1 in ConversationControlsTrailingActionsView.actionButtonsHStack.getter(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  double v6;
  char *v7;
  uint64_t v8;
  void *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void *v21;
  void *v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  double v27;
  int EnumCaseMultiPayload;
  id v29;
  double v30;
  id v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  double v42[50];
  double v43[51];

  v40 = type metadata accessor for ConversationControlsAction();
  v2 = *(_QWORD *)(v40 - 8);
  MEMORY[0x1E0C80A78](v40);
  v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3CA8]), sel_init);
  objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v5, sel_setAxis_, 0);
  static Layout.ConversationControls.values.getter((uint64_t)v42);
  objc_msgSend(v5, sel_setSpacing_, v42[15]);
  LODWORD(v6) = 1148846080;
  v41 = v5;
  objc_msgSend(v5, sel_setContentHuggingPriority_forAxis_, 0, v6);
  v7 = (char *)a1 + OBJC_IVAR____TtC15ConversationKit39ConversationControlsTrailingActionsView_recipe;
  v8 = type metadata accessor for ConversationControlsRecipe();
  if (v7[*(int *)(v8 + 44)] == 1)
  {
    v9 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *a1) + 0xB8))();
    objc_msgSend(v41, sel_addArrangedSubview_, v9);

  }
  v10 = &v7[*(int *)(v8 + 60)];
  v11 = v10[40];
  if ((v11 & 0x80000000) == 0)
  {
    v12 = *(_QWORD *)v10;
    v13 = *(_QWORD *)(*(_QWORD *)v10 + 16);
    if (v13)
    {
      v14 = *((_QWORD *)v10 + 1);
      v15 = *((_QWORD *)v10 + 2);
      v16 = *((_QWORD *)v10 + 3);
      v17 = *((_QWORD *)v10 + 4);
      v18 = v12 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
      v19 = (char *)a1
          + OBJC_IVAR____TtC15ConversationKit39ConversationControlsTrailingActionsView_menuHostViewController;
      v39 = *(_QWORD *)((char *)a1
                      + OBJC_IVAR____TtC15ConversationKit39ConversationControlsTrailingActionsView_controlsManager);
      v36 = v14;
      v37 = v12;
      v34 = v16;
      v35 = v15;
      v33 = v17;
      v38 = v11;
      outlined copy of ConversationControlsRecipe.Actions(v12, v14, v15, v16, v17, v11);
      v20 = *(_QWORD *)(v2 + 72);
      do
      {
        v21 = (void *)MEMORY[0x1C3B752C0](v19);
        ConversationControlsAction.button(controlsManager:menuHostViewController:context:options:)();
        v23 = v22;

        v24 = v23;
        static Layout.ConversationControls.iOS.getter((uint64_t)v43);
        objc_msgSend(v24, sel__setTouchInsets_, v43[31], v43[32], v43[33], v43[34]);

        objc_msgSend(v41, sel_addArrangedSubview_, v24);
        v25 = objc_msgSend(v24, sel_widthAnchor);
        v26 = objc_msgSend(v25, sel_constraintEqualToConstant_, 0.0);

        LODWORD(v27) = 1144733696;
        objc_msgSend(v26, sel_setPriority_, v27);
        objc_msgSend(v26, sel_setActive_, 1);

        outlined init with copy of ConversationControlsAction(v18, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsAction);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload && EnumCaseMultiPayload != 9)
        {
          v31 = v24;
          outlined destroy of RemoteControlRequest((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsAction);
          LODWORD(v30) = 1144750080;
        }
        else
        {
          v29 = v24;
          LODWORD(v30) = 1146388480;
        }
        objc_msgSend(v24, sel_setContentCompressionResistancePriority_forAxis_, 0, v30);

        v18 += v20;
        --v13;
      }
      while (v13);
      outlined consume of ConversationControlsRecipe.Actions?(v37, v36, v35, v34, v33, v38);
    }
  }
  return v41;
}

uint64_t key path setter for ConversationControlsTrailingActionsView.showCallDetailsButton : ConversationControlsTrailingActionsView(id *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & **a2) + 0xC0))(*a1);
}

void ConversationControlsTrailingActionsView.showCallDetailsButton.getter()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;

  v2 = *(void **)(v0
                + OBJC_IVAR____TtC15ConversationKit39ConversationControlsTrailingActionsView____lazy_storage___showCallDetailsButton);
  if (!v2)
  {
    v3 = closure #1 in ConversationControlsTrailingActionsView.showCallDetailsButton.getter();
    OUTLINED_FUNCTION_17_3(v3);

    v2 = 0;
  }
  v4 = v2;
  OUTLINED_FUNCTION_18();
}

id closure #1 in ConversationControlsTrailingActionsView.showCallDetailsButton.getter()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(), sel_buttonWithType_, 4);
  objc_msgSend(v0, sel_setPointerInteractionEnabled_, 1);
  objc_msgSend(v0, sel_setMaximumContentSizeCategory_, *MEMORY[0x1E0DC48D0]);
  v1 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
  objc_msgSend(v0, sel_setTintColor_, v1);

  return v0;
}

void ConversationControlsTrailingActionsView.showCallDetailsButton.setter(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1
                + OBJC_IVAR____TtC15ConversationKit39ConversationControlsTrailingActionsView____lazy_storage___showCallDetailsButton);
  *(_QWORD *)(v1
            + OBJC_IVAR____TtC15ConversationKit39ConversationControlsTrailingActionsView____lazy_storage___showCallDetailsButton) = a1;

}

void (*ConversationControlsTrailingActionsView.showCallDetailsButton.modify(_QWORD *a1))(void **a1, char a2)
{
  uint64_t v1;
  uint64_t v3;

  a1[1] = v1;
  ConversationControlsTrailingActionsView.showCallDetailsButton.getter();
  *a1 = v3;
  return ConversationControlsTrailingActionsView.showCallDetailsButton.modify;
}

void ConversationControlsTrailingActionsView.showCallDetailsButton.modify(void **a1, char a2)
{
  void *v2;
  id v3;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    v3 = v2;
    ConversationControlsTrailingActionsView.showCallDetailsButton.setter((uint64_t)v3);

  }
  else
  {
    ConversationControlsTrailingActionsView.showCallDetailsButton.setter((uint64_t)v2);
  }
}

uint64_t ConversationControlsTrailingActionsView.isOnlyShowingInfoButton.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit39ConversationControlsTrailingActionsView_recipe;
  v2 = type metadata accessor for ConversationControlsRecipe();
  v3 = (uint64_t *)(v1 + *(int *)(v2 + 60));
  v4 = *((char *)v3 + 40);
  if ((v4 & 0x80000000) != 0)
  {
    v5 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v5 = *v3;
    outlined copy of ConversationControlsRecipe.Actions(*v3, v3[1], v3[2], v3[3], v3[4], v4);
  }
  v6 = *(_QWORD *)(v5 + 16);
  swift_bridgeObjectRelease();
  if (v6)
    return 0;
  else
    return *(unsigned __int8 *)(v1 + *(int *)(v2 + 44));
}

id ConversationControlsTrailingActionsView.init(recipe:controlsManager:menuHostViewController:context:)(uint64_t a1, void *a2, void *a3, uint64_t a4, char a5)
{
  _BYTE *v5;
  char *v11;
  id v12;
  id v13;
  objc_super v15;

  v11 = &v5[OBJC_IVAR____TtC15ConversationKit39ConversationControlsTrailingActionsView_menuHostViewController];
  *(_QWORD *)&v5[OBJC_IVAR____TtC15ConversationKit39ConversationControlsTrailingActionsView_menuHostViewController + 8] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v5[OBJC_IVAR____TtC15ConversationKit39ConversationControlsTrailingActionsView____lazy_storage___actionButtonsHStack] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC15ConversationKit39ConversationControlsTrailingActionsView____lazy_storage___showCallDetailsButton] = 0;
  outlined init with copy of ConversationControlsAction(a1, (uint64_t)&v5[OBJC_IVAR____TtC15ConversationKit39ConversationControlsTrailingActionsView_recipe], (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
  *(_QWORD *)&v5[OBJC_IVAR____TtC15ConversationKit39ConversationControlsTrailingActionsView_controlsManager] = a2;
  v5[OBJC_IVAR____TtC15ConversationKit39ConversationControlsTrailingActionsView_context] = a5;
  *((_QWORD *)v11 + 1) = a4;
  swift_unknownObjectWeakAssign();
  v15.receiver = v5;
  v15.super_class = (Class)type metadata accessor for ConversationControlsTrailingActionsView();
  v12 = a2;
  v13 = objc_msgSendSuper2(&v15, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  ConversationControlsTrailingActionsView.configureSubviews()();

  outlined destroy of RemoteControlRequest(a1, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
  return v13;
}

void ConversationControlsTrailingActionsView.configureSubviews()()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  Class isa;

  ConversationControlsTrailingActionsView.actionButtonsHStack.getter();
  v2 = v1;
  objc_msgSend(v0, sel_addSubview_, v1);

  v3 = (void *)objc_opt_self();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1BD644140;
  ConversationControlsTrailingActionsView.actionButtonsHStack.getter();
  v6 = v5;
  v7 = objc_msgSend(v5, sel_topAnchor);

  v8 = objc_msgSend(v0, sel_topAnchor);
  v9 = objc_msgSend(v7, sel_constraintEqualToAnchor_, v8);

  *(_QWORD *)(v4 + 32) = v9;
  ConversationControlsTrailingActionsView.actionButtonsHStack.getter();
  v11 = v10;
  v12 = objc_msgSend(v10, sel_leadingAnchor);

  v13 = objc_msgSend(v0, sel_leadingAnchor);
  v14 = objc_msgSend(v12, sel_constraintEqualToAnchor_, v13);

  *(_QWORD *)(v4 + 40) = v14;
  ConversationControlsTrailingActionsView.actionButtonsHStack.getter();
  v16 = v15;
  v17 = objc_msgSend(v15, sel_trailingAnchor);

  v18 = objc_msgSend(v0, sel_trailingAnchor);
  v19 = objc_msgSend(v17, sel_constraintEqualToAnchor_, v18);

  *(_QWORD *)(v4 + 48) = v19;
  ConversationControlsTrailingActionsView.actionButtonsHStack.getter();
  v21 = v20;
  v22 = objc_msgSend(v20, sel_bottomAnchor);

  v23 = objc_msgSend(v0, sel_bottomAnchor);
  v24 = objc_msgSend(v22, sel_constraintEqualToAnchor_, v23);

  *(_QWORD *)(v4 + 56) = v24;
  specialized Array._endMutation()();
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_activateConstraints_, isa);

}

void ConversationControlsTrailingActionsView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;

  objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  OUTLINED_FUNCTION_0();
}

void ConversationControlsTrailingActionsView.init(coder:)()
{
  char *v0;

  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit39ConversationControlsTrailingActionsView_menuHostViewController + 8] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit39ConversationControlsTrailingActionsView____lazy_storage___actionButtonsHStack] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit39ConversationControlsTrailingActionsView____lazy_storage___showCallDetailsButton] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

id ConversationControlsTrailingActionsView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

void ConversationControlsTrailingActionsView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id ConversationControlsTrailingActionsView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ConversationControlsTrailingActionsView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ConversationControlsTrailingActionsView()
{
  uint64_t result;

  result = type metadata singleton initialization cache for ConversationControlsTrailingActionsView;
  if (!type metadata singleton initialization cache for ConversationControlsTrailingActionsView)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BD485294@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0xB8))();
  *a2 = result;
  return result;
}

uint64_t ObjC metadata update function for ConversationControlsTrailingActionsView()
{
  return type metadata accessor for ConversationControlsTrailingActionsView();
}

uint64_t type metadata completion function for ConversationControlsTrailingActionsView()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ConversationControlsRecipe();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for ConversationControlsTrailingActionsView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ConversationControlsTrailingActionsView.alignmentView.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of ConversationControlsTrailingActionsView.showCallDetailsButton.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of ConversationControlsTrailingActionsView.showCallDetailsButton.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of ConversationControlsTrailingActionsView.showCallDetailsButton.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of ConversationControlsTrailingActionsView.isOnlyShowingInfoButton.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of ConversationControlsTrailingActionsView.__allocating_init(recipe:controlsManager:menuHostViewController:context:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 216))();
}

uint64_t specialized _ArrayProtocol.filter(_:)(uint64_t a1, char *a2)
{
  uint64_t v2;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  _QWORD v18[6];
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v24 = type metadata accessor for Participant.State(0);
  MEMORY[0x1E0C80A78](v24);
  v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for Participant(0);
  v23 = *(_QWORD *)(v19 - 8);
  v7 = MEMORY[0x1E0C80A78](v19);
  v18[5] = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v10 = MEMORY[0x1E0C80A78](v9);
  v21 = (char *)v18 - v11;
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)v18 - v12;
  v15 = MEMORY[0x1E0DEE9D8];
  v25 = MEMORY[0x1E0DEE9D8];
  if (*(_QWORD *)(a1 + 16))
  {
    v20 = v13;
    v18[2] = a2;
    v18[3] = v2;
    v18[4] = &a2[OBJC_IVAR____TtC15ConversationKit36ParticipantsCollectionViewDataSource_participantIsShownInGrid];
    if (*(_QWORD *)(a1 + 16))
    {
      _s15ConversationKit11ParticipantVWOcTm_2(a1 + ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80)), (uint64_t)v18 - v12, type metadata accessor for Participant);
      _s15ConversationKit11ParticipantVWOcTm_2((uint64_t)v14, (uint64_t)v6, type metadata accessor for Participant.State);
      v16 = (char *)&loc_1BD4855B8 + dword_1BD4857D4[swift_getEnumCaseMultiPayload()];
      __asm { BR              X9 }
    }
    __break(1u);
    JUMPOUT(0x1BD4857D4);
  }

  swift_bridgeObjectRelease();
  return v15;
}

{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  _QWORD v18[6];
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v5 = type metadata accessor for Participant.State(0);
  MEMORY[0x1E0C80A78](v5);
  v24 = (uint64_t)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for Participant(0);
  v23 = *(_QWORD *)(v19 - 8);
  v7 = MEMORY[0x1E0C80A78](v19);
  v18[5] = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v10 = MEMORY[0x1E0C80A78](v9);
  v21 = (char *)v18 - v11;
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)v18 - v12;
  v15 = MEMORY[0x1E0DEE9D8];
  v25 = MEMORY[0x1E0DEE9D8];
  if (*(_QWORD *)(a1 + 16))
  {
    v20 = v13;
    v18[0] = a2;
    v18[1] = v2;
    v18[4] = &a2[OBJC_IVAR____TtC15ConversationKit36ParticipantsCollectionViewDataSource_participantIsShownInGrid];
    v18[2] = v5;
    v18[3] = a1;
    if (*(_QWORD *)(a1 + 16))
    {
      _s15ConversationKit11ParticipantVWOcTm_2(a1 + ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80)), (uint64_t)v18 - v12, type metadata accessor for Participant);
      _s15ConversationKit11ParticipantVWOcTm_2((uint64_t)v14, v24, type metadata accessor for Participant.State);
      v16 = (char *)&loc_1BD485998 + dword_1BD485BB4[swift_getEnumCaseMultiPayload()];
      __asm { BR              X9 }
    }
    __break(1u);
    JUMPOUT(0x1BD485BB4);
  }

  swift_bridgeObjectRelease();
  return v15;
}

ConversationKit::ParticipantsCollectionViewDataSource::SectionType_optional __swiftcall ParticipantsCollectionViewDataSource.SectionType.init(rawValue:)(Swift::Int rawValue)
{
  ConversationKit::ParticipantsCollectionViewDataSource::SectionType_optional v1;

  if (rawValue == 1)
    v1.value = ConversationKit_ParticipantsCollectionViewDataSource_SectionType_offline;
  else
    v1.value = ConversationKit_ParticipantsCollectionViewDataSource_SectionType_unknownDefault;
  if (rawValue)
    return v1;
  else
    return 0;
}

void *static ParticipantsCollectionViewDataSource.SectionType.allCases.getter()
{
  return &outlined read-only object #0 of static ParticipantsCollectionViewDataSource.SectionType.allCases.getter;
}

uint64_t ParticipantsCollectionViewDataSource.SectionType.rawValue.getter(char a1)
{
  return a1 & 1;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance ParticipantsCollectionViewDataSource.SectionType(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance ParticipantsCollectionViewDataSource.SectionType()
{
  char *v0;

  specialized RawRepresentable<>.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance ParticipantsCollectionViewDataSource.SectionType(uint64_t a1)
{
  char *v1;

  specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance ParticipantsCollectionViewDataSource.SectionType(uint64_t a1)
{
  char *v1;

  specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

ConversationKit::ParticipantsCollectionViewDataSource::SectionType_optional protocol witness for RawRepresentable.init(rawValue:) in conformance ParticipantsCollectionViewDataSource.SectionType@<W0>(Swift::Int *a1@<X0>, ConversationKit::ParticipantsCollectionViewDataSource::SectionType_optional *a2@<X8>)
{
  ConversationKit::ParticipantsCollectionViewDataSource::SectionType_optional result;

  result.value = ParticipantsCollectionViewDataSource.SectionType.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance ParticipantsCollectionViewDataSource.SectionType@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;

  result = ParticipantsCollectionViewDataSource.SectionType.rawValue.getter(*v1);
  *a1 = result;
  return result;
}

void protocol witness for static CaseIterable.allCases.getter in conformance ParticipantsCollectionViewDataSource.SectionType(_QWORD *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static ParticipantsCollectionViewDataSource.SectionType.allCases.getter;
}

uint64_t ParticipantsCollectionViewDataSource.participants.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC15ConversationKit36ParticipantsCollectionViewDataSource_onlineParticipants);
  OUTLINED_FUNCTION_1();
  v2 = *v1;
  OUTLINED_FUNCTION_1();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  specialized Array.append<A>(contentsOf:)();
  return v2;
}

void ParticipantsCollectionViewDataSource.onlineParticipants.getter()
{
  ParticipantsCollectionViewDataSource.onlineParticipants.getter();
}

{
  OUTLINED_FUNCTION_1();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_32();
}

void ParticipantsCollectionViewDataSource.offlineParticipants.getter()
{
  ParticipantsCollectionViewDataSource.onlineParticipants.getter();
}

uint64_t key path getter for ParticipantsCollectionViewDataSource.didCreateCellForParticipant : ParticipantsCollectionViewDataSource@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD *);

  v3 = (uint64_t *)(*a1
                 + OBJC_IVAR____TtC15ConversationKit36ParticipantsCollectionViewDataSource_didCreateCellForParticipant);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = partial apply for thunk for @escaping @callee_guaranteed (@guaranteed CNComposeRecipient) -> ();
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ParticipantsCollectionViewDataSource.didCreateCellForParticipant : ParticipantsCollectionViewDataSource(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed CNComposeRecipient) -> (@out ());
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2
                 + OBJC_IVAR____TtC15ConversationKit36ParticipantsCollectionViewDataSource_didCreateCellForParticipant);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ParticipantsCollectionViewDataSource.didCreateCellForParticipant.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0
                 + OBJC_IVAR____TtC15ConversationKit36ParticipantsCollectionViewDataSource_didCreateCellForParticipant);
  OUTLINED_FUNCTION_1();
  v2 = *v1;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(*v1);
  return v2;
}

void ParticipantsCollectionViewDataSource.didCreateCellForParticipant.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;

  v5 = (uint64_t *)(v2
                 + OBJC_IVAR____TtC15ConversationKit36ParticipantsCollectionViewDataSource_didCreateCellForParticipant);
  OUTLINED_FUNCTION_2_0();
  v6 = *v5;
  *v5 = a1;
  v5[1] = a2;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v6);
  OUTLINED_FUNCTION_9_0();
}

uint64_t (*ParticipantsCollectionViewDataSource.didCreateCellForParticipant.modify())()
{
  OUTLINED_FUNCTION_2_0();
  return CallRecordingPillViewController.cancellable.modify;
}

char *ParticipantsCollectionViewDataSource.__allocating_init(participants:participantIsShownInGrid:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  id v7;

  v7 = objc_allocWithZone(v3);
  return ParticipantsCollectionViewDataSource.init(participants:participantIsShownInGrid:)(a1, a2, a3);
}

char *ParticipantsCollectionViewDataSource.init(participants:participantIsShownInGrid:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  objc_class *ObjectType;
  uint64_t v7;
  char *v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  objc_super v19;

  ObjectType = (objc_class *)swift_getObjectType();
  v7 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v3[OBJC_IVAR____TtC15ConversationKit36ParticipantsCollectionViewDataSource_onlineParticipants] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v3[OBJC_IVAR____TtC15ConversationKit36ParticipantsCollectionViewDataSource_offlineParticipants] = v7;
  v8 = &v3[OBJC_IVAR____TtC15ConversationKit36ParticipantsCollectionViewDataSource_didCreateCellForParticipant];
  *(_QWORD *)v8 = 0;
  *((_QWORD *)v8 + 1) = 0;
  v9 = &v3[OBJC_IVAR____TtC15ConversationKit36ParticipantsCollectionViewDataSource_participantIsShownInGrid];
  *(_QWORD *)v9 = a2;
  *((_QWORD *)v9 + 1) = a3;
  v19.receiver = v3;
  v19.super_class = ObjectType;
  swift_retain();
  v10 = (char *)objc_msgSendSuper2(&v19, sel_init);
  v11 = OUTLINED_FUNCTION_5_0();
  v12 = specialized _ArrayProtocol.filter(_:)(v11, v10);
  v13 = (uint64_t *)&v10[OBJC_IVAR____TtC15ConversationKit36ParticipantsCollectionViewDataSource_onlineParticipants];
  OUTLINED_FUNCTION_2_0();
  *v13 = v12;
  swift_bridgeObjectRelease();
  v14 = v10;
  v15 = OUTLINED_FUNCTION_5_0();
  v16 = specialized _ArrayProtocol.filter(_:)(v15, v14);
  swift_bridgeObjectRelease();

  swift_release();
  v17 = (uint64_t *)&v14[OBJC_IVAR____TtC15ConversationKit36ParticipantsCollectionViewDataSource_offlineParticipants];
  OUTLINED_FUNCTION_2_0();
  *v17 = v16;
  swift_bridgeObjectRelease();
  return v14;
}

void ParticipantsCollectionViewDataSource.update(_:in:)(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for IndexPath?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v5);
  v6 = OUTLINED_FUNCTION_5_124();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_77();
  v10 = v9 - v8;
  v11 = OUTLINED_FUNCTION_8_13();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_3_119();
  *v3 = OUTLINED_FUNCTION_7_22();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v12 + 104))(v3, *MEMORY[0x1E0DEF740], v11);
  v13 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v12 + 8))(v3, v11);
  if ((v13 & 1) != 0)
  {
    v14 = OUTLINED_FUNCTION_14_2();
    if (*(_QWORD *)(a1 + *(int *)(v14 + 28)))
    {
      ParticipantsCollectionViewDataSource.indexPath(of:)(a1 + *(int *)(v14 + 20), v2);
      if (__swift_getEnumTagSinglePayload(v2, 1, v6) == 1)
      {
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v2, (uint64_t *)&demangling cache variable for type metadata for IndexPath?);
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v10, v2, v6);
        ParticipantsCollectionViewDataSource.updateExistingRosterParticipant(_:at:in:)(a1, v10, a2);
        (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v10, v6);
      }
    }
    OUTLINED_FUNCTION_52_1();
  }
  else
  {
    __break(1u);
  }
}

uint64_t ParticipantsCollectionViewDataSource.indexPath(of:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  _QWORD v20[4];
  _BYTE v21[16];
  uint64_t v22;

  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit36ParticipantsCollectionViewDataSource_onlineParticipants);
  OUTLINED_FUNCTION_1();
  v6 = *v5;
  v22 = a1;
  swift_bridgeObjectRetain();
  specialized Collection.firstIndex(where:)((uint64_t)partial apply for closure #1 in ParticipantsCollectionViewDataSource.indexPath(of:), (uint64_t)v21, v6);
  v8 = v7;
  v10 = v9;
  swift_bridgeObjectRelease();
  if ((v10 & 1) == 0)
  {
    v11 = 0;
LABEL_4:
    MEMORY[0x1C3B70094](v8, v11);
    v11 = 0;
    goto LABEL_5;
  }
  v12 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit36ParticipantsCollectionViewDataSource_offlineParticipants);
  v13 = OUTLINED_FUNCTION_1();
  v14 = *v12;
  MEMORY[0x1E0C80A78](v13);
  v20[2] = a1;
  OUTLINED_FUNCTION_5_0();
  specialized Collection.firstIndex(where:)((uint64_t)partial apply for closure #2 in ParticipantsCollectionViewDataSource.indexPath(of:), (uint64_t)v20, v14);
  v8 = v15;
  v17 = v16;
  swift_bridgeObjectRelease();
  v11 = 1;
  if ((v17 & 1) == 0)
    goto LABEL_4;
LABEL_5:
  v18 = OUTLINED_FUNCTION_8_108();
  return __swift_storeEnumTagSinglePayload(a2, v11, 1, v18);
}

void ParticipantsCollectionViewDataSource.updateExistingRosterParticipant(_:at:in:)(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  char *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  int v21;
  int v22;
  int v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  void *v36;
  id v37;
  uint64_t v38;
  void *v39;
  id v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  char isUniquelyReferenced_nonNull_native;
  char v45;
  Class isa;
  id v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  char *v57;
  uint64_t v58;
  _QWORD aBlock[6];

  v4 = v3;
  v56 = a3;
  v58 = a1;
  v6 = type metadata accessor for IndexPath();
  v53 = *(_QWORD *)(v6 - 8);
  v54 = v6;
  v7 = *(_QWORD *)(v53 + 64);
  MEMORY[0x1E0C80A78](v6);
  v52 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Participant(0);
  v55 = *(_QWORD *)(v11 - 8);
  v12 = *(uint64_t **)(v55 + 64);
  MEMORY[0x1E0C80A78](v11);
  v51 = (uint64_t)&v49 - (((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v57 = (char *)&v49 - v14;
  v15 = type metadata accessor for DispatchPredicate();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (uint64_t *)((char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for OS_dispatch_queue();
  *v18 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v16 + 104))(v18, *MEMORY[0x1E0DEF740], v15);
  v19 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v16 + 8))(v18, v15);
  if ((v19 & 1) == 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  ParticipantsCollectionViewDataSource.participant(at:)(a2, (uint64_t)v10);
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v10, &demangling cache variable for type metadata for Participant?);
    return;
  }
  v20 = (uint64_t)v10;
  v10 = v57;
  outlined init with take of Participant(v20, (uint64_t)v57);
  v15 = v58;
  if (((*(uint64_t (**)(uint64_t))&v4[OBJC_IVAR____TtC15ConversationKit36ParticipantsCollectionViewDataSource_participantIsShownInGrid])(v58) & 1) != 0)
    goto LABEL_19;
  Participant.isActive.getter();
  v22 = v21;
  Participant.isActive.getter();
  if (((v22 ^ v23) & 1) != 0)
  {
    v24 = v53;
    v25 = *(void (**)(char *, uint64_t, uint64_t))(v53 + 16);
    v50 = v4;
    v26 = v52;
    v27 = a2;
    v28 = v54;
    v25(v52, v27, v54);
    v29 = v51;
    _s15ConversationKit11ParticipantVWOcTm_2(v15, v51, type metadata accessor for Participant);
    v30 = (*(unsigned __int8 *)(v24 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
    v31 = (v7 + *(unsigned __int8 *)(v55 + 80) + v30) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80);
    v32 = (uint64_t)v10;
    v33 = ((unint64_t)v12 + v31 + 7) & 0xFFFFFFFFFFFFFFF8;
    v34 = (v33 + 15) & 0xFFFFFFFFFFFFFFF8;
    v35 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v24 + 32))(v35 + v30, v26, v28);
    outlined init with take of Participant(v29, v35 + v31);
    v36 = v50;
    *(_QWORD *)(v35 + v33) = v50;
    v37 = v56;
    *(_QWORD *)(v35 + v34) = v56;
    v38 = swift_allocObject();
    *(_QWORD *)(v38 + 16) = partial apply for closure #1 in ParticipantsCollectionViewDataSource.updateExistingRosterParticipant(_:at:in:);
    *(_QWORD *)(v38 + 24) = v35;
    aBlock[4] = thunk for @escaping @callee_guaranteed () -> ()partial apply;
    aBlock[5] = v38;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
    aBlock[3] = &block_descriptor_25_2;
    v39 = _Block_copy(aBlock);
    swift_retain_n();
    v40 = v36;
    v41 = v37;
    swift_release();
    objc_msgSend(v41, sel_performBatchUpdates_completion_, v39, 0);
    _Block_release(v39);
    swift_release();
    outlined destroy of AccountUpdateNotice(v32, type metadata accessor for Participant);
    swift_release_n();
    return;
  }
  v42 = IndexPath.section.getter();
  v19 = IndexPath.item.getter();
  if (!v42)
    goto LABEL_12;
  v12 = (uint64_t *)&v4[OBJC_IVAR____TtC15ConversationKit36ParticipantsCollectionViewDataSource_offlineParticipants];
  swift_beginAccess();
  v43 = *v12;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v12 = v43;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_22:
    v43 = specialized _ArrayBuffer._consumeAndCreateNew()();
    *v12 = v43;
    if ((v19 & 0x8000000000000000) == 0)
      goto LABEL_10;
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if ((v19 & 0x8000000000000000) != 0)
    goto LABEL_23;
LABEL_10:
  if (v19 < *(_QWORD *)(v43 + 16))
    goto LABEL_15;
  __break(1u);
LABEL_12:
  v12 = (uint64_t *)&v4[OBJC_IVAR____TtC15ConversationKit36ParticipantsCollectionViewDataSource_onlineParticipants];
  swift_beginAccess();
  v43 = *v12;
  v45 = swift_isUniquelyReferenced_nonNull_native();
  *v12 = v43;
  if ((v45 & 1) != 0)
  {
    if ((v19 & 0x8000000000000000) == 0)
      goto LABEL_14;
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
LABEL_24:
  v43 = specialized _ArrayBuffer._consumeAndCreateNew()();
  *v12 = v43;
  if ((v19 & 0x8000000000000000) != 0)
    goto LABEL_25;
LABEL_14:
  if (v19 >= *(_QWORD *)(v43 + 16))
  {
LABEL_26:
    __break(1u);
    return;
  }
LABEL_15:
  outlined assign with copy of Participant(v15, v43+ ((*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80))+ *(_QWORD *)(v55 + 72) * v19);
  swift_endAccess();
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v47 = objc_msgSend(v56, sel_cellForItemAtIndexPath_, isa);

  if (v47)
  {
    type metadata accessor for ParticipantCell();
    v48 = swift_dynamicCastClass();
    if (v48)
      ParticipantsCollectionViewDataSource.configureCell(_:with:)(v48, v15);

  }
LABEL_19:
  outlined destroy of AccountUpdateNotice((uint64_t)v10, type metadata accessor for Participant);
}

void ParticipantsCollectionViewDataSource.update(_:in:with:)(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  char v14;
  uint64_t v15;
  Class isa;
  id v17;
  uint64_t v18;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for IndexPath?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v6);
  v7 = OUTLINED_FUNCTION_5_124();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = OUTLINED_FUNCTION_4_132();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_77();
  v13 = (uint64_t *)(v12 - v11);
  OUTLINED_FUNCTION_13_106();
  *v13 = OUTLINED_FUNCTION_7_22();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v10 + 104))(v13, *MEMORY[0x1E0DEF740], v9);
  v14 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v10 + 8))(v13, v9);
  if ((v14 & 1) != 0)
  {
    v15 = OUTLINED_FUNCTION_14_2();
    if (*(_QWORD *)(a1 + *(int *)(v15 + 28)))
    {
      ParticipantsCollectionViewDataSource.indexPath(of:)(a1 + *(int *)(v15 + 20), v4);
      if (__swift_getEnumTagSinglePayload(v4, 1, v7) == 1)
      {
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v4, (uint64_t *)&demangling cache variable for type metadata for IndexPath?);
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v3, v4, v7);
        isa = IndexPath._bridgeToObjectiveC()().super.isa;
        v17 = objc_msgSend(a2, sel_cellForItemAtIndexPath_, isa);

        if (v17)
        {
          type metadata accessor for ParticipantCell();
          v18 = swift_dynamicCastClass();
          if (v18)
            ParticipantsCollectionViewDataSource.configureCell(_:with:)(v18, a3);

        }
        OUTLINED_FUNCTION_101(v3, *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
      }
    }
    OUTLINED_FUNCTION_52_1();
  }
  else
  {
    __break(1u);
  }
}

void ParticipantsCollectionViewDataSource.configureCell(_:with:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  char v8;
  CGAffineTransform to;

  v3 = OUTLINED_FUNCTION_8_13();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_77();
  v7 = (uint64_t *)(v6 - v5);
  OUTLINED_FUNCTION_13_106();
  *v7 = OUTLINED_FUNCTION_7_22();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v4 + 104))(v7, *MEMORY[0x1E0DEF740], v3);
  v8 = _dispatchPreconditionTest(_:)();
  OUTLINED_FUNCTION_40_0(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  if ((v8 & 1) != 0)
  {
    static Participant.affineTransformForRemote(_:)(a2, &to.a);
    ParticipantView.updateLayerTransform(to:)(&to);
  }
  else
  {
    __break(1u);
  }
}

{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t *, uint64_t);
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;

  v61 = a2;
  v59 = type metadata accessor for Participant(0);
  MEMORY[0x1E0C80A78](v59);
  v60 = (uint64_t)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for ParticipantViewModel(0);
  v5 = MEMORY[0x1E0C80A78](v4);
  v63 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v62 = (uint64_t)&v53 - v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v8);
  v57 = (uint64_t)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v53 - v14;
  v16 = type metadata accessor for UUID();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v58 = (uint64_t *)((char *)&v53 - v21);
  v22 = type metadata accessor for DispatchPredicate();
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v25 = (uint64_t *)((char *)&v53 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for OS_dispatch_queue();
  *v25 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v23 + 104))(v25, *MEMORY[0x1E0DEF740], v22);
  v26 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v23 + 8))(v25, v22);
  if ((v26 & 1) == 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  v27 = a1 + OBJC_IVAR____TtC15ConversationKit15ParticipantCell_participantIdentifier;
  swift_beginAccess();
  outlined init with copy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v27, (uint64_t)v15, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v16) != 1)
  {
    v25 = v58;
    (*(void (**)(uint64_t *, char *, uint64_t))(v17 + 32))(v58, v15, v16);
    a1 = v61;
    v28 = v61 + *(int *)(v59 + 20);
    v15 = *(char **)(v17 + 16);
    ((void (*)(char *, uint64_t, uint64_t))v15)(v20, v28, v16);
    lazy protocol witness table accessor for type UUID and conformance UUID();
    v29 = dispatch thunk of static Equatable.== infix(_:_:)();
    v30 = *(void (**)(char *, uint64_t))(v17 + 8);
    v30(v20, v16);
    if ((v29 & 1) != 0)
    {
      v30((char *)v25, v16);
      goto LABEL_8;
    }
    v53 = v28;
    v56 = (void (*)(uint64_t *, uint64_t))v30;
    if (one-time initialization token for conversationKit == -1)
    {
LABEL_7:
      v55 = static OS_os_log.conversationKit;
      HIDWORD(v54) = static os_log_type_t.error.getter();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v31 = swift_allocObject();
      *(_OWORD *)(v31 + 16) = xmmword_1BD646740;
      ((void (*)(char *, uint64_t *, uint64_t))v15)(v13, v25, v16);
      __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v16);
      specialized >> prefix<A>(_:)((uint64_t)v13);
      v33 = v32;
      v35 = v34;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v13, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      v36 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v31 + 56) = MEMORY[0x1E0DEA968];
      v37 = lazy protocol witness table accessor for type String and conformance String();
      *(_QWORD *)(v31 + 64) = v37;
      *(_QWORD *)(v31 + 32) = v33;
      *(_QWORD *)(v31 + 40) = v35;
      ((void (*)(char *, uint64_t, uint64_t))v15)(v13, v53, v16);
      __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v16);
      specialized >> prefix<A>(_:)((uint64_t)v13);
      v39 = v38;
      v41 = v40;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v13, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      *(_QWORD *)(v31 + 96) = v36;
      *(_QWORD *)(v31 + 104) = v37;
      *(_QWORD *)(v31 + 72) = v39;
      *(_QWORD *)(v31 + 80) = v41;
      v42 = v57;
      _s15ConversationKit11ParticipantVWOcTm_2(a1, v57, type metadata accessor for Participant);
      __swift_storeEnumTagSinglePayload(v42, 0, 1, v59);
      specialized >> prefix<A>(_:)(v42);
      v44 = v43;
      v46 = v45;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v42, &demangling cache variable for type metadata for Participant?);
      *(_QWORD *)(v31 + 136) = v36;
      *(_QWORD *)(v31 + 144) = v37;
      *(_QWORD *)(v31 + 112) = v44;
      *(_QWORD *)(v31 + 120) = v46;
      os_log(_:dso:log:type:_:)();
      swift_bridgeObjectRelease();
      v56(v58, v16);
      goto LABEL_8;
    }
LABEL_10:
    swift_once();
    goto LABEL_7;
  }
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v15, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  a1 = v61;
LABEL_8:
  v47 = v60;
  _s15ConversationKit11ParticipantVWOcTm_2(a1, v60, type metadata accessor for Participant);
  LOWORD(v51) = 257;
  LOBYTE(v50) = 1;
  v48 = v62;
  ParticipantViewModel.init(participant:videoProviderType:isInGrid:isMostActive:isPipped:isPreviewingReaction:hasOtherInvitedParticipants:isLocalMemberAuthorizedToChangeGroupMembership:prefersSnapshotFadeAnimation:snapshotImage:allowsVideoCroppedByAspectRatio:shouldRegisterVideoLayers:)(v47, 1, 0, 0, 0, 0, 0, 0, v50, 0, v51, v52, v53, v54, v55, (uint64_t)v56, v57, (uint64_t)v58, v59,
    v60,
    v61,
    v62,
    v63,
    BYTE1(v63));
  v49 = (uint64_t)v63;
  ParticipantViewModel.compatibleWithRoster.getter();
  ParticipantCell.configure(with:)();
  outlined destroy of AccountUpdateNotice(v49, type metadata accessor for ParticipantViewModel);
  outlined destroy of AccountUpdateNotice(v48, type metadata accessor for ParticipantViewModel);
}

void ParticipantsCollectionViewDataSource.participant(at:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v3 = v2;
  v6 = IndexPath.section.getter();
  if (v6 != 1)
  {
    if (v6)
    {
      OUTLINED_FUNCTION_14_2();
      v15 = OUTLINED_FUNCTION_76_0();
      __swift_storeEnumTagSinglePayload(v15, v16, v17, v18);
      return;
    }
    v7 = IndexPath.item.getter();
    v3 += OBJC_IVAR____TtC15ConversationKit36ParticipantsCollectionViewDataSource_onlineParticipants;
    OUTLINED_FUNCTION_1();
    if (v7 >= *(_QWORD *)(*(_QWORD *)v3 + 16))
      goto LABEL_13;
    if (IndexPath.item.getter() < 0)
    {
      __break(1u);
      goto LABEL_16;
    }
    OUTLINED_FUNCTION_30_68();
    if (!v8)
      goto LABEL_11;
    __break(1u);
  }
  v7 = IndexPath.item.getter();
  v9 = v3 + OBJC_IVAR____TtC15ConversationKit36ParticipantsCollectionViewDataSource_offlineParticipants;
  OUTLINED_FUNCTION_1();
  if (v7 >= *(_QWORD *)(*(_QWORD *)v9 + 16))
  {
LABEL_13:
    OUTLINED_FUNCTION_14_2();
    v11 = OUTLINED_FUNCTION_76_0();
    goto LABEL_14;
  }
  if (IndexPath.item.getter() < 0)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  OUTLINED_FUNCTION_30_68();
  if (!v8)
  {
LABEL_11:
    v10 = OUTLINED_FUNCTION_14_2();
    _s15ConversationKit11ParticipantVWOcTm_2(v7+ ((*(unsigned __int8 *)(*(_QWORD *)(v10 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v10 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * a1, a2, type metadata accessor for Participant);
    v11 = a2;
    v12 = 0;
    v13 = 1;
    v14 = v10;
LABEL_14:
    __swift_storeEnumTagSinglePayload(v11, v12, v13, v14);
    OUTLINED_FUNCTION_9_0();
    return;
  }
LABEL_17:
  __break(1u);
}

uint64_t closure #1 in ParticipantsCollectionViewDataSource.updateExistingRosterParticipant(_:at:in:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  unint64_t v38;
  uint64_t v39;
  void (*v40)(unint64_t, uint64_t, uint64_t);
  Class isa;
  id v42;
  uint64_t v43;
  Class v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  char *v51;
  id v52;

  v52 = a4;
  v49 = a3;
  v6 = type metadata accessor for Participant(0);
  *(_QWORD *)&v50 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for IndexPath();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v51 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = IndexPath.section.getter();
  v48 = a2;
  if (v15)
  {
    v16 = a1;
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_1BD6441D0;
    _s15ConversationKit11ParticipantVWOcTm_2(a2, (uint64_t)v11, type metadata accessor for Participant);
    __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v6);
    specialized >> prefix<A>(_:)((uint64_t)v11);
    v19 = v18;
    v21 = v20;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v11, &demangling cache variable for type metadata for Participant?);
    *(_QWORD *)(v17 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v17 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v17 + 32) = v19;
    *(_QWORD *)(v17 + 40) = v21;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    IndexPath.item.getter();
    v22 = v49;
    swift_beginAccess();
    specialized Array.remove(at:)();
    swift_endAccess();
    outlined destroy of AccountUpdateNotice((uint64_t)v8, type metadata accessor for Participant);
    v23 = (uint64_t *)(v22 + OBJC_IVAR____TtC15ConversationKit36ParticipantsCollectionViewDataSource_onlineParticipants);
    swift_beginAccess();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    v24 = *(_QWORD *)(*v23 + 16);
    specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(v24);
    v25 = *v23;
    *(_QWORD *)(v25 + 16) = v24 + 1;
    _s15ConversationKit11ParticipantVWOcTm_2(v48, v25+ ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80))+ *(_QWORD *)(v50 + 72) * v24, type metadata accessor for Participant);
    v26 = *v23;
    swift_endAccess();
    v27 = 0;
  }
  else
  {
    v47 = a1;
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v28 = swift_allocObject();
    *(_OWORD *)(v28 + 16) = xmmword_1BD6441D0;
    _s15ConversationKit11ParticipantVWOcTm_2(a2, (uint64_t)v11, type metadata accessor for Participant);
    v27 = 1;
    __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v6);
    specialized >> prefix<A>(_:)((uint64_t)v11);
    v30 = v29;
    v32 = v31;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v11, &demangling cache variable for type metadata for Participant?);
    *(_QWORD *)(v28 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v28 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v28 + 32) = v30;
    *(_QWORD *)(v28 + 40) = v32;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    v16 = v47;
    IndexPath.item.getter();
    v33 = v49;
    swift_beginAccess();
    specialized Array.remove(at:)();
    swift_endAccess();
    outlined destroy of AccountUpdateNotice((uint64_t)v8, type metadata accessor for Participant);
    v34 = (uint64_t *)(v33 + OBJC_IVAR____TtC15ConversationKit36ParticipantsCollectionViewDataSource_offlineParticipants);
    swift_beginAccess();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    v35 = *(_QWORD *)(*v34 + 16);
    specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(v35);
    v36 = *v34;
    *(_QWORD *)(v36 + 16) = v35 + 1;
    _s15ConversationKit11ParticipantVWOcTm_2(v48, v36+ ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80))+ *(_QWORD *)(v50 + 72) * v35, type metadata accessor for Participant);
    v26 = *v34;
    swift_endAccess();
  }
  v37 = v51;
  MEMORY[0x1C3B70094](*(_QWORD *)(v26 + 16) - 1, v27);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<IndexPath>);
  v38 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v39 = swift_allocObject();
  v50 = xmmword_1BD6441D0;
  *(_OWORD *)(v39 + 16) = xmmword_1BD6441D0;
  v40 = *(void (**)(unint64_t, uint64_t, uint64_t))(v13 + 16);
  v40(v39 + v38, v16, v12);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v42 = v52;
  objc_msgSend(v52, sel_deleteItemsAtIndexPaths_, isa);

  v43 = swift_allocObject();
  *(_OWORD *)(v43 + 16) = v50;
  v40(v43 + v38, (uint64_t)v37, v12);
  v44 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v42, sel_insertItemsAtIndexPaths_, v44);

  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v37, v12);
}

void ParticipantsCollectionViewDataSource.updateAudioPower(forParticipant:in:withPower:)(uint64_t a1, void *a2, Swift::Float a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  Class isa;
  id v22;

  v6 = v3;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for IndexPath?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_77();
  v12 = v11 - v10;
  v13 = OUTLINED_FUNCTION_8_108();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v15 = OUTLINED_FUNCTION_4_132();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_3_119();
  *v5 = OUTLINED_FUNCTION_7_22();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v16 + 104))(v5, *MEMORY[0x1E0DEF740], v15);
  v17 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v16 + 8))(v5, v15);
  if ((v17 & 1) == 0)
  {
    __break(1u);
    goto LABEL_19;
  }
  v15 = OUTLINED_FUNCTION_14_2();
  ParticipantsCollectionViewDataSource.indexPath(of:)(a1 + *(int *)(v15 + 20), v12);
  if (__swift_getEnumTagSinglePayload(v12, 1, v13) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v12, (uint64_t *)&demangling cache variable for type metadata for IndexPath?);
    return;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32))(v4, v12, v13);
  v18 = IndexPath.section.getter();
  v17 = IndexPath.item.getter();
  if (!v18)
    goto LABEL_9;
  v5 = (uint64_t *)(v6 + OBJC_IVAR____TtC15ConversationKit36ParticipantsCollectionViewDataSource_offlineParticipants);
  OUTLINED_FUNCTION_2_0();
  v19 = OUTLINED_FUNCTION_22_80();
  *v5 = v18;
  if ((v19 & 1) == 0)
  {
LABEL_19:
    v18 = specialized _ArrayBuffer._consumeAndCreateNew()();
    *v5 = v18;
    if ((v17 & 0x8000000000000000) == 0)
      goto LABEL_7;
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if ((v17 & 0x8000000000000000) != 0)
    goto LABEL_20;
LABEL_7:
  if (v17 < *(_QWORD *)(v18 + 16))
    goto LABEL_12;
  __break(1u);
LABEL_9:
  v5 = (uint64_t *)(v6 + OBJC_IVAR____TtC15ConversationKit36ParticipantsCollectionViewDataSource_onlineParticipants);
  OUTLINED_FUNCTION_2_0();
  v20 = OUTLINED_FUNCTION_22_80();
  *v5 = v18;
  if ((v20 & 1) != 0)
  {
    if ((v17 & 0x8000000000000000) == 0)
      goto LABEL_11;
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
LABEL_21:
  v18 = specialized _ArrayBuffer._consumeAndCreateNew()();
  *v5 = v18;
  if ((v17 & 0x8000000000000000) != 0)
    goto LABEL_22;
LABEL_11:
  if (v17 >= *(_QWORD *)(v18 + 16))
  {
LABEL_23:
    __break(1u);
    return;
  }
LABEL_12:
  outlined assign with copy of Participant(a1, v18+ ((*(unsigned __int8 *)(*(_QWORD *)(v15 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v15 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v15 - 8) + 72) * v17);
  swift_endAccess();
  if (a2)
  {
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    v22 = objc_msgSend(a2, sel_cellForItemAtIndexPath_, isa);

    if (v22)
    {
      type metadata accessor for ParticipantCell();
      if (swift_dynamicCastClass())
        ParticipantsCollectionViewDataSource.updateAudioPower(forCell:withPower:)(a3);

    }
  }
  OUTLINED_FUNCTION_101(v4, *(uint64_t (**)(uint64_t, uint64_t))(v14 + 8));
}

void ParticipantsCollectionViewDataSource.updateAudioPower(forCell:withPower:)(Swift::Float a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  char v6;
  uint64_t v7;

  v2 = type metadata accessor for DispatchPredicate();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (uint64_t *)((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for OS_dispatch_queue();
  *v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DEF740], v2);
  v6 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) != 0)
    ParticipantMonogramView.updateAudioVisualization(with:)(a1);
  else
    __break(1u);
}

Swift::Void __swiftcall ParticipantsCollectionViewDataSource.set(_:)(Swift::OpaquePointer a1)
{
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;

  v2 = v1;
  v3 = OUTLINED_FUNCTION_7_118();
  v4 = OUTLINED_FUNCTION_32_54(v3);
  v5 = (uint64_t *)&v1[OBJC_IVAR____TtC15ConversationKit36ParticipantsCollectionViewDataSource_onlineParticipants];
  OUTLINED_FUNCTION_2_0();
  *v5 = v4;
  swift_bridgeObjectRelease();
  v6 = v1;
  v7 = OUTLINED_FUNCTION_7_118();
  v8 = specialized _ArrayProtocol.filter(_:)(v7, v1);
  v9 = (uint64_t *)&v1[OBJC_IVAR____TtC15ConversationKit36ParticipantsCollectionViewDataSource_offlineParticipants];
  OUTLINED_FUNCTION_2_0();
  *v9 = v8;
  swift_bridgeObjectRelease();
}

Swift::Void __swiftcall ParticipantsCollectionViewDataSource.set(_:in:)(Swift::OpaquePointer _, UICollectionView *in)
{
  void *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  UICollectionView *v24;
  Swift::OpaquePointer *v25;
  void *v26;
  id v27;
  UICollectionView *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;

  v3 = v2;
  v6 = OUTLINED_FUNCTION_8_13();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (uint64_t *)((char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  OUTLINED_FUNCTION_13_106();
  *v9 = OUTLINED_FUNCTION_7_22();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DEF740], v6);
  v10 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
  if ((v10 & 1) != 0)
  {
    v11 = v3;
    v12 = OUTLINED_FUNCTION_7_118();
    v13 = OUTLINED_FUNCTION_32_54(v12);
    v14 = (id)v10;
    v15 = OUTLINED_FUNCTION_7_118();
    v16 = specialized _ArrayProtocol.filter(_:)(v15, (char *)v10);
    v17 = v10 + OBJC_IVAR____TtC15ConversationKit36ParticipantsCollectionViewDataSource_onlineParticipants;
    OUTLINED_FUNCTION_1();
    OUTLINED_FUNCTION_27_65();
    ParticipantsCollectionViewDataSource.participantArrayHasEqualIdentifiers(_:to:)(v13, v17);
    OUTLINED_FUNCTION_25_64();
    if ((v7 & 1) != 0)
    {
      v18 = v10 + OBJC_IVAR____TtC15ConversationKit36ParticipantsCollectionViewDataSource_offlineParticipants;
      OUTLINED_FUNCTION_1();
      OUTLINED_FUNCTION_27_65();
      ParticipantsCollectionViewDataSource.participantArrayHasEqualIdentifiers(_:to:)(v16, v18);
      OUTLINED_FUNCTION_25_64();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      v19 = (_QWORD *)OUTLINED_FUNCTION_15();
      v19[2] = v10;
      v19[3] = v16;
      v19[4] = in;
      v19[5] = v13;
      v20 = OUTLINED_FUNCTION_15();
      *(_QWORD *)(v20 + 16) = partial apply for closure #1 in ParticipantsCollectionViewDataSource.set(_:in:);
      *(_QWORD *)(v20 + 24) = v19;
      v32 = partial apply for thunk for @callee_guaranteed () -> ();
      v33 = v20;
      v21 = MEMORY[0x1E0C809B0];
      v30 = MEMORY[0x1E0C809B0];
      v31 = 1107296256;
      v22 = OUTLINED_FUNCTION_33_60((uint64_t)thunk for @escaping @callee_guaranteed () -> ());
      v23 = (id)v10;
      v24 = in;
      swift_release();
      v25 = (Swift::OpaquePointer *)OUTLINED_FUNCTION_15();
      v25[2]._rawValue = _._rawValue;
      v25[3]._rawValue = v23;
      v25[4]._rawValue = v24;
      v32 = partial apply for closure #2 in ParticipantsCollectionViewDataSource.set(_:in:);
      v33 = (uint64_t)v25;
      v30 = v21;
      v31 = 1107296256;
      v26 = OUTLINED_FUNCTION_33_60((uint64_t)thunk for @escaping @callee_guaranteed (@unowned Bool) -> ());
      v27 = v23;
      swift_bridgeObjectRetain();
      v28 = v24;
      swift_release();
      -[UICollectionView performBatchUpdates:completion:](v28, sel_performBatchUpdates_completion_, v22, v26);
      _Block_release(v26);
      _Block_release(v22);
      swift_release();
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t ParticipantsCollectionViewDataSource.participantArrayHasEqualIdentifiers(_:to:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  char v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;

  v31 = a2;
  v34 = type metadata accessor for Participant(0);
  v3 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for UUID();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v30 - v11;
  v13 = *(_QWORD *)(a1 + 16);
  v33 = v10;
  v30 = v3;
  if (v13)
  {
    v35 = MEMORY[0x1E0DEE9D8];
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, v13, 0);
    v14 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v32 = *(_QWORD *)(v3 + 72);
    do
    {
      _s15ConversationKit11ParticipantVWOcTm_2(v14, (uint64_t)v5, type metadata accessor for Participant);
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v12, &v5[*(int *)(v34 + 20)], v6);
      outlined destroy of AccountUpdateNotice((uint64_t)v5, type metadata accessor for Participant);
      v15 = v35;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(_QWORD *)(v15 + 16) + 1, 1);
        v15 = v35;
      }
      v17 = *(_QWORD *)(v15 + 16);
      v16 = *(_QWORD *)(v15 + 24);
      if (v17 >= v16 >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v16 > 1, v17 + 1, 1);
        v15 = v35;
      }
      *(_QWORD *)(v15 + 16) = v17 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v15+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v17, v12, v6);
      v35 = v15;
      v14 += v32;
      --v13;
    }
    while (v13);
    v10 = v33;
  }
  specialized Set.init<A>(_:)();
  v20 = v30;
  v19 = v31;
  v21 = *(_QWORD *)(v31 + 16);
  if (v21)
  {
    v32 = v18;
    v35 = MEMORY[0x1E0DEE9D8];
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, v21, 0);
    v22 = v19 + ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80));
    v23 = *(_QWORD *)(v20 + 72);
    do
    {
      _s15ConversationKit11ParticipantVWOcTm_2(v22, (uint64_t)v5, type metadata accessor for Participant);
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, &v5[*(int *)(v34 + 20)], v6);
      outlined destroy of AccountUpdateNotice((uint64_t)v5, type metadata accessor for Participant);
      v24 = v35;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(_QWORD *)(v24 + 16) + 1, 1);
        v24 = v35;
      }
      v26 = *(_QWORD *)(v24 + 16);
      v25 = *(_QWORD *)(v24 + 24);
      if (v26 >= v25 >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v25 > 1, v26 + 1, 1);
        v24 = v35;
      }
      *(_QWORD *)(v24 + 16) = v26 + 1;
      v10 = v33;
      (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v24+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v26, v33, v6);
      v35 = v24;
      v22 += v23;
      --v21;
    }
    while (v21);
  }
  specialized Set.init<A>(_:)();
  specialized static Set.== infix(_:_:)();
  v28 = v27;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v28 & 1;
}

uint64_t closure #1 in ParticipantsCollectionViewDataSource.set(_:in:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  char v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  void (*v89)(_QWORD, _QWORD);
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  Class isa;
  uint64_t *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  char *v137;
  uint64_t v138;
  unint64_t v139;
  uint64_t v140;
  void (*v141)(unint64_t, char *, uint64_t);
  uint64_t v142;
  uint64_t v143;
  Class v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  unint64_t v161;
  uint64_t v162;
  uint64_t v163;
  unint64_t v164;
  uint64_t *v165;
  uint64_t v166;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v168;
  uint64_t v169;
  Class v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  char v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  void (*v181)(char *, uint64_t, uint64_t);
  char *v182;
  uint64_t v183;
  uint64_t v184;
  void (*v185)(char *, uint64_t);
  uint64_t v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  unint64_t v192;
  uint64_t v193;
  uint64_t v194;
  unint64_t v195;
  uint64_t *v196;
  uint64_t v197;
  char v198;
  unint64_t v199;
  uint64_t v200;
  Class v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  int EnumTagSinglePayload;
  unint64_t v209;
  uint64_t v210;
  char *v211;
  unint64_t v212;
  unint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  unint64_t v218;
  uint64_t v219;
  uint64_t v220;
  unint64_t v221;
  char *v222;
  uint64_t v223;
  uint64_t *v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  Class v228;
  uint64_t result;
  uint64_t v230;
  uint64_t v231;
  char *v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  char *v238;
  uint64_t v239;
  char *v240;
  uint64_t v241;
  uint64_t v242;
  char *v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  char *v253;
  int v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t i;
  uint64_t v258;
  unint64_t j;
  __int128 v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t *v263;
  id v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t *v269;
  uint64_t v270;
  uint64_t *v271;
  uint64_t v272;
  unint64_t v273;
  __int128 v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;

  v264 = a3;
  v261 = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for CollectionOfOne<Participant>);
  MEMORY[0x1E0C80A78](v6);
  v233 = (uint64_t)&v230 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for IndexPath?);
  v9 = MEMORY[0x1E0C80A78](v8);
  v235 = (uint64_t)&v230 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v238 = (char *)&v230 - v11;
  v267 = type metadata accessor for IndexPath();
  v266 = *(_QWORD *)(v267 - 8);
  v12 = MEMORY[0x1E0C80A78](v267);
  v232 = (char *)&v230 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v12);
  v240 = (char *)&v230 - v15;
  MEMORY[0x1E0C80A78](v14);
  v253 = (char *)&v230 - v16;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  v18 = MEMORY[0x1E0C80A78](v17);
  v234 = (uint64_t)&v230 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x1E0C80A78](v18);
  v237 = (uint64_t)&v230 - v21;
  v22 = MEMORY[0x1E0C80A78](v20);
  v242 = (uint64_t)&v230 - v23;
  v24 = MEMORY[0x1E0C80A78](v22);
  v241 = (uint64_t)&v230 - v25;
  v26 = MEMORY[0x1E0C80A78](v24);
  v28 = (char *)&v230 - v27;
  v29 = MEMORY[0x1E0C80A78](v26);
  v246 = (uint64_t)&v230 - v30;
  v31 = MEMORY[0x1E0C80A78](v29);
  v251 = (uint64_t)&v230 - v32;
  v33 = MEMORY[0x1E0C80A78](v31);
  v258 = (uint64_t)&v230 - v34;
  v35 = MEMORY[0x1E0C80A78](v33);
  v252 = (uint64_t)&v230 - v36;
  MEMORY[0x1E0C80A78](v35);
  v263 = (uint64_t *)((char *)&v230 - v37);
  v38 = type metadata accessor for Participant(0);
  v270 = *(_QWORD *)(v38 - 8);
  v39 = MEMORY[0x1E0C80A78](v38);
  v231 = (uint64_t)&v230 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = MEMORY[0x1E0C80A78](v39);
  v244 = (uint64_t)&v230 - v42;
  v43 = MEMORY[0x1E0C80A78](v41);
  v236 = (uint64_t)&v230 - v44;
  v45 = MEMORY[0x1E0C80A78](v43);
  v272 = (uint64_t)&v230 - v46;
  v47 = MEMORY[0x1E0C80A78](v45);
  v250 = (uint64_t)&v230 - v48;
  v49 = MEMORY[0x1E0C80A78](v47);
  v245 = (uint64_t)&v230 - v50;
  v51 = MEMORY[0x1E0C80A78](v49);
  v239 = (uint64_t)&v230 - v52;
  v53 = MEMORY[0x1E0C80A78](v51);
  v273 = (unint64_t)&v230 - v54;
  v55 = MEMORY[0x1E0C80A78](v53);
  v249 = (uint64_t)&v230 - v56;
  v57 = MEMORY[0x1E0C80A78](v55);
  v247 = (uint64_t)&v230 - v58;
  v59 = MEMORY[0x1E0C80A78](v57);
  v265 = (uint64_t)&v230 - v60;
  v61 = MEMORY[0x1E0C80A78](v59);
  v275 = (uint64_t)&v230 - v62;
  v63 = MEMORY[0x1E0C80A78](v61);
  v256 = (uint64_t)&v230 - v64;
  v65 = MEMORY[0x1E0C80A78](v63);
  v248 = (uint64_t)&v230 - v66;
  v67 = MEMORY[0x1E0C80A78](v65);
  v69 = (char *)&v230 - v68;
  MEMORY[0x1E0C80A78](v67);
  v276 = (uint64_t)&v230 - v70;
  v71 = type metadata accessor for DispatchPredicate();
  v72 = *(_QWORD *)(v71 - 8);
  MEMORY[0x1E0C80A78](v71);
  v74 = (uint64_t *)((char *)&v230 - ((v73 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for OS_dispatch_queue();
  *v74 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v72 + 104))(v74, *MEMORY[0x1E0DEF740], v71);
  v75 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v72 + 8))(v74, v71);
  if ((v75 & 1) == 0)
    goto LABEL_131;
  v243 = v28;
  v230 = a1;
  v76 = (uint64_t *)(a1 + OBJC_IVAR____TtC15ConversationKit36ParticipantsCollectionViewDataSource_offlineParticipants);
  swift_beginAccess();
  v269 = v76;
  v77 = *(_QWORD *)(*v76 + 16) - 1;
  v78 = swift_bridgeObjectRetain();
  v254 = 0;
  v255 = a4;
  v260 = xmmword_1BD645380;
  v274 = xmmword_1BD6441D0;
  v79 = v261;
  v80 = v265;
  for (i = v78; ; v78 = i)
  {
    if (v77 > 0)
    {
      v81 = v77 - 1;
      goto LABEL_7;
    }
    if ((v77 != 0) | v254 & 1)
      break;
    v81 = 0;
    v254 = 1;
LABEL_7:
    if ((unint64_t)v77 >= *(_QWORD *)(v78 + 16))
    {
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      _fatalErrorMessage(_:_:file:line:flags:)();
      __break(1u);
      result = swift_release();
      __break(1u);
      return result;
    }
    v271 = (uint64_t *)v81;
    v82 = (*(unsigned __int8 *)(v270 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v270 + 80);
    v83 = *(_QWORD *)(v270 + 72);
    v268 = v83 * v77;
    _s15ConversationKit11ParticipantVWOcTm_2(v78 + v82 + v83 * v77, v276, type metadata accessor for Participant);
    v84 = *(_QWORD *)(v79 + 16);
    if (v84)
    {
      v85 = v82;
      v86 = v79 + v82;
      swift_bridgeObjectRetain();
      while (1)
      {
        _s15ConversationKit11ParticipantVWOcTm_2(v86, (uint64_t)v69, type metadata accessor for Participant);
        v87 = static UUID.== infix(_:_:)();
        outlined destroy of AccountUpdateNotice((uint64_t)v69, type metadata accessor for Participant);
        if ((v87 & 1) != 0)
          break;
        v86 += v83;
        if (!--v84)
        {
          swift_bridgeObjectRelease();
          v82 = v85;
          goto LABEL_13;
        }
      }
      v79 = v261;
      swift_bridgeObjectRelease();
    }
    else
    {
LABEL_13:
      j = v82;
      if (one-time initialization token for conversationKit != -1)
        swift_once();
      v262 = static OS_os_log.conversationKit;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v88 = swift_allocObject();
      *(_OWORD *)(v88 + 16) = v260;
      v89 = (void (*)(_QWORD, _QWORD))v263;
      _s15ConversationKit11ParticipantVWOcTm_2(v276, (uint64_t)v263, type metadata accessor for Participant);
      __swift_storeEnumTagSinglePayload((uint64_t)v89, 0, 1, v38);
      v90 = (uint64_t)v89;
      v91 = v252;
      outlined init with copy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v90, v252, &demangling cache variable for type metadata for Participant?);
      if (__swift_getEnumTagSinglePayload(v91, 1, v38) == 1)
      {
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v91, &demangling cache variable for type metadata for Participant?);
        v92 = 0xE300000000000000;
        v93 = 7104878;
      }
      else
      {
        v94 = v248;
        outlined init with take of Participant(v91, v248);
        _s15ConversationKit11ParticipantVWOcTm_2(v94, v256, type metadata accessor for Participant);
        v93 = String.init<A>(reflecting:)();
        v92 = v95;
        outlined destroy of AccountUpdateNotice(v94, type metadata accessor for Participant);
      }
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v263, &demangling cache variable for type metadata for Participant?);
      v96 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v88 + 56) = MEMORY[0x1E0DEA968];
      v97 = lazy protocol witness table accessor for type String and conformance String();
      *(_QWORD *)(v88 + 64) = v97;
      *(_QWORD *)(v88 + 32) = v93;
      *(_QWORD *)(v88 + 40) = v92;
      v279 = v77;
      v98 = String.init<A>(reflecting:)();
      *(_QWORD *)(v88 + 96) = v96;
      *(_QWORD *)(v88 + 104) = v97;
      *(_QWORD *)(v88 + 72) = v98;
      *(_QWORD *)(v88 + 80) = v99;
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();
      swift_bridgeObjectRelease();
      v100 = v269;
      swift_beginAccess();
      v101 = *v100;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v101 = specialized _ArrayBuffer._consumeAndCreateNew()();
      v102 = *(_QWORD *)(v101 + 16);
      if (v77 >= v102)
        goto LABEL_125;
      v103 = v102 - 1;
      v104 = v101 + j + v268;
      outlined destroy of AccountUpdateNotice(v104, type metadata accessor for Participant);
      if (v103 - v77 < 0)
        goto LABEL_132;
      if (v83 > 0 || v104 >= v104 + v83 + (v103 - v77) * v83)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (v83)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      *(_QWORD *)(v101 + 16) = v103;
      *v269 = v101;
      swift_endAccess();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<IndexPath>);
      *(_OWORD *)(swift_allocObject() + 16) = v274;
      MEMORY[0x1C3B70094](v77, 1);
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      objc_msgSend(v264, sel_deleteItemsAtIndexPaths_, isa);

      v79 = v261;
    }
    outlined destroy of AccountUpdateNotice(v276, type metadata accessor for Participant);
    v77 = (uint64_t)v271;
    v80 = v265;
  }
  swift_bridgeObjectRelease();
  v107 = (uint64_t *)(v230 + OBJC_IVAR____TtC15ConversationKit36ParticipantsCollectionViewDataSource_onlineParticipants);
  swift_beginAccess();
  v271 = v107;
  v108 = *v107;
  v278 = MEMORY[0x1E0DEE9D8];
  v109 = *(_QWORD *)(v108 + 16) - 1;
  v110 = swift_bridgeObjectRetain();
  LODWORD(i) = 0;
  v276 = v38;
  v111 = v255;
  for (j = v110; ; v110 = j)
  {
    if (v109 > 0)
    {
      v112 = v109 - 1;
      goto LABEL_38;
    }
    if ((v109 != 0) | i & 1)
      break;
    v112 = 0;
    LODWORD(i) = 1;
LABEL_38:
    if ((unint64_t)v109 >= *(_QWORD *)(v110 + 16))
      goto LABEL_124;
    v268 = v112;
    v113 = (uint64_t *)((*(unsigned __int8 *)(v270 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v270 + 80));
    v114 = *(_QWORD *)(v270 + 72);
    v262 = v114 * v109;
    _s15ConversationKit11ParticipantVWOcTm_2((uint64_t)v113 + v110 + v114 * v109, v275, type metadata accessor for Participant);
    v115 = *(_QWORD *)(v111 + 16);
    v263 = v113;
    if (v115)
    {
      v116 = (uint64_t)v113 + v111;
      v117 = v111;
      swift_bridgeObjectRetain();
      while (1)
      {
        _s15ConversationKit11ParticipantVWOcTm_2(v116, v80, type metadata accessor for Participant);
        v118 = static UUID.== infix(_:_:)();
        outlined destroy of AccountUpdateNotice(v80, type metadata accessor for Participant);
        if ((v118 & 1) != 0)
          break;
        v116 += v114;
        if (!--v115)
        {
          swift_bridgeObjectRelease();
          goto LABEL_44;
        }
      }
      v111 = v117;
      swift_bridgeObjectRelease();
    }
    else
    {
LABEL_44:
      if (one-time initialization token for conversationKit != -1)
        swift_once();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v119 = swift_allocObject();
      *(_OWORD *)(v119 + 16) = v260;
      v120 = v258;
      _s15ConversationKit11ParticipantVWOcTm_2(v275, v258, type metadata accessor for Participant);
      __swift_storeEnumTagSinglePayload(v120, 0, 1, v38);
      v121 = v120;
      v122 = v251;
      outlined init with copy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v121, v251, &demangling cache variable for type metadata for Participant?);
      if (__swift_getEnumTagSinglePayload(v122, 1, v38) == 1)
      {
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v122, &demangling cache variable for type metadata for Participant?);
        v123 = 0xE300000000000000;
        v124 = 7104878;
      }
      else
      {
        v125 = v247;
        outlined init with take of Participant(v122, v247);
        _s15ConversationKit11ParticipantVWOcTm_2(v125, v256, type metadata accessor for Participant);
        v124 = String.init<A>(reflecting:)();
        v123 = v126;
        outlined destroy of AccountUpdateNotice(v125, type metadata accessor for Participant);
      }
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v258, &demangling cache variable for type metadata for Participant?);
      v127 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v119 + 56) = MEMORY[0x1E0DEA968];
      v128 = lazy protocol witness table accessor for type String and conformance String();
      *(_QWORD *)(v119 + 64) = v128;
      *(_QWORD *)(v119 + 32) = v124;
      *(_QWORD *)(v119 + 40) = v123;
      v277 = v109;
      v129 = String.init<A>(reflecting:)();
      *(_QWORD *)(v119 + 96) = v127;
      *(_QWORD *)(v119 + 104) = v128;
      *(_QWORD *)(v119 + 72) = v129;
      *(_QWORD *)(v119 + 80) = v130;
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();
      swift_bridgeObjectRelease();
      v131 = v271;
      swift_beginAccess();
      v132 = *v131;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v132 = specialized _ArrayBuffer._consumeAndCreateNew()();
      v133 = *(_QWORD *)(v132 + 16);
      if (v109 >= v133)
        goto LABEL_126;
      v134 = v133 - 1;
      v135 = (unint64_t)v263 + v132 + v262;
      outlined destroy of AccountUpdateNotice(v135, type metadata accessor for Participant);
      if (v134 - v109 < 0)
        goto LABEL_132;
      if (v114 > 0 || v135 >= v135 + v114 + (v134 - v109) * v114)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (v114)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      *(_QWORD *)(v132 + 16) = v134;
      *v271 = v132;
      swift_endAccess();
      v137 = v253;
      MEMORY[0x1C3B70094](v109, 0);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<IndexPath>);
      v138 = v266;
      v139 = (*(unsigned __int8 *)(v266 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v266 + 80);
      v140 = swift_allocObject();
      *(_OWORD *)(v140 + 16) = v274;
      v141 = *(void (**)(unint64_t, char *, uint64_t))(v138 + 16);
      v142 = v267;
      v141(v140 + v139, v137, v267);
      specialized Array.append<A>(contentsOf:)();
      v143 = swift_allocObject();
      *(_OWORD *)(v143 + 16) = v274;
      v141(v143 + v139, v137, v142);
      v144 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      objc_msgSend(v264, sel_deleteItemsAtIndexPaths_, v144);

      v145 = v137;
      v38 = v276;
      (*(void (**)(char *, uint64_t))(v138 + 8))(v145, v142);
      v111 = v255;
      v80 = v265;
    }
    outlined destroy of AccountUpdateNotice(v275, type metadata accessor for Participant);
    v109 = v268;
  }
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v278 + 16))
  {
    v277 = v278;
    swift_bridgeObjectRetain_n();
    specialized MutableCollection<>.sort(by:)(&v277);
    v146 = v261;
    swift_bridgeObjectRelease_n();
    v278 = v277;
  }
  else
  {
    v146 = v261;
  }
  j = 0;
  v275 = *(_QWORD *)(v146 + 16);
  if (v275)
  {
    v147 = v270;
    v148 = (*(unsigned __int8 *)(v270 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v270 + 80);
    v268 = v146 + v148;
    swift_bridgeObjectRetain();
    v149 = 0;
    v150 = *(_QWORD *)(v147 + 72);
    v151 = v249;
    do
    {
      _s15ConversationKit11ParticipantVWOcTm_2(v268 + v150 * v149, v151, type metadata accessor for Participant);
      v152 = *(_QWORD *)(*v269 + 16);
      if (v152)
      {
        v153 = *v269 + v148;
        swift_bridgeObjectRetain();
        while (1)
        {
          v154 = v273;
          _s15ConversationKit11ParticipantVWOcTm_2(v153, v273, type metadata accessor for Participant);
          v155 = static UUID.== infix(_:_:)();
          outlined destroy of AccountUpdateNotice(v154, type metadata accessor for Participant);
          if ((v155 & 1) != 0)
            break;
          v153 += v150;
          if (!--v152)
          {
            swift_bridgeObjectRelease();
            v151 = v249;
            goto LABEL_74;
          }
        }
        swift_bridgeObjectRelease();
      }
      else
      {
LABEL_74:
        if (one-time initialization token for conversationKit != -1)
          swift_once();
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
        v156 = swift_allocObject();
        *(_OWORD *)(v156 + 16) = v274;
        v157 = v246;
        _s15ConversationKit11ParticipantVWOcTm_2(v151, v246, type metadata accessor for Participant);
        v158 = v276;
        __swift_storeEnumTagSinglePayload(v157, 0, 1, v276);
        v159 = v157;
        v160 = (uint64_t)v243;
        outlined init with copy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v159, (uint64_t)v243, &demangling cache variable for type metadata for Participant?);
        if (__swift_getEnumTagSinglePayload(v160, 1, v158) == 1)
        {
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v160, &demangling cache variable for type metadata for Participant?);
          v161 = 0xE300000000000000;
          v162 = 7104878;
        }
        else
        {
          v163 = v239;
          outlined init with take of Participant(v160, v239);
          _s15ConversationKit11ParticipantVWOcTm_2(v163, v256, type metadata accessor for Participant);
          v162 = String.init<A>(reflecting:)();
          v161 = v164;
          outlined destroy of AccountUpdateNotice(v163, type metadata accessor for Participant);
        }
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v246, &demangling cache variable for type metadata for Participant?);
        *(_QWORD *)(v156 + 56) = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v156 + 64) = lazy protocol witness table accessor for type String and conformance String();
        *(_QWORD *)(v156 + 32) = v162;
        *(_QWORD *)(v156 + 40) = v161;
        static os_log_type_t.default.getter();
        os_log(_:dso:log:type:_:)();
        swift_bridgeObjectRelease();
        _s15ConversationKit11ParticipantVWOcTm_2(v249, v245, type metadata accessor for Participant);
        v165 = v269;
        swift_beginAccess();
        v166 = *v165;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *v165 = v166;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v166 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          *v269 = v166;
        }
        v168 = *(_QWORD *)(v166 + 16);
        if (v168 >= *(_QWORD *)(v166 + 24) >> 1)
        {
          v166 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          *v269 = v166;
        }
        *(_QWORD *)(v166 + 16) = v168 + 1;
        outlined init with take of Participant(v245, v166 + v148 + v168 * v150);
        v169 = *v269;
        swift_endAccess();
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<IndexPath>);
        *(_OWORD *)(swift_allocObject() + 16) = v274;
        MEMORY[0x1C3B70094](*(_QWORD *)(v169 + 16) - 1, 1);
        v170 = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        objc_msgSend(v264, sel_insertItemsAtIndexPaths_, v170);

      }
      ++v149;
      v151 = v249;
      outlined destroy of AccountUpdateNotice(v249, type metadata accessor for Participant);
    }
    while (v149 != v275);
    swift_bridgeObjectRelease();
    v111 = v255;
  }
  v171 = v250;
  v269 = *(uint64_t **)(v111 + 16);
  if (v269)
  {
    v273 = (*(unsigned __int8 *)(v270 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v270 + 80);
    v268 = v111 + v273;
    v172 = *(_QWORD *)(v270 + 72);
    swift_bridgeObjectRetain();
    v275 = 0;
    v173 = 0;
    do
    {
      _s15ConversationKit11ParticipantVWOcTm_2(v268 + v172 * (_QWORD)v173, v171, type metadata accessor for Participant);
      v174 = *(_QWORD *)(*v271 + 16);
      if (v174)
      {
        v175 = *v271 + v273;
        swift_bridgeObjectRetain();
        while (1)
        {
          v176 = v272;
          _s15ConversationKit11ParticipantVWOcTm_2(v175, v272, type metadata accessor for Participant);
          v177 = static UUID.== infix(_:_:)();
          outlined destroy of AccountUpdateNotice(v176, type metadata accessor for Participant);
          if ((v177 & 1) != 0)
            break;
          v175 += v172;
          if (!--v174)
          {
            swift_bridgeObjectRelease();
            goto LABEL_94;
          }
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        if (v275 >= *(_QWORD *)(v278 + 16))
          goto LABEL_97;
LABEL_94:
        if (v275 < 0)
          goto LABEL_127;
        v178 = v266;
        v270 = *(unsigned __int8 *)(v266 + 80);
        v179 = (v270 + 32) & ~v270;
        v265 = *(_QWORD *)(v266 + 72);
        v180 = v265 * v275;
        v181 = *(void (**)(char *, uint64_t, uint64_t))(v266 + 16);
        v182 = v253;
        v183 = v267;
        v181(v253, v278 + v179 + v265 * v275, v267);
        v184 = IndexPath.item.getter();
        v185 = *(void (**)(char *, uint64_t))(v178 + 8);
        v186 = v183;
        v187 = v240;
        v185(v182, v186);
        if (*(_QWORD *)(*v271 + 16) >= v184)
        {
          if ((unint64_t)v275 >= *(_QWORD *)(v278 + 16))
            goto LABEL_128;
          v263 = (uint64_t *)v185;
          v261 = v179;
          v202 = v267;
          v181(v187, v278 + v179 + v180, v267);
          if (one-time initialization token for conversationKit != -1)
            swift_once();
          v203 = static OS_os_log.conversationKit;
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
          v204 = swift_allocObject();
          *(_OWORD *)(v204 + 16) = v260;
          v205 = (uint64_t)v238;
          v181(v238, (uint64_t)v187, v202);
          __swift_storeEnumTagSinglePayload(v205, 0, 1, v202);
          v206 = v205;
          v207 = v235;
          outlined init with copy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v206, v235, (uint64_t *)&demangling cache variable for type metadata for IndexPath?);
          EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v207, 1, v202);
          v262 = v203;
          if (EnumTagSinglePayload == 1)
          {
            outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v207, (uint64_t *)&demangling cache variable for type metadata for IndexPath?);
            v209 = 0xE300000000000000;
            v210 = 7104878;
          }
          else
          {
            v211 = v232;
            (*(void (**)(char *, uint64_t, uint64_t))(v266 + 32))(v232, v207, v202);
            v181(v253, (uint64_t)v211, v202);
            v210 = String.init<A>(reflecting:)();
            v209 = v212;
            ((void (*)(char *, uint64_t))v263)(v211, v202);
          }
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v238, (uint64_t *)&demangling cache variable for type metadata for IndexPath?);
          *(_QWORD *)(v204 + 56) = MEMORY[0x1E0DEA968];
          v213 = lazy protocol witness table accessor for type String and conformance String();
          *(_QWORD *)(v204 + 64) = v213;
          *(_QWORD *)(v204 + 32) = v210;
          *(_QWORD *)(v204 + 40) = v209;
          v214 = v237;
          _s15ConversationKit11ParticipantVWOcTm_2(v250, v237, type metadata accessor for Participant);
          v215 = v276;
          __swift_storeEnumTagSinglePayload(v214, 0, 1, v276);
          v216 = v214;
          v217 = v234;
          outlined init with copy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v216, v234, &demangling cache variable for type metadata for Participant?);
          if (__swift_getEnumTagSinglePayload(v217, 1, v215) == 1)
          {
            outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v217, &demangling cache variable for type metadata for Participant?);
            v218 = 0xE300000000000000;
            v219 = 7104878;
          }
          else
          {
            v220 = v231;
            outlined init with take of Participant(v217, v231);
            _s15ConversationKit11ParticipantVWOcTm_2(v220, v256, type metadata accessor for Participant);
            v219 = String.init<A>(reflecting:)();
            v218 = v221;
            outlined destroy of AccountUpdateNotice(v220, type metadata accessor for Participant);
          }
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v237, &demangling cache variable for type metadata for Participant?);
          *(_QWORD *)(v204 + 96) = MEMORY[0x1E0DEA968];
          *(_QWORD *)(v204 + 104) = v213;
          *(_QWORD *)(v204 + 72) = v219;
          *(_QWORD *)(v204 + 80) = v218;
          static os_log_type_t.default.getter();
          os_log(_:dso:log:type:_:)();
          swift_bridgeObjectRelease();
          v222 = v240;
          v223 = IndexPath.item.getter();
          v224 = v271;
          swift_beginAccess();
          if (*(_QWORD *)(*v224 + 16) < v223)
            goto LABEL_129;
          if (v223 < 0)
            goto LABEL_130;
          _s15ConversationKit11ParticipantVWOcTm_2(v250, v233, type metadata accessor for Participant);
          specialized Array.replaceSubrange<A>(_:with:)();
          swift_endAccess();
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<IndexPath>);
          v225 = v261;
          v226 = swift_allocObject();
          *(_OWORD *)(v226 + 16) = v274;
          v227 = v267;
          v181((char *)(v226 + v225), (uint64_t)v222, v267);
          v228 = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          objc_msgSend(v264, sel_insertItemsAtIndexPaths_, v228);

          ((void (*)(char *, uint64_t))v263)(v222, v227);
          ++v275;
        }
        else
        {
LABEL_97:
          if (one-time initialization token for conversationKit != -1)
            swift_once();
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
          v188 = swift_allocObject();
          *(_OWORD *)(v188 + 16) = v274;
          v189 = v241;
          _s15ConversationKit11ParticipantVWOcTm_2(v250, v241, type metadata accessor for Participant);
          v190 = v276;
          __swift_storeEnumTagSinglePayload(v189, 0, 1, v276);
          v191 = v242;
          outlined init with copy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v189, v242, &demangling cache variable for type metadata for Participant?);
          if (__swift_getEnumTagSinglePayload(v191, 1, v190) == 1)
          {
            outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v191, &demangling cache variable for type metadata for Participant?);
            v192 = 0xE300000000000000;
            v193 = 7104878;
          }
          else
          {
            v194 = v236;
            outlined init with take of Participant(v191, v236);
            _s15ConversationKit11ParticipantVWOcTm_2(v194, v256, type metadata accessor for Participant);
            v193 = String.init<A>(reflecting:)();
            v192 = v195;
            outlined destroy of AccountUpdateNotice(v194, type metadata accessor for Participant);
          }
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v189, &demangling cache variable for type metadata for Participant?);
          *(_QWORD *)(v188 + 56) = MEMORY[0x1E0DEA968];
          *(_QWORD *)(v188 + 64) = lazy protocol witness table accessor for type String and conformance String();
          *(_QWORD *)(v188 + 32) = v193;
          *(_QWORD *)(v188 + 40) = v192;
          static os_log_type_t.default.getter();
          os_log(_:dso:log:type:_:)();
          swift_bridgeObjectRelease();
          _s15ConversationKit11ParticipantVWOcTm_2(v250, v244, type metadata accessor for Participant);
          v196 = v271;
          swift_beginAccess();
          v197 = *v196;
          v198 = swift_isUniquelyReferenced_nonNull_native();
          *v196 = v197;
          if ((v198 & 1) == 0)
          {
            v197 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
            *v271 = v197;
          }
          v199 = *(_QWORD *)(v197 + 16);
          if (v199 >= *(_QWORD *)(v197 + 24) >> 1)
          {
            v197 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
            *v271 = v197;
          }
          *(_QWORD *)(v197 + 16) = v199 + 1;
          outlined init with take of Participant(v244, v197 + v273 + v199 * v172);
          v200 = *v271;
          swift_endAccess();
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<IndexPath>);
          *(_OWORD *)(swift_allocObject() + 16) = v274;
          MEMORY[0x1C3B70094](*(_QWORD *)(v200 + 16) - 1, 0);
          v201 = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          objc_msgSend(v264, sel_insertItemsAtIndexPaths_, v201);

        }
      }
      v173 = (uint64_t *)((char *)v173 + 1);
      v171 = v250;
      outlined destroy of AccountUpdateNotice(v250, type metadata accessor for Participant);
    }
    while (v173 != v269);
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t closure #2 in ParticipantsCollectionViewDataSource.set(_:in:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  Class isa;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int EnumTagSinglePayload;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[2];
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v7);
  v39 = (uint64_t)v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for IndexPath?);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for IndexPath();
  v43 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v42 = (char *)v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = type metadata accessor for Participant(0);
  v14 = MEMORY[0x1E0C80A78](v44);
  v36 = (uint64_t)v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v14);
  v19 = (char *)v35 - v18;
  v20 = *(_QWORD *)(a2 + 16);
  if (v20)
  {
    v21 = a2 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
    v22 = *(_QWORD *)(v17 + 72);
    v35[1] = a2;
    swift_bridgeObjectRetain();
    v40 = 0;
    v37 = a3;
    v38 = a4;
    v41 = v22;
    while (1)
    {
      _s15ConversationKit11ParticipantVWOcTm_2(v21, (uint64_t)v19, type metadata accessor for Participant);
      ParticipantsCollectionViewDataSource.indexPath(of:)((uint64_t)&v19[*(int *)(v44 + 20)], (uint64_t)v11);
      if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12) != 1)
        break;
      outlined destroy of AccountUpdateNotice((uint64_t)v19, type metadata accessor for Participant);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v11, (uint64_t *)&demangling cache variable for type metadata for IndexPath?);
LABEL_14:
      v21 += v22;
      if (!--v20)
        return swift_bridgeObjectRelease();
    }
    (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v42, v11, v12);
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    v24 = objc_msgSend(a4, sel_cellForItemAtIndexPath_, isa);

    if (v24)
    {
      type metadata accessor for ParticipantCell();
      v25 = swift_dynamicCastClass();
      if (v25)
      {
        v26 = v25;
        v27 = ParticipantsCollectionViewDataSource.participants.getter();
        MEMORY[0x1E0C80A78](v27);
        v35[-2] = v19;
        v28 = v40;
        specialized _ArrayProtocol.filter(_:)((uint64_t (*)(char *))partial apply for closure #1 in ParticipantGridViewController.updateProminenceEMA(withParticipant:ema:audioPriority:videoPriority:), (uint64_t)&v35[-4], v29);
        v30 = v39;
        specialized Collection.first.getter(v31, v39);
        swift_bridgeObjectRelease();
        EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v30, 1, v44);
        v40 = v28;
        if (EnumTagSinglePayload == 1)
        {
          (*(void (**)(char *, uint64_t))(v43 + 8))(v42, v12);

          outlined destroy of AccountUpdateNotice((uint64_t)v19, type metadata accessor for Participant);
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v30, &demangling cache variable for type metadata for Participant?);
        }
        else
        {
          v33 = v30;
          v34 = v36;
          outlined init with take of Participant(v33, v36);
          ParticipantsCollectionViewDataSource.configureCell(_:with:)(v26, v34);

          outlined destroy of AccountUpdateNotice(v34, type metadata accessor for Participant);
          (*(void (**)(char *, uint64_t))(v43 + 8))(v42, v12);
          outlined destroy of AccountUpdateNotice((uint64_t)v19, type metadata accessor for Participant);
        }
        a4 = v38;
        goto LABEL_13;
      }

    }
    (*(void (**)(char *, uint64_t))(v43 + 8))(v42, v12);
    outlined destroy of AccountUpdateNotice((uint64_t)v19, type metadata accessor for Participant);
LABEL_13:
    v22 = v41;
    goto LABEL_14;
  }
  return result;
}

uint64_t closure #1 in ParticipantsCollectionViewDataSource.indexPath(of:)()
{
  type metadata accessor for Participant(0);
  return static UUID.== infix(_:_:)() & 1;
}

Swift::Int __swiftcall ParticipantsCollectionViewDataSource.numberOfItemsInSection(_:)(Swift::Int a1)
{
  Swift::Int result;

  if ((unint64_t)a1 <= 1)
    OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_32();
  return result;
}

id ParticipantsCollectionViewDataSource.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void ParticipantsCollectionViewDataSource.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id ParticipantsCollectionViewDataSource.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

Swift::Int __swiftcall ParticipantsCollectionViewDataSource.numberOfSections(in:)(UICollectionView *in)
{
  return 2;
}

Swift::Int __swiftcall ParticipantsCollectionViewDataSource.collectionView(_:numberOfItemsInSection:)(UICollectionView *_, Swift::Int numberOfItemsInSection)
{
  return ParticipantsCollectionViewDataSource.numberOfItemsInSection(_:)(numberOfItemsInSection);
}

uint64_t ParticipantsCollectionViewDataSource._collectionView(_:cellForItemAt:)(void *a1, id a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  void *v17;
  Class isa;
  uint64_t v19;
  uint64_t v20;
  void (**v21)(uint64_t, char *);
  void (*v22)(uint64_t, char *);
  uint64_t result;
  Swift::String v24;
  _QWORD v25[3];
  unint64_t v26;
  unint64_t v27;

  v3 = v2;
  v6 = type metadata accessor for IndexPath();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (unint64_t)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Participant(0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = IndexPath.section.getter();
  if (v14 == 1)
    LODWORD(v15) = 1;
  else
    LODWORD(v15) = 2;
  if (!v14)
    LODWORD(v15) = 0;
  if (!(_DWORD)v15)
  {
    v9 = IndexPath.item.getter();
    v6 = v3 + OBJC_IVAR____TtC15ConversationKit36ParticipantsCollectionViewDataSource_onlineParticipants;
    swift_beginAccess();
    if ((v9 & 0x8000000000000000) != 0)
    {
      __break(1u);
LABEL_21:
      __break(1u);
      goto LABEL_22;
    }
    v15 = *(_QWORD *)v6;
    if (v9 < *(_QWORD *)(*(_QWORD *)v6 + 16))
      goto LABEL_13;
    __break(1u);
  }
  if ((_DWORD)v15 == 2)
  {
    (*(void (**)(unint64_t, id, uint64_t))(v7 + 16))(v9, a2, v6);
    v26 = 0;
    v27 = 0xE000000000000000;
    _StringGuts.grow(_:)(18);
    swift_bridgeObjectRelease();
    v26 = 0xD000000000000010;
    v27 = 0x80000001BD68DAC0;
    v25[0] = IndexPath.section.getter();
    v24._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v24);
    swift_bridgeObjectRelease();
    goto LABEL_25;
  }
  v9 = IndexPath.item.getter();
  v16 = (uint64_t *)(v3 + OBJC_IVAR____TtC15ConversationKit36ParticipantsCollectionViewDataSource_offlineParticipants);
  swift_beginAccess();
  if ((v9 & 0x8000000000000000) != 0)
    goto LABEL_21;
  v15 = *v16;
  if (v9 >= *(_QWORD *)(*v16 + 16))
  {
LABEL_22:
    __break(1u);
LABEL_23:

LABEL_25:
    result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
LABEL_13:
  _s15ConversationKit11ParticipantVWOcTm_2(v15+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(_QWORD *)(v11 + 72) * v9, (uint64_t)v13, type metadata accessor for Participant);
  if (one-time initialization token for reuseIdentifier != -1)
    swift_once();
  v17 = (void *)MEMORY[0x1C3B72E00](static ParticipantCell.reuseIdentifier, *(_QWORD *)algn_1EF4FCAC8);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  a2 = objc_msgSend(a1, sel_dequeueReusableCellWithReuseIdentifier_forIndexPath_, v17, isa);

  type metadata accessor for ParticipantCell();
  v19 = swift_dynamicCastClass();
  if (!v19)
    goto LABEL_23;
  v20 = v19;
  ParticipantsCollectionViewDataSource.configureCell(_:with:)(v19, (uint64_t)v13);
  v21 = (void (**)(uint64_t, char *))(v3
                                              + OBJC_IVAR____TtC15ConversationKit36ParticipantsCollectionViewDataSource_didCreateCellForParticipant);
  swift_beginAccess();
  v22 = *v21;
  if (*v21)
  {
    swift_endAccess();
    swift_retain();
    v22(v20, v13);
    outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v22);
    outlined destroy of AccountUpdateNotice((uint64_t)v13, type metadata accessor for Participant);
  }
  else
  {
    outlined destroy of AccountUpdateNotice((uint64_t)v13, type metadata accessor for Participant);
    swift_endAccess();
  }
  return v20;
}

uint64_t partial apply for closure #2 in ParticipantsCollectionViewDataSource.indexPath(of:)()
{
  return closure #1 in ParticipantsCollectionViewDataSource.indexPath(of:)() & 1;
}

uint64_t sub_1BD48A978()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ParticipantsCollectionViewDataSource.set(_:in:)()
{
  uint64_t v0;

  return closure #1 in ParticipantsCollectionViewDataSource.set(_:in:)(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_1BD48A9C4()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in ParticipantsCollectionViewDataSource.set(_:in:)(uint64_t a1)
{
  uint64_t v1;

  return closure #2 in ParticipantsCollectionViewDataSource.set(_:in:)(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32));
}

unint64_t lazy protocol witness table accessor for type ParticipantsCollectionViewDataSource.SectionType and conformance ParticipantsCollectionViewDataSource.SectionType()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ParticipantsCollectionViewDataSource.SectionType and conformance ParticipantsCollectionViewDataSource.SectionType;
  if (!lazy protocol witness table cache variable for type ParticipantsCollectionViewDataSource.SectionType and conformance ParticipantsCollectionViewDataSource.SectionType)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ParticipantsCollectionViewDataSource.SectionType, &type metadata for ParticipantsCollectionViewDataSource.SectionType);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ParticipantsCollectionViewDataSource.SectionType and conformance ParticipantsCollectionViewDataSource.SectionType);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type [ParticipantsCollectionViewDataSource.SectionType] and conformance [A]()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type [ParticipantsCollectionViewDataSource.SectionType] and conformance [A];
  if (!lazy protocol witness table cache variable for type [ParticipantsCollectionViewDataSource.SectionType] and conformance [A])
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [ParticipantsCollectionViewDataSource.SectionType]);
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type [ParticipantsCollectionViewDataSource.SectionType] and conformance [A]);
  }
  return result;
}

uint64_t type metadata accessor for ParticipantsCollectionViewDataSource()
{
  return objc_opt_self();
}

uint64_t method lookup function for ParticipantsCollectionViewDataSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ParticipantsCollectionViewDataSource.__allocating_init(participants:participantIsShownInGrid:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t storeEnumTagSinglePayload for ParticipantsCollectionViewDataSource.SectionType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BD48AB14 + 4 * byte_1BD662675[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BD48AB48 + 4 * byte_1BD662670[v4]))();
}

uint64_t sub_1BD48AB48(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD48AB50(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD48AB58);
  return result;
}

uint64_t sub_1BD48AB64(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD48AB6CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BD48AB70(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD48AB78(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ParticipantsCollectionViewDataSource.SectionType()
{
  return &type metadata for ParticipantsCollectionViewDataSource.SectionType;
}

uint64_t sub_1BD48AB94()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BD48ABB8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = *(_QWORD *)(OUTLINED_FUNCTION_8_108() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = (int *)OUTLINED_FUNCTION_14_2();
  v5 = *((_QWORD *)v4 - 1);
  v6 = (v2 + v3 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  OUTLINED_FUNCTION_101(v0 + v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  v8 = v0 + v6;
  type metadata accessor for Participant.State(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 5u:
      v9 = OUTLINED_FUNCTION_33();
      OUTLINED_FUNCTION_75(v9);
      break;
    case 4u:
      v16 = OUTLINED_FUNCTION_33();
      OUTLINED_FUNCTION_75(v16);
      v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      v18 = v8 + *(int *)(v17 + 48);
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v18 + 120) >= 2uLL)
        __swift_destroy_boxed_opaque_existential_1(v18 + 96);
      if (*(_QWORD *)(v18 + 312))
      {
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
      }
      if (*(_QWORD *)(v8 + *(int *)(v17 + 64) + 8))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      break;
    default:
      break;
  }
  v10 = v8 + v4[5];
  v11 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  v12 = (id *)(v8 + v4[7]);
  if (*v12)
  {

    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v13 = OUTLINED_FUNCTION_33();
  if (!OUTLINED_FUNCTION_7_23())
    OUTLINED_FUNCTION_40_0(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8));
  type metadata accessor for Participant.CountdownInfo(0);
  if (!OUTLINED_FUNCTION_7_23())
    OUTLINED_FUNCTION_40_0(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8));
  v14 = (v7 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ParticipantsCollectionViewDataSource.updateExistingRosterParticipant(_:at:in:)()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v1 = *(_QWORD *)(OUTLINED_FUNCTION_8_108() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(_QWORD *)(OUTLINED_FUNCTION_14_2() - 8);
  v5 = (v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  return closure #1 in ParticipantsCollectionViewDataSource.updateExistingRosterParticipant(_:at:in:)(v0 + v2, v0 + v5, *(_QWORD *)(v0 + v6), *(void **)(v0 + ((v6 + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t partial apply for closure #1 in ParticipantsCollectionViewDataSource.indexPath(of:)()
{
  return partial apply for closure #2 in ParticipantsCollectionViewDataSource.indexPath(of:)() & 1;
}

void ConversationControlsMenuButtonProvider.init(controlsManager:context:shape:menuHostViewController:)()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  char v3;
  char v4;
  uint64_t v5;

  OUTLINED_FUNCTION_7_26();
  *(_QWORD *)(v1 + 152) = 0;
  swift_unknownObjectWeakInit();
  swift_beginAccess();
  *(_QWORD *)(v1 + 152) = v0;
  swift_unknownObjectWeakAssign();

  *(_QWORD *)(v1 + 136) = v5;
  ControlsButtonProvider.init(context:shape:)(v4, v3);
}

uint64_t ConversationControlsMenuButtonProvider.deinit()
{
  uint64_t v0;

  v0 = ControlsButtonProvider.deinit();

  outlined destroy of weak ConversationControlsCountdownJoinButtonDelegate?(v0 + 144);
  return v0;
}

uint64_t ConversationControlsMenuButtonProvider.menuDataSource.getter()
{
  uint64_t v0;

  if (((*(uint64_t (**)(void))(*(_QWORD *)v0 + 512))() & 1) == 0)
    return 0;
  swift_retain();
  return v0;
}

Swift::Void __swiftcall ConversationControlsMenuButtonProvider.updateButtonConfiguration()()
{
  uint64_t v0;
  void *v1;
  uint64_t (*v2)(void);
  id v3;
  id v4;

  ControlsButtonProvider.updateButtonConfiguration()();
  v1 = (void *)OUTLINED_FUNCTION_8_1();
  if (v1)
  {
    v2 = *(uint64_t (**)(void))(*(_QWORD *)v0 + 512);
    v3 = v1;
    objc_msgSend(v3, sel_setContextMenuInteractionEnabled_, v2() & 1);

    v4 = v3;
    objc_msgSend(v4, sel_setShowsMenuAsPrimaryAction_, v2() & 1);

  }
  else
  {
    OUTLINED_FUNCTION_45_0();
  }
}

void ConversationControlsMenuButtonProvider.buttonConfiguration.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;

  v0 = type metadata accessor for UIBackgroundConfiguration();
  MEMORY[0x1E0C80A78](v0);
  v1 = type metadata accessor for UIButton.Configuration();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  ControlsButtonProvider.defaultButtonConfiguration.getter((uint64_t)v4);
  v5 = (void *)OUTLINED_FUNCTION_8_1();
  if (v5)
  {
    v6 = v5;
    if (objc_msgSend(v5, sel_isSelected))
    {
      v7 = (void *)objc_opt_self();
      v8 = objc_msgSend(v7, sel_blackColor);
      UIButton.Configuration.baseForegroundColor.setter();
      v9 = objc_msgSend(v7, sel_whiteColor);
      OUTLINED_FUNCTION_1_141(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
      v10 = v9;
      static UIBackgroundConfiguration.clear()();
      UIButton.Configuration.background.setter();
      UIButton.Configuration.baseBackgroundColor.setter();

      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    }
    else
    {
      OUTLINED_FUNCTION_1_141(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 32));

    }
  }
  else
  {
    OUTLINED_FUNCTION_1_141(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 32));
  }
}

uint64_t ConversationControlsMenuButtonProvider.startedContextMenu(button:animator:)(void *a1)
{
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;

  ControlsButtonProvider.startedContextMenu(button:animator:)(a1);
  if (one-time initialization token for shared != -1)
    swift_once();
  v2 = *(void (**)(uint64_t))(*(_QWORD *)static ConversationHUDMenuController.shared + 96);
  v3 = swift_retain();
  v2(v3);
  return (*(uint64_t (**)(void))(*(_QWORD *)v1 + 552))();
}

uint64_t ConversationControlsMenuButtonProvider.endedContextMenu(button:animator:)(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[6];

  v3 = v2;
  ControlsButtonProvider.endedContextMenu(button:animator:)(a1, a2);
  if (a2)
  {
    v5 = swift_allocObject();
    swift_weakInit();
    v11[4] = partial apply for closure #1 in ConversationControlsMenuButtonProvider.endedContextMenu(button:animator:);
    v11[5] = v5;
    v11[0] = MEMORY[0x1E0C809B0];
    v11[1] = 1107296256;
    v11[2] = thunk for @escaping @callee_guaranteed () -> ();
    v11[3] = &block_descriptor_93;
    v6 = _Block_copy(v11);
    v7 = swift_release();
    OUTLINED_FUNCTION_10_34(v7, sel_addCompletion_);
    _Block_release(v6);
  }
  if (one-time initialization token for shared != -1)
    swift_once();
  v8 = (*(uint64_t (**)(void))(*(_QWORD *)static ConversationHUDMenuController.shared + 88))();
  if (v8)
  {
    v9 = v8;
    v8 = swift_release();
    if (v9 == v3)
      v8 = (*(uint64_t (**)(_QWORD))(*(_QWORD *)static ConversationHUDMenuController.shared + 96))(0);
  }
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 544))(v8);
}

void ConversationControlsMenuButtonProvider.__allocating_init(controlsManager:context:shape:)()
{
  OUTLINED_FUNCTION_5_125();
  __break(1u);
}

uint64_t ConversationControlsMenuButtonProvider.menuHostViewController.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return MEMORY[0x1C3B752C0](v0 + 144);
}

Swift::Void __swiftcall ConversationControlsMenuButtonProvider.dismissMenu(context:)(Swift::String context)
{
  uint64_t v1;
  uint64_t v2;
  void *object;
  uint64_t countAndFlagsBits;
  void *v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  NSObject *oslog;
  uint64_t v18;

  v2 = v1;
  object = context._object;
  countAndFlagsBits = context._countAndFlagsBits;
  v5 = (void *)OUTLINED_FUNCTION_12_4();

  if (v5)
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v6 = type metadata accessor for Logger();
    __swift_project_value_buffer(v6, (uint64_t)&static Logger.conversationControls);
    swift_bridgeObjectRetain_n();
    v7 = Logger.logObject.getter();
    v8 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)OUTLINED_FUNCTION_105();
      v18 = OUTLINED_FUNCTION_105();
      *(_DWORD *)v9 = 136315138;
      swift_bridgeObjectRetain();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(countAndFlagsBits, (unint64_t)object, &v18);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1BD004000, v7, v8, "Dismissing menu for %s", v9, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_60();
    }

    v13 = swift_bridgeObjectRelease_n();
    v14 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 168))(v13);
    if (v14)
    {
      v15 = v14;
      v16 = objc_msgSend(v14, sel_contextMenuInteraction);

      objc_msgSend(v16, sel_dismissMenu);
    }
  }
  else
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v10 = type metadata accessor for Logger();
    __swift_project_value_buffer(v10, (uint64_t)&static Logger.conversationControls);
    oslog = Logger.logObject.getter();
    v11 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(oslog, v11))
    {
      v12 = (uint8_t *)OUTLINED_FUNCTION_105();
      *(_WORD *)v12 = 0;
      _os_log_impl(&dword_1BD004000, oslog, v11, "Menu's containerView is gone, can't dismiss menu", v12, 2u);
      OUTLINED_FUNCTION_60();
    }

  }
}

Swift::Void __swiftcall ConversationControlsMenuButtonProvider.disableMenuContainerViewInteraction()()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t ObjectType;

  v0 = OUTLINED_FUNCTION_12_4();
  if (v0)
  {
    v2 = (void *)v0;
    v3 = v1;
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(ObjectType, v3);

  }
  OUTLINED_FUNCTION_45_0();
}

Swift::Void __swiftcall ConversationControlsMenuButtonProvider.scheduleDismissTimer()()
{
  uint64_t v0;

  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & **(_QWORD **)(v0 + 136)) + 0xA00))();
  OUTLINED_FUNCTION_0();
}

Swift::Void __swiftcall ConversationControlsMenuButtonProvider.invalidateDismissTimer()()
{
  uint64_t v0;

  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & **(_QWORD **)(v0 + 136)) + 0xA08))();
  OUTLINED_FUNCTION_0();
}

void *ConversationControlsMenuButtonProvider.menuStyle(for:existingStyle:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t (*v5)(void);
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t ObjectType;
  void *v12;

  if (a3)
  {
    v5 = *(uint64_t (**)(void))(*(_QWORD *)v3 + 488);
    v6 = a3;
    v7 = v5();
    if (v7)
    {
      v9 = (void *)v7;
      v10 = v8;
      ObjectType = swift_getObjectType();
      v12 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v10 + 16))(ObjectType, v10);

      if (v12)
      {
        OUTLINED_FUNCTION_10_34((uint64_t)objc_msgSend(v6, sel_setIgnoresContainerSizeChange_, 1), sel_setContainerView_);

      }
    }
  }
  return a3;
}

void *ConversationControlsMenuButtonProvider.attachmentPoint(for:configuration:)(uint64_t a1, uint64_t a2)
{
  void *result;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  double MidX;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double v17;
  double v18;
  double v19;
  double v20;
  id v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  BOOL v27;
  double MinX;
  uint64_t ObjectType;
  void *v30;
  double v31;
  double v32;
  id v33;
  double v34;
  CGFloat v35;
  double v36;
  CGFloat v37;
  double v38;
  CGFloat v39;
  double v40;
  CGFloat v41;
  CGFloat v42;
  CGFloat v43;
  char v44[280];
  CGRect v45;
  CGRect v46;
  CGRect v47;
  CGRect v48;
  CGRect v49;
  CGRect v50;
  CGRect v51;
  CGRect v52;

  result = (void *)OUTLINED_FUNCTION_8_1();
  if (!result)
    return result;
  v4 = result;
  v5 = objc_msgSend(result, sel_imageView);
  if (!v5)
  {

    return 0;
  }
  v6 = v5;
  v7 = (void *)OUTLINED_FUNCTION_12_4();
  if (!v7 || (v8 = v7, v9 = objc_msgSend(v7, sel_view), v8, !v9))
  {

    return 0;
  }
  v10 = objc_msgSend(v4, sel_window);
  if (!v10)
  {

    return 0;
  }
  v11 = v10;
  objc_msgSend(v9, sel_bounds);
  MidX = CGRectGetMidX(v45);
  objc_msgSend(v4, sel_bounds);
  v14 = v13;
  v16 = v15;
  v18 = v17;
  v20 = v19;
  v21 = v4;
  v46.origin.x = OUTLINED_FUNCTION_15_0();
  v22 = CGRectGetMidX(v46);
  v47.origin.x = OUTLINED_FUNCTION_15_0();
  objc_msgSend(v21, sel_convertPoint_toCoordinateSpace_, v9, v22, CGRectGetMidY(v47));
  v24 = v23;
  v26 = v25;

  v27 = MidX + -2.0 <= v24 && v24 < MidX + 2.0 + 1.0;
  v42 = v18;
  v43 = v20;
  if (!v27)
  {
    if (MidX >= v24)
    {
      ObjectType = swift_getObjectType();
      if ((*(unsigned __int8 (**)(uint64_t, uint64_t))(a2 + 32))(ObjectType, a2) == 2)
        v30 = v21;
      else
        v30 = v6;
      objc_msgSend(v30, sel_frame);
      MinX = CGRectGetMinX(v49);
    }
    else
    {
      objc_msgSend(v6, sel_frame);
      MinX = CGRectGetMaxX(v48);
    }
    MidX = MinX;
  }
  static Layout.ConversationControls.values.getter((uint64_t)v44);
  objc_msgSend(v9, sel_convertPoint_toView_, 0, v24, v26);
  objc_msgSend(v11, sel_convertPoint_toWindow_, 0);
  v32 = v31;
  v33 = objc_msgSend(v11, sel_screen);
  objc_msgSend(v33, sel_bounds);
  v35 = v34;
  v37 = v36;
  v39 = v38;
  v41 = v40;

  v50.origin.x = v35;
  v50.origin.y = v37;
  v50.size.width = v39;
  v50.size.height = v41;
  if (CGRectGetMidY(v50) >= v32)
  {
    v52.origin.x = v14;
    v52.origin.y = v16;
    v52.size.width = v42;
    v52.size.height = v43;
    CGRectGetMaxY(v52);
  }
  else
  {
    v51.origin.x = v14;
    v51.origin.y = v16;
    v51.size.width = v42;
    v51.size.height = v43;
    CGRectGetMinY(v51);
  }

  return *(void **)&MidX;
}

uint64_t key path setter for ConversationControlsMenuButtonProvider.menuHostViewController : ConversationControlsMenuButtonProvider(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v3 + 152) = v2;
  return swift_unknownObjectWeakAssign();
}

Swift::Bool __swiftcall ConversationControlsMenuButtonProvider.shouldEnableMenu()()
{
  return 1;
}

void ConversationControlsMenuButtonProvider.__allocating_init(controlsManager:context:shape:menuHostViewController:)()
{
  OUTLINED_FUNCTION_7_26();
  swift_allocObject();
  ConversationControlsMenuButtonProvider.init(controlsManager:context:shape:menuHostViewController:)();
}

uint64_t ConversationControlsMenuButtonProvider.menu(for:)()
{
  return 0;
}

BOOL CGFloat.within(tolerance:of:)(double a1, double a2, double a3)
{
  return a1 + a2 + 1.0 > a3 && a2 - a1 <= a3;
}

uint64_t closure #1 in ConversationControlsMenuButtonProvider.endedContextMenu(button:animator:)()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t ObjectType;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = (*(uint64_t (**)(void))(*(_QWORD *)result + 488))();
    if (v1)
    {
      v3 = (void *)v1;
      v4 = v2;
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v4 + 24))(ObjectType, v4);

    }
    return swift_release();
  }
  return result;
}

void ConversationControlsMenuButtonProvider.init(controlsManager:context:shape:)()
{
  OUTLINED_FUNCTION_5_125();
  __break(1u);
}

uint64_t ConversationControlsMenuButtonProvider.__ivar_destroyer()
{
  uint64_t v0;

  return outlined destroy of weak ConversationControlsCountdownJoinButtonDelegate?(v0 + 144);
}

uint64_t ConversationControlsMenuButtonProvider.__deallocating_deinit()
{
  ConversationControlsMenuButtonProvider.deinit();
  return swift_deallocClassInstance();
}

uint64_t protocol witness for ControlMenuDataSource.menu(for:) in conformance ConversationControlsMenuButtonProvider()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 560))();
}

uint64_t protocol witness for ControlMenuDataSource.attachmentPoint(for:configuration:) in conformance ConversationControlsMenuButtonProvider()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 576))();
}

uint64_t protocol witness for ControlMenuDataSource.menuStyle(for:existingStyle:) in conformance ConversationControlsMenuButtonProvider()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 568))();
}

double Range<>.init(center:tolerance:)(double a1, double a2)
{
  return a1 - a2;
}

uint64_t sub_1BD48BCBC()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ConversationControlsMenuButtonProvider.endedContextMenu(button:animator:)()
{
  return closure #1 in ConversationControlsMenuButtonProvider.endedContextMenu(button:animator:)();
}

void sub_1BD48BCE8(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = OUTLINED_FUNCTION_12_4();
  a1[1] = v2;
  OUTLINED_FUNCTION_0();
}

uint64_t dispatch thunk of MenuHostProvider.disableMenuContainerViewInteraction()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of MenuHostProvider.setupMenuContainerView()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of MenuHostProvider.teardownMenuContainerView()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t type metadata accessor for ConversationControlsMenuButtonProvider()
{
  return objc_opt_self();
}

uint64_t method lookup function for ConversationControlsMenuButtonProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ConversationControlsMenuButtonProvider.menuHostViewController.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 488))();
}

uint64_t dispatch thunk of ConversationControlsMenuButtonProvider.shouldEnableMenu()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 512))();
}

uint64_t dispatch thunk of ConversationControlsMenuButtonProvider.__allocating_init(controlsManager:context:shape:menuHostViewController:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 520))();
}

uint64_t dispatch thunk of ConversationControlsMenuButtonProvider.dismissMenu(context:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 528))();
}

uint64_t dispatch thunk of ConversationControlsMenuButtonProvider.disableMenuContainerViewInteraction()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 536))();
}

uint64_t dispatch thunk of ConversationControlsMenuButtonProvider.scheduleDismissTimer()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 544))();
}

uint64_t dispatch thunk of ConversationControlsMenuButtonProvider.invalidateDismissTimer()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 552))();
}

uint64_t dispatch thunk of ConversationControlsMenuButtonProvider.menu(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 560))();
}

uint64_t dispatch thunk of ConversationControlsMenuButtonProvider.menuStyle(for:existingStyle:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 568))();
}

uint64_t dispatch thunk of ConversationControlsMenuButtonProvider.attachmentPoint(for:configuration:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 576))();
}

uint64_t DialButtonViewModel.__allocating_init(service:)(__int128 *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  DialButtonViewModel.init(service:)(a1);
  return v2;
}

uint64_t DialButtonViewModel.init(service:)(__int128 *a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v1 + 72) = 0;
  *(_BYTE *)(v1 + 80) = -1;
  *(_QWORD *)(v1 + 88) = 0;
  outlined init with take of Notice(a1, v1 + 32);
  return v1;
}

uint64_t DialButtonViewModel.delegate.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_2_0();
  return MEMORY[0x1C3B752C0](v0 + 16);
}

uint64_t DialButtonViewModel.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v2 + 24) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

uint64_t (*DialButtonViewModel.delegate.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  OUTLINED_FUNCTION_2_0();
  v4 = MEMORY[0x1C3B752C0](v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v3[3] = v4;
  v3[4] = v5;
  return DialButtonViewModel.delegate.modify;
}

uint64_t DialButtonViewModel.enabled(for:)(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  char v3;
  void *v4;
  unsigned __int8 v5;

  v2 = *(void **)a1;
  v3 = *(_BYTE *)(a1 + 8);
  v4 = *(void **)(v1 + 72);
  *(_QWORD *)(v1 + 72) = *(_QWORD *)a1;
  v5 = *(_BYTE *)(v1 + 80);
  *(_BYTE *)(v1 + 80) = v3;
  outlined copy of PreCallControlsContext(v2);
  outlined consume of PreCallControlsContext?(v4, v5);
  return 1;
}

uint64_t DialButtonViewModel.controlType.getter()
{
  return DialButtonViewModel.config.getter();
}

uint64_t DialButtonViewModel.config.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  void *v19;
  objc_class *v20;
  uint64_t v21;
  NSBundle v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  objc_class *v29;
  uint64_t v30;
  NSBundle v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  _OWORD v47[5];
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;
  uint64_t v60;

  v1 = v0;
  v2 = type metadata accessor for Font.Leading();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Image.Scale();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(v1 + 88))
  {
    v10 = *(_QWORD *)(v1 + 88);
  }
  else
  {
    OUTLINED_FUNCTION_15_5();
    v11 = objc_msgSend((id)objc_opt_self(), sel_systemGreenColor);
    v12 = MEMORY[0x1C3B7262C](v11);
    v13 = static Color.white.getter();
    (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0CDF7D8], v6);
    v14 = static Font.body.getter();
    static Font.Weight.regular.getter();
    static SystemSymbol<A>.catalystCallControl(name:color:backgroundColor:scale:font:weight:)(0x69662E6F65646976, 0xEA00000000006C6CLL, v13, v12, (uint64_t)v9, v14, v47, v15);
    v46 = v47[3];
    v45 = v47[4];
    v44 = v48;
    v43 = v49;
    OUTLINED_FUNCTION_15_5();
    swift_release();
    swift_release();
    swift_release();
    v16 = *(void (**)(char *, uint64_t))(v7 + 8);
    v42 = v47[0];
    v41 = v47[1];
    v40 = v47[2];
    v16(v9, v6);
    v17 = static Color.white.getter();
    static Font.subheadline.getter();
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0CDD6D8], v2);
    v18 = Font.leading(_:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    v50 = xmmword_1BD6456D0;
    v51 = 0x401C000000000000;
    v52 = v17;
    v54 = v42;
    v55 = v41;
    v56 = v40;
    v57 = v46;
    v58 = v45;
    v53 = v18;
    v59 = v44;
    v60 = v43;
    v19 = (void *)objc_opt_self();
    v20 = (objc_class *)objc_msgSend(v19, sel_conversationKit);
    v21 = OUTLINED_FUNCTION_0_145();
    v22.super.isa = v20;
    v26 = OUTLINED_FUNCTION_49_2(v21, v23, v24, v25, v22);
    v28 = v27;

    v29 = (objc_class *)objc_msgSend(v19, sel_conversationKit);
    v30 = OUTLINED_FUNCTION_0_145();
    v31.super.isa = v29;
    v35 = OUTLINED_FUNCTION_49_2(v30, v32, v33, v34, v31);
    v37 = v36;

    v38 = swift_allocObject();
    swift_weakInit();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IconButtonConfig<()>);
    swift_allocObject();
    *((_QWORD *)&v40 + 1) = partial apply for closure #1 in DialButtonViewModel.config.getter;
    *(_QWORD *)&v41 = v38;
    v10 = specialized IconButtonConfig.init(buttonStyle:title:hasBadge:accessibilityLabel:accessibilityIdentifier:state:enabled:didTap:)((uint64_t)&v50, v26, v28, 0, v35, v37, 0x747475426E696F6ALL, 0xEA00000000006E6FLL, 1);
    *(_QWORD *)(v1 + 88) = v10;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v10;
}

Swift::Void __swiftcall DialButtonViewModel.onDisappear()()
{
  uint64_t v0;
  void *v1;
  unsigned __int8 v2;

  v1 = *(void **)(v0 + 72);
  *(_QWORD *)(v0 + 72) = 0;
  v2 = *(_BYTE *)(v0 + 80);
  *(_BYTE *)(v0 + 80) = -1;
  outlined consume of PreCallControlsContext?(v1, v2);
}

Swift::Void __swiftcall DialButtonViewModel.didTap()()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  void (*v8)(void *, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;

  v1 = v0;
  v2 = *(unsigned __int8 *)(v0 + 80);
  if (v2 == 255)
  {
    if (one-time initialization token for sidebar != -1)
      swift_once();
    v10 = type metadata accessor for Logger();
    __swift_project_value_buffer(v10, (uint64_t)&static Logger.sidebar);
    v11 = Logger.logObject.getter();
    v12 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v13 = 0;
      _os_log_impl(&dword_1BD004000, v11, v12, "DialButton missing request context", v13, 2u);
      MEMORY[0x1C3B751B8](v13, -1, -1);
    }

    OUTLINED_FUNCTION_1_142();
    if (MEMORY[0x1C3B752C0](v11))
    {
      v14 = OUTLINED_FUNCTION_4_110();
      (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v14, v1);
      OUTLINED_FUNCTION_10();
    }
  }
  else
  {
    v4 = *(_QWORD *)(v0 + 64);
    v3 = *(void **)(v0 + 72);
    v5 = *(_QWORD *)(v0 + 56);
    v6 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 32), v5);
    v7 = 8;
    if ((v2 & 1) != 0)
      v7 = 16;
    v8 = *(void (**)(void *, uint64_t, uint64_t))(v4 + v7);
    outlined copy of PreCallControlsContext(v3);
    v8(v3, v5, v4);
    OUTLINED_FUNCTION_1_142();
    if (MEMORY[0x1C3B752C0](v6))
    {
      v9 = OUTLINED_FUNCTION_4_110();
      (*(void (**)(uint64_t, uint64_t))(v1 + 16))(v9, v1);
      OUTLINED_FUNCTION_10();
    }
    outlined consume of PreCallControlsContext?(v3, v2);
  }
}

uint64_t sub_1BD48C568()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t key path setter for DialButtonViewModel.config : DialButtonViewModel()
{
  uint64_t v0;

  v0 = swift_retain();
  return DialButtonViewModel.config.setter(v0);
}

uint64_t DialButtonViewModel.config.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 88) = a1;
  return swift_release();
}

uint64_t closure #1 in DialButtonViewModel.config.getter()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    DialButtonViewModel.didTap()();
    return swift_release();
  }
  return result;
}

uint64_t partial apply for closure #1 in DialButtonViewModel.config.getter()
{
  return closure #1 in DialButtonViewModel.config.getter();
}

uint64_t DialButtonViewModel.deinit()
{
  uint64_t v0;

  outlined destroy of weak ConversationControlsCountdownJoinButtonDelegate?(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  outlined consume of PreCallControlsContext?(*(id *)(v0 + 72), *(_BYTE *)(v0 + 80));
  swift_release();
  return v0;
}

uint64_t DialButtonViewModel.__deallocating_deinit()
{
  DialButtonViewModel.deinit();
  return swift_deallocClassInstance();
}

uint64_t (*protocol witness for CallControlsPreCallButtonViewModel.delegate.modify in conformance DialButtonViewModel(_QWORD *a1))()
{
  uint64_t *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = *v1;
  v3[5] = v4;
  swift_beginAccess();
  v5 = MEMORY[0x1C3B752C0](v4 + 16);
  v6 = *(_QWORD *)(v4 + 24);
  v3[3] = v5;
  v3[4] = v6;
  return DialButtonViewModel.delegate.modify;
}

uint64_t protocol witness for CallControlsPreCallButtonViewModel.enabled(for:) in conformance DialButtonViewModel(uint64_t a1)
{
  DialButtonViewModel.enabled(for:)(a1);
  return 1;
}

uint64_t protocol witness for CallControlsButtonViewModel.controlType.getter in conformance DialButtonViewModel()
{
  return DialButtonViewModel.controlType.getter();
}

void protocol witness for CallControlsButtonViewModel.onDisappear() in conformance DialButtonViewModel()
{
  DialButtonViewModel.onDisappear()();
}

uint64_t sub_1BD48C75C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = DialButtonViewModel.config.getter();
  *a1 = result;
  return result;
}

uint64_t type metadata accessor for DialButtonViewModel()
{
  return objc_opt_self();
}

uint64_t method lookup function for DialButtonViewModel()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DialButtonViewModel.__allocating_init(service:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t ScreenSharingBroadcasterViewModel.__allocating_init(interactionController:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  ScreenSharingBroadcasterViewModel.init(interactionController:)(a1);
  return v2;
}

id TUHandle.init(destinationID:)(uint64_t a1, uint64_t a2)
{
  id v4;
  void *v5;
  id v6;

  v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v5 = (void *)MEMORY[0x1C3B72E00](a1, a2);
  swift_bridgeObjectRelease();
  v6 = objc_msgSend(v4, sel_initWithDestinationID_, v5);

  return v6;
}

uint64_t Participant.displayName.getter()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  type metadata accessor for TUHandle();
  v0 = Participant.handle.getter();
  v2 = TUHandle.init(destinationID:)(v0, v1);
  if (one-time initialization token for faceTime != -1)
    swift_once();
  swift_retain();
  ParticipantContactDetailsCache.contactDetails(for:nickname:)((uint64_t)v2, 0, 0, v3, v4, v5, v6, v7, v10, v11, v13, v14, v15, v17, v18, v19, v20, v21, v22,
    v23);
  v8 = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  static ParticipantContactDetails.initialsFor(_:)(v12);
  lazy protocol witness table accessor for type String and conformance String();
  StringProtocol.localizedUppercase.getter();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_30_4();

  OUTLINED_FUNCTION_17_22();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_30_4();

  return v16;
}

id ScreenSharingBroadcasterViewModel.interactionController.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

uint64_t (*ScreenSharingBroadcasterViewModel._remoteControlState.modify())()
{
  OUTLINED_FUNCTION_9_98();
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

_QWORD *key path getter for ScreenSharingBroadcasterViewModel.remoteControlState : ScreenSharingBroadcasterViewModel@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *result;
  uint64_t v4;

  result = (*(_QWORD *(**)(uint64_t *__return_ptr))(**(_QWORD **)a1 + 136))(&v4);
  *a2 = v4;
  return result;
}

uint64_t key path setter for ScreenSharingBroadcasterViewModel.remoteControlState : ScreenSharingBroadcasterViewModel(unint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t (*v3)(unint64_t *);
  unint64_t v5;

  v2 = *a2;
  v5 = *a1;
  v3 = *(uint64_t (**)(unint64_t *))(*(_QWORD *)v2 + 144);
  outlined copy of RemoteControlState(v5);
  return v3(&v5);
}

unint64_t ScreenSharingBroadcasterViewModel.remoteControlState.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t v3;

  swift_getKeyPath();
  OUTLINED_FUNCTION_5_111();
  swift_release();
  OUTLINED_FUNCTION_3_36();
  v3 = *(_QWORD *)(v1 + 24);
  *a1 = v3;
  return outlined copy of RemoteControlState(v3);
}

void ScreenSharingBroadcasterViewModel.remoteControlState.setter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;

  KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_34_3(KeyPath, (uint64_t)partial apply for closure #1 in ScreenSharingBroadcasterViewModel.remoteControlState.setter, *(uint64_t (**)(uint64_t, uint64_t, uint64_t *))(*(_QWORD *)v0 + 272), v2);
  OUTLINED_FUNCTION_306();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_14_1();
}

unint64_t closure #1 in ScreenSharingBroadcasterViewModel.remoteControlState.setter(uint64_t a1, unint64_t a2)
{
  unint64_t v4;

  swift_beginAccess();
  v4 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = a2;
  outlined copy of RemoteControlState(a2);
  return outlined consume of RemoteControlState(v4);
}

void ScreenSharingBroadcasterViewModel.remoteControlState.modify()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  unint64_t v3;

  v2 = OUTLINED_FUNCTION_25_10();
  *v1 = v2;
  v2[4] = v0;
  swift_getKeyPath();
  OUTLINED_FUNCTION_5_126();
  OUTLINED_FUNCTION_17_22();
  OUTLINED_FUNCTION_15_8(OBJC_IVAR____TtC15ConversationKit33ScreenSharingBroadcasterViewModel___observationRegistrar);
  v3 = lazy protocol witness table accessor for type ScreenSharingBroadcasterViewModel and conformance ScreenSharingBroadcasterViewModel();
  OUTLINED_FUNCTION_18_8(v3);
  OUTLINED_FUNCTION_22();
  v2[7] = ScreenSharingBroadcasterViewModel._remoteControlState.modify();
  OUTLINED_FUNCTION_91();
}

void ScreenSharingBroadcasterViewModel.remoteControlState.modify(_QWORD *a1)
{
  ScreenSharingBroadcasterViewModel.remoteControlState.modify(a1);
}

{
  _QWORD *v1;

  v1 = (_QWORD *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 56))(*a1, 0);
  *v1 = v1[4];
  swift_getKeyPath();
  ObservationRegistrar.didSet<A, B>(_:keyPath:)();
  swift_release();
  free(v1);
}

uint64_t (*ScreenSharingBroadcasterViewModel._isPresentingOnboardingView.modify())()
{
  OUTLINED_FUNCTION_9_98();
  return CallRecordingPillViewController.cancellable.modify;
}

uint64_t ScreenSharingBroadcasterViewModel.isPresentingOnboardingView.getter()
{
  uint64_t v0;

  swift_getKeyPath();
  OUTLINED_FUNCTION_5_111();
  swift_release();
  OUTLINED_FUNCTION_3_36();
  return *(unsigned __int8 *)(v0 + 32);
}

void ScreenSharingBroadcasterViewModel.isPresentingOnboardingView.setter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;

  KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_34_3(KeyPath, (uint64_t)partial apply for closure #1 in ScreenSharingBroadcasterViewModel.isPresentingOnboardingView.setter, *(uint64_t (**)(uint64_t, uint64_t, uint64_t *))(*(_QWORD *)v0 + 272), v2);
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_14_1();
}

uint64_t closure #1 in ScreenSharingBroadcasterViewModel.isPresentingOnboardingView.setter(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_beginAccess();
  *(_BYTE *)(a1 + 32) = a2;
  return result;
}

void ScreenSharingBroadcasterViewModel.isPresentingOnboardingView.modify()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  unint64_t v3;

  v2 = OUTLINED_FUNCTION_25_10();
  *v1 = v2;
  v2[4] = v0;
  swift_getKeyPath();
  OUTLINED_FUNCTION_5_126();
  OUTLINED_FUNCTION_17_22();
  OUTLINED_FUNCTION_15_8(OBJC_IVAR____TtC15ConversationKit33ScreenSharingBroadcasterViewModel___observationRegistrar);
  v3 = lazy protocol witness table accessor for type ScreenSharingBroadcasterViewModel and conformance ScreenSharingBroadcasterViewModel();
  OUTLINED_FUNCTION_18_8(v3);
  OUTLINED_FUNCTION_22();
  v2[7] = ScreenSharingBroadcasterViewModel._isPresentingOnboardingView.modify();
  OUTLINED_FUNCTION_91();
}

void ScreenSharingBroadcasterViewModel.isPresentingOnboardingView.modify(_QWORD *a1)
{
  ScreenSharingBroadcasterViewModel.remoteControlState.modify(a1);
}

uint64_t ScreenSharingBroadcasterViewModel.init(interactionController:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  void (*v5)(uint64_t *__return_ptr);
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t (*)(), uint64_t);
  _QWORD *v10;
  uint64_t v12;

  v2 = v1;
  *(_QWORD *)(v2 + 24) = 0xA000000000000008;
  *(_BYTE *)(v2 + 32) = 0;
  ObservationRegistrar.init()();
  *(_QWORD *)(v2 + 16) = a1;
  v4 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v5 = *(void (**)(uint64_t *__return_ptr))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x178);
  v6 = a1;
  v5(&v12);
  ScreenSharingBroadcasterViewModel.remoteControlState.setter();
  v7 = OUTLINED_FUNCTION_15();
  swift_weakInit();
  v8 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  v9 = *(void (**)(uint64_t (*)(), uint64_t))((*v4 & *v6) + 0x1B0);
  v10 = v6;
  swift_retain();
  v9(partial apply for closure #1 in ScreenSharingBroadcasterViewModel.init(interactionController:), v8);
  OUTLINED_FUNCTION_22();

  return v2;
}

_QWORD *sub_1BD48CF24@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *result;
  uint64_t v4;

  result = OUTLINED_FUNCTION_0_146(a1);
  *a2 = v4;
  return result;
}

unint64_t partial apply for closure #1 in ScreenSharingBroadcasterViewModel.remoteControlState.setter()
{
  uint64_t v0;

  return closure #1 in ScreenSharingBroadcasterViewModel.remoteControlState.setter(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

unint64_t lazy protocol witness table accessor for type ScreenSharingBroadcasterViewModel and conformance ScreenSharingBroadcasterViewModel()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type ScreenSharingBroadcasterViewModel and conformance ScreenSharingBroadcasterViewModel;
  if (!lazy protocol witness table cache variable for type ScreenSharingBroadcasterViewModel and conformance ScreenSharingBroadcasterViewModel)
  {
    v1 = type metadata accessor for ScreenSharingBroadcasterViewModel();
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ScreenSharingBroadcasterViewModel, v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ScreenSharingBroadcasterViewModel and conformance ScreenSharingBroadcasterViewModel);
  }
  return result;
}

uint64_t type metadata accessor for ScreenSharingBroadcasterViewModel()
{
  uint64_t result;

  result = type metadata singleton initialization cache for ScreenSharingBroadcasterViewModel;
  if (!type metadata singleton initialization cache for ScreenSharingBroadcasterViewModel)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t partial apply for closure #1 in ScreenSharingBroadcasterViewModel.isPresentingOnboardingView.setter()
{
  uint64_t v0;

  return closure #1 in ScreenSharingBroadcasterViewModel.isPresentingOnboardingView.setter(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_1BD48D010()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t closure #1 in ScreenSharingBroadcasterViewModel.init(interactionController:)(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v7 = result;
    v8 = type metadata accessor for TaskPriority();
    __swift_storeEnumTagSinglePayload((uint64_t)v5, 1, 1, v8);
    type metadata accessor for MainActor();
    swift_retain();
    v9 = a2;
    v10 = static MainActor.shared.getter();
    v11 = (_QWORD *)swift_allocObject();
    v12 = MEMORY[0x1E0DF06E8];
    v11[2] = v10;
    v11[3] = v12;
    v11[4] = v7;
    v11[5] = v9;
    _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BD48D154()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ScreenSharingBroadcasterViewModel.init(interactionController:)()
{
  uint64_t v0;

  return closure #1 in ScreenSharingBroadcasterViewModel.init(interactionController:)(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t closure #1 in closure #1 in ScreenSharingBroadcasterViewModel.init(interactionController:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[2] = a4;
  v5[3] = a5;
  type metadata accessor for MainActor();
  v5[4] = static MainActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  return swift_task_switch();
}

uint64_t closure #1 in closure #1 in ScreenSharingBroadcasterViewModel.init(interactionController:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v1 = *(_QWORD **)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 16);
  v3 = swift_release();
  (*(void (**)(uint64_t *__return_ptr, uint64_t))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x178))(&v6, v3);
  v4 = (*(uint64_t (**)(uint64_t *))(*(_QWORD *)v2 + 144))(&v6);
  (*(void (**)(uint64_t))(*(_QWORD *)v2 + 216))(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

Swift::Void __swiftcall ScreenSharingBroadcasterViewModel.checkOnboardingState()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  OUTLINED_FUNCTION_0_146(v0);
  if (!(v3 >> 61))
  {
    v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (RemoteControlRequest, Participant, Bool));
    if (*(_BYTE *)(swift_projectBox() + *(int *)(v2 + 64)) == 1)
      (*(void (**)(uint64_t))(*(_QWORD *)v1 + 192))(1);
  }
  outlined consume of RemoteControlState(v3);
}

Swift::Void __swiftcall ScreenSharingBroadcasterViewModel.endRemoteControl()()
{
  uint64_t v0;

  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & **(_QWORD **)(v0 + 16)) + 0x208))();
}

void ScreenSharingBroadcasterViewModel.activeControlParticipant.getter(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  unint64_t v4;
  char v5;
  char v6;
  unint64_t v7;

  OUTLINED_FUNCTION_0_146(a1);
  v4 = outlined consume of RemoteControlState(v7);
  if ((v7 >> 61) - 2 <= 2
    && (*(uint64_t (**)(unint64_t))((*MEMORY[0x1E0DEEDD8] & **(_QWORD **)(v2 + 16)) + 0xF8))(v4))
  {
    ScreenSharingInteractionSession.activeControlParticipant.getter(&v6);
    swift_release();
    v5 = v6;
  }
  else
  {
    v5 = 0;
  }
  *a2 = v5;
  OUTLINED_FUNCTION_45_0();
}

uint64_t ScreenSharingBroadcasterViewModel.statusText.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  char *v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  objc_class *v11;
  NSBundle v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  objc_class *v21;
  NSBundle v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  unint64_t v29;

  v1 = type metadata accessor for Participant();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (*(_QWORD *(**)(unint64_t *__return_ptr, __n128))(*(_QWORD *)v0 + 136))(&v29, v3);
  v7 = v29;
  (*(void (**)(char *__return_ptr, _QWORD *))(*(_QWORD *)v0 + 232))((char *)&v28 + 7, v6);
  if (HIBYTE(v28) == 1)
    goto LABEL_9;
  if (v7 >> 61 == 3)
  {
    if (HIBYTE(v28) == 2)
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (RemoteControlRequest, Participant));
      v10 = swift_projectBox();
      (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v5, v10 + *(int *)(v9 + 48), v1);
      v11 = (objc_class *)objc_msgSend((id)objc_opt_self(), sel_conversationKit);
      OUTLINED_FUNCTION_18_3();
      OUTLINED_FUNCTION_7_14();
      v12.super.isa = v11;
      OUTLINED_FUNCTION_49_2(v13, v14, v15, v16, v12);

      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v17 = OUTLINED_FUNCTION_15();
      *(_OWORD *)(v17 + 16) = xmmword_1BD6441D0;
      v18 = Participant.displayName.getter();
      v20 = v19;
      *(_QWORD *)(v17 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v17 + 64) = lazy protocol witness table accessor for type String and conformance String();
      *(_QWORD *)(v17 + 32) = v18;
      *(_QWORD *)(v17 + 40) = v20;
      v8 = String.init(format:_:)();
      OUTLINED_FUNCTION_30_4();
      (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
LABEL_10:
      OUTLINED_FUNCTION_306();
      return v8;
    }
LABEL_9:
    v21 = (objc_class *)objc_msgSend((id)objc_opt_self(), sel_conversationKit);
    OUTLINED_FUNCTION_18_3();
    OUTLINED_FUNCTION_7_14();
    v22.super.isa = v21;
    v8 = OUTLINED_FUNCTION_49_2(v23, v24, v25, v26, v22);

    goto LABEL_10;
  }
  if (v7 >> 61 == 4 && *(_BYTE *)(v7 + 24) == 2)
    goto LABEL_9;
  OUTLINED_FUNCTION_306();
  return 0;
}

void ScreenSharingBroadcasterViewModel.isUnderRemoteControl.getter(uint64_t a1)
{
  OUTLINED_FUNCTION_0_146(a1);
  __asm { BR              X10 }
}

uint64_t sub_1BD48D6B0(unint64_t a1)
{
  outlined consume of RemoteControlState(a1);
  return 0;
}

void ScreenSharingBroadcasterViewModel.bezelEffects.getter()
{
  uint64_t v0;
  uint64_t var1;

  if (((*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))() & 1) != 0)
  {
    (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)v0 + 232))(&var1);
    if (var1 == 2)
      specialized Set.init(_nonEmptyArrayLiteral:)((uint64_t)&outlined read-only object #0 of ScreenSharingBroadcasterViewModel.bezelEffects.getter);
    else
      specialized Set.init(_nonEmptyArrayLiteral:)((uint64_t)&outlined read-only object #1 of ScreenSharingBroadcasterViewModel.bezelEffects.getter);
  }
}

void ScreenSharingBroadcasterViewModel.access<A>(keyPath:)()
{
  lazy protocol witness table accessor for type ScreenSharingBroadcasterViewModel and conformance ScreenSharingBroadcasterViewModel();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  OUTLINED_FUNCTION_45_0();
}

uint64_t ScreenSharingBroadcasterViewModel.withMutation<A, B>(keyPath:_:)()
{
  lazy protocol witness table accessor for type ScreenSharingBroadcasterViewModel and conformance ScreenSharingBroadcasterViewModel();
  return ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
}

uint64_t ScreenSharingBroadcasterViewModel.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  outlined consume of RemoteControlState(*(_QWORD *)(v0 + 24));
  v1 = v0 + OBJC_IVAR____TtC15ConversationKit33ScreenSharingBroadcasterViewModel___observationRegistrar;
  v2 = type metadata accessor for ObservationRegistrar();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t ScreenSharingBroadcasterViewModel.__deallocating_deinit()
{
  ScreenSharingBroadcasterViewModel.deinit();
  return swift_deallocClassInstance();
}

uint64_t ObjC metadata update function for ScreenSharingBroadcasterViewModel()
{
  return type metadata accessor for ScreenSharingBroadcasterViewModel();
}

uint64_t type metadata completion function for ScreenSharingBroadcasterViewModel()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ObservationRegistrar();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for ScreenSharingBroadcasterViewModel()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ScreenSharingBroadcasterViewModel.remoteControlState.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of ScreenSharingBroadcasterViewModel.remoteControlState.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of ScreenSharingBroadcasterViewModel.remoteControlState.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of ScreenSharingBroadcasterViewModel.isPresentingOnboardingView.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of ScreenSharingBroadcasterViewModel.isPresentingOnboardingView.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of ScreenSharingBroadcasterViewModel.isPresentingOnboardingView.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of ScreenSharingBroadcasterViewModel.__allocating_init(interactionController:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t dispatch thunk of ScreenSharingBroadcasterViewModel.checkOnboardingState()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of ScreenSharingBroadcasterViewModel.endRemoteControl()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of ScreenSharingBroadcasterViewModel.activeControlParticipant.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of ScreenSharingBroadcasterViewModel.statusText.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of ScreenSharingBroadcasterViewModel.isUnderRemoteControl.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of ScreenSharingBroadcasterViewModel.bezelEffects.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of ScreenSharingBroadcasterViewModel.access<A>(keyPath:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of ScreenSharingBroadcasterViewModel.withMutation<A, B>(keyPath:_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t sub_1BD48DA04()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in ScreenSharingBroadcasterViewModel.init(interactionController:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = dispatch thunk of CallScreeningStateMachine.transition(with:reason:validation:);
  return closure #1 in closure #1 in ScreenSharingBroadcasterViewModel.init(interactionController:)(a1, v4, v5, v7, v6);
}

id clarityUIRootView_generic()
{
  return (id)clarityUIRootView_generic()();
}

uint64_t clarityUIRootView_generic()()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  OUTLINED_FUNCTION_1_143();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v8 - v4;
  ClarityUIRootView.init()((uint64_t)&v8 - v4);
  outlined init with copy of ClarityUIRootView((uint64_t)v5, (uint64_t)v2);
  v6 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)();
  outlined destroy of AccountUpdateNotice((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for ClarityUIRootView);
  return v6;
}

uint64_t type metadata accessor for ClarityUIRootView()
{
  uint64_t result;

  result = type metadata singleton initialization cache for ClarityUIRootView;
  if (!type metadata singleton initialization cache for ClarityUIRootView)
    return swift_getSingletonMetadata();
  return result;
}

void ClarityUIRootView.init()(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  _BYTE v17[24];
  uint64_t v18;

  v2 = type metadata accessor for NavigationPath();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = &v17[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v6);
  v8 = &v17[-v7];
  v9 = OUTLINED_FUNCTION_1_143();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_77();
  v13 = v12 - v11;
  if (one-time initialization token for shared != -1)
    swift_once();
  *(_QWORD *)v13 = static ClarityUIPreferences.shared;
  v17[15] = 0;
  swift_retain();
  State.init(wrappedValue:)();
  v14 = v18;
  *(_BYTE *)(v13 + 8) = v17[16];
  *(_QWORD *)(v13 + 16) = v14;
  v15 = (uint64_t *)(v13 + *(int *)(v9 + 24));
  *v15 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<MultimodalListStyle.Layout>.Content);
  swift_storeEnumTagMultiPayload();
  NavigationPath.init()();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v3 + 16))(v5, v8, v2);
  State.init(wrappedValue:)();
  (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v8, v2);
  v16 = *(int *)(v9 + 32);
  if (one-time initialization token for shared != -1)
    swift_once();
  *(_QWORD *)(v13 + v16) = static ClarityUICallHistory.shared;
  outlined init with take of ClarityUIRootView(v13, a1);
  swift_retain();
  OUTLINED_FUNCTION_65_1();
}

uint64_t outlined init with copy of ClarityUIRootView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ClarityUIRootView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void ClarityUIRootView.body.getter(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t *v10;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<NavigationPath>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_77();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NavigationStack<NavigationPath, <<opaque return type of View.onChange<A>(of:initial:_:)>>.0>);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_77();
  v7 = v6 - v5;
  OUTLINED_FUNCTION_1_143();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<NavigationPath>);
  State.projectedValue.getter();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.onChange<A>(of:initial:_:)>>.0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ZStack<TupleView<(ModifiedContent<<<opaque return type of View.navigationDestination<A, B>(for:destination:)>>.0, _OpacityEffect>, ClarityUIDialerView)>>);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type ZStack<TupleView<(ModifiedContent<<<opaque return type of View.navigationDestination<A, B>(for:destination:)>>.0, _OpacityEffect>, ClarityUIDialerView)>> and conformance ZStack<A>, &demangling cache variable for type metadata for ZStack<TupleView<(ModifiedContent<<<opaque return type of View.navigationDestination<A, B>(for:destination:)>>.0, _OpacityEffect>, ClarityUIDialerView)>>);
  swift_getOpaqueTypeConformance2();
  NavigationStack.init<>(path:root:)();
  static Color.green.getter();
  KeyPath = swift_getKeyPath();
  swift_retain();
  v9 = AnyShapeStyle.init<A>(_:)();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(a1, v7, v3);
  swift_release();
  v10 = (uint64_t *)(a1
                  + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<NavigationStack<NavigationPath, <<opaque return type of View.onChange<A>(of:initial:_:)>>.0>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>>)
                           + 36));
  *v10 = KeyPath;
  v10[1] = v9;
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
  OUTLINED_FUNCTION_65_1();
}

void closure #1 in ClarityUIRootView.body.getter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ZStack<TupleView<(ModifiedContent<<<opaque return type of View.navigationDestination<A, B>(for:destination:)>>.0, _OpacityEffect>, ClarityUIDialerView)>>);
  MEMORY[0x1E0C80A78](v2);
  v4 = (uint64_t *)((char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v4 = static Alignment.center.getter();
  v4[1] = v5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_ZStackLayout, TupleView<(ModifiedContent<<<opaque return type of View.navigationDestination<A, B>(for:destination:)>>.0, _OpacityEffect>, ClarityUIDialerView)>>);
  closure #1 in closure #1 in ClarityUIRootView.body.getter(a1, (uint64_t)v4 + *(int *)(v6 + 44));
  v7 = *(_QWORD *)(a1 + 16);
  v9 = *(_BYTE *)(a1 + 8);
  v10 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
  State.wrappedValue.getter();
  v9 = v11;
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type ZStack<TupleView<(ModifiedContent<<<opaque return type of View.navigationDestination<A, B>(for:destination:)>>.0, _OpacityEffect>, ClarityUIDialerView)>> and conformance ZStack<A>, &demangling cache variable for type metadata for ZStack<TupleView<(ModifiedContent<<<opaque return type of View.navigationDestination<A, B>(for:destination:)>>.0, _OpacityEffect>, ClarityUIDialerView)>>);
  View.onChange<A>(of:initial:_:)();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v4, &demangling cache variable for type metadata for ZStack<TupleView<(ModifiedContent<<<opaque return type of View.navigationDestination<A, B>(for:destination:)>>.0, _OpacityEffect>, ClarityUIDialerView)>>);
}

void closure #1 in closure #1 in ClarityUIRootView.body.getter(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  ValueMetadata *v21;
  char v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  int *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t OpaqueTypeConformance2;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  ValueMetadata *v62;
  uint64_t v63;
  double v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  ValueMetadata *v71;
  char v72;
  ValueMetadata *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  int *v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  ValueMetadata *v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;

  v99 = a2;
  v3 = type metadata accessor for ClarityUIRootView();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v79 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (int *)type metadata accessor for ClarityUIFavoritesView();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v79 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.navigationDestination<A, B>(for:destination:)>>.0);
  v84 = *(_QWORD *)(v85 - 8);
  MEMORY[0x1E0C80A78](v85);
  v82 = (char *)&v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.navigationDestination<A, B>(for:destination:)>>.0);
  v87 = *(_QWORD *)(v88 - 8);
  MEMORY[0x1E0C80A78](v88);
  v83 = (char *)&v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.navigationDestination<A, B>(for:destination:)>>.0);
  v92 = *(_QWORD *)(v93 - 8);
  MEMORY[0x1E0C80A78](v93);
  v90 = (char *)&v79 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.navigationDestination<A, B>(for:destination:)>>.0);
  v95 = *(_QWORD *)(v13 - 8);
  v96 = v13;
  MEMORY[0x1E0C80A78](v13);
  v94 = (char *)&v79 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.navigationDestination<A, B>(for:destination:)>>.0, _OpacityEffect>);
  MEMORY[0x1E0C80A78](v91);
  v98 = (uint64_t)&v79 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v89 = (char *)&v79 - v17;
  MEMORY[0x1E0C80A78](v18);
  v97 = (uint64_t)&v79 - v19;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<NavigationPath>);
  State.projectedValue.getter();
  v20 = *(_QWORD *)(a1 + 16);
  LOBYTE(v110) = *(_BYTE *)(a1 + 8);
  v111 = v20;
  v86 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
  State.projectedValue.getter();
  v21 = v105;
  v22 = v106;
  v23 = &v9[v7[5]];
  *(_QWORD *)v23 = v104;
  *((_QWORD *)v23 + 1) = v21;
  v23[16] = v22;
  v24 = v7[6];
  if (one-time initialization token for shared != -1)
    swift_once();
  *(_QWORD *)&v9[v24] = static ClarityUIPreferences.shared;
  v25 = v7[7];
  v26 = one-time initialization token for shared;
  swift_retain();
  if (v26 != -1)
    swift_once();
  *(_QWORD *)&v9[v25] = static ClarityUICallHistory.shared;
  v27 = v7[8];
  v28 = one-time initialization token for shared;
  swift_retain();
  v81 = v7;
  if (v28 != -1)
    swift_once();
  *(_QWORD *)&v9[v27] = static ClarityUIFavoritesList.shared;
  outlined init with copy of ClarityUIRootView(a1, (uint64_t)&v79 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v29 = *(unsigned __int8 *)(v4 + 80);
  v30 = ((v29 + 16) & ~v29) + v5;
  v31 = (v29 + 16) & ~v29;
  v101 = v29 | 7;
  v102 = v30;
  v32 = swift_allocObject();
  v80 = v31;
  outlined init with take of ClarityUIRootView((uint64_t)v6, v32 + v31);
  v33 = type metadata accessor for ClarityUIOutgoingCallActionsView();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type ClarityUIFavoritesView and conformance ClarityUIFavoritesView, (void (*)(uint64_t))type metadata accessor for ClarityUIFavoritesView);
  v100 = v6;
  v35 = v34;
  v36 = lazy protocol witness table accessor for type ClarityUIOutgoingCallActionsNavigationDestination and conformance ClarityUIOutgoingCallActionsNavigationDestination();
  v103 = a1;
  v37 = (uint64_t)v9;
  v38 = v36;
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type ClarityUIOutgoingCallActionsView and conformance ClarityUIOutgoingCallActionsView, (void (*)(uint64_t))type metadata accessor for ClarityUIOutgoingCallActionsView);
  v40 = v39;
  swift_retain();
  v41 = v82;
  v42 = v81;
  View.navigationDestination<A, B>(for:destination:)();
  swift_release();
  outlined destroy of AccountUpdateNotice(v37, (uint64_t (*)(_QWORD))type metadata accessor for ClarityUIFavoritesView);
  v43 = (uint64_t)v100;
  outlined init with copy of ClarityUIRootView(a1, (uint64_t)v100);
  v44 = swift_allocObject();
  outlined init with take of ClarityUIRootView(v43, v44 + v31);
  v79 = type metadata accessor for ClarityPreviewView();
  v104 = (uint64_t)v42;
  v105 = &type metadata for ClarityUIOutgoingCallActionsNavigationDestination;
  v106 = v33;
  v107 = v35;
  v108 = v38;
  v109 = v40;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v46 = lazy protocol witness table accessor for type ClarityUIPreviewNavigationDestination and conformance ClarityUIPreviewNavigationDestination();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type ClarityPreviewView and conformance ClarityPreviewView, (void (*)(uint64_t))type metadata accessor for ClarityPreviewView);
  v48 = v47;
  v49 = v83;
  v50 = v85;
  View.navigationDestination<A, B>(for:destination:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v84 + 8))(v41, v50);
  v51 = (uint64_t)v100;
  outlined init with copy of ClarityUIRootView(v103, (uint64_t)v100);
  v52 = swift_allocObject();
  outlined init with take of ClarityUIRootView(v51, v52 + v80);
  v53 = type metadata accessor for ClarityUIContactsView();
  v104 = v50;
  v105 = &type metadata for ClarityUIPreviewNavigationDestination;
  v106 = v79;
  v107 = OpaqueTypeConformance2;
  v108 = v46;
  v109 = v48;
  v54 = swift_getOpaqueTypeConformance2();
  v55 = lazy protocol witness table accessor for type ClarityUIContactsNavigationDestination and conformance ClarityUIContactsNavigationDestination();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type ClarityUIContactsView and conformance ClarityUIContactsView, (void (*)(uint64_t))type metadata accessor for ClarityUIContactsView);
  v57 = v56;
  v58 = v90;
  v59 = v88;
  View.navigationDestination<A, B>(for:destination:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v87 + 8))(v49, v59);
  v104 = v59;
  v105 = &type metadata for ClarityUIContactsNavigationDestination;
  v106 = v53;
  v107 = v54;
  v108 = v55;
  v109 = v57;
  swift_getOpaqueTypeConformance2();
  lazy protocol witness table accessor for type ClarityUIRecentsNavigationDestination and conformance ClarityUIRecentsNavigationDestination();
  lazy protocol witness table accessor for type ClarityUIRecentsView and conformance ClarityUIRecentsView();
  v61 = v93;
  v60 = v94;
  View.navigationDestination<A, B>(for:destination:)();
  (*(void (**)(char *, uint64_t))(v92 + 8))(v58, v61);
  v62 = *(ValueMetadata **)(v103 + 16);
  v63 = v103;
  LOBYTE(v104) = *(_BYTE *)(v103 + 8);
  v105 = v62;
  State.wrappedValue.getter();
  if ((_BYTE)v110)
    v64 = 0.0;
  else
    v64 = 1.0;
  v66 = v95;
  v65 = v96;
  v67 = (uint64_t)v89;
  (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v89, v60, v96);
  *(double *)(v67 + *(int *)(v91 + 36)) = v64;
  (*(void (**)(char *, uint64_t))(v66 + 8))(v60, v65);
  v68 = v97;
  outlined init with take of ModifiedContent<<<opaque return type of View.navigationDestination<A, B>(for:destination:)>>.0, _OpacityEffect>(v67, v97);
  v69 = *(_QWORD *)(v63 + 16);
  LOBYTE(v110) = *(_BYTE *)(v63 + 8);
  v111 = v69;
  State.projectedValue.getter();
  v70 = v104;
  v71 = v105;
  v72 = v106;
  v110 = 0;
  v111 = 0xE000000000000000;
  State.init(wrappedValue:)();
  v74 = v104;
  v73 = v105;
  v75 = v106;
  v76 = v98;
  outlined init with copy of ModifiedContent<<<opaque return type of View.navigationDestination<A, B>(for:destination:)>>.0, _OpacityEffect>(v68, v98);
  v77 = v99;
  outlined init with copy of ModifiedContent<<<opaque return type of View.navigationDestination<A, B>(for:destination:)>>.0, _OpacityEffect>(v76, v99);
  v78 = v77
      + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModifiedContent<<<opaque return type of View.navigationDestination<A, B>(for:destination:)>>.0, _OpacityEffect>, ClarityUIDialerView))
               + 48);
  *(_QWORD *)v78 = v70;
  *(_QWORD *)(v78 + 8) = v71;
  *(_BYTE *)(v78 + 16) = v72;
  *(_QWORD *)(v78 + 24) = v74;
  *(_QWORD *)(v78 + 32) = v73;
  *(_QWORD *)(v78 + 40) = v75;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v68, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.navigationDestination<A, B>(for:destination:)>>.0, _OpacityEffect>);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v76, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.navigationDestination<A, B>(for:destination:)>>.0, _OpacityEffect>);
}

uint64_t closure #1 in closure #1 in closure #1 in ClarityUIRootView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;

  v3 = *(void **)a1;
  v4 = *(void **)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  type metadata accessor for ClarityUIRootView();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<NavigationPath>);
  State.projectedValue.getter();
  v8 = (int *)type metadata accessor for ClarityUIOutgoingCallActionsView();
  v9 = (_QWORD *)(a2 + v8[5]);
  *v9 = v3;
  v9[1] = v4;
  v9[2] = v6;
  v9[3] = v5;
  *(_QWORD *)(a2 + v8[6]) = v7;
  v10 = v8[7];
  v11 = one-time initialization token for shared;
  v12 = v3;
  v13 = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v11 != -1)
    swift_once();
  *(_QWORD *)(a2 + v10) = static ClarityUIOutgoingCallActionProvider.shared;
  v14 = v8[8];
  v15 = one-time initialization token for shared;
  swift_retain();
  if (v15 != -1)
    swift_once();
  *(_QWORD *)(a2 + v14) = static ClarityUICallHistory.shared;
  return swift_retain();
}

uint64_t closure #2 in closure #1 in closure #1 in ClarityUIRootView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  char v20;

  v4 = *(void **)a1;
  v3 = *(void **)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  v20 = *(_BYTE *)(a1 + 48);
  v9 = *(_QWORD *)(a1 + 56);
  v10 = *(_QWORD *)(a1 + 64);
  type metadata accessor for ClarityUIRootView();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<NavigationPath>);
  State.projectedValue.getter();
  v11 = (int *)type metadata accessor for ClarityPreviewView();
  v12 = (_QWORD *)(a2 + v11[5]);
  *v12 = v4;
  v12[1] = v3;
  v12[2] = v6;
  v12[3] = v5;
  v13 = a2 + v11[6];
  *(_QWORD *)v13 = v8;
  *(_QWORD *)(v13 + 8) = v7;
  *(_BYTE *)(v13 + 16) = v20;
  *(_QWORD *)(v13 + 24) = v9;
  *(_QWORD *)(v13 + 32) = v10;
  v14 = v11[7];
  v15 = v4;
  v16 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v9);
  if (one-time initialization token for shared != -1)
    swift_once();
  *(_QWORD *)(a2 + v14) = static ClarityCameraModel.shared;
  v17 = v11[8];
  v18 = one-time initialization token for shared;
  swift_retain();
  if (v18 != -1)
    swift_once();
  *(_QWORD *)(a2 + v17) = static ClarityUICallHistory.shared;
  return swift_retain();
}

uint64_t closure #3 in closure #1 in closure #1 in ClarityUIRootView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  type metadata accessor for ClarityUIRootView();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<NavigationPath>);
  State.projectedValue.getter();
  v2 = type metadata accessor for ClarityUIContactsView();
  v3 = (_QWORD *)(a1 + *(int *)(v2 + 20));
  type metadata accessor for ClarityUIContactsList();
  swift_allocObject();
  ClarityUIContactsList.init()();
  State.init(wrappedValue:)();
  *v3 = v6;
  v3[1] = v7;
  v4 = *(int *)(v2 + 24);
  if (one-time initialization token for shared != -1)
    swift_once();
  *(_QWORD *)(a1 + v4) = static ClarityUICallHistory.shared;
  return swift_retain();
}

uint64_t closure #4 in closure #1 in closure #1 in ClarityUIRootView.body.getter@<X0>(_QWORD *a1@<X8>)
{
  if (one-time initialization token for shared != -1)
    swift_once();
  *a1 = static ClarityUICallHistory.shared;
  return swift_retain();
}

uint64_t closure #2 in closure #1 in ClarityUIRootView.body.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  _OWORD v5[2];

  v0 = type metadata accessor for AccessibilityNotification.ScreenChanged();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  memset(v5, 0, sizeof(v5));
  MEMORY[0x1C3B703AC](v5);
  _AccessibilityNotifications.post()();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t key path getter for EnvironmentValues.multimodalListLayout : EnvironmentValues()
{
  return EnvironmentValues.multimodalListLayout.getter();
}

uint64_t sub_1BD48EDE4()
{
  return EnvironmentValues.multimodalListLayout.getter();
}

uint64_t outlined init with take of ClarityUIRootView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ClarityUIRootView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void partial apply for closure #1 in ClarityUIRootView.body.getter()
{
  uint64_t v0;

  closure #1 in ClarityUIRootView.body.getter(*(_QWORD *)(v0 + 16));
}

uint64_t associated type witness table accessor for View.Body : View in ClarityUIRootView()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t initializeBufferWithCopyOfBuffer for ClarityUIRootView(uint64_t a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
  }
  else
  {
    v7 = a1;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    *(_QWORD *)(a1 + 16) = a2[2];
    v8 = a3[6];
    v9 = (_QWORD *)(a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    swift_retain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<MultimodalListStyle.Layout>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v11 = type metadata accessor for MultimodalListStyle.Layout();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    }
    else
    {
      *v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v12 = a3[7];
    v13 = v7 + v12;
    v14 = (uint64_t)a2 + v12;
    v15 = type metadata accessor for NavigationPath();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<NavigationPath>);
    *(_QWORD *)(v13 + *(int *)(v16 + 28)) = *(_QWORD *)(v14 + *(int *)(v16 + 28));
    *(_QWORD *)(v7 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
    swift_retain();
  }
  swift_retain();
  return v7;
}

uint64_t destroy for ClarityUIRootView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_release();
  swift_release();
  v4 = a1 + *(int *)(a2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<MultimodalListStyle.Layout>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = type metadata accessor for MultimodalListStyle.Layout();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  v6 = a1 + *(int *)(a2 + 28);
  v7 = type metadata accessor for NavigationPath();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<NavigationPath>);
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for ClarityUIRootView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = a3[6];
  v7 = (_QWORD *)(a1 + v6);
  v8 = (_QWORD *)(a2 + v6);
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<MultimodalListStyle.Layout>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v9 = type metadata accessor for MultimodalListStyle.Layout();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  }
  else
  {
    *v7 = *v8;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v10 = a3[7];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = type metadata accessor for NavigationPath();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<NavigationPath>);
  *(_QWORD *)(v11 + *(int *)(v14 + 28)) = *(_QWORD *)(v12 + *(int *)(v14 + 28));
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ClarityUIRootView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v6 = a3[6];
    v7 = (_QWORD *)(a1 + v6);
    v8 = (_QWORD *)(a2 + v6);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(a1 + v6, &demangling cache variable for type metadata for Environment<MultimodalListStyle.Layout>.Content);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<MultimodalListStyle.Layout>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v9 = type metadata accessor for MultimodalListStyle.Layout();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v10 = a3[7];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = type metadata accessor for NavigationPath();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<NavigationPath>);
  *(_QWORD *)(v11 + *(int *)(v14 + 28)) = *(_QWORD *)(v12 + *(int *)(v14 + 28));
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for ClarityUIRootView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v6 = a3[6];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<MultimodalListStyle.Layout>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = type metadata accessor for MultimodalListStyle.Layout();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  v11 = a3[7];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = type metadata accessor for NavigationPath();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<NavigationPath>);
  *(_QWORD *)(v12 + *(int *)(v15 + 28)) = *(_QWORD *)(v13 + *(int *)(v15 + 28));
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  return a1;
}

uint64_t assignWithTake for ClarityUIRootView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  if (a1 != a2)
  {
    v6 = a3[6];
    v7 = (void *)(a1 + v6);
    v8 = (const void *)(a2 + v6);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(a1 + v6, &demangling cache variable for type metadata for Environment<MultimodalListStyle.Layout>.Content);
    v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<MultimodalListStyle.Layout>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = type metadata accessor for MultimodalListStyle.Layout();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
  }
  v11 = a3[7];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = type metadata accessor for NavigationPath();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<NavigationPath>);
  *(_QWORD *)(v12 + *(int *)(v15 + 28)) = *(_QWORD *)(v13 + *(int *)(v15 + 28));
  swift_release();
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ClarityUIRootView()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BD48F590(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<MultimodalListStyle.Layout>);
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == (_DWORD)a2)
    {
      v9 = v8;
      v10 = *(int *)(a3 + 24);
    }
    else
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<NavigationPath>);
      v10 = *(int *)(a3 + 28);
    }
    return __swift_getEnumTagSinglePayload((uint64_t)a1 + v10, a2, v9);
  }
}

uint64_t storeEnumTagSinglePayload for ClarityUIRootView()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_QWORD *sub_1BD48F63C(_QWORD *result, uint64_t a2, int a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *result = (a2 - 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<MultimodalListStyle.Layout>);
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
    {
      v9 = v8;
      v10 = *(int *)(a4 + 24);
    }
    else
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<NavigationPath>);
      v10 = *(int *)(a4 + 28);
    }
    return (_QWORD *)__swift_storeEnumTagSinglePayload((uint64_t)v5 + v10, a2, a2, v9);
  }
  return result;
}

void type metadata completion function for ClarityUIRootView()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for Environment<MultimodalListStyle.Layout>.Content(319, (unint64_t *)&lazy cache variable for type metadata for Environment<MultimodalListStyle.Layout>.Content, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDB478], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CD87D0]);
  if (v0 <= 0x3F)
  {
    type metadata accessor for Environment<MultimodalListStyle.Layout>.Content(319, &lazy cache variable for type metadata for State<NavigationPath>, (uint64_t (*)(uint64_t))MEMORY[0x1E0CD9490], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CDF9A8]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void type metadata accessor for Environment<MultimodalListStyle.Layout>.Content(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = a3(255);
    v8 = a4(a1, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<NavigationStack<NavigationPath, <<opaque return type of View.onChange<A>(of:initial:_:)>>.0>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<NavigationStack<NavigationPath, <<opaque return type of View.onChange<A>(of:initial:_:)>>.0>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<NavigationStack<NavigationPath, <<opaque return type of View.onChange<A>(of:initial:_:)>>.0>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<NavigationStack<NavigationPath, <<opaque return type of View.onChange<A>(of:initial:_:)>>.0>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type NavigationStack<NavigationPath, <<opaque return type of View.onChange<A>(of:initial:_:)>>.0> and conformance NavigationStack<A, B>, &demangling cache variable for type metadata for NavigationStack<NavigationPath, <<opaque return type of View.onChange<A>(of:initial:_:)>>.0>);
    v3 = v2;
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<AnyShapeStyle?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<AnyShapeStyle?>);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v5);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<NavigationStack<NavigationPath, <<opaque return type of View.onChange<A>(of:initial:_:)>>.0>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t partial apply for closure #1 in closure #1 in closure #1 in ClarityUIRootView.body.getter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_143();
  v0 = OUTLINED_FUNCTION_0_147();
  return closure #1 in closure #1 in closure #1 in ClarityUIRootView.body.getter(v0, v1);
}

uint64_t partial apply for closure #2 in closure #1 in closure #1 in ClarityUIRootView.body.getter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_143();
  v0 = OUTLINED_FUNCTION_0_147();
  return closure #2 in closure #1 in closure #1 in ClarityUIRootView.body.getter(v0, v1);
}

uint64_t objectdestroyTm_17()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = OUTLINED_FUNCTION_1_143();
  v2 = v0
     + ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80));
  swift_release();
  swift_release();
  v3 = v2 + *(int *)(v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<MultimodalListStyle.Layout>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = type metadata accessor for MultimodalListStyle.Layout();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  }
  else
  {
    swift_release();
  }
  v5 = v2 + *(int *)(v1 + 28);
  v6 = type metadata accessor for NavigationPath();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<NavigationPath>);
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #3 in closure #1 in closure #1 in ClarityUIRootView.body.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_1_143();
  OUTLINED_FUNCTION_0_147();
  return closure #3 in closure #1 in closure #1 in ClarityUIRootView.body.getter(v0);
}

unint64_t lazy protocol witness table accessor for type ClarityUIRecentsView and conformance ClarityUIRecentsView()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ClarityUIRecentsView and conformance ClarityUIRecentsView;
  if (!lazy protocol witness table cache variable for type ClarityUIRecentsView and conformance ClarityUIRecentsView)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ClarityUIRecentsView, &type metadata for ClarityUIRecentsView);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ClarityUIRecentsView and conformance ClarityUIRecentsView);
  }
  return result;
}

uint64_t outlined init with take of ModifiedContent<<<opaque return type of View.navigationDestination<A, B>(for:destination:)>>.0, _OpacityEffect>(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.navigationDestination<A, B>(for:destination:)>>.0, _OpacityEffect>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t outlined init with copy of ModifiedContent<<<opaque return type of View.navigationDestination<A, B>(for:destination:)>>.0, _OpacityEffect>(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.navigationDestination<A, B>(for:destination:)>>.0, _OpacityEffect>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t PeoplePickerViewController.presentMessageComposeViewController(for:withRecipientHandles:shouldIgnoreEmails:delegate:)(void *a1, uint64_t a2, char a3, uint64_t a4)
{
  void *v4;

  swift_getObjectType();
  return specialized PeoplePickerViewController.presentMessageComposeViewController(for:withRecipientHandles:shouldIgnoreEmails:delegate:)(a1, a2, a3, a4, v4);
}

void outlined bridged method (mbgnn) of @objc MFMessageComposeViewController.recipients.setter(uint64_t a1, void *a2)
{
  Class isa;

  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(a2, sel_setRecipients_, isa);
  OUTLINED_FUNCTION_7_1(isa);
}

void outlined bridged method (mbnn) of @objc MFMessageComposeViewController.body.setter(uint64_t a1, uint64_t a2, void *a3)
{
  void *v4;

  v4 = (void *)MEMORY[0x1C3B72E00]();
  swift_bridgeObjectRelease();
  objc_msgSend(a3, sel_setBody_, v4);
  OUTLINED_FUNCTION_7_1(v4);
}

uint64_t dispatch thunk of AnsweringMachine.start()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

Swift::Void __swiftcall FaceTimeControlsView.handleUpdateDuringEphemeralAlert()()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  unsigned int v5;
  void *v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  void *v11;
  id v12;

  v1 = v0;
  v2 = (void *)(*(uint64_t (**)(void))(v0 + 24))();
  outlined consume of ConversationControlsRecipe.View?(v2, v3);
  if (v2)
  {
    v4 = (void *)OUTLINED_FUNCTION_45_9(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 56));
    if (v4)
    {
      v12 = v4;
      v5 = objc_msgSend(v4, sel_isValid);
      v6 = v12;
      if (v5)
      {
        if (one-time initialization token for conversationControls != -1)
          swift_once();
        v7 = OUTLINED_FUNCTION_17_2();
        __swift_project_value_buffer(v7, (uint64_t)&static Logger.conversationControls);
        v8 = Logger.logObject.getter();
        v9 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v8, v9))
        {
          v10 = (uint8_t *)OUTLINED_FUNCTION_105();
          *(_WORD *)v10 = 0;
          _os_log_impl(&dword_1BD004000, v8, v9, "setupRootView: displaying ephemeral alert, hiding new status view", v10, 2u);
          OUTLINED_FUNCTION_60();
        }

        v11 = (void *)OUTLINED_FUNCTION_45_9(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 88));
        objc_msgSend(v11, sel_setAlpha_, 0.0);

        v6 = v11;
      }

    }
  }
}

Swift::Void __swiftcall FaceTimeControlsView.displayEphemeralAlert()()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  id v8;
  void *v9;
  os_log_type_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  _QWORD *v19;
  char aBlock;
  void *v21;
  uint64_t v22;
  _QWORD *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v3 = v1;
  v4 = v0;
  v5 = (void *)(*(uint64_t (**)(void))(v1 + 24))();
  outlined consume of ConversationControlsRecipe.View?(v5, v6);
  if (v5)
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v7 = OUTLINED_FUNCTION_17_2();
    __swift_project_value_buffer(v7, (uint64_t)&static Logger.conversationControls);
    v8 = v2;
    v9 = (void *)OUTLINED_FUNCTION_19_73();
    v10 = static os_log_type_t.default.getter();
    if (OUTLINED_FUNCTION_23(v10))
    {
      OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_4_133(4.8149e-34);
      v11 = String.init<A>(reflecting:)();
      OUTLINED_FUNCTION_57_19(v11, v12, v13, v14);
      OUTLINED_FUNCTION_5_127();

      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_12_103(&dword_1BD004000, v15, v16, "⇢ [%s] 1. Starting display of ephemeral alert");
      OUTLINED_FUNCTION_15_95();
      OUTLINED_FUNCTION_60();
    }

    v17 = (void *)OUTLINED_FUNCTION_9_99();
    objc_msgSend(v17, sel_invalidate);

    objc_opt_self();
    if (one-time initialization token for shared != -1)
      swift_once();
    OUTLINED_FUNCTION_75_1();
    v18 = OUTLINED_FUNCTION_21_8();
    OUTLINED_FUNCTION_70_18();
    v19 = (_QWORD *)OUTLINED_FUNCTION_15();
    v19[2] = v4;
    v19[3] = v3;
    v19[4] = v18;
    aBlock = MEMORY[0x1E0C809B0];
    v21 = OUTLINED_FUNCTION_76_1((uint64_t)thunk for @escaping @callee_guaranteed () -> (), v26, v28, MEMORY[0x1E0C809B0], 1107296256, v30, v32);
    OUTLINED_FUNCTION_49_4();
    v22 = OUTLINED_FUNCTION_21_8();
    OUTLINED_FUNCTION_70_18();
    v23 = (_QWORD *)OUTLINED_FUNCTION_15();
    v23[2] = v4;
    v23[3] = v3;
    v23[4] = v22;
    v24 = OUTLINED_FUNCTION_76_1((uint64_t)thunk for @escaping @callee_guaranteed (@unowned Bool) -> (), v27, v29, aBlock, 1107296256, v31, v33);
    v25 = OUTLINED_FUNCTION_49_4();
    OUTLINED_FUNCTION_13_107(v25, sel_animateWithDuration_animations_completion_);
    _Block_release(v24);
    _Block_release(v21);
  }
  OUTLINED_FUNCTION_11_10();
}

Swift::Void __swiftcall FaceTimeControlsView.cleanUpEphemeralAlert()()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  os_log_type_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  _QWORD *v18;
  char aBlock;
  void *v20;
  uint64_t v21;
  _QWORD *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v4 = v1;
  v5 = v0;
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v6 = OUTLINED_FUNCTION_17_2();
  __swift_project_value_buffer(v6, (uint64_t)&static Logger.conversationControls);
  v7 = v2;
  v8 = (void *)OUTLINED_FUNCTION_19_73();
  v9 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_23(v9))
  {
    OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_4_133(4.8149e-34);
    v10 = String.init<A>(reflecting:)();
    OUTLINED_FUNCTION_57_19(v10, v11, v12, v13);
    OUTLINED_FUNCTION_5_127();

    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_12_103(&dword_1BD004000, v14, v15, "⇢ [%s] 3. Removing ephemeral alert");
    OUTLINED_FUNCTION_15_95();
    OUTLINED_FUNCTION_60();
  }

  v16 = (void *)OUTLINED_FUNCTION_9_99();
  objc_msgSend(v16, sel_invalidate);

  objc_opt_self();
  if (one-time initialization token for shared != -1)
    swift_once();
  OUTLINED_FUNCTION_75_1();
  v17 = OUTLINED_FUNCTION_21_8();
  OUTLINED_FUNCTION_70_18();
  v18 = (_QWORD *)OUTLINED_FUNCTION_15();
  v18[2] = v5;
  v18[3] = v4;
  v18[4] = v17;
  aBlock = MEMORY[0x1E0C809B0];
  v20 = OUTLINED_FUNCTION_76_1((uint64_t)thunk for @escaping @callee_guaranteed () -> (), v25, v27, MEMORY[0x1E0C809B0], 1107296256, v29, v31);
  OUTLINED_FUNCTION_49_4();
  v21 = OUTLINED_FUNCTION_21_8();
  OUTLINED_FUNCTION_70_18();
  v22 = (_QWORD *)OUTLINED_FUNCTION_15();
  v22[2] = v5;
  v22[3] = v4;
  v22[4] = v21;
  v23 = OUTLINED_FUNCTION_76_1((uint64_t)thunk for @escaping @callee_guaranteed (@unowned Bool) -> (), v26, v28, aBlock, 1107296256, v30, v32);
  v24 = OUTLINED_FUNCTION_49_4();
  OUTLINED_FUNCTION_13_107(v24, sel_animateWithDuration_animations_completion_);
  _Block_release(v23);
  _Block_release(v20);
  OUTLINED_FUNCTION_11_10();
}

