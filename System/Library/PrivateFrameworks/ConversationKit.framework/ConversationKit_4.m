uint64_t storeEnumTagSinglePayload for GridLayout.Orientation(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BD1DDE48 + 4 * byte_1BD650589[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BD1DDE7C + 4 * byte_1BD650584[v4]))();
}

uint64_t sub_1BD1DDE7C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD1DDE84(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD1DDE8CLL);
  return result;
}

uint64_t sub_1BD1DDE98(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD1DDEA0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BD1DDEA4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD1DDEAC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for GridLayout.Orientation()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t getEnumTagSinglePayload for GridLayout.Configuration(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  BOOL v4;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 18))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 17);
      v4 = v3 >= 2;
      v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GridLayout.Configuration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 18) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 18) = 0;
    if (a2)
      *(_BYTE *)(result + 17) = a2 + 1;
  }
  return result;
}

void type metadata accessor for GridLayout.Configuration()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for GridLayout.GridSize()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t VideoAttributeCamera.cameraPosition.getter(unsigned int a1)
{
  if (a1 >= 4)
    return 0;
  else
    return 0x2010100u >> (8 * a1);
}

__n128 ButtonGradientBackgroundView.buttonFrame.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  char v4;
  __n128 result;
  __int128 v6;

  v3 = v1 + OBJC_IVAR____TtC15ConversationKit28ButtonGradientBackgroundView_buttonFrame;
  OUTLINED_FUNCTION_1();
  v4 = *(_BYTE *)(v3 + 32);
  result = *(__n128 *)v3;
  v6 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_OWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 32) = v4;
  return result;
}

__n128 key path getter for ButtonGradientBackgroundView.buttonFrame : ButtonGradientBackgroundView@<Q0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char v4;
  __n128 result;
  __int128 v6;

  v3 = *a1 + OBJC_IVAR____TtC15ConversationKit28ButtonGradientBackgroundView_buttonFrame;
  swift_beginAccess();
  v4 = *(_BYTE *)(v3 + 32);
  result = *(__n128 *)v3;
  v6 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a2 = *(_OWORD *)v3;
  *(_OWORD *)(a2 + 16) = v6;
  *(_BYTE *)(a2 + 32) = v4;
  return result;
}

uint64_t key path setter for ButtonGradientBackgroundView.buttonFrame : ButtonGradientBackgroundView(uint64_t a1)
{
  _BYTE v2[40];

  outlined init with take of CGRect?(a1, (uint64_t)v2);
  return ButtonGradientBackgroundView.buttonFrame.setter((uint64_t)v2);
}

uint64_t ButtonGradientBackgroundView.buttonFrame.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[40];

  v3 = v1 + OBJC_IVAR____TtC15ConversationKit28ButtonGradientBackgroundView_buttonFrame;
  swift_beginAccess();
  outlined init with take of CGRect?(v3, (uint64_t)v5);
  outlined init with take of CGRect?(a1, v3);
  return ButtonGradientBackgroundView.buttonFrame.didset((uint64_t)v5);
}

uint64_t outlined init with take of CGRect?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CGRect?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t ButtonGradientBackgroundView.buttonFrame.didset(uint64_t a1)
{
  char *v1;
  CGFloat v3;
  CGFloat v4;
  CGFloat v5;
  CGFloat v6;
  double *v7;
  CGFloat v8;
  CGFloat v9;
  CGFloat v10;
  CGFloat v11;
  char v12;
  uint64_t result;
  _QWORD v14[5];
  _BYTE v15[40];
  CGRect v16;
  CGRect v17;

  outlined init with take of CGRect?(a1, (uint64_t)v14);
  v3 = *(double *)v14;
  v4 = *(double *)&v14[1];
  v5 = *(double *)&v14[2];
  v6 = *(double *)&v14[3];
  v7 = (double *)&v1[OBJC_IVAR____TtC15ConversationKit28ButtonGradientBackgroundView_buttonFrame];
  swift_beginAccess();
  v8 = *v7;
  v9 = v7[1];
  v10 = v7[2];
  v11 = v7[3];
  v12 = *((_BYTE *)v7 + 32);
  result = outlined init with take of CGRect?(a1, (uint64_t)v15);
  if ((v15[32] & 1) != 0)
  {
    if ((v12 & 1) != 0)
      return result;
    return (uint64_t)objc_msgSend(v1, sel_setNeedsDisplay);
  }
  if ((v12 & 1) != 0)
    return (uint64_t)objc_msgSend(v1, sel_setNeedsDisplay);
  v16.origin.x = v3;
  v16.origin.y = v4;
  v16.size.width = v5;
  v16.size.height = v6;
  v17.origin.x = v8;
  v17.origin.y = v9;
  v17.size.width = v10;
  v17.size.height = v11;
  result = CGRectEqualToRect(v16, v17);
  if ((result & 1) == 0)
    return (uint64_t)objc_msgSend(v1, sel_setNeedsDisplay);
  return result;
}

void (*ButtonGradientBackgroundView.buttonFrame.modify(_QWORD *a1))(void **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  char v5;
  __int128 v6;

  v3 = malloc(0x98uLL);
  *a1 = v3;
  v3[18] = v1;
  v4 = v1 + OBJC_IVAR____TtC15ConversationKit28ButtonGradientBackgroundView_buttonFrame;
  OUTLINED_FUNCTION_1();
  v5 = *(_BYTE *)(v4 + 32);
  v6 = *(_OWORD *)(v4 + 16);
  *((_OWORD *)v3 + 5) = *(_OWORD *)v4;
  *((_OWORD *)v3 + 6) = v6;
  *((_BYTE *)v3 + 112) = v5;
  return ButtonGradientBackgroundView.buttonFrame.modify;
}

void ButtonGradientBackgroundView.buttonFrame.modify(void **a1, char a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *a1;
  v3 = (uint64_t)*a1 + 40;
  v4 = (uint64_t)*a1 + 80;
  if ((a2 & 1) != 0)
    v5 = (uint64_t)v2;
  else
    v5 = v3;
  outlined init with take of CGRect?(v4, v5);
  ButtonGradientBackgroundView.buttonFrame.setter(v5);
  free(v2);
}

id ButtonGradientBackgroundView.__allocating_init(participantCount:)()
{
  uint64_t v0;

  OUTLINED_FUNCTION_16_1();
  return ButtonGradientBackgroundView.init(participantCount:)(v0);
}

id ButtonGradientBackgroundView.init(participantCount:)(uint64_t a1)
{
  char *v1;
  objc_class *ObjectType;
  char *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  double v9;
  id v10;
  objc_super v12;

  ObjectType = (objc_class *)swift_getObjectType();
  v4 = &v1[OBJC_IVAR____TtC15ConversationKit28ButtonGradientBackgroundView_buttonFrame];
  *(_OWORD *)v4 = 0u;
  *((_OWORD *)v4 + 1) = 0u;
  v4[32] = 1;
  v12.receiver = v1;
  v12.super_class = ObjectType;
  v5 = objc_msgSendSuper2(&v12, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v6 = (void *)objc_opt_self();
  v7 = v5;
  v8 = objc_msgSend(v6, sel_clearColor);
  objc_msgSend(v7, sel_setBackgroundColor_, v8);

  objc_msgSend(v7, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v9 = 1.0;
  if (!a1)
    v9 = 0.0;
  objc_msgSend(v7, sel_setAlpha_, v9);
  v10 = v7;
  UIView.addTapInteraction(withTapCount:)(1);

  return v10;
}

id ButtonGradientBackgroundView.__allocating_init(coder:)()
{
  void *v0;
  id v1;

  v1 = objc_msgSend(OUTLINED_FUNCTION_16_1(), sel_initWithCoder_, v0);

  return v1;
}

void ButtonGradientBackgroundView.init(coder:)()
{
  char *v0;
  char *v1;

  v1 = &v0[OBJC_IVAR____TtC15ConversationKit28ButtonGradientBackgroundView_buttonFrame];
  *(_OWORD *)v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  v1[32] = 1;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

Swift::Void __swiftcall ButtonGradientBackgroundView.draw(_:)(__C::CGRect a1)
{
  uint64_t v1;
  void *v2;
  CGContext *v3;
  CGContext *v4;
  uint64_t v5;
  CGFloat v6;
  CGFloat v7;
  CGFloat v8;
  CGFloat v9;
  double MaxY;
  double v11;
  double v12;
  CGFloat v13;
  double v14;
  CGFloat Height;
  double v16;
  double v17;
  CGColorSpace *DeviceRGB;
  uint64_t v19;
  id v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v24;
  id v25;
  id v26;
  uint64_t v27;
  id v28;
  id v29;
  const __CFArray *isa;
  CGGradientRef v31;
  CGGradient *v32;
  CGFloat MinY;
  double v34;
  CGFloat v35[5];
  CGPoint v36;
  CGPoint v37;
  CGRect v38;
  CGRect v39;
  CGRect v40;
  CGRect v41;
  CGRect v42;

  v3 = UIGraphicsGetCurrentContext();
  if (v3)
  {
    v4 = v3;
    v5 = v1 + OBJC_IVAR____TtC15ConversationKit28ButtonGradientBackgroundView_buttonFrame;
    OUTLINED_FUNCTION_1();
    if ((*(_BYTE *)(v5 + 32) & 1) == 0)
    {
      v7 = *(double *)(v5 + 16);
      v6 = *(double *)(v5 + 24);
      v9 = *(double *)v5;
      v8 = *(double *)(v5 + 8);
      OUTLINED_FUNCTION_10_14();
      MaxY = CGRectGetMaxY(v38);
      v39.origin.x = v9;
      v39.origin.y = v8;
      v39.size.width = v7;
      v39.size.height = v6;
      v11 = MaxY - CGRectGetMinY(v39);
      if (v11 > 0.0)
        v12 = v11;
      else
        v12 = 0.0;
      v34 = OUTLINED_FUNCTION_2_80() - v12 / 1.73205081;
      OUTLINED_FUNCTION_10_14();
      MinY = CGRectGetMinY(v40);
      OUTLINED_FUNCTION_10_14();
      v13 = CGRectGetHeight(v41) - v12;
      v14 = OUTLINED_FUNCTION_2_80() + v13 / 1.73205081;
      OUTLINED_FUNCTION_10_14();
      Height = CGRectGetHeight(v42);
      v16 = sqrt(v12 * v12 + v12 / 1.73205081 * (v12 / 1.73205081)) / sqrt((v14 - v34) * (v14 - v34) + Height * Height);
      if (v16 <= 1.0)
        v17 = v16;
      else
        v17 = 1.0;
      DeviceRGB = CGColorSpaceCreateDeviceRGB();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
      v19 = swift_allocObject();
      *(_OWORD *)(v19 + 16) = xmmword_1BD644140;
      v20 = objc_msgSend(objc_msgSend((id)objc_opt_self(), sel_blackColor), sel_CGColor);
      OUTLINED_FUNCTION_14();
      *(_QWORD *)(v19 + 32) = v2;
      v22 = objc_msgSend(OUTLINED_FUNCTION_2_2(v21, sel_blackColor), sel_colorWithAlphaComponent_, 0.9);
      OUTLINED_FUNCTION_14();
      v23 = OUTLINED_FUNCTION_5_73();

      *(_QWORD *)(v19 + 40) = v23;
      v25 = objc_msgSend(OUTLINED_FUNCTION_2_2(v24, sel_blackColor), sel_colorWithAlphaComponent_, 0.65);
      OUTLINED_FUNCTION_14();
      v26 = OUTLINED_FUNCTION_5_73();

      *(_QWORD *)(v19 + 48) = v26;
      v28 = OUTLINED_FUNCTION_2_2(v27, sel_clearColor);
      v29 = objc_msgSend(v28, sel_CGColor);

      *(_QWORD *)(v19 + 56) = v29;
      *(_QWORD *)&v35[4] = v19;
      specialized Array._endMutation()();
      type metadata accessor for CGColorRef(0);
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      v35[0] = 0.0;
      v35[1] = v17;
      v35[2] = v17 + (1.0 - v17) * 0.5;
      v35[3] = 1.0;
      v31 = CGGradientCreateWithColors(DeviceRGB, isa, v35);

      if (v31)
      {
        v32 = v31;
        v36.x = v34;
        v37.y = MinY;
        v36.y = MaxY;
        v37.x = v14;
        CGContextDrawLinearGradient(v4, v32, v36, v37, 1u);

      }
    }

  }
}

id ButtonGradientBackgroundView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

void ButtonGradientBackgroundView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id ButtonGradientBackgroundView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ButtonGradientBackgroundView()
{
  return objc_opt_self();
}

uint64_t method lookup function for ButtonGradientBackgroundView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ButtonGradientBackgroundView.__allocating_init(participantCount:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

void AudioPowerSpectrumViewModel.init(call:callCenter:notificationCenter:)()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  char *v25;
  void **v26;
  void *v27;
  char *v28;
  id v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  void *v36;
  objc_super v37;
  uint64_t v38;
  uint64_t v39;

  OUTLINED_FUNCTION_93();
  v38 = v1;
  v39 = v2;
  v34 = v3;
  v35 = v4;
  v36 = v5;
  v6 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  v31 = *(_QWORD *)(v6 - 8);
  v32 = v6;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_77();
  v33 = v9 - v8;
  type metadata accessor for OS_dispatch_queue.Attributes();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_6_0();
  type metadata accessor for DispatchQoS();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_77();
  v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<[Float]>);
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_16_2();
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit27AudioPowerSpectrumViewModel_call] = 0;
  v13 = one-time initialization token for initialPowerSpectrum;
  v14 = v0;
  if (v13 != -1)
    swift_once();
  OUTLINED_FUNCTION_63_16();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [Float]);
  OUTLINED_FUNCTION_45_27();
  OUTLINED_FUNCTION_43_28();
  OUTLINED_FUNCTION_63_16();
  OUTLINED_FUNCTION_45_27();
  OUTLINED_FUNCTION_43_28();
  v15 = OBJC_IVAR____TtC15ConversationKit27AudioPowerSpectrumViewModel_waveformColorRemote;
  v16 = (void *)objc_opt_self();
  *(_QWORD *)&v14[v15] = objc_msgSend(v16, sel_greenColor);
  v17 = OBJC_IVAR____TtC15ConversationKit27AudioPowerSpectrumViewModel_waveformColorLocal;
  *(_QWORD *)&v14[v17] = objc_msgSend(v16, sel_orangeColor);
  v14[OBJC_IVAR____TtC15ConversationKit27AudioPowerSpectrumViewModel_needsBackdropFilterLayer] = 1;
  *(_QWORD *)&v14[OBJC_IVAR____TtC15ConversationKit27AudioPowerSpectrumViewModel_localWaveformFilter] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC15ConversationKit27AudioPowerSpectrumViewModel_remoteWaveformFilter] = 0;
  v18 = &v14[OBJC_IVAR____TtC15ConversationKit27AudioPowerSpectrumViewModel_localParticipantStreamToken];
  *(_QWORD *)v18 = 0;
  v18[8] = 1;
  v19 = &v14[OBJC_IVAR____TtC15ConversationKit27AudioPowerSpectrumViewModel_remoteParticipantStreamToken];
  *(_QWORD *)v19 = 0;
  v19[8] = 1;
  *(_QWORD *)&v14[OBJC_IVAR____TtC15ConversationKit27AudioPowerSpectrumViewModel_cancellables] = MEMORY[0x1E0DEE9D8];
  v14[OBJC_IVAR____TtC15ConversationKit27AudioPowerSpectrumViewModel_hasActiveWaveform] = 0;
  type metadata accessor for AudioPowerTap();
  type metadata accessor for CellularAudioSampleNormalizer();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type CellularAudioSampleNormalizer and conformance CellularAudioSampleNormalizer, (void (*)(uint64_t))type metadata accessor for CellularAudioSampleNormalizer);
  OUTLINED_FUNCTION_56_18(0);
  if (!v20)
  {
    __break(1u);
    goto LABEL_9;
  }
  *(_QWORD *)&v14[OBJC_IVAR____TtC15ConversationKit27AudioPowerSpectrumViewModel_uplinkPowerTap] = v20;
  OUTLINED_FUNCTION_56_18(1);
  if (!v21)
  {
LABEL_9:
    __break(1u);
    return;
  }
  *(_QWORD *)&v14[OBJC_IVAR____TtC15ConversationKit27AudioPowerSpectrumViewModel_downlinkPowerTap] = v21;
  v22 = OBJC_IVAR____TtC15ConversationKit27AudioPowerSpectrumViewModel_audioPowerTapQueue;
  OUTLINED_FUNCTION_59(v21, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  static DispatchQoS.userInitiated.getter();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes, (void (*)(uint64_t))MEMORY[0x1E0DEF810]);
  OUTLINED_FUNCTION_31_11();
  OUTLINED_FUNCTION_34_7(&lazy protocol witness table cache variable for type [OS_dispatch_queue.Attributes] and conformance [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v31 + 104))(v33, *MEMORY[0x1E0DEF8D0], v32);
  *(_QWORD *)&v14[v22] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  *(_QWORD *)&v14[OBJC_IVAR____TtC15ConversationKit27AudioPowerSpectrumViewModel_callCenter] = v34;
  *(_QWORD *)&v14[OBJC_IVAR____TtC15ConversationKit27AudioPowerSpectrumViewModel_notificationCenter] = v35;
  v23 = v34;
  v24 = v35;

  v37.receiver = v14;
  v37.super_class = (Class)ObjC metadata update function for AudioPowerSpectrumViewModel();
  v25 = (char *)objc_msgSendSuper2(&v37, sel_init);
  v26 = (void **)&v25[OBJC_IVAR____TtC15ConversationKit27AudioPowerSpectrumViewModel_call];
  OUTLINED_FUNCTION_2_0();
  v27 = *v26;
  *v26 = v36;
  v28 = v25;
  v29 = v36;

  v30 = v28;
  if (v36)
  {
    v30 = (char *)v29;
    AudioPowerSpectrumViewModel.updateWaveform(forCall:)(v30);

  }
}

void AudioPowerSpectrumViewModel.call.getter()
{
  OUTLINED_FUNCTION_1_7();
  OUTLINED_FUNCTION_64_11();
  OUTLINED_FUNCTION_32();
}

void AudioPowerSpectrumViewModel.call.setter(void *a1)
{
  uint64_t v1;
  id *v3;
  id v4;
  id v5;
  id v6;
  id v7;

  v3 = (id *)(v1 + OBJC_IVAR____TtC15ConversationKit27AudioPowerSpectrumViewModel_call);
  OUTLINED_FUNCTION_2_0();
  v4 = *v3;
  v5 = *v3;
  AudioPowerSpectrumViewModel.call.willset(a1);
  v6 = *v3;
  *v3 = a1;
  v7 = a1;

  AudioPowerSpectrumViewModel.call.didset(v4);
}

void AudioPowerSpectrumViewModel.call.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  void **v4;
  void *v5;
  id v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = (void **)(v1 + OBJC_IVAR____TtC15ConversationKit27AudioPowerSpectrumViewModel_call);
  OUTLINED_FUNCTION_2_0();
  v5 = *v4;
  v3[3] = *v4;
  v6 = v5;
  OUTLINED_FUNCTION_18();
}

void AudioPowerSpectrumViewModel.call.modify(uint64_t a1, char a2)
{
  void *v2;
  id v3;
  id *v4;
  id v5;

  v2 = *(void **)a1;
  v4 = (id *)(*(_QWORD *)a1 + 24);
  v3 = *v4;
  if ((a2 & 1) != 0)
  {
    v5 = v3;
    AudioPowerSpectrumViewModel.call.setter(v3);

  }
  else
  {
    AudioPowerSpectrumViewModel.call.setter(*(void **)(*(_QWORD *)a1 + 24));
  }
  OUTLINED_FUNCTION_4_2(v2);
}

uint64_t AudioPowerSpectrumViewModel.localPowerSpectrum.getter()
{
  return AudioPowerSpectrumViewModel.localPowerSpectrum.getter();
}

{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t AudioPowerSpectrumViewModel.localPowerSpectrum.setter()
{
  return AudioPowerSpectrumViewModel.localPowerSpectrum.setter();
}

{
  void *v0;
  id v1;

  swift_getKeyPath();
  swift_getKeyPath();
  v1 = v0;
  return static Published.subscript.setter();
}

void AudioPowerSpectrumViewModel.localPowerSpectrum.modify()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t KeyPath;

  v1 = OUTLINED_FUNCTION_45();
  *v0 = v1;
  v1[4] = swift_getKeyPath();
  KeyPath = swift_getKeyPath();
  v1[6] = OUTLINED_FUNCTION_19_4(KeyPath);
  OUTLINED_FUNCTION_18();
}

void AudioPowerSpectrumViewModel.$localPowerSpectrum.getter()
{
  AudioPowerSpectrumViewModel.$localPowerSpectrum.getter();
}

{
  OUTLINED_FUNCTION_2_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<[Float]>);
  OUTLINED_FUNCTION_50_0();
  swift_endAccess();
  OUTLINED_FUNCTION_32();
}

void AudioPowerSpectrumViewModel.$localPowerSpectrum.setter(uint64_t a1)
{
  AudioPowerSpectrumViewModel.$localPowerSpectrum.setter(a1);
}

{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<[Float]>.Publisher);
  OUTLINED_FUNCTION_26_24();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_11_2();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, a1, v1);
  OUTLINED_FUNCTION_2_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<[Float]>);
  Published.projectedValue.setter();
  swift_endAccess();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v1);
  OUTLINED_FUNCTION_91();
}

void AudioPowerSpectrumViewModel.$localPowerSpectrum.modify()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  void *v4;

  v2 = OUTLINED_FUNCTION_46_17();
  *v0 = v2;
  v2[3] = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<[Float]>.Publisher);
  v4 = OUTLINED_FUNCTION_15_3(v3);
  v2[7] = OUTLINED_FUNCTION_53_1((uint64_t)v4);
  OUTLINED_FUNCTION_2_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<[Float]>);
  OUTLINED_FUNCTION_50_0();
  swift_endAccess();
  OUTLINED_FUNCTION_18();
}

void AudioPowerSpectrumViewModel.$localPowerSpectrum.modify(uint64_t a1, char a2)
{
  LinkDetailHeaderView.$invitedMemberHandles.modify(a1, a2, (void (*)(void *))AudioPowerSpectrumViewModel.$localPowerSpectrum.setter);
}

uint64_t AudioPowerSpectrumViewModel.remotePowerSpectrum.getter()
{
  return AudioPowerSpectrumViewModel.localPowerSpectrum.getter();
}

uint64_t AudioPowerSpectrumViewModel.remotePowerSpectrum.setter()
{
  return AudioPowerSpectrumViewModel.localPowerSpectrum.setter();
}

void AudioPowerSpectrumViewModel.remotePowerSpectrum.modify()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t KeyPath;

  v1 = OUTLINED_FUNCTION_45();
  *v0 = v1;
  v1[4] = swift_getKeyPath();
  KeyPath = swift_getKeyPath();
  v1[6] = OUTLINED_FUNCTION_19_4(KeyPath);
  OUTLINED_FUNCTION_18();
}

void AudioPowerSpectrumViewModel.localPowerSpectrum.modify(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 48))(*a1, 0);
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_4_2(v1);
}

void AudioPowerSpectrumViewModel.$remotePowerSpectrum.getter()
{
  AudioPowerSpectrumViewModel.$localPowerSpectrum.getter();
}

void AudioPowerSpectrumViewModel.$remotePowerSpectrum.setter(uint64_t a1)
{
  AudioPowerSpectrumViewModel.$localPowerSpectrum.setter(a1);
}

void AudioPowerSpectrumViewModel.$remotePowerSpectrum.modify()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  void *v4;

  v2 = OUTLINED_FUNCTION_46_17();
  *v0 = v2;
  v2[3] = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<[Float]>.Publisher);
  v4 = OUTLINED_FUNCTION_15_3(v3);
  v2[7] = OUTLINED_FUNCTION_53_1((uint64_t)v4);
  OUTLINED_FUNCTION_2_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<[Float]>);
  OUTLINED_FUNCTION_50_0();
  swift_endAccess();
  OUTLINED_FUNCTION_18();
}

void AudioPowerSpectrumViewModel.$remotePowerSpectrum.modify(uint64_t a1, char a2)
{
  LinkDetailHeaderView.$invitedMemberHandles.modify(a1, a2, (void (*)(void *))AudioPowerSpectrumViewModel.$remotePowerSpectrum.setter);
}

id AudioPowerSpectrumViewModel.waveformColorRemote.getter()
{
  id *v0;

  OUTLINED_FUNCTION_1_7();
  return OUTLINED_FUNCTION_27_27(*v0);
}

void AudioPowerSpectrumViewModel.waveformColorRemote.setter()
{
  AudioPowerSpectrumViewModel.waveformColorRemote.setter();
}

{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_54_7();
  OUTLINED_FUNCTION_32();
}

void AudioPowerSpectrumViewModel.waveformColorRemote.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

id AudioPowerSpectrumViewModel.waveformColorLocal.getter()
{
  id *v0;

  OUTLINED_FUNCTION_1_7();
  return OUTLINED_FUNCTION_27_27(*v0);
}

void AudioPowerSpectrumViewModel.waveformColorLocal.setter()
{
  AudioPowerSpectrumViewModel.waveformColorRemote.setter();
}

void AudioPowerSpectrumViewModel.waveformColorLocal.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t AudioPowerSpectrumViewModel.needsBackdropFilterLayer.getter()
{
  unsigned __int8 *v0;

  OUTLINED_FUNCTION_1_7();
  return *v0;
}

void AudioPowerSpectrumViewModel.needsBackdropFilterLayer.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit27AudioPowerSpectrumViewModel_needsBackdropFilterLayer);
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  OUTLINED_FUNCTION_32();
}

void AudioPowerSpectrumViewModel.needsBackdropFilterLayer.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void AudioPowerSpectrumViewModel.localWaveformFilter.getter()
{
  OUTLINED_FUNCTION_1_7();
  OUTLINED_FUNCTION_64_11();
  OUTLINED_FUNCTION_32();
}

void AudioPowerSpectrumViewModel.localWaveformFilter.setter()
{
  AudioPowerSpectrumViewModel.waveformColorRemote.setter();
}

void AudioPowerSpectrumViewModel.localWaveformFilter.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void AudioPowerSpectrumViewModel.remoteWaveformFilter.getter()
{
  OUTLINED_FUNCTION_1_7();
  OUTLINED_FUNCTION_64_11();
  OUTLINED_FUNCTION_32();
}

void AudioPowerSpectrumViewModel.remoteWaveformFilter.setter()
{
  AudioPowerSpectrumViewModel.waveformColorRemote.setter();
}

void AudioPowerSpectrumViewModel.remoteWaveformFilter.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void AudioPowerSpectrumViewModel.cancellables.setter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit27AudioPowerSpectrumViewModel_cancellables);
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_32();
}

Swift::Void __swiftcall AudioPowerSpectrumViewModel.start()()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  if ((*((_BYTE *)v0 + OBJC_IVAR____TtC15ConversationKit27AudioPowerSpectrumViewModel_hasActiveWaveform) & 1) != 0)
  {
    OUTLINED_FUNCTION_18();
  }
  else
  {
    v1 = v0;
    if (one-time initialization token for default != -1)
      swift_once();
    v2 = OUTLINED_FUNCTION_17_2();
    v3 = OUTLINED_FUNCTION_3(v2, (uint64_t)&static Log.default);
    v4 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = (uint8_t *)OUTLINED_FUNCTION_105();
      *(_WORD *)v5 = 0;
      _os_log_impl(&dword_1BD004000, v3, v4, "Starting power spectrum observation", v5, 2u);
      OUTLINED_FUNCTION_60();
    }

    v6 = OUTLINED_FUNCTION_41_22(*v1);
    if (v6)
    {
      v9 = (void *)v6;
      AudioPowerSpectrumViewModel.callChanged(_:)();

    }
    AudioPowerSpectrumViewModel.registerNotifications()(v6, v7, v8);
  }
}

Swift::Void __swiftcall AudioPowerSpectrumViewModel.stop(caller:)(Swift::String caller)
{
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;

  object = caller._object;
  countAndFlagsBits = caller._countAndFlagsBits;
  if (one-time initialization token for default != -1)
    swift_once();
  v3 = OUTLINED_FUNCTION_17_2();
  __swift_project_value_buffer(v3, (uint64_t)&static Log.default);
  swift_bridgeObjectRetain_n();
  v4 = Logger.logObject.getter();
  v5 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)OUTLINED_FUNCTION_105();
    v7 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v6 = 136315138;
    swift_bridgeObjectRetain();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(countAndFlagsBits, (unint64_t)object, &v7);
    OUTLINED_FUNCTION_32_4();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    OUTLINED_FUNCTION_48(&dword_1BD004000, v4, v5, "Stopping power spectrum observation by: %s", v6);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

  swift_bridgeObjectRelease_n();
  AudioPowerSpectrumViewModel.unregisterNotifications()();
  AudioPowerSpectrumViewModel.removeObservation()();
}

void AudioPowerSpectrumViewModel.registerNotifications()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;

  v4 = OUTLINED_FUNCTION_37_28(a1, a2, a3, (uint64_t)sel_handleCallStatusChanged_, *MEMORY[0x1E0DBD4A0]);
  OUTLINED_FUNCTION_37_28((uint64_t)v4, v5, v6, (uint64_t)sel_handleCallRecordingStateChanged_, *MEMORY[0x1E0DBD538]);
  *(_BYTE *)(v3 + OBJC_IVAR____TtC15ConversationKit27AudioPowerSpectrumViewModel_hasActiveWaveform) = 1;
  OUTLINED_FUNCTION_18();
}

id AudioPowerSpectrumViewModel.unregisterNotifications()()
{
  uint64_t v0;
  id result;

  result = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15ConversationKit27AudioPowerSpectrumViewModel_notificationCenter), sel_removeObserver_name_object_, v0, *MEMORY[0x1E0DBD4A0], 0);
  *(_BYTE *)(v0 + OBJC_IVAR____TtC15ConversationKit27AudioPowerSpectrumViewModel_hasActiveWaveform) = 0;
  return result;
}

void AudioPowerSpectrumViewModel.handleCallStatusChanged(_:)()
{
  uint64_t v0;
  NSObject *v1;
  uint64_t v2;
  os_log_type_t v3;
  uint8_t *v4;
  NSObject *v5;
  _BYTE v6[24];
  uint64_t v7;

  v0 = Notification.object.getter();
  if (v7)
  {
    OUTLINED_FUNCTION_59(v0, (unint64_t *)&lazy cache variable for type metadata for TUCall);
    if ((OUTLINED_FUNCTION_97() & 1) != 0)
    {
      v1 = v5;
      AudioPowerSpectrumViewModel.callChanged(_:)();
      goto LABEL_9;
    }
  }
  else
  {
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v6, &demangling cache variable for type metadata for Any?);
  }
  if (one-time initialization token for default != -1)
    swift_once();
  v2 = OUTLINED_FUNCTION_17_2();
  v1 = OUTLINED_FUNCTION_3(v2, (uint64_t)&static Log.default);
  v3 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v1, v3))
  {
    v4 = (uint8_t *)OUTLINED_FUNCTION_105();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_1BD004000, v1, v3, "AudioPowerSpectrumViewModel.callStatusChanged without valid call", v4, 2u);
    OUTLINED_FUNCTION_60();
  }
LABEL_9:

}

void AudioPowerSpectrumViewModel.callChanged(_:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  void *v9;
  id v10;
  char v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  id v24;
  __int128 v25;
  __int128 v26;
  _UNKNOWN **v27;
  uint64_t v28;

  OUTLINED_FUNCTION_93();
  v4 = v0;
  type metadata accessor for DispatchPredicate();
  OUTLINED_FUNCTION_26_24();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_59(v6, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v2 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v3 + 104))(v2, *MEMORY[0x1E0DEF740], v1);
  v7 = _dispatchPreconditionTest(_:)();
  OUTLINED_FUNCTION_19_44();
  if ((v7 & 1) == 0)
  {
    __break(1u);
LABEL_16:
    swift_once();
    goto LABEL_8;
  }
  v8 = OUTLINED_FUNCTION_41_22(*v4);
  if (v8)
  {
    v9 = (void *)v8;
    OUTLINED_FUNCTION_59(v8, (unint64_t *)&lazy cache variable for type metadata for TUCall);
    v10 = OUTLINED_FUNCTION_60_3();
    v11 = static NSObject.== infix(_:_:)();

    if ((v11 & 1) != 0)
    {
      if (objc_msgSend(v10, sel_isActive))
      {
        v12 = objc_msgSend(*(id *)((char *)v4 + OBJC_IVAR____TtC15ConversationKit27AudioPowerSpectrumViewModel_callCenter), sel_activeConversationForCall_, v10);
        v13 = v12;
        if (v12)
        {
          OUTLINED_FUNCTION_59((uint64_t)v12, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
          *((_QWORD *)&v26 + 1) = v14;
          v27 = &protocol witness table for TUConversation;
          *(_QWORD *)&v25 = v13;
        }
        else
        {
          v27 = 0;
          v25 = 0u;
          v26 = 0u;
        }
        v24 = v13;
        AudioPowerSpectrumViewModel.observeActiveCall(using:)();

        outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)&v25, &demangling cache variable for type metadata for Conversation?);
      }
      else
      {
        AudioPowerSpectrumViewModel.removeObservation()();
      }
      goto LABEL_11;
    }
  }
  if (one-time initialization token for default != -1)
    goto LABEL_16;
LABEL_8:
  v15 = OUTLINED_FUNCTION_17_2();
  __swift_project_value_buffer(v15, (uint64_t)&static Log.default);
  v16 = OUTLINED_FUNCTION_60_3();
  v17 = Logger.logObject.getter();
  v18 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)OUTLINED_FUNCTION_105();
    v20 = OUTLINED_FUNCTION_105();
    *(_QWORD *)&v25 = v20;
    *(_DWORD *)v19 = 136315138;
    v28 = (uint64_t)v16;
    OUTLINED_FUNCTION_59(v20, (unint64_t *)&lazy cache variable for type metadata for TUCall);
    v21 = v16;
    v22 = String.init<A>(reflecting:)();
    v28 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v22, v23, (uint64_t *)&v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    OUTLINED_FUNCTION_48(&dword_1BD004000, v17, v18, "Skipping registering for power spectrum: %s", v19);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

LABEL_11:
  OUTLINED_FUNCTION_52_1();
}

void AudioPowerSpectrumViewModel.observeActiveCall(using:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  id v22;

  OUTLINED_FUNCTION_93();
  v3 = type metadata accessor for NSRunLoop.SchedulerTimeType.Stride();
  v19 = *(_QWORD *)(v3 - 8);
  v20 = v3;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_6_0();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.CombineLatest<CurrentValueSubject<[Float]?, Never>, CurrentValueSubject<[Float]?, Never>>);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_77();
  v9 = v8 - v7;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.Throttle<Publishers.CombineLatest<CurrentValueSubject<[Float]?, Never>, CurrentValueSubject<[Float]?, Never>>, NSRunLoop>);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_11_2();
  v12 = (void *)OUTLINED_FUNCTION_50_4(*v0);
  if (v12)
  {
    v13 = v12;
    if ((objc_msgSend(v12, sel_isVideo) & 1) == 0)
    {
      OUTLINED_FUNCTION_38_27(OBJC_IVAR____TtC15ConversationKit27AudioPowerSpectrumViewModel_uplinkPowerTap);
      OUTLINED_FUNCTION_38_27(OBJC_IVAR____TtC15ConversationKit27AudioPowerSpectrumViewModel_downlinkPowerTap);
      OUTLINED_FUNCTION_31_11();
      OUTLINED_FUNCTION_34_7(&lazy protocol witness table cache variable for type CurrentValueSubject<[Float]?, Never> and conformance CurrentValueSubject<A, B>);
      Publishers.CombineLatest.init(_:_:)();
      static NSRunLoop.SchedulerTimeType.Stride.seconds(_:)();
      v22 = objc_msgSend((id)objc_opt_self(), sel_mainRunLoop);
      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSRunLoop);
      lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Publishers.CombineLatest<CurrentValueSubject<[Float]?, Never>, CurrentValueSubject<[Float]?, Never>> and conformance Publishers.CombineLatest<A, B>, &demangling cache variable for type metadata for Publishers.CombineLatest<CurrentValueSubject<[Float]?, Never>, CurrentValueSubject<[Float]?, Never>>);
      lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop();
      Publisher.throttle<A>(for:scheduler:latest:)();

      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v2, v20);
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
      v17 = OUTLINED_FUNCTION_15();
      swift_unknownObjectWeakInit();
      v18 = OUTLINED_FUNCTION_15();
      *(_QWORD *)(v18 + 16) = partial apply for closure #1 in AudioPowerSpectrumViewModel.observeActiveCall(using:);
      *(_QWORD *)(v18 + 24) = v17;
      lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Publishers.Throttle<Publishers.CombineLatest<CurrentValueSubject<[Float]?, Never>, CurrentValueSubject<[Float]?, Never>>, NSRunLoop> and conformance Publishers.Throttle<A, B>, &demangling cache variable for type metadata for Publishers.Throttle<Publishers.CombineLatest<CurrentValueSubject<[Float]?, Never>, CurrentValueSubject<[Float]?, Never>>, NSRunLoop>);
      Publisher<>.sink(receiveValue:)();
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v1, v10);
      OUTLINED_FUNCTION_2_0();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [AnyCancellable]);
      lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(lazy protocol witness table cache variable for type [AnyCancellable] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [AnyCancellable]);
      AnyCancellable.store<A>(in:)();
      swift_endAccess();
      swift_release();
      AudioPowerSpectrumViewModel.startAudioTaps()();

      OUTLINED_FUNCTION_52_1();
      return;
    }

  }
  if (one-time initialization token for default != -1)
    swift_once();
  v14 = OUTLINED_FUNCTION_17_2();
  v21 = OUTLINED_FUNCTION_3(v14, (uint64_t)&static Log.default);
  v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v21, v15))
  {
    *(_WORD *)OUTLINED_FUNCTION_105() = 0;
    OUTLINED_FUNCTION_39_8(&dword_1BD004000, v21, v16, "Ignoring request to observe active call since its nil or is ineligible");
    OUTLINED_FUNCTION_60();
  }

}

uint64_t AudioPowerSpectrumViewModel.removeObservation()()
{
  _QWORD *v0;
  char *v1;
  char *v2;
  _QWORD *v3;
  void (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v8)(uint64_t);

  AudioPowerSpectrumViewModel.stopAudioTaps()();
  v1 = (char *)v0 + OBJC_IVAR____TtC15ConversationKit27AudioPowerSpectrumViewModel_localParticipantStreamToken;
  *(_QWORD *)v1 = 0;
  v1[8] = 1;
  v2 = (char *)v0 + OBJC_IVAR____TtC15ConversationKit27AudioPowerSpectrumViewModel_remoteParticipantStreamToken;
  *(_QWORD *)v2 = 0;
  v2[8] = 1;
  AudioPowerSpectrumViewModel.cancellables.setter(MEMORY[0x1E0DEE9D8]);
  if (one-time initialization token for initialPowerSpectrum != -1)
    swift_once();
  v3 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v4 = *(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8);
  v5 = swift_bridgeObjectRetain();
  v4(v5);
  v8 = *(uint64_t (**)(uint64_t))((*v3 & *v0) + 0x128);
  v6 = swift_bridgeObjectRetain();
  return v8(v6);
}

void AudioPowerSpectrumViewModel.startAudioTaps()()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;

  OUTLINED_FUNCTION_93();
  OUTLINED_FUNCTION_66_14();
  v2 = (void (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v3);
  v4 = OUTLINED_FUNCTION_20_3();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_15();
  swift_unknownObjectWeakInit();
  v6 = OUTLINED_FUNCTION_53_4();
  swift_retain();
  static DispatchQoS.unspecified.getter();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, v2);
  OUTLINED_FUNCTION_31_11();
  OUTLINED_FUNCTION_34_7(&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  MEMORY[0x1C3B7361C](0, v1, v0, v6);
  _Block_release(v6);
  OUTLINED_FUNCTION_32_29();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v4);
  OUTLINED_FUNCTION_58_2();
  swift_release();
  OUTLINED_FUNCTION_52_1();
}

void AudioPowerSpectrumViewModel.stopAudioTaps()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  OUTLINED_FUNCTION_93();
  OUTLINED_FUNCTION_66_14();
  v3 = (void (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_20_3();
  OUTLINED_FUNCTION_26_24();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_11_2();
  v6 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit27AudioPowerSpectrumViewModel_uplinkPowerTap);
  v7 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit27AudioPowerSpectrumViewModel_downlinkPowerTap);
  v8 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v8 + 16) = v6;
  *(_QWORD *)(v8 + 24) = v7;
  v9 = OUTLINED_FUNCTION_53_4();
  swift_retain();
  swift_retain();
  static DispatchQoS.unspecified.getter();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, v3);
  OUTLINED_FUNCTION_31_11();
  OUTLINED_FUNCTION_34_7(&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  MEMORY[0x1C3B7361C](0, v2, v1, v9);
  _Block_release(v9);
  OUTLINED_FUNCTION_32_29();
  OUTLINED_FUNCTION_19_44();
  OUTLINED_FUNCTION_58_2();
  OUTLINED_FUNCTION_52_1();
}

void AudioPowerSpectrumViewModel.__allocating_init(call:callCenter:notificationCenter:)()
{
  objc_class *v0;
  id v1;

  v1 = objc_allocWithZone(v0);
  AudioPowerSpectrumViewModel.init(call:callCenter:notificationCenter:)();
}

void *AudioPowerSpectrumViewModel.Constants.baseValue.unsafeMutableAddressor()
{
  return &static AudioPowerSpectrumViewModel.Constants.baseValue;
}

float static AudioPowerSpectrumViewModel.Constants.baseValue.getter()
{
  return 0.0;
}

void *AudioPowerSpectrumViewModel.Constants.buckets.unsafeMutableAddressor()
{
  return &static AudioPowerSpectrumViewModel.Constants.buckets;
}

uint64_t static AudioPowerSpectrumViewModel.Constants.buckets.getter()
{
  return 14;
}

double one-time initialization function for initialPowerSpectrum()
{
  uint64_t v0;
  double result;

  v0 = static Array._allocateBufferUninitialized(minimumCapacity:)();
  *(_QWORD *)(v0 + 16) = 14;
  result = 0.0;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 48) = 0u;
  *(_OWORD *)(v0 + 64) = 0u;
  *(_QWORD *)(v0 + 80) = 0;
  static AudioPowerSpectrumViewModel.Constants.initialPowerSpectrum = v0;
  return result;
}

uint64_t *AudioPowerSpectrumViewModel.Constants.initialPowerSpectrum.unsafeMutableAddressor()
{
  if (one-time initialization token for initialPowerSpectrum != -1)
    swift_once();
  return &static AudioPowerSpectrumViewModel.Constants.initialPowerSpectrum;
}

uint64_t type metadata accessor for AudioPowerSpectrumViewModel()
{
  uint64_t result;

  result = type metadata singleton initialization cache for AudioPowerSpectrumViewModel;
  if (!type metadata singleton initialization cache for AudioPowerSpectrumViewModel)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t static AudioPowerSpectrumViewModel.Constants.initialPowerSpectrum.getter()
{
  if (one-time initialization token for initialPowerSpectrum != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

void *AudioPowerSpectrumViewModel.Constants.updateInterval.unsafeMutableAddressor()
{
  return &static AudioPowerSpectrumViewModel.Constants.updateInterval;
}

double static AudioPowerSpectrumViewModel.Constants.updateInterval.getter()
{
  return 0.0666666667;
}

uint64_t key path setter for AudioPowerSpectrumViewModel.call : AudioPowerSpectrumViewModel(id *a1, _QWORD **a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & **a2) + 0xE0);
  v4 = *a1;
  return v3(v2);
}

void AudioPowerSpectrumViewModel.call.willset(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void **v4;
  void *v5;
  id v6;
  id v7;
  char v8;

  v2 = v1;
  v4 = (void **)(v2 + OBJC_IVAR____TtC15ConversationKit27AudioPowerSpectrumViewModel_call);
  swift_beginAccess();
  v5 = *v4;
  if (!a1)
  {
    if (!v5)
      return;
    goto LABEL_6;
  }
  if (!v5
    || (type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUCall),
        v6 = v5,
        v7 = a1,
        v8 = static NSObject.== infix(_:_:)(),
        v7,
        v6,
        (v8 & 1) == 0))
  {
LABEL_6:
    AudioPowerSpectrumViewModel.removeObservation()();
  }
}

void AudioPowerSpectrumViewModel.call.didset(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void **v4;
  void *v5;
  id v6;
  id v7;
  char v8;
  id v9;

  v2 = v1;
  v4 = (void **)(v2 + OBJC_IVAR____TtC15ConversationKit27AudioPowerSpectrumViewModel_call);
  swift_beginAccess();
  v5 = *v4;
  if (!a1)
    goto LABEL_5;
  if (v5)
  {
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUCall);
    v6 = v5;
    v7 = a1;
    v8 = static NSObject.== infix(_:_:)();

    if ((v8 & 1) == 0)
    {
      v5 = *v4;
LABEL_5:
      if (v5)
      {
        v9 = v5;
        AudioPowerSpectrumViewModel.callChanged(_:)();

      }
    }
  }
}

uint64_t key path getter for AudioPowerSpectrumViewModel.localPowerSpectrum : AudioPowerSpectrumViewModel@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0xF0))();
  *a2 = result;
  return result;
}

uint64_t key path setter for AudioPowerSpectrumViewModel.localPowerSpectrum : AudioPowerSpectrumViewModel(uint64_t a1, _QWORD **a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & **a2) + 0xF8);
  v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t key path setter for AudioPowerSpectrumViewModel.$localPowerSpectrum : AudioPowerSpectrumViewModel(uint64_t a1, _QWORD **a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<[Float]>.Publisher);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  return (*(uint64_t (**)(char *))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x110))(v6);
}

uint64_t key path getter for AudioPowerSpectrumViewModel.remotePowerSpectrum : AudioPowerSpectrumViewModel@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x120))();
  *a2 = result;
  return result;
}

uint64_t key path setter for AudioPowerSpectrumViewModel.remotePowerSpectrum : AudioPowerSpectrumViewModel(uint64_t a1, _QWORD **a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x128);
  v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t key path setter for AudioPowerSpectrumViewModel.$remotePowerSpectrum : AudioPowerSpectrumViewModel(uint64_t a1, _QWORD **a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<[Float]>.Publisher);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  return (*(uint64_t (**)(char *))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x140))(v6);
}

uint64_t key path setter for AudioPowerSpectrumViewModel.waveformColorRemote : AudioPowerSpectrumViewModel(id *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x158))(*a1);
}

uint64_t key path setter for AudioPowerSpectrumViewModel.waveformColorLocal : AudioPowerSpectrumViewModel(id *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x170))(*a1);
}

uint64_t key path setter for AudioPowerSpectrumViewModel.localWaveformFilter : AudioPowerSpectrumViewModel(id *a1, _QWORD **a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x1A0);
  v4 = *a1;
  return v3(v2);
}

uint64_t key path setter for AudioPowerSpectrumViewModel.remoteWaveformFilter : AudioPowerSpectrumViewModel(id *a1, _QWORD **a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x1B8);
  v4 = *a1;
  return v3(v2);
}

uint64_t AudioPowerSpectrumViewModel.uplinkPowerTap.getter()
{
  return OUTLINED_FUNCTION_36_32();
}

uint64_t AudioPowerSpectrumViewModel.downlinkPowerTap.getter()
{
  return OUTLINED_FUNCTION_36_32();
}

uint64_t AudioPowerSpectrumViewModel.updateWaveform(forCall:)(void *a1)
{
  uint64_t *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;

  objc_msgSend(a1, sel_isRecording);
  OUTLINED_FUNCTION_308(*v1);
  v2 = OUTLINED_FUNCTION_16_47();
  OUTLINED_FUNCTION_59((uint64_t)v2, (unint64_t *)&lazy cache variable for type metadata for NSString);
  OUTLINED_FUNCTION_51_20();
  OUTLINED_FUNCTION_10_21();
  OUTLINED_FUNCTION_54_0(*(uint64_t (**)(void))(v3 + 416));
  OUTLINED_FUNCTION_16_47();
  OUTLINED_FUNCTION_51_20();
  OUTLINED_FUNCTION_10_21();
  OUTLINED_FUNCTION_54_0(*(uint64_t (**)(void))(v4 + 440));
  OUTLINED_FUNCTION_16_47();
  v5 = (void *)objc_opt_self();
  v6 = OUTLINED_FUNCTION_49_23(v5, (SEL *)&selRef_greenColor);
  OUTLINED_FUNCTION_10_21();
  OUTLINED_FUNCTION_54_0(*(uint64_t (**)(void))(v7 + 344));
  OUTLINED_FUNCTION_16_47();
  v8 = (void *)objc_opt_self();
  v9 = OUTLINED_FUNCTION_49_23(v8, (SEL *)&selRef_orangeColor);
  OUTLINED_FUNCTION_10_21();
  return (*(uint64_t (**)(void))(v10 + 368))();
}

void sub_1BD1E0D1C()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0xF0))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD1E0D54()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x120))();
  OUTLINED_FUNCTION_0();
}

id AudioPowerSpectrumViewModel.__deallocating_deinit()
{
  void *v0;
  uint64_t v1;
  char *v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  id v9;
  uint64_t v11;
  objc_super v12;

  swift_getObjectType();
  if (one-time initialization token for default != -1)
    swift_once();
  v1 = OUTLINED_FUNCTION_17_2();
  __swift_project_value_buffer(v1, (uint64_t)&static Log.default);
  v2 = v0;
  v3 = Logger.logObject.getter();
  v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)OUTLINED_FUNCTION_105();
    v11 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v5 = 136315138;
    ObjC metadata update function for AudioPowerSpectrumViewModel();
    v6 = v2;
    v7 = String.init<A>(reflecting:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v7, v8, &v11);
    OUTLINED_FUNCTION_32_4();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    OUTLINED_FUNCTION_48(&dword_1BD004000, v3, v4, "Deinit %s", v5);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

  v9 = *(id *)&v2[OBJC_IVAR____TtC15ConversationKit27AudioPowerSpectrumViewModel_audioPowerTapQueue];
  closure #1 in AudioPowerSpectrumViewModel.deinit();

  v12.receiver = v2;
  v12.super_class = (Class)ObjC metadata update function for AudioPowerSpectrumViewModel();
  return objc_msgSendSuper2(&v12, sel_dealloc);
}

uint64_t closure #1 in AudioPowerSpectrumViewModel.deinit()
{
  swift_retain();
  closure #1 in closure #1 in AudioPowerSpectrumViewModel.deinit();
  swift_release();
  swift_retain();
  closure #1 in closure #1 in AudioPowerSpectrumViewModel.deinit();
  return swift_release();
}

void closure #1 in closure #1 in AudioPowerSpectrumViewModel.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;

  OUTLINED_FUNCTION_93();
  v3 = v2;
  v5 = v4;
  v6 = OUTLINED_FUNCTION_66_14();
  v12 = *(_QWORD *)(v6 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_16_2();
  v8 = type metadata accessor for DispatchQoS();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_0_7();
  v10 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v10 + 16) = v5;
  *(_QWORD *)(v10 + 24) = v3;
  v11 = OUTLINED_FUNCTION_53_4();
  swift_retain();
  static DispatchQoS.unspecified.getter();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))MEMORY[0x1E0DEF4F8]);
  OUTLINED_FUNCTION_31_11();
  OUTLINED_FUNCTION_34_7(&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  MEMORY[0x1C3B7361C](0, v1, v0, v11);
  _Block_release(v11);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v0, v6);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v1, v8);
  OUTLINED_FUNCTION_58_2();
  OUTLINED_FUNCTION_52_1();
}

void closure #1 in closure #1 in closure #1 in AudioPowerSpectrumViewModel.deinit(uint64_t a1)
{
  uint64_t v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  NSObject *oslog;
  uint64_t v7;

  (*(void (**)(void))(*(_QWORD *)a1 + 296))();
  if (one-time initialization token for default != -1)
    swift_once();
  v1 = OUTLINED_FUNCTION_17_2();
  oslog = OUTLINED_FUNCTION_3(v1, (uint64_t)&static Log.default);
  v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(oslog, v2))
  {
    v3 = OUTLINED_FUNCTION_105();
    v7 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v3 = 136446466;
    v4 = _typeName(_:qualified:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v4, v5, &v7);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v3 + 12) = 1024;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl(&dword_1BD004000, oslog, v2, "[%{public}s.deinit] downlinkPowerTap stopped: %{BOOL}d", (uint8_t *)v3, 0x12u);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

}

void closure #1 in AudioPowerSpectrumViewModel.observeActiveCall(using:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  void (*v10)(uint64_t);
  uint64_t v11;
  void (*v12)(uint64_t);

  v5 = a3 + 16;
  swift_beginAccess();
  v6 = MEMORY[0x1C3B752C0](v5);
  if (v6)
  {
    v7 = (_QWORD *)v6;
    if (a1)
    {
      v8 = a1;
    }
    else
    {
      if (one-time initialization token for initialPowerSpectrum != -1)
        swift_once();
      v8 = static AudioPowerSpectrumViewModel.Constants.initialPowerSpectrum;
      swift_bridgeObjectRetain();
    }
    v9 = (_QWORD *)MEMORY[0x1E0DEEDD8];
    v10 = *(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v7) + 0xF8);
    swift_bridgeObjectRetain();
    v10(v8);
    if (a2)
    {
      v11 = a2;
    }
    else
    {
      if (one-time initialization token for initialPowerSpectrum != -1)
        swift_once();
      v11 = static AudioPowerSpectrumViewModel.Constants.initialPowerSpectrum;
      swift_bridgeObjectRetain();
    }
    v12 = *(void (**)(uint64_t))((*v9 & *v7) + 0x128);
    swift_bridgeObjectRetain();
    v12(v11);

  }
}

uint64_t closure #1 in AudioPowerSpectrumViewModel.startAudioTaps()(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  char *v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  void (*v8)(uint64_t);
  uint64_t v9;
  void (*v10)(uint64_t);
  uint64_t v11;

  v1 = a1 + 16;
  swift_beginAccess();
  result = MEMORY[0x1C3B752C0](v1);
  if (result)
  {
    v3 = (char *)result;
    if (one-time initialization token for default != -1)
      swift_once();
    v4 = type metadata accessor for Logger();
    __swift_project_value_buffer(v4, (uint64_t)&static Log.default);
    v5 = Logger.logObject.getter();
    v6 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v7 = 0;
      _os_log_impl(&dword_1BD004000, v5, v6, "Starting audio taps for power spectrum observation", v7, 2u);
      MEMORY[0x1C3B751B8](v7, -1, -1);
    }

    v8 = *(void (**)(uint64_t))(**(_QWORD **)&v3[OBJC_IVAR____TtC15ConversationKit27AudioPowerSpectrumViewModel_uplinkPowerTap]
                                        + 288);
    v9 = swift_retain();
    v8(v9);
    swift_release();
    v10 = *(void (**)(uint64_t))(**(_QWORD **)&v3[OBJC_IVAR____TtC15ConversationKit27AudioPowerSpectrumViewModel_downlinkPowerTap]
                                         + 288);
    v11 = swift_retain();
    v10(v11);

    return swift_release();
  }
  return result;
}

uint64_t closure #1 in AudioPowerSpectrumViewModel.stopAudioTaps()(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;

  if (one-time initialization token for default != -1)
    swift_once();
  v4 = type metadata accessor for Logger();
  __swift_project_value_buffer(v4, (uint64_t)&static Log.default);
  v5 = Logger.logObject.getter();
  v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_1BD004000, v5, v6, "Stopping audio taps for power spectrum observation", v7, 2u);
    MEMORY[0x1C3B751B8](v7, -1, -1);
  }

  v8 = (*(uint64_t (**)(void))(*(_QWORD *)a1 + 296))();
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 296))(v8);
}

id AudioPowerSpectrumViewModel.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void AudioPowerSpectrumViewModel.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t protocol witness for ObservableObject.objectWillChange.getter in conformance AudioPowerSpectrumViewModel@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for AudioPowerSpectrumViewModel();
  result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t AudioPowerSpectrumViewModel.isEqual(_:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t (*v20)(void);
  void *v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  id v28;
  _QWORD *v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char v33;
  void (*v34)(uint64_t, uint64_t);
  char v35;
  char v36;
  char v37;
  _QWORD *v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t *v42;
  _QWORD v43[14];
  uint64_t v44;
  uint64_t v45;

  OUTLINED_FUNCTION_93();
  v44 = v3;
  v45 = v4;
  v6 = v5;
  swift_getObjectType();
  v7 = type metadata accessor for UUID();
  v41 = *(_QWORD *)(v7 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_0_7();
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_16_2();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_10_1();
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = (char *)&v39 - v16;
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v39 - v18;
  outlined init with copy of VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>(v6, (uint64_t)v43, &demangling cache variable for type metadata for Any?);
  if (!v43[3])
  {
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v43, &demangling cache variable for type metadata for Any?);
    goto LABEL_21;
  }
  if ((OUTLINED_FUNCTION_97() & 1) == 0)
  {
LABEL_21:
    v37 = 0;
    return v37 & 1;
  }
  v40 = v42;
  v20 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8);
  v39 = v0;
  v21 = (void *)v20();
  if (v21)
  {
    v22 = v21;
    v23 = objc_msgSend(v21, sel_uniqueProxyIdentifierUUID);

    static UUID._unconditionallyBridgeFromObjectiveC(_:)();
    v24 = 0;
  }
  else
  {
    v24 = 1;
  }
  v25 = 1;
  OUTLINED_FUNCTION_19_3((uint64_t)v19, v24);
  v26 = (void *)OUTLINED_FUNCTION_50_4(*v40);
  if (v26)
  {
    v27 = v26;
    v28 = objc_msgSend(v26, sel_uniqueProxyIdentifierUUID);

    static UUID._unconditionallyBridgeFromObjectiveC(_:)();
    v25 = 0;
  }
  v29 = v39;
  OUTLINED_FUNCTION_19_3((uint64_t)v17, v25);
  v30 = v1 + *(int *)(v9 + 48);
  outlined init with copy of VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>((uint64_t)v19, v1, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  outlined init with copy of VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>((uint64_t)v17, v30, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_59_0(v1);
  if (!v31)
  {
    outlined init with copy of VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>(v1, (uint64_t)v14, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    OUTLINED_FUNCTION_59_0(v30);
    v32 = v41;
    if (!v31)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 32))(v2, v30, v7);
      lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
      v33 = dispatch thunk of static Equatable.== infix(_:_:)();
      v34 = *(void (**)(uint64_t, uint64_t))(v32 + 8);
      v34(v2, v7);
      OUTLINED_FUNCTION_13_9((uint64_t)v17);
      OUTLINED_FUNCTION_13_9((uint64_t)v19);
      v34((uint64_t)v14, v7);
      OUTLINED_FUNCTION_13_9(v1);
      if ((v33 & 1) != 0)
        goto LABEL_19;
      goto LABEL_20;
    }
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v17, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v19, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v14, v7);
LABEL_17:
    outlined destroy of OS_dispatch_queue.SchedulerOptions?(v1, (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
LABEL_20:

    goto LABEL_21;
  }
  OUTLINED_FUNCTION_13_9((uint64_t)v17);
  OUTLINED_FUNCTION_13_9((uint64_t)v19);
  OUTLINED_FUNCTION_59_0(v30);
  if (!v31)
    goto LABEL_17;
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v1, (uint64_t *)&demangling cache variable for type metadata for UUID?);
LABEL_19:
  v35 = *((_BYTE *)v29 + OBJC_IVAR____TtC15ConversationKit27AudioPowerSpectrumViewModel_hasActiveWaveform);
  v36 = *((_BYTE *)v40 + OBJC_IVAR____TtC15ConversationKit27AudioPowerSpectrumViewModel_hasActiveWaveform);

  v37 = v35 ^ v36 ^ 1;
  return v37 & 1;
}

void AudioPowerSpectrumViewModel.handleCallRecordingStateChanged(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  NSObject *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  os_log_type_t v12;
  uint64_t v13;
  void *v14;
  _BYTE v15[24];
  uint64_t v16;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_77();
  v3 = v2 - v1;
  v4 = Notification.object.getter();
  if (v16)
  {
    OUTLINED_FUNCTION_59(v4, (unint64_t *)&lazy cache variable for type metadata for TUCall);
    if ((OUTLINED_FUNCTION_97() & 1) != 0)
    {
      v5 = type metadata accessor for TaskPriority();
      __swift_storeEnumTagSinglePayload(v3, 1, 1, v5);
      type metadata accessor for MainActor();
      v6 = OUTLINED_FUNCTION_60_3();
      v7 = v14;
      v8 = static MainActor.shared.getter();
      v9 = (_QWORD *)OUTLINED_FUNCTION_15();
      v10 = MEMORY[0x1E0DF06E8];
      v9[2] = v8;
      v9[3] = v10;
      v9[4] = v6;
      v9[5] = v7;
      _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
      swift_release();
      goto LABEL_9;
    }
  }
  else
  {
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v15, &demangling cache variable for type metadata for Any?);
  }
  if (one-time initialization token for default != -1)
    swift_once();
  v11 = OUTLINED_FUNCTION_17_2();
  v7 = OUTLINED_FUNCTION_3(v11, (uint64_t)&static Log.default);
  v12 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v7, v12))
  {
    *(_WORD *)OUTLINED_FUNCTION_105() = 0;
    OUTLINED_FUNCTION_39_8(&dword_1BD004000, v7, v13, "AudioPowerSpectrumViewModel.handleCallRecordingStateChanged without valid call");
    OUTLINED_FUNCTION_60();
  }
LABEL_9:

  OUTLINED_FUNCTION_91();
}

uint64_t closure #1 in AudioPowerSpectrumViewModel.handleCallRecordingStateChanged(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[2] = a4;
  v5[3] = a5;
  type metadata accessor for MainActor();
  v5[4] = static MainActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  return swift_task_switch();
}

uint64_t closure #1 in AudioPowerSpectrumViewModel.handleCallRecordingStateChanged(_:)()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 24);
  swift_release();
  AudioPowerSpectrumViewModel.updateWaveform(forCall:)(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void @objc AudioPowerSpectrumViewModel.handleCallStatusChanged(_:)(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4;
  uint64_t v7;
  id v8;

  type metadata accessor for Notification();
  OUTLINED_FUNCTION_26_24();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_11_2();
  static Notification._unconditionallyBridgeFromObjectiveC(_:)();
  v8 = a1;
  a4(v4);

  OUTLINED_FUNCTION_19_44();
  OUTLINED_FUNCTION_91();
}

id @nonobjc TUCall.isVideo.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_isVideo);
}

uint64_t sub_1BD1E212C()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in AudioPowerSpectrumViewModel.handleCallRecordingStateChanged(_:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = dispatch thunk of CallScreeningStateMachine.transition(with:reason:validation:);
  return closure #1 in AudioPowerSpectrumViewModel.handleCallRecordingStateChanged(_:)(a1, v4, v5, v7, v6);
}

void sub_1BD1E21D8()
{
  uint64_t *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = OUTLINED_FUNCTION_50_4(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD1E2208(_QWORD **a1)
{
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x108))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD1E2240(_QWORD **a1)
{
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x138))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD1E2278()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x150))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD1E22B0()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x168))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD1E22E8()
{
  _BYTE *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x180))() & 1;
  OUTLINED_FUNCTION_0();
}

void sub_1BD1E2320(uint64_t a1, uint64_t **a2)
{
  OUTLINED_FUNCTION_308(**a2);
  OUTLINED_FUNCTION_0();
}

void sub_1BD1E2350()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x198))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD1E2388()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x1B0))();
  OUTLINED_FUNCTION_0();
}

void type metadata completion function for AudioPowerSpectrumViewModel()
{
  unint64_t v0;

  type metadata accessor for Published<[Float]>();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for AudioPowerSpectrumViewModel()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AudioPowerSpectrumViewModel.call.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of AudioPowerSpectrumViewModel.call.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of AudioPowerSpectrumViewModel.call.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of AudioPowerSpectrumViewModel.localPowerSpectrum.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of AudioPowerSpectrumViewModel.localPowerSpectrum.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of AudioPowerSpectrumViewModel.localPowerSpectrum.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of AudioPowerSpectrumViewModel.$localPowerSpectrum.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x108))();
}

uint64_t dispatch thunk of AudioPowerSpectrumViewModel.$localPowerSpectrum.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x110))();
}

uint64_t dispatch thunk of AudioPowerSpectrumViewModel.$localPowerSpectrum.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x118))();
}

uint64_t dispatch thunk of AudioPowerSpectrumViewModel.remotePowerSpectrum.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x120))();
}

uint64_t dispatch thunk of AudioPowerSpectrumViewModel.remotePowerSpectrum.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x128))();
}

uint64_t dispatch thunk of AudioPowerSpectrumViewModel.remotePowerSpectrum.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x130))();
}

uint64_t dispatch thunk of AudioPowerSpectrumViewModel.$remotePowerSpectrum.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x138))();
}

uint64_t dispatch thunk of AudioPowerSpectrumViewModel.$remotePowerSpectrum.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x140))();
}

uint64_t dispatch thunk of AudioPowerSpectrumViewModel.$remotePowerSpectrum.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x148))();
}

uint64_t dispatch thunk of AudioPowerSpectrumViewModel.waveformColorRemote.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x150))();
}

uint64_t dispatch thunk of AudioPowerSpectrumViewModel.waveformColorRemote.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x158))();
}

uint64_t dispatch thunk of AudioPowerSpectrumViewModel.waveformColorRemote.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x160))();
}

uint64_t dispatch thunk of AudioPowerSpectrumViewModel.waveformColorLocal.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x168))();
}

uint64_t dispatch thunk of AudioPowerSpectrumViewModel.waveformColorLocal.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x170))();
}

uint64_t dispatch thunk of AudioPowerSpectrumViewModel.waveformColorLocal.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x178))();
}

uint64_t dispatch thunk of AudioPowerSpectrumViewModel.needsBackdropFilterLayer.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x180))();
}

uint64_t dispatch thunk of AudioPowerSpectrumViewModel.needsBackdropFilterLayer.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x188))();
}

uint64_t dispatch thunk of AudioPowerSpectrumViewModel.needsBackdropFilterLayer.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x190))();
}

uint64_t dispatch thunk of AudioPowerSpectrumViewModel.localWaveformFilter.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x198))();
}

uint64_t dispatch thunk of AudioPowerSpectrumViewModel.localWaveformFilter.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1A0))();
}

uint64_t dispatch thunk of AudioPowerSpectrumViewModel.localWaveformFilter.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1A8))();
}

uint64_t dispatch thunk of AudioPowerSpectrumViewModel.remoteWaveformFilter.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1B0))();
}

uint64_t dispatch thunk of AudioPowerSpectrumViewModel.remoteWaveformFilter.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1B8))();
}

uint64_t dispatch thunk of AudioPowerSpectrumViewModel.remoteWaveformFilter.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1C0))();
}

uint64_t dispatch thunk of AudioPowerSpectrumViewModel.__allocating_init(call:callCenter:notificationCenter:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 552))();
}

uint64_t dispatch thunk of AudioPowerSpectrumViewModel.start()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x230))();
}

uint64_t dispatch thunk of AudioPowerSpectrumViewModel.stop(caller:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x238))();
}

void type metadata accessor for Published<[Float]>()
{
  unint64_t v0;
  uint64_t v1;

  if (!lazy cache variable for type metadata for Published<[Float]>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [Float]);
    v0 = type metadata accessor for Published();
    if (!v1)
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for Published<[Float]>);
  }
}

ValueMetadata *type metadata accessor for AudioPowerSpectrumViewModel.Constants()
{
  return &type metadata for AudioPowerSpectrumViewModel.Constants;
}

uint64_t sub_1BD1E2880()
{
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_239();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in AudioPowerSpectrumViewModel.stopAudioTaps()()
{
  uint64_t v0;

  return closure #1 in AudioPowerSpectrumViewModel.stopAudioTaps()(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1BD1E28AC()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in AudioPowerSpectrumViewModel.startAudioTaps()()
{
  uint64_t v0;

  return closure #1 in AudioPowerSpectrumViewModel.startAudioTaps()(v0);
}

void partial apply for closure #1 in AudioPowerSpectrumViewModel.observeActiveCall(using:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  closure #1 in AudioPowerSpectrumViewModel.observeActiveCall(using:)(a1, a2, v2);
}

uint64_t sub_1BD1E28E0()
{
  swift_release();
  OUTLINED_FUNCTION_239();
  return swift_deallocObject();
}

void partial apply for thunk for @escaping @callee_guaranteed (@guaranteed [Float]?, @guaranteed [Float]?) -> ()(_QWORD *a1)
{
  uint64_t v1;

  (*(void (**)(_QWORD, _QWORD))(v1 + 16))(*a1, a1[1]);
  OUTLINED_FUNCTION_0();
}

uint64_t sub_1BD1E2920()
{
  swift_release();
  OUTLINED_FUNCTION_239();
  return swift_deallocObject();
}

void partial apply for closure #1 in closure #2 in closure #1 in AudioPowerSpectrumViewModel.deinit()
{
  uint64_t v0;

  closure #1 in closure #1 in closure #1 in AudioPowerSpectrumViewModel.deinit(*(_QWORD *)(v0 + 16));
}

uint64_t _sSTsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFs18EnumeratedSequenceVySaySo6CGRectVGG_AIs5NeverOTg507_sSiSo6f34VABIgyyd_Si6offset_AB7elementtABs5G11OIegnrzr_TRSiA2IIgyyd_Tf1cn_n(uint64_t a1, double (*a2)(uint64_t, double, double, double, double))
{
  uint64_t v4;
  uint64_t v5;
  double *v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  double *v15;
  uint64_t v17;

  v17 = MEMORY[0x1E0DEE9D8];
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  v4 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v4)
  {
    v5 = 0;
    v6 = (double *)(a1 + 56);
    do
    {
      v7 = a2(v5, *(v6 - 3), *(v6 - 2), *(v6 - 1), *v6);
      v9 = v8;
      v11 = v10;
      v13 = v12;
      v14 = *(_QWORD *)(v17 + 16);
      if (v14 >= *(_QWORD *)(v17 + 24) >> 1)
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      ++v5;
      *(_QWORD *)(v17 + 16) = v14 + 1;
      v15 = (double *)(v17 + 32 * v14);
      v15[4] = v7;
      *((_QWORD *)v15 + 5) = v9;
      *((_QWORD *)v15 + 6) = v11;
      *((_QWORD *)v15 + 7) = v13;
      v6 += 4;
    }
    while (v4 != v5);
  }
  swift_bridgeObjectRelease();
  return v17;
}

Swift::Bool __swiftcall ParticipantGridView.AnimationStyle.fasterThan(_:)(ConversationKit::ParticipantGridView::AnimationStyle a1)
{
  unsigned __int8 v1;

  return v1 < a1;
}

uint64_t ParticipantGridView.AnimationStyle.rawValue.getter(uint64_t result)
{
  return result;
}

ConversationKit::ParticipantGridView::AnimationStyle_optional __swiftcall ParticipantGridView.AnimationStyle.init(rawValue:)(Swift::Int rawValue)
{
  if ((unint64_t)rawValue >= 4)
    LOBYTE(rawValue) = 4;
  return (ConversationKit::ParticipantGridView::AnimationStyle_optional)rawValue;
}

ConversationKit::ParticipantGridView::AnimationStyle_optional protocol witness for RawRepresentable.init(rawValue:) in conformance ParticipantGridView.AnimationStyle@<W0>(Swift::Int *a1@<X0>, ConversationKit::ParticipantGridView::AnimationStyle_optional *a2@<X8>)
{
  ConversationKit::ParticipantGridView::AnimationStyle_optional result;

  result.value = ParticipantGridView.AnimationStyle.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance ParticipantGridView.AnimationStyle(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = ParticipantGridView.AnimationStyle.rawValue.getter(*v1);
  OUTLINED_FUNCTION_0();
}

void ParticipantGridView.layoutStyle.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;
  _BYTE *v3;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_layoutStyle);
  OUTLINED_FUNCTION_1();
  *a1 = *v3;
  OUTLINED_FUNCTION_32();
}

void ParticipantGridView.layoutStyle.setter(char *a1)
{
  uint64_t v1;
  char v2;
  _BYTE *v3;

  v2 = *a1;
  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_layoutStyle);
  OUTLINED_FUNCTION_2_0();
  *v3 = v2;
  OUTLINED_FUNCTION_9_0();
}

void ParticipantGridView.layoutStyle.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t (*ParticipantGridView.ParticipantTileInfo.identifier.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void ParticipantGridView.ParticipantTileInfo.aspectRatio.getter(uint64_t a1@<X8>)
{
  ParticipantGridView.ParticipantTileInfo.aspectRatio.getter(type metadata accessor for ParticipantGridView.ParticipantTileInfo, a1);
}

uint64_t type metadata accessor for ParticipantGridView.ParticipantTileInfo(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for ParticipantGridView.ParticipantTileInfo);
}

uint64_t ParticipantGridView.ParticipantTileInfo.aspectRatio.setter(uint64_t a1)
{
  return ParticipantGridView.ParticipantTileInfo.aspectRatio.setter(a1, type metadata accessor for ParticipantGridView.ParticipantTileInfo);
}

uint64_t (*ParticipantGridView.ParticipantTileInfo.aspectRatio.modify())(_QWORD)
{
  OUTLINED_FUNCTION_104_4();
  OUTLINED_FUNCTION_141_1();
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ParticipantGridView.ParticipantTileInfo.orientation.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for ParticipantGridView.ParticipantTileInfo(0) + 24));
}

void ParticipantGridView.ParticipantTileInfo.orientation.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = v2 + *(int *)(type metadata accessor for ParticipantGridView.ParticipantTileInfo(0) + 24);
  *(_QWORD *)v5 = a1;
  *(_BYTE *)(v5 + 8) = a2 & 1;
  OUTLINED_FUNCTION_18();
}

uint64_t (*ParticipantGridView.ParticipantTileInfo.orientation.modify())(_QWORD)
{
  type metadata accessor for ParticipantGridView.ParticipantTileInfo(0);
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ParticipantGridView.ParticipantTileInfo.isMostActive.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ParticipantGridView.ParticipantTileInfo(0) + 28));
}

void ParticipantGridView.ParticipantTileInfo.isMostActive.setter()
{
  char v0;
  uint64_t v1;

  *(_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_136_0() + 28)) = v0;
  OUTLINED_FUNCTION_0();
}

uint64_t (*ParticipantGridView.ParticipantTileInfo.isMostActive.modify())(_QWORD)
{
  type metadata accessor for ParticipantGridView.ParticipantTileInfo(0);
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ParticipantGridView.ParticipantTileInfo.hasOtherInvitedParticipants.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ParticipantGridView.ParticipantTileInfo(0) + 32));
}

void ParticipantGridView.ParticipantTileInfo.hasOtherInvitedParticipants.setter()
{
  char v0;
  uint64_t v1;

  *(_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_136_0() + 32)) = v0;
  OUTLINED_FUNCTION_0();
}

uint64_t (*ParticipantGridView.ParticipantTileInfo.hasOtherInvitedParticipants.modify())(_QWORD)
{
  type metadata accessor for ParticipantGridView.ParticipantTileInfo(0);
  return TPNumberPadCharacter.rawValue.getter;
}

void ParticipantGridView.ParticipantTileInfo.init(identifier:aspectRatio:orientation:isMostActive:hasOtherInvitedParticipants:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, char a5@<W4>, char a6@<W5>, uint64_t a7@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  char v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  _QWORD v26[4];
  char v27;
  _BYTE v28[40];
  _BYTE v29[40];

  outlined init with take of Any?(a2, (uint64_t)v26, &demangling cache variable for type metadata for AspectRatio?);
  v12 = v26[1];
  v23 = v26[0];
  v13 = v26[2];
  v14 = v26[3];
  v22 = v27;
  v15 = (int *)OUTLINED_FUNCTION_104_4();
  v16 = a7 + v15[6];
  OUTLINED_FUNCTION_33_0();
  v17 = OUTLINED_FUNCTION_130_2();
  v18(v17, a1);
  *(_QWORD *)v16 = a3;
  *(_BYTE *)(v16 + 8) = a4 & 1;
  outlined init with take of Any?(a2, (uint64_t)v28, &demangling cache variable for type metadata for AspectRatio?);
  if ((v28[33] & 1) != 0)
  {
    v19 = 0;
    v12 = 0;
    v13 = 0;
    v14 = 0;
    v20 = 1;
  }
  else
  {
    outlined init with take of AspectRatio((uint64_t)v28, (uint64_t)v29);
    v20 = v22 & 1;
    v19 = v23;
  }
  v21 = a7 + v15[5];
  *(_QWORD *)v21 = v19;
  *(_QWORD *)(v21 + 8) = v12;
  *(_QWORD *)(v21 + 16) = v13;
  *(_QWORD *)(v21 + 24) = v14;
  *(_BYTE *)(v21 + 32) = v20;
  *(_BYTE *)(a7 + v15[7]) = a5 & 1;
  *(_BYTE *)(a7 + v15[8]) = a6 & 1;
}

void static ParticipantGridView.ParticipantTileInfo.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;

  if ((OUTLINED_FUNCTION_69_2() & 1) != 0)
  {
    v0 = OUTLINED_FUNCTION_104_4();
    v8 = OUTLINED_FUNCTION_69_10(v0, v1, v2, v3, v4, v5, v6, v7, v21);
    v13 = OUTLINED_FUNCTION_89_9(v8, v9, v10, v11, v12);
    OUTLINED_FUNCTION_125_2(v13, v14, v15, v16, v17, v18, v19, v20, v22, v23, v24, v25, v26, v27);
  }
  OUTLINED_FUNCTION_95_0();
}

uint64_t ParticipantGridView.ParticipantTileInfo.identifier.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_33_0();
  return OUTLINED_FUNCTION_31_0(v1, a1, v3, *(uint64_t (**)(void))(*(_QWORD *)(v3 - 8) + 40));
}

uint64_t (*ParticipantGridView.FullScreenFocusedParticipantInfo.identifier.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void ParticipantGridView.FullScreenFocusedParticipantInfo.aspectRatio.getter(uint64_t a1@<X8>)
{
  ParticipantGridView.ParticipantTileInfo.aspectRatio.getter(type metadata accessor for ParticipantGridView.FullScreenFocusedParticipantInfo, a1);
}

void ParticipantGridView.ParticipantTileInfo.aspectRatio.getter(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  char v5;
  __int128 v6;

  v4 = v2 + *(int *)(a1(0) + 20);
  v5 = *(_BYTE *)(v4 + 32);
  v6 = *(_OWORD *)(v4 + 16);
  *(_OWORD *)a2 = *(_OWORD *)v4;
  *(_OWORD *)(a2 + 16) = v6;
  *(_BYTE *)(a2 + 32) = v5;
  OUTLINED_FUNCTION_0();
}

uint64_t ParticipantGridView.FullScreenFocusedParticipantInfo.aspectRatio.setter(uint64_t a1)
{
  return ParticipantGridView.ParticipantTileInfo.aspectRatio.setter(a1, type metadata accessor for ParticipantGridView.FullScreenFocusedParticipantInfo);
}

uint64_t ParticipantGridView.ParticipantTileInfo.aspectRatio.setter(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_97_1(a1, a2);
  OUTLINED_FUNCTION_141_1();
  return outlined init with take of AspectRatio(v2, v3);
}

uint64_t (*ParticipantGridView.FullScreenFocusedParticipantInfo.aspectRatio.modify())(_QWORD)
{
  OUTLINED_FUNCTION_102_3();
  OUTLINED_FUNCTION_141_1();
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ParticipantGridView.FullScreenFocusedParticipantInfo.orientation.getter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_103_2();
  return *(_QWORD *)(v0 + v1);
}

void ParticipantGridView.FullScreenFocusedParticipantInfo.orientation.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  OUTLINED_FUNCTION_103_2();
  *(_QWORD *)(v1 + v3) = a1;
  OUTLINED_FUNCTION_0();
}

uint64_t (*ParticipantGridView.FullScreenFocusedParticipantInfo.orientation.modify())(_QWORD)
{
  OUTLINED_FUNCTION_103_2();
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ParticipantGridView.FullScreenFocusedParticipantInfo.cameraPosition.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0
                            + *(int *)(type metadata accessor for ParticipantGridView.FullScreenFocusedParticipantInfo(0)
                                     + 28));
}

void ParticipantGridView.FullScreenFocusedParticipantInfo.cameraPosition.setter(char a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + *(int *)(type metadata accessor for ParticipantGridView.FullScreenFocusedParticipantInfo(0) + 28)) = a1;
  OUTLINED_FUNCTION_0();
}

uint64_t (*ParticipantGridView.FullScreenFocusedParticipantInfo.cameraPosition.modify())(_QWORD)
{
  type metadata accessor for ParticipantGridView.FullScreenFocusedParticipantInfo(0);
  return TPNumberPadCharacter.rawValue.getter;
}

double ParticipantGridView.FullScreenFocusedParticipantInfo.aspectRatioSize.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double result;
  char v4;
  uint64_t v5;
  char v6;

  OUTLINED_FUNCTION_103_2();
  if ((*(_QWORD *)(v0 + v1) | 2) == 3)
  {
    result = OUTLINED_FUNCTION_101_6();
    if ((v4 & 1) != 0)
      return result;
  }
  else
  {
    result = OUTLINED_FUNCTION_101_6();
    if ((v6 & 1) != 0)
      return result;
    v2 = v5 + 16;
  }
  return *(double *)v2;
}

void static ParticipantGridView.FullScreenFocusedParticipantInfo.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;

  if ((OUTLINED_FUNCTION_69_2() & 1) != 0)
  {
    v3 = OUTLINED_FUNCTION_102_3();
    v11 = OUTLINED_FUNCTION_69_10(v3, v4, v5, v6, v7, v8, v9, v10, v24);
    v16 = OUTLINED_FUNCTION_89_9(v11, v12, v13, v14, v15);
    if (OUTLINED_FUNCTION_125_2(v16, v17, v18, v19, v20, v21, v22, v23, v25, v26, v27, v28, v29, v30)
      && *(_QWORD *)(v1 + *(int *)(v2 + 24)) == *(_QWORD *)(v0 + *(int *)(v2 + 24)))
    {
      OUTLINED_FUNCTION_124_4(*(int *)(v2 + 28));
    }
  }
  OUTLINED_FUNCTION_95_0();
}

void ParticipantGridView.FullScreenFocusedParticipantInfo.init(identifier:aspectRatio:orientation:cameraPosition:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  int *v11;

  v10 = OUTLINED_FUNCTION_33_0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a5, a1, v10);
  v11 = (int *)OUTLINED_FUNCTION_102_3();
  outlined init with take of AspectRatio(a2, a5 + v11[5]);
  *(_QWORD *)(a5 + v11[6]) = a3;
  *(_BYTE *)(a5 + v11[7]) = a4;
  OUTLINED_FUNCTION_91();
}

uint64_t ParticipantGridView.Traits.isSelected.getter(char a1)
{
  return a1 & 1;
}

uint64_t ParticipantGridView.Traits.isScreenSharing.getter(unsigned int a1)
{
  return (a1 >> 8) & 1;
}

ConversationKit::ParticipantGridView::Traits __swiftcall ParticipantGridView.Traits.init(isSelected:isScreenSharing:)(Swift::Bool isSelected, Swift::Bool isScreenSharing)
{
  __int16 v2;

  if (isScreenSharing)
    v2 = 256;
  else
    v2 = 0;
  return (ConversationKit::ParticipantGridView::Traits)(v2 & 0xFFFE | isSelected);
}

uint64_t ParticipantGridView.ParticipantTileInfo.identifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_33_0();
  return OUTLINED_FUNCTION_31_0(a1, v1, v3, *(uint64_t (**)(void))(*(_QWORD *)(v3 - 8) + 16));
}

uint64_t ParticipantGridView.AnimationInfo.style.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ParticipantGridView.AnimationInfo(0) + 20));
}

BOOL static ParticipantGridView.AnimationInfo.== infix(_:_:)()
{
  uint64_t v0;

  if ((OUTLINED_FUNCTION_69_2() & 1) == 0)
    return 0;
  v0 = type metadata accessor for ParticipantGridView.AnimationInfo(0);
  return OUTLINED_FUNCTION_124_4(*(int *)(v0 + 20));
}

void ParticipantGridView.AnimationInfo.init(uuid:style:)(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);

  OUTLINED_FUNCTION_33_0();
  v6 = OUTLINED_FUNCTION_130_2();
  v7(v6, a1);
  *(_BYTE *)(a3 + *(int *)(type metadata accessor for ParticipantGridView.AnimationInfo(0) + 20)) = a2;
  OUTLINED_FUNCTION_18();
}

int64x2_t one-time initialization function for fallbackParticipantViewFrame()
{
  int64x2_t result;

  static ParticipantGridView.fallbackParticipantViewFrame = 0;
  *(_QWORD *)algn_1EF4FCCE8 = 0;
  result = vdupq_n_s64(0x4069000000000000uLL);
  xmmword_1EF4FCCF0 = (__int128)result;
  return result;
}

uint64_t *ParticipantGridView.fallbackParticipantViewFrame.unsafeMutableAddressor()
{
  if (one-time initialization token for fallbackParticipantViewFrame != -1)
    swift_once();
  return &static ParticipantGridView.fallbackParticipantViewFrame;
}

double static ParticipantGridView.fallbackParticipantViewFrame.getter()
{
  if (one-time initialization token for fallbackParticipantViewFrame != -1)
    swift_once();
  return *(double *)&static ParticipantGridView.fallbackParticipantViewFrame;
}

void ParticipantGridView.participantIdentifiers.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  _BOOL8 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  _BOOL8 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  OUTLINED_FUNCTION_93();
  type metadata accessor for ParticipantGridView.ParticipantTileInfo(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_81_11(v3, v53);
  v4 = OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_15_56();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_41();
  v60 = v6;
  v55 = OUTLINED_FUNCTION_56_19();
  v58 = *(_QWORD *)(v55 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_5_27();
  v56 = v8;
  OUTLINED_FUNCTION_8_4();
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v53 - v11;
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v53 - v13;
  v15 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_participantIdentifiableTiles);
  v16 = MEMORY[0x1E0DEE9D8];
  v62 = MEMORY[0x1E0DEE9D8];
  v17 = *(_QWORD *)(v15 + 16);
  swift_bridgeObjectRetain();
  v59 = v4;
  v61 = v1;
  v54 = v17;
  if (v17)
  {
    v18 = 0;
    while (v18 < *(_QWORD *)(v15 + 16))
    {
      v19 = (*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
      v20 = *(_QWORD *)(v58 + 72);
      OUTLINED_FUNCTION_111(v15 + v19 + v20 * v18, (uint64_t)v14);
      OUTLINED_FUNCTION_42_24();
      if (swift_dynamicCastClass())
      {
        v21 = (uint64_t)v12;
        outlined init with take of StagedCollaboration((uint64_t)v14, (uint64_t)v12, type metadata accessor for ParticipantGridView.IdentifiableParticipantTile);
        if ((OUTLINED_FUNCTION_83_8() & 1) == 0)
        {
          v22 = OUTLINED_FUNCTION_98_2();
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v22, v23, v24);
        }
        v25 = v62;
        v27 = *(_QWORD *)(v62 + 16);
        v26 = *(_QWORD *)(v62 + 24);
        if (v27 >= v26 >> 1)
        {
          v29 = OUTLINED_FUNCTION_95_7(v26);
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v29, v30, v31);
          v25 = v62;
        }
        *(_QWORD *)(v25 + 16) = v27 + 1;
        v28 = v25 + v19 + v27 * v20;
        v12 = (char *)v21;
        outlined init with take of StagedCollaboration(v21, v28, type metadata accessor for ParticipantGridView.IdentifiableParticipantTile);
      }
      else
      {
        OUTLINED_FUNCTION_95_2((uint64_t)v14);
      }
      ++v18;
      v1 = v61;
      if (v54 == v18)
      {
        v32 = v62;
        v4 = v59;
        v16 = MEMORY[0x1E0DEE9D8];
        goto LABEL_14;
      }
    }
    __break(1u);
  }
  else
  {
    v32 = v16;
LABEL_14:
    swift_bridgeObjectRelease();
    v33 = *(_QWORD *)(v32 + 16);
    if (v33)
    {
      v62 = v16;
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, v33, 0);
      OUTLINED_FUNCTION_30_36();
      v55 = v32;
      v35 = v32 + v34;
      v37 = *(_QWORD *)(v36 + 72);
      v38 = v60;
      v39 = v56;
      do
      {
        outlined init with copy of ConversationControlsAppLaunchButtonType(v35, v39, type metadata accessor for ParticipantGridView.IdentifiableParticipantTile);
        v40 = v57;
        outlined init with copy of ConversationControlsAppLaunchButtonType(v39, v57, type metadata accessor for ParticipantGridView.ParticipantTileInfo);
        v41 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 32);
        v41(v38, v40, v4);
        outlined destroy of RecentsCallItem(v39, type metadata accessor for ParticipantGridView.IdentifiableParticipantTile);
        v42 = v62;
        if ((OUTLINED_FUNCTION_83_8() & 1) == 0)
        {
          v43 = OUTLINED_FUNCTION_98_2();
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v43, v44, v45);
          v42 = v62;
        }
        v47 = *(_QWORD *)(v42 + 16);
        v46 = *(_QWORD *)(v42 + 24);
        if (v47 >= v46 >> 1)
        {
          v50 = OUTLINED_FUNCTION_95_7(v46);
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v50, v51, v52);
          v42 = v62;
        }
        *(_QWORD *)(v42 + 16) = v47 + 1;
        v38 = v60;
        v1 = v61;
        OUTLINED_FUNCTION_37_3();
        v49 = v42 + v48 + *(_QWORD *)(v1 + 72) * v47;
        v4 = v59;
        v41(v49, v38, v59);
        v62 = v42;
        v35 += v37;
        --v33;
      }
      while (v33);
    }
    swift_release();
    OUTLINED_FUNCTION_52_1();
  }
}

uint64_t ParticipantGridView.participantIdentifiableTiles.didset()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  unint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  __int128 v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;

  v1 = v0;
  v30 = type metadata accessor for ParticipantGridView.IdentifiableParticipantTile(0);
  MEMORY[0x1E0C80A78](v30);
  v4 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_participantIdentifiableTiles];
  v6 = *(_QWORD *)(result + 16);
  if (v6)
  {
    v7 = result + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    v29 = *(_QWORD *)(v2 + 72);
    v26[0] = result;
    swift_bridgeObjectRetain();
    v27 = xmmword_1BD645380;
    v26[1] = MEMORY[0x1E0DEE9B0] + 8;
    v28 = v4;
    while (1)
    {
      outlined init with copy of ConversationControlsAppLaunchButtonType(v7, (uint64_t)v4, type metadata accessor for ParticipantGridView.IdentifiableParticipantTile);
      v32 = *(_OWORD *)&v4[*(int *)(v30 + 20)];
      type metadata accessor for ParticipantView();
      v8 = (void *)v32;
      v9 = swift_dynamicCastClass();
      if (!v9)
        goto LABEL_7;
      v10 = v9;
      v11 = v8;
      v12 = v1;
      swift_getObjectType();
      if (!dynamic_cast_existential_1_conditional((uint64_t)v12))
        break;
      v14 = v13;
      v15 = v10 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_delegate;
      swift_beginAccess();
      *(_QWORD *)(v15 + 8) = v14;
      swift_unknownObjectWeakAssign();

LABEL_10:
      outlined destroy of RecentsCallItem((uint64_t)v4, type metadata accessor for ParticipantGridView.IdentifiableParticipantTile);
      v7 += v29;
      if (!--v6)
        return swift_bridgeObjectRelease();
    }

LABEL_7:
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    v31 = static OS_os_log.conversationKit;
    static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = v27;
    *(_QWORD *)&v33 = v1;
    swift_unknownObjectRetain();
    v17 = String.init<A>(reflecting:)();
    v19 = v18;
    v20 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v16 + 56) = MEMORY[0x1E0DEA968];
    v21 = v1;
    v22 = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v16 + 64) = v22;
    *(_QWORD *)(v16 + 32) = v17;
    *(_QWORD *)(v16 + 40) = v19;
    v33 = v32;
    v23 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParticipantTile);
    v24 = String.init<A>(reflecting:)();
    *(_QWORD *)(v16 + 96) = v20;
    *(_QWORD *)(v16 + 104) = v22;
    v1 = v21;
    *(_QWORD *)(v16 + 72) = v24;
    *(_QWORD *)(v16 + 80) = v25;
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    v4 = v28;
    goto LABEL_10;
  }
  return result;
}

uint64_t ParticipantGridView.participantIdentifiableTiles.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_participantIdentifiableTiles) = a1;
  swift_bridgeObjectRelease();
  return ParticipantGridView.participantIdentifiableTiles.didset();
}

id ParticipantGridView.unfocusedParticipantOverlay.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_unfocusedParticipantOverlay);
}

void ParticipantGridView.organicLayoutConfiguration.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  char v4;
  __int128 v5;

  v3 = v1 + OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_organicLayoutConfiguration;
  OUTLINED_FUNCTION_1();
  v4 = *(_BYTE *)(v3 + 32);
  v5 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_OWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 32) = v4;
  OUTLINED_FUNCTION_32();
}

void ParticipantGridView.fullScreenFocusedParticipantInfo.getter()
{
  ParticipantGridView.fullScreenFocusedParticipantInfo.getter();
}

{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1();
  v0 = OUTLINED_FUNCTION_64();
  OUTLINED_FUNCTION_61_10(v0, v1);
  OUTLINED_FUNCTION_9_0();
}

void key path setter for ParticipantGridView.fullScreenFocusedParticipantInfo : ParticipantGridView(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParticipantGridView.FullScreenFocusedParticipantInfo?);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of FeatureEligibility?(a1, (uint64_t)v4, &demangling cache variable for type metadata for ParticipantGridView.FullScreenFocusedParticipantInfo?);
  ParticipantGridView.fullScreenFocusedParticipantInfo.setter((uint64_t)v4, &demangling cache variable for type metadata for ParticipantGridView.FullScreenFocusedParticipantInfo?, &OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_fullScreenFocusedParticipantInfo, (void (*)(_BYTE *))ParticipantGridView.fullScreenFocusedParticipantInfo.didset);
}

uint64_t ParticipantGridView.fullScreenFocusedParticipantInfo.didset(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  char v17;
  uint64_t v18;
  char *v19;
  NSObject *v20;
  os_log_type_t v21;
  _BOOL4 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t result;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  _QWORD v40[2];
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v2 = v1;
  v43 = type metadata accessor for ParticipantGridView.IdentifiableParticipantTile(0);
  v4 = *(_QWORD *)(v43 - 8);
  MEMORY[0x1E0C80A78](v43);
  v6 = (char *)v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParticipantGridView.FullScreenFocusedParticipantInfo?);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)v40 - v11;
  v13 = type metadata accessor for DispatchPredicate();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (_QWORD *)((char *)v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v16 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v14 + 104))(v16, *MEMORY[0x1E0DEF740], v13);
  v17 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v14 + 8))(v16, v13);
  if ((v17 & 1) != 0)
  {
    if (one-time initialization token for default == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  v18 = type metadata accessor for Logger();
  __swift_project_value_buffer(v18, (uint64_t)&static Log.default);
  outlined init with copy of FeatureEligibility?(a1, (uint64_t)v12, &demangling cache variable for type metadata for ParticipantGridView.FullScreenFocusedParticipantInfo?);
  v19 = v2;
  v20 = Logger.logObject.getter();
  v21 = static os_log_type_t.default.getter();
  v22 = os_log_type_enabled(v20, v21);
  v42 = v4;
  if (v22)
  {
    v23 = swift_slowAlloc();
    v41 = swift_slowAlloc();
    v45 = v41;
    *(_DWORD *)v23 = 136315394;
    v40[1] = v23 + 4;
    v24 = (uint64_t)&v19[OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_fullScreenFocusedParticipantInfo];
    swift_beginAccess();
    outlined init with copy of FeatureEligibility?(v24, (uint64_t)v10, &demangling cache variable for type metadata for ParticipantGridView.FullScreenFocusedParticipantInfo?);
    specialized >> prefix<A>(_:)((uint64_t)v10);
    v26 = v25;
    v28 = v27;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v10, &demangling cache variable for type metadata for ParticipantGridView.FullScreenFocusedParticipantInfo?);
    v44 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v26, v28, &v45);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 12) = 2080;
    specialized >> prefix<A>(_:)((uint64_t)v12);
    v44 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v29, v30, &v45);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v12, &demangling cache variable for type metadata for ParticipantGridView.FullScreenFocusedParticipantInfo?);
    _os_log_impl(&dword_1BD004000, v20, v21, "Grid fullScreenFocusedParticipantInfo updated to %s from %s", (uint8_t *)v23, 0x16u);
    v31 = v41;
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v31, -1, -1);
    MEMORY[0x1C3B751B8](v23, -1, -1);
  }
  else
  {

    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v12, &demangling cache variable for type metadata for ParticipantGridView.FullScreenFocusedParticipantInfo?);
  }

  v32 = ParticipantGridView.isOneToOneMode.getter();
  result = *(_QWORD *)&v19[OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_participantIdentifiableTiles];
  v34 = *(_QWORD *)(result + 16);
  if (v34)
  {
    v35 = *(int *)(v43 + 20);
    v36 = result + ((*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80));
    v37 = *(_QWORD *)(v42 + 72);
    v43 = *(_QWORD *)&v19[OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_participantIdentifiableTiles];
    swift_bridgeObjectRetain();
    do
    {
      outlined init with copy of ConversationControlsAppLaunchButtonType(v36, (uint64_t)v6, type metadata accessor for ParticipantGridView.IdentifiableParticipantTile);
      v38 = *(id *)&v6[v35];
      outlined destroy of RecentsCallItem((uint64_t)v6, type metadata accessor for ParticipantGridView.IdentifiableParticipantTile);
      type metadata accessor for ParticipantView();
      v39 = swift_dynamicCastClass();
      if (v39)
        ParticipantGridView.updateCornerRadius(for:isOneToOneMode:)(v39, v32 & 1);

      v36 += v37;
      --v34;
    }
    while (v34);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t ParticipantGridView.isOneToOneMode.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  char v4;

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_delegate;
  swift_beginAccess();
  if (MEMORY[0x1C3B752C0](v1))
  {
    v2 = *(_QWORD *)(v1 + 8);
    ObjectType = swift_getObjectType();
    v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(ObjectType, v2);
    swift_unknownObjectRelease();
  }
  else
  {
    v4 = 0;
  }
  return v4 & 1;
}

void ParticipantGridView.updateCornerRadius(for:isOneToOneMode:)(uint64_t a1, char a2)
{
  double v3;
  double *v4;

  v3 = 0.0;
  if ((a2 & 1) == 0)
  {
    if (one-time initialization token for shared != -1)
      swift_once();
    v3 = (*(double (**)(void))(*(_QWORD *)static Defaults.shared + 384))();
  }
  v4 = (double *)(a1 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_customCornerRadius);
  swift_beginAccess();
  if (*v4 != v3)
  {
    *v4 = v3;
    ParticipantView.customCornerRadius.didset();
  }
}

uint64_t key path getter for ParticipantGridView.delegate : ParticipantGridView@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *a1 + OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_delegate;
  swift_beginAccess();
  result = MEMORY[0x1C3B752C0](v3);
  v5 = *(_QWORD *)(v3 + 8);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t key path setter for ParticipantGridView.delegate : ParticipantGridView(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *a2 + OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_delegate;
  swift_beginAccess();
  *(_QWORD *)(v3 + 8) = v2;
  return swift_unknownObjectWeakAssign();
}

void ParticipantGridView.delegate.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_26();
}

void ParticipantGridView.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_delegate;
  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v4 + 8) = a2;
  OUTLINED_FUNCTION_64();
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_9_0();
}

void ParticipantGridView.delegate.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_delegate;
  v3[5] = v1;
  v3[6] = v4;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_26();
}

void sub_1BD1E41F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 8);
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = v3;
  OUTLINED_FUNCTION_18();
}

void ParticipantGridView.currentAnimationInfo.getter()
{
  ParticipantGridView.fullScreenFocusedParticipantInfo.getter();
}

void key path getter for ParticipantGridView.fullScreenFocusedParticipantInfo : ParticipantGridView(_QWORD *a1@<X0>, _QWORD *a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v4;

  v4 = *a1 + *a2;
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_61_10(v4, a3);
  OUTLINED_FUNCTION_9_0();
}

void key path setter for ParticipantGridView.currentAnimationInfo : ParticipantGridView(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParticipantGridView.AnimationInfo?);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of FeatureEligibility?(a1, (uint64_t)v4, &demangling cache variable for type metadata for ParticipantGridView.AnimationInfo?);
  ParticipantGridView.currentAnimationInfo.setter((uint64_t)v4);
}

void ParticipantGridView.currentAnimationInfo.setter(uint64_t a1)
{
  ParticipantGridView.fullScreenFocusedParticipantInfo.setter(a1, &demangling cache variable for type metadata for ParticipantGridView.AnimationInfo?, &OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_currentAnimationInfo, (void (*)(_BYTE *))ParticipantGridView.currentAnimationInfo.didset);
}

void ParticipantGridView.fullScreenFocusedParticipantInfo.setter(uint64_t a1, uint64_t *a2, _QWORD *a3, void (*a4)(_BYTE *))
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE v13[24];

  __swift_instantiateConcreteTypeFromMangledName(a2);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v9);
  v11 = &v13[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = v4 + *a3;
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_61_10(v12, (uint64_t)v11);
  OUTLINED_FUNCTION_2_0();
  outlined assign with copy of ParticipantGridView.AnimationInfo?(a1, v12, a2);
  swift_endAccess();
  a4(v11);
  OUTLINED_FUNCTION_25_0(a1);
  OUTLINED_FUNCTION_25_0((uint64_t)v11);
  OUTLINED_FUNCTION_91();
}

void ParticipantGridView.currentAnimationInfo.didset(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  int v19;
  int v20;
  int EnumTagSinglePayload;
  uint64_t v22;
  uint64_t v23;
  uint64_t ObjectType;
  _BYTE v25[24];

  v3 = type metadata accessor for ParticipantGridView.AnimationInfo(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = &v25[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParticipantGridView.AnimationInfo?);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = &v25[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v7);
  v11 = &v25[-v10];
  v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantGridView.AnimationInfo?, ParticipantGridView.AnimationInfo?));
  MEMORY[0x1E0C80A78](v12);
  v14 = &v25[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = v1 + OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_currentAnimationInfo;
  swift_beginAccess();
  v16 = (uint64_t)&v14[*(int *)(v12 + 48)];
  outlined init with copy of FeatureEligibility?(v15, (uint64_t)v14, &demangling cache variable for type metadata for ParticipantGridView.AnimationInfo?);
  outlined init with copy of FeatureEligibility?(a1, v16, &demangling cache variable for type metadata for ParticipantGridView.AnimationInfo?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v3) == 1)
  {
    if (__swift_getEnumTagSinglePayload(v16, 1, v3) == 1)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v14, &demangling cache variable for type metadata for ParticipantGridView.AnimationInfo?);
      return;
    }
    v17 = &demangling cache variable for type metadata for (ParticipantGridView.AnimationInfo?, ParticipantGridView.AnimationInfo?);
  }
  else
  {
    outlined init with copy of FeatureEligibility?((uint64_t)v14, (uint64_t)v11, &demangling cache variable for type metadata for ParticipantGridView.AnimationInfo?);
    if (__swift_getEnumTagSinglePayload(v16, 1, v3) == 1)
    {
      v17 = &demangling cache variable for type metadata for (ParticipantGridView.AnimationInfo?, ParticipantGridView.AnimationInfo?);
    }
    else
    {
      outlined init with take of StagedCollaboration(v16, (uint64_t)v5, type metadata accessor for ParticipantGridView.AnimationInfo);
      if ((static UUID.== infix(_:_:)() & 1) != 0)
      {
        v18 = *(int *)(v3 + 20);
        v19 = v11[v18];
        v20 = v5[v18];
        outlined destroy of RecentsCallItem((uint64_t)v5, type metadata accessor for ParticipantGridView.AnimationInfo);
        outlined destroy of RecentsCallItem((uint64_t)v11, type metadata accessor for ParticipantGridView.AnimationInfo);
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v14, &demangling cache variable for type metadata for ParticipantGridView.AnimationInfo?);
        if (v19 == v20)
          return;
        goto LABEL_13;
      }
      outlined destroy of RecentsCallItem((uint64_t)v5, type metadata accessor for ParticipantGridView.AnimationInfo);
      v17 = &demangling cache variable for type metadata for ParticipantGridView.AnimationInfo?;
    }
    outlined destroy of RecentsCallItem((uint64_t)v11, type metadata accessor for ParticipantGridView.AnimationInfo);
  }
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v14, v17);
LABEL_13:
  outlined init with copy of FeatureEligibility?(v15, (uint64_t)v9, &demangling cache variable for type metadata for ParticipantGridView.AnimationInfo?);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v3);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v9, &demangling cache variable for type metadata for ParticipantGridView.AnimationInfo?);
  if (EnumTagSinglePayload == 1)
  {
    v22 = v1 + OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_delegate;
    swift_beginAccess();
    if (MEMORY[0x1C3B752C0](v22))
    {
      v23 = *(_QWORD *)(v22 + 8);
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 24))(v1, ObjectType, v23);
      swift_unknownObjectRelease();
    }
  }
}

void ParticipantGridView.currentAnimationInfo.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParticipantGridView.AnimationInfo?)
                             - 8)
                 + 64);
  v3[4] = malloc(v4);
  v3[5] = malloc(v4);
  OUTLINED_FUNCTION_64();
  OUTLINED_FUNCTION_1();
  v5 = OUTLINED_FUNCTION_157();
  OUTLINED_FUNCTION_61_10(v5, v6);
  OUTLINED_FUNCTION_18();
}

void ParticipantGridView.currentAnimationInfo.modify(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  void *v4;

  v2 = *(void **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 32);
  v4 = *(void **)(*(_QWORD *)a1 + 40);
  if ((a2 & 1) != 0)
  {
    outlined init with copy of FeatureEligibility?(*(_QWORD *)(*(_QWORD *)a1 + 40), (uint64_t)v3, &demangling cache variable for type metadata for ParticipantGridView.AnimationInfo?);
    ParticipantGridView.currentAnimationInfo.setter((uint64_t)v3);
    OUTLINED_FUNCTION_42_23((uint64_t)v4);
  }
  else
  {
    ParticipantGridView.currentAnimationInfo.setter(*(_QWORD *)(*(_QWORD *)a1 + 40));
  }
  free(v4);
  free(v3);
  free(v2);
}

double ParticipantGridView.cachedFrameSize.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_cachedFrameSize;
  OUTLINED_FUNCTION_1();
  return *(double *)v1;
}

uint64_t ParticipantGridView.cachedFrameSize.setter(double a1, double a2)
{
  uint64_t v2;
  double *v5;
  uint64_t result;

  v5 = (double *)(v2 + OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_cachedFrameSize);
  result = OUTLINED_FUNCTION_2_0();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

void ParticipantGridView.cachedFrameSize.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t ParticipantGridView.isLocalMemberAuthorizedToChangeGroupMembership.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0
                         + OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_isLocalMemberAuthorizedToChangeGroupMembership);
  OUTLINED_FUNCTION_1();
  return *v1;
}

void ParticipantGridView.isLocalMemberAuthorizedToChangeGroupMembership.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;

  v3 = (_BYTE *)(v1
               + OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_isLocalMemberAuthorizedToChangeGroupMembership);
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  OUTLINED_FUNCTION_32();
}

void ParticipantGridView.isLocalMemberAuthorizedToChangeGroupMembership.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t ParticipantGridView.MediaPipInfo.corner.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*ParticipantGridView.MediaPipInfo.corner.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void ParticipantGridView.MediaPipInfo.size.setter(double a1, double a2)
{
  uint64_t v2;

  *(double *)(v2 + 8) = a1;
  *(double *)(v2 + 16) = a2;
}

uint64_t (*ParticipantGridView.MediaPipInfo.size.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

BOOL ParticipantGridView.MediaPipInfo.isEmpty.getter(double a1, double a2)
{
  return a2 == 0.0 && a1 == 0.0;
}

BOOL ParticipantGridView.MediaPipInfo.flipsOrganicPairs.getter(char a1, double a2, double a3)
{
  id v6;
  id v7;

  v6 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
  v7 = objc_msgSend(v6, sel_userInterfaceIdiom);

  if (v7)
    return 0;
  return a2 >= a3 || a1 != 2;
}

BOOL static ParticipantGridView.MediaPipInfo.== infix(_:_:)(char a1, char a2, double a3, double a4, double a5, double a6)
{
  _BOOL8 result;

  if (a1 == 4)
  {
    if (a2 != 4)
      return 0;
    return a4 == a6 && a3 == a5;
  }
  result = 0;
  if (a2 != 4 && a1 == a2)
    return a4 == a6 && a3 == a5;
  return result;
}

ConversationKit::ParticipantGridView::MediaPipInfo __swiftcall ParticipantGridView.MediaPipInfo.init()()
{
  double v0;
  double v1;
  ConversationKit::MultiwayViewConstraintsController::MultiwayCorner v2;
  ConversationKit::ParticipantGridView::MediaPipInfo result;

  v0 = 0.0;
  v1 = 0.0;
  v2 = ConversationKit_MultiwayViewConstraintsController_MultiwayCorner_unknownDefault;
  result.size.height = v1;
  result.size.width = v0;
  result.corner.value = v2;
  return result;
}

double default argument 1 of ParticipantGridView.MediaPipInfo.init(corner:size:)()
{
  return 0.0;
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance ParticipantGridView.MediaPipInfo(uint64_t a1, uint64_t a2)
{
  return static ParticipantGridView.MediaPipInfo.== infix(_:_:)(*(_BYTE *)a1, *(_BYTE *)a2, *(double *)(a1 + 8), *(double *)(a1 + 16), *(double *)(a2 + 8), *(double *)(a2 + 16));
}

id ParticipantGridView.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

UIView *ParticipantGridView.init()()
{
  char *v0;
  objc_class *v1;
  uint64_t v2;
  id v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  id v20;
  char *v21;
  char v22;
  __int128 v23;
  char v24;
  uint64_t v25;
  char *v26;
  char *v27;
  void *v28;
  char *v29;
  CGFloat v30;
  CGFloat v31;
  CGFloat v32;
  CGFloat v33;
  UIView *v34;
  id v35;
  UIView *v36;
  objc_super v38;
  NSDirectionalEdgeInsets v39;

  v1 = (objc_class *)OUTLINED_FUNCTION_15_6();
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_participantIdentifiableTiles] = MEMORY[0x1E0DEE9D8];
  v2 = OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_unfocusedParticipantOverlay;
  OUTLINED_FUNCTION_143_3();
  v3 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v4 = v0;
  *(_QWORD *)&v0[v2] = objc_msgSend(v3, sel_init);
  v5 = OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_featureFlags;
  *(_QWORD *)&v4[v5] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DBD2F0]), sel_init);
  v6 = (uint64_t)&v4[OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_currentlyFocusedParticipantIdentifier];
  OUTLINED_FUNCTION_33_0();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
  OUTLINED_FUNCTION_83_0(v6, 1);
  OUTLINED_FUNCTION_83_0((uint64_t)&v4[OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_mostProminentParticipantIdentifier], 1);
  v8 = (uint64_t)&v4[OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_fullScreenFocusedParticipantInfo];
  v9 = type metadata accessor for ParticipantGridView.FullScreenFocusedParticipantInfo(0);
  OUTLINED_FUNCTION_77_0(v8, v10, v11, v9);
  *(_QWORD *)&v4[OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_mostRecentAnimationIndex] = 0;
  OUTLINED_FUNCTION_40_4((uint64_t)&v4[OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_delegate]);
  v12 = (uint64_t)&v4[OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_currentAnimationInfo];
  v13 = type metadata accessor for ParticipantGridView.AnimationInfo(0);
  OUTLINED_FUNCTION_77_0(v12, v14, v15, v13);
  v16 = OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_videoInfoCache;
  v17 = OUTLINED_FUNCTION_47_11();
  OUTLINED_FUNCTION_139_1();
  *(_QWORD *)&v4[v16] = v17;
  v18 = &v4[OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_cachedFrameSize];
  *(_QWORD *)v18 = 0;
  *((_QWORD *)v18 + 1) = 0;
  v4[OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_isLocalMemberAuthorizedToChangeGroupMembership] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_deviceOrientation] = 1;
  v19 = OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_frozenFrameOverlayState;
  _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, v7, MEMORY[0x1E0CB09C8]);
  OUTLINED_FUNCTION_157();
  *(_QWORD *)&v4[v19] = Dictionary.init(dictionaryLiteral:)();
  if (one-time initialization token for shared != -1)
    swift_once();
  v4[OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_layoutStyle] = (*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared
                                                                                                + 504))() & 1;
  v20 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
  v21 = (char *)objc_msgSend(v20, sel_userInterfaceIdiom);

  if ((unint64_t)(v21 - 1) >= 3)
  {
    if (!v21)
    {
      v24 = 0;
      v23 = xmmword_1BD650830;
      v25 = 0;
      v22 = 1;
      goto LABEL_9;
    }
    if (v21 != (char *)-1)
    {
      v22 = 0;
      v23 = xmmword_1BD650840;
      v24 = 2;
      v25 = 0x4089000000000000;
      goto LABEL_9;
    }
  }
  v22 = 0;
  v23 = xmmword_1BD650840;
  v24 = 1;
  v25 = 0x408A100000000000;
LABEL_9:
  v4[OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_deviceType] = v24;
  v26 = &v4[OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_organicLayoutConfiguration];
  *(_QWORD *)v26 = 0x4030000000000000;
  *(_OWORD *)(v26 + 8) = v23;
  *((_QWORD *)v26 + 3) = v25;
  v26[32] = v22;

  v38.receiver = v4;
  v38.super_class = v1;
  v27 = (char *)objc_msgSendSuper2(&v38, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v28 = *(void **)&v27[OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_unfocusedParticipantOverlay];
  v29 = v27;
  objc_msgSend(v29, sel_addSubview_, v28);
  v30 = *MEMORY[0x1E0DC3298];
  v31 = *(double *)(MEMORY[0x1E0DC3298] + 8);
  v32 = *(double *)(MEMORY[0x1E0DC3298] + 16);
  v33 = *(double *)(MEMORY[0x1E0DC3298] + 24);
  v34 = v29;
  v35 = v28;
  v39.top = v30;
  v39.leading = v31;
  v39.bottom = v32;
  v39.trailing = v33;
  UIView.addConstraintsToFill(_:insets:)(v34, v39);

  v36 = v34;
  UIView.addTapInteraction(withTapCount:)(1);

  return v36;
}

void ParticipantGridView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;

  objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  OUTLINED_FUNCTION_0();
}

void ParticipantGridView.init(coder:)()
{
  _BYTE *v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;

  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_participantIdentifiableTiles] = MEMORY[0x1E0DEE9D8];
  v1 = OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_unfocusedParticipantOverlay;
  OUTLINED_FUNCTION_143_3();
  v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  *(_QWORD *)&v0[v1] = OUTLINED_FUNCTION_53_3(v2);
  v3 = OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_featureFlags;
  *(_QWORD *)&v0[v3] = OUTLINED_FUNCTION_53_3(objc_allocWithZone(MEMORY[0x1E0DBD2F0]));
  v4 = (uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_currentlyFocusedParticipantIdentifier];
  OUTLINED_FUNCTION_33_0();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
  OUTLINED_FUNCTION_8_2(v4);
  OUTLINED_FUNCTION_8_2((uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_mostProminentParticipantIdentifier]);
  v6 = type metadata accessor for ParticipantGridView.FullScreenFocusedParticipantInfo(0);
  OUTLINED_FUNCTION_18_49(v6);
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_mostRecentAnimationIndex] = 0;
  OUTLINED_FUNCTION_40_4((uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_delegate]);
  v7 = type metadata accessor for ParticipantGridView.AnimationInfo(0);
  OUTLINED_FUNCTION_18_49(v7);
  v8 = OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_videoInfoCache;
  v9 = OUTLINED_FUNCTION_47_11();
  OUTLINED_FUNCTION_139_1();
  *(_QWORD *)&v0[v8] = v9;
  v10 = &v0[OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_cachedFrameSize];
  *v10 = 0;
  v10[1] = 0;
  v0[OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_isLocalMemberAuthorizedToChangeGroupMembership] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_deviceOrientation] = 1;
  v11 = OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_frozenFrameOverlayState;
  _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, v5, MEMORY[0x1E0CB09C8]);
  *(_QWORD *)&v0[v11] = OUTLINED_FUNCTION_152_0();

  OUTLINED_FUNCTION_44_25();
  __break(1u);
}

id ParticipantGridView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

void ParticipantGridView.init(frame:)()
{
  _BYTE *v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;

  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_participantIdentifiableTiles] = MEMORY[0x1E0DEE9D8];
  v1 = OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_unfocusedParticipantOverlay;
  OUTLINED_FUNCTION_143_3();
  v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  *(_QWORD *)&v0[v1] = OUTLINED_FUNCTION_53_3(v2);
  v3 = OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_featureFlags;
  *(_QWORD *)&v0[v3] = OUTLINED_FUNCTION_53_3(objc_allocWithZone(MEMORY[0x1E0DBD2F0]));
  v4 = (uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_currentlyFocusedParticipantIdentifier];
  OUTLINED_FUNCTION_33_0();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
  OUTLINED_FUNCTION_8_2(v4);
  OUTLINED_FUNCTION_8_2((uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_mostProminentParticipantIdentifier]);
  v6 = type metadata accessor for ParticipantGridView.FullScreenFocusedParticipantInfo(0);
  OUTLINED_FUNCTION_18_49(v6);
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_mostRecentAnimationIndex] = 0;
  OUTLINED_FUNCTION_40_4((uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_delegate]);
  v7 = type metadata accessor for ParticipantGridView.AnimationInfo(0);
  OUTLINED_FUNCTION_18_49(v7);
  v8 = OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_videoInfoCache;
  v9 = OUTLINED_FUNCTION_47_11();
  OUTLINED_FUNCTION_139_1();
  *(_QWORD *)&v0[v8] = v9;
  v10 = &v0[OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_cachedFrameSize];
  *v10 = 0;
  v10[1] = 0;
  v0[OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_isLocalMemberAuthorizedToChangeGroupMembership] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_deviceOrientation] = 1;
  v11 = OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_frozenFrameOverlayState;
  _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, v5, MEMORY[0x1E0CB09C8]);
  *(_QWORD *)&v0[v11] = OUTLINED_FUNCTION_152_0();

  OUTLINED_FUNCTION_44_25();
  __break(1u);
}

Swift::Void __swiftcall ParticipantGridView.layoutSubviews()()
{
  void *v0;
  objc_super v1;

  v1.receiver = v0;
  v1.super_class = (Class)OUTLINED_FUNCTION_15_6();
  objc_msgSendSuper2(&v1, sel_layoutSubviews);
  ParticipantGridView.updateParticipantViewFrames()();
}

id ParticipantGridView.updateParticipantViewFrames()()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  id result;
  uint64_t v14;
  uint64_t v15;
  double *v16;
  double v17;
  double v18;
  double v19;
  double v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE v31[24];
  CGRect v32;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParticipantGridView.FullScreenFocusedParticipantInfo?);
  MEMORY[0x1E0C80A78](v1);
  v3 = &v31[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = &v31[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v5);
  v9 = &v31[-v8];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParticipantGridView.AnimationInfo?);
  MEMORY[0x1E0C80A78](v10);
  v12 = &v31[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  objc_msgSend(v0, sel_safeAreaInsetFrame);
  result = (id)CGRectIsEmpty(v32);
  if ((result & 1) == 0)
  {
    v14 = (uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_currentAnimationInfo];
    swift_beginAccess();
    outlined init with copy of FeatureEligibility?(v14, (uint64_t)v12, &demangling cache variable for type metadata for ParticipantGridView.AnimationInfo?);
    v15 = type metadata accessor for ParticipantGridView.AnimationInfo(0);
    LODWORD(v14) = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v15);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v12, &demangling cache variable for type metadata for ParticipantGridView.AnimationInfo?);
    if ((_DWORD)v14 == 1
      || ((v16 = (double *)&v0[OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_cachedFrameSize],
           swift_beginAccess(),
           v17 = *v16,
           v18 = v16[1],
           result = objc_msgSend(v0, sel_frame),
           v17 == v20)
        ? (v21 = v18 == v19)
        : (v21 = 0),
          !v21))
    {
      objc_msgSend(v0, sel_frame);
      v23 = v22;
      v25 = v24;
      v26 = &v0[OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_cachedFrameSize];
      swift_beginAccess();
      *(_QWORD *)v26 = v23;
      *((_QWORD *)v26 + 1) = v25;
      v27 = (uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_mostProminentParticipantIdentifier];
      swift_beginAccess();
      outlined init with copy of FeatureEligibility?(v27, (uint64_t)v9, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      v28 = (uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_currentlyFocusedParticipantIdentifier];
      swift_beginAccess();
      outlined init with copy of FeatureEligibility?(v28, (uint64_t)v7, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      v29 = (uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_fullScreenFocusedParticipantInfo];
      swift_beginAccess();
      outlined init with copy of FeatureEligibility?(v29, (uint64_t)v3, &demangling cache variable for type metadata for ParticipantGridView.FullScreenFocusedParticipantInfo?);
      v30 = swift_bridgeObjectRetain();
      ParticipantGridView.frames(for:mostProminentIdentifier:focusedIdentifier:fullScreenFocusedParticipantInfo:)(v30, (uint64_t)v9, (uint64_t)v7, (uint64_t)v3);
    }
  }
  return result;
}

Swift::Void __swiftcall ParticipantGridView.traitCollectionDidChange(_:)(UITraitCollection_optional a1)
{
  void *v1;
  Class isa;
  double v3;
  double v4;
  id v5;
  double v6;
  double v7;
  objc_super v8;

  isa = a1.value.super.isa;
  v8.receiver = v1;
  v8.super_class = (Class)OUTLINED_FUNCTION_15_6();
  objc_msgSendSuper2(&v8, sel_traitCollectionDidChange_, isa);
  if (isa)
  {
    -[objc_class displayScale](isa, sel_displayScale);
    v4 = v3;
  }
  else
  {
    v4 = 0.0;
  }
  v5 = objc_msgSend(v1, sel_traitCollection);
  objc_msgSend(v5, sel_displayScale);
  v7 = v6;

  if (!isa || v4 != v7)
    objc_msgSend(v1, sel_setNeedsLayout);
}

Swift::Void __swiftcall ParticipantGridView.setParticipants(_:)(Swift::OpaquePointer a1)
{
  char *v1;
  uint64_t *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  _QWORD v26[4];

  OUTLINED_FUNCTION_93();
  v4 = v1;
  v6 = v5;
  v7 = type metadata accessor for ParticipantGridView.IdentifiableParticipantTile(0);
  OUTLINED_FUNCTION_41_1();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParticipantGridView.FullScreenFocusedParticipantInfo?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v11);
  v13 = (void (*)(char *, char *, uint64_t))((char *)v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = OUTLINED_FUNCTION_8_13();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_77_1();
  OUTLINED_FUNCTION_59(v16, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v2 = OUTLINED_FUNCTION_7_22();
  OUTLINED_FUNCTION_72_12(*MEMORY[0x1E0DEF740], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 104));
  v17 = OUTLINED_FUNCTION_145_0();
  (*(void (**)(uint64_t *, uint64_t))(v15 + 8))(v2, v14);
  if ((v17 & 1) != 0)
  {
    v18 = (uint64_t)&v4[OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_fullScreenFocusedParticipantInfo];
    OUTLINED_FUNCTION_1();
    OUTLINED_FUNCTION_123_3(v18, (uint64_t)v13);
    v19 = ParticipantGridView.updateParticipantTiles(with:fullScreenFocusedParticipantInfo:)(v6, v13);
    OUTLINED_FUNCTION_43_0((uint64_t)v13);
    ParticipantGridView.participantIdentifiableTiles.setter(v19);
    v26[0] = *(_QWORD *)&v4[OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_participantIdentifiableTiles];
    v20 = *(_QWORD *)(v26[0] + 16);
    if (v20)
    {
      v21 = *(int *)(v7 + 20);
      OUTLINED_FUNCTION_37_3();
      v23 = v26[0] + v22;
      v24 = *(_QWORD *)(v3 + 72);
      swift_bridgeObjectRetain();
      do
      {
        OUTLINED_FUNCTION_111(v23, (uint64_t)v10);
        v25 = *(void **)&v10[v21];
        objc_msgSend(v25, sel_setAlpha_, 1.0);
        objc_msgSend(v4, sel_addSubview_, v25);
        OUTLINED_FUNCTION_95_2((uint64_t)v10);
        v23 += v24;
        --v20;
      }
      while (v20);
      swift_bridgeObjectRelease();
    }
    ParticipantGridView.updateParticipantViewFrames()();
    OUTLINED_FUNCTION_52_1();
  }
  else
  {
    __break(1u);
  }
}

uint64_t ParticipantGridView.updateParticipantTiles(with:fullScreenFocusedParticipantInfo:)(uint64_t a1, void (*a2)(char *, char *, uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  int EnumTagSinglePayload;
  uint64_t *v85;
  int v86;
  unint64_t *v87;
  uint64_t v88;
  uint64_t v89;
  int *v90;
  BOOL v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  char *v95;
  unint64_t *v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t *v105;
  int v106;
  uint64_t v107;
  uint64_t v108;
  void (*v109)(char *, char *, uint64_t);
  uint64_t v110;
  uint64_t v111;
  int EnumCaseMultiPayload;
  uint64_t v113;
  const void *v114;
  uint64_t v115;
  uint64_t v116;
  char v117;
  uint64_t v118;
  char v119;
  int *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  int v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  unint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  char v148;
  void (*v149)(char *, uint64_t);
  uint64_t v150;
  uint64_t v151;
  _DWORD *v152;
  BOOL v153;
  int v154;
  uint64_t v155;
  char v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  void *v161;
  char v162;
  uint64_t v163;
  id v164;
  int v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  char v170;
  id v171;
  uint64_t v172;
  uint64_t *v173;
  uint64_t v174;
  int v175;
  int v176;
  uint64_t v177;
  uint64_t v178;
  _QWORD *v179;
  uint64_t v180;
  _BOOL4 v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  id v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  _BOOL4 v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  const void *v198;
  uint64_t v199;
  uint64_t v200;
  char v201;
  int *v202;
  char v203;
  uint64_t v204;
  char *v205;
  void *v206;
  id v207;
  int *v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  unint64_t v213;
  uint64_t v214;
  int *v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  char *v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  const void *v225;
  uint64_t v226;
  uint64_t v227;
  char v228;
  uint64_t v229;
  char v230;
  _BOOL4 v231;
  int *v232;
  uint64_t v233;
  char *v234;
  uint64_t v235;
  char **v236;
  char *v237;
  char *v238;
  uint64_t v239;
  uint64_t v240;
  unint64_t v241;
  uint64_t v242;
  void (*v243)(char *, char *, uint64_t);
  unint64_t v244;
  char *v245;
  unint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  unint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  char *v255;
  uint64_t v256;
  uint64_t v257;
  char v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  char v262;
  void *v263;
  uint64_t v264;
  char *v265;
  id v266;
  uint64_t v268;
  uint64_t v269;
  char *v270;
  uint64_t v271;
  char *v272;
  _BOOL4 v273;
  uint64_t v274;
  int v275;
  uint64_t v276;
  char *v277;
  __int128 v278;
  uint64_t v279;
  char *v280;
  char *v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  char *v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t *v290;
  uint64_t v291;
  uint64_t v292;
  char *v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  int v298;
  uint64_t v299;
  _BOOL4 v300;
  unint64_t v301;
  uint64_t v302;
  char *v303;
  uint64_t v304;
  uint64_t v305;
  char *v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  int *v313;
  unint64_t v314;
  char *v315;
  uint64_t v316;
  uint64_t v317;
  void (*v318)(char *, char *, uint64_t);
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  char *v325;
  char *v326;
  __int128 v327;
  char *v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  _QWORD v332[45];
  uint64_t v333;
  uint64_t v334;
  _BYTE v335[56];
  __int128 v336;
  char v337;
  uint64_t v338;
  _BYTE v339[40];
  _BYTE v340[40];
  _BYTE v341[40];
  _BYTE v342[48];

  v3 = v2;
  v318 = a2;
  v297 = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  MEMORY[0x1E0C80A78](v4);
  v6 = (int *)((char *)&v268 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParticipantViewModel?);
  MEMORY[0x1E0C80A78](v7);
  v294 = (uint64_t)&v268 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v308 = type metadata accessor for ParticipantGridView.ParticipantTileInfo(0);
  v9 = MEMORY[0x1E0C80A78](v308);
  v277 = (char *)&v268 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v270 = (char *)&v268 - v12;
  v13 = MEMORY[0x1E0C80A78](v11);
  v279 = (uint64_t)&v268 - v14;
  v15 = MEMORY[0x1E0C80A78](v13);
  v329 = (uint64_t)&v268 - v16;
  MEMORY[0x1E0C80A78](v15);
  v310 = (uint64_t)&v268 - v17;
  v321 = type metadata accessor for ParticipantGridView.IdentifiableParticipantTile(0);
  v311 = *(_QWORD *)(v321 - 8);
  v18 = MEMORY[0x1E0C80A78](v321);
  v319 = (uint64_t)&v268 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x1E0C80A78](v18);
  v323 = (uint64_t)&v268 - v21;
  v22 = MEMORY[0x1E0C80A78](v20);
  v302 = (uint64_t)&v268 - v23;
  v24 = MEMORY[0x1E0C80A78](v22);
  v282 = (uint64_t)&v268 - v25;
  v26 = MEMORY[0x1E0C80A78](v24);
  v274 = (uint64_t)&v268 - v27;
  v28 = MEMORY[0x1E0C80A78](v26);
  v272 = (char *)&v268 - v29;
  v30 = MEMORY[0x1E0C80A78](v28);
  v289 = (uint64_t)&v268 - v31;
  v32 = MEMORY[0x1E0C80A78](v30);
  v324 = (uint64_t)&v268 - v33;
  MEMORY[0x1E0C80A78](v32);
  v295 = (uint64_t)&v268 - v34;
  v291 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (offset: Int, element: Participant));
  MEMORY[0x1E0C80A78](v291);
  v280 = (char *)&v268 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = type metadata accessor for UUID();
  v37 = *(_QWORD *)(v36 - 8);
  v38 = MEMORY[0x1E0C80A78](v36);
  v286 = (char *)&v268 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = MEMORY[0x1E0C80A78](v38);
  v281 = (char *)&v268 - v41;
  v42 = MEMORY[0x1E0C80A78](v40);
  v306 = (char *)&v268 - v43;
  v44 = MEMORY[0x1E0C80A78](v42);
  v315 = (char *)&v268 - v45;
  v46 = MEMORY[0x1E0C80A78](v44);
  v328 = (char *)&v268 - v47;
  v48 = MEMORY[0x1E0C80A78](v46);
  v303 = (char *)&v268 - v49;
  MEMORY[0x1E0C80A78](v48);
  *(_QWORD *)&v327 = (char *)&v268 - v50;
  v51 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (offset: Int, element: Participant)?);
  v52 = MEMORY[0x1E0C80A78](v51);
  v293 = (char *)&v268 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v52);
  v290 = (uint64_t *)((char *)&v268 - v54);
  v307 = type metadata accessor for Participant.State(0);
  v55 = MEMORY[0x1E0C80A78](v307);
  v276 = (uint64_t)&v268 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = MEMORY[0x1E0C80A78](v55);
  v269 = (uint64_t)&v268 - v58;
  v59 = MEMORY[0x1E0C80A78](v57);
  v288 = (uint64_t)&v268 - v60;
  MEMORY[0x1E0C80A78](v59);
  v62 = (char *)&v268 - v61;
  v322 = type metadata accessor for Participant(0);
  v287 = *(_QWORD *)(v322 - 8);
  v63 = MEMORY[0x1E0C80A78](v322);
  v320 = (uint64_t)&v268 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = MEMORY[0x1E0C80A78](v63);
  v317 = (uint64_t)&v268 - v66;
  v67 = MEMORY[0x1E0C80A78](v65);
  v326 = (char *)&v268 - v68;
  v69 = MEMORY[0x1E0C80A78](v67);
  v325 = (char *)&v268 - v70;
  MEMORY[0x1E0C80A78](v69);
  v72 = (char *)&v268 - v71;
  v73 = type metadata accessor for ParticipantGridView.FullScreenFocusedParticipantInfo(0);
  MEMORY[0x1E0C80A78](v73);
  v314 = (unint64_t)&v268 - ((v74 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParticipantGridView.FullScreenFocusedParticipantInfo?);
  MEMORY[0x1E0C80A78](v75);
  v316 = (uint64_t)&v268 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantGridView.FullScreenFocusedParticipantInfo?, ParticipantGridView.FullScreenFocusedParticipantInfo?));
  MEMORY[0x1E0C80A78](v77);
  v79 = (char *)&v268 - ((v78 + 15) & 0xFFFFFFFFFFFFFFF0);
  v312 = v3;
  v80 = v3 + OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_fullScreenFocusedParticipantInfo;
  swift_beginAccess();
  v81 = (uint64_t)&v79[*(int *)(v77 + 48)];
  v82 = v80;
  v83 = v73;
  outlined init with copy of FeatureEligibility?(v82, (uint64_t)v79, &demangling cache variable for type metadata for ParticipantGridView.FullScreenFocusedParticipantInfo?);
  outlined init with copy of FeatureEligibility?((uint64_t)v318, v81, &demangling cache variable for type metadata for ParticipantGridView.FullScreenFocusedParticipantInfo?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v79, 1, v73) == 1)
  {
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v81, 1, v73);
    if (EnumTagSinglePayload == 1)
      v85 = &demangling cache variable for type metadata for ParticipantGridView.FullScreenFocusedParticipantInfo?;
    else
      v85 = &demangling cache variable for type metadata for (ParticipantGridView.FullScreenFocusedParticipantInfo?, ParticipantGridView.FullScreenFocusedParticipantInfo?);
    if (EnumTagSinglePayload == 1)
      v86 = -1;
    else
      v86 = 0;
    v273 = v86;
    v87 = (unint64_t *)v293;
  }
  else
  {
    v88 = v316;
    outlined init with copy of FeatureEligibility?((uint64_t)v79, v316, &demangling cache variable for type metadata for ParticipantGridView.FullScreenFocusedParticipantInfo?);
    if (__swift_getEnumTagSinglePayload(v81, 1, v83) == 1)
    {
      v273 = 0;
      v85 = &demangling cache variable for type metadata for (ParticipantGridView.FullScreenFocusedParticipantInfo?, ParticipantGridView.FullScreenFocusedParticipantInfo?);
      v87 = (unint64_t *)v293;
    }
    else
    {
      v313 = (int *)v83;
      v89 = v314;
      outlined init with take of StagedCollaboration(v81, v314, type metadata accessor for ParticipantGridView.FullScreenFocusedParticipantInfo);
      if ((static UUID.== infix(_:_:)() & 1) != 0)
      {
        v90 = v313;
        outlined init with take of AspectRatio(v88 + v313[5], (uint64_t)v341);
        outlined init with take of AspectRatio(v89 + v90[5], (uint64_t)v342);
        v91 = static AspectRatio.== infix(_:_:)((uint64_t)v341, (uint64_t)v342);
        v87 = (unint64_t *)v293;
        v273 = v91
            && *(_QWORD *)(v88 + v313[6]) == *(_QWORD *)(v89 + v313[6])
            && *(unsigned __int8 *)(v88 + v313[7]) == *(unsigned __int8 *)(v89 + v313[7]);
      }
      else
      {
        v273 = 0;
        v87 = (unint64_t *)v293;
      }
      outlined destroy of RecentsCallItem(v89, type metadata accessor for ParticipantGridView.FullScreenFocusedParticipantInfo);
      v85 = &demangling cache variable for type metadata for ParticipantGridView.FullScreenFocusedParticipantInfo?;
    }
    outlined destroy of RecentsCallItem(v88, type metadata accessor for ParticipantGridView.FullScreenFocusedParticipantInfo);
  }
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v79, v85);
  LODWORD(v316) = ParticipantGridView.isOneToOneMode.getter();
  v92 = MEMORY[0x1E0DEE9D8];
  v332[0] = MEMORY[0x1E0DEE9D8];
  v93 = *(_QWORD *)(v297 + 16);
  v94 = swift_bridgeObjectRetain();
  v331 = v36;
  v314 = v93;
  v330 = v37;
  if (v93)
  {
    v318 = (void (*)(char *, char *, uint64_t))((*(unsigned __int8 *)(v287 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v287 + 80));
    outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v318 + v94, (uint64_t)v72, type metadata accessor for Participant);
    outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v72, (uint64_t)v62, type metadata accessor for Participant.State);
    v95 = (char *)&loc_1BD1E6254 + *((int *)qword_1BD1E7898 + swift_getEnumCaseMultiPayload());
    __asm { BR              X9 }
  }
  swift_bridgeObjectRelease();
  v296 = *(_QWORD *)(v92 + 16);
  swift_release();
  v299 = MEMORY[0x1E0DEE9D8];
  v96 = v87;
  v300 = v296 != 0;
  v305 = OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_participantIdentifiableTiles;
  v271 = v289 + 8;
  swift_bridgeObjectRetain();
  v97 = 0;
  v98 = MEMORY[0x1E0DEE9D8];
  v278 = xmmword_1BD6441D0;
  v275 = v316 & 1;
  v99 = v312;
  v313 = v6;
  while (1)
  {
    v100 = v291;
    if (v97 == v314)
    {
      v101 = 1;
      v102 = v314;
    }
    else
    {
      if (v97 >= v314)
        goto LABEL_132;
      *(_QWORD *)&v327 = v97 + 1;
      v103 = (uint64_t)&v280[*(int *)(v291 + 48)];
      outlined init with copy of ConversationControlsAppLaunchButtonType(v297+ ((*(unsigned __int8 *)(v287 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v287 + 80))+ *(_QWORD *)(v287 + 72) * v97, v103, type metadata accessor for Participant);
      v104 = (uint64_t)v96 + *(int *)(v100 + 48);
      *v96 = v97;
      outlined init with take of StagedCollaboration(v103, v104, type metadata accessor for Participant);
      v101 = 0;
      v102 = v327;
      v99 = v312;
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v96, v101, 1, v100);
    v105 = v290;
    outlined init with take of Any?((uint64_t)v96, (uint64_t)v290, &demangling cache variable for type metadata for (offset: Int, element: Participant)?);
    v106 = __swift_getEnumTagSinglePayload((uint64_t)v105, 1, v100);
    v309 = v98;
    if (v106 == 1)
      break;
    v304 = *v105;
    v107 = (uint64_t)v105 + *(int *)(v100 + 48);
    v108 = v317;
    outlined init with take of StagedCollaboration(v107, v317, type metadata accessor for Participant);
    ParticipantGridView.updateCacheIfNeeded(for:)(v108);
    LODWORD(v316) = ParticipantGridView.showsMostActiveTreatment(for:totalParticipantCount:)(v108, v314);
    v109 = *(void (**)(char *, char *, uint64_t))(v37 + 16);
    v326 = (char *)(v108 + *(int *)(v322 + 20));
    v318 = v109;
    ((void (*)(char *))v109)(v303);
    *(_OWORD *)&v335[40] = 0u;
    v336 = 0u;
    v337 = 1;
    ParticipantGridView.aspectRatio(for:default:)();
    v110 = v108;
    v111 = v288;
    outlined init with copy of ConversationControlsAppLaunchButtonType(v110, v288, type metadata accessor for Participant.State);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v301 = v102;
    if (EnumCaseMultiPayload != 4)
    {
      outlined destroy of RecentsCallItem(v111, type metadata accessor for Participant.State);
      v116 = 0;
      v119 = 1;
LABEL_33:
      v118 = v299;
      goto LABEL_34;
    }
    v113 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
    v114 = (const void *)(v111 + *(int *)(v113 + 48));
    outlined consume of Participant.CopresenceInfo?(*(_QWORD *)(v111 + *(int *)(v113 + 64)), *(_QWORD *)(v111 + *(int *)(v113 + 64) + 8));
    memcpy(v332, v114, 0x150uLL);
    v115 = type metadata accessor for Date();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v115 - 8) + 8))(v111, v115);
    v116 = v332[2];
    v117 = v332[3];
    swift_bridgeObjectRetain();
    outlined destroy of Participant.MediaInfo((uint64_t)v332);
    if (!v116)
    {
      v119 = 1;
      v99 = v312;
      goto LABEL_33;
    }
    swift_bridgeObjectRelease();
    v118 = v299;
    if ((v117 & 1) != 0)
    {
      v99 = v312;
      ParticipantGridView.orientation(for:default:)();
      v116 = v166;
      v119 = 0;
    }
    else
    {
      v116 = 0;
      v119 = 1;
      v99 = v312;
    }
LABEL_34:
    v120 = (int *)v308;
    v121 = v310;
    v122 = v310 + *(int *)(v308 + 24);
    *(_QWORD *)&v327 = *(_QWORD *)(v37 + 32);
    ((void (*)(uint64_t, char *, uint64_t))v327)(v310, v303, v331);
    *(_QWORD *)v122 = v116;
    v292 = v122;
    *(_BYTE *)(v122 + 8) = v119;
    v123 = v121 + v120[5];
    outlined init with take of AspectRatio((uint64_t)&v333, v123);
    v124 = v120[7];
    v125 = v316 & 1;
    *(_BYTE *)(v121 + v124) = v125;
    v126 = v120[8];
    *(_BYTE *)(v121 + v126) = v300;
    v127 = *(_QWORD *)(v99 + v305);
    v128 = *(char **)(v127 + 16);
    v325 = v128;
    v298 = v125;
    if (v128)
    {
      v284 = v124;
      v285 = v123;
      v283 = v126;
      v129 = v311;
      v130 = (*(unsigned __int8 *)(v311 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v311 + 80);
      v131 = v127;
      swift_bridgeObjectRetain();
      v132 = 0;
      v133 = *(_QWORD *)(v129 + 72);
      while (1)
      {
        v134 = v324;
        outlined init with copy of ConversationControlsAppLaunchButtonType(v131 + v130, v324, type metadata accessor for ParticipantGridView.IdentifiableParticipantTile);
        v135 = v329;
        outlined init with copy of ConversationControlsAppLaunchButtonType(v134, v329, type metadata accessor for ParticipantGridView.ParticipantTileInfo);
        v136 = v328;
        v137 = v331;
        ((void (*)(char *, uint64_t, uint64_t))v327)(v328, v135, v331);
        LOBYTE(v135) = static UUID.== infix(_:_:)();
        (*(void (**)(char *, uint64_t))(v330 + 8))(v136, v137);
        outlined destroy of RecentsCallItem(v134, type metadata accessor for ParticipantGridView.IdentifiableParticipantTile);
        if ((v135 & 1) != 0)
          break;
        ++v132;
        v130 += v133;
        if (v325 == v132)
        {
          swift_bridgeObjectRelease();
          v99 = v312;
          v6 = v313;
          v127 = *(_QWORD *)(v312 + v305);
          v128 = *(char **)(v127 + 16);
          v138 = v331;
          v37 = v330;
          v120 = (int *)v308;
          v118 = v299;
          LOBYTE(v125) = v298;
          goto LABEL_40;
        }
      }
      swift_bridgeObjectRelease();
      v150 = *(_QWORD *)(v312 + v305);
      if ((unint64_t)v132 >= *(_QWORD *)(v150 + 16))
        goto LABEL_134;
      v151 = v289;
      outlined init with copy of ConversationControlsAppLaunchButtonType(v150 + v130, v289, type metadata accessor for ParticipantGridView.IdentifiableParticipantTile);
      if ((static UUID.== infix(_:_:)() & 1) != 0)
      {
        v152 = (_DWORD *)v308;
        outlined init with take of AspectRatio(v151 + *(int *)(v308 + 20), (uint64_t)v339);
        outlined init with take of AspectRatio(v285, (uint64_t)v340);
        v153 = static AspectRatio.== infix(_:_:)((uint64_t)v339, (uint64_t)v340);
        v154 = v152[6];
        if (v153)
        {
          v155 = v151 + v154;
          v156 = *(_BYTE *)(v292 + 8);
          v6 = v313;
          v157 = v279;
          v158 = (uint64_t)v272;
          if ((*(_BYTE *)(v155 + 8) & 1) != 0)
          {
            if (*(_BYTE *)(v292 + 8))
              goto LABEL_107;
LABEL_56:
            v159 = v289 + *(int *)(v321 + 20);
            v161 = *(void **)v159;
            v160 = *(_QWORD *)(v159 + 8);
            v162 = *(_BYTE *)(v271 + v154);
            outlined init with copy of ConversationControlsAppLaunchButtonType(v289, v158, type metadata accessor for ParticipantGridView.IdentifiableParticipantTile);
            v163 = v310;
            outlined init with copy of ConversationControlsAppLaunchButtonType(v310, v157, type metadata accessor for ParticipantGridView.ParticipantTileInfo);
            if ((v162 & 1) != 0)
            {
              v164 = v161;
              outlined destroy of RecentsCallItem(v157, type metadata accessor for ParticipantGridView.ParticipantTileInfo);
              outlined destroy of RecentsCallItem(v158, type metadata accessor for ParticipantGridView.IdentifiableParticipantTile);
              v165 = 0;
            }
            else
            {
              v167 = v308;
              v168 = v158 + *(int *)(v308 + 24);
              v169 = *(_QWORD *)v168;
              v170 = *(_BYTE *)(v168 + 8);
              v171 = v161;
              outlined destroy of RecentsCallItem(v158, type metadata accessor for ParticipantGridView.IdentifiableParticipantTile);
              v172 = *(int *)(v167 + 24);
              v163 = v310;
              v173 = (uint64_t *)(v157 + v172);
              v174 = *v173;
              v175 = *((unsigned __int8 *)v173 + 8);
              outlined destroy of RecentsCallItem(v279, type metadata accessor for ParticipantGridView.ParticipantTileInfo);
              v176 = (v169 == v174) & ~v175;
              if ((v170 & 1) != 0)
                v176 = v175;
              v165 = v176 ^ 1;
            }
            v177 = v295;
            v178 = v294;
            ParticipantGridView.configure(_:with:isMostActive:hasOtherInvitedParticipants:orientationChanged:)(v161, v160, v317, v316 & 1, v296 != 0, v165, v294);
            outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v178, &demangling cache variable for type metadata for ParticipantViewModel?);
            outlined init with copy of ConversationControlsAppLaunchButtonType(v163, v177, type metadata accessor for ParticipantGridView.ParticipantTileInfo);
            v179 = (_QWORD *)(v177 + *(int *)(v321 + 20));
            *v179 = v161;
            v179[1] = v160;
          }
          else
          {
            if (*(_QWORD *)v155 != *(_QWORD *)v292)
              v156 = 1;
            if ((v156 & 1) != 0)
              goto LABEL_56;
LABEL_107:
            if (*(unsigned __int8 *)(v289 + (int)v152[7]) != *(unsigned __int8 *)(v310 + v284)
              || *(unsigned __int8 *)(v289 + (int)v152[8]) != *(unsigned __int8 *)(v310 + v283))
            {
              goto LABEL_56;
            }
            v177 = v295;
            outlined init with copy of ConversationControlsAppLaunchButtonType(v289, v295, type metadata accessor for ParticipantGridView.IdentifiableParticipantTile);
          }
          v98 = v309;
          if (v273)
          {
            v180 = v289;
          }
          else
          {
            v181 = v296 != 0;
            v182 = v289;
            v183 = v289 + *(int *)(v321 + 20);
            v184 = *(_QWORD *)(v183 + 8);
            v185 = *(id *)v183;
            v186 = v294;
            ParticipantGridView.configure(_:with:isMostActive:hasOtherInvitedParticipants:orientationChanged:)(v185, v184, v317, v316 & 1, v181, 0, v294);

            v187 = v186;
            v177 = v295;
            outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v187, &demangling cache variable for type metadata for ParticipantViewModel?);
            v180 = v182;
          }
          outlined destroy of RecentsCallItem(v180, type metadata accessor for ParticipantGridView.IdentifiableParticipantTile);
          v96 = (unint64_t *)v293;
          v37 = v330;
          goto LABEL_77;
        }
      }
      else
      {
        v154 = *(_DWORD *)(v308 + 24);
      }
      v6 = v313;
      v157 = v279;
      v158 = (uint64_t)v272;
      goto LABEL_56;
    }
    v138 = v331;
LABEL_40:
    v139 = v304;
    if (v304 < (uint64_t)v128)
    {
      if (v304 < 0)
        goto LABEL_133;
      v325 = (char *)((*(unsigned __int8 *)(v311 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v311 + 80));
      v140 = *(_QWORD *)(v311 + 72) * v304;
      v141 = v274;
      outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)&v325[v127 + v140], v274, type metadata accessor for ParticipantGridView.IdentifiableParticipantTile);
      v142 = v329;
      outlined init with copy of ConversationControlsAppLaunchButtonType(v141, v329, type metadata accessor for ParticipantGridView.ParticipantTileInfo);
      ((void (*)(char *, uint64_t, uint64_t))v327)(v315, v142, v138);
      outlined destroy of RecentsCallItem(v141, type metadata accessor for ParticipantGridView.IdentifiableParticipantTile);
      v143 = *(_QWORD *)(v118 + 16);
      if (!v143)
      {
        swift_bridgeObjectRetain();
LABEL_68:
        v146 = v331;
        __swift_storeEnumTagSinglePayload((uint64_t)v6, 1, 1, v331);
LABEL_69:
        swift_bridgeObjectRelease();
        v37 = v330;
        (*(void (**)(char *, uint64_t))(v330 + 8))(v315, v146);
        v188 = *(_QWORD *)(v99 + v305);
        if (v304 >= *(_QWORD *)(v188 + 16))
          goto LABEL_135;
        v189 = v146;
        v190 = v296 != 0;
        v191 = v282;
        outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)&v325[v188 + v140], v282, type metadata accessor for ParticipantGridView.IdentifiableParticipantTile);
        v192 = v189;
        v193 = v191 + *(int *)(v321 + 20);
        v194 = v294;
        v195 = v317;
        ParticipantGridView.configure(_:with:isMostActive:hasOtherInvitedParticipants:orientationChanged:)(*(void **)v193, *(_QWORD *)(v193 + 8), v317, v316 & 1, v190, 0, v294);
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v194, &demangling cache variable for type metadata for ParticipantViewModel?);
        v318(v281, v326, v192);
        outlined init with take of AspectRatio(v191 + *(int *)(v308 + 20), (uint64_t)&v338);
        ParticipantGridView.aspectRatio(for:default:)();
        v196 = v269;
        outlined init with copy of ConversationControlsAppLaunchButtonType(v195, v269, type metadata accessor for Participant.State);
        if (swift_getEnumCaseMultiPayload() == 4)
        {
          v197 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
          v198 = (const void *)(v196 + *(int *)(v197 + 48));
          outlined consume of Participant.CopresenceInfo?(*(_QWORD *)(v196 + *(int *)(v197 + 64)), *(_QWORD *)(v196 + *(int *)(v197 + 64) + 8));
          memcpy(v332, v198, 0x150uLL);
          v199 = type metadata accessor for Date();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v199 - 8) + 8))(v196, v199);
          v200 = v332[2];
          v201 = v332[3];
          swift_bridgeObjectRetain();
          outlined destroy of Participant.MediaInfo((uint64_t)v332);
          if (v200)
          {
            swift_bridgeObjectRelease();
            v202 = (int *)v308;
            v98 = v309;
            if ((v201 & 1) != 0)
            {
              ParticipantGridView.orientation(for:default:)();
              v200 = v242;
              v203 = 0;
            }
            else
            {
              v200 = 0;
              v203 = 1;
            }
LABEL_76:
            v204 = (uint64_t)v270;
            v205 = &v270[v202[6]];
            ((void (*)(char *, char *, uint64_t))v327)(v270, v281, v331);
            *(_QWORD *)v205 = v200;
            v205[8] = v203;
            outlined init with take of AspectRatio((uint64_t)&v334, v204 + v202[5]);
            *(_BYTE *)(v204 + v202[7]) = v298;
            *(_BYTE *)(v204 + v202[8]) = v300;
            v327 = *(_OWORD *)v193;
            v177 = v295;
            outlined init with take of StagedCollaboration(v204, v295, type metadata accessor for ParticipantGridView.ParticipantTileInfo);
            v206 = (void *)v327;
            *(_OWORD *)(v177 + *(int *)(v321 + 20)) = v327;
            v207 = v206;
            outlined destroy of RecentsCallItem(v282, type metadata accessor for ParticipantGridView.IdentifiableParticipantTile);
            v96 = (unint64_t *)v293;
LABEL_77:
            v97 = v301;
            goto LABEL_98;
          }
        }
        else
        {
          outlined destroy of RecentsCallItem(v196, type metadata accessor for Participant.State);
          v200 = 0;
        }
        v203 = 1;
        v202 = (int *)v308;
        v98 = v309;
        goto LABEL_76;
      }
      v144 = (char *)(v118
                    + ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80)));
      swift_bridgeObjectRetain();
      v145 = *(_QWORD *)(v37 + 72);
      while (1)
      {
        v146 = v331;
        v318((char *)v6, v144, v331);
        __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v146);
        if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v146) == 1)
          goto LABEL_69;
        v147 = v306;
        ((void (*)(char *, int *, uint64_t))v327)(v306, v6, v146);
        _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
        v148 = dispatch thunk of static Equatable.== infix(_:_:)();
        v149 = *(void (**)(char *, uint64_t))(v330 + 8);
        v149(v147, v146);
        if ((v148 & 1) != 0)
          break;
        v144 += v145;
        --v143;
        v6 = v313;
        if (!v143)
          goto LABEL_68;
      }
      swift_bridgeObjectRelease();
      v138 = v331;
      v149(v315, v331);
      v139 = v304;
      v128 = *(char **)(*(_QWORD *)(v99 + v305) + 16);
      v6 = v313;
      v120 = (int *)v308;
      LOBYTE(v125) = v298;
    }
    v208 = v120;
    if (v139 >= (uint64_t)v128)
    {
      if (one-time initialization token for conversationKit != -1)
        swift_once();
      v325 = (char *)static OS_os_log.conversationKit;
      LODWORD(v304) = static os_log_type_t.error.getter();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v216 = swift_allocObject();
      *(_OWORD *)(v216 + 16) = v278;
      v332[0] = v139;
      v217 = String.init<A>(reflecting:)();
      v219 = v218;
      *(_QWORD *)(v216 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v216 + 64) = lazy protocol witness table accessor for type String and conformance String();
      *(_QWORD *)(v216 + 32) = v217;
      *(_QWORD *)(v216 + 40) = v219;
      os_log(_:dso:log:type:_:)();
      swift_bridgeObjectRelease();
      if (one-time initialization token for fallbackParticipantViewFrame != -1)
        swift_once();
      v215 = v208;
    }
    else
    {
      if (one-time initialization token for conversationKit != -1)
        swift_once();
      v325 = (char *)static OS_os_log.conversationKit;
      LODWORD(v292) = static os_log_type_t.error.getter();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v209 = swift_allocObject();
      *(_OWORD *)(v209 + 16) = v278;
      v332[0] = v139;
      v210 = String.init<A>(reflecting:)();
      v212 = v211;
      *(_QWORD *)(v209 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v209 + 64) = lazy protocol witness table accessor for type String and conformance String();
      *(_QWORD *)(v209 + 32) = v210;
      *(_QWORD *)(v209 + 40) = v212;
      v213 = v304;
      os_log(_:dso:log:type:_:)();
      swift_bridgeObjectRelease();
      if ((v213 & 0x8000000000000000) != 0)
        goto LABEL_136;
      v214 = *(_QWORD *)(v99 + v305);
      if (v213 >= *(_QWORD *)(v214 + 16))
        goto LABEL_137;
      v215 = v208;
      objc_msgSend(*(id *)(v214+ ((*(unsigned __int8 *)(v311 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v311 + 80))+ *(_QWORD *)(v311 + 72) * v213+ *(int *)(v321 + 20)), sel_frame);
    }
    v220 = ParticipantGridView.createParticipantView(frame:isOneToOneMode:)(v275);
    v318(v286, v326, v138);
    v326 = v220;
    v221 = v317;
    ParticipantGridView.aspectRatio(for:default:)();
    v222 = v221;
    v223 = v276;
    outlined init with copy of ConversationControlsAppLaunchButtonType(v222, v276, type metadata accessor for Participant.State);
    if (swift_getEnumCaseMultiPayload() != 4)
    {
      outlined destroy of RecentsCallItem(v223, type metadata accessor for Participant.State);
LABEL_95:
      v227 = 0;
LABEL_96:
      v230 = 1;
      goto LABEL_97;
    }
    v224 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
    v225 = (const void *)(v223 + *(int *)(v224 + 48));
    outlined consume of Participant.CopresenceInfo?(*(_QWORD *)(v223 + *(int *)(v224 + 64)), *(_QWORD *)(v223 + *(int *)(v224 + 64) + 8));
    memcpy(v332, v225, 0x150uLL);
    v226 = type metadata accessor for Date();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v226 - 8) + 8))(v223, v226);
    v227 = v332[2];
    v228 = v332[3];
    swift_bridgeObjectRetain();
    outlined destroy of Participant.MediaInfo((uint64_t)v332);
    if (!v227)
      goto LABEL_96;
    swift_bridgeObjectRelease();
    if ((v228 & 1) == 0)
      goto LABEL_95;
    ParticipantGridView.orientation(for:default:)();
    v227 = v229;
    v230 = 0;
LABEL_97:
    v231 = v296 != 0;
    v232 = v215;
    v233 = (uint64_t)v277;
    v234 = &v277[v215[6]];
    ((void (*)(char *, char *, uint64_t))v327)(v277, v286, v331);
    *(_QWORD *)v234 = v227;
    v234[8] = v230;
    outlined init with take of AspectRatio((uint64_t)v335, v233 + v232[5]);
    *(_BYTE *)(v233 + v232[7]) = v125;
    *(_BYTE *)(v233 + v232[8]) = v300;
    v235 = v295;
    outlined init with copy of ConversationControlsAppLaunchButtonType(v233, v295, type metadata accessor for ParticipantGridView.ParticipantTileInfo);
    v236 = (char **)(v235 + *(int *)(v321 + 20));
    v237 = v326;
    *v236 = v326;
    v236[1] = (char *)&protocol witness table for ParticipantView;
    v238 = v237;
    v239 = v294;
    ParticipantGridView.configure(_:with:isMostActive:hasOtherInvitedParticipants:orientationChanged:)(v238, (uint64_t)&protocol witness table for ParticipantView, v317, v316 & 1, v231, 0, v294);

    v240 = v239;
    v177 = v235;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v240, &demangling cache variable for type metadata for ParticipantViewModel?);
    outlined destroy of RecentsCallItem(v233, type metadata accessor for ParticipantGridView.ParticipantTileInfo);
    v96 = (unint64_t *)v293;
    v37 = v330;
    v98 = v309;
    v97 = v301;
LABEL_98:
    outlined init with copy of ConversationControlsAppLaunchButtonType(v177, v302, type metadata accessor for ParticipantGridView.IdentifiableParticipantTile);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v98 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    v241 = *(_QWORD *)(v98 + 16);
    if (v241 >= *(_QWORD *)(v98 + 24) >> 1)
      v98 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    *(_QWORD *)(v98 + 16) = v241 + 1;
    outlined init with take of StagedCollaboration(v302, v98+ ((*(unsigned __int8 *)(v311 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v311 + 80))+ *(_QWORD *)(v311 + 72) * v241, type metadata accessor for ParticipantGridView.IdentifiableParticipantTile);
    outlined destroy of RecentsCallItem(v310, type metadata accessor for ParticipantGridView.ParticipantTileInfo);
    outlined destroy of RecentsCallItem(v177, type metadata accessor for ParticipantGridView.IdentifiableParticipantTile);
    outlined destroy of RecentsCallItem(v317, type metadata accessor for Participant);
    v99 = v312;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v243 = *(void (**)(char *, char *, uint64_t))(v99 + v305);
  v325 = (char *)*((_QWORD *)v243 + 2);
  if (v325)
  {
    v244 = (*(unsigned __int8 *)(v311 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v311 + 80);
    v324 = (uint64_t)v243 + v244;
    v317 = v98 + v244;
    swift_bridgeObjectRetain();
    v245 = 0;
    v246 = v314;
    v318 = v243;
    while (1)
    {
      if ((unint64_t)v245 >= *((_QWORD *)v243 + 2))
      {
        __break(1u);
LABEL_132:
        __break(1u);
LABEL_133:
        __break(1u);
LABEL_134:
        __break(1u);
LABEL_135:
        __break(1u);
LABEL_136:
        __break(1u);
LABEL_137:
        __break(1u);
        JUMPOUT(0x1BD1E7898);
      }
      v247 = *(_QWORD *)(v311 + 72);
      v326 = v245;
      *(_QWORD *)&v327 = v247;
      outlined init with copy of ConversationControlsAppLaunchButtonType(v324 + v247 * (_QWORD)v245, v323, type metadata accessor for ParticipantGridView.IdentifiableParticipantTile);
      if (v246)
      {
        v248 = v287;
        v249 = v297 + ((*(unsigned __int8 *)(v287 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v287 + 80));
        swift_bridgeObjectRetain();
        v250 = *(_QWORD *)(v248 + 72);
        v251 = v246;
        while (1)
        {
          v252 = v320;
          outlined init with copy of ConversationControlsAppLaunchButtonType(v249, v320, type metadata accessor for Participant);
          v253 = v329;
          outlined init with copy of ConversationControlsAppLaunchButtonType(v323, v329, type metadata accessor for ParticipantGridView.ParticipantTileInfo);
          v254 = v330;
          v255 = v328;
          v256 = v253;
          v257 = v331;
          (*(void (**)(char *, uint64_t, uint64_t))(v330 + 32))(v328, v256, v331);
          v258 = static UUID.== infix(_:_:)();
          (*(void (**)(char *, uint64_t))(v254 + 8))(v255, v257);
          outlined destroy of RecentsCallItem(v252, type metadata accessor for Participant);
          if ((v258 & 1) != 0)
            break;
          v249 += v250;
          if (!--v251)
          {
            swift_bridgeObjectRelease();
            v246 = v314;
            v98 = v309;
            goto LABEL_118;
          }
        }
        swift_bridgeObjectRelease();
        v246 = v314;
        v98 = v309;
      }
      else
      {
LABEL_118:
        v259 = *(_QWORD *)(v98 + 16);
        if (!v259)
        {
LABEL_123:
          v263 = *(void **)(v323 + *(int *)(v321 + 20));
          objc_msgSend(v263, sel_removeFromSuperview);
          type metadata accessor for ParticipantView();
          v264 = swift_dynamicCastClass();
          v243 = v318;
          v265 = v326;
          if (v264)
          {
            v266 = v263;
            ParticipantView.reset()();

            v246 = v314;
          }
          goto LABEL_128;
        }
        type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSObject);
        swift_bridgeObjectRetain();
        v260 = v317;
        while (1)
        {
          v261 = v319;
          outlined init with copy of ConversationControlsAppLaunchButtonType(v260, v319, type metadata accessor for ParticipantGridView.IdentifiableParticipantTile);
          v262 = static NSObject.== infix(_:_:)();
          outlined destroy of RecentsCallItem(v261, type metadata accessor for ParticipantGridView.IdentifiableParticipantTile);
          if ((v262 & 1) != 0)
            break;
          v260 += v327;
          if (!--v259)
          {
            swift_bridgeObjectRelease();
            v246 = v314;
            goto LABEL_123;
          }
        }
        swift_bridgeObjectRelease();
        v246 = v314;
      }
      v243 = v318;
      v265 = v326;
LABEL_128:
      v245 = v265 + 1;
      outlined destroy of RecentsCallItem(v323, type metadata accessor for ParticipantGridView.IdentifiableParticipantTile);
      if (v245 == v325)
      {
        swift_bridgeObjectRelease();
        return v98;
      }
    }
  }
  return v98;
}

uint64_t ParticipantGridView.shouldSkipTransition(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  char Frame;
  char v13;
  char *v14;
  double v15;
  double v16;
  double *v17;
  char *v19;
  uint64_t v20;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParticipantGridView.FullScreenFocusedParticipantInfo?);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for ParticipantGridView.FullScreenFocusedParticipantInfo(0);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v20 - v10;
  if (!objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_featureFlags), sel_uPlusOneFullBleedHandoffEnabled))goto LABEL_4;
  outlined init with copy of FeatureEligibility?(a1, (uint64_t)v5, &demangling cache variable for type metadata for ParticipantGridView.FullScreenFocusedParticipantInfo?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v5, 1, v6) != 1)
  {
    outlined init with take of StagedCollaboration((uint64_t)v5, (uint64_t)v11, type metadata accessor for ParticipantGridView.FullScreenFocusedParticipantInfo);
    if ((ParticipantGridView.isOneToOneMode.getter() & 1) != 0)
    {
      v13 = ParticipantGridView.hasConnectedToCall.getter();
      outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v11, (uint64_t)v9, type metadata accessor for ParticipantGridView.FullScreenFocusedParticipantInfo);
      if ((v13 & 1) != 0)
      {
        if ((*(_QWORD *)&v9[*(int *)(v6 + 24)] | 2) == 3)
        {
          v14 = &v9[*(int *)(v6 + 20)];
          v15 = 1.0;
          v16 = 1.0;
          if ((v14[32] & 1) != 0)
            goto LABEL_18;
          v17 = (double *)(v14 + 8);
        }
        else
        {
          v19 = &v9[*(int *)(v6 + 20)];
          v15 = 1.0;
          v16 = 1.0;
          if ((v19[32] & 1) != 0)
            goto LABEL_18;
          v17 = (double *)(v19 + 24);
          v14 = v19 + 16;
        }
        v16 = *v17;
        v15 = *(double *)v14;
LABEL_18:
        outlined destroy of RecentsCallItem((uint64_t)v9, type metadata accessor for ParticipantGridView.FullScreenFocusedParticipantInfo);
        if (v15 == v16)
        {
          Frame = ParticipantGridView.shouldShowLastFrameUI.getter();
          goto LABEL_13;
        }
LABEL_12:
        Frame = 0;
LABEL_13:
        outlined destroy of RecentsCallItem((uint64_t)v11, type metadata accessor for ParticipantGridView.FullScreenFocusedParticipantInfo);
        return Frame & 1;
      }
    }
    else
    {
      outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v11, (uint64_t)v9, type metadata accessor for ParticipantGridView.FullScreenFocusedParticipantInfo);
    }
    outlined destroy of RecentsCallItem((uint64_t)v9, type metadata accessor for ParticipantGridView.FullScreenFocusedParticipantInfo);
    goto LABEL_12;
  }
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v5, &demangling cache variable for type metadata for ParticipantGridView.FullScreenFocusedParticipantInfo?);
LABEL_4:
  Frame = 0;
  return Frame & 1;
}

uint64_t ParticipantGridView.hasConnectedToCall.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  char v4;

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_delegate;
  swift_beginAccess();
  if (MEMORY[0x1C3B752C0](v1))
  {
    v2 = *(_QWORD *)(v1 + 8);
    ObjectType = swift_getObjectType();
    v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 96))(ObjectType, v2);
    swift_unknownObjectRelease();
  }
  else
  {
    v4 = 0;
  }
  return v4 & 1;
}

uint64_t ParticipantGridView.shouldShowLastFrameUI.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  char v4;

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_delegate;
  swift_beginAccess();
  if (MEMORY[0x1C3B752C0](v1))
  {
    v2 = *(_QWORD *)(v1 + 8);
    ObjectType = swift_getObjectType();
    v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 120))(ObjectType, v2);
    swift_unknownObjectRelease();
  }
  else
  {
    v4 = 0;
  }
  return v4 & 1;
}

void ParticipantGridView.transition(to:mostProminentParticipantIdentifier:focusedParticipantIdentifier:selectedParticipantIdentifier:fullScreenFocusedParticipantInfo:layoutStyle:animationStyle:forced:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  int v5;
  int v6;
  unsigned __int8 *v7;
  unsigned __int8 *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  int v95;
  uint64_t v96;
  int v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  int v102;
  uint64_t v103;
  uint64_t v104;
  char v105;
  int v106;
  uint64_t v107;
  _BYTE *v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD v111[4];
  uint64_t v112;
  uint64_t v113;
  int v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  int v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;

  OUTLINED_FUNCTION_93();
  v132 = v1;
  LODWORD(v126) = v5;
  v114 = v6;
  v8 = v7;
  v122 = v9;
  v119 = v10;
  v121 = v11;
  v123 = v12;
  v120 = v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (offset: Int, element: ParticipantGridView.IdentifiableParticipantTile));
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_41();
  v124 = v16;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (offset: Int, element: ParticipantGridView.IdentifiableParticipantTile)?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_5_27();
  v136 = v18;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v19);
  OUTLINED_FUNCTION_62();
  v135 = v20;
  v129 = OUTLINED_FUNCTION_14_2();
  v111[3] = *(_QWORD *)(v129 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v21);
  OUTLINED_FUNCTION_41();
  v128 = v22;
  type metadata accessor for ParticipantGridView.ParticipantTileInfo(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v23);
  OUTLINED_FUNCTION_41();
  v127 = v24;
  v137 = OUTLINED_FUNCTION_33_0();
  v131 = *(_QWORD *)(v137 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v25);
  OUTLINED_FUNCTION_41();
  v130 = v26;
  v134 = OUTLINED_FUNCTION_56_19();
  v125 = *(_QWORD *)(v134 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v27);
  OUTLINED_FUNCTION_30_6();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParticipantGridView.FullScreenFocusedParticipantInfo?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v28);
  OUTLINED_FUNCTION_5_27();
  v117 = v29;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v30);
  OUTLINED_FUNCTION_18_0();
  v113 = v31;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v32);
  OUTLINED_FUNCTION_18_0();
  v112 = v33;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v34);
  OUTLINED_FUNCTION_18_0();
  v133 = v35;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v36);
  OUTLINED_FUNCTION_18_0();
  v116 = v37;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v38);
  OUTLINED_FUNCTION_18_0();
  v115 = v39;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v40);
  v42 = (char *)v111 - v41;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v43);
  OUTLINED_FUNCTION_59_3();
  v45 = MEMORY[0x1E0C80A78](v44);
  v47 = (char *)v111 - v46;
  MEMORY[0x1E0C80A78](v45);
  OUTLINED_FUNCTION_62();
  v49 = v48;
  v50 = OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_15_56();
  MEMORY[0x1E0C80A78](v51);
  OUTLINED_FUNCTION_83_4();
  v118 = *v8;
  OUTLINED_FUNCTION_59(v52, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v4 = OUTLINED_FUNCTION_7_22();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v3 + 104))(v4, *MEMORY[0x1E0DEF740], v50);
  LOBYTE(v8) = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v4, v50);
  if ((v8 & 1) == 0)
  {
    __break(1u);
LABEL_38:
    swift_once();
LABEL_7:
    v111[1] = static OS_os_log.conversationKit;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v54 = OUTLINED_FUNCTION_15();
    *(_OWORD *)(v54 + 16) = xmmword_1BD645390;
    v111[2] = OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_participantIdentifiableTiles;
    v55 = *(_QWORD *)(v50 + OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_participantIdentifiableTiles);
    v56 = *(_QWORD *)(v55 + 16);
    v57 = MEMORY[0x1E0DEE9D8];
    v126 = v14;
    v119 = v54;
    if (v56)
    {
      v138 = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRetain();
      OUTLINED_FUNCTION_70_11();
      OUTLINED_FUNCTION_30_36();
      v111[0] = v55;
      v59 = (_QWORD *)(v55 + v58);
      v3 = *(_QWORD *)(v60 + 72);
      do
      {
        OUTLINED_FUNCTION_111((uint64_t)v59, v0);
        v61 = v127;
        outlined init with copy of ConversationControlsAppLaunchButtonType(v0, v127, type metadata accessor for ParticipantGridView.ParticipantTileInfo);
        v62 = v130;
        v63 = v131;
        v64 = v137;
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v131 + 32))(v130, v61, v137);
        _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
        v65 = dispatch thunk of CustomStringConvertible.description.getter();
        v67 = v66;
        (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v62, v64);
        OUTLINED_FUNCTION_95_2(v0);
        v57 = v138;
        if ((OUTLINED_FUNCTION_83_8() & 1) == 0)
        {
          OUTLINED_FUNCTION_55_19();
          v57 = v138;
        }
        v68 = *(_QWORD *)(v57 + 16);
        if (v68 >= *(_QWORD *)(v57 + 24) >> 1)
        {
          OUTLINED_FUNCTION_54_22();
          v57 = v138;
        }
        *(_QWORD *)(v57 + 16) = v68 + 1;
        v69 = v57 + 16 * v68;
        *(_QWORD *)(v69 + 32) = v65;
        *(_QWORD *)(v69 + 40) = v67;
        v59 = (_QWORD *)((char *)v59 + v3);
        --v56;
      }
      while (v56);
      swift_bridgeObjectRelease();
      v50 = v132;
      v49 = v133;
      OUTLINED_FUNCTION_118_5();
    }
    else
    {
      v59 = (_QWORD *)v54;
    }
    v138 = v57;
    v111[0] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [String]);
    v70 = String.init<A>(reflecting:)();
    v72 = v71;
    v73 = MEMORY[0x1E0DEA968];
    v59[7] = MEMORY[0x1E0DEA968];
    v127 = lazy protocol witness table accessor for type String and conformance String();
    v59[8] = v127;
    v59[4] = v70;
    v59[5] = v72;
    v74 = v120;
    v75 = *(_QWORD *)(v120 + 16);
    v76 = MEMORY[0x1E0DEE9D8];
    if (v75)
    {
      v138 = MEMORY[0x1E0DEE9D8];
      OUTLINED_FUNCTION_70_11();
      OUTLINED_FUNCTION_30_36();
      v59 = (_QWORD *)(v74 + v77);
      v3 = *(_QWORD *)(v78 + 72);
      v79 = MEMORY[0x1E0CB09F0];
      do
      {
        v80 = v128;
        OUTLINED_FUNCTION_111((uint64_t)v59, v128);
        _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], v79);
        v81 = dispatch thunk of CustomStringConvertible.description.getter();
        v83 = v82;
        OUTLINED_FUNCTION_95_2(v80);
        v76 = v138;
        if ((OUTLINED_FUNCTION_83_8() & 1) == 0)
        {
          OUTLINED_FUNCTION_55_19();
          v76 = v138;
        }
        v84 = *(_QWORD *)(v76 + 16);
        if (v84 >= *(_QWORD *)(v76 + 24) >> 1)
        {
          OUTLINED_FUNCTION_54_22();
          v76 = v138;
        }
        *(_QWORD *)(v76 + 16) = v84 + 1;
        v85 = v76 + 16 * v84;
        *(_QWORD *)(v85 + 32) = v81;
        *(_QWORD *)(v85 + 40) = v83;
        v59 = (_QWORD *)((char *)v59 + v3);
        --v75;
        v49 = v133;
      }
      while (v75);
      v50 = v132;
      OUTLINED_FUNCTION_118_5();
      v73 = MEMORY[0x1E0DEA968];
    }
    v138 = v76;
    v86 = String.init<A>(reflecting:)();
    v87 = v127;
    v59[12] = v73;
    v59[13] = v87;
    v59[9] = v86;
    v59[10] = v88;
    specialized >> prefix<A>(_:)(v123);
    v59[17] = v73;
    v59[18] = v87;
    v59[14] = v89;
    v59[15] = v90;
    specialized >> prefix<A>(_:)(v3);
    v59[22] = v73;
    v59[23] = v87;
    v59[19] = v91;
    v59[20] = v92;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    v93 = v50 + OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_fullScreenFocusedParticipantInfo;
    OUTLINED_FUNCTION_1();
    v94 = v115;
    OUTLINED_FUNCTION_63_4(v93, v115);
    OUTLINED_FUNCTION_102_3();
    v95 = OUTLINED_FUNCTION_14_17(v94);
    OUTLINED_FUNCTION_90_1(v94);
    v96 = v116;
    OUTLINED_FUNCTION_63_4(v3, v116);
    if (v95 == 1)
    {
      LODWORD(v133) = 1;
      v97 = OUTLINED_FUNCTION_14_17(v96);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v96, &demangling cache variable for type metadata for ParticipantGridView.FullScreenFocusedParticipantInfo?);
      outlined init with copy of FeatureEligibility?(v3, v49, &demangling cache variable for type metadata for ParticipantGridView.FullScreenFocusedParticipantInfo?);
      if (v97 != 1)
      {
        v98 = v49;
        v99 = v123;
        v100 = v121;
        goto LABEL_35;
      }
    }
    else
    {
      OUTLINED_FUNCTION_90_1(v96);
      OUTLINED_FUNCTION_63_4(v3, v49);
    }
    v101 = v112;
    OUTLINED_FUNCTION_63_4(v93, v112);
    v102 = OUTLINED_FUNCTION_14_17(v101);
    OUTLINED_FUNCTION_90_1(v101);
    v103 = v49;
    v104 = v113;
    outlined init with take of Any?(v103, v113, &demangling cache variable for type metadata for ParticipantGridView.FullScreenFocusedParticipantInfo?);
    v99 = v123;
    v100 = v121;
    if (v102 == 1)
    {
      LODWORD(v133) = 0;
    }
    else
    {
      OUTLINED_FUNCTION_19_7(v104);
      if (v105)
        v106 = 1;
      else
        v106 = 0;
      LODWORD(v133) = v106;
    }
    v98 = v104;
LABEL_35:
    OUTLINED_FUNCTION_25_0(v98);
    OUTLINED_FUNCTION_2_0();
    OUTLINED_FUNCTION_147_2(v100);
    swift_endAccess();
    OUTLINED_FUNCTION_2_0();
    OUTLINED_FUNCTION_147_2(v99);
    swift_endAccess();
    v107 = v117;
    OUTLINED_FUNCTION_61_10(v3, v117);
    ParticipantGridView.fullScreenFocusedParticipantInfo.setter(v107, &demangling cache variable for type metadata for ParticipantGridView.FullScreenFocusedParticipantInfo?, &OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_fullScreenFocusedParticipantInfo, (void (*)(_BYTE *))ParticipantGridView.fullScreenFocusedParticipantInfo.didset);
    v108 = (_BYTE *)(v50 + OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_layoutStyle);
    OUTLINED_FUNCTION_2_0();
    *v108 = v118;
    v109 = ParticipantGridView.updateParticipantTiles(with:fullScreenFocusedParticipantInfo:)(v120, (void (*)(char *, char *, uint64_t))v3);
    ParticipantGridView.participantIdentifiableTiles.setter(v109);
    v110 = swift_bridgeObjectRetain();
    ParticipantGridView.frames(for:mostProminentIdentifier:focusedIdentifier:fullScreenFocusedParticipantInfo:)(v110, v99, v100, v3);
  }
  OUTLINED_FUNCTION_41_6(v123, v49);
  OUTLINED_FUNCTION_41_6(v121, (uint64_t)v47);
  OUTLINED_FUNCTION_41_6(v119, v2);
  v3 = v122;
  outlined init with copy of FeatureEligibility?(v122, (uint64_t)v42, &demangling cache variable for type metadata for ParticipantGridView.FullScreenFocusedParticipantInfo?);
  if ((v126 & 1) != 0)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v42, &demangling cache variable for type metadata for ParticipantGridView.FullScreenFocusedParticipantInfo?);
    OUTLINED_FUNCTION_9_42(v2);
    OUTLINED_FUNCTION_9_42((uint64_t)v47);
    OUTLINED_FUNCTION_9_42(v49);
    v50 = v132;
    v49 = v133;
  }
  else
  {
    LOBYTE(v138) = v118;
    v50 = v132;
    v53 = ParticipantGridView.updateRequiredToTransition(to:layoutStyle:mostProminentParticipantIdentifier:focusedParticipantIdentifier:selectedParticipantIdentifier:fullScreenFocusedParticipantInfo:)(v120, (unsigned __int8 *)&v138, v49, (uint64_t)v47, v2, (uint64_t)v42);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v42, &demangling cache variable for type metadata for ParticipantGridView.FullScreenFocusedParticipantInfo?);
    OUTLINED_FUNCTION_42_23(v2);
    OUTLINED_FUNCTION_42_23((uint64_t)v47);
    OUTLINED_FUNCTION_42_23(v49);
    v49 = v133;
    if ((v53 & 1) == 0)
      goto LABEL_36;
  }
  if ((ParticipantGridView.shouldSkipTransition(for:)(v3) & 1) == 0)
  {
    if (one-time initialization token for conversationKit == -1)
      goto LABEL_7;
    goto LABEL_38;
  }
LABEL_36:
  OUTLINED_FUNCTION_52_1();
}

uint64_t ParticipantGridView.updateRequiredToTransition(to:layoutStyle:mostProminentParticipantIdentifier:focusedParticipantIdentifier:selectedParticipantIdentifier:fullScreenFocusedParticipantInfo:)(uint64_t a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  unsigned __int8 *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int EnumTagSinglePayload;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v59;
  void (*v60)(char *, uint64_t, uint64_t);
  char *v61;
  char v62;
  void (*v63)(char *, uint64_t);
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char v77;
  void (*v78)(char *, uint64_t);
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  int *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t (*v94)(uint64_t);
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t (*v99)(uint64_t);
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  int v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  const void *v109;
  uint64_t v110;
  uint64_t v111;
  double v112;
  double v113;
  double v114;
  double v115;
  char v116;
  uint64_t v117;
  double v118;
  double v119;
  double v120;
  double v121;
  BOOL v122;
  double v123;
  double v124;
  double v125;
  double v126;
  uint64_t v128;
  uint64_t v129;
  const void *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  int v142;
  uint64_t v143;
  uint64_t v144;
  int v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  int *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  _QWORD v177[42];
  _BYTE v178[40];
  _BYTE v179[48];

  v7 = v6;
  v175 = a6;
  v172 = a4;
  v173 = a3;
  v168 = type metadata accessor for Participant.State(0);
  v10 = MEMORY[0x1E0C80A78](v168);
  v160 = (uint64_t)&v146 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v164 = (char *)&v146 - v12;
  v156 = type metadata accessor for ParticipantGridView.ParticipantTileInfo(0);
  MEMORY[0x1E0C80A78](v156);
  v169 = (uint64_t)&v146 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParticipantGridView.IdentifiableParticipantTile?);
  MEMORY[0x1E0C80A78](v14);
  v162 = (uint64_t)&v146 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v163 = type metadata accessor for ParticipantGridView.IdentifiableParticipantTile(0);
  v158 = *(_QWORD *)(v163 - 8);
  v16 = MEMORY[0x1E0C80A78](v163);
  v165 = (uint64_t)&v146 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v161 = (uint64_t)&v146 - v18;
  v157 = type metadata accessor for Participant(0);
  v149 = *(_QWORD *)(v157 - 8);
  MEMORY[0x1E0C80A78](v157);
  v166 = (char *)&v146 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v154 = (int *)type metadata accessor for ParticipantGridView.FullScreenFocusedParticipantInfo(0);
  MEMORY[0x1E0C80A78](v154);
  v150 = (uint64_t)&v146 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v153 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantGridView.FullScreenFocusedParticipantInfo?, ParticipantGridView.FullScreenFocusedParticipantInfo?));
  MEMORY[0x1E0C80A78](v153);
  v155 = (uint64_t)&v146 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParticipantGridView.FullScreenFocusedParticipantInfo?);
  v23 = MEMORY[0x1E0C80A78](v22);
  v152 = (uint64_t)&v146 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v174 = (uint64_t)&v146 - v25;
  v176 = type metadata accessor for UUID();
  v171 = *(_QWORD *)(v176 - 8);
  MEMORY[0x1E0C80A78](v176);
  v170 = (char *)&v146 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
  v28 = MEMORY[0x1E0C80A78](v27);
  v167 = (uint64_t)&v146 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v28);
  v31 = (char *)&v146 - v30;
  v32 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  v33 = MEMORY[0x1E0C80A78](v32);
  v159 = (uint64_t)&v146 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = MEMORY[0x1E0C80A78](v33);
  v37 = (char *)&v146 - v36;
  v38 = MEMORY[0x1E0C80A78](v35);
  v40 = (char *)&v146 - v39;
  MEMORY[0x1E0C80A78](v38);
  v42 = (char *)&v146 - v41;
  v43 = *a2;
  ParticipantGridView.participantIdentifiers.getter();
  v45 = *(_QWORD *)(v44 + 16);
  swift_bridgeObjectRelease();
  v151 = a1;
  if (v45 != *(_QWORD *)(a1 + 16))
  {
    outlined init with copy of FeatureEligibility?(v172, (uint64_t)v42, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    goto LABEL_7;
  }
  v148 = v45;
  v46 = (unsigned __int8 *)(v7 + OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_layoutStyle);
  swift_beginAccess();
  LODWORD(v46) = *v46;
  outlined init with copy of FeatureEligibility?(v172, (uint64_t)v42, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  if (v43 != (_DWORD)v46)
  {
LABEL_7:
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v42, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    v52 = v173;
LABEL_8:
    outlined init with copy of FeatureEligibility?(v52, (uint64_t)v37, (uint64_t *)&demangling cache variable for type metadata for UUID?);
LABEL_9:
    v53 = (uint64_t *)&demangling cache variable for type metadata for UUID?;
    v54 = (uint64_t)v37;
LABEL_10:
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v54, v53);
    v55 = v174;
    outlined init with copy of FeatureEligibility?(v175, v174, &demangling cache variable for type metadata for ParticipantGridView.FullScreenFocusedParticipantInfo?);
LABEL_11:
    v56 = &demangling cache variable for type metadata for ParticipantGridView.FullScreenFocusedParticipantInfo?;
    v57 = v55;
    goto LABEL_12;
  }
  v47 = v7;
  v48 = v7 + OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_currentlyFocusedParticipantIdentifier;
  swift_beginAccess();
  v49 = (uint64_t)&v31[*(int *)(v27 + 48)];
  outlined init with copy of FeatureEligibility?((uint64_t)v42, (uint64_t)v31, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  outlined init with copy of FeatureEligibility?(v48, v49, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  v50 = v176;
  if (__swift_getEnumTagSinglePayload((uint64_t)v31, 1, v176) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v42, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v49, 1, v50);
    v52 = v173;
    if (EnumTagSinglePayload == 1)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v31, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      outlined init with copy of FeatureEligibility?(v52, (uint64_t)v37, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      goto LABEL_18;
    }
    goto LABEL_16;
  }
  outlined init with copy of FeatureEligibility?((uint64_t)v31, (uint64_t)v40, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  if (__swift_getEnumTagSinglePayload(v49, 1, v50) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v42, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    (*(void (**)(char *, uint64_t))(v171 + 8))(v40, v50);
    v52 = v173;
LABEL_16:
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v31, (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
    goto LABEL_8;
  }
  v59 = v171;
  v60 = *(void (**)(char *, uint64_t, uint64_t))(v171 + 32);
  v147 = v47;
  v61 = v170;
  v60(v170, v49, v50);
  _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
  v62 = dispatch thunk of static Equatable.== infix(_:_:)();
  v63 = *(void (**)(char *, uint64_t))(v59 + 8);
  v64 = v61;
  v47 = v147;
  v63(v64, v176);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v42, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  v63(v40, v176);
  v50 = v176;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v31, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  outlined init with copy of FeatureEligibility?(v173, (uint64_t)v37, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  if ((v62 & 1) == 0)
    goto LABEL_9;
LABEL_18:
  v65 = v47 + OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_mostProminentParticipantIdentifier;
  swift_beginAccess();
  v66 = v167;
  v67 = v167 + *(int *)(v27 + 48);
  outlined init with copy of FeatureEligibility?((uint64_t)v37, v167, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  outlined init with copy of FeatureEligibility?(v65, v67, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  if (__swift_getEnumTagSinglePayload(v66, 1, v50) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v37, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    v68 = __swift_getEnumTagSinglePayload(v67, 1, v50);
    v70 = v165;
    v69 = (uint64_t)v166;
    if (v68 == 1)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v66, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      v55 = v174;
      outlined init with copy of FeatureEligibility?(v175, v174, &demangling cache variable for type metadata for ParticipantGridView.FullScreenFocusedParticipantInfo?);
      goto LABEL_25;
    }
    goto LABEL_23;
  }
  v71 = v159;
  outlined init with copy of FeatureEligibility?(v66, v159, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  v72 = __swift_getEnumTagSinglePayload(v67, 1, v50);
  v73 = v50;
  v70 = v165;
  if (v72 == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v37, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    (*(void (**)(uint64_t, uint64_t))(v171 + 8))(v71, v73);
LABEL_23:
    v53 = (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?);
    v54 = v66;
    goto LABEL_10;
  }
  v74 = v171;
  v75 = v47;
  v76 = v170;
  (*(void (**)(char *, uint64_t, uint64_t))(v171 + 32))(v170, v67, v73);
  _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
  v77 = dispatch thunk of static Equatable.== infix(_:_:)();
  v78 = *(void (**)(char *, uint64_t))(v74 + 8);
  v79 = v76;
  v47 = v75;
  v78(v79, v73);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v37, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  v78((char *)v71, v73);
  v69 = (uint64_t)v166;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v167, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  v55 = v174;
  outlined init with copy of FeatureEligibility?(v175, v174, &demangling cache variable for type metadata for ParticipantGridView.FullScreenFocusedParticipantInfo?);
  if ((v77 & 1) == 0)
    goto LABEL_11;
LABEL_25:
  v80 = v47;
  v81 = v47 + OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_fullScreenFocusedParticipantInfo;
  swift_beginAccess();
  v82 = v155;
  v83 = v155 + *(int *)(v153 + 48);
  outlined init with copy of FeatureEligibility?(v55, v155, &demangling cache variable for type metadata for ParticipantGridView.FullScreenFocusedParticipantInfo?);
  outlined init with copy of FeatureEligibility?(v81, v83, &demangling cache variable for type metadata for ParticipantGridView.FullScreenFocusedParticipantInfo?);
  v84 = v154;
  if (__swift_getEnumTagSinglePayload(v82, 1, (uint64_t)v154) != 1)
  {
    v138 = v152;
    outlined init with copy of FeatureEligibility?(v82, v152, &demangling cache variable for type metadata for ParticipantGridView.FullScreenFocusedParticipantInfo?);
    if (__swift_getEnumTagSinglePayload(v83, 1, (uint64_t)v84) == 1)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v55, &demangling cache variable for type metadata for ParticipantGridView.FullScreenFocusedParticipantInfo?);
      outlined destroy of RecentsCallItem(v138, type metadata accessor for ParticipantGridView.FullScreenFocusedParticipantInfo);
      goto LABEL_79;
    }
    v139 = v150;
    outlined init with take of StagedCollaboration(v83, v150, type metadata accessor for ParticipantGridView.FullScreenFocusedParticipantInfo);
    if ((static UUID.== infix(_:_:)() & 1) != 0)
    {
      outlined init with take of AspectRatio(v138 + v84[5], (uint64_t)v178);
      outlined init with take of AspectRatio(v139 + v84[5], (uint64_t)v179);
      if (static AspectRatio.== infix(_:_:)((uint64_t)v178, (uint64_t)v179)
        && *(_QWORD *)(v138 + v84[6]) == *(_QWORD *)(v139 + v84[6]))
      {
        v140 = v84[7];
        v141 = v139;
        v142 = *(unsigned __int8 *)(v138 + v140);
        v143 = v80;
        v144 = v82;
        v145 = *(unsigned __int8 *)(v141 + v140);
        outlined destroy of RecentsCallItem(v141, type metadata accessor for ParticipantGridView.FullScreenFocusedParticipantInfo);
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v55, &demangling cache variable for type metadata for ParticipantGridView.FullScreenFocusedParticipantInfo?);
        outlined destroy of RecentsCallItem(v138, type metadata accessor for ParticipantGridView.FullScreenFocusedParticipantInfo);
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v144, &demangling cache variable for type metadata for ParticipantGridView.FullScreenFocusedParticipantInfo?);
        v122 = v142 == v145;
        v85 = v143;
        if (!v122)
          return 1;
        goto LABEL_28;
      }
    }
    outlined destroy of RecentsCallItem(v139, type metadata accessor for ParticipantGridView.FullScreenFocusedParticipantInfo);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v55, &demangling cache variable for type metadata for ParticipantGridView.FullScreenFocusedParticipantInfo?);
    outlined destroy of RecentsCallItem(v138, type metadata accessor for ParticipantGridView.FullScreenFocusedParticipantInfo);
    v57 = v82;
    v56 = &demangling cache variable for type metadata for ParticipantGridView.FullScreenFocusedParticipantInfo?;
LABEL_12:
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v57, v56);
    return 1;
  }
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v55, &demangling cache variable for type metadata for ParticipantGridView.FullScreenFocusedParticipantInfo?);
  if (__swift_getEnumTagSinglePayload(v83, 1, (uint64_t)v84) != 1)
  {
LABEL_79:
    v56 = &demangling cache variable for type metadata for (ParticipantGridView.FullScreenFocusedParticipantInfo?, ParticipantGridView.FullScreenFocusedParticipantInfo?);
    v57 = v82;
    goto LABEL_12;
  }
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v82, &demangling cache variable for type metadata for ParticipantGridView.FullScreenFocusedParticipantInfo?);
  v85 = v80;
LABEL_28:
  v86 = v148;
  if (!v148)
    return 0;
  v172 = OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_participantIdentifiableTiles;
  v167 = v151 + ((*(unsigned __int8 *)(v149 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v149 + 80));
  v165 = *(_QWORD *)(v149 + 72);
  swift_bridgeObjectRetain();
  v87 = 0;
  v147 = v85;
  while (1)
  {
    outlined init with copy of ConversationControlsAppLaunchButtonType(v167 + v165 * v87, v69, type metadata accessor for Participant);
    v88 = *(_QWORD *)(v85 + v172);
    v89 = *(_QWORD *)(v88 + 16);
    if (v89)
    {
      v90 = v158;
      v91 = v69 + *(int *)(v157 + 20);
      v174 = v87;
      v175 = v91;
      v92 = v88 + ((*(unsigned __int8 *)(v158 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v158 + 80));
      v173 = v88;
      swift_bridgeObjectRetain();
      v93 = *(_QWORD *)(v90 + 72);
      v94 = type metadata accessor for ParticipantGridView.IdentifiableParticipantTile;
      while (1)
      {
        outlined init with copy of ConversationControlsAppLaunchButtonType(v92, v70, v94);
        v95 = v70;
        v96 = v70;
        v97 = v169;
        outlined init with copy of ConversationControlsAppLaunchButtonType(v95, v169, type metadata accessor for ParticipantGridView.ParticipantTileInfo);
        v98 = v171;
        v99 = v94;
        v100 = v170;
        v101 = v176;
        (*(void (**)(char *, uint64_t, uint64_t))(v171 + 32))(v170, v97, v176);
        LOBYTE(v97) = static UUID.== infix(_:_:)();
        (*(void (**)(char *, uint64_t))(v98 + 8))(v100, v101);
        if ((v97 & 1) != 0)
          break;
        outlined destroy of RecentsCallItem(v96, v99);
        v92 += v93;
        --v89;
        v70 = v96;
        v94 = v99;
        if (!v89)
        {
          v102 = 1;
          v103 = v162;
          v69 = (uint64_t)v166;
          v86 = v148;
          v87 = v174;
          goto LABEL_37;
        }
      }
      v103 = v162;
      outlined init with take of StagedCollaboration(v96, v162, v99);
      v102 = 0;
      v69 = (uint64_t)v166;
      v70 = v96;
      v86 = v148;
      v87 = v174;
      v94 = v99;
    }
    else
    {
      swift_bridgeObjectRetain();
      v102 = 1;
      v103 = v162;
      v94 = type metadata accessor for ParticipantGridView.IdentifiableParticipantTile;
    }
LABEL_37:
    v104 = v163;
    __swift_storeEnumTagSinglePayload(v103, v102, 1, v163);
    swift_bridgeObjectRelease();
    v105 = __swift_getEnumTagSinglePayload(v103, 1, v104);
    v106 = (uint64_t)v164;
    if (v105 == 1)
    {
      swift_bridgeObjectRelease();
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v103, &demangling cache variable for type metadata for ParticipantGridView.IdentifiableParticipantTile?);
      goto LABEL_90;
    }
    v107 = v161;
    outlined init with take of StagedCollaboration(v103, v161, v94);
    outlined init with copy of ConversationControlsAppLaunchButtonType(v69, v106, type metadata accessor for Participant.State);
    if (swift_getEnumCaseMultiPayload() != 4)
    {
      outlined destroy of RecentsCallItem(v106, type metadata accessor for Participant.State);
      goto LABEL_67;
    }
    v108 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
    v109 = (const void *)(v106 + *(int *)(v108 + 48));
    outlined consume of Participant.CopresenceInfo?(*(_QWORD *)(v106 + *(int *)(v108 + 64)), *(_QWORD *)(v106 + *(int *)(v108 + 64) + 8));
    memcpy(v177, v109, sizeof(v177));
    v110 = type metadata accessor for Date();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v110 - 8) + 8))(v106, v110);
    v111 = v177[2];
    v112 = *(double *)&v177[7];
    v113 = *(double *)&v177[8];
    v114 = *(double *)&v177[9];
    v115 = *(double *)&v177[10];
    v116 = v177[11];
    swift_bridgeObjectRetain();
    outlined destroy of Participant.MediaInfo((uint64_t)v177);
    if (v111)
    {
      swift_bridgeObjectRelease();
      v117 = v107 + *(int *)(v156 + 20);
      v118 = 1.0;
      v119 = 1.0;
      if ((*(_BYTE *)(v117 + 32) & 1) == 0)
      {
        v119 = *(double *)v117;
        v118 = *(double *)(v117 + 8);
      }
      v120 = (v116 & 1) != 0 ? 1.0 : v113;
      v121 = (v116 & 1) != 0 ? 1.0 : v112;
      v122 = v119 == v121 && v118 == v120;
      if (!v122)
        break;
      v123 = *(double *)(v117 + 16);
      v124 = *(double *)(v117 + 24);
      if (*(_BYTE *)(v117 + 32))
      {
        v124 = 1.0;
        v123 = 1.0;
      }
      v125 = (v116 & 1) != 0 ? 1.0 : v115;
      v126 = (v116 & 1) != 0 ? 1.0 : v114;
      if (v123 != v126 || v124 != v125)
        break;
    }
LABEL_67:
    v128 = v160;
    outlined init with copy of ConversationControlsAppLaunchButtonType(v69, v160, type metadata accessor for Participant.State);
    if (swift_getEnumCaseMultiPayload() != 4)
    {
      outlined destroy of RecentsCallItem(v128, type metadata accessor for Participant.State);
LABEL_73:
      outlined destroy of RecentsCallItem(v107, type metadata accessor for ParticipantGridView.IdentifiableParticipantTile);
      goto LABEL_74;
    }
    v129 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
    v130 = (const void *)(v128 + *(int *)(v129 + 48));
    outlined consume of Participant.CopresenceInfo?(*(_QWORD *)(v128 + *(int *)(v129 + 64)), *(_QWORD *)(v128 + *(int *)(v129 + 64) + 8));
    memcpy(v177, v130, sizeof(v177));
    v131 = type metadata accessor for Date();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v131 - 8) + 8))(v128, v131);
    v132 = v177[2];
    v133 = v177[5];
    swift_bridgeObjectRetain();
    outlined destroy of Participant.MediaInfo((uint64_t)v177);
    if (!v132)
      goto LABEL_73;
    swift_bridgeObjectRelease();
    v134 = v107 + *(int *)(v156 + 24);
    v135 = *(_QWORD *)v134;
    v136 = v107;
    v137 = *(_BYTE *)(v134 + 8);
    outlined destroy of RecentsCallItem(v136, type metadata accessor for ParticipantGridView.IdentifiableParticipantTile);
    if ((v137 & 1) != 0 || v135 != v133)
      goto LABEL_89;
LABEL_74:
    ++v87;
    outlined destroy of RecentsCallItem(v69, type metadata accessor for Participant);
    v85 = v147;
    if (v87 == v86)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  outlined destroy of RecentsCallItem(v107, type metadata accessor for ParticipantGridView.IdentifiableParticipantTile);
LABEL_89:
  swift_bridgeObjectRelease();
LABEL_90:
  outlined destroy of RecentsCallItem(v69, type metadata accessor for Participant);
  return 1;
}

void ParticipantGridView.frames(for:mostProminentIdentifier:focusedIdentifier:fullScreenFocusedParticipantInfo:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  Swift::Int v30;
  _QWORD v31[8];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  _QWORD v39[3];

  v33 = a4;
  v34 = a3;
  v31[1] = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  MEMORY[0x1E0C80A78](v5);
  v35 = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for UUID();
  v31[6] = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v31[5] = (char *)v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParticipantGridView.FullScreenFocusedParticipantInfo?);
  MEMORY[0x1E0C80A78](v9);
  v31[3] = (char *)v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = type metadata accessor for ParticipantGridView.FullScreenFocusedParticipantInfo(0);
  MEMORY[0x1E0C80A78](v32);
  v31[4] = (char *)v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ParticipantGridView.IdentifiableParticipantTile(0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31[7] = 0;
  v16 = type metadata accessor for ParticipantGridView.ParticipantTileInfo(0);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x1E0DEE9D8];
  v39[1] = MEMORY[0x1E0DEE9D8];
  v21 = *(_QWORD *)(a1 + 16);
  v36 = a1;
  if (v21)
  {
    v31[2] = v7;
    v39[0] = MEMORY[0x1E0DEE9D8];
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, v21, 0);
    v22 = a1 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    v23 = *(_QWORD *)(v13 + 72);
    v20 = v39[0];
    v38 = v23;
    do
    {
      outlined init with copy of ConversationControlsAppLaunchButtonType(v22, (uint64_t)v15, type metadata accessor for ParticipantGridView.IdentifiableParticipantTile);
      outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v15, (uint64_t)v19, type metadata accessor for ParticipantGridView.ParticipantTileInfo);
      outlined destroy of RecentsCallItem((uint64_t)v15, type metadata accessor for ParticipantGridView.IdentifiableParticipantTile);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(_QWORD *)(v20 + 16) + 1, 1);
        v23 = v38;
        v20 = v39[0];
      }
      v25 = *(_QWORD *)(v20 + 16);
      v24 = *(_QWORD *)(v20 + 24);
      if (v25 >= v24 >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v24 > 1, v25 + 1, 1);
        v23 = v38;
        v20 = v39[0];
      }
      *(_QWORD *)(v20 + 16) = v25 + 1;
      outlined init with take of StagedCollaboration((uint64_t)v19, v20+ ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80))+ *(_QWORD *)(v17 + 72) * v25, type metadata accessor for ParticipantGridView.ParticipantTileInfo);
      v22 += v23;
      --v21;
    }
    while (v21);
  }
  v26 = static Platform.current.getter();
  v27 = v37;
  v29 = v32;
  v28 = v33;
  if (v26 == 2)
  {
    ParticipantGridView.layoutIdiom.getter(v39);
    if (LOBYTE(v39[0]) != 2 && (v39[0] & 1) == 0)
    {
      objc_msgSend(v27, sel_bounds);
      ParticipantGridView.mediaPipIsVisible.getter();
    }
  }
  v30 = *(_QWORD *)(v20 + 16);
  __swift_getEnumTagSinglePayload(v28, 1, v29);
  ParticipantGridView.mediaPipDodgingFrame(for:isFullScreen:)(v30);
}

id ParticipantGridView.updateStartingFrame(for:with:)(void *a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  double MidX;
  double MidY;
  double v12;
  CGRect v14;
  CGRect v15;
  CGRect v16;

  MidX = CGRectGetMidX(*(CGRect *)&a2);
  v14.origin.x = a2;
  v14.origin.y = a3;
  v14.size.width = a4;
  v14.size.height = a5;
  MidY = CGRectGetMidY(v14);
  v15.origin.x = a2;
  v15.origin.y = a3;
  v15.size.width = a4;
  v15.size.height = a5;
  v12 = floor(CGRectGetWidth(v15) * 0.75);
  v16.origin.x = a2;
  v16.origin.y = a3;
  v16.size.width = a4;
  v16.size.height = a5;
  objc_msgSend(a1, sel_setFrame_, MidX - v12 * 0.5, MidY - floor(CGRectGetHeight(v16) * 0.75) * 0.5, v12);
  objc_msgSend(a1, sel_setAlpha_, 0.0);
  return objc_msgSend(a1, sel_setNeedsLayout);
}

uint64_t closure #3 in ParticipantGridView.transition(to:mostProminentParticipantIdentifier:focusedParticipantIdentifier:selectedParticipantIdentifier:fullScreenFocusedParticipantInfo:layoutStyle:animationStyle:forced:)(char *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;

  v4 = *(_QWORD *)&a1[OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_participantIdentifiableTiles];
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a1;
  swift_bridgeObjectRetain();
  v6 = a1;
  ParticipantGridView.updateParticipantTiles(_:with:block:)(v4, a2, (void (*)(char *))partial apply for closure #1 in closure #3 in ParticipantGridView.transition(to:mostProminentParticipantIdentifier:focusedParticipantIdentifier:selectedParticipantIdentifier:fullScreenFocusedParticipantInfo:layoutStyle:animationStyle:forced:), v5);
  swift_bridgeObjectRelease();
  return swift_release();
}

void closure #1 in closure #3 in ParticipantGridView.transition(to:mostProminentParticipantIdentifier:focusedParticipantIdentifier:selectedParticipantIdentifier:fullScreenFocusedParticipantInfo:layoutStyle:animationStyle:forced:)(uint64_t a1, char *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE *v42;
  uint64_t v43;
  _BYTE *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  int EnumTagSinglePayload;
  _QWORD *v50;
  _BYTE *v51;
  id v52;
  _BYTE *v53;
  int v54;
  void (*v55)(_BYTE *, uint64_t);
  uint64_t v56;
  uint64_t v57;
  _BYTE *v58;
  uint64_t v59;
  _BYTE *v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  _BYTE *v64;
  _BYTE *v65;
  char v66;
  char v67;
  _BYTE *v68;
  void (*v69)(_BYTE *, uint64_t);
  _BYTE *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _BYTE *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _BYTE *v81;
  _BYTE *v82;
  char v83;
  void (*v84)(_BYTE *, uint64_t);
  _BYTE *v85;
  id v86;
  uint64_t v87;
  _BYTE *v88;
  int v89;
  _BYTE *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _BYTE *v94;
  _BYTE *v95;
  uint64_t v96;
  _BYTE *v97;
  _BYTE *v98;
  char v99;
  char v100;
  void (*v101)(_BYTE *, uint64_t);
  uint64_t v102;
  _BYTE *v103;
  Swift::Bool v104;
  _BYTE v105[4];
  int v106;
  _BYTE *v107;
  uint64_t v108;
  _BYTE *v109;
  _BYTE *v110;
  uint64_t v111;
  _BYTE *v112;
  _BYTE *v113;
  _BYTE *v114;
  _BYTE *v115;
  _BYTE *v116;
  _BYTE *v117;
  uint64_t v118;
  _BYTE *v119;
  uint64_t v120;
  _BYTE *v121;
  void *v122;
  uint64_t v123;
  uint64_t v124;
  _BYTE *v125;
  _BYTE *v126;
  uint64_t v127;
  void (*v128)(void);

  v122 = a2;
  v120 = a1;
  v2 = type metadata accessor for ParticipantGridView.IdentifiableParticipantTile(0);
  v111 = *(_QWORD *)(v2 - 8);
  v3 = MEMORY[0x1E0C80A78](v2);
  v126 = &v105[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v3);
  v117 = &v105[-v5];
  v6 = type metadata accessor for UUID();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v116 = &v105[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
  v10 = MEMORY[0x1E0C80A78](v9);
  v114 = &v105[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = &v105[-v13];
  v15 = MEMORY[0x1E0C80A78](v12);
  v109 = &v105[-v16];
  MEMORY[0x1E0C80A78](v15);
  v18 = &v105[-v17];
  v19 = type metadata accessor for ParticipantGridView.ParticipantTileInfo(0);
  MEMORY[0x1E0C80A78](v19);
  v21 = &v105[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  v23 = MEMORY[0x1E0C80A78](v22);
  v113 = &v105[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v25 = MEMORY[0x1E0C80A78](v23);
  v115 = &v105[-v26];
  v27 = MEMORY[0x1E0C80A78](v25);
  v119 = &v105[-v28];
  v29 = MEMORY[0x1E0C80A78](v27);
  v121 = &v105[-v30];
  v31 = MEMORY[0x1E0C80A78](v29);
  v33 = &v105[-v32];
  v34 = MEMORY[0x1E0C80A78](v31);
  v112 = &v105[-v35];
  v36 = MEMORY[0x1E0C80A78](v34);
  v107 = &v105[-v37];
  v38 = MEMORY[0x1E0C80A78](v36);
  v110 = &v105[-v39];
  v40 = MEMORY[0x1E0C80A78](v38);
  v42 = &v105[-v41];
  MEMORY[0x1E0C80A78](v40);
  v44 = &v105[-v43];
  v118 = v2;
  v45 = *(int *)(v2 + 20);
  v46 = v120;
  v108 = v45;
  objc_msgSend(*(id *)(v120 + v45), sel_setAlpha_, 1.0);
  outlined init with copy of ConversationControlsAppLaunchButtonType(v46, (uint64_t)v21, type metadata accessor for ParticipantGridView.ParticipantTileInfo);
  v124 = v7;
  v125 = v21;
  v128 = *(void (**)(void))(v7 + 32);
  ((void (*)(_BYTE *, _BYTE *, uint64_t))v128)(v44, v21, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)v44, 0, 1, v6);
  v47 = (char *)v122 + OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_mostProminentParticipantIdentifier;
  swift_beginAccess();
  v123 = v9;
  v48 = (uint64_t)&v18[*(int *)(v9 + 48)];
  outlined init with copy of FeatureEligibility?((uint64_t)v44, (uint64_t)v18, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  outlined init with copy of FeatureEligibility?((uint64_t)v47, v48, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v18, 1, v6);
  v50 = (_QWORD *)&full type metadata for LinkShareItemHTMLTextGenerator;
  v127 = v6;
  if (EnumTagSinglePayload == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v44, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    if (__swift_getEnumTagSinglePayload(v48, 1, v6) == 1)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v18, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      v51 = v117;
      outlined init with copy of ConversationControlsAppLaunchButtonType(v120, (uint64_t)v117, type metadata accessor for ParticipantGridView.IdentifiableParticipantTile);
      v52 = v122;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  outlined init with copy of FeatureEligibility?((uint64_t)v18, (uint64_t)v42, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  if (__swift_getEnumTagSinglePayload(v48, 1, v6) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v44, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    (*(void (**)(_BYTE *, uint64_t))(v124 + 8))(v42, v6);
LABEL_6:
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v18, (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
    v51 = v117;
    outlined init with copy of ConversationControlsAppLaunchButtonType(v120, (uint64_t)v117, type metadata accessor for ParticipantGridView.IdentifiableParticipantTile);
    v52 = v122;
LABEL_11:
    outlined destroy of RecentsCallItem((uint64_t)v51, type metadata accessor for ParticipantGridView.IdentifiableParticipantTile);
    v63 = v123;
    goto LABEL_17;
  }
  v53 = v116;
  ((void (*)(_BYTE *, uint64_t, uint64_t))v128)(v116, v48, v6);
  _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
  v54 = dispatch thunk of static Equatable.== infix(_:_:)();
  v6 = v127;
  v106 = v54;
  v55 = *(void (**)(_BYTE *, uint64_t))(v124 + 8);
  v55(v53, v127);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v44, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  v55(v42, v6);
  v56 = v120;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v18, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  v51 = v117;
  outlined init with copy of ConversationControlsAppLaunchButtonType(v56, (uint64_t)v117, type metadata accessor for ParticipantGridView.IdentifiableParticipantTile);
  v52 = v122;
  if ((v106 & 1) == 0)
    goto LABEL_11;
LABEL_8:
  v57 = (uint64_t)v125;
  outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v51, (uint64_t)v125, type metadata accessor for ParticipantGridView.ParticipantTileInfo);
  v58 = v110;
  ((void (*)(_BYTE *, uint64_t, uint64_t))v128)(v110, v57, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)v58, 0, 1, v6);
  v59 = (uint64_t)v52 + OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_currentlyFocusedParticipantIdentifier;
  swift_beginAccess();
  v60 = v109;
  v61 = (uint64_t)&v109[*(int *)(v123 + 48)];
  outlined init with copy of FeatureEligibility?((uint64_t)v58, (uint64_t)v109, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  outlined init with copy of FeatureEligibility?(v59, v61, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v60, 1, v6) != 1)
  {
    v64 = v107;
    outlined init with copy of FeatureEligibility?((uint64_t)v60, (uint64_t)v107, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    if (__swift_getEnumTagSinglePayload(v61, 1, v6) != 1)
    {
      v65 = v116;
      ((void (*)(_BYTE *, uint64_t, uint64_t))v128)(v116, v61, v6);
      _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
      v66 = dispatch thunk of static Equatable.== infix(_:_:)();
      v6 = v127;
      v67 = v66;
      v68 = v64;
      v69 = *(void (**)(_BYTE *, uint64_t))(v124 + 8);
      v69(v65, v127);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v110, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      outlined destroy of RecentsCallItem((uint64_t)v51, type metadata accessor for ParticipantGridView.IdentifiableParticipantTile);
      v69(v68, v6);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v60, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      v63 = v123;
      v50 = &full type metadata for LinkShareItemHTMLTextGenerator;
      if ((v67 & 1) != 0)
        goto LABEL_17;
LABEL_16:
      objc_msgSend(v52, sel_bringSubviewToFront_, *(_QWORD *)(v120 + v108));
      objc_msgSend(v52, sel_bringSubviewToFront_, *(_QWORD *)((char *)v52 + v50[207]));
      goto LABEL_17;
    }
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v110, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    outlined destroy of RecentsCallItem((uint64_t)v51, type metadata accessor for ParticipantGridView.IdentifiableParticipantTile);
    (*(void (**)(_BYTE *, uint64_t))(v124 + 8))(v64, v6);
    v63 = v123;
LABEL_14:
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v60, (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
    v50 = (_QWORD *)&full type metadata for LinkShareItemHTMLTextGenerator;
    goto LABEL_16;
  }
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v58, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  outlined destroy of RecentsCallItem((uint64_t)v51, type metadata accessor for ParticipantGridView.IdentifiableParticipantTile);
  v62 = __swift_getEnumTagSinglePayload(v61, 1, v6);
  v63 = v123;
  if (v62 != 1)
    goto LABEL_14;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v60, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  v50 = (_QWORD *)&full type metadata for LinkShareItemHTMLTextGenerator;
LABEL_17:
  v110 = (_BYTE *)OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_participantIdentifiableTiles;
  v70 = *(_BYTE **)((char *)v52 + OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_participantIdentifiableTiles);
  v71 = *((_QWORD *)v70 + 2);
  if (!v71)
    goto LABEL_29;
  v72 = (uint64_t)v52 + OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_currentlyFocusedParticipantIdentifier;
  v117 = (_BYTE *)v50[207];
  v73 = v111;
  v74 = (uint64_t)&v70[(*(unsigned __int8 *)(v111 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v111 + 80)];
  v109 = v70;
  swift_bridgeObjectRetain();
  swift_beginAccess();
  v75 = *(_QWORD *)(v73 + 72);
  v76 = v126;
  v120 = v75;
  do
  {
    outlined init with copy of ConversationControlsAppLaunchButtonType(v74, (uint64_t)v76, type metadata accessor for ParticipantGridView.IdentifiableParticipantTile);
    v77 = (uint64_t)v76;
    v78 = (uint64_t)v125;
    outlined init with copy of ConversationControlsAppLaunchButtonType(v77, (uint64_t)v125, type metadata accessor for ParticipantGridView.ParticipantTileInfo);
    ((void (*)(_BYTE *, uint64_t, uint64_t))v128)(v33, v78, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v33, 0, 1, v6);
    v79 = (uint64_t)&v14[*(int *)(v63 + 48)];
    outlined init with copy of FeatureEligibility?((uint64_t)v33, (uint64_t)v14, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    outlined init with copy of FeatureEligibility?(v72, v79, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v6) == 1)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v33, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      if (__swift_getEnumTagSinglePayload(v79, 1, v6) != 1)
        goto LABEL_24;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v14, (uint64_t *)&demangling cache variable for type metadata for UUID?);
LABEL_26:
      v86 = v122;
      objc_msgSend(v122, sel_bringSubviewToFront_, *(_QWORD *)&v117[(_QWORD)v122]);
      objc_msgSend(v86, sel_bringSubviewToFront_, *(_QWORD *)&v126[*(int *)(v118 + 20)]);
      goto LABEL_27;
    }
    v80 = v72;
    v81 = v121;
    outlined init with copy of FeatureEligibility?((uint64_t)v14, (uint64_t)v121, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    if (__swift_getEnumTagSinglePayload(v79, 1, v6) == 1)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v33, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      (*(void (**)(_BYTE *, uint64_t))(v124 + 8))(v81, v6);
      v72 = v80;
      v75 = v120;
LABEL_24:
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v14, (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
      goto LABEL_27;
    }
    v82 = v116;
    ((void (*)(_BYTE *, uint64_t, uint64_t))v128)(v116, v79, v6);
    _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
    v83 = dispatch thunk of static Equatable.== infix(_:_:)();
    v84 = *(void (**)(_BYTE *, uint64_t))(v124 + 8);
    v85 = v82;
    v63 = v123;
    v84(v85, v127);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v33, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    v84(v81, v127);
    v6 = v127;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v14, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    v72 = v80;
    v75 = v120;
    if ((v83 & 1) != 0)
      goto LABEL_26;
LABEL_27:
    v76 = v126;
    outlined destroy of RecentsCallItem((uint64_t)v126, type metadata accessor for ParticipantGridView.IdentifiableParticipantTile);
    v74 += v75;
    --v71;
  }
  while (v71);
  swift_bridgeObjectRelease();
  v50 = (_QWORD *)&full type metadata for LinkShareItemHTMLTextGenerator;
  v52 = v122;
LABEL_29:
  v87 = (uint64_t)v52 + OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_currentlyFocusedParticipantIdentifier;
  swift_beginAccess();
  v88 = v112;
  outlined init with copy of FeatureEligibility?(v87, (uint64_t)v112, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  v89 = __swift_getEnumTagSinglePayload((uint64_t)v88, 1, v6);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v88, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  if (v89 == 1)
    goto LABEL_43;
  v90 = *(_BYTE **)&v110[(_QWORD)v52];
  v91 = *((_QWORD *)v90 + 2);
  if (!v91)
  {
LABEL_41:
    objc_msgSend(v52, sel_bringSubviewToFront_, *(_QWORD *)((char *)v52 + v50[207]));
    goto LABEL_43;
  }
  v92 = (uint64_t)&v90[(*(unsigned __int8 *)(v111 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v111 + 80)];
  v93 = *(_QWORD *)(v111 + 72);
  v126 = v90;
  swift_bridgeObjectRetain();
  v94 = v114;
  while (2)
  {
    outlined init with copy of ConversationControlsAppLaunchButtonType(v92, (uint64_t)v125, type metadata accessor for ParticipantGridView.ParticipantTileInfo);
    v95 = v119;
    v128();
    __swift_storeEnumTagSinglePayload((uint64_t)v95, 0, 1, v6);
    v96 = (uint64_t)&v94[*(int *)(v123 + 48)];
    outlined init with copy of FeatureEligibility?((uint64_t)v95, (uint64_t)v94, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    outlined init with copy of FeatureEligibility?(v87, v96, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    if (__swift_getEnumTagSinglePayload((uint64_t)v94, 1, v6) != 1)
    {
      v97 = v115;
      outlined init with copy of FeatureEligibility?((uint64_t)v94, (uint64_t)v115, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      if (__swift_getEnumTagSinglePayload(v96, 1, v6) != 1)
      {
        v98 = v116;
        ((void (*)(_BYTE *, uint64_t, uint64_t))v128)(v116, v96, v6);
        _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
        v99 = dispatch thunk of static Equatable.== infix(_:_:)();
        v6 = v127;
        v100 = v99;
        v101 = *(void (**)(_BYTE *, uint64_t))(v124 + 8);
        v101(v98, v127);
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v119, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        v101(v115, v6);
        v94 = v114;
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v114, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        if ((v100 & 1) != 0)
          goto LABEL_42;
        goto LABEL_39;
      }
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v119, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      (*(void (**)(_BYTE *, uint64_t))(v124 + 8))(v97, v6);
LABEL_37:
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v94, (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
LABEL_39:
      v92 += v93;
      if (!--v91)
      {
        swift_bridgeObjectRelease();
        v52 = v122;
        v50 = &full type metadata for LinkShareItemHTMLTextGenerator;
        goto LABEL_41;
      }
      continue;
    }
    break;
  }
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v95, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  if (__swift_getEnumTagSinglePayload(v96, 1, v6) != 1)
    goto LABEL_37;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v94, (uint64_t *)&demangling cache variable for type metadata for UUID?);
LABEL_42:
  swift_bridgeObjectRelease();
LABEL_43:
  v102 = v87;
  v103 = v113;
  outlined init with copy of FeatureEligibility?(v102, (uint64_t)v113, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  v104 = __swift_getEnumTagSinglePayload((uint64_t)v103, 1, v6) == 1;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v103, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  ParticipantGridView.setOverlayHidden(_:)(v104);
}

Swift::Void __swiftcall ParticipantGridView.setOverlayHidden(_:)(Swift::Bool a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _BOOL8 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;

  v4 = v1;
  OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_15_56();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_59(v7, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v8 = OUTLINED_FUNCTION_7_22();
  *v2 = v8;
  OUTLINED_FUNCTION_17(v8, *MEMORY[0x1E0DEF740]);
  v9 = _dispatchPreconditionTest(_:)();
  OUTLINED_FUNCTION_40_0(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  if ((v9 & 1) != 0)
  {
    v10 = a1;
    ParticipantDimmingView.setHidden(_:)(v10);
    v11 = v4 + OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_delegate;
    OUTLINED_FUNCTION_1();
    if (MEMORY[0x1C3B752C0](v11))
    {
      v12 = *(_QWORD *)(v11 + 8);
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, _BOOL8, uint64_t, uint64_t))(v12 + 72))(v4, v10, ObjectType, v12);
      OUTLINED_FUNCTION_10();
    }
    OUTLINED_FUNCTION_91();
  }
  else
  {
    __break(1u);
  }
}

void ParticipantGridView.updateParticipantTiles(_:with:block:)(uint64_t a1, uint64_t a2, void (*a3)(char *), uint64_t a4)
{
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t *v14;
  uint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  double *v24;
  double v25;
  double v26;
  double v27;
  double v28;
  void *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  CGRect v38;
  CGRect v39;

  v35 = a4;
  v37 = type metadata accessor for ParticipantGridView.IdentifiableParticipantTile(0);
  v33 = *(_QWORD *)(v37 - 8);
  MEMORY[0x1E0C80A78](v37);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (offset: Int, element: ParticipantGridView.IdentifiableParticipantTile));
  MEMORY[0x1E0C80A78](v9);
  v32 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (offset: Int, element: ParticipantGridView.IdentifiableParticipantTile)?);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (unint64_t *)((char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v12);
  v16 = (unint64_t *)((char *)&v30 - v15);
  v17 = *(_QWORD *)(a1 + 16);
  v36 = a2 + 32;
  v34 = a1;
  v18 = v17;
  swift_bridgeObjectRetain();
  v19 = 0;
  v31 = v8;
  while (1)
  {
    if (v19 == v18)
    {
      v20 = 1;
      v19 = v18;
    }
    else
    {
      if (v19 >= v18)
        goto LABEL_17;
      v21 = (uint64_t)&v32[*(int *)(v9 + 48)];
      outlined init with copy of ConversationControlsAppLaunchButtonType(v34+ ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80))+ *(_QWORD *)(v33 + 72) * v19, v21, type metadata accessor for ParticipantGridView.IdentifiableParticipantTile);
      v22 = (uint64_t)v14 + *(int *)(v9 + 48);
      *v14 = v19;
      outlined init with take of StagedCollaboration(v21, v22, type metadata accessor for ParticipantGridView.IdentifiableParticipantTile);
      v20 = 0;
      ++v19;
      v8 = v31;
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v14, v20, 1, v9);
    outlined init with take of Any?((uint64_t)v14, (uint64_t)v16, &demangling cache variable for type metadata for (offset: Int, element: ParticipantGridView.IdentifiableParticipantTile)?);
    if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v9) == 1)
    {
      swift_bridgeObjectRelease();
      return;
    }
    v23 = *v16;
    outlined init with take of StagedCollaboration((uint64_t)v16 + *(int *)(v9 + 48), (uint64_t)v8, type metadata accessor for ParticipantGridView.IdentifiableParticipantTile);
    if ((v23 & 0x8000000000000000) != 0)
      break;
    if (v23 >= *(_QWORD *)(a2 + 16))
      goto LABEL_16;
    v24 = (double *)(v36 + 32 * v23);
    v25 = *v24;
    v26 = v24[1];
    v27 = v24[2];
    v28 = v24[3];
    v29 = *(void **)&v8[*(int *)(v37 + 20)];
    objc_msgSend(v29, sel_frame);
    v39.origin.x = v25;
    v39.origin.y = v26;
    v39.size.width = v27;
    v39.size.height = v28;
    if (!CGRectEqualToRect(v38, v39))
      objc_msgSend(v29, sel_setFrame_, v25, v26, v27, v28);
    if (a3)
      a3(v8);
    outlined destroy of RecentsCallItem((uint64_t)v8, type metadata accessor for ParticipantGridView.IdentifiableParticipantTile);
  }
  __break(1u);
LABEL_16:
  __break(1u);
LABEL_17:
  __break(1u);
}

void ParticipantGridView.startAnimations(_:animationStyle:completion:)(uint64_t (*a1)(uint64_t a1), _QWORD *a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  UIView *v6;
  UIView *v7;
  _QWORD *v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  objc_class *v14;
  UIView *v15;
  UIView *v16;
  _QWORD *v17;
  id v18;
  id v19;
  objc_class *v20;
  void *v21;
  _QWORD *v22;
  void *v23;
  UIView *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  objc_class *v29;
  uint64_t v30;
  void *v31;
  void *v32;
  uint64_t (*v33)(uint64_t);
  _QWORD *v34;

  v13 = *(uint64_t *)((char *)&v6->super.super.isa
                   + OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_mostRecentAnimationIndex);
  v14 = (objc_class *)(v13 + 1);
  if (__OFADD__(v13, 1))
  {
    __break(1u);
    goto LABEL_11;
  }
  v7 = v6;
  v10 = a5;
  v11 = a4;
  v12 = a3;
  v8 = a2;
  v9 = a1;
  *(Class *)((char *)&v6->super.super.isa
           + OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_mostRecentAnimationIndex) = v14;
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v11;
  *(_QWORD *)(v5 + 24) = v10;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v11);
  if (one-time initialization token for shared != -1)
LABEL_11:
    swift_once();
  if (((*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 576))() & 1) == 0
    || (v15 = -[UIView snapshotViewAfterScreenUpdates:](v7, sel_snapshotViewAfterScreenUpdates_, 0)) == 0)
  {
    __asm { BR              X10 }
  }
  v16 = v15;
  -[UIView addSubview:](v7, sel_addSubview_, v15);
  UIView.addConstraintsToFill(_:insets:)(v7, *MEMORY[0x1E0DC3298]);
  -[UIView layoutIfNeeded](v16, sel_layoutIfNeeded);
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = v11;
  v17[3] = v10;
  v17[4] = v16;
  *(_QWORD *)(v5 + 16) = partial apply for closure #1 in ParticipantGridView.startAnimations(_:animationStyle:completion:);
  *(_QWORD *)(v5 + 24) = v17;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v11);
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v11);
  v18 = objc_allocWithZone(MEMORY[0x1E0DC3F38]);
  v19 = @nonobjc UIViewPropertyAnimator.init(duration:curve:animations:)(2, 0, 0, 0.00001);
  v33 = v9;
  v34 = v8;
  v20 = (objc_class *)MEMORY[0x1E0C809B0];
  v29 = (objc_class *)MEMORY[0x1E0C809B0];
  v30 = 1107296256;
  v31 = thunk for @escaping @callee_guaranteed () -> ();
  v32 = &block_descriptor_41;
  v21 = _Block_copy(&v29);
  swift_retain();
  swift_release();
  objc_msgSend(v19, sel_addAnimations_, v21);
  _Block_release(v21);
  v22 = (_QWORD *)swift_allocObject();
  v22[2] = v7;
  v22[3] = v14;
  v22[4] = v5;
  v33 = partial apply for closure #2 in ParticipantGridView.startAnimations(_:animationStyle:completion:);
  v34 = v22;
  v29 = v20;
  v30 = 1107296256;
  v31 = thunk for @escaping @callee_guaranteed (@unowned Bool) -> ();
  v32 = &block_descriptor_47_0;
  v23 = _Block_copy(&v29);
  v24 = v7;
  swift_retain();
  swift_release();
  objc_msgSend(v19, sel_addCompletion_, v23);
  _Block_release(v23);
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_1BD6441D0;
  v29 = v14;
  v26 = String.init<A>(reflecting:)();
  v28 = v27;
  *(_QWORD *)(v25 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v25 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v25 + 32) = v26;
  *(_QWORD *)(v25 + 40) = v28;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  objc_msgSend(v19, sel_startAnimation);
  swift_release();

}

void ParticipantGridView.updateParticipantView(for:with:hasOtherInvitedParticipants:)()
{
  char *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char v5;
  char v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  id v24;
  void *v25;
  void *v26;
  void *v27;
  char v28;
  uint64_t v29;
  int EnumCaseMultiPayload;
  uint64_t v31;
  int v32;
  char v33;
  uint64_t v34;
  char *v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  int v45;
  uint64_t v46;

  OUTLINED_FUNCTION_93();
  v4 = v0;
  v6 = v5;
  v45 = v7;
  v9 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParticipantGridView.FullScreenFocusedParticipantInfo?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_81_11(v11, v42);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParticipantViewModel?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_81();
  v13 = type metadata accessor for ParticipantViewModel(0);
  OUTLINED_FUNCTION_1_1();
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_62();
  v46 = v18;
  v19 = OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_19_11();
  MEMORY[0x1E0C80A78](v20);
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_59(v21, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v1 = OUTLINED_FUNCTION_7_22();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v2 + 104))(v1, *MEMORY[0x1E0DEF740], v19);
  v22 = OUTLINED_FUNCTION_132_2();
  (*(void (**)(uint64_t *, uint64_t))(v2 + 8))(v1, v19);
  if ((v22 & 1) != 0)
  {
    v23 = ParticipantGridView.showsMostActiveTreatment(for:totalParticipantCount:)(v9, *(_QWORD *)(*(_QWORD *)&v4[OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_participantIdentifiableTiles]+ 16));
    OUTLINED_FUNCTION_14_2();
    OUTLINED_FUNCTION_42_24();
    v24 = ParticipantGridView.tile(for:ofAClass:)();
    if (v24)
    {
      v25 = v24;
      v26 = (void *)swift_dynamicCastClass();
      if (!v26)
        goto LABEL_18;
      v27 = v26;
      ParticipantGridView.configure(_:with:isMostActive:hasOtherInvitedParticipants:orientationChanged:)(v26, (uint64_t)&protocol witness table for ParticipantView, v9, v23 & 1, v6 & 1, 0, v3);
      OUTLINED_FUNCTION_69_0(v3, 1, v13);
      if (!v28)
      {
        v29 = v46;
        OUTLINED_FUNCTION_153_0(v3, v46);
        OUTLINED_FUNCTION_95_1(v29, (uint64_t)v17);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload)
        {
          if (EnumCaseMultiPayload != 1)
          {
            v35 = &v17[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantMonogramView.ViewModel))
                              + 48)];
            v36 = *(void **)v35;
            v37 = *((_QWORD *)v35 + 9);
            v38 = *((_QWORD *)v35 + 10);
            v42 = *((_QWORD *)v35 + 12);
            v43 = v36;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            OUTLINED_FUNCTION_2_1();
            OUTLINED_FUNCTION_27();

            v39 = v38;
            v29 = v46;
            outlined consume of AnsweringMachineCallStatus?(v37, v39);
            OUTLINED_FUNCTION_150_0(0);
            outlined destroy of RecentsCallItem((uint64_t)v17, type metadata accessor for ParticipantViewModel.ParticipantDetails);
            v33 = v45;
            v34 = v44;
            goto LABEL_13;
          }
          v31 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantVideoView.ViewModel, ParticipantVideoOverlayView.ViewModel));
          v32 = *(_DWORD *)(v31 + 48);
          outlined destroy of ParticipantVideoOverlayView.ViewModel((uint64_t)&v17[*(int *)(v31 + 64)]);
        }
        else
        {
          v32 = *(_DWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantVideoView.ViewModel))
                          + 48);
        }
        v33 = v45;
        v34 = v44;
        outlined destroy of ParticipantVideoView.ViewModel((uint64_t)&v17[v32]);
        outlined destroy of RecentsCallItem((uint64_t)v17, type metadata accessor for ParticipantViewModel.ParticipantDetails);
        OUTLINED_FUNCTION_150_0(v33 & 1);
LABEL_13:
        v40 = (uint64_t)&v4[OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_fullScreenFocusedParticipantInfo];
        OUTLINED_FUNCTION_1();
        OUTLINED_FUNCTION_63_4(v40, v34);
        v41 = type metadata accessor for ParticipantGridView.FullScreenFocusedParticipantInfo(0);
        LODWORD(v40) = __swift_getEnumTagSinglePayload(v34, 1, v41);
        OUTLINED_FUNCTION_90_1(v34);
        if ((_DWORD)v40 != 1)
          ParticipantGridView.updateParticipantViewFrames()();
        if ((v33 & 1) != 0)
        {
          objc_msgSend(v4, sel_bringSubviewToFront_, v27);

          outlined destroy of RecentsCallItem(v29, type metadata accessor for ParticipantViewModel);
          goto LABEL_19;
        }
        outlined destroy of RecentsCallItem(v29, type metadata accessor for ParticipantViewModel);
LABEL_18:

        goto LABEL_19;
      }

      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v3, &demangling cache variable for type metadata for ParticipantViewModel?);
    }
LABEL_19:
    OUTLINED_FUNCTION_52_1();
    return;
  }
  __break(1u);
}

uint64_t ParticipantGridView.showsMostActiveTreatment(for:totalParticipantCount:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  unsigned __int8 *v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int EnumTagSinglePayload;
  char v24;
  uint64_t v25;
  char *v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v34 = a2;
  v4 = type metadata accessor for UUID();
  v32 = *(_QWORD *)(v4 - 8);
  v33 = v4;
  MEMORY[0x1E0C80A78](v4);
  v30 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  v10 = MEMORY[0x1E0C80A78](v9);
  v31 = (uint64_t)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v29 - v12;
  v14 = type metadata accessor for Participant(0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (unsigned __int8 *)(v2 + OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_layoutStyle);
  swift_beginAccess();
  LODWORD(v17) = *v17;
  outlined init with copy of ConversationControlsAppLaunchButtonType(a1, (uint64_t)v16, type metadata accessor for Participant);
  if ((_DWORD)v17 != 1 || v34 < 2)
  {
    outlined destroy of RecentsCallItem((uint64_t)v16, type metadata accessor for Participant);
LABEL_13:
    v24 = 0;
    return v24 & 1;
  }
  v20 = v32;
  v19 = v33;
  (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v13, &v16[*(int *)(v14 + 20)], v33);
  __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v19);
  v21 = v2 + OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_mostProminentParticipantIdentifier;
  swift_beginAccess();
  v22 = (uint64_t)&v8[*(int *)(v6 + 48)];
  outlined init with copy of FeatureEligibility?((uint64_t)v13, (uint64_t)v8, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  outlined init with copy of FeatureEligibility?(v21, v22, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v19);
  if (EnumTagSinglePayload != 1)
  {
    v25 = v31;
    outlined init with copy of FeatureEligibility?((uint64_t)v8, v31, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    if (__swift_getEnumTagSinglePayload(v22, 1, v19) != 1)
    {
      v27 = v30;
      (*(void (**)(char *, uint64_t, uint64_t))(v20 + 32))(v30, v22, v19);
      _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
      v24 = dispatch thunk of static Equatable.== infix(_:_:)();
      v28 = *(void (**)(char *, uint64_t))(v20 + 8);
      v28(v27, v19);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v13, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      outlined destroy of RecentsCallItem((uint64_t)v16, type metadata accessor for Participant);
      v28((char *)v25, v19);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v8, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      return v24 & 1;
    }
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v13, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    outlined destroy of RecentsCallItem((uint64_t)v16, type metadata accessor for Participant);
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v25, v19);
    goto LABEL_12;
  }
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v13, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  outlined destroy of RecentsCallItem((uint64_t)v16, type metadata accessor for Participant);
  if (__swift_getEnumTagSinglePayload(v22, 1, v19) != 1)
  {
LABEL_12:
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v8, (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
    goto LABEL_13;
  }
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v8, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  v24 = 1;
  return v24 & 1;
}

id ParticipantGridView.tile(for:ofAClass:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  unsigned __int8 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  id v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  OUTLINED_FUNCTION_93();
  v40 = v5;
  v41 = v6;
  v36 = v7;
  v39 = v8;
  type metadata accessor for ParticipantGridView.ParticipantTileInfo(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_11_2();
  v10 = OUTLINED_FUNCTION_33_0();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_56_19();
  OUTLINED_FUNCTION_133_2();
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v34 - v16;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParticipantGridView.IdentifiableParticipantTile?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v18);
  OUTLINED_FUNCTION_41();
  v35 = v19;
  v20 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_participantIdentifiableTiles);
  v21 = *(_QWORD *)(v20 + 16);
  v37 = v4;
  v34 = v20;
  if (v21)
  {
    OUTLINED_FUNCTION_37_3();
    v24 = v22 + v23;
    v38 = *(_QWORD *)(v1 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      OUTLINED_FUNCTION_259(v24, (uint64_t)v17);
      outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v17, v2, type metadata accessor for ParticipantGridView.ParticipantTileInfo);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(v3, v2, v10);
      v25 = static UUID.== infix(_:_:)();
      OUTLINED_FUNCTION_29_2(*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8));
      OUTLINED_FUNCTION_259((uint64_t)v17, (uint64_t)v15);
      if ((v25 & 1) != 0)
      {
        v26 = objc_msgSend(*(id *)&v15[*(int *)(v37 + 20)], sel_isKindOfClass_, swift_getObjCClassFromMetadata(), v34);
        OUTLINED_FUNCTION_295_0((uint64_t)v15);
        if ((v26 & 1) != 0)
        {
          v27 = v35;
          outlined init with take of StagedCollaboration((uint64_t)v17, v35, type metadata accessor for ParticipantGridView.IdentifiableParticipantTile);
          v28 = v27;
          v29 = 0;
          goto LABEL_11;
        }
      }
      else
      {
        OUTLINED_FUNCTION_295_0((uint64_t)v15);
      }
      OUTLINED_FUNCTION_295_0((uint64_t)v17);
      v24 += v38;
      if (!--v21)
        goto LABEL_10;
    }
  }
  swift_bridgeObjectRetain();
LABEL_10:
  v27 = v35;
  v28 = v35;
  v29 = 1;
LABEL_11:
  v30 = v37;
  __swift_storeEnumTagSinglePayload(v28, v29, 1, v37);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_19_7(v27);
  if (v31)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v27, &demangling cache variable for type metadata for ParticipantGridView.IdentifiableParticipantTile?);
    return 0;
  }
  else
  {
    v32 = *(id *)(v27 + *(int *)(v30 + 20));
    outlined destroy of RecentsCallItem(v27, type metadata accessor for ParticipantGridView.IdentifiableParticipantTile);
  }
  return v32;
}

uint64_t ParticipantGridView.configure(_:with:isMostActive:hasOtherInvitedParticipants:orientationChanged:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, int a5@<W4>, int a6@<W5>, uint64_t a7@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  unsigned __int8 *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t ObjectType;
  uint64_t v74;
  uint64_t v75;
  NSObject *v76;
  os_log_type_t v77;
  uint8_t *v78;
  uint64_t v79;
  uint64_t v80;
  void (*v81)(char *, uint64_t, uint64_t);
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  int EnumTagSinglePayload;
  int v88;
  uint64_t *v89;
  int v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  void (*v96)(char *, uint64_t);
  uint64_t v97;
  uint64_t v98;
  char *v99;
  int EnumCaseMultiPayload;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  CGFloat v105;
  CGFloat v106;
  CGFloat v107;
  CGFloat v108;
  CGFloat v109;
  CGFloat v110;
  CGFloat v111;
  CGFloat v112;
  uint64_t v113;
  char *v114;
  CGFloat m31;
  CGFloat m32;
  CGFloat m33;
  CGFloat m34;
  CGFloat m41;
  CGFloat m42;
  CGFloat m43;
  CGFloat m44;
  char *v123;
  void *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  void *v133;
  CGFloat v134;
  uint64_t b_low;
  int v136;
  int v137;
  uint64_t v138;
  char *v139;
  double v140;
  CGFloat v141;
  CGFloat v142;
  char v143;
  uint64_t v144;
  uint64_t v145;
  char v146;
  char v147;
  uint64_t v148;
  uint64_t v149;
  char v150;
  char v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  int v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  int v163;
  uint64_t v164;
  int v165;
  uint64_t v166;
  int v167;
  uint64_t v168;
  char *v169;
  void (*v170)(char *, uint64_t);
  uint64_t v171;
  char *v172;
  CGFloat v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  char *v178;
  void (*v179)(char *, uint64_t);
  uint64_t v180;
  uint64_t v181;
  CGFloat v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  char v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  char v195;
  char v196;
  uint64_t v197;
  uint64_t v198;
  char v199;
  char v200;
  CGFloat v201;
  double v202;
  CGFloat a;
  CGFloat b;
  CGFloat c;
  CGFloat d;
  CGFloat tx;
  CGFloat ty;
  CGFloat *v209;
  void *v210;
  void *v211;
  id v212;
  objc_class *v213;
  id v214;
  int v215;
  uint64_t v216;
  int v217;
  uint64_t v218;
  void *v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  CGFloat v236;
  uint64_t v237;
  CGFloat v238;
  __int16 v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  CGFloat v250;
  uint64_t v251;
  CGFloat v252;
  __int16 v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  void (*v269)(char *, uint64_t, uint64_t);
  objc_class *v270;
  uint64_t v271;
  char *v272;
  uint64_t v273;
  char *v274;
  uint64_t v275;
  uint64_t v276;
  char *v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  int v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  CGFloat v288;
  id v289;
  CGFloat m13;
  CGFloat m12;
  char *v292;
  char *v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  int v297;
  uint64_t v298;
  uint64_t c_low;
  CGFloat v300;
  uint64_t v301;
  CGFloat v302;
  CGFloat m11;
  void *v304;
  uint64_t v305;
  CGAffineTransform v306;
  char *v307;
  double v308;
  double v309;
  unsigned __int8 v310;
  unsigned __int8 v311;
  CATransform3D v312;
  __int128 v313[11];
  objc_super v314;
  objc_super v315;
  _BYTE v316[80];
  CGAffineTransform v317;
  CGAffineTransform aBlock;

  v8 = v7;
  v283 = a6;
  LODWORD(v302) = a5;
  LODWORD(m12) = a4;
  v266 = a2;
  v298 = a7;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParticipantGridView.FullScreenFocusedParticipantInfo?);
  v12 = MEMORY[0x1E0C80A78](v11);
  v275 = (uint64_t)&v262 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v292 = (char *)&v262 - v14;
  v15 = type metadata accessor for ParticipantViewModel.ParticipantDetails(0);
  v16 = MEMORY[0x1E0C80A78](v15);
  v279 = (uint64_t)&v262 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v16);
  v286 = (uint64_t)&v262 - v19;
  MEMORY[0x1E0C80A78](v18);
  v287 = (uint64_t)&v262 - v20;
  *(double *)&v21 = COERCE_DOUBLE(type metadata accessor for UUID());
  c_low = *(_QWORD *)(v21 - 8);
  v300 = *(double *)&v21;
  MEMORY[0x1E0C80A78](v21);
  v277 = (char *)&v262 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v295 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
  v23 = MEMORY[0x1E0C80A78](v295);
  v276 = (uint64_t)&v262 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x1E0C80A78](v23);
  v278 = (uint64_t)&v262 - v26;
  MEMORY[0x1E0C80A78](v25);
  *(_QWORD *)&m11 = (char *)&v262 - v27;
  v28 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  v29 = MEMORY[0x1E0C80A78](v28);
  v268 = (uint64_t)&v262 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = MEMORY[0x1E0C80A78](v29);
  v273 = (uint64_t)&v262 - v32;
  v33 = MEMORY[0x1E0C80A78](v31);
  v274 = (char *)&v262 - v34;
  v35 = MEMORY[0x1E0C80A78](v33);
  v267 = (uint64_t)&v262 - v36;
  v37 = MEMORY[0x1E0C80A78](v35);
  v271 = (uint64_t)&v262 - v38;
  v39 = MEMORY[0x1E0C80A78](v37);
  v272 = (char *)&v262 - v40;
  v41 = MEMORY[0x1E0C80A78](v39);
  v284 = (uint64_t)&v262 - v42;
  v43 = MEMORY[0x1E0C80A78](v41);
  v45 = (char *)&v262 - v44;
  MEMORY[0x1E0C80A78](v43);
  v47 = (char *)&v262 - v46;
  v294 = type metadata accessor for Participant(0);
  v48 = MEMORY[0x1E0C80A78](v294);
  v282 = (uint64_t)&v262 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = MEMORY[0x1E0C80A78](v48);
  v285 = (uint64_t)&v262 - v51;
  v52 = MEMORY[0x1E0C80A78](v50);
  v281 = (uint64_t)&v262 - v53;
  MEMORY[0x1E0C80A78](v52);
  v55 = (char *)&v262 - v54;
  v56 = type metadata accessor for ParticipantViewModel(0);
  v57 = MEMORY[0x1E0C80A78](v56);
  v296 = (uint64_t)&v262 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = MEMORY[0x1E0C80A78](v57);
  v61 = (char *)&v262 - v60;
  v62 = MEMORY[0x1E0C80A78](v59);
  *(_QWORD *)&m13 = (char *)&v262 - v63;
  MEMORY[0x1E0C80A78](v62);
  v65 = (char *)&v262 - v64;
  v270 = (objc_class *)type metadata accessor for ParticipantView();
  v304 = (void *)swift_dynamicCastClass();
  if (!v304)
    return __swift_storeEnumTagSinglePayload(v298, 1, 1, v56);
  v301 = v56;
  v305 = a3;
  outlined init with copy of ConversationControlsAppLaunchButtonType(a3, (uint64_t)v55, type metadata accessor for Participant);
  v66 = (unsigned __int8 *)(v8
                          + OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_isLocalMemberAuthorizedToChangeGroupMembership);
  swift_beginAccess();
  v67 = *v66;
  v289 = a1;
  LOWORD(v260) = 257;
  LOBYTE(v259) = 1;
  v293 = v65;
  ParticipantViewModel.init(participant:videoProviderType:isInGrid:isMostActive:isPipped:isPreviewingReaction:hasOtherInvitedParticipants:isLocalMemberAuthorizedToChangeGroupMembership:prefersSnapshotFadeAnimation:snapshotImage:allowsVideoCroppedByAspectRatio:shouldRegisterVideoLayers:)((uint64_t)v55, 0, 1, LOBYTE(m12) & 1, 0, 0, LOBYTE(v302) & 1, v67, v259, 0, v260, v261, v262, v263, v264, v265, v266, v267, v268,
    (uint64_t)v269,
    v270,
    v271,
    v272,
    BYTE1(v272));
  LODWORD(v302) = ParticipantGridView.isOneToOneMode.getter();
  v68 = v8 + OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_delegate;
  swift_beginAccess();
  v69 = MEMORY[0x1C3B752C0](v68);
  v70 = v8;
  v265 = v68;
  if (v69)
  {
    v71 = *(_QWORD *)(v68 + 8);
    ObjectType = swift_getObjectType();
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v71 + 80))(v313, ObjectType, v71);
    swift_unknownObjectRelease();
    LODWORD(v288) = LOBYTE(v313[0]) == 2;
  }
  else
  {
    LODWORD(v288) = 0;
  }
  v74 = v305;
  if (one-time initialization token for default != -1)
    swift_once();
  v75 = type metadata accessor for Logger();
  __swift_project_value_buffer(v75, (uint64_t)&static Log.default);
  v76 = Logger.logObject.getter();
  v77 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v76, v77))
  {
    v78 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v78 = 67109120;
    LODWORD(v313[0]) = LOBYTE(v302) & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl(&dword_1BD004000, v76, v77, "Grid configure with isOneToOneMode = %{BOOL}d", v78, 8u);
    MEMORY[0x1C3B751B8](v78, -1, -1);
  }

  ParticipantGridView.updateCornerRadius(for:isOneToOneMode:)((uint64_t)v304, LOBYTE(v302) & (LOBYTE(v288) ^ 1));
  v79 = v74 + *(int *)(v294 + 20);
  v80 = *(_QWORD *)&v300;
  v81 = *(void (**)(char *, uint64_t, uint64_t))(c_low + 16);
  v262 = v79;
  v269 = v81;
  ((void (*)(char *))v81)(v47);
  v82 = 1;
  __swift_storeEnumTagSinglePayload((uint64_t)v47, 0, 1, v80);
  v83 = v70 + OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_fullScreenFocusedParticipantInfo;
  swift_beginAccess();
  v84 = type metadata accessor for ParticipantGridView.FullScreenFocusedParticipantInfo(0);
  if (!__swift_getEnumTagSinglePayload(v83, 1, v84))
  {
    v269(v45, v83, v80);
    v82 = 0;
  }
  v263 = v83;
  __swift_storeEnumTagSinglePayload((uint64_t)v45, v82, 1, v80);
  v85 = *(_QWORD *)&m11;
  v86 = *(_QWORD *)&m11 + *(int *)(v295 + 48);
  outlined init with copy of FeatureEligibility?((uint64_t)v47, *(uint64_t *)&m11, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  outlined init with copy of FeatureEligibility?((uint64_t)v45, v86, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v85, 1, v80);
  v264 = v84;
  if (EnumTagSinglePayload == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v45, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v47, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    v88 = __swift_getEnumTagSinglePayload(v86, 1, v80);
    if (v88 == 1)
      v89 = (uint64_t *)&demangling cache variable for type metadata for UUID?;
    else
      v89 = (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?);
    if (v88 == 1)
      v90 = -1;
    else
      v90 = 0;
    v297 = v90;
    v91 = v80;
  }
  else
  {
    v92 = v85;
    v93 = v284;
    outlined init with copy of FeatureEligibility?(v92, v284, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    v91 = v80;
    if (__swift_getEnumTagSinglePayload(v86, 1, v80) == 1)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v45, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v47, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      (*(void (**)(uint64_t, uint64_t))(c_low + 8))(v93, v80);
      v297 = 0;
      v89 = (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?);
    }
    else
    {
      v94 = c_low;
      v95 = v277;
      (*(void (**)(char *, uint64_t, uint64_t))(c_low + 32))(v277, v86, v91);
      _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
      v297 = dispatch thunk of static Equatable.== infix(_:_:)();
      v96 = *(void (**)(char *, uint64_t))(v94 + 8);
      v96(v95, v91);
      v89 = (uint64_t *)&demangling cache variable for type metadata for UUID?;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v45, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v47, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      v96((char *)v93, v91);
    }
  }
  v97 = v305;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(*(uint64_t *)&m11, v89);
  v98 = *(_QWORD *)&m13;
  v99 = v293;
  ParticipantGridView.transformModelIfNeeded(_:for:)((uint64_t)v293, v97, *(uint64_t *)&m13);
  outlined destroy of RecentsCallItem((uint64_t)v99, type metadata accessor for ParticipantViewModel);
  outlined init with take of StagedCollaboration(v98, (uint64_t)v99, type metadata accessor for ParticipantViewModel);
  outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v99, (uint64_t)v61, type metadata accessor for ParticipantViewModel);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v280 = v70;
  if (!EnumCaseMultiPayload)
  {
    v113 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantVideoView.ViewModel));
    v114 = &v61[*(int *)(v113 + 48)];
    outlined init with take of StagedCollaboration((uint64_t)v61, v287, type metadata accessor for ParticipantViewModel.ParticipantDetails);
    memcpy(v313, v114, 0xACuLL);
    if ((v297 & 1) != 0)
    {
      CGAffineTransformMakeRotation((CGAffineTransform *)&v312, 1.57079633);
      *(_OWORD *)&v306.a = *(_OWORD *)&v312.m11;
      *(_OWORD *)&v306.c = *(_OWORD *)&v312.m13;
      *(_OWORD *)&v306.tx = *(_OWORD *)&v312.m21;
      CATransform3DMakeAffineTransform(&v312, &v306);
      m11 = v312.m11;
      m13 = v312.m13;
      m12 = v312.m12;
      v285 = *(_QWORD *)&v312.m21;
      v286 = *(_QWORD *)&v312.m14;
      v284 = *(_QWORD *)&v312.m22;
      v279 = *(_QWORD *)&v312.m23;
      v276 = *(_QWORD *)&v312.m24;
      m31 = v312.m31;
      m32 = v312.m32;
      m33 = v312.m33;
      m34 = v312.m34;
      m41 = v312.m41;
      m42 = v312.m42;
      m43 = v312.m43;
      m44 = v312.m44;
    }
    else
    {
      m11 = *((double *)&v313[2] + 1);
      m13 = *((double *)&v313[3] + 1);
      m12 = *(double *)&v313[3];
      v285 = *((_QWORD *)&v313[4] + 1);
      v286 = *(_QWORD *)&v313[4];
      v279 = *((_QWORD *)&v313[5] + 1);
      v284 = *(_QWORD *)&v313[5];
      m31 = *((double *)&v313[6] + 1);
      v276 = *(_QWORD *)&v313[6];
      m33 = *((double *)&v313[7] + 1);
      m32 = *(double *)&v313[7];
      m41 = *((double *)&v313[8] + 1);
      m34 = *(double *)&v313[8];
      m43 = *((double *)&v313[9] + 1);
      m42 = *(double *)&v313[9];
      m44 = *(double *)&v313[10];
    }
    v133 = v304;
    v148 = v278;
    v149 = v281;
    v150 = BYTE8(v313[10]);
    outlined init with copy of ConversationControlsAppLaunchButtonType(v305, v281, type metadata accessor for Participant);
    if (v297 & 1 | ((v150 & 1) == 0))
    {
      outlined destroy of RecentsCallItem(v149, type metadata accessor for Participant);
      outlined destroy of RecentsCallItem((uint64_t)v99, type metadata accessor for ParticipantViewModel);
      v151 = 0;
      v132 = v296;
LABEL_61:
      v180 = (uint64_t)&v99[*(int *)(v113 + 48)];
      v181 = v287;
      outlined init with copy of ConversationControlsAppLaunchButtonType(v287, (uint64_t)v99, type metadata accessor for ParticipantViewModel.ParticipantDetails);
      outlined init with copy of FeatureEligibility?((uint64_t)v313, v180, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
      v182 = m12;
      *(CGFloat *)(v180 + 40) = m11;
      *(CGFloat *)(v180 + 48) = v182;
      v183 = v286;
      *(CGFloat *)(v180 + 56) = m13;
      *(_QWORD *)(v180 + 64) = v183;
      v184 = v284;
      *(_QWORD *)(v180 + 72) = v285;
      *(_QWORD *)(v180 + 80) = v184;
      v185 = v276;
      *(_QWORD *)(v180 + 88) = v279;
      *(_QWORD *)(v180 + 96) = v185;
      *(CGFloat *)(v180 + 104) = m31;
      *(CGFloat *)(v180 + 112) = m32;
      *(CGFloat *)(v180 + 120) = m33;
      *(CGFloat *)(v180 + 128) = m34;
      *(CGFloat *)(v180 + 136) = m41;
      *(CGFloat *)(v180 + 144) = m42;
      *(CGFloat *)(v180 + 152) = m43;
      *(CGFloat *)(v180 + 160) = m44;
      *(_BYTE *)(v180 + 168) = v151 & 1;
      *(_WORD *)(v180 + 169) = 256;
      *(_BYTE *)(v180 + 171) = 0;
      v186 = v301;
      swift_storeEnumTagMultiPayload();
      memset(&v312, 0, 72);
      LOWORD(v312.m32) = -16384;
      v129 = v280;
      swift_beginAccess();
      specialized Dictionary._Variant.setValue(_:forKey:)();
      swift_endAccess();
      outlined destroy of ParticipantVideoView.ViewModel((uint64_t)v313);
      v130 = v186;
      outlined destroy of RecentsCallItem(v181, type metadata accessor for ParticipantViewModel.ParticipantDetails);
      goto LABEL_62;
    }
    v274 = (char *)v113;
    v158 = (uint64_t)v272;
    v269(v272, v149 + *(int *)(v294 + 20), v91);
    __swift_storeEnumTagSinglePayload(v158, 0, 1, v91);
    v159 = (uint64_t)v133 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_participantIdentifier;
    swift_beginAccess();
    v160 = v271;
    outlined init with copy of FeatureEligibility?(v159, v271, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    v161 = v148 + *(int *)(v295 + 48);
    outlined init with copy of FeatureEligibility?(v158, v148, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    v162 = *(_QWORD *)&v300;
    outlined init with copy of FeatureEligibility?(v160, v161, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    if (__swift_getEnumTagSinglePayload(v148, 1, v162) == 1)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v160, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v158, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      outlined destroy of RecentsCallItem(v149, type metadata accessor for Participant);
      outlined destroy of RecentsCallItem((uint64_t)v99, type metadata accessor for ParticipantViewModel);
      v163 = __swift_getEnumTagSinglePayload(v161, 1, v162);
      v132 = v296;
      v113 = (uint64_t)v274;
      if (v163 == 1)
      {
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v148, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        v151 = 0;
        goto LABEL_61;
      }
    }
    else
    {
      v166 = v267;
      outlined init with copy of FeatureEligibility?(v148, v267, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      v167 = __swift_getEnumTagSinglePayload(v161, 1, v162);
      v132 = v296;
      v113 = (uint64_t)v274;
      if (v167 != 1)
      {
        v177 = c_low;
        v178 = v277;
        (*(void (**)(char *, uint64_t, uint64_t))(c_low + 32))(v277, v161, v162);
        _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
        LODWORD(v295) = dispatch thunk of static Equatable.== infix(_:_:)();
        v179 = *(void (**)(char *, uint64_t))(v177 + 8);
        v179(v178, v162);
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v271, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v272, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        outlined destroy of RecentsCallItem(v281, type metadata accessor for Participant);
        outlined destroy of RecentsCallItem((uint64_t)v99, type metadata accessor for ParticipantViewModel);
        v179((char *)v166, v162);
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v278, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        v151 = v295 ^ 1;
        goto LABEL_61;
      }
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v271, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v272, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      outlined destroy of RecentsCallItem(v281, type metadata accessor for Participant);
      outlined destroy of RecentsCallItem((uint64_t)v99, type metadata accessor for ParticipantViewModel);
      (*(void (**)(uint64_t, uint64_t))(c_low + 8))(v166, v162);
    }
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v148, (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
    v151 = 1;
    goto LABEL_61;
  }
  if (EnumCaseMultiPayload == 1)
  {
    v101 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantVideoView.ViewModel, ParticipantVideoOverlayView.ViewModel));
    v102 = &v61[*(int *)(v101 + 48)];
    v103 = &v61[*(int *)(v101 + 64)];
    outlined init with take of StagedCollaboration((uint64_t)v61, v286, type metadata accessor for ParticipantViewModel.ParticipantDetails);
    memcpy(v313, v102, 0xACuLL);
    outlined init with take of ParticipantVideoOverlayView.ViewModel(v103, &v306);
    LODWORD(v104) = v297;
    if ((v297 & 1) != 0)
    {
      CGAffineTransformMakeRotation((CGAffineTransform *)&v312, 1.57079633);
      *(_OWORD *)&v317.a = *(_OWORD *)&v312.m11;
      *(_OWORD *)&v317.c = *(_OWORD *)&v312.m13;
      *(_OWORD *)&v317.tx = *(_OWORD *)&v312.m21;
      CATransform3DMakeAffineTransform(&v312, &v317);
      m11 = v312.m11;
      m13 = v312.m13;
      m12 = v312.m12;
      v287 = *(_QWORD *)&v312.m14;
      v284 = *(_QWORD *)&v312.m21;
      v281 = *(_QWORD *)&v312.m22;
      v278 = *(_QWORD *)&v312.m24;
      v279 = *(_QWORD *)&v312.m23;
      v105 = v312.m31;
      v106 = v312.m32;
      v107 = v312.m33;
      v108 = v312.m34;
      v109 = v312.m41;
      v110 = v312.m42;
      v111 = v312.m43;
      v112 = v312.m44;
    }
    else
    {
      m11 = *((double *)&v313[2] + 1);
      m13 = *((double *)&v313[3] + 1);
      m12 = *(double *)&v313[3];
      v284 = *((_QWORD *)&v313[4] + 1);
      v287 = *(_QWORD *)&v313[4];
      v281 = *(_QWORD *)&v313[5];
      v278 = *(_QWORD *)&v313[6];
      v279 = *((_QWORD *)&v313[5] + 1);
      v105 = *((double *)&v313[6] + 1);
      v107 = *((double *)&v313[7] + 1);
      v106 = *(double *)&v313[7];
      v109 = *((double *)&v313[8] + 1);
      v108 = *(double *)&v313[8];
      v111 = *((double *)&v313[9] + 1);
      v110 = *(double *)&v313[9];
      v112 = *(double *)&v313[10];
    }
    v133 = v304;
    v144 = *(_QWORD *)&v300;
    v145 = v285;
    v146 = BYTE8(v313[10]);
    outlined init with copy of ConversationControlsAppLaunchButtonType(v305, v285, type metadata accessor for Participant);
    if (v104 & 1 | ((v146 & 1) == 0))
    {
      outlined destroy of RecentsCallItem(v145, type metadata accessor for Participant);
      outlined destroy of RecentsCallItem((uint64_t)v99, type metadata accessor for ParticipantViewModel);
      v147 = 0;
      v132 = v296;
LABEL_59:
      v171 = (uint64_t)&v99[*(int *)(v101 + 48)];
      v172 = &v99[*(int *)(v101 + 64)];
      outlined init with take of StagedCollaboration(v286, (uint64_t)v99, type metadata accessor for ParticipantViewModel.ParticipantDetails);
      outlined init with take of Any?((uint64_t)v313, v171, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
      v173 = m12;
      *(CGFloat *)(v171 + 40) = m11;
      *(CGFloat *)(v171 + 48) = v173;
      v174 = v287;
      *(CGFloat *)(v171 + 56) = m13;
      *(_QWORD *)(v171 + 64) = v174;
      v175 = v281;
      *(_QWORD *)(v171 + 72) = v284;
      *(_QWORD *)(v171 + 80) = v175;
      v176 = v278;
      *(_QWORD *)(v171 + 88) = v279;
      *(_QWORD *)(v171 + 96) = v176;
      *(CGFloat *)(v171 + 104) = v105;
      *(CGFloat *)(v171 + 112) = v106;
      *(CGFloat *)(v171 + 120) = v107;
      *(CGFloat *)(v171 + 128) = v108;
      *(CGFloat *)(v171 + 136) = v109;
      *(CGFloat *)(v171 + 144) = v110;
      *(CGFloat *)(v171 + 152) = v111;
      *(CGFloat *)(v171 + 160) = v112;
      *(_BYTE *)(v171 + 168) = v147 & 1;
      *(_WORD *)(v171 + 169) = 256;
      *(_BYTE *)(v171 + 171) = 0;
      outlined init with take of ParticipantVideoOverlayView.ViewModel(&v306, v172);
      v130 = v301;
      swift_storeEnumTagMultiPayload();
      v129 = v280;
      goto LABEL_63;
    }
    v297 = v104;
    v104 = (uint64_t)v274;
    v269(v274, v145 + *(int *)(v294 + 20), v144);
    __swift_storeEnumTagSinglePayload(v104, 0, 1, v144);
    v152 = (uint64_t)v133 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_participantIdentifier;
    swift_beginAccess();
    v153 = v273;
    outlined init with copy of FeatureEligibility?(v152, v273, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    v154 = v276;
    v155 = v276 + *(int *)(v295 + 48);
    outlined init with copy of FeatureEligibility?(v104, v276, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    v156 = *(_QWORD *)&v300;
    outlined init with copy of FeatureEligibility?(v153, v155, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    if (__swift_getEnumTagSinglePayload(v154, 1, v156) == 1)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v153, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v104, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      outlined destroy of RecentsCallItem(v285, type metadata accessor for Participant);
      outlined destroy of RecentsCallItem((uint64_t)v99, type metadata accessor for ParticipantViewModel);
      v157 = __swift_getEnumTagSinglePayload(v155, 1, v156);
      v132 = v296;
      LOBYTE(v104) = v297;
      if (v157 == 1)
      {
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v276, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        v147 = 0;
        goto LABEL_59;
      }
    }
    else
    {
      v164 = v268;
      outlined init with copy of FeatureEligibility?(v154, v268, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      v165 = __swift_getEnumTagSinglePayload(v155, 1, v156);
      v132 = v296;
      if (v165 != 1)
      {
        v104 = c_low;
        v169 = v277;
        (*(void (**)(char *, uint64_t, uint64_t))(c_low + 32))(v277, v155, v156);
        _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
        LODWORD(v295) = dispatch thunk of static Equatable.== infix(_:_:)();
        v170 = *(void (**)(char *, uint64_t))(v104 + 8);
        v170(v169, v156);
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v273, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v274, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        outlined destroy of RecentsCallItem(v285, type metadata accessor for Participant);
        outlined destroy of RecentsCallItem((uint64_t)v99, type metadata accessor for ParticipantViewModel);
        LOBYTE(v104) = v297;
        v170((char *)v164, v156);
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v276, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        v147 = v295 ^ 1;
        goto LABEL_59;
      }
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v273, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v274, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      outlined destroy of RecentsCallItem(v285, type metadata accessor for Participant);
      outlined destroy of RecentsCallItem((uint64_t)v99, type metadata accessor for ParticipantViewModel);
      (*(void (**)(uint64_t, uint64_t))(c_low + 8))(v164, v156);
      LOBYTE(v104) = v297;
    }
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v276, (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
    v147 = 1;
    goto LABEL_59;
  }
  v123 = &v61[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantMonogramView.ViewModel))
                     + 48)];
  v124 = *(void **)v123;
  v125 = *((_QWORD *)v123 + 9);
  v126 = *((_QWORD *)v123 + 10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  outlined consume of AnsweringMachineCallStatus?(v125, v126);
  v127 = (uint64_t)v61;
  v128 = v279;
  outlined init with take of StagedCollaboration(v127, v279, type metadata accessor for ParticipantViewModel.ParticipantDetails);
  v129 = v280;
  if (!objc_msgSend(*(id *)(v280 + OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_featureFlags), sel_uPlusOneFullBleedHandoffEnabled))
  {
    outlined destroy of RecentsCallItem(v128, type metadata accessor for ParticipantViewModel.ParticipantDetails);
    v130 = v301;
    v99 = v293;
    v132 = v296;
    v133 = v304;
LABEL_62:
    LOBYTE(v104) = v297;
LABEL_63:
    v131 = (uint64_t)v292;
    if ((LOBYTE(v302) & 1) == 0)
      goto LABEL_83;
    goto LABEL_64;
  }
  v130 = v301;
  v131 = (uint64_t)v292;
  v99 = v293;
  v132 = v296;
  v133 = v304;
  LOBYTE(v104) = v297;
  if ((LOBYTE(v302) & 1) == 0)
  {
    outlined destroy of RecentsCallItem(v128, type metadata accessor for ParticipantViewModel.ParticipantDetails);
    goto LABEL_83;
  }
  if ((ParticipantGridView.shouldShowLastFrameUI.getter() & 1) == 0)
  {
    v168 = v128;
LABEL_91:
    outlined destroy of RecentsCallItem(v168, type metadata accessor for ParticipantViewModel.ParticipantDetails);
LABEL_64:
    outlined init with copy of FeatureEligibility?(v263, v131, &demangling cache variable for type metadata for ParticipantGridView.FullScreenFocusedParticipantInfo?);
    v187 = v264;
    if (__swift_getEnumTagSinglePayload(v131, 1, v264))
    {
      v188 = v275;
      outlined init with copy of FeatureEligibility?(v131, v275, &demangling cache variable for type metadata for ParticipantGridView.FullScreenFocusedParticipantInfo?);
      ParticipantGridView.fullScreenFocusedParticipantInfo.setter(v188, &demangling cache variable for type metadata for ParticipantGridView.FullScreenFocusedParticipantInfo?, &OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_fullScreenFocusedParticipantInfo, (void (*)(_BYTE *))ParticipantGridView.fullScreenFocusedParticipantInfo.didset);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v131, &demangling cache variable for type metadata for ParticipantGridView.FullScreenFocusedParticipantInfo?);
    }
    else
    {
      Participant.videoInfo.getter();
      outlined init with take of Any?((uint64_t)&v317, (uint64_t)v313, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
      if (*(_QWORD *)&v313[0])
      {
        v189 = v313[2];
        outlined release of LinearGradient((uint64_t)&v317);
      }
      else
      {
        v189 = 0;
      }
      *(_BYTE *)(v131 + *(int *)(v187 + 28)) = v189;
      ParticipantGridView.fullScreenFocusedParticipantInfo.setter(v131, &demangling cache variable for type metadata for ParticipantGridView.FullScreenFocusedParticipantInfo?, &OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_fullScreenFocusedParticipantInfo, (void (*)(_BYTE *))ParticipantGridView.fullScreenFocusedParticipantInfo.didset);
    }
    v190 = v265;
    if (MEMORY[0x1C3B752C0](v265))
    {
      v191 = v129;
      v192 = *(_QWORD *)(v190 + 8);
      v193 = swift_getObjectType();
      v194 = (*(uint64_t (**)(uint64_t, uint64_t))(v192 + 112))(v193, v192);
      v196 = v195;
      swift_unknownObjectRelease();
      v197 = 1;
      if ((v196 & 1) == 0 && !v194)
        v197 = *(_QWORD *)(v191 + OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_deviceOrientation);
    }
    else
    {
      v197 = 1;
    }
    v198 = v282;
    outlined init with copy of ConversationControlsAppLaunchButtonType(v305, v282, type metadata accessor for Participant);
    v199 = static Platform.current.getter();
    v200 = LOBYTE(v288);
    if (v199 == 3)
      v200 = 0;
    v201 = 0.0;
    if ((v200 & 1) == 0)
    {
      closure #2 in ParticipantGridView.configure(_:with:isMostActive:hasOtherInvitedParticipants:orientationChanged:)(v197);
      v201 = v202;
    }
    outlined destroy of RecentsCallItem(v198, type metadata accessor for Participant);
    CGAffineTransformMakeRotation(&aBlock, v201);
    a = aBlock.a;
    b = aBlock.b;
    c = aBlock.c;
    d = aBlock.d;
    tx = aBlock.tx;
    ty = aBlock.ty;
    v209 = (CGFloat *)swift_allocObject();
    *((_QWORD *)v209 + 2) = v133;
    v209[3] = a;
    v209[4] = b;
    v209[5] = c;
    v209[6] = d;
    v209[7] = tx;
    v209[8] = ty;
    if ((v283 & 1) != 0)
    {
      v210 = (void *)objc_opt_self();
      *(_QWORD *)&aBlock.tx = partial apply for closure #3 in ParticipantGridView.configure(_:with:isMostActive:hasOtherInvitedParticipants:orientationChanged:);
      *(_QWORD *)&aBlock.ty = v209;
      *(_QWORD *)&aBlock.a = MEMORY[0x1E0C809B0];
      *(_QWORD *)&aBlock.b = 1107296256;
      *(_QWORD *)&aBlock.c = thunk for @escaping @callee_guaranteed () -> ();
      *(_QWORD *)&aBlock.d = &block_descriptor_23_0;
      v211 = _Block_copy(&aBlock);
      v212 = v289;
      swift_retain();
      swift_release();
      objc_msgSend(v210, sel_animateWithDuration_animations_, v211, 0.4);
      swift_release();
      _Block_release(v211);
    }
    else
    {
      v315.receiver = v133;
      v213 = v270;
      v315.super_class = v270;
      v214 = v289;
      aBlock.a = a;
      aBlock.b = b;
      aBlock.c = c;
      aBlock.d = d;
      aBlock.tx = tx;
      aBlock.ty = ty;
      objc_msgSendSuper2(&v315, sel_setTransform_, &aBlock);
      v314.receiver = v133;
      v314.super_class = v213;
      objc_msgSendSuper2(&v314, sel_transform);
      ParticipantView.updateOverlayTransforms(with:)(&aBlock.a);
      swift_release();
    }
    v130 = v301;
    goto LABEL_83;
  }
  swift_retain();
  ParticipantGridView.VideoInfoCache.info(for:)(v305, (uint64_t)v316);
  swift_release();
  outlined init with take of Any?((uint64_t)v316, (uint64_t)&v306, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
  v134 = v306.a;
  if (!*(_QWORD *)&v306.a)
  {
    v168 = v279;
    goto LABEL_91;
  }
  b_low = LOBYTE(v306.b);
  v136 = BYTE1(v306.b);
  v137 = BYTE2(v306.b);
  v138 = BYTE3(v306.b);
  LODWORD(v281) = BYTE4(v306.b);
  LODWORD(v284) = BYTE5(v306.b);
  LODWORD(v285) = BYTE6(v306.b);
  LODWORD(v286) = HIBYTE(v306.b);
  c_low = LOBYTE(v306.c);
  LODWORD(v294) = BYTE1(v306.c);
  v300 = v306.d;
  *(_QWORD *)&v302 = LOBYTE(v306.tx);
  v139 = v307;
  m11 = v306.ty;
  v140 = v308;
  v141 = v309;
  LODWORD(v295) = v310;
  LODWORD(v287) = v311;
  specialized Dictionary.subscript.getter();
  if (!*((_QWORD *)&v313[1] + 1))
  {
    outlined destroy of RecentsCallItem(v279, type metadata accessor for ParticipantViewModel.ParticipantDetails);
    outlined release of LinearGradient((uint64_t)v316);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v313, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
    v131 = (uint64_t)v292;
    v99 = v293;
    v132 = v296;
    v133 = v304;
    LOBYTE(v104) = v297;
    goto LABEL_64;
  }
  v292 = v139;
  outlined init with take of Notice(v313, (uint64_t)&aBlock);
  outlined init with copy of IDSLookupManager((uint64_t)&aBlock, (uint64_t)v313);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParticipantVideoProvider);
  type metadata accessor for RemoteParticipantVideoProvider();
  if ((swift_dynamicCast() & 1) != 0
    && (v142 = v312.m11,
        v143 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **(_QWORD **)&v312.m11) + 0x190))(),
        *(id *)&v142,
        (v143 & 1) != 0))
  {
    outlined release of LinearGradient((uint64_t)v316);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&aBlock);
    outlined destroy of RecentsCallItem(v279, type metadata accessor for ParticipantViewModel.ParticipantDetails);
    v130 = v301;
    v99 = v293;
  }
  else
  {
    v288 = v140;
    outlined init with copy of IDSLookupManager((uint64_t)&aBlock, (uint64_t)v313);
    CGAffineTransformMakeRotation((CGAffineTransform *)&v312, 0.0);
    *(_OWORD *)&v317.a = *(_OWORD *)&v312.m11;
    *(_OWORD *)&v317.c = *(_OWORD *)&v312.m13;
    *(_OWORD *)&v317.tx = *(_OWORD *)&v312.m21;
    CATransform3DMakeAffineTransform(&v312, &v317);
    *(CATransform3D *)((char *)&v313[2] + 8) = v312;
    DWORD2(v313[10]) = 16842753;
    v223 = v305;
    if ((closure #1 in ParticipantGridView.configure(_:with:isMostActive:hasOtherInvitedParticipants:orientationChanged:)((uint64_t)&aBlock, v280, v305) & 1) != 0)
    {
      m13 = v141;
      v99 = v293;
      outlined destroy of RecentsCallItem((uint64_t)v293, type metadata accessor for ParticipantViewModel);
      v224 = (uint64_t)&v99[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantVideoView.ViewModel))
                                  + 48)];
      outlined init with copy of ConversationControlsAppLaunchButtonType(v279, (uint64_t)v99, type metadata accessor for ParticipantViewModel.ParticipantDetails);
      outlined init with copy of ParticipantVideoView.ViewModel((uint64_t)v313, v224);
      v225 = v301;
      swift_storeEnumTagMultiPayload();
      if (v136)
        v226 = 256;
      else
        v226 = 0;
      v227 = v226 | b_low;
      v228 = 0x10000;
      if (!v137)
        v228 = 0;
      v229 = v227 | v228 | (v138 << 24);
      v230 = 0x100000000;
      if (!(_DWORD)v281)
        v230 = 0;
      v231 = 0x10000000000;
      if (!(_DWORD)v284)
        v231 = 0;
      v232 = v230 | v231;
      v233 = 0x1000000000000;
      if (!(_DWORD)v285)
        v233 = 0;
      v234 = v232 | v233;
      v235 = 0x100000000000000;
      if (!(_DWORD)v286)
        v235 = 0;
      *(_QWORD *)&v236 = v229 | v234 | v235;
      if ((_DWORD)v294)
        v237 = 256;
      else
        v237 = 0;
      *(_QWORD *)&v238 = v237 | c_low;
      if ((_DWORD)v287)
        v239 = 256;
      else
        v239 = 0;
      v312.m11 = v134;
      v312.m12 = v236;
      v130 = v225;
      v312.m13 = v238;
      v312.m14 = v300;
      v312.m21 = v302;
      v312.m22 = m11;
      *(_QWORD *)&v312.m23 = v292;
      v312.m24 = v288;
      v312.m31 = m13;
      LOWORD(v312.m32) = v239 | v295;
      swift_beginAccess();
      specialized Dictionary._Variant.setValue(_:forKey:)();
      swift_endAccess();
      ParticipantGridView.scheduleUpdateToPausedHandoffOverlay(on:for:isMostActive:)((uint64_t)v289, v266, v223, LOBYTE(m12) & 1);
      outlined destroy of ParticipantVideoView.ViewModel((uint64_t)v313);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&aBlock);
      outlined destroy of RecentsCallItem(v279, type metadata accessor for ParticipantViewModel.ParticipantDetails);
    }
    else
    {
      if (v136)
        v240 = 256;
      else
        v240 = 0;
      v241 = v240 | b_low;
      v242 = 0x10000;
      if (!v137)
        v242 = 0;
      v243 = v241 | v242 | (v138 << 24);
      v244 = 0x100000000;
      if (!(_DWORD)v281)
        v244 = 0;
      v245 = 0x10000000000;
      if (!(_DWORD)v284)
        v245 = 0;
      v246 = v244 | v245;
      v247 = 0x1000000000000;
      if (!(_DWORD)v285)
        v247 = 0;
      v248 = v246 | v247;
      v249 = 0x100000000000000;
      if (!(_DWORD)v286)
        v249 = 0;
      *(_QWORD *)&v250 = v243 | v248 | v249;
      if ((_DWORD)v294)
        v251 = 256;
      else
        v251 = 0;
      *(_QWORD *)&v252 = v251 | c_low;
      if ((_DWORD)v287)
        v253 = 256;
      else
        v253 = 0;
      v312.m11 = v134;
      v312.m12 = v250;
      v312.m13 = v252;
      v312.m14 = v300;
      v312.m21 = v302;
      v312.m22 = m11;
      *(_QWORD *)&v312.m23 = v292;
      v312.m24 = v288;
      v312.m31 = v141;
      LOWORD(v312.m32) = v253 | v295 | 0x8000;
      swift_beginAccess();
      specialized Dictionary._Variant.setValue(_:forKey:)();
      swift_endAccess();
      v254 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantVideoView.ViewModel, ParticipantVideoOverlayView.ViewModel));
      v255 = *(_QWORD *)&m13;
      v256 = *(_QWORD *)&m13 + *(int *)(v254 + 48);
      v257 = *(_QWORD *)&m13 + *(int *)(v254 + 64);
      v258 = v279;
      outlined init with copy of ConversationControlsAppLaunchButtonType(v279, *(uint64_t *)&m13, type metadata accessor for ParticipantViewModel.ParticipantDetails);
      outlined init with copy of ParticipantVideoView.ViewModel((uint64_t)v313, v256);
      *(_QWORD *)(v257 + 24) = &type metadata for ImageNames.ParticipantView;
      *(_QWORD *)(v257 + 32) = &protocol witness table for ImageNames.ParticipantView;
      *(_BYTE *)v257 = 8;
      outlined destroy of ParticipantVideoView.ViewModel((uint64_t)v313);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&aBlock);
      outlined destroy of RecentsCallItem(v258, type metadata accessor for ParticipantViewModel.ParticipantDetails);
      v99 = v293;
      outlined destroy of RecentsCallItem((uint64_t)v293, type metadata accessor for ParticipantViewModel);
      *(_QWORD *)(v257 + 40) = 0;
      *(_QWORD *)(v257 + 48) = 0;
      *(_BYTE *)(v257 + 104) = 1;
      v130 = v301;
      swift_storeEnumTagMultiPayload();
      outlined init with take of StagedCollaboration(v255, (uint64_t)v99, type metadata accessor for ParticipantViewModel);
    }
  }
  v132 = v296;
  LOBYTE(v104) = v297;
LABEL_83:
  ParticipantView.configure(with:)(v99);
  ParticipantView.updateGradientOverlayView(isHidden:alpha:)((v104 & 1) == 0, 0, 1);
  outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v99, v132, type metadata accessor for ParticipantViewModel);
  v215 = swift_getEnumCaseMultiPayload();
  if (v215)
  {
    if (v215 != 1)
    {
      v218 = v132
           + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantMonogramView.ViewModel))
                    + 48);
      v219 = *(void **)v218;
      v220 = *(_QWORD *)(v218 + 72);
      v221 = *(_QWORD *)(v218 + 80);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      v99 = v293;
      outlined consume of AnsweringMachineCallStatus?(v220, v221);
      UIView.removeTapInteractions(withTapCount:)(2);

      outlined destroy of RecentsCallItem(v296, type metadata accessor for ParticipantViewModel.ParticipantDetails);
      goto LABEL_89;
    }
    v216 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantVideoView.ViewModel, ParticipantVideoOverlayView.ViewModel));
    v217 = *(_DWORD *)(v216 + 48);
    outlined destroy of ParticipantVideoOverlayView.ViewModel(v132 + *(int *)(v216 + 64));
  }
  else
  {
    v217 = *(_DWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantVideoView.ViewModel))
                     + 48);
  }
  outlined destroy of ParticipantVideoView.ViewModel(v132 + v217);
  outlined destroy of RecentsCallItem(v132, type metadata accessor for ParticipantViewModel.ParticipantDetails);
  UIView.addTapInteraction(withTapCount:)(2);

LABEL_89:
  v222 = v298;
  outlined init with take of StagedCollaboration((uint64_t)v99, v298, type metadata accessor for ParticipantViewModel);
  return __swift_storeEnumTagSinglePayload(v222, 0, 1, v130);
}

uint64_t ParticipantGridView.updateViews(for:localParticipantOrientation:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  void *v55;
  id v56;
  id v57;
  CGFloat b;
  CGFloat a;
  double c;
  CGFloat d;
  CGFloat tx;
  CGFloat ty;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  void (*v68)(uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t ObjectType;
  uint64_t v73;
  char v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(uint64_t);
  CGFloat v80;
  __int16 v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  int v86;
  uint64_t v87;
  CGFloat v88;
  CGFloat v89;
  CGFloat v90;
  void *v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  __int128 v95;
  void *v96;
  CGFloat v97;
  uint64_t v98;
  uint64_t v100;
  Swift::String v101;
  Swift::String v102;
  uint64_t v103;
  int v104;
  _QWORD v105[2];
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  unint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  __int128 v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  void *v128;
  __int128 v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  CGAffineTransform v137;
  __int16 v138;
  uint64_t v139;
  _QWORD v140[7];

  v4 = v2;
  v118 = OUTLINED_FUNCTION_15_6();
  OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_41();
  v109 = v8;
  v117 = OUTLINED_FUNCTION_144_1();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_41();
  v116 = v10;
  v134 = OUTLINED_FUNCTION_33_0();
  v132 = *(_QWORD *)(v134 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_41();
  v107 = v12;
  v127 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_41();
  v136 = v14;
  v108 = OUTLINED_FUNCTION_104_4();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_41();
  v126 = v16;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_5_27();
  v128 = v18;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v19);
  OUTLINED_FUNCTION_18_0();
  v135 = v20;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v21);
  OUTLINED_FUNCTION_62();
  v130 = v22;
  v122 = OUTLINED_FUNCTION_56_19();
  v23 = *(_QWORD *)(v122 - 8);
  v24 = *(_QWORD *)(v23 + 64);
  MEMORY[0x1E0C80A78](v122);
  v115 = (uint64_t)v105 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  OUTLINED_FUNCTION_62();
  v133 = v26;
  v27 = OUTLINED_FUNCTION_8_13();
  v28 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_59(v29, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v3 = OUTLINED_FUNCTION_7_22();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v28 + 104))(v3, *MEMORY[0x1E0DEF740], v27);
  v30 = _dispatchPreconditionTest(_:)();
  v31 = (*(uint64_t (**)(uint64_t *, uint64_t))(v28 + 8))(v3, v27);
  if ((v30 & 1) == 0)
  {
    __break(1u);
LABEL_44:
    v137.a = 0.0;
    v137.b = -2.68156159e154;
    v100 = v32;
    _StringGuts.grow(_:)(64);
    v101._object = (void *)0x80000001BD673310;
    v101._countAndFlagsBits = 0xD00000000000003ELL;
    String.append(_:)(v101);
    v139 = v100;
    v102._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v102);
    OUTLINED_FUNCTION_2_1();
    v104 = 0;
    v103 = 408;
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    JUMPOUT(0x1BD1EEABCLL);
  }
  MEMORY[0x1E0C80A78](v31);
  v103 = a1;
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_155((uint64_t (*)(char *))partial apply for closure #1 in ParticipantGridView.updateViews(for:localParticipantOrientation:), (uint64_t)&v105[-4]);
  v34 = OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_deviceOrientation;
  v119 = *(_QWORD *)(v4 + OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_deviceOrientation);
  *(_QWORD *)(v4 + OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_deviceOrientation) = a2;
  v35 = *(_QWORD *)(v33 + 16);
  if (v35)
  {
    v114 = v34;
    v121 = a1;
    v105[1] = v33;
    v106 = a2;
    v124 = v4;
    v36 = v4 + OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_delegate;
    v37 = *(unsigned __int8 *)(v23 + 80);
    v38 = v33 + ((v37 + 32) & ~v37);
    v131 = v4 + OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_fullScreenFocusedParticipantInfo;
    OUTLINED_FUNCTION_1();
    v123 = v36;
    OUTLINED_FUNCTION_1();
    v112 = v37 | 7;
    v113 = (v37 + 16) & ~v37;
    v111 = (v24 + v113 + 7) & 0xFFFFFFFFFFFFFFF8;
    v110 = v111 + 48;
    v125 = *(_QWORD *)(v23 + 72);
    v39 = v128;
    v40 = v130;
    v41 = v133;
    while (1)
    {
      v42 = (uint64_t)v39;
      outlined init with copy of ConversationControlsAppLaunchButtonType(v38, v41, type metadata accessor for ParticipantGridView.IdentifiableParticipantTile);
      v43 = v126;
      outlined init with copy of ConversationControlsAppLaunchButtonType(v41, v126, type metadata accessor for ParticipantGridView.ParticipantTileInfo);
      v44 = *(void (**)(uint64_t, uint64_t, uint64_t))(v132 + 32);
      v45 = v134;
      v44(v40, v43, v134);
      v46 = 1;
      OUTLINED_FUNCTION_83_7(v40, 0);
      *(_QWORD *)&v129 = type metadata accessor for ParticipantGridView.FullScreenFocusedParticipantInfo(0);
      if (!__swift_getEnumTagSinglePayload(v131, 1, v129))
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v132 + 16))(v135, v131, v45);
        v46 = 0;
      }
      v47 = v135;
      OUTLINED_FUNCTION_83_7(v135, v46);
      v48 = v136;
      v49 = v136 + *(int *)(v127 + 48);
      outlined init with copy of FeatureEligibility?(v40, v136, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      v50 = v134;
      OUTLINED_FUNCTION_123_3(v47, v49);
      OUTLINED_FUNCTION_69_0(v48, 1, v50);
      if (v51)
      {
        OUTLINED_FUNCTION_43_0(v135);
        OUTLINED_FUNCTION_43_0(v40);
        OUTLINED_FUNCTION_69_0(v49, 1, v50);
        if (!v51)
          goto LABEL_14;
        OUTLINED_FUNCTION_43_0(v136);
      }
      else
      {
        OUTLINED_FUNCTION_123_3(v136, v42);
        OUTLINED_FUNCTION_69_0(v49, 1, v50);
        if (v51)
        {
          OUTLINED_FUNCTION_43_0(v135);
          OUTLINED_FUNCTION_43_0(v40);
          (*(void (**)(uint64_t, uint64_t))(v132 + 8))(v42, v50);
LABEL_14:
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v136, (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
LABEL_15:
          v52 = v133 + *(int *)(v122 + 20);
          v53 = *(void **)v52;
          v54 = *(_QWORD *)(v52 + 8);
          v55 = (void *)objc_opt_self();
          v56 = v53;
          v57 = objc_msgSend(v55, sel_currentDevice);
          v39 = objc_msgSend(v57, sel_userInterfaceIdiom);

          b = 0.0;
          a = 1.0;
          if (!v39)
          {
            OUTLINED_FUNCTION_1();
            if ((static AmbientState.isPresented & 1) == 0)
            {
              v32 = v106;
              v39 = v128;
              c = 0.0;
              d = 1.0;
              tx = 0.0;
              ty = 0.0;
              switch(v106)
              {
                case 0:
                  v97 = 1.57079633;
                  goto LABEL_37;
                case 1:
                  goto LABEL_38;
                case 2:
                  v97 = -1.57079633;
                  goto LABEL_37;
                case 3:
                  v97 = 3.14159265;
LABEL_37:
                  CGAffineTransformMakeRotation(&v137, v97);
                  a = v137.a;
                  b = v137.b;
                  c = v137.c;
                  d = v137.d;
                  tx = v137.tx;
                  ty = v137.ty;
                  goto LABEL_38;
                default:
                  goto LABEL_44;
              }
            }
          }
          c = OUTLINED_FUNCTION_114_5();
LABEL_38:
          *(CGFloat *)v140 = a;
          *(CGFloat *)&v140[1] = b;
          *(double *)&v140[2] = c;
          *(CGFloat *)&v140[3] = d;
          *(CGFloat *)&v140[4] = tx;
          *(CGFloat *)&v140[5] = ty;
          v98 = OUTLINED_FUNCTION_15_6();
          (*(void (**)(_QWORD *, uint64_t, uint64_t))(v54 + 88))(v140, v98, v54);

          v41 = v133;
          goto LABEL_39;
        }
        v64 = v42;
        v65 = v50;
        v66 = v107;
        v44(v107, v49, v65);
        _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
        v67 = dispatch thunk of static Equatable.== infix(_:_:)();
        v68 = *(void (**)(uint64_t, uint64_t))(v132 + 8);
        v68(v66, v65);
        OUTLINED_FUNCTION_43_0(v135);
        OUTLINED_FUNCTION_43_0(v130);
        v69 = v136;
        v68(v64, v65);
        OUTLINED_FUNCTION_43_0(v69);
        if ((v67 & 1) == 0)
          goto LABEL_15;
      }
      v70 = v114;
      if (v119 == *(_QWORD *)(v124 + v114)
        || !MEMORY[0x1C3B752C0](v123)
        || (v71 = *(_QWORD *)(v123 + 8),
            ObjectType = swift_getObjectType(),
            v73 = (*(uint64_t (**)(uint64_t, uint64_t))(v71 + 112))(ObjectType, v71),
            v75 = v74,
            OUTLINED_FUNCTION_10(),
            (v75 & 1) != 0)
        || v73)
      {
        outlined destroy of RecentsCallItem(v133, type metadata accessor for ParticipantGridView.IdentifiableParticipantTile);
        return swift_bridgeObjectRelease();
      }
      v76 = *(_QWORD *)(v124 + v70);
      v77 = v116;
      OUTLINED_FUNCTION_95_1(v121, v116);
      if (swift_getEnumCaseMultiPayload() != 4)
        break;
      v78 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      OUTLINED_FUNCTION_7_2((uint64_t *)(v77 + *(int *)(v78 + 64)));
      OUTLINED_FUNCTION_148(&v137);
      OUTLINED_FUNCTION_33();
      OUTLINED_FUNCTION_106_3();
      v79(v77);
      v80 = v137.c;
      v81 = v138;
      OUTLINED_FUNCTION_5_0();
      outlined destroy of Participant.MediaInfo((uint64_t)&v137);
      v82 = v131;
      if (v80 == 0.0)
        goto LABEL_29;
      OUTLINED_FUNCTION_27();
      if ((v81 & 0x100) == 0)
        goto LABEL_29;
      v83 = 1;
      v39 = v128;
LABEL_32:
      OUTLINED_FUNCTION_48_4(v82);
      static ParticipantGridView.remoteParticipantRotationAngle(localOrientation:remoteOrientation:shouldReverse:)(v76, v83);
      CGAffineTransformMakeRotation(&v137, v88);
      v129 = *(_OWORD *)&v137.a;
      v120 = *(_OWORD *)&v137.c;
      v89 = v137.tx;
      v90 = v137.ty;
      v91 = (void *)objc_opt_self();
      v41 = v133;
      v92 = v115;
      outlined init with copy of ConversationControlsAppLaunchButtonType(v133, v115, type metadata accessor for ParticipantGridView.IdentifiableParticipantTile);
      v93 = swift_allocObject();
      outlined init with take of StagedCollaboration(v92, v93 + v113, type metadata accessor for ParticipantGridView.IdentifiableParticipantTile);
      v94 = v93 + v111;
      v95 = v120;
      *(_OWORD *)v94 = v129;
      *(_OWORD *)(v94 + 16) = v95;
      *(CGFloat *)(v94 + 32) = v89;
      *(CGFloat *)(v94 + 40) = v90;
      *(_QWORD *)&v137.tx = partial apply for closure #3 in ParticipantGridView.updateViews(for:localParticipantOrientation:);
      *(_QWORD *)&v137.ty = v93;
      *(_QWORD *)&v137.a = MEMORY[0x1E0C809B0];
      *(_QWORD *)&v137.b = 1107296256;
      *(_QWORD *)&v137.c = thunk for @escaping @callee_guaranteed () -> ();
      *(_QWORD *)&v137.d = &block_descriptor_39;
      v96 = _Block_copy(&v137);
      swift_release();
      objc_msgSend(v91, sel_animateWithDuration_animations_, v96, 0.4);
      _Block_release(v96);
LABEL_39:
      outlined destroy of RecentsCallItem(v41, type metadata accessor for ParticipantGridView.IdentifiableParticipantTile);
      v38 += v125;
      --v35;
      v40 = v130;
      if (!v35)
        return swift_bridgeObjectRelease();
    }
    OUTLINED_FUNCTION_105_2(v77);
    v82 = v131;
LABEL_29:
    v84 = v109;
    v85 = v133 + *(int *)(v108 + 24);
    v83 = *(_QWORD *)v85;
    v86 = *(unsigned __int8 *)(v85 + 8);
    outlined init with copy of ConversationControlsAppLaunchButtonType(v121, v109, type metadata accessor for Participant);
    if (v86 == 1)
    {
      ParticipantGridView.orientation(for:default:)();
      v83 = v87;
    }
    v39 = v128;
    outlined destroy of RecentsCallItem(v84, type metadata accessor for Participant);
    goto LABEL_32;
  }
  return swift_bridgeObjectRelease();
}

void ParticipantGridView.orientation(for:default:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  int v5;
  int v6;
  _BYTE *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  unsigned int v13;
  uint64_t v14;
  char v15;
  _BOOL4 v16;
  _BOOL4 v17;
  _BYTE v18[24];
  _BYTE v19[80];
  _BYTE v20[80];
  _QWORD v21[10];
  _QWORD v22[9];
  char v23;
  _QWORD v24[9];
  char v25;

  OUTLINED_FUNCTION_93();
  v2 = v1;
  if (!objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_featureFlags), sel_uPlusOneFullBleedHandoffEnabled))
  {
    v7 = v22;
    OUTLINED_FUNCTION_53_19();
    outlined init with take of Any?((uint64_t)v22, (uint64_t)v24, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
    if (!v24[0])
      goto LABEL_25;
LABEL_24:
    outlined release of LinearGradient((uint64_t)v7);
    goto LABEL_25;
  }
  OUTLINED_FUNCTION_134_0();
  ParticipantGridView.VideoInfoCache.info(for:)(v2, (uint64_t)v18);
  swift_release();
  outlined init with take of Any?((uint64_t)v18, (uint64_t)v24, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
  v3 = v24[0];
  if (v24[0])
  {
    v4 = v25;
    outlined release of LinearGradient((uint64_t)v18);
    v5 = v4 & 1;
    v6 = v5;
  }
  else
  {
    v6 = 0;
    v5 = 1;
  }
  v8 = (uint64_t *)(v0 + OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_frozenFrameOverlayState);
  OUTLINED_FUNCTION_2_0();
  v9 = *v8;
  if (*(_QWORD *)(v9 + 16) && (v10 = OUTLINED_FUNCTION_14_2(), v11 = OUTLINED_FUNCTION_140_3(v10), (v12 & 1) != 0))
  {
    v13 = *(unsigned __int16 *)(*(_QWORD *)(v9 + 56) + 80 * v11 + 72);
    swift_endAccess();
    if (v13 >> 14 <= 2)
      goto LABEL_25;
  }
  else
  {
    swift_endAccess();
  }
  OUTLINED_FUNCTION_53_19();
  outlined init with take of Any?((uint64_t)v19, (uint64_t)v22, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
  v14 = v22[0];
  if (v22[0])
  {
    v15 = v23;
    outlined release of LinearGradient((uint64_t)v19);
    v16 = (v15 & 1) == 0;
  }
  else
  {
    v16 = 1;
  }
  if ((ParticipantGridView.isOneToOneMode.getter() & 1) == 0)
    goto LABEL_23;
  if (!v14)
  {
    if (!v5)
      goto LABEL_25;
    goto LABEL_23;
  }
  v17 = !v3 || v16;
  if (((v17 | v6) & 1) != 0)
  {
LABEL_23:
    v7 = v20;
    OUTLINED_FUNCTION_53_19();
    outlined init with take of Any?((uint64_t)v20, (uint64_t)v21, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
    if (!v21[0])
      goto LABEL_25;
    goto LABEL_24;
  }
LABEL_25:
  OUTLINED_FUNCTION_52_1();
}

uint64_t static ParticipantGridView.remoteParticipantRotationAngle(localOrientation:remoteOrientation:shouldReverse:)(uint64_t result, uint64_t a2)
{
  Swift::String v2;

  switch(result)
  {
    case 0:
      switch(a2)
      {
        case 0:
        case 1:
        case 2:
        case 3:
          return result;
        default:
          goto LABEL_6;
      }
    case 1:
      switch(a2)
      {
        case 0:
        case 1:
        case 2:
        case 3:
          return result;
        default:
          goto LABEL_6;
      }
    case 2:
      switch(a2)
      {
        case 0:
        case 1:
        case 2:
        case 3:
          return result;
        default:
          goto LABEL_6;
      }
    case 3:
      switch(a2)
      {
        case 0:
        case 1:
        case 2:
        case 3:
          return result;
        default:
          goto LABEL_6;
      }
    default:
LABEL_6:
      _StringGuts.grow(_:)(28);
      swift_bridgeObjectRelease();
      type metadata accessor for CNKDeviceOrientation(0);
      v2._countAndFlagsBits = String.init<A>(reflecting:)();
      String.append(_:)(v2);
      swift_bridgeObjectRelease();
      result = _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
      break;
  }
  return result;
}

id closure #3 in ParticipantGridView.updateViews(for:localParticipantOrientation:)(uint64_t a1, __int128 *a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  __int128 v6;
  __int128 v7;
  _OWORD v8[2];
  uint64_t v9;
  uint64_t v10;

  v6 = a2[1];
  v7 = *a2;
  v2 = *((_QWORD *)a2 + 4);
  v3 = *((_QWORD *)a2 + 5);
  v4 = *(void **)(a1 + *(int *)(type metadata accessor for ParticipantGridView.IdentifiableParticipantTile(0) + 20));
  v8[0] = v7;
  v8[1] = v6;
  v9 = v2;
  v10 = v3;
  return objc_msgSend(v4, sel_setTransform_, v8);
}

Swift::Void __swiftcall ParticipantGridView.updateLocalViews(for:isLocalMemberAuthorizedToChangeGroupMembership:)(Swift::OpaquePointer a1, Swift::Bool isLocalMemberAuthorizedToChangeGroupMembership)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  _BOOL4 v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  _BYTE *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  double v48;
  double v49;
  uint64_t (*v50)(uint64_t, uint64_t, uint64_t);
  _QWORD *v51;
  BOOL v52;
  double v53;
  double v54;
  void (*v55)(_QWORD *, uint64_t);
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  BOOL v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  void *v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  const void *v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  _QWORD v86[3];
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _BOOL4 v93;
  char *v94;
  uint64_t v95;
  char *v96;
  _QWORD *v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD v106[42];
  _QWORD v107[27];
  _BYTE v108[216];

  v5 = v2;
  v6 = isLocalMemberAuthorizedToChangeGroupMembership;
  v103 = OUTLINED_FUNCTION_144_1();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_5_27();
  v87 = v9;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_18_0();
  v88 = v11;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v86 - v13;
  v15 = OUTLINED_FUNCTION_33();
  v101 = *(_QWORD *)(v15 - 8);
  v102 = v15;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_5_27();
  v98 = v17;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v18);
  OUTLINED_FUNCTION_62();
  v100 = v19;
  v104 = OUTLINED_FUNCTION_14_2();
  v86[2] = *(_QWORD *)(v104 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v20);
  OUTLINED_FUNCTION_5_27();
  v92 = v21;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v22);
  OUTLINED_FUNCTION_18_0();
  v90 = v23;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v24);
  OUTLINED_FUNCTION_18_0();
  v105 = v25;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v26);
  OUTLINED_FUNCTION_18_0();
  v91 = v27;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v28);
  OUTLINED_FUNCTION_18_0();
  v97 = v29;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v30);
  v32 = (char *)v86 - v31;
  OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_133_2();
  MEMORY[0x1E0C80A78](v33);
  OUTLINED_FUNCTION_83_4();
  OUTLINED_FUNCTION_59(v34, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v4 = OUTLINED_FUNCTION_7_22();
  (*(void (**)(uint64_t *, _QWORD))(v3 + 104))(v4, *MEMORY[0x1E0DEF740]);
  v35 = _dispatchPreconditionTest(_:)();
  (*(void (**)())(v3 + 8))();
  if ((v35 & 1) != 0)
  {
    v36 = (_BYTE *)(v5
                  + OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_isLocalMemberAuthorizedToChangeGroupMembership);
    OUTLINED_FUNCTION_2_0();
    v93 = v6;
    *v36 = v6;
    v37 = MEMORY[0x1E0DEE9D8];
    v106[0] = MEMORY[0x1E0DEE9D8];
    v38 = *((_QWORD *)a1._rawValue + 2);
    swift_bridgeObjectRetain();
    v99 = v5;
    if (v38)
    {
      v96 = v32 + 3;
      OUTLINED_FUNCTION_30_36();
      v40 = *(_QWORD *)(v39 + 72);
      v86[1] = v41;
      v89 = v42;
      v43 = v41 + v42;
      v94 = v14;
      v95 = v40;
      while (1)
      {
        OUTLINED_FUNCTION_95_1(v43, (uint64_t)v32);
        OUTLINED_FUNCTION_259((uint64_t)v32, (uint64_t)v14);
        if (OUTLINED_FUNCTION_120_1() == 4)
        {
          v44 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
          v45 = (uint64_t)&v14[*(int *)(v44 + 48)];
          OUTLINED_FUNCTION_7_2((uint64_t *)&v14[*(int *)(v44 + 64)]);
          v46 = v100;
          v47 = v101;
          OUTLINED_FUNCTION_93_4(v100, (uint64_t)v14, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v101 + 32));
          outlined destroy of Participant.MediaInfo(v45);
          Date.timeIntervalSinceNow.getter();
          v49 = v48;
          v50 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v47 + 16);
          v51 = v98;
          OUTLINED_FUNCTION_93_4((uint64_t)v98, v46, v50);
          if (v49 <= 0.0)
          {
            Date.timeIntervalSinceNow.getter();
            v54 = v53;
            if (one-time initialization token for shared != -1)
              swift_once();
            v52 = -v54 <= (double)(*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 696))();
          }
          else
          {
            v52 = 0;
          }
          v55 = *(void (**)(_QWORD *, uint64_t))(v101 + 8);
          v56 = v51;
          v57 = v102;
          v55(v56, v102);
          v55((_QWORD *)v100, v57);
          v58 = v104;
          v59 = v97;
          LODWORD(v55) = v96[*(int *)(v104 + 24)];
          OUTLINED_FUNCTION_95_1((uint64_t)v32, (uint64_t)v97);
          if ((_DWORD)v55 == 1)
          {
            v60 = *(_QWORD *)((char *)v59 + *(int *)(v58 + 28));
            OUTLINED_FUNCTION_105_2((uint64_t)v59);
            if (v60)
              v61 = v52;
            else
              v61 = 0;
            v14 = v94;
            v40 = v95;
            if (v61)
            {
              OUTLINED_FUNCTION_153_0((uint64_t)v32, v91);
              v62 = v106[0];
              if ((OUTLINED_FUNCTION_83_8() & 1) == 0)
              {
                specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(_QWORD *)(v62 + 16) + 1, 1);
                v62 = v106[0];
              }
              v64 = *(_QWORD *)(v62 + 16);
              v63 = *(_QWORD *)(v62 + 24);
              if (v64 >= v63 >> 1)
              {
                specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v63 > 1, v64 + 1, 1);
                v62 = v106[0];
              }
              *(_QWORD *)(v62 + 16) = v64 + 1;
              OUTLINED_FUNCTION_153_0(v91, v62 + v89 + v64 * v40);
              goto LABEL_23;
            }
          }
          else
          {
            OUTLINED_FUNCTION_105_2((uint64_t)v59);
            v14 = v94;
            v40 = v95;
          }
        }
        else
        {
          OUTLINED_FUNCTION_295_0((uint64_t)v14);
        }
        OUTLINED_FUNCTION_105_2((uint64_t)v32);
LABEL_23:
        v43 += v40;
        if (!--v38)
        {
          v65 = v106[0];
          goto LABEL_26;
        }
      }
    }
    v65 = v37;
LABEL_26:
    swift_bridgeObjectRelease();
    v66 = *(_QWORD *)(v65 + 16);
    v67 = v90;
    v68 = v105;
    if (v66)
    {
      OUTLINED_FUNCTION_42_24();
      OUTLINED_FUNCTION_30_36();
      v96 = (char *)v65;
      v70 = v65 + v69;
      v100 = *(_QWORD *)(v71 + 72);
      v98 = &v107[4];
      v97 = &v106[12];
      while (1)
      {
        OUTLINED_FUNCTION_122(v70, v68);
        v72 = OUTLINED_FUNCTION_119();
        if (v72)
          break;
LABEL_49:
        v68 = v105;
        OUTLINED_FUNCTION_129_1(v105);
        v70 += v100;
        if (!--v66)
          goto LABEL_50;
      }
      v73 = v72;
      if (!swift_dynamicCastClass())
      {
LABEL_48:

        goto LABEL_49;
      }
      OUTLINED_FUNCTION_122(v105, v67);
      if (!v93)
      {
        v80 = 0;
LABEL_47:
        OUTLINED_FUNCTION_129_1(v67);
        ParticipantView.setKickMemberButtonIsVisible(_:)(v80);
        goto LABEL_48;
      }
      if (one-time initialization token for shared != -1)
        swift_once();
      v74 = OUTLINED_FUNCTION_137_3();
      v75 = v67;
      v76 = v92;
      OUTLINED_FUNCTION_122(v75, v92);
      if ((v74 & 1) == 0)
      {
        v80 = 1;
        v81 = v76;
        v67 = v90;
LABEL_46:
        OUTLINED_FUNCTION_129_1(v81);
        goto LABEL_47;
      }
      v77 = v88;
      outlined init with copy of ConversationControlsAppLaunchButtonType(v76, v88, type metadata accessor for Participant.State);
      if (OUTLINED_FUNCTION_120_1() == 4)
      {
        v78 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        v79 = (const void *)(v77 + *(int *)(v78 + 48));
        OUTLINED_FUNCTION_7_2((uint64_t *)(v77 + *(int *)(v78 + 64)));
        memcpy(v106, v79, sizeof(v106));
        (*(void (**)(uint64_t, uint64_t))(v101 + 8))(v77, v102);
        outlined init with copy of FeatureEligibility?((uint64_t)v97, (uint64_t)v107, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
        outlined destroy of Participant.MediaInfo((uint64_t)v106);
        v67 = v90;
        if (v107[3] != 1)
        {
          memcpy(v108, v107, 0xD1uLL);
          v80 = v108[96];
          outlined destroy of Participant.ScreenInfo((uint64_t)v108);
LABEL_45:
          v81 = v92;
          goto LABEL_46;
        }
      }
      else
      {
        outlined destroy of RecentsCallItem(v77, type metadata accessor for Participant.State);
        memset(v107, 0, 24);
        v107[3] = 1;
        bzero(v98, 0xB1uLL);
        v67 = v90;
      }
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v107, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
      v82 = v87;
      outlined init with copy of ConversationControlsAppLaunchButtonType(v92, v87, type metadata accessor for Participant.State);
      if (OUTLINED_FUNCTION_120_1() == 4)
      {
        v83 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        OUTLINED_FUNCTION_7_2((uint64_t *)(v82 + *(int *)(v83 + 64)));
        OUTLINED_FUNCTION_148(v106);
        (*(void (**)(uint64_t, uint64_t))(v101 + 8))(v82, v102);
        v84 = v106[2];
        v85 = v106[11];
        OUTLINED_FUNCTION_5_0();
        outlined destroy of Participant.MediaInfo((uint64_t)v106);
        if (v84)
        {
          OUTLINED_FUNCTION_27();
          v80 = v85 & 1;
        }
        else
        {
          v80 = 1;
        }
      }
      else
      {
        outlined destroy of RecentsCallItem(v82, type metadata accessor for Participant.State);
        v80 = 1;
      }
      goto LABEL_45;
    }
LABEL_50:
    swift_release();
  }
  else
  {
    __break(1u);
  }
}

void ParticipantGridView.updateKickingAvailable(for:isKickingAvailable:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;

  OUTLINED_FUNCTION_93();
  v5 = v4;
  OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_30_6();
  OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_41_1();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_77_1();
  OUTLINED_FUNCTION_59(v8, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v2 = OUTLINED_FUNCTION_7_22();
  OUTLINED_FUNCTION_72_12(*MEMORY[0x1E0DEF740], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 104));
  OUTLINED_FUNCTION_145_0();
  OUTLINED_FUNCTION_60_17();
  if ((v1 & 1) != 0)
  {
    OUTLINED_FUNCTION_42_24();
    v9 = OUTLINED_FUNCTION_119();
    if (!v9)
    {
LABEL_11:
      OUTLINED_FUNCTION_52_1();
      return;
    }
    v10 = v9;
    v11 = swift_dynamicCastClass();
    if (!v11)
    {
LABEL_10:

      goto LABEL_11;
    }
    if ((v5 & 1) != 0)
    {
      v13 = (unsigned __int8 *)(v1
                              + OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_isLocalMemberAuthorizedToChangeGroupMembership);
      v14 = OUTLINED_FUNCTION_1();
      LODWORD(v13) = *v13;
      OUTLINED_FUNCTION_128_1(v14, v15, type metadata accessor for Participant);
      if ((_DWORD)v13 == 1)
      {
        Participant.canShowKickButtonOnVideoTile.getter();
        v17 = v16;
LABEL_9:
        outlined destroy of RecentsCallItem(v0, type metadata accessor for Participant);
        ParticipantView.setKickMemberButtonIsVisible(_:)(v17 & 1);
        goto LABEL_10;
      }
    }
    else
    {
      OUTLINED_FUNCTION_128_1(v11, v12, type metadata accessor for Participant);
    }
    v17 = 0;
    goto LABEL_9;
  }
  __break(1u);
}

void ParticipantGridView.updateAudioPower(for:audioPower:)(Swift::Float a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  id v8;
  void *v9;

  OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_15_56();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_59(v5, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v6 = OUTLINED_FUNCTION_7_22();
  *v1 = v6;
  OUTLINED_FUNCTION_17(v6, *MEMORY[0x1E0DEF740]);
  v7 = _dispatchPreconditionTest(_:)();
  OUTLINED_FUNCTION_40_0(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  if ((v7 & 1) != 0)
  {
    OUTLINED_FUNCTION_14_2();
    OUTLINED_FUNCTION_42_24();
    OUTLINED_FUNCTION_64();
    v8 = ParticipantGridView.tile(for:ofAClass:)();
    if (v8)
    {
      v9 = v8;
      if (swift_dynamicCastClass())
        ParticipantMonogramView.updateAudioVisualization(with:)(a1);

    }
  }
  else
  {
    __break(1u);
  }
}

void ParticipantGridView.updateGradientOverlayView(for:isHidden:alpha:)()
{
  void *v0;
  uint64_t *v1;
  uint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_93();
  v4 = v3;
  v6 = v5;
  v8 = v7;
  OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_41_1();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_77_1();
  OUTLINED_FUNCTION_59(v10, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v1 = OUTLINED_FUNCTION_7_22();
  OUTLINED_FUNCTION_72_12(*MEMORY[0x1E0DEF740], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 104));
  OUTLINED_FUNCTION_145_0();
  OUTLINED_FUNCTION_60_17();
  if ((v0 & 1) != 0)
  {
    OUTLINED_FUNCTION_14_2();
    OUTLINED_FUNCTION_42_24();
    if (ParticipantGridView.tile(for:ofAClass:)())
    {
      if (OUTLINED_FUNCTION_156_0())
        ParticipantView.updateGradientOverlayView(isHidden:alpha:)(v8, v6, v4 & 1);

    }
    OUTLINED_FUNCTION_52_1();
  }
  else
  {
    __break(1u);
  }
}

void ParticipantGridView.updateVisibleCameraPosition(for:visibleCameraPosition:animated:)(void *a1, char a2, char a3)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v6 = v3;
  OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_19_11();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_59(v11, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v4 = OUTLINED_FUNCTION_7_22();
  OUTLINED_FUNCTION_131_2(*MEMORY[0x1E0DEF740], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 104));
  v12 = OUTLINED_FUNCTION_132_2();
  OUTLINED_FUNCTION_29_2(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  if ((v12 & 1) != 0)
  {
    OUTLINED_FUNCTION_14_2();
    OUTLINED_FUNCTION_42_24();
    if (OUTLINED_FUNCTION_119())
    {
      if (OUTLINED_FUNCTION_156_0())
        ParticipantVideoView.updateVideoLayers(with:localDeviceOrientation:isLocal:animated:)(a2, *(_QWORD *)(v6 + OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_deviceOrientation), 0, a3 & 1);

    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t ParticipantGridView.updateEMA(for:ema:audioPriority:videoPriority:)(uint64_t a1, double a2, float a3, float a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  float v19;
  float v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t (*v27)(_QWORD);
  Swift::String v28;
  Swift::String v29;
  float v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  Swift::String v34;
  float v35;
  uint64_t v36;
  void *v37;
  uint64_t ObjectType;
  Swift::String v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;

  v9 = type metadata accessor for ParticipantGridView.IdentifiableParticipantTile(0);
  OUTLINED_FUNCTION_19_11();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_41();
  v43 = v11;
  v12 = OUTLINED_FUNCTION_8_13();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_59(v14, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v4 = OUTLINED_FUNCTION_7_22();
  OUTLINED_FUNCTION_131_2(*MEMORY[0x1E0DEF740], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 104));
  v15 = OUTLINED_FUNCTION_132_2();
  result = OUTLINED_FUNCTION_29_2(*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8));
  if ((v15 & 1) != 0)
  {
    MEMORY[0x1E0C80A78](result);
    *(&v40 - 2) = a1;
    OUTLINED_FUNCTION_5_0();
    OUTLINED_FUNCTION_155((uint64_t (*)(char *))partial apply for closure #1 in ParticipantGridView.updateEMA(for:ema:audioPriority:videoPriority:), (uint64_t)(&v40 - 4));
    v18 = *(_QWORD *)(v17 + 16);
    if (v18)
    {
      v41 = v43 + *(int *)(v9 + 20);
      v19 = a3 + 0.01;
      v20 = a4 + 0.01;
      OUTLINED_FUNCTION_37_3();
      v40 = v21;
      v23 = v21 + v22;
      v42 = *(_QWORD *)(v5 + 72);
      do
      {
        outlined init with copy of ConversationControlsAppLaunchButtonType(v23, v43, type metadata accessor for ParticipantGridView.IdentifiableParticipantTile);
        v24 = *(void **)v41;
        v44 = *(_QWORD *)(v41 + 8);
        v25 = v24;
        v26 = OUTLINED_FUNCTION_64();
        outlined destroy of RecentsCallItem(v26, v27);
        v45 = 0;
        v46 = 0xE000000000000000;
        _StringGuts.grow(_:)(35);
        v28._countAndFlagsBits = 0x203A414D45;
        v28._object = (void *)0xE500000000000000;
        String.append(_:)(v28);
        OUTLINED_FUNCTION_65_12();
        v29._countAndFlagsBits = 0x3A6863656570530ALL;
        v29._object = (void *)0xE900000000000020;
        String.append(_:)(v29);
        if (one-time initialization token for shared != -1)
          swift_once();
        OUTLINED_FUNCTION_92_5();
        if (v30 >= v19)
          v31 = 0x65736C6166;
        else
          v31 = 1702195828;
        if (v30 >= v19)
          v32 = 0xE500000000000000;
        else
          v32 = 0xE400000000000000;
        v33 = v32;
        String.append(_:)(*(Swift::String *)&v31);
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_47_0(40);
        OUTLINED_FUNCTION_65_12();
        v34._countAndFlagsBits = 0x203A6E6769530A29;
        v34._object = (void *)0xE800000000000000;
        String.append(_:)(v34);
        OUTLINED_FUNCTION_92_5();
        if (v35 >= v20)
          v36 = 0x65736C6166;
        else
          v36 = 1702195828;
        if (v35 >= v20)
          v37 = (void *)0xE500000000000000;
        else
          v37 = (void *)0xE400000000000000;
        ObjectType = swift_getObjectType();
        v39._countAndFlagsBits = v36;
        v39._object = v37;
        String.append(_:)(v39);
        OUTLINED_FUNCTION_2_1();
        OUTLINED_FUNCTION_47_0(40);
        OUTLINED_FUNCTION_65_12();
        OUTLINED_FUNCTION_47_0(41);
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v44 + 80))(v45, v46, ObjectType);

        OUTLINED_FUNCTION_2_1();
        v23 += v42;
        --v18;
      }
      while (v18);
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t closure #1 in ParticipantGridView.updateViews(for:localParticipantOrientation:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v11;

  type metadata accessor for ParticipantGridView.ParticipantTileInfo(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for UUID();
  OUTLINED_FUNCTION_41_1();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_77_1();
  outlined init with copy of ConversationControlsAppLaunchButtonType(a1, (uint64_t)v6, type metadata accessor for ParticipantGridView.ParticipantTileInfo);
  (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v1, v6, v7);
  type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_141_1();
  v9 = static UUID.== infix(_:_:)();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v7);
  return v9 & 1;
}

void ParticipantGridView.aspectRatio(for:default:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int8x16_t *v4;
  int8x16_t *v5;
  uint64_t v6;
  __int8 v7;
  uint64_t v8;
  char v9;
  int v10;
  char v11;
  _BYTE *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  int v18;
  uint64_t v19;
  char v20;
  _BOOL4 v21;
  int8x16_t v22;
  int8x16_t v23;
  int v24;
  int64x2_t v25;
  int64x2_t v26;
  int8x16_t v27;
  int8x16_t v28;
  int8x16_t v29;
  int v30;
  int8x16_t v31;
  int8x16_t v32;
  int8x16_t v33;
  int8x16_t v34;
  _BYTE v35[80];
  _BYTE v36[80];
  _BYTE v37[80];
  _OWORD v38[2];
  __int8 v39;
  uint64_t v40[5];
  int8x16_t v41;
  int8x16_t v42;
  char v43;
  _QWORD v44[9];
  char v45;
  _QWORD v46[5];
  int8x16_t v47;
  int8x16_t v48;
  char v49;

  OUTLINED_FUNCTION_93();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  outlined init with take of AspectRatio(v6, (uint64_t)v38);
  v33 = (int8x16_t)v38[0];
  v34 = (int8x16_t)v38[1];
  v7 = v39;
  if (objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_featureFlags), sel_uPlusOneFullBleedHandoffEnabled))
  {
    OUTLINED_FUNCTION_134_0();
    ParticipantGridView.VideoInfoCache.info(for:)(v3, (uint64_t)v35);
    swift_release();
    outlined init with take of Any?((uint64_t)v35, (uint64_t)v46, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
    v8 = v46[0];
    if (v46[0])
    {
      v28 = v48;
      v29 = v47;
      v9 = v49;
      outlined release of LinearGradient((uint64_t)v35);
      v10 = v9 & 1;
      v30 = v10;
    }
    else
    {
      v30 = 0;
      v28 = 0u;
      v29 = 0u;
      v10 = 1;
    }
    v13 = (uint64_t *)(v1 + OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_frozenFrameOverlayState);
    OUTLINED_FUNCTION_2_0();
    v14 = *v13;
    if (*(_QWORD *)(v14 + 16))
    {
      v15 = OUTLINED_FUNCTION_14_2();
      v16 = OUTLINED_FUNCTION_140_3(v15);
      if ((v17 & 1) != 0)
      {
        v18 = *(unsigned __int16 *)(*(_QWORD *)(v14 + 56) + 80 * v16 + 72);
        swift_endAccess();
        __asm { BR              X10 }
      }
    }
    swift_endAccess();
    OUTLINED_FUNCTION_53_19();
    outlined init with take of Any?((uint64_t)v36, (uint64_t)v44, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
    v19 = v44[0];
    if (v44[0])
    {
      v20 = v45;
      outlined release of LinearGradient((uint64_t)v36);
      v21 = (v20 & 1) == 0;
    }
    else
    {
      v21 = 1;
    }
    if ((ParticipantGridView.isOneToOneMode.getter() & 1) == 0)
      goto LABEL_20;
    if (v19)
    {
      if (v8)
        v24 = v21;
      else
        v24 = 1;
      if (((v24 | v30) & 1) != 0)
        goto LABEL_20;
    }
    else if (v10)
    {
LABEL_20:
      OUTLINED_FUNCTION_53_19();
      outlined init with take of Any?((uint64_t)v37, (uint64_t)v40, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
      if (v40[0])
      {
        v31 = v41;
        v32 = v42;
        v11 = v43;
        v12 = v37;
        goto LABEL_22;
      }
      v25.i64[0] = 0;
      v26.i64[0] = v8;
      v27 = (int8x16_t)vdupq_lane_s64(vceqq_s64(v26, v25).i64[0], 0);
      v23 = vbslq_s8(v27, v34, v28);
      v22 = vbslq_s8(v27, v33, v29);
      if (v8)
        v7 = v30;
      goto LABEL_23;
    }
    v7 = 0;
    v23 = v28;
    v22 = v29;
    goto LABEL_23;
  }
  OUTLINED_FUNCTION_53_19();
  outlined init with take of Any?((uint64_t)v44, (uint64_t)v46, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
  if (v46[0])
  {
    v31 = v47;
    v32 = v48;
    v11 = v49;
    v12 = v44;
LABEL_22:
    outlined release of LinearGradient((uint64_t)v12);
    v22 = v31;
    v23 = v32;
    v7 = v11 & 1;
    goto LABEL_23;
  }
  v22 = v33;
  v23 = v34;
LABEL_23:
  *v5 = v22;
  v5[1] = v23;
  v5[2].i8[0] = v7;
  OUTLINED_FUNCTION_52_1();
}

uint64_t ParticipantGridView.updateCacheIfNeeded(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD v21[5];

  result = (uint64_t)objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_featureFlags), sel_uPlusOneFullBleedHandoffEnabled);
  if (!(_DWORD)result)
    return result;
  if ((ParticipantGridView.isOneToOneMode.getter() & 1) == 0)
  {
    memset(v21, 0, 74);
    swift_retain();
    ParticipantGridView.VideoInfoCache.setVideoInfo(_:for:)((uint64_t)v21, a1);
    return swift_release();
  }
  result = ParticipantGridView.shouldShowLastFrameUI.getter();
  if ((result & 1) == 0)
    return result;
  v4 = (uint64_t *)(v1 + OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_frozenFrameOverlayState);
  swift_beginAccess();
  v5 = *v4;
  if (!*(_QWORD *)(v5 + 16)
    || (v6 = type metadata accessor for Participant(0),
        v7 = specialized __RawDictionaryStorage.find<A>(_:)(a1 + *(int *)(v6 + 20)),
        (v8 & 1) == 0))
  {
    swift_endAccess();
LABEL_15:
    swift_retain();
    ParticipantGridView.VideoInfoCache.update(for:)(a1);
    return swift_release();
  }
  v9 = *(_QWORD *)(v5 + 56) + 80 * v7;
  v10 = *(_QWORD *)(v9 + 8);
  v11 = *(_QWORD *)(v9 + 16);
  v12 = *(_QWORD *)(v9 + 24);
  v13 = *(_QWORD *)(v9 + 32);
  v14 = *(_QWORD *)(v9 + 40);
  v15 = *(_QWORD *)(v9 + 48);
  v19 = *(_QWORD *)(v9 + 56);
  v20 = *(_QWORD *)v9;
  v16 = *(_QWORD *)(v9 + 64);
  v17 = *(unsigned __int16 *)(v9 + 72);
  result = swift_endAccess();
  v18 = v17 >= 0xC000 && (v10 | v20 | v11 | v12 | v13 | v14 | v15 | v19 | v16) == 0;
  if (v18 && v17 == 49152)
    goto LABEL_15;
  return result;
}

char *ParticipantGridView.createParticipantView(frame:isOneToOneMode:)(char a1)
{
  uint64_t v1;
  id v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  double v8;
  double *v9;
  _QWORD v11[3];

  v3 = objc_allocWithZone((Class)type metadata accessor for ParticipantView());
  v4 = ParticipantView.init(frame:localParticipant:)(0);
  ParticipantView.isInRoster.setter(0);
  v5 = v1 + OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_delegate;
  swift_beginAccess();
  if (MEMORY[0x1C3B752C0](v5)
    && (v6 = *(_QWORD *)(v5 + 8),
        ObjectType = swift_getObjectType(),
        (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v6 + 80))(v11, ObjectType, v6),
        swift_unknownObjectRelease(),
        LOBYTE(v11[0]) == 2)
    || (v8 = 0.0, (a1 & 1) == 0))
  {
    if (one-time initialization token for shared != -1)
      swift_once();
    v8 = (*(double (**)(void))(*(_QWORD *)static Defaults.shared + 384))();
  }
  v9 = (double *)&v4[OBJC_IVAR____TtC15ConversationKit15ParticipantView_customCornerRadius];
  swift_beginAccess();
  *v9 = v8;
  ParticipantView.customCornerRadius.didset();
  UIView.addTapInteraction(withTapCount:)(1);
  return v4;
}

uint64_t ParticipantGridView.shouldManuallyRotateViews(for:)(uint64_t a1)
{
  id v2;
  id v3;
  char v5;

  v2 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
  v3 = objc_msgSend(v2, sel_userInterfaceIdiom);

  if (v3 || (a1 | 2) != 2)
    return 0;
  ParticipantGridView.layoutIdiom.getter(&v5);
  return v5 & 1;
}

void ParticipantGridView.layoutIdiom.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;

  v3 = v1 + OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_delegate;
  OUTLINED_FUNCTION_1();
  if (MEMORY[0x1C3B752C0](v3))
  {
    v4 = *(_QWORD *)(v3 + 8);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v4 + 104))(ObjectType, v4);
    OUTLINED_FUNCTION_10();
  }
  else
  {
    *a1 = 2;
  }
  OUTLINED_FUNCTION_9_0();
}

void ParticipantGridView.mediaPipDodgingFrame(for:isFullScreen:)(Swift::Int a1)
{
  char *v1;
  void *v2;
  char *v4;
  uint64_t v5;
  uint64_t ObjectType;
  double v7;
  double v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v18;
  double v19;
  uint64_t v20;
  void (*v21)(void);
  uint64_t v22;
  void (*v23)(uint64_t);
  double v24;
  uint64_t v25;
  double v26;
  double v27;
  CGFloat v28;
  double v29;
  CGRect v30;
  CGRect v31;

  v2 = v1;
  v4 = &v1[OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_delegate];
  swift_beginAccess();
  if (MEMORY[0x1C3B752C0](v4))
  {
    v5 = *((_QWORD *)v4 + 1);
    ObjectType = swift_getObjectType();
    v7 = (*(double (**)(uint64_t, uint64_t))(v5 + 16))(ObjectType, v5);
    v9 = v8;
    swift_unknownObjectRelease();
    if (MEMORY[0x1C3B752C0](v4))
    {
      v10 = *((_QWORD *)v4 + 1);
      v11 = swift_getObjectType();
      v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v11, v10);
      v14 = v13;
      v16 = v15;
      swift_unknownObjectRelease();
      if (v12 != 5 && v12 != 4)
      {
        v18 = v14;
        v19 = v16;
        if (v14 != 0.0 || v16 != 0.0)
        {
          static Layout.MediaPip.padding.getter();
          if (one-time initialization token for shared != -1)
            swift_once();
          v20 = static Defaults.shared;
          v21 = *(void (**)(void))(*(_QWORD *)static Defaults.shared + 384);
          v21();
          v22 = static Platform.current.getter();
          v23 = *(void (**)(uint64_t))(*(_QWORD *)v20 + 488);
          v23(v22);
          v24 = static Layout.MediaPip.padding.getter();
          v21();
          v25 = static Platform.current.getter();
          v23(v25);
          v26 = v24 + v18;
          if ((v12 & 0xFE) == 2)
            v27 = v9;
          else
            v27 = 0.0;
          objc_msgSend(v2, sel_safeAreaInsetFrame);
          v28 = CGRectGetHeight(v30) - (v19 + 16.0) - v7 - v27;
          objc_msgSend(v2, sel_safeAreaInsetFrame);
          v29 = CGRectGetWidth(v31) - v26;
          if (v28 > 0.0 || v29 > 0.0)
          {
            objc_msgSend(v2, sel_safeAreaInsetFrame);
            ParticipantGridView.effectiveLayoutStyle(for:)(a1);
          }
        }
      }
    }
  }
  ParticipantGridView.centeredFrame(for:isFullScreen:)(a1);
}

void ParticipantGridView.mediaPipIsVisible.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_26();
}

BOOL sub_1BD1F103C(_BOOL8 result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (result)
  {
    v2 = *(_QWORD *)(v1 + 8);
    ObjectType = swift_getObjectType();
    v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(ObjectType, v2);
    v6 = v5;
    v8 = v7;
    OUTLINED_FUNCTION_10();
    if (v4 == 5)
      return 0;
    else
      return (v6 & 0x7FFFFFFFFFFFFFFFLL) != 0 || (v8 & 0x7FFFFFFFFFFFFFFFLL) != 0;
  }
  return result;
}

double ParticipantGridView.frameForSingleParticipantView(in:)(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  double MinX;
  CGRect v10;
  CGRect v11;
  CGRect v12;
  CGRect v13;
  CGRect v14;
  CGRect v15;

  if (a4 >= a3)
  {
    MinX = CGRectGetMinX(*(CGRect *)&a1);
    v13.origin.x = a1;
    v13.origin.y = a2;
    v13.size.width = a3;
    v13.size.height = a4;
    CGRectGetMidY(v13);
    v14.origin.x = a1;
    v14.origin.y = a2;
    v14.size.width = a3;
    v14.size.height = a4;
    CGRectGetWidth(v14);
    v15.origin.x = a1;
    v15.origin.y = a2;
    v15.size.width = a3;
    v15.size.height = a4;
    CGRectGetWidth(v15);
  }
  else
  {
    MinX = CGRectGetMidX(*(CGRect *)&a1) + a4 * -0.5;
    v10.origin.x = a1;
    v10.origin.y = a2;
    v10.size.width = a3;
    v10.size.height = a4;
    CGRectGetMinY(v10);
    v11.origin.x = a1;
    v11.origin.y = a2;
    v11.size.width = a3;
    v11.size.height = a4;
    CGRectGetHeight(v11);
    v12.origin.x = a1;
    v12.origin.y = a2;
    v12.size.width = a3;
    v12.size.height = a4;
    CGRectGetHeight(v12);
  }
  return MinX;
}

uint64_t ParticipantGridView.framesForParticipantViewPair(in:)(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  char *v4;
  void *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  void (*v22)(char *, uint64_t, uint64_t);
  id v23;
  double v24;
  double v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  CGFloat v28;
  double v29;
  uint64_t v30;
  id v31;
  double v32;
  double v33;
  double v34;
  id v35;
  double v36;
  double v37;
  double v38;
  id v39;
  double v40;
  double v41;
  double v42;
  double MidY;
  id v44;
  double v45;
  double v46;
  double v47;
  double v48;
  void (*v49)(char *, uint64_t, uint64_t);
  id v50;
  double v51;
  void (*v52)(char *, uint64_t);
  CGFloat MidX;
  double v54;
  uint64_t v55;
  id v56;
  double v57;
  double v58;
  double v59;
  double v60;
  id v61;
  double v62;
  double v63;
  double v64;
  id v65;
  double v66;
  double v67;
  id v68;
  double v69;
  double v71;
  CGRect v72;
  CGRect v73;
  CGRect v74;
  CGRect v75;
  CGRect v76;
  CGRect v77;
  CGRect v78;
  CGRect v79;

  v5 = v4;
  v10 = type metadata accessor for FloatingPointRoundingRule();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = &v4[OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_layoutStyle];
  swift_beginAccess();
  LOBYTE(v14) = *v14;
  v15.n128_f64[0] = static Layout.MediaPip.padding.getter();
  if ((v14 & 1) != 0)
  {
    if (one-time initialization token for shared != -1)
      swift_once();
    v16 = static Defaults.shared;
    (*(void (**)(__n128))(*(_QWORD *)static Defaults.shared + 384))(v15);
    v17 = static Platform.current.getter();
    v18 = (*(double (**)(uint64_t))(*(_QWORD *)v16 + 488))(v17);
  }
  else
  {
    if (one-time initialization token for shared != -1)
      swift_once();
    v19 = static Defaults.shared;
    (*(void (**)(__n128))(*(_QWORD *)static Defaults.shared + 384))(v15);
    v20 = static Platform.current.getter();
    (*(void (**)(uint64_t))(*(_QWORD *)v19 + 488))(v20);
    v18 = 16.0;
  }
  if (a4 >= a3)
  {
    if ((a4 - v18) * 0.5 >= a3)
      v48 = a3;
    else
      v48 = (a4 - v18) * 0.5;
    v49 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 104);
    v49(v13, *MEMORY[0x1E0DED500], v10);
    v50 = objc_msgSend(v5, sel_traitCollection);
    objc_msgSend(v50, sel_displayScale);
    v25 = CGFloat.rounded(_:toScale:)((uint64_t)v13, v51, v48);

    v52 = *(void (**)(char *, uint64_t))(v11 + 8);
    v52(v13, v10);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CGRect>);
    v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_1BD645380;
    v76.origin.x = a1;
    v76.origin.y = a2;
    v76.size.width = a3;
    v76.size.height = a4;
    MidX = CGRectGetMidX(v76);
    v71 = v25 * 0.5;
    v54 = MidX - v25 * 0.5;
    v55 = *MEMORY[0x1E0DED508];
    v49(v13, v55, v10);
    v56 = objc_msgSend(v5, sel_traitCollection);
    objc_msgSend(v56, sel_displayScale);
    v58 = CGFloat.rounded(_:toScale:)((uint64_t)v13, v57, v54);

    v52(v13, v10);
    v77.origin.x = a1;
    v77.origin.y = a2;
    v77.size.width = a3;
    v77.size.height = a4;
    v59 = v18 * 0.5;
    v60 = CGRectGetMidY(v77) - v18 * 0.5 - v25;
    v49(v13, v55, v10);
    v61 = objc_msgSend(v5, sel_traitCollection);
    objc_msgSend(v61, sel_displayScale);
    v63 = CGFloat.rounded(_:toScale:)((uint64_t)v13, v62, v60);

    v52(v13, v10);
    *(double *)(v27 + 32) = v58;
    *(double *)(v27 + 40) = v63;
    *(double *)(v27 + 48) = v25;
    *(double *)(v27 + 56) = v25;
    v78.origin.x = a1;
    v78.origin.y = a2;
    v78.size.width = a3;
    v78.size.height = a4;
    v64 = CGRectGetMidX(v78) - v71;
    v49(v13, v55, v10);
    v65 = objc_msgSend(v5, sel_traitCollection);
    objc_msgSend(v65, sel_displayScale);
    v42 = CGFloat.rounded(_:toScale:)((uint64_t)v13, v66, v64);

    v52(v13, v10);
    v79.origin.x = a1;
    v79.origin.y = a2;
    v79.size.width = a3;
    v79.size.height = a4;
    v67 = v59 + CGRectGetMidY(v79);
    v49(v13, v55, v10);
    v68 = objc_msgSend(v5, sel_traitCollection);
    objc_msgSend(v68, sel_displayScale);
    v47 = CGFloat.rounded(_:toScale:)((uint64_t)v13, v69, v67);

    v52(v13, v10);
  }
  else
  {
    if ((a3 - v18) * 0.5 >= a4)
      v21 = a4;
    else
      v21 = (a3 - v18) * 0.5;
    v22 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 104);
    v22(v13, *MEMORY[0x1E0DED500], v10);
    v23 = objc_msgSend(v5, sel_traitCollection);
    objc_msgSend(v23, sel_displayScale);
    v25 = CGFloat.rounded(_:toScale:)((uint64_t)v13, v24, v21);

    v26 = *(void (**)(char *, uint64_t))(v11 + 8);
    v26(v13, v10);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CGRect>);
    v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_1BD645380;
    v72.origin.x = a1;
    v72.origin.y = a2;
    v72.size.width = a3;
    v72.size.height = a4;
    v28 = CGRectGetMidX(v72);
    v71 = v18 * 0.5;
    v29 = v28 - v18 * 0.5 - v25;
    v30 = *MEMORY[0x1E0DED508];
    v22(v13, v30, v10);
    v31 = objc_msgSend(v5, sel_traitCollection);
    objc_msgSend(v31, sel_displayScale);
    v33 = CGFloat.rounded(_:toScale:)((uint64_t)v13, v32, v29);

    v26(v13, v10);
    v73.origin.x = a1;
    v73.origin.y = a2;
    v73.size.width = a3;
    v73.size.height = a4;
    v34 = CGRectGetMidY(v73) - v25 * 0.5;
    v22(v13, v30, v10);
    v35 = objc_msgSend(v5, sel_traitCollection);
    objc_msgSend(v35, sel_displayScale);
    v37 = CGFloat.rounded(_:toScale:)((uint64_t)v13, v36, v34);

    v26(v13, v10);
    *(double *)(v27 + 32) = v33;
    *(double *)(v27 + 40) = v37;
    *(double *)(v27 + 48) = v25;
    *(double *)(v27 + 56) = v25;
    v74.origin.x = a1;
    v74.origin.y = a2;
    v74.size.width = a3;
    v74.size.height = a4;
    v38 = CGRectGetMidX(v74);
    v22(v13, v30, v10);
    v39 = objc_msgSend(v5, sel_traitCollection);
    objc_msgSend(v39, sel_displayScale);
    v41 = CGFloat.rounded(_:toScale:)((uint64_t)v13, v40, v71);

    v26(v13, v10);
    v42 = v38 + v41;
    v75.origin.x = a1;
    v75.origin.y = a2;
    v75.size.width = a3;
    v75.size.height = a4;
    MidY = CGRectGetMidY(v75);
    v22(v13, v30, v10);
    v44 = objc_msgSend(v5, sel_traitCollection);
    objc_msgSend(v44, sel_displayScale);
    v46 = CGFloat.rounded(_:toScale:)((uint64_t)v13, v45, v25 * 0.5);

    v26(v13, v10);
    v47 = MidY - v46;
  }
  *(double *)(v27 + 64) = v42;
  *(double *)(v27 + 72) = v47;
  *(double *)(v27 + 80) = v25;
  *(double *)(v27 + 88) = v25;
  return v27;
}

uint64_t closure #2 in ParticipantGridView.frames(for:mostProminentIdentifier:focusedIdentifier:fullScreenFocusedParticipantInfo:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  int EnumTagSinglePayload;
  uint64_t *v18;
  char v19;
  char *v20;
  void (*v21)(char *, uint64_t);
  uint64_t v23;
  char *v24;

  v4 = type metadata accessor for UUID();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v24 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v23 - v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v23 - v14, a1, v4);
  __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v4);
  v16 = (uint64_t)&v9[*(int *)(v7 + 48)];
  outlined init with copy of FeatureEligibility?((uint64_t)v15, (uint64_t)v9, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  outlined init with copy of FeatureEligibility?(a2, v16, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v4) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v15, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v16, 1, v4);
    if (EnumTagSinglePayload == 1)
      v18 = (uint64_t *)&demangling cache variable for type metadata for UUID?;
    else
      v18 = (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?);
    if (EnumTagSinglePayload == 1)
      v19 = -1;
    else
      v19 = 0;
  }
  else
  {
    outlined init with copy of FeatureEligibility?((uint64_t)v9, (uint64_t)v13, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    if (__swift_getEnumTagSinglePayload(v16, 1, v4) == 1)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v15, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v13, v4);
      v19 = 0;
      v18 = (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?);
    }
    else
    {
      v20 = v24;
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v24, v16, v4);
      _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
      v19 = dispatch thunk of static Equatable.== infix(_:_:)();
      v21 = *(void (**)(char *, uint64_t))(v5 + 8);
      v21(v20, v4);
      v18 = (uint64_t *)&demangling cache variable for type metadata for UUID?;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v15, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      v21(v13, v4);
    }
  }
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v9, v18);
  return v19 & 1;
}

void ParticipantGridView.framesForParticipantViews(in:frameCount:indexToExpand:)(Swift::Int a1)
{
  uint64_t v2;

  if (one-time initialization token for shared != -1)
    swift_once();
  v2 = static Defaults.shared;
  if (((*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 576))() & 1) == 0)
    (*(void (**)(void))(*(_QWORD *)v2 + 544))();
  ParticipantGridView.effectiveLayoutStyle(for:)(a1);
}

void closure #3 in ParticipantGridView.frames(for:mostProminentIdentifier:focusedIdentifier:fullScreenFocusedParticipantInfo:)(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char v13;
  uint64_t v14;
  CGFloat v15;
  CGFloat v16;
  CGFloat v17;
  CGFloat v18;
  uint64_t v19;

  v9 = type metadata accessor for ParticipantGridView.ParticipantTileInfo(0);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (*(_QWORD *)(a2 + 16) <= a1)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  outlined init with copy of ConversationControlsAppLaunchButtonType(a2+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * a1, (uint64_t)v12, type metadata accessor for ParticipantGridView.ParticipantTileInfo);
  v13 = static UUID.== infix(_:_:)();
  v14 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v12, v14);
  if ((v13 & 1) == 0)
    return;
  if (*(_QWORD *)(a4 + 16) <= a1)
  {
LABEL_10:
    __break(1u);
    return;
  }
  type metadata accessor for ParticipantGridView.IdentifiableParticipantTile(0);
  type metadata accessor for ParticipantView();
  if (swift_dynamicCastClass())
  {
    objc_msgSend(a5, sel_safeAreaInsetFrame);
    ParticipantGridView.frameForSingleParticipantView(in:)(v15, v16, v17, v18);
  }
}

double ParticipantGridView.frameForFullScreenParticipantView(fitting:layoutFrame:shouldUseSafeAreaInsets:forcePortraitSize:remoteVideoOrientation:)(int a1, char a2, uint64_t a3, int a4, double a5, double a6, CGFloat a7, CGFloat a8, CGFloat a9, CGFloat a10)
{
  char *v10;
  char *v11;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  int v25;
  CGFloat v26;
  CGFloat v27;
  CGFloat v28;
  CGFloat v29;
  double Width;
  double Height;
  double v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t ObjectType;
  id v37;
  id v38;
  double v39;
  double v40;
  double v41;
  uint64_t v42;
  char v43;
  _BOOL4 v44;
  void (*v45)(char *, uint64_t, uint64_t);
  double v46;
  double v47;
  void (*v48)(char *, uint64_t);
  double v49;
  void (*v50)(char *, _QWORD, uint64_t);
  void (*v51)(char *, uint64_t);
  double v52;
  double v53;
  double v54;
  double v55;
  double v56;
  double v57;
  uint64_t v58;
  double v59;
  void (*v60)(char *, uint64_t);
  double v61;
  double v62;
  int v64;
  double v65;
  int v66;
  uint64_t v68;
  int v69;
  double v70;
  double v71;
  int v72;
  uint64_t v73;
  CGRect v74;
  CGRect v75;
  CGRect v76;
  CGRect v77;
  CGRect v78;
  CGRect v79;
  CGRect v80;
  CGRect v81;
  CGRect v82;
  CGRect v83;

  v11 = v10;
  v72 = a4;
  v69 = a1;
  v20 = type metadata accessor for FloatingPointRoundingRule();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v23 = (char *)&v68 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_deviceOrientation;
  v25 = ParticipantGridView.shouldManuallyRotateViews(for:)(*(_QWORD *)&v10[OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_deviceOrientation]);
  v26 = a7;
  v27 = a8;
  v28 = a9;
  v29 = a10;
  if ((v25 & 1) != 0)
  {
    Width = CGRectGetWidth(*(CGRect *)&v26);
    v74.origin.x = a7;
    v74.origin.y = a8;
    v74.size.width = a9;
    v74.size.height = a10;
    Height = CGRectGetHeight(v74);
  }
  else
  {
    Width = CGRectGetHeight(*(CGRect *)&v26);
    v75.origin.x = a7;
    v75.origin.y = a8;
    v75.size.width = a9;
    v75.size.height = a10;
    Height = CGRectGetWidth(v75);
  }
  v32 = Width / Height;
  v33 = &v10[OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_delegate];
  swift_beginAccess();
  v34 = MEMORY[0x1C3B752C0](v33);
  v70 = a5;
  if (v34
    && (v35 = *((_QWORD *)v33 + 1),
        ObjectType = swift_getObjectType(),
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v35 + 80))(&v73, ObjectType, v35),
        swift_unknownObjectRelease(),
        v73 == 2)
    && (v37 = objc_msgSend((id)objc_opt_self(), sel_currentDevice),
        v38 = objc_msgSend(v37, sel_userInterfaceIdiom),
        v37,
        !v38)
    && a9 > 0.0)
  {
    v39 = a10 / a9;
  }
  else
  {
    v39 = a6 / a5;
  }
  objc_msgSend(v11, sel_displayScale);
  v41 = v40;
  v71 = a6;
  if (a9 < a10)
  {
    v68 = v24;
    v42 = a3;
    v43 = a2;
    if ((v25 & 1) != 0)
      v44 = v32 < v39;
    else
      v44 = v39 < v32;
    v45 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 104);
    v45(v23, *MEMORY[0x1E0DED500], v20);
    if (v44)
    {
      if ((v25 & 1) != 0)
        v46 = 1.0 / v39;
      else
        v46 = v39;
      v47 = CGFloat.rounded(_:toScale:)((uint64_t)v23, v41, v46 * a9);
      v48 = *(void (**)(char *, uint64_t))(v21 + 8);
      v48(v23, v20);
      if ((v25 & 1) == 0)
      {
        v58 = *MEMORY[0x1E0DED508];
        v53 = 0.0;
        v49 = a9;
        goto LABEL_34;
      }
      v49 = a9;
    }
    else
    {
      if ((v25 & 1) != 0)
        v56 = v39;
      else
        v56 = 1.0 / v39;
      v49 = CGFloat.rounded(_:toScale:)((uint64_t)v23, v41, v56 * a10);
      v48 = *(void (**)(char *, uint64_t))(v21 + 8);
      v48(v23, v20);
      v47 = a10;
    }
    v77.origin.x = a7;
    v77.origin.y = a8;
    v77.size.width = a9;
    v77.size.height = a10;
    v57 = CGRectGetMidX(v77) + v49 * -0.5;
    v58 = *MEMORY[0x1E0DED508];
    v45(v23, v58, v20);
    v53 = CGFloat.rounded(_:toScale:)((uint64_t)v23, v41, v57);
    v48(v23, v20);
    if (!v44)
    {
      v54 = 0.0;
      if ((v69 & 1) != 0)
      {
        objc_msgSend(v11, sel_safeAreaInsets);
        v54 = v59;
      }
      a2 = v43;
      a3 = v42;
      v24 = v68;
      goto LABEL_35;
    }
LABEL_34:
    a2 = v43;
    a3 = v42;
    v24 = v68;
    v79.origin.x = a7;
    v79.origin.y = a8;
    v79.size.width = a9;
    v79.size.height = a10;
    v62 = CGRectGetMidY(v79) + v47 * -0.5;
    v45(v23, v58, v20);
    v54 = CGFloat.rounded(_:toScale:)((uint64_t)v23, v41, v62);
    v48(v23, v20);
    goto LABEL_35;
  }
  v50 = *(void (**)(char *, _QWORD, uint64_t))(v21 + 104);
  v50(v23, *MEMORY[0x1E0DED500], v20);
  if (v32 >= v39)
  {
    v47 = CGFloat.rounded(_:toScale:)((uint64_t)v23, v41, v39 * a9);
    v60 = *(void (**)(char *, uint64_t))(v21 + 8);
    v60(v23, v20);
    v78.origin.x = a7;
    v78.origin.y = a8;
    v78.size.width = a9;
    v78.size.height = a10;
    v61 = CGRectGetMidY(v78) + v47 * -0.5;
    v50(v23, *MEMORY[0x1E0DED508], v20);
    v54 = CGFloat.rounded(_:toScale:)((uint64_t)v23, v41, v61);
    v60(v23, v20);
    v53 = 0.0;
    v49 = a9;
  }
  else
  {
    v49 = CGFloat.rounded(_:toScale:)((uint64_t)v23, v41, a10 / v39);
    v51 = *(void (**)(char *, uint64_t))(v21 + 8);
    v51(v23, v20);
    v76.origin.x = a7;
    v76.origin.y = a8;
    v76.size.width = a9;
    v76.size.height = a10;
    v52 = CGRectGetMidX(v76) + v49 * -0.5;
    v50(v23, *MEMORY[0x1E0DED508], v20);
    v53 = CGFloat.rounded(_:toScale:)((uint64_t)v23, v41, v52);
    v51(v23, v20);
    v54 = 0.0;
    if ((v69 & 1) != 0)
    {
      objc_msgSend(v11, sel_safeAreaInsets);
      v54 = v55;
    }
    v47 = a10;
  }
LABEL_35:
  if ((v72 & 1) == 0)
  {
    if (a3)
    {
      if (a3 != 2 || v70 >= v71)
        goto LABEL_41;
LABEL_43:
      v64 = 1;
      goto LABEL_44;
    }
    if (v70 < v71)
      goto LABEL_43;
  }
LABEL_41:
  v64 = 0;
LABEL_44:
  if (static Platform.current.getter() != 1 && (a2 & 1) != 0)
  {
    v80.origin.x = v53;
    v80.origin.y = v54;
    v80.size.width = v49;
    v80.size.height = v47;
    v65 = CGRectGetWidth(v80);
    v81.origin.x = v53;
    v81.origin.y = v54;
    v81.size.width = v49;
    v81.size.height = v47;
    if (CGRectGetHeight(v81) < v65)
      v66 = 1;
    else
      v66 = v64;
    if ((v25 & v66) == 1 && (*(_QWORD *)&v11[v24] | 2) != 2)
    {
      v82.origin.x = v53;
      v82.origin.y = v54;
      v82.size.width = v49;
      v82.size.height = v47;
      CGRectGetHeight(v82);
      v83.origin.x = v53;
      v83.origin.y = v54;
      v83.size.width = v49;
      v83.size.height = v47;
      CGRectGetWidth(v83);
    }
  }
  return v53;
}

ConversationKit::MultiwayViewController::LayoutStyle __swiftcall ParticipantGridView.effectiveLayoutStyle(for:)(Swift::Int a1)
{
  ParticipantGridView.mediaPipIsVisible.getter();
}

void ParticipantGridView.transformModelIfNeeded(_:for:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t (*v16)(uint64_t);
  uint64_t v17;
  char *v18;
  double v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE __dst[176];

  v7 = type metadata accessor for Participant(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ParticipantViewModel(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ParticipantViewModel.ParticipantDetails(0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_featureFlags), sel_uPlusOneFullBleedHandoffEnabled)&& (ParticipantGridView.shouldShowLastFrameUI.getter() & 1) != 0)
  {
    outlined init with copy of ConversationControlsAppLaunchButtonType(a1, (uint64_t)v12, type metadata accessor for ParticipantViewModel);
    if (swift_getEnumCaseMultiPayload())
    {
      v16 = type metadata accessor for ParticipantViewModel;
      v17 = (uint64_t)v12;
    }
    else
    {
      v18 = &v12[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantVideoView.ViewModel))
                        + 48)];
      outlined init with take of StagedCollaboration((uint64_t)v12, (uint64_t)v15, type metadata accessor for ParticipantViewModel.ParticipantDetails);
      memcpy(__dst, v18, 0xACuLL);
      ParticipantVideoView.ViewModel.contentsRect.getter();
      if (v19 == v20 && (ParticipantGridView.isOneToOneMode.getter() & 1) != 0)
      {
        v21 = a3
            + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantMonogramView.ViewModel))
                     + 48);
        outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v15, a3, type metadata accessor for ParticipantViewModel.ParticipantDetails);
        outlined init with copy of ConversationControlsAppLaunchButtonType(a2, (uint64_t)v9, type metadata accessor for Participant);
        Participant.contactDetails.getter();
        v31 = v35;
        v34 = v36;
        v22 = v37;
        v33 = v38;
        v23 = v39;
        v32 = v40;
        v24 = v41;
        v25 = *(_QWORD *)&v9[*(int *)(v7 + 32)];
        v26 = v35;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        outlined destroy of RecentsCallItem((uint64_t)v9, type metadata accessor for Participant);
        swift_bridgeObjectRetain();
        outlined consume of AnsweringMachineCallStatus?(0, 0);
        v27 = v26;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        outlined copy of (title: String, subtitle: String?)?(0, 0);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        v28 = v34;
        *(_QWORD *)v21 = v31;
        *(_QWORD *)(v21 + 8) = v28;
        v29 = v33;
        *(_QWORD *)(v21 + 16) = v22;
        *(_QWORD *)(v21 + 24) = v29;
        v30 = v32;
        *(_QWORD *)(v21 + 32) = v23;
        *(_QWORD *)(v21 + 40) = v30;
        *(_QWORD *)(v21 + 48) = v24;
        *(_QWORD *)(v21 + 56) = v25;
        *(_WORD *)(v21 + 64) = 0;
        *(_OWORD *)(v21 + 72) = 0u;
        *(_OWORD *)(v21 + 88) = 0u;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        outlined consume of AnsweringMachineCallStatus?(0, 0);
        outlined destroy of ParticipantVideoView.ViewModel((uint64_t)__dst);
        outlined destroy of RecentsCallItem((uint64_t)v15, type metadata accessor for ParticipantViewModel.ParticipantDetails);
        swift_storeEnumTagMultiPayload();
        return;
      }
      outlined destroy of ParticipantVideoView.ViewModel((uint64_t)__dst);
      v16 = type metadata accessor for ParticipantViewModel.ParticipantDetails;
      v17 = (uint64_t)v15;
    }
    outlined destroy of RecentsCallItem(v17, v16);
  }
  outlined init with copy of ConversationControlsAppLaunchButtonType(a1, a3, type metadata accessor for ParticipantViewModel);
}

uint64_t closure #1 in ParticipantGridView.configure(_:with:isMostActive:hasOtherInvitedParticipants:orientationChanged:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BOOL8 v5;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _BYTE v33[40];

  outlined init with copy of IDSLookupManager(a1, (uint64_t)v33);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParticipantVideoProvider);
  type metadata accessor for RemoteParticipantVideoProvider();
  if ((swift_dynamicCast() & 1) == 0)
    return 0;
  if (((*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v32) + 0x188))() & 1) != 0)
  {

    return 0;
  }
  v7 = (uint64_t *)(a2 + OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_frozenFrameOverlayState);
  swift_beginAccess();
  v8 = *v7;
  if (*(_QWORD *)(v8 + 16)
    && (v9 = type metadata accessor for Participant(0),
        v10 = specialized __RawDictionaryStorage.find<A>(_:)(a3 + *(int *)(v9 + 20)),
        (v11 & 1) != 0))
  {
    v12 = *(_QWORD *)(v8 + 56) + 80 * v10;
    v13 = *(_QWORD *)v12;
    v14 = *(_QWORD *)(v12 + 16);
    v30 = *(_QWORD *)(v12 + 24);
    v31 = *(_QWORD *)(v12 + 8);
    v15 = *(_QWORD *)(v12 + 32);
    v16 = *(_QWORD *)(v12 + 40);
    v18 = *(_QWORD *)(v12 + 48);
    v17 = *(_QWORD *)(v12 + 56);
    v19 = *(_QWORD *)(v12 + 64);
    v20 = *(unsigned __int16 *)(v12 + 72);
    swift_endAccess();
    outlined copy of ParticipantGridView.FrozenFrameOverlayState(v13, v31, v14, v30, v15, v16, v18, v17, v19, v20);

    if (v20 >> 14)
    {
      v22 = v14;
      v21 = v13;
      v23 = v20 >> 14 == 3 && (v31 | v13 | v14 | v30 | v15 | v16 | v18 | v17 | v19) == 0;
      v24 = v31;
      v25 = v30;
      v26 = v15;
      v27 = v16;
      v28 = v18;
      v29 = v17;
      v5 = v23 && v20 == 49152;
    }
    else
    {
      v5 = 1;
      v22 = v14;
      v21 = v13;
      v24 = v31;
      v25 = v30;
      v26 = v15;
      v27 = v16;
      v28 = v18;
      v29 = v17;
    }
    outlined consume of ParticipantGridView.FrozenFrameOverlayState(v21, v24, v22, v25, v26, v27, v28, v29, v19, v20);
  }
  else
  {
    swift_endAccess();

    return 1;
  }
  return v5;
}

uint64_t ParticipantGridView.scheduleUpdateToPausedHandoffOverlay(on:for:isMostActive:)(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  void *v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD aBlock[6];

  v30 = a2;
  v36 = a4;
  v31 = a1;
  v32 = a3;
  v37 = type metadata accessor for DispatchWorkItemFlags();
  v40 = *(_QWORD *)(v37 - 8);
  MEMORY[0x1E0C80A78](v37);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS();
  v38 = *(_QWORD *)(v6 - 8);
  v39 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Participant(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DispatchTime();
  v14 = *(_QWORD *)(v13 - 8);
  v35 = v13;
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v29 - v18;
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v33 = static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  MEMORY[0x1C3B72C50](v17, 3.0);
  v34 = *(void (**)(char *, uint64_t))(v14 + 8);
  v34(v17, v13);
  v20 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 24) = v30;
  swift_unknownObjectWeakInit();
  outlined init with copy of ConversationControlsAppLaunchButtonType(v32, (uint64_t)v12, type metadata accessor for Participant);
  v22 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v23 = v22 + v11;
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = v20;
  *(_QWORD *)(v24 + 24) = v21;
  outlined init with take of StagedCollaboration((uint64_t)v12, v24 + v22, type metadata accessor for Participant);
  *(_BYTE *)(v24 + v23) = v36;
  aBlock[4] = partial apply for closure #1 in ParticipantGridView.scheduleUpdateToPausedHandoffOverlay(on:for:isMostActive:);
  aBlock[5] = v24;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = &block_descriptor_35_0;
  v25 = _Block_copy(aBlock);
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]();
  v26 = v37;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  v27 = (void *)v33;
  MEMORY[0x1C3B735B0](v19, v8, v5, v25);
  _Block_release(v25);

  (*(void (**)(char *, uint64_t))(v40 + 8))(v5, v26);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v8, v39);
  return ((uint64_t (*)(char *, uint64_t))v34)(v19, v35);
}

uint64_t closure #2 in ParticipantGridView.configure(_:with:isMostActive:hasOtherInvitedParticipants:orientationChanged:)(uint64_t a1)
{
  char v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[80];
  _BYTE v7[80];
  _QWORD v8[4];
  _QWORD v9[9];
  char v10;

  swift_getObjectType();
  Participant.videoInfo.getter();
  outlined init with take of Any?((uint64_t)v6, (uint64_t)v9, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
  if (v9[0] && (v2 = v10, outlined release of LinearGradient((uint64_t)v6), (v2 & 1) != 0))
  {
    v4 = 1;
  }
  else
  {
    ParticipantGridView.orientation(for:default:)();
    v4 = v3;
  }
  Participant.videoInfo.getter();
  outlined init with take of Any?((uint64_t)v7, (uint64_t)v8, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
  if (v8[0])
    outlined release of LinearGradient((uint64_t)v7);
  return static ParticipantGridView.remoteParticipantRotationAngle(localOrientation:remoteOrientation:shouldReverse:)(a1, v4);
}

void closure #3 in ParticipantGridView.configure(_:with:isMostActive:hasOtherInvitedParticipants:orientationChanged:)(void *a1, __int128 *a2)
{
  uint64_t v3;
  uint64_t v4;
  objc_class *v5;
  __int128 v6;
  __int128 v7;
  objc_super v8;
  objc_super v9;
  _OWORD v10[2];
  uint64_t v11;
  uint64_t v12;

  v6 = a2[1];
  v7 = *a2;
  v3 = *((_QWORD *)a2 + 4);
  v4 = *((_QWORD *)a2 + 5);
  v5 = (objc_class *)type metadata accessor for ParticipantView();
  v9.receiver = a1;
  v9.super_class = v5;
  v10[0] = v7;
  v10[1] = v6;
  v11 = v3;
  v12 = v4;
  objc_msgSendSuper2(&v9, sel_setTransform_, v10);
  v8.receiver = a1;
  v8.super_class = v5;
  objc_msgSendSuper2(&v8, sel_transform);
  ParticipantView.updateOverlayTransforms(with:)((double *)v10);
}

void closure #1 in ParticipantGridView.scheduleUpdateToPausedHandoffOverlay(on:for:isMostActive:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v8;
  uint64_t v9;
  __int8 *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int8x16_t v26;
  int v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int8x16_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  __int16 v39;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParticipantViewModel?);
  MEMORY[0x1E0C80A78](v8);
  v10 = &v26.i8[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  v11 = MEMORY[0x1C3B752C0](a1 + 16);
  if (v11)
  {
    v12 = (char *)v11;
    swift_beginAccess();
    v13 = MEMORY[0x1C3B752C0](a2 + 16);
    if (v13)
    {
      v14 = (void *)v13;
      v15 = *(_QWORD *)(a2 + 24);
      if ((ParticipantGridView.shouldShowLastFrameUI.getter() & 1) != 0)
      {
        v16 = &v12[OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_frozenFrameOverlayState];
        swift_beginAccess();
        v17 = *(_QWORD *)v16;
        if (*(_QWORD *)(*(_QWORD *)v16 + 16))
        {
          v18 = type metadata accessor for Participant(0);
          v19 = specialized __RawDictionaryStorage.find<A>(_:)(a3 + *(int *)(v18 + 20));
          if ((v20 & 1) != 0)
          {
            v21 = *(_QWORD *)(v17 + 56) + 80 * v19;
            v22 = *(unsigned __int16 *)(v21 + 72);
            if (!(v22 >> 14))
            {
              v23 = *(_QWORD *)(v21 + 64);
              v30 = *(_QWORD *)(v21 + 56);
              v31 = v23;
              v29 = *(_OWORD *)(v21 + 40);
              v28 = *(unsigned __int8 *)(v21 + 32);
              v24 = *(_QWORD *)(v21 + 24);
              v25 = *(_QWORD *)v21;
              v27 = v22 & 0x1010101 | 0x4000;
              v26 = *(int8x16_t *)(v21 + 8);
              swift_endAccess();
              v32 = v25;
              v33 = vandq_s8(v26, (int8x16_t)xmmword_1BD650890);
              v34 = v24;
              v35 = v28;
              v36 = v29;
              v37 = v30;
              v38 = v31;
              v39 = v27;
              swift_beginAccess();
              swift_bridgeObjectRetain();
              specialized Dictionary._Variant.setValue(_:forKey:)();
              swift_endAccess();
              ParticipantGridView.configure(_:with:isMostActive:hasOtherInvitedParticipants:orientationChanged:)(v14, v15, a3, a4 & 1, 0, 0);

              outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v10, &demangling cache variable for type metadata for ParticipantViewModel?);
              return;
            }
          }
        }
        swift_endAccess();
      }

    }
    else
    {

    }
  }
}

void closure #1 in ParticipantGridView.startAnimations(_:animationStyle:completion:)(char a1, void (*a2)(_QWORD), uint64_t a3, void *a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id (*v17)();
  uint64_t v18;

  if (a2)
    a2(a1 & 1);
  v5 = (void *)objc_opt_self();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a4;
  v17 = partial apply for closure #1 in FlashView.flash(completion:);
  v18 = v6;
  v7 = MEMORY[0x1E0C809B0];
  v13 = MEMORY[0x1E0C809B0];
  v14 = 1107296256;
  v15 = thunk for @escaping @callee_guaranteed () -> ();
  v16 = &block_descriptor_56;
  v8 = _Block_copy(&v13);
  v9 = a4;
  swift_release();
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v9;
  v17 = partial apply for closure #2 in closure #1 in ParticipantGridView.startAnimations(_:animationStyle:completion:);
  v18 = v10;
  v13 = v7;
  v14 = 1107296256;
  v15 = thunk for @escaping @callee_guaranteed (@unowned Bool) -> ();
  v16 = &block_descriptor_62;
  v11 = _Block_copy(&v13);
  v12 = v9;
  swift_release();
  objc_msgSend(v5, sel_animateWithDuration_animations_completion_, v8, v11, 0.5);
  _Block_release(v11);
  _Block_release(v8);
}

uint64_t closure #2 in ParticipantGridView.startAnimations(_:animationStyle:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void (**v5)(BOOL);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  void (*v12)(BOOL);

  v5 = (void (**)(BOOL))(a4 + 16);
  v6 = *(_QWORD *)(a2 + OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_mostRecentAnimationIndex);
  if (v6 != a3)
  {
    if (one-time initialization token for conversationKit == -1)
      goto LABEL_5;
    goto LABEL_8;
  }
  if (one-time initialization token for conversationKit != -1)
LABEL_8:
    swift_once();
LABEL_5:
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1BD6441D0;
  v8 = String.init<A>(reflecting:)();
  v10 = v9;
  *(_QWORD *)(v7 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v7 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v7 + 32) = v8;
  *(_QWORD *)(v7 + 40) = v10;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  result = swift_beginAccess();
  v12 = *v5;
  if (v12)
  {
    swift_retain();
    v12(v6 == a3);
    return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v12);
  }
  return result;
}

id ParticipantGridView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)OUTLINED_FUNCTION_15_6();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

Swift::Void __swiftcall ParticipantGridView.updateMediaPipDodgingFrame(withAnimationStyle:)(ConversationKit::ParticipantGridView::AnimationStyle withAnimationStyle)
{
  char *v1;
  char *v3;
  _QWORD *v4;
  char *v5;

  v3 = &v1[OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_cachedFrameSize];
  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)v3 = 0;
  *((_QWORD *)v3 + 1) = 0;
  objc_msgSend(v1, sel_setNeedsLayout);
  v4 = (_QWORD *)OUTLINED_FUNCTION_15();
  v4[2] = v1;
  v5 = v1;
  ParticipantGridView.startAnimations(_:animationStyle:completion:)((uint64_t (*)(uint64_t))partial apply for closure #1 in CallControlsMenuViewController.updateDogingState(animated:), v4, withAnimationStyle, 0, 0);
  swift_release();
  OUTLINED_FUNCTION_9_0();
}

void ParticipantGridView.centeredFrame(for:isFullScreen:)(Swift::Int a1)
{
  void *v1;

  objc_msgSend(v1, sel_safeAreaInsetFrame);
  ParticipantGridView.effectiveLayoutStyle(for:)(a1);
}

double sub_1BD1F3870(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, CGRect rect, uint64_t a10, uint64_t recta, uint64_t rect_8, uint64_t rect_16, uint64_t rect_24, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  void *v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  double v33;
  double v34;
  double v35;
  double v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t ObjectType;
  uint64_t v40;
  char v41;
  char v42;
  id v43;
  void *v44;
  int v45;
  double v46;
  uint64_t v47;
  void (*v48)(void);
  uint64_t v49;
  void (*v50)(uint64_t);
  double v51;
  uint64_t v52;
  CGFloat MinX;
  CGFloat MinY;
  CGFloat Width;
  CGFloat Height;
  CGFloat y;
  CGFloat v58;
  CGFloat v59;
  double v60;
  double v61;
  CGFloat x;
  double v64;
  unsigned __int8 v65;
  CGRect v66;
  CGRect v67;
  CGRect v68;
  CGRect v69;
  CGRect v70;
  CGRect v71;
  CGRect v72;
  CGRect v73;
  CGRect v74;

  v37 = v30 + OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_delegate;
  swift_beginAccess();
  if (MEMORY[0x1C3B752C0](v37))
  {
    v38 = *(_QWORD *)(v37 + 8);
    ObjectType = swift_getObjectType();
    v40 = (*(uint64_t (**)(uint64_t, uint64_t))(v38 + 112))(ObjectType, v38);
    v42 = v41;
    swift_unknownObjectRelease();
    if ((v42 & 1) == 0 && !v40)
    {
      v43 = objc_msgSend(v29, sel_superview);
      if (v43)
      {
        v44 = v43;
        if (v35 >= v36 || (v32 & 1) != 0 || (uint64_t)v31 < 1)
          goto LABEL_22;
        if ((v65 & 1) != 0)
        {
          if (v31 >= 5)
            goto LABEL_22;
        }
        else if (v31 >= 3)
        {
LABEL_22:

          return v33;
        }
        if (v31 > 3)
          v45 = v65;
        else
          v45 = 0;
        if (v31 == 1 || v45)
        {
          objc_msgSend(v29, sel_frame);
          MinX = CGRectGetMinX(v67);
          objc_msgSend(v44, sel_bounds);
          MinY = CGRectGetMinY(v68);
          objc_msgSend(v29, sel_frame);
          Width = CGRectGetWidth(v69);
          objc_msgSend(v44, sel_bounds);
          Height = CGRectGetHeight(v70);
          objc_msgSend(v29, sel_convertRect_fromCoordinateSpace_, v44, ParticipantGridView.frameForSingleParticipantView(in:)(MinX, MinY, Width, Height));
          x = v71.origin.x;
          y = v71.origin.y;
          v58 = v71.size.width;
          v59 = v71.size.height;
          v60 = CGRectGetMinY(v71);
          v72.origin.x = v33;
          v72.origin.y = v34;
          v72.size.width = v35;
          v72.size.height = v36;
          v64 = v60 - CGRectGetMinY(v72) + -1.0;
          v73.origin.x = v33;
          v73.origin.y = v34;
          v73.size.width = v35;
          v73.size.height = v36;
          CGRectGetMaxY(v73);
          v74.origin.x = x;
          v74.origin.y = y;
          v74.size.width = v58;
          v74.size.height = v59;
          CGRectGetMaxY(v74);
          UIEdgeInsetsInsetRect(v33, v34, v35, v36, v64, 0.0);
        }
        else
        {
          v46 = static Layout.MediaPip.padding.getter();
          if (one-time initialization token for shared != -1)
            swift_once();
          v47 = static Defaults.shared;
          v48 = *(void (**)(void))(*(_QWORD *)static Defaults.shared + 384);
          v48();
          v49 = static Platform.current.getter();
          v50 = *(void (**)(uint64_t))(*(_QWORD *)v47 + 488);
          v50(v49);
          v51 = static Layout.MediaPip.padding.getter();
          ((void (*)(double))v48)(v51);
          v52 = static Platform.current.getter();
          v50(v52);
          v66.origin.x = v33;
          v66.origin.y = v34;
          v66.size.width = v35;
          v66.size.height = v36;
          CGRectInset(v66, v46 * 0.5, 8.0);
        }
        UIRectRoundToViewScale();
        v33 = v61;
        goto LABEL_22;
      }
    }
  }
  return v33;
}

void ParticipantGridView.participantViewDidTapToggleFocus(_:)()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_15_56();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_7_74();
  v4 = OUTLINED_FUNCTION_19_7((uint64_t)v2);
  if (!v5)
  {
    OUTLINED_FUNCTION_20_47();
    OUTLINED_FUNCTION_1();
    OUTLINED_FUNCTION_117_0();
  }
  OUTLINED_FUNCTION_30_7(v4, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_91();
}

uint64_t ParticipantGridView.identifier(for:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v23;
  uint64_t v24;

  v3 = type metadata accessor for ParticipantGridView.ParticipantTileInfo(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for ParticipantGridView.IdentifiableParticipantTile(0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParticipantGridView.IdentifiableParticipantTile?);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_participantIdentifiableTiles);
  v14 = *(_QWORD *)(v13 + 16);
  if (v14)
  {
    v23 = v5;
    v24 = a1;
    v15 = v13 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSObject);
    v16 = *(_QWORD *)(v7 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      outlined init with copy of ConversationControlsAppLaunchButtonType(v15, (uint64_t)v9, type metadata accessor for ParticipantGridView.IdentifiableParticipantTile);
      if ((static NSObject.== infix(_:_:)() & 1) != 0)
        break;
      outlined destroy of RecentsCallItem((uint64_t)v9, type metadata accessor for ParticipantGridView.IdentifiableParticipantTile);
      v15 += v16;
      if (!--v14)
      {
        v17 = 1;
        goto LABEL_8;
      }
    }
    outlined init with take of StagedCollaboration((uint64_t)v9, (uint64_t)v12, type metadata accessor for ParticipantGridView.IdentifiableParticipantTile);
    v17 = 0;
LABEL_8:
    v5 = v23;
    a1 = v24;
  }
  else
  {
    swift_bridgeObjectRetain();
    v17 = 1;
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v12, v17, 1, v6);
  swift_bridgeObjectRelease();
  if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v6) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v12, &demangling cache variable for type metadata for ParticipantGridView.IdentifiableParticipantTile?);
    v18 = type metadata accessor for UUID();
    v19 = a1;
    v20 = 1;
  }
  else
  {
    outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v12, (uint64_t)v5, type metadata accessor for ParticipantGridView.ParticipantTileInfo);
    v21 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(a1, v5, v21);
    outlined destroy of RecentsCallItem((uint64_t)v12, type metadata accessor for ParticipantGridView.IdentifiableParticipantTile);
    v19 = a1;
    v20 = 0;
    v18 = v21;
  }
  return __swift_storeEnumTagSinglePayload(v19, v20, 1, v18);
}

void ParticipantGridView.participantViewDidTapShutter(_:)()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_15_56();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_7_74();
  v4 = OUTLINED_FUNCTION_19_7((uint64_t)v2);
  if (!v5)
  {
    OUTLINED_FUNCTION_20_47();
    OUTLINED_FUNCTION_1();
    OUTLINED_FUNCTION_117_0();
  }
  OUTLINED_FUNCTION_30_7(v4, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_91();
}

void ParticipantGridView.participantViewDidTapRing(_:)()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_15_56();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_7_74();
  v4 = OUTLINED_FUNCTION_19_7((uint64_t)v2);
  if (!v5)
  {
    OUTLINED_FUNCTION_20_47();
    OUTLINED_FUNCTION_1();
    OUTLINED_FUNCTION_117_0();
  }
  OUTLINED_FUNCTION_30_7(v4, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_91();
}

void ParticipantGridView.participantViewDidTapKickMember(_:)()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_15_56();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_7_74();
  v4 = OUTLINED_FUNCTION_19_7((uint64_t)v2);
  if (!v5)
  {
    OUTLINED_FUNCTION_20_47();
    OUTLINED_FUNCTION_1();
    OUTLINED_FUNCTION_117_0();
  }
  OUTLINED_FUNCTION_30_7(v4, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_91();
}

void ParticipantGridView.participantView(_:didUpdateSashVisibility:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t);
  uint64_t v14;

  OUTLINED_FUNCTION_93();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_59_3();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v14 - v6;
  v8 = OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_41_1();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_11_2();
  ParticipantGridView.identifier(for:)((uint64_t)v7);
  OUTLINED_FUNCTION_69_0((uint64_t)v7, 1, v8);
  if (v10)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v7, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  }
  else
  {
    OUTLINED_FUNCTION_93_4(v2, (uint64_t)v7, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32));
    v11 = v0 + OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_delegate;
    OUTLINED_FUNCTION_1();
    if (MEMORY[0x1C3B752C0](v11))
    {
      swift_getObjectType();
      OUTLINED_FUNCTION_93_4(v1, v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16));
      OUTLINED_FUNCTION_83_0(v1, 0);
      v12 = OUTLINED_FUNCTION_64();
      v13(v12);
      swift_unknownObjectRelease();
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v1, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    }
    OUTLINED_FUNCTION_40_0(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  }
  OUTLINED_FUNCTION_52_1();
}

uint64_t ParticipantGridView.participantViewShouldShowShutterTappedAlert(_:)()
{
  return 1;
}

uint64_t ParticipantGridView.VideoInfoCache.cacheKey(for:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v14;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Participant(0);
  specialized Collection.first.getter(*(_QWORD *)(a1 + *(int *)(v5 + 44)), (uint64_t)v4);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v4, &demangling cache variable for type metadata for Participant?);
    goto LABEL_7;
  }
  v6 = *(void **)&v4[*(int *)(v5 + 28)];
  if (!v6)
  {
    outlined destroy of RecentsCallItem((uint64_t)v4, type metadata accessor for Participant);
LABEL_7:
    v11 = *(void **)(a1 + *(int *)(v5 + 28));
    if (v11)
    {
      outlined bridged method (ob) of @objc TUHandle.normalizedValue.getter(v11);
      return v12;
    }
    return 0;
  }
  v7 = v6;
  outlined destroy of RecentsCallItem((uint64_t)v4, type metadata accessor for Participant);
  v8 = objc_msgSend(v7, sel_normalizedValue);
  if (!v8)
  {

    return 0;
  }
  v9 = v8;
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v10;
}

uint64_t ParticipantGridView.VideoInfoCache.setVideoInfo(_:for:)(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  _BYTE v5[80];

  result = ParticipantGridView.VideoInfoCache.cacheKey(for:)(a2);
  if (v4)
  {
    outlined init with take of Any?(a1, (uint64_t)v5, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
    swift_beginAccess();
    outlined retain of [Participant](a1);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Cache<String, Participant.VideoInfo>);
    Cache.subscript.setter();
    return swift_endAccess();
  }
  return result;
}

void ParticipantGridView.VideoInfoCache.update(for:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t (*v5)(_QWORD);
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[42];
  _BYTE v11[88];

  v2 = type metadata accessor for Participant.State(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v10[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of ConversationControlsAppLaunchButtonType(a1, (uint64_t)v4, v5);
  if (swift_getEnumCaseMultiPayload() == 4)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
    v7 = &v4[*(int *)(v6 + 48)];
    outlined consume of Participant.CopresenceInfo?(*(_QWORD *)&v4[*(int *)(v6 + 64)], *(_QWORD *)&v4[*(int *)(v6 + 64) + 8]);
    memcpy(v10, v7, sizeof(v10));
    v8 = type metadata accessor for Date();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v4, v8);
    outlined init with take of Any?((uint64_t)&v10[2], (uint64_t)v11, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
    outlined retain of [Participant]((uint64_t)v11);
    outlined destroy of Participant.MediaInfo((uint64_t)v10);
    outlined init with take of Any?((uint64_t)v11, (uint64_t)v10, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
    if (v10[0])
    {
      ParticipantGridView.VideoInfoCache.setVideoInfo(_:for:)((uint64_t)v11, a1);
      outlined release of LinearGradient((uint64_t)v11);
    }
  }
  else
  {
    outlined destroy of RecentsCallItem((uint64_t)v4, type metadata accessor for Participant.State);
  }
}

uint64_t ParticipantGridView.VideoInfoCache.info(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  __int16 v19;
  _QWORD v20[2];
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  __int16 v26;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Cache<String, Participant.VideoInfo>);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = ParticipantGridView.VideoInfoCache.cacheKey(for:)(a1);
  if (v10)
  {
    v11 = result;
    v12 = v10;
    v13 = v2
        + OBJC_IVAR____TtCC15ConversationKit19ParticipantGridViewP33_C3C0D7D8F62A84253427EC61D899943E14VideoInfoCache_videoInfoCache;
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v13, v5);
    v20[0] = v11;
    v20[1] = v12;
    Cache.subscript.getter();
    swift_bridgeObjectRelease();
    result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v14 = v21;
    v15 = v22;
    v16 = v23;
    v17 = v24;
    v18 = v25;
    v19 = v26;
  }
  else
  {
    v18 = 0;
    v19 = 0;
    v14 = 0uLL;
    v15 = 0uLL;
    v16 = 0uLL;
    v17 = 0uLL;
  }
  *(_OWORD *)a2 = v14;
  *(_OWORD *)(a2 + 16) = v15;
  *(_OWORD *)(a2 + 32) = v16;
  *(_OWORD *)(a2 + 48) = v17;
  *(_QWORD *)(a2 + 64) = v18;
  *(_WORD *)(a2 + 72) = v19;
  return result;
}

uint64_t ParticipantGridView.VideoInfoCache.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0
     + OBJC_IVAR____TtCC15ConversationKit19ParticipantGridViewP33_C3C0D7D8F62A84253427EC61D899943E14VideoInfoCache_videoInfoCache;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Cache<String, Participant.VideoInfo>);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

id @nonobjc UIViewPropertyAnimator.init(duration:curve:animations:)(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  void *v4;
  void *v7;
  id v8;
  _QWORD v10[6];

  if (a2)
  {
    v10[4] = a2;
    v10[5] = a3;
    v10[0] = MEMORY[0x1E0C809B0];
    v10[1] = 1107296256;
    v10[2] = thunk for @escaping @callee_guaranteed () -> ();
    v10[3] = &block_descriptor_65;
    v7 = _Block_copy(v10);
    swift_release();
  }
  else
  {
    v7 = 0;
  }
  v8 = objc_msgSend(v4, sel_initWithDuration_curve_animations_, a1, v7, a4);
  _Block_release(v7);
  return v8;
}

uint64_t type metadata accessor for ParticipantGridView.FullScreenFocusedParticipantInfo(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for ParticipantGridView.FullScreenFocusedParticipantInfo);
}

uint64_t type metadata accessor for ParticipantGridView.AnimationInfo(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for ParticipantGridView.AnimationInfo);
}

void specialized ContiguousArray.reserveCapacity(_:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v5;

  v3 = *v1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v1 = v3;
  if ((_DWORD)isUniquelyReferenced_nonNull_native && a1 <= *(_QWORD *)(v3 + 24) >> 1)
  {
    OUTLINED_FUNCTION_18();
  }
  else
  {
    if (*(_QWORD *)(v3 + 16) <= a1)
      v5 = a1;
    else
      v5 = *(_QWORD *)(v3 + 16);
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(isUniquelyReferenced_nonNull_native, v5, 0);
  }
}

uint64_t type metadata accessor for ParticipantGridView.IdentifiableParticipantTile(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for ParticipantGridView.IdentifiableParticipantTile);
}

uint64_t type metadata accessor for ParticipantGridView.VideoInfoCache(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for ParticipantGridView.VideoInfoCache);
}

uint64_t sub_1BD1F486C()
{
  OUTLINED_FUNCTION_115();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_239();
  return swift_deallocObject();
}

uint64_t partial apply for closure #3 in ParticipantGridView.transition(to:mostProminentParticipantIdentifier:focusedParticipantIdentifier:selectedParticipantIdentifier:fullScreenFocusedParticipantInfo:layoutStyle:animationStyle:forced:)()
{
  uint64_t v0;

  return closure #3 in ParticipantGridView.transition(to:mostProminentParticipantIdentifier:focusedParticipantIdentifier:selectedParticipantIdentifier:fullScreenFocusedParticipantInfo:layoutStyle:animationStyle:forced:)(*(char **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t partial apply for closure #1 in ParticipantGridView.updateViews(for:localParticipantOrientation:)(uint64_t a1)
{
  return closure #1 in ParticipantGridView.updateViews(for:localParticipantOrientation:)(a1) & 1;
}

uint64_t sub_1BD1F48B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t);

  v1 = OUTLINED_FUNCTION_56_19();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_106_3();
  v4(v3);

  OUTLINED_FUNCTION_157();
  return swift_deallocObject();
}

id partial apply for closure #3 in ParticipantGridView.updateViews(for:localParticipantOrientation:)()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(OUTLINED_FUNCTION_56_19() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return closure #3 in ParticipantGridView.updateViews(for:localParticipantOrientation:)(v0 + v2, (__int128 *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1BD1F496C()
{
  OUTLINED_FUNCTION_115();
  return swift_deallocObject();
}

unint64_t lazy protocol witness table accessor for type ParticipantGridView.AnimationStyle and conformance ParticipantGridView.AnimationStyle()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ParticipantGridView.AnimationStyle and conformance ParticipantGridView.AnimationStyle;
  if (!lazy protocol witness table cache variable for type ParticipantGridView.AnimationStyle and conformance ParticipantGridView.AnimationStyle)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ParticipantGridView.AnimationStyle, &type metadata for ParticipantGridView.AnimationStyle);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ParticipantGridView.AnimationStyle and conformance ParticipantGridView.AnimationStyle);
  }
  return result;
}

void sub_1BD1F49CC(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  key path getter for ParticipantGridView.fullScreenFocusedParticipantInfo : ParticipantGridView(a1, &OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_fullScreenFocusedParticipantInfo, a2);
}

void sub_1BD1F49FC(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  key path getter for ParticipantGridView.fullScreenFocusedParticipantInfo : ParticipantGridView(a1, &OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_currentAnimationInfo, a2);
}

uint64_t dispatch thunk of ParticipantGridViewDelegate.mediaPipInfo.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ParticipantGridViewDelegate.overlappingInsets.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ParticipantGridViewDelegate.participantGridViewDelegateDidFinishAnimatingTiles(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of ParticipantGridViewDelegate.participantGridViewDelegate(_:didTapToggleFocus:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of ParticipantGridViewDelegate.participantGridViewDelegate(_:didTapShutterButton:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of ParticipantGridViewDelegate.participantGridViewDelegate(_:didTapRingButton:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of ParticipantGridViewDelegate.participantGridViewDelegate(_:didTapKickMemberButton:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t dispatch thunk of ParticipantGridViewDelegate.participantGridViewDelegate(_:didUpdateParticipantIdentifier:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 64))();
}

uint64_t dispatch thunk of ParticipantGridViewDelegate.participantGridViewDelegate(_:didSetOverlayHidden:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 72))();
}

uint64_t dispatch thunk of ParticipantGridViewDelegate.captionsLayoutState.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of ParticipantGridViewDelegate.isOneToOneModeEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of ParticipantGridViewDelegate.hasConnectedToCall.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t dispatch thunk of ParticipantGridViewDelegate.layoutIdiom.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t dispatch thunk of ParticipantGridViewDelegate.supportedDeviceOrientations.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t dispatch thunk of ParticipantGridViewDelegate.shouldShowLastFrameUI.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 120))();
}

uint64_t ObjC metadata update function for ParticipantGridView()
{
  return type metadata accessor for ParticipantGridView(0);
}

uint64_t type metadata accessor for ParticipantGridView(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for ParticipantGridView);
}

void type metadata completion function for ParticipantGridView()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  type metadata accessor for UIListContentConfiguration?(319, (unint64_t *)&lazy cache variable for type metadata for UUID?, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
  if (v0 <= 0x3F)
  {
    type metadata accessor for UIListContentConfiguration?(319, &lazy cache variable for type metadata for ParticipantGridView.FullScreenFocusedParticipantInfo?, (void (*)(uint64_t))type metadata accessor for ParticipantGridView.FullScreenFocusedParticipantInfo);
    if (v1 <= 0x3F)
    {
      type metadata accessor for UIListContentConfiguration?(319, &lazy cache variable for type metadata for ParticipantGridView.AnimationInfo?, (void (*)(uint64_t))type metadata accessor for ParticipantGridView.AnimationInfo);
      if (v2 <= 0x3F)
        swift_updateClassMetadata2();
    }
  }
}

uint64_t storeEnumTagSinglePayload for ParticipantGridView.AnimationStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BD1F4C6C + 4 * byte_1BD65090D[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BD1F4CA0 + 4 * byte_1BD650908[v4]))();
}

uint64_t sub_1BD1F4CA0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD1F4CA8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD1F4CB0);
  return result;
}

uint64_t sub_1BD1F4CBC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD1F4CC4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BD1F4CC8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD1F4CD0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for ParticipantGridView.AnimationStyle()
{
  OUTLINED_FUNCTION_34_0();
}

_QWORD *initializeBufferWithCopyOfBuffer for ParticipantGridView.ParticipantTileInfo(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  __int128 v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for UUID();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    v12 = *((_OWORD *)v11 + 1);
    *(_OWORD *)v10 = *(_OWORD *)v11;
    *((_OWORD *)v10 + 1) = v12;
    v10[32] = v11[32];
    v13 = (char *)a1 + v9;
    v14 = (char *)a2 + v9;
    *(_QWORD *)v13 = *(_QWORD *)v14;
    v13[8] = v14[8];
    v15 = a3[8];
    *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    *((_BYTE *)a1 + v15) = *((_BYTE *)a2 + v15);
  }
  return a1;
}

uint64_t initializeWithCopy for ParticipantGridView.ParticipantTileInfo(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  v11 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v11;
  *(_BYTE *)(v9 + 32) = *(_BYTE *)(v10 + 32);
  v12 = a1 + v8;
  v13 = a2 + v8;
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *(_BYTE *)(v12 + 8) = *(_BYTE *)(v13 + 8);
  v14 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v14) = *(_BYTE *)(a2 + v14);
  return a1;
}

uint64_t assignWithCopy for ParticipantGridView.ParticipantTileInfo(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 *v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;

  v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = (__int128 *)(a2 + v7);
  v10 = *v9;
  v11 = v9[1];
  *(_BYTE *)(v8 + 32) = *((_BYTE *)v9 + 32);
  *(_OWORD *)v8 = v10;
  *(_OWORD *)(v8 + 16) = v11;
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = *(_BYTE *)(v14 + 8);
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_BYTE *)(v13 + 8) = v15;
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  return a1;
}

uint64_t initializeWithTake for ParticipantGridView.ParticipantTileInfo(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  v11 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v11;
  *(_BYTE *)(v9 + 32) = *(_BYTE *)(v10 + 32);
  v12 = a1 + v8;
  v13 = a2 + v8;
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *(_BYTE *)(v12 + 8) = *(_BYTE *)(v13 + 8);
  v14 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v14) = *(_BYTE *)(a2 + v14);
  return a1;
}

uint64_t assignWithTake for ParticipantGridView.ParticipantTileInfo(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  v11 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v11;
  *(_BYTE *)(v9 + 32) = *(_BYTE *)(v10 + 32);
  v12 = a1 + v8;
  v13 = a2 + v8;
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *(_BYTE *)(v12 + 8) = *(_BYTE *)(v13 + 8);
  v14 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v14) = *(_BYTE *)(a2 + v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for ParticipantGridView.ParticipantTileInfo()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1BD1F5024()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_51_21();
  if (v0)
  {
    v1 = OUTLINED_FUNCTION_52_20();
    OUTLINED_FUNCTION_1_16(v1, v2, v3);
  }
  else
  {
    OUTLINED_FUNCTION_18();
  }
}

uint64_t storeEnumTagSinglePayload for ParticipantGridView.ParticipantTileInfo()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1BD1F5094(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_45_7();
  if (v7)
  {
    v8 = OUTLINED_FUNCTION_29_4();
    OUTLINED_FUNCTION_0_29(v8, v9, v10, v11);
  }
  else
  {
    *(_BYTE *)(a1 + *(int *)(a4 + 28)) = a2 + 1;
    OUTLINED_FUNCTION_18();
  }
}

uint64_t type metadata completion function for ParticipantGridView.ParticipantTileInfo()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for ParticipantGridView.FullScreenFocusedParticipantInfo(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for UUID();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    v12 = *(_OWORD *)v11;
    v13 = *((_OWORD *)v11 + 1);
    v10[32] = v11[32];
    *(_OWORD *)v10 = v12;
    *((_OWORD *)v10 + 1) = v13;
    *(_QWORD *)((char *)a1 + v9) = *(_QWORD *)((char *)a2 + v9);
    *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  }
  return a1;
}

uint64_t initializeWithCopy for ParticipantGridView.FullScreenFocusedParticipantInfo(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 *v10;
  __int128 v11;
  __int128 v12;

  v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = (__int128 *)(a2 + v7);
  v11 = *v10;
  v12 = v10[1];
  *(_BYTE *)(v9 + 32) = *((_BYTE *)v10 + 32);
  *(_OWORD *)v9 = v11;
  *(_OWORD *)(v9 + 16) = v12;
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  return a1;
}

uint64_t assignWithCopy for ParticipantGridView.FullScreenFocusedParticipantInfo(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 *v9;
  __int128 v10;
  __int128 v11;

  v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = (__int128 *)(a2 + v7);
  v10 = *v9;
  v11 = v9[1];
  *(_BYTE *)(v8 + 32) = *((_BYTE *)v9 + 32);
  *(_OWORD *)v8 = v10;
  *(_OWORD *)(v8 + 16) = v11;
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  return a1;
}

uint64_t initializeWithTake for ParticipantGridView.FullScreenFocusedParticipantInfo(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 *v10;
  __int128 v11;
  __int128 v12;

  v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = (__int128 *)(a2 + v7);
  v11 = *v10;
  v12 = v10[1];
  *(_BYTE *)(v9 + 32) = *((_BYTE *)v10 + 32);
  *(_OWORD *)v9 = v11;
  *(_OWORD *)(v9 + 16) = v12;
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  return a1;
}

uint64_t assignWithTake for ParticipantGridView.FullScreenFocusedParticipantInfo(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 *v10;
  __int128 v11;
  __int128 v12;

  v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = (__int128 *)(a2 + v7);
  v11 = *v10;
  v12 = v10[1];
  *(_BYTE *)(v9 + 32) = *((_BYTE *)v10 + 32);
  *(_OWORD *)v9 = v11;
  *(_OWORD *)(v9 + 16) = v12;
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  return a1;
}

uint64_t getEnumTagSinglePayload for ParticipantGridView.FullScreenFocusedParticipantInfo()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1BD1F5424()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_51_21();
  if (v0)
  {
    v1 = OUTLINED_FUNCTION_52_20();
    OUTLINED_FUNCTION_1_16(v1, v2, v3);
  }
  else
  {
    OUTLINED_FUNCTION_18();
  }
}

uint64_t storeEnumTagSinglePayload for ParticipantGridView.FullScreenFocusedParticipantInfo()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1BD1F5480(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_45_7();
  if (v7)
  {
    v8 = OUTLINED_FUNCTION_29_4();
    OUTLINED_FUNCTION_0_29(v8, v9, v10, v11);
  }
  else
  {
    *(_BYTE *)(a1 + *(int *)(a4 + 28)) = a2 + 2;
    OUTLINED_FUNCTION_18();
  }
}

uint64_t type metadata completion function for ParticipantGridView.FullScreenFocusedParticipantInfo()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ParticipantGridView.Traits(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65281 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65281 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BD1F55A0 + 4 * byte_1BD650917[v4]))();
  *a1 = a2 - 255;
  return ((uint64_t (*)(void))((char *)sub_1BD1F55D4 + 4 * byte_1BD650912[v4]))();
}

uint64_t sub_1BD1F55D4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_1BD1F55DC(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x1BD1F55E4);
  return result;
}

uint64_t sub_1BD1F55F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x1BD1F55F8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BD1F55FC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1BD1F5604(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

void type metadata accessor for ParticipantGridView.Traits()
{
  OUTLINED_FUNCTION_34_0();
}

_QWORD *initializeBufferWithCopyOfBuffer for ParticipantGridView.AnimationInfo(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for UUID();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t destroy for ParticipantGridView.ParticipantTileInfo(uint64_t a1)
{
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_33_0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for ParticipantGridView.AnimationInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithCopy for ParticipantGridView.AnimationInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t initializeWithTake for ParticipantGridView.AnimationInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for ParticipantGridView.AnimationInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t getEnumTagSinglePayload for ParticipantGridView.AnimationInfo()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1BD1F5850()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_51_21();
  if (v0)
  {
    v1 = OUTLINED_FUNCTION_52_20();
    OUTLINED_FUNCTION_1_16(v1, v2, v3);
  }
  else
  {
    OUTLINED_FUNCTION_18();
  }
}

uint64_t storeEnumTagSinglePayload for ParticipantGridView.AnimationInfo()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1BD1F58AC(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_45_7();
  if (v7)
  {
    v8 = OUTLINED_FUNCTION_29_4();
    OUTLINED_FUNCTION_0_29(v8, v9, v10, v11);
  }
  else
  {
    *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 3;
    OUTLINED_FUNCTION_18();
  }
}

uint64_t type metadata completion function for ParticipantGridView.AnimationInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return type metadata completion function for ParticipantGridView.AnimationInfo(a1, a2, a3, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998]);
}

uint64_t getEnumTagSinglePayload for ParticipantGridView.MediaPipInfo(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;

  if (a2)
  {
    if (a2 >= 0xFC && a1[24])
    {
      v2 = *(_DWORD *)a1 + 251;
    }
    else
    {
      if (*a1 <= 4u)
        v3 = 4;
      else
        v3 = *a1;
      v4 = v3 - 5;
      if (*a1 < 4u)
        v2 = -1;
      else
        v2 = v4;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ParticipantGridView.MediaPipInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 252;
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 4;
  }
  return result;
}

void type metadata accessor for ParticipantGridView.MediaPipInfo()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t ObjC metadata update function for ParticipantGridView.VideoInfoCache()
{
  return type metadata accessor for ParticipantGridView.VideoInfoCache(0);
}

void type metadata completion function for ParticipantGridView.VideoInfoCache()
{
  unint64_t v0;

  type metadata accessor for Cache<String, Participant.VideoInfo>();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void type metadata accessor for Cache<String, Participant.VideoInfo>()
{
  unint64_t v0;
  uint64_t v1;

  if (!lazy cache variable for type metadata for Cache<String, Participant.VideoInfo>)
  {
    v0 = type metadata accessor for Cache();
    if (!v1)
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for Cache<String, Participant.VideoInfo>);
  }
}

uint64_t outlined copy of ParticipantGridView.FrozenFrameOverlayState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned __int16 a10)
{
  uint64_t result;

  if (a10 >> 14 <= 2u)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t destroy for ParticipantGridView.FrozenFrameOverlayState(uint64_t a1)
{
  return outlined consume of ParticipantGridView.FrozenFrameOverlayState(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_WORD *)(a1 + 72));
}

uint64_t outlined consume of ParticipantGridView.FrozenFrameOverlayState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned __int16 a10)
{
  uint64_t result;

  if (a10 >> 14 <= 2u)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t initializeWithCopy for ParticipantGridView.FrozenFrameOverlayState(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int16 v13;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a2 + 64);
  outlined copy of ParticipantGridView.FrozenFrameOverlayState(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9, v10, v11, *(_WORD *)(a2 + 72));
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_QWORD *)(a1 + 64) = v11;
  *(_WORD *)(a1 + 72) = v13;
  return a1;
}

uint64_t assignWithCopy for ParticipantGridView.FrozenFrameOverlayState(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int16 v21;
  __int16 v23;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a2 + 64);
  outlined copy of ParticipantGridView.FrozenFrameOverlayState(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9, v10, v11, *(_WORD *)(a2 + 72));
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  v20 = *(_QWORD *)(a1 + 64);
  v21 = *(_WORD *)(a1 + 72);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_QWORD *)(a1 + 64) = v11;
  *(_WORD *)(a1 + 72) = v23;
  outlined consume of ParticipantGridView.FrozenFrameOverlayState(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21);
  return a1;
}

void *__swift_memcpy74_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x4AuLL);
}

uint64_t assignWithTake for ParticipantGridView.FrozenFrameOverlayState(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int16 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int16 v14;
  __int128 v15;
  __int128 v16;

  v3 = *(_QWORD *)(a2 + 64);
  v4 = *(_WORD *)(a2 + 72);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_QWORD *)(a1 + 48);
  v12 = *(_QWORD *)(a1 + 56);
  v13 = *(_QWORD *)(a1 + 64);
  v14 = *(_WORD *)(a1 + 72);
  v15 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v15;
  v16 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v16;
  *(_QWORD *)(a1 + 64) = v3;
  *(_WORD *)(a1 + 72) = v4;
  outlined consume of ParticipantGridView.FrozenFrameOverlayState(v5, v7, v6, v8, v9, v10, v11, v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for ParticipantGridView.FrozenFrameOverlayState(uint64_t a1, int a2)
{
  unint64_t v2;
  int8x16_t v3;
  unsigned int v4;
  int v5;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 74))
    {
      v5 = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      v3 = vandq_s8((int8x16_t)vshlq_u32((uint32x4_t)vdupq_n_s32(v2), (uint32x4_t)xmmword_1BD6508A0), (int8x16_t)xmmword_1BD6508B0);
      *(int8x8_t *)v3.i8 = vorr_s8(*(int8x8_t *)v3.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v3, v3, 8uLL));
      v4 = v3.i32[0] | (v2 >> 6) & 0xF8000000 | v3.i32[1];
      if (v4 > 0x80000000)
        v5 = ~v4;
      else
        v5 = -1;
    }
  }
  else
  {
    v5 = -1;
  }
  return (v5 + 1);
}

double storeEnumTagSinglePayload for ParticipantGridView.FrozenFrameOverlayState(uint64_t a1, int a2, int a3)
{
  double result;

  if (a2 < 0)
  {
    result = 0.0;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_WORD *)(a1 + 72) = 0;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(a1 + 74) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)a1 = 0;
      *(_QWORD *)(a1 + 8) = (-4 * a2) & 0xFE00 | (2 * (-a2 & 0x7FLL)) & 0xFFFFFFC10301FFFFLL | ((((unint64_t)-a2 >> 14) & 0x7F) << 17) & 0xFFFFFFC103FFFFFFLL | ((((unint64_t)-a2 >> 21) & 0x3F) << 26) & 0xFFFFFFC1FFFFFFFFLL | ((unint64_t)(-a2 >> 27) << 33);
      result = 0.0;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)(a1 + 48) = 0u;
      *(_OWORD *)(a1 + 58) = 0u;
      return result;
    }
    *(_BYTE *)(a1 + 74) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t getEnumTag for ParticipantGridView.FrozenFrameOverlayState(uint64_t a1)
{
  unsigned int v1;

  v1 = *(unsigned __int16 *)(a1 + 72) >> 14;
  if (v1 == 3)
    return (*(_DWORD *)a1 + 3);
  else
    return v1;
}

uint64_t destructiveProjectEnumData for ParticipantGridView.FrozenFrameOverlayState(uint64_t result)
{
  *(_WORD *)(result + 72) &= 0x3FFFu;
  return result;
}

int8x16_t destructiveInjectEnumTag for ParticipantGridView.FrozenFrameOverlayState(uint64_t a1, unsigned int a2)
{
  int8x16_t result;
  uint64_t v3;
  __int16 v4;

  if (a2 < 3)
  {
    v3 = *(_QWORD *)(a1 + 32) & 3;
    v4 = *(_WORD *)(a1 + 72) & 0x101 | ((_WORD)a2 << 14);
    result = vandq_s8(*(int8x16_t *)(a1 + 8), (int8x16_t)xmmword_1BD6508C0);
    *(int8x16_t *)(a1 + 8) = result;
    *(_QWORD *)(a1 + 32) = v3;
    *(_WORD *)(a1 + 72) = v4;
  }
  else
  {
    *(_QWORD *)a1 = a2 - 3;
    result.i64[0] = 0;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_WORD *)(a1 + 72) = -16384;
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticipantGridView.FrozenFrameOverlayState()
{
  return &type metadata for ParticipantGridView.FrozenFrameOverlayState;
}

_QWORD *initializeBufferWithCopyOfBuffer for ParticipantGridView.IdentifiableParticipantTile(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  __int128 v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  __int128 v17;
  id v18;
  uint64_t v19;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for UUID();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = (int *)type metadata accessor for ParticipantGridView.ParticipantTileInfo(0);
    v9 = v8[5];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = *((_OWORD *)v11 + 1);
    *(_OWORD *)v10 = *(_OWORD *)v11;
    *((_OWORD *)v10 + 1) = v12;
    v10[32] = v11[32];
    v13 = v8[6];
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    *(_QWORD *)v14 = *(_QWORD *)v15;
    v14[8] = v15[8];
    *((_BYTE *)a1 + v8[7]) = *((_BYTE *)a2 + v8[7]);
    *((_BYTE *)a1 + v8[8]) = *((_BYTE *)a2 + v8[8]);
    v16 = *(int *)(a3 + 20);
    v17 = *(_OWORD *)((char *)a2 + v16);
    *(_OWORD *)((char *)a1 + v16) = v17;
    v18 = (id)v17;
  }
  return a1;
}

void destroy for ParticipantGridView.IdentifiableParticipantTile(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);

}

uint64_t initializeWithCopy for ParticipantGridView.IdentifiableParticipantTile(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  id v17;

  v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = (int *)type metadata accessor for ParticipantGridView.ParticipantTileInfo(0);
  v8 = v7[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v11;
  *(_BYTE *)(v9 + 32) = *(_BYTE *)(v10 + 32);
  v12 = v7[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_BYTE *)(v13 + 8) = *(_BYTE *)(v14 + 8);
  *(_BYTE *)(a1 + v7[7]) = *(_BYTE *)(a2 + v7[7]);
  *(_BYTE *)(a1 + v7[8]) = *(_BYTE *)(a2 + v7[8]);
  v15 = *(int *)(a3 + 20);
  v16 = *(_OWORD *)(a2 + v15);
  *(_OWORD *)(a1 + v15) = v16;
  v17 = (id)v16;
  return a1;
}

uint64_t assignWithCopy for ParticipantGridView.IdentifiableParticipantTile(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  __int128 *v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  id v23;

  v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = (int *)type metadata accessor for ParticipantGridView.ParticipantTileInfo(0);
  v8 = v7[5];
  v9 = a1 + v8;
  v10 = (__int128 *)(a2 + v8);
  v11 = *v10;
  v12 = v10[1];
  *(_BYTE *)(v9 + 32) = *((_BYTE *)v10 + 32);
  *(_OWORD *)v9 = v11;
  *(_OWORD *)(v9 + 16) = v12;
  v13 = v7[6];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = *(_BYTE *)(v15 + 8);
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *(_BYTE *)(v14 + 8) = v16;
  *(_BYTE *)(a1 + v7[7]) = *(_BYTE *)(a2 + v7[7]);
  *(_BYTE *)(a1 + v7[8]) = *(_BYTE *)(a2 + v7[8]);
  v17 = *(int *)(a3 + 20);
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = *(void **)v19;
  v21 = *(_QWORD *)(v19 + 8);
  v22 = *(void **)v18;
  *(_QWORD *)v18 = *(_QWORD *)v19;
  v23 = v20;

  *(_QWORD *)(v18 + 8) = v21;
  return a1;
}

uint64_t initializeWithTake for ParticipantGridView.IdentifiableParticipantTile(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = (int *)type metadata accessor for ParticipantGridView.ParticipantTileInfo(0);
  v8 = v7[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v11;
  *(_BYTE *)(v9 + 32) = *(_BYTE *)(v10 + 32);
  v12 = v7[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_BYTE *)(v13 + 8) = *(_BYTE *)(v14 + 8);
  *(_BYTE *)(a1 + v7[7]) = *(_BYTE *)(a2 + v7[7]);
  *(_BYTE *)(a1 + v7[8]) = *(_BYTE *)(a2 + v7[8]);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for ParticipantGridView.IdentifiableParticipantTile(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;

  v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = (int *)type metadata accessor for ParticipantGridView.ParticipantTileInfo(0);
  v8 = v7[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v11;
  *(_BYTE *)(v9 + 32) = *(_BYTE *)(v10 + 32);
  v12 = v7[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_BYTE *)(v13 + 8) = *(_BYTE *)(v14 + 8);
  *(_BYTE *)(a1 + v7[7]) = *(_BYTE *)(a2 + v7[7]);
  *(_BYTE *)(a1 + v7[8]) = *(_BYTE *)(a2 + v7[8]);
  v15 = *(int *)(a3 + 20);
  v16 = a1 + v15;
  v17 = (uint64_t *)(a2 + v15);
  v18 = *v17;
  v19 = v17[1];
  v20 = *(void **)v16;
  *(_QWORD *)v16 = v18;

  *(_QWORD *)(v16 + 8) = v19;
  return a1;
}

uint64_t getEnumTagSinglePayload for ParticipantGridView.IdentifiableParticipantTile()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1BD1F62B8()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  type metadata accessor for ParticipantGridView.ParticipantTileInfo(0);
  OUTLINED_FUNCTION_51_21();
  if (v0)
  {
    v1 = OUTLINED_FUNCTION_52_20();
    OUTLINED_FUNCTION_1_16(v1, v2, v3);
  }
  else
  {
    OUTLINED_FUNCTION_18();
  }
}

uint64_t storeEnumTagSinglePayload for ParticipantGridView.IdentifiableParticipantTile()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1BD1F631C(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  type metadata accessor for ParticipantGridView.ParticipantTileInfo(0);
  OUTLINED_FUNCTION_45_7();
  if (v7)
  {
    v8 = OUTLINED_FUNCTION_29_4();
    OUTLINED_FUNCTION_0_29(v8, v9, v10, v11);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
    OUTLINED_FUNCTION_18();
  }
}

uint64_t type metadata completion function for ParticipantGridView.IdentifiableParticipantTile(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return type metadata completion function for ParticipantGridView.AnimationInfo(a1, a2, a3, type metadata accessor for ParticipantGridView.ParticipantTileInfo);
}

uint64_t type metadata completion function for ParticipantGridView.AnimationInfo(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result;
  unint64_t v5;

  result = a4(319);
  if (v5 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void outlined bridged method (ob) of @objc TUHandle.normalizedValue.getter(void *a1)
{
  id v2;

  v2 = objc_msgSend(a1, sel_normalizedValue);

  if (v2)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();

  }
  OUTLINED_FUNCTION_64();
  OUTLINED_FUNCTION_18();
}

uint64_t sub_1BD1F644C()
{
  OUTLINED_FUNCTION_115();
  return swift_deallocObject();
}

void partial apply for closure #3 in ParticipantGridView.configure(_:with:isMostActive:hasOtherInvitedParticipants:orientationChanged:)()
{
  uint64_t v0;

  closure #3 in ParticipantGridView.configure(_:with:isMostActive:hasOtherInvitedParticipants:orientationChanged:)(*(void **)(v0 + 16), (__int128 *)(v0 + 24));
}

uint64_t outlined init with copy of ParticipantVideoView.ViewModel(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for ParticipantVideoView.ViewModel(a2, a1);
  return a2;
}

uint64_t sub_1BD1F64B4()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BD1F64D8()
{
  swift_unknownObjectWeakDestroy();
  OUTLINED_FUNCTION_239();
  return swift_deallocObject();
}

uint64_t sub_1BD1F64F4()
{
  uint64_t v0;
  int *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t);
  id *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = (int *)OUTLINED_FUNCTION_14_2();
  v2 = (*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  swift_release();
  OUTLINED_FUNCTION_53_2();
  v3 = v0 + v2;
  OUTLINED_FUNCTION_144_1();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 5u:
      v4 = OUTLINED_FUNCTION_33();
      OUTLINED_FUNCTION_75(v4);
      break;
    case 4u:
      v12 = OUTLINED_FUNCTION_33();
      OUTLINED_FUNCTION_75(v12);
      v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      v14 = v3 + *(int *)(v13 + 48);
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v14 + 120) >= 2uLL)
        __swift_destroy_boxed_opaque_existential_1(v14 + 96);
      if (*(_QWORD *)(v14 + 312))
      {
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
      }
      if (*(_QWORD *)(v3 + *(int *)(v13 + 64) + 8))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      break;
    default:
      break;
  }
  v5 = v3 + v1[5];
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_106_3();
  v6(v5);
  v7 = (id *)(v3 + v1[7]);
  if (*v7)
  {

    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v8 = v3 + v1[14];
  v9 = OUTLINED_FUNCTION_33();
  if (!OUTLINED_FUNCTION_48_4(v8))
    OUTLINED_FUNCTION_40_0(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8));
  v10 = type metadata accessor for Participant.CountdownInfo(0);
  if (!OUTLINED_FUNCTION_48_4(v8 + *(int *)(v10 + 20)))
    OUTLINED_FUNCTION_40_0(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8));
  swift_release();
  OUTLINED_FUNCTION_157();
  return swift_deallocObject();
}

void partial apply for closure #1 in ParticipantGridView.scheduleUpdateToPausedHandoffOverlay(on:for:isMostActive:)()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(OUTLINED_FUNCTION_14_2() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  closure #1 in ParticipantGridView.scheduleUpdateToPausedHandoffOverlay(on:for:isMostActive:)(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), v0 + v2, *(_BYTE *)(v0 + v2 + *(_QWORD *)(v1 + 64)));
}

uint64_t sub_1BD1F6714()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    OUTLINED_FUNCTION_53_2();
  OUTLINED_FUNCTION_239();
  return swift_deallocObject();
}

uint64_t sub_1BD1F6734()
{
  OUTLINED_FUNCTION_115();
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in ParticipantGridView.startAnimations(_:animationStyle:completion:)(uint64_t a1)
{
  uint64_t *v1;

  return closure #2 in ParticipantGridView.startAnimations(_:animationStyle:completion:)(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1BD1F6768()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    OUTLINED_FUNCTION_53_2();

  return swift_deallocObject();
}

void partial apply for closure #1 in ParticipantGridView.startAnimations(_:animationStyle:completion:)(char a1)
{
  uint64_t v1;

  closure #1 in ParticipantGridView.startAnimations(_:animationStyle:completion:)(a1, *(void (**)(_QWORD))(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32));
}

id partial apply for closure #2 in closure #1 in ParticipantGridView.startAnimations(_:animationStyle:completion:)()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_removeFromSuperview);
}

void partial apply for closure #1 in closure #3 in ParticipantGridView.transition(to:mostProminentParticipantIdentifier:focusedParticipantIdentifier:selectedParticipantIdentifier:fullScreenFocusedParticipantInfo:layoutStyle:animationStyle:forced:)(uint64_t a1)
{
  uint64_t v1;

  closure #1 in closure #3 in ParticipantGridView.transition(to:mostProminentParticipantIdentifier:focusedParticipantIdentifier:selectedParticipantIdentifier:fullScreenFocusedParticipantInfo:layoutStyle:animationStyle:forced:)(a1, *(char **)(v1 + 16));
}

void partial apply for closure #3 in ParticipantGridView.frames(for:mostProminentIdentifier:focusedIdentifier:fullScreenFocusedParticipantInfo:)(unint64_t a1)
{
  uint64_t v1;

  closure #3 in ParticipantGridView.frames(for:mostProminentIdentifier:focusedIdentifier:fullScreenFocusedParticipantInfo:)(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void **)(v1 + 40));
}

uint64_t partial apply for closure #2 in ParticipantGridView.frames(for:mostProminentIdentifier:focusedIdentifier:fullScreenFocusedParticipantInfo:)(uint64_t a1)
{
  uint64_t v1;

  return closure #2 in ParticipantGridView.frames(for:mostProminentIdentifier:focusedIdentifier:fullScreenFocusedParticipantInfo:)(a1, *(_QWORD *)(v1 + 16)) & 1;
}

void outlined assign with copy of ParticipantGridView.AnimationInfo?(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_83(a1, a2, a3);
  OUTLINED_FUNCTION_38(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 24));
  OUTLINED_FUNCTION_0();
}

uint64_t dynamic_cast_existential_1_conditional(uint64_t a1)
{
  if (swift_conformsToProtocol2())
    return a1;
  else
    return 0;
}

uint64_t partial apply for closure #1 in ParticipantGridView.updateEMA(for:ema:audioPriority:videoPriority:)(uint64_t a1)
{
  return partial apply for closure #1 in ParticipantGridView.updateViews(for:localParticipantOrientation:)(a1) & 1;
}

uint64_t OUTLINED_FUNCTION_89_9(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  uint64_t v5;
  uint64_t v6;
  va_list va;

  va_start(va, a5);
  return outlined init with take of AspectRatio(v5 + *(int *)(v6 + 20), (uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_93_4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

double OUTLINED_FUNCTION_101_6()
{
  return 1.0;
}

uint64_t OUTLINED_FUNCTION_102_3()
{
  return type metadata accessor for ParticipantGridView.FullScreenFocusedParticipantInfo(0);
}

uint64_t OUTLINED_FUNCTION_103_2()
{
  return type metadata accessor for ParticipantGridView.FullScreenFocusedParticipantInfo(0);
}

uint64_t OUTLINED_FUNCTION_104_4()
{
  return type metadata accessor for ParticipantGridView.ParticipantTileInfo(0);
}

id OUTLINED_FUNCTION_119()
{
  return ParticipantGridView.tile(for:ofAClass:)();
}

BOOL OUTLINED_FUNCTION_124_4@<W0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return *(unsigned __int8 *)(v2 + a1) == *(unsigned __int8 *)(v1 + a1);
}

void OUTLINED_FUNCTION_128_1(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  outlined init with copy of ConversationControlsAppLaunchButtonType(v4, v3, a3);
}

void OUTLINED_FUNCTION_129_1(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  outlined destroy of RecentsCallItem(a1, v1);
}

uint64_t OUTLINED_FUNCTION_130_2()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_131_2@<X0>(uint64_t a1@<X1>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(v3, a1, v2);
}

uint64_t OUTLINED_FUNCTION_132_2()
{
  return _dispatchPreconditionTest(_:)();
}

uint64_t OUTLINED_FUNCTION_134_0()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_139_1()
{
  return Cache.init(countLimit:)();
}

unint64_t OUTLINED_FUNCTION_140_3(uint64_t a1)
{
  uint64_t v1;

  return specialized __RawDictionaryStorage.find<A>(_:)(v1 + *(int *)(a1 + 20));
}

uint64_t OUTLINED_FUNCTION_143_3()
{
  return type metadata accessor for ParticipantDimmingView();
}

uint64_t OUTLINED_FUNCTION_144_1()
{
  return type metadata accessor for Participant.State(0);
}

uint64_t OUTLINED_FUNCTION_145_0()
{
  return _dispatchPreconditionTest(_:)();
}

void OUTLINED_FUNCTION_147_2(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;

  outlined assign with copy of ParticipantGridView.AnimationInfo?(a1, v1, v2);
}

void *OUTLINED_FUNCTION_148(void *a1)
{
  const void *v1;

  return memcpy(a1, v1, 0x150uLL);
}

void OUTLINED_FUNCTION_150_0(Swift::Bool a1)
{
  ParticipantView.setInfoViewIsVisible(_:animated:)(a1, 1);
}

void UIButton.updateContentAlpha(_:)(double a1)
{
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t inited;
  id v16;
  id v17;
  id v18;

  v3 = v1;
  v5 = type metadata accessor for UIBackgroundConfiguration();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_77();
  v9 = v8 - v7;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIButton.Configuration?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_11_2();
  UIButton.configuration.getter();
  v11 = OUTLINED_FUNCTION_4_74();
  if (__swift_getEnumTagSinglePayload(v2, 1, v11))
  {
    outlined destroy of Conversation?(v2, &demangling cache variable for type metadata for UIButton.Configuration?);
LABEL_3:
    objc_msgSend(v3, sel_setAlpha_, a1);
    return;
  }
  UIButton.Configuration.background.getter();
  v12 = (void *)UIBackgroundConfiguration.customView.getter();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
  outlined destroy of Conversation?(v2, &demangling cache variable for type metadata for UIButton.Configuration?);
  if (!v12)
    goto LABEL_3;
  objc_opt_self();
  v13 = swift_dynamicCastObjCClass();
  if (!v13)
  {

    goto LABEL_3;
  }
  v14 = v13;
  objc_msgSend(v3, sel_setAlpha_, 1.0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UIView?>);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BD645390;
  *(_QWORD *)(inited + 32) = v14;
  v16 = v12;
  v17 = OUTLINED_FUNCTION_123((uint64_t)v16, sel_imageView);
  *(_QWORD *)(inited + 40) = v17;
  v18 = OUTLINED_FUNCTION_123((uint64_t)v17, sel_subtitleLabel);
  *(_QWORD *)(inited + 48) = v18;
  *(_QWORD *)(inited + 56) = OUTLINED_FUNCTION_123((uint64_t)v18, sel_titleLabel);
  specialized Array._endMutation()();
  OUTLINED_FUNCTION_0_91(*(void **)(inited + 32));
  OUTLINED_FUNCTION_0_91(*(void **)(inited + 40));
  OUTLINED_FUNCTION_0_91(*(void **)(inited + 48));
  OUTLINED_FUNCTION_0_91(*(void **)(inited + 56));
  swift_bridgeObjectRelease();

}

void static UIButton.Configuration.base(title:symbol:shape:style:context:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  _QWORD v17[3];
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[8];

  outlined init with copy of SymbolImageDescribing?(a3, (uint64_t)v17, (uint64_t *)&demangling cache variable for type metadata for SymbolImageDescribing?);
  v13 = v18;
  if (v18)
  {
    v14 = v19;
    __swift_project_boxed_opaque_existential_1(v17, v18);
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v14 + 8))(v20, v13, v14);
    v15 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
    OUTLINED_FUNCTION_59(v15, (unint64_t *)&lazy cache variable for type metadata for UIImage);
    v16 = static UIImage.symbolImage(for:)((uint64_t)v20);
    outlined release of SymbolImageDescription((uint64_t)v20);
  }
  else
  {
    outlined destroy of Conversation?((uint64_t)v17, (uint64_t *)&demangling cache variable for type metadata for SymbolImageDescribing?);
    v16 = 0;
  }
  static UIButton.Configuration.base(title:image:shape:style:context:)(a1, a2, v16, a4, a5, a6, a7);

}

void UIButton.Configuration.withBackgroundStyle(_:)(void *a1@<X0>, unsigned __int8 a2@<W2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  id v9;

  type metadata accessor for UIBackgroundConfiguration();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_77();
  OUTLINED_FUNCTION_4_74();
  OUTLINED_FUNCTION_9_3();
  v8(a3, v3);
  if (!(a2 >> 6))
    __asm { BR              X10 }
  if (a2 >> 6 == 1)
  {
    v9 = a1;
    static UIBackgroundConfiguration.clear()();
    UIButton.Configuration.background.setter();
    UIButton.Configuration.baseBackgroundColor.setter();
  }
  OUTLINED_FUNCTION_52_1();
}

id UIButton.init(imageNamed:supressesHairlineThickening:)(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;

  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  v8 = __swift_mutable_project_boxed_opaque_existential_1(a1, v6);
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_0_7();
  (*(void (**)(uint64_t))(v9 + 16))(v3);
  v10 = specialized UIButton.init(imageNamed:supressesHairlineThickening:)(v3, a2, v2, v6, v7);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v10;
}

uint64_t UIButton.add(target:action:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[3];
  uint64_t v11;

  outlined init with copy of SymbolImageDescribing?(a1, (uint64_t)v10, &demangling cache variable for type metadata for Any?);
  v5 = v11;
  if (v11)
  {
    v6 = __swift_project_boxed_opaque_existential_1(v10, v11);
    v7 = *(_QWORD *)(v5 - 8);
    MEMORY[0x1E0C80A78](v6);
    OUTLINED_FUNCTION_11_2();
    (*(void (**)(uint64_t))(v7 + 16))(v3);
    v8 = _bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v3, v5);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  }
  else
  {
    v8 = 0;
  }
  objc_msgSend(v2, sel_addTarget_action_forControlEvents_, v8, a2, 64);
  return swift_unknownObjectRelease();
}

uint64_t UIButton.title.getter()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_14_9(v0, sel_titleForState_);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

void key path setter for UIButton.title : UIButton(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  UIButton.title.setter(v1, v2);
}

void UIButton.title.setter(uint64_t a1, uint64_t a2)
{
  void *v2;

  outlined bridged method (mbnnn) of @objc UIButton.setTitle(_:for:)(a1, a2, 0, v2);
}

void UIButton.title.modify(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;

  a1[2] = v1;
  *a1 = UIButton.title.getter();
  a1[1] = v3;
  OUTLINED_FUNCTION_0();
}

void UIButton.title.modify(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    v2 = OUTLINED_FUNCTION_21_43();
    outlined bridged method (mbnnn) of @objc UIButton.setTitle(_:for:)(v2, v3, v4, v5);
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = OUTLINED_FUNCTION_21_43();
    outlined bridged method (mbnnn) of @objc UIButton.setTitle(_:for:)(v6, v7, v8, v9);
  }
}

id UIButton.image.getter()
{
  void *v0;

  return OUTLINED_FUNCTION_14_9(v0, sel_imageForState_);
}

void key path setter for UIButton.image : UIButton(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  UIButton.image.setter(v1);
}

void UIButton.image.setter(void *a1)
{
  void *v1;

  objc_msgSend(v1, sel_setImage_forState_, a1, 0);
  OUTLINED_FUNCTION_3_5(a1);
}

void UIButton.image.modify(_QWORD *a1)
{
  void *v1;

  a1[1] = v1;
  *a1 = OUTLINED_FUNCTION_14_9(v1, sel_imageForState_);
  OUTLINED_FUNCTION_0();
}

void UIButton.image.modify(void **a1)
{
  void *v1;

  v1 = *a1;
  objc_msgSend(a1[1], sel_setImage_forState_);
  OUTLINED_FUNCTION_3_5(v1);
}

uint64_t UIButton.Configuration.withShape(_:)(unsigned __int8 a1)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v9)(_BYTE *, _QWORD);
  _BYTE v10[32];

  v2 = a1;
  v3 = type metadata accessor for UIButton.Configuration.CornerStyle();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_4_74();
  v5 = OUTLINED_FUNCTION_15_57();
  v6(v5, v1);
  v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 104);
  if (v2)
  {
    OUTLINED_FUNCTION_20_48(*MEMORY[0x1E0DC3060], v7);
    return UIButton.Configuration.cornerStyle.setter();
  }
  else
  {
    OUTLINED_FUNCTION_20_48(*MEMORY[0x1E0DC3040], v7);
    UIButton.Configuration.cornerStyle.setter();
    v9 = (uint64_t (*)(_BYTE *, _QWORD))UIButton.Configuration.background.modify();
    UIBackgroundConfiguration.cornerRadius.setter();
    return v9(v10, 0);
  }
}

uint64_t UIButton.Configuration.withAttributedTitle(title:foregroundColor:context:)@<X0>(void *a1@<X2>, unsigned __int8 a2@<W3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  int v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t inited;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  void *v23;
  uint64_t v24;
  void *v25;
  id v26;
  id v27;
  uint64_t v28;
  void **v29;
  void *v30;
  void *v31;
  uint64_t v32;
  id v33;
  id v34;
  Class isa;
  Class v36;
  uint64_t v37;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v39 = a1;
  v6 = a2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = type metadata accessor for AttributeContainer();
  v40 = *(_QWORD *)(v41 - 8);
  MEMORY[0x1E0C80A78](v41);
  OUTLINED_FUNCTION_77();
  v12 = v11 - v10;
  v13 = type metadata accessor for AttributedString();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_0_7();
  OUTLINED_FUNCTION_4_74();
  OUTLINED_FUNCTION_9_3();
  v42 = a3;
  v15(a3, v3);
  swift_bridgeObjectRetain();
  AttributeContainer.init()();
  AttributedString.init(_:attributes:)();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<(NSAttributedStringKey, Any)>);
  if (v6 == 1)
  {
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1BD645380;
    v17 = (void *)*MEMORY[0x1E0DC1138];
    *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
    OUTLINED_FUNCTION_59(inited, (unint64_t *)&lazy cache variable for type metadata for UIFont);
    v19 = v18;
    v20 = *MEMORY[0x1E0DC4B10];
    v21 = v17;
    v22 = static UIFont.preferredFont(textStyle:weight:maximumPointSize:)(v20, 0x403E000000000000, 0);
    *(_QWORD *)(inited + 40) = v22;
    v23 = (void *)*MEMORY[0x1E0DC1140];
    *(_QWORD *)(inited + 64) = v19;
    *(_QWORD *)(inited + 72) = v23;
    OUTLINED_FUNCTION_59((uint64_t)v22, (unint64_t *)&lazy cache variable for type metadata for UIColor);
    *(_QWORD *)(inited + 104) = v24;
    v25 = v39;
    *(_QWORD *)(inited + 80) = v39;
    type metadata accessor for NSAttributedStringKey(0);
    lazy protocol witness table accessor for type NSAttributedStringKey and conformance NSAttributedStringKey();
    v26 = v23;
    v27 = v25;
  }
  else
  {
    v28 = swift_initStackObject();
    v29 = (void **)MEMORY[0x1E0DC1138];
    *(_OWORD *)(v28 + 16) = xmmword_1BD6441D0;
    v30 = *v29;
    *(_QWORD *)(v28 + 32) = *v29;
    v31 = (void *)objc_opt_self();
    v32 = *MEMORY[0x1E0DC4B10];
    v33 = v30;
    v34 = objc_msgSend(v31, sel_preferredFontForTextStyle_, v32);
    isa = UIFont.withTraits(_:)(0x8002u).super.isa;

    v36 = UIFont.caseSensitive()().super.isa;
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIFont);
    *(_QWORD *)(v28 + 64) = v37;
    *(_QWORD *)(v28 + 40) = v36;
    type metadata accessor for NSAttributedStringKey(0);
    lazy protocol witness table accessor for type NSAttributedStringKey and conformance NSAttributedStringKey();
  }
  Dictionary.init(dictionaryLiteral:)();
  AttributeContainer.init(_:)();
  AttributedString.setAttributes(_:)();
  (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v12, v41);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v9, v4, v13);
  __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v13);
  UIButton.Configuration.attributedTitle.setter();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v4, v13);
}

uint64_t UIButton.Configuration.withPadding(shape:context:)(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  v3 = a2;
  OUTLINED_FUNCTION_4_74();
  v4 = OUTLINED_FUNCTION_15_57();
  v5(v4, v2);
  if (v3)
  {
    OUTLINED_FUNCTION_18_50();
    UIButton.Configuration.contentInsets.setter();
    return UIButton.Configuration.imagePadding.setter();
  }
  else
  {
    OUTLINED_FUNCTION_22_43();
    return UIButton.Configuration.contentInsets.setter();
  }
}

void static UIButton.Configuration.base(title:image:shape:style:context:)(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X8>)
{
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  int v33;
  uint64_t (*v34)(void);
  char v35;
  id v36;
  int v37;
  id v38;
  char v39;
  void *v40;
  char v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE *v45;
  _BYTE *v46;
  void *v47;
  uint64_t v48;
  void (*v49)(_BYTE *, _BYTE *, uint64_t);
  id v50;
  uint64_t v51;
  void *v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  _BYTE v56[4];
  int v57;
  void *v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  _BYTE *v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _BYTE *v67;
  void *v68;
  _BYTE *v69;
  int v70;
  _BYTE *v71;
  char v72[24];
  void *v73;
  void *v74;
  _QWORD v75[2];
  unsigned __int8 v76;
  uint64_t v77;
  void *v78;
  void *v79;
  unsigned __int8 v80;

  LODWORD(v63) = a4;
  v66 = a2;
  v59 = a1;
  outlined init with take of ButtonStyle?(a5, (uint64_t)v72);
  v11 = v73;
  v12 = v74;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIConfigurationColorTransformer?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_77();
  v64 = v15 - v14;
  v65 = OUTLINED_FUNCTION_4_74();
  v16 = *(_QWORD *)(v65 - 8);
  v17 = MEMORY[0x1E0C80A78](v65);
  v19 = &v56[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v20 = MEMORY[0x1E0C80A78](v17);
  v22 = &v56[-v21];
  v23 = MEMORY[0x1E0C80A78](v20);
  v25 = &v56[-v24];
  v26 = MEMORY[0x1E0C80A78](v23);
  v71 = &v56[-v27];
  MEMORY[0x1E0C80A78](v26);
  v69 = &v56[-v28];
  outlined init with take of ButtonStyle?(a5, (uint64_t)v75);
  v67 = (_BYTE *)a7;
  v68 = a3;
  v70 = a6;
  v62 = v19;
  if (v77)
  {
    v58 = v12;
    v60 = v11;
    v61 = v16;
    v29 = (void *)v75[0];
    v30 = (void *)v75[1];
    v57 = v76;
    v32 = v78;
    v31 = v79;
    v33 = v80;
    if (one-time initialization token for shared != -1)
      swift_once();
    v34 = *(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 320);
    v35 = v34();
    if ((v35 & 1) != 0)
      v36 = v32;
    else
      v36 = v29;
    if ((v35 & 1) != 0)
    {
      v30 = v31;
      v37 = v33;
    }
    else
    {
      v37 = v57;
    }
    v38 = outlined copy of ButtonBackgroundStyle(v36, v30, v37);
    v39 = ((uint64_t (*)(id))v34)(v38);
    v40 = v60;
    if ((v39 & 1) != 0)
      v40 = v58;
    v60 = v40;
    v41 = v70;
    v16 = v61;
  }
  else
  {
    v42 = (void *)objc_opt_self();
    v36 = objc_msgSend(v42, sel_systemGrayColor);
    v60 = objc_msgSend(v42, sel_labelColor);
    v37 = 64;
    v41 = a6;
  }
  static UIButton.Configuration.filled()();
  UIButton.Configuration.withShape(_:)(v63);
  v43 = (uint64_t)v22;
  v44 = v65;
  OUTLINED_FUNCTION_7_75(v43);
  v45 = v71;
  v63 = v36;
  LODWORD(v61) = v37;
  UIButton.Configuration.withBackgroundStyle(_:)(v36, v37, (uint64_t)v71);
  OUTLINED_FUNCTION_7_75((uint64_t)v25);
  v46 = v62;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v16 + 16))(v62, v45, v44);
  if (v41)
  {
    OUTLINED_FUNCTION_18_50();
    UIButton.Configuration.contentInsets.setter();
    UIButton.Configuration.imagePadding.setter();
  }
  else
  {
    OUTLINED_FUNCTION_22_43();
    UIButton.Configuration.contentInsets.setter();
  }
  v47 = v68;
  v48 = (uint64_t)v69;
  v49 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v16 + 32);
  v49(v69, v46, v44);
  OUTLINED_FUNCTION_7_75((uint64_t)v71);
  v50 = v47;
  UIButton.Configuration.image.setter();
  v51 = swift_allocObject();
  v52 = v60;
  *(_QWORD *)(v51 + 16) = v60;
  v53 = v52;
  v54 = v64;
  UIConfigurationColorTransformer.init(_:)();
  v55 = type metadata accessor for UIConfigurationColorTransformer();
  __swift_storeEnumTagSinglePayload(v54, 0, 1, v55);
  UIButton.Configuration.imageColorTransformer.setter();
  if (v66)
  {
    UIButton.Configuration.withAttributedTitle(title:foregroundColor:context:)(v53, v70, (uint64_t)v67);
    OUTLINED_FUNCTION_6_60();

    OUTLINED_FUNCTION_7_75(v48);
  }
  else
  {

    OUTLINED_FUNCTION_6_60();
    v49(v67, (_BYTE *)v48, v44);
  }
  OUTLINED_FUNCTION_52_1();
}

void outlined bridged method (mbnnn) of @objc UIButton.setTitle(_:for:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v6;

  v6 = (id)MEMORY[0x1C3B72E00]();
  swift_bridgeObjectRelease();
  objc_msgSend(a4, sel_setTitle_forState_, v6, a3);

}

id specialized UIButton.init(imageNamed:supressesHairlineThickening:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v20;

  v8 = *(_QWORD *)(a4 - 8);
  MEMORY[0x1E0C80A78](a1);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v8 + 32))(v10);
  v11 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
  v13 = v12;
  v14 = v11;
  v15 = (void *)specialized static UIImage.image(named:)((uint64_t)v10, v13, a4, a5);
  v16 = v15;
  if ((a2 & 1) != 0)
  {
    v17 = objc_msgSend(v15, sel__imageThatSuppressesAccessibilityHairlineThickening);

    v16 = v17;
  }
  v18 = v16;
  objc_msgSend(v14, sel_setImage_forState_, v18, 0);

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, a4);
  return v14;
}

uint64_t outlined init with copy of SymbolImageDescribing?(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  void (*v5)(uint64_t, uint64_t);

  __swift_instantiateConcreteTypeFromMangledName(a3);
  OUTLINED_FUNCTION_9_3();
  v5(a2, a1);
  return a2;
}

uint64_t outlined init with take of ButtonStyle?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ButtonStyle?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BD1F7F9C()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BD1F7FC0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = UIButton.title.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

id sub_1BD1F7FEC@<X0>(_QWORD *a1@<X8>)
{
  id result;

  result = UIButton.image.getter();
  *a1 = result;
  return result;
}

id LinkDetailActionCollectionViewCell.accessoryImageView.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC15ConversationKit34LinkDetailActionCollectionViewCell____lazy_storage___accessoryImageView;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC15ConversationKit34LinkDetailActionCollectionViewCell____lazy_storage___accessoryImageView);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC15ConversationKit34LinkDetailActionCollectionViewCell____lazy_storage___accessoryImageView);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_init);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

uint64_t key path setter for LinkDetailActionCollectionViewCell.linkDetailImage : LinkDetailActionCollectionViewCell(id *a1, _QWORD **a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x80);
  v4 = *a1;
  return v3(v2);
}

void *LinkDetailActionCollectionViewCell.linkDetailImage.getter()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;

  v1 = (void **)(v0 + OBJC_IVAR____TtC15ConversationKit34LinkDetailActionCollectionViewCell_linkDetailImage);
  OUTLINED_FUNCTION_2_0();
  v2 = *v1;
  v3 = v2;
  return v2;
}

void LinkDetailActionCollectionViewCell.linkDetailImage.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  id v5;

  v3 = (void **)(v1 + OBJC_IVAR____TtC15ConversationKit34LinkDetailActionCollectionViewCell_linkDetailImage);
  OUTLINED_FUNCTION_2_0();
  v4 = *v3;
  *v3 = a1;
  v5 = a1;

  LinkDetailActionCollectionViewCell.applyValues()();
}

uint64_t (*LinkDetailActionCollectionViewCell.linkDetailImage.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_2_0();
  return LinkDetailActionCollectionViewCell.linkDetailImage.modify;
}

uint64_t LinkDetailActionCollectionViewCell.linkDetailImage.modify(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    return LinkDetailActionCollectionViewCell.applyValues()();
  return result;
}

Swift::Void __swiftcall LinkDetailActionCollectionViewCell.prepareForReuse()()
{
  _QWORD *v0;
  objc_super v1;

  v1.receiver = v0;
  v1.super_class = (Class)type metadata accessor for LinkDetailActionCollectionViewCell();
  objc_msgSendSuper2(&v1, sel_prepareForReuse);
  (*(void (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))(0);
}

uint64_t LinkDetailActionCollectionViewCell.applyValues()()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  void *v30;
  uint64_t *boxed_opaque_existential_1;
  id v33;
  uint64_t (**v34)();
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  unint64_t v39;
  uint64_t v40;
  id v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52[3];
  uint64_t v53;
  uint64_t v54;

  v1 = type metadata accessor for UICellAccessory();
  v50 = *(_QWORD *)(v1 - 8);
  v51 = v1;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_41();
  v49 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICellAccessory.LayoutDimension?);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_41();
  v45 = v5;
  v6 = type metadata accessor for UICellAccessory.Placement();
  v43 = *(_QWORD *)(v6 - 8);
  v44 = v6;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_77();
  v10 = v9 - v8;
  v11 = type metadata accessor for UICellAccessory.CustomViewConfiguration();
  v47 = *(_QWORD *)(v11 - 8);
  v48 = v11;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_41();
  v46 = v13;
  v14 = type metadata accessor for UIListContentConfiguration.TextProperties();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_77();
  v18 = v17 - v16;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIListContentConfiguration?);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v19);
  OUTLINED_FUNCTION_77();
  v22 = v21 - v20;
  v23 = type metadata accessor for UIListContentConfiguration();
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  OUTLINED_FUNCTION_77();
  v27 = v26 - v25;
  v28 = OUTLINED_FUNCTION_5_74(*v0);
  if (!v28)
    return UICollectionViewListCell.accessories.setter();
  v42 = (void *)v28;
  v41 = objc_msgSend(v0, sel_tintColor);
  MEMORY[0x1C3B736F4](v52);
  if (!v53)
  {
    outlined destroy of Conversation?((uint64_t)v52, &demangling cache variable for type metadata for UIContentConfiguration?);
    OUTLINED_FUNCTION_72(v22, 1);
    goto LABEL_7;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIContentConfiguration);
  v29 = swift_dynamicCast();
  OUTLINED_FUNCTION_72(v22, v29 ^ 1u);
  if (__swift_getEnumTagSinglePayload(v22, 1, v23) == 1)
  {
LABEL_7:
    outlined destroy of Conversation?(v22, &demangling cache variable for type metadata for UIListContentConfiguration?);
    v30 = v41;
    goto LABEL_8;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 32))(v27, v22, v23);
  UIListContentConfiguration.textProperties.getter();
  v30 = (void *)UIListContentConfiguration.TextProperties.color.getter();

  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v18, v14);
  UIListContentConfiguration.directionalLayoutMargins.setter();
  v53 = v23;
  v54 = MEMORY[0x1E0DC2398];
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v52);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v24 + 16))(boxed_opaque_existential_1, v27, v23);
  MEMORY[0x1C3B73700](v52);
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v27, v23);
LABEL_8:
  v33 = LinkDetailActionCollectionViewCell.accessoryImageView.getter();
  objc_msgSend(v33, sel_setImage_, v42);

  LinkDetailActionCollectionViewCell.accessoryImageView.getter();
  v34 = (uint64_t (**)())(v10
                       + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (displayed: UICellAccessory.DisplayedState, at: ()))
                                + 48));
  v35 = *MEMORY[0x1E0DC1C20];
  v36 = type metadata accessor for UICellAccessory.DisplayedState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 104))(v10, v35, v36);
  *v34 = OUTLINED_FUNCTION_28_0;
  v34[1] = 0;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v43 + 104))(v10, *MEMORY[0x1E0DC1D18], v44);
  v37 = type metadata accessor for UICellAccessory.LayoutDimension();
  __swift_storeEnumTagSinglePayload(v45, 1, 1, v37);
  v38 = v30;
  UICellAccessory.CustomViewConfiguration.init(customView:placement:isHidden:reservedLayoutWidth:tintColor:maintainsFixedSize:)();
  static UICellAccessory.customView(configuration:)();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UICellAccessory>);
  v39 = (*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
  v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = xmmword_1BD6441D0;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v50 + 16))(v40 + v39, v49, v51);
  UICollectionViewListCell.accessories.setter();

  (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v49, v51);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v47 + 8))(v46, v48);
}

uint64_t type metadata accessor for LinkDetailActionCollectionViewCell()
{
  return objc_opt_self();
}

id LinkDetailActionCollectionViewCell.__allocating_init(frame:)()
{
  Class v0;
  id v1;
  double v2;
  id v3;
  SEL v4;

  OUTLINED_FUNCTION_17_7();
  v1 = objc_allocWithZone(v0);
  v2 = OUTLINED_FUNCTION_15_0();
  return objc_msgSend(v3, v4, v2);
}

id LinkDetailActionCollectionViewCell.init(frame:)()
{
  uint64_t v0;
  double v1;
  objc_super *v2;
  SEL v3;
  uint64_t v5;

  OUTLINED_FUNCTION_17_7();
  *(_QWORD *)(v0
            + OBJC_IVAR____TtC15ConversationKit34LinkDetailActionCollectionViewCell____lazy_storage___accessoryImageView) = 0;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit34LinkDetailActionCollectionViewCell_linkDetailImage) = 0;
  v5 = type metadata accessor for LinkDetailActionCollectionViewCell();
  v1 = OUTLINED_FUNCTION_15_0();
  return objc_msgSendSuper2(v2, v3, v1, v0, v5);
}

id LinkDetailActionCollectionViewCell.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id LinkDetailActionCollectionViewCell.init(coder:)(void *a1)
{
  char *v1;
  id v3;
  objc_super v5;

  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit34LinkDetailActionCollectionViewCell____lazy_storage___accessoryImageView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit34LinkDetailActionCollectionViewCell_linkDetailImage] = 0;
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for LinkDetailActionCollectionViewCell();
  v3 = objc_msgSendSuper2(&v5, sel_initWithCoder_, a1);

  return v3;
}

id LinkDetailActionCollectionViewCell.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LinkDetailActionCollectionViewCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BD1F88CC@<X0>(uint64_t **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = OUTLINED_FUNCTION_5_74(**a1);
  *a2 = result;
  return result;
}

uint64_t method lookup function for LinkDetailActionCollectionViewCell()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of LinkDetailActionCollectionViewCell.linkDetailImage.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of LinkDetailActionCollectionViewCell.linkDetailImage.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of LinkDetailActionCollectionViewCell.linkDetailImage.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

id LocalParticipantView.controlsBottomAnchor.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_controlsView), sel_bottomAnchor);
}

uint64_t static LocalParticipantLongPressAction.== infix(_:_:)()
{
  return 1;
}

void LocalParticipantLongPressAction.hash(into:)()
{
  Hasher._combine(_:)(0);
  OUTLINED_FUNCTION_0();
}

void LocalParticipantLongPressAction.hashValue.getter()
{
  OUTLINED_FUNCTION_5_1();
  Hasher._combine(_:)(0);
  OUTLINED_FUNCTION_4_6();
  OUTLINED_FUNCTION_2();
}

void *LocalParticipantView.buttonVisualEffectGroupName.unsafeMutableAddressor()
{
  return &static LocalParticipantView.buttonVisualEffectGroupName;
}

unint64_t static LocalParticipantView.buttonVisualEffectGroupName.getter()
{
  return 0xD00000000000001DLL;
}

id LocalParticipantView.participantView.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_participantView);
}

id LocalParticipantView.controlsView.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_controlsView);
}

uint64_t key path getter for LocalParticipantView.delegate : LocalParticipantView@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *a1 + OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_delegate;
  swift_beginAccess();
  result = MEMORY[0x1C3B752C0](v3);
  v5 = *(_QWORD *)(v3 + 8);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t key path setter for LocalParticipantView.delegate : LocalParticipantView(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *a2 + OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_delegate;
  swift_beginAccess();
  *(_QWORD *)(v3 + 8) = v2;
  return swift_unknownObjectWeakAssign();
}

void LocalParticipantView.delegate.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_26();
}

void LocalParticipantView.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_delegate;
  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_9_0();
}

void LocalParticipantView.delegate.modify()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2 = OUTLINED_FUNCTION_45();
  *v0 = v2;
  v3 = OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_delegate;
  v2[5] = v1;
  v2[6] = v3;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_26();
}

void sub_1BD1F8C24(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 8);
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = v3;
  OUTLINED_FUNCTION_18();
}

BOOL static LocalParticipantView.DragEventType.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

void LocalParticipantView.DragEventType.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
  Hasher._combine(_:)(a2);
  OUTLINED_FUNCTION_0();
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance LocalParticipantView.DragEventType(char *a1, char *a2)
{
  return static LocalParticipantView.DragEventType.== infix(_:_:)(*a1, *a2);
}

uint64_t protocol witness for Hashable.hashValue.getter in conformance LocalParticipantView.DragEventType()
{
  unsigned __int8 *v0;

  return LocalParticipantView.DragEventType.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance LocalParticipantView.DragEventType(uint64_t a1)
{
  unsigned __int8 *v1;

  LocalParticipantView.DragEventType.hash(into:)(a1, *v1);
}

void LocalParticipantView.dragEnabled.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_32();
}

void LocalParticipantView.dragEnabled.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_dragEnabled);
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  OUTLINED_FUNCTION_32();
}

void LocalParticipantView.dragEnabled.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void LocalParticipantView.blurEnabled.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_32();
}

uint64_t key path getter for LocalParticipantView.blurEnabled : LocalParticipantView@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_blurEnabled);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void LocalParticipantView.blurEnabled.setter(char a1)
{
  LocalParticipantView.blurEnabled.setter(a1, &OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_blurEnabled, (void (*)(uint64_t))LocalParticipantView.blurEnabled.didset);
}

void LocalParticipantView.blurEnabled.didset()
{
  uint64_t v0;
  _QWORD *v1;
  unsigned __int8 *v2;

  v1 = *(_QWORD **)(v0 + OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_controlsView);
  v2 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_blurEnabled);
  OUTLINED_FUNCTION_1();
  (*(void (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x290))(*v2);
  OUTLINED_FUNCTION_32();
}

void LocalParticipantView.blurEnabled.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void LocalParticipantView.blurEnabled.modify(uint64_t a1, char a2)
{
  LocalParticipantView.blurEnabled.modify(a1, a2, (void (*)(uint64_t))LocalParticipantView.blurEnabled.didset);
}

void LocalParticipantView.shouldAddOverlayBlur.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_32();
}

uint64_t key path getter for LocalParticipantView.shouldAddOverlayBlur : LocalParticipantView@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_shouldAddOverlayBlur);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void LocalParticipantView.shouldAddOverlayBlur.setter(char a1)
{
  SharedContentViewController.isPipped.setter(a1, &OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_shouldAddOverlayBlur, (void (*)(uint64_t))LocalParticipantView.shouldAddOverlayBlur.didset);
}

void LocalParticipantView.shouldAddOverlayBlur.didset(char a1)
{
  char *v1;
  int v2;
  char *v3;
  int v4;
  objc_class *v5;
  Class isa;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;

  v2 = a1 & 1;
  v3 = &v1[OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_shouldAddOverlayBlur];
  swift_beginAccess();
  v4 = *v3;
  if (v4 != v2)
  {
    v5 = (objc_class *)LocalParticipantView.overlayBlurView.getter();
    isa = v5;
    if (v4)
    {
      objc_msgSend(v1, sel_addSubview_, v5);

      v7 = (void *)objc_opt_self();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
      v8 = swift_allocObject();
      *(_OWORD *)(v8 + 16) = xmmword_1BD644140;
      v9 = LocalParticipantView.overlayBlurView.getter();
      v10 = objc_msgSend(v9, sel_topAnchor);

      v11 = objc_msgSend(v1, sel_topAnchor);
      v12 = objc_msgSend(v10, sel_constraintEqualToAnchor_, v11);

      *(_QWORD *)(v8 + 32) = v12;
      v13 = LocalParticipantView.overlayBlurView.getter();
      v14 = objc_msgSend(v13, sel_bottomAnchor);

      v15 = objc_msgSend(v1, sel_bottomAnchor);
      v16 = objc_msgSend(v14, sel_constraintEqualToAnchor_, v15);

      *(_QWORD *)(v8 + 40) = v16;
      v17 = LocalParticipantView.overlayBlurView.getter();
      v18 = objc_msgSend(v17, sel_trailingAnchor);

      v19 = objc_msgSend(v1, sel_trailingAnchor);
      v20 = objc_msgSend(v18, sel_constraintEqualToAnchor_, v19);

      *(_QWORD *)(v8 + 48) = v20;
      v21 = LocalParticipantView.overlayBlurView.getter();
      v22 = objc_msgSend(v21, sel_leadingAnchor);

      v23 = objc_msgSend(v1, sel_leadingAnchor);
      v24 = objc_msgSend(v22, sel_constraintEqualToAnchor_, v23);

      *(_QWORD *)(v8 + 56) = v24;
      specialized Array._endMutation()();
      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      objc_msgSend(v7, sel_activateConstraints_, isa, v8);
    }
    else
    {
      -[objc_class removeFromSuperview](v5, sel_removeFromSuperview);
    }

  }
}

id LocalParticipantView.overlayBlurView.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC15ConversationKit20LocalParticipantView____lazy_storage___overlayBlurView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit20LocalParticipantView____lazy_storage___overlayBlurView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC15ConversationKit20LocalParticipantView____lazy_storage___overlayBlurView);
  }
  else
  {
    v4 = closure #1 in LocalParticipantView.overlayBlurView.getter();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

void LocalParticipantView.shouldAddOverlayBlur.modify()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  _BYTE *v3;

  v2 = OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_35_11((uint64_t)v2);
  v3 = (_BYTE *)(v0 + OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_shouldAddOverlayBlur);
  OUTLINED_FUNCTION_1();
  *(_BYTE *)(v1 + 32) = *v3;
  OUTLINED_FUNCTION_18();
}

void LocalParticipantView.shouldAddOverlayBlur.modify(uint64_t a1, uint64_t a2)
{
  SharedContentViewController.isPipped.modify(a1, a2, (void (*)(_QWORD))LocalParticipantView.shouldAddOverlayBlur.setter);
}

id closure #1 in LocalParticipantView.overlayBlurView.getter()
{
  id v0;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC4028]), sel_initWithPrivateStyle_, 2030);
  if (!v0)
    v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_init);
  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  return v0;
}

id LocalParticipantView.controlsLayoutGuide.getter()
{
  uint64_t v0;

  return objc_retain(*(id *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_controlsView)
                           + OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_controlsLayoutGuide));
}

void LocalParticipantView.requiresControlsHidden.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_32();
}

uint64_t key path getter for LocalParticipantView.requiresControlsHidden : LocalParticipantView@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_requiresControlsHidden);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void LocalParticipantView.requiresControlsHidden.setter(char a1)
{
  LocalParticipantView.blurEnabled.setter(a1, &OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_requiresControlsHidden, (void (*)(uint64_t))LocalParticipantView.requiresControlsHidden.didset);
}

void LocalParticipantView.blurEnabled.setter(char a1, _QWORD *a2, void (*a3)(uint64_t))
{
  uint64_t v3;
  _BYTE *v6;
  uint64_t v7;

  v6 = (_BYTE *)(v3 + *a2);
  v7 = OUTLINED_FUNCTION_2_0();
  *v6 = a1;
  a3(v7);
  OUTLINED_FUNCTION_9_0();
}

void LocalParticipantView.requiresControlsHidden.didset()
{
  uint64_t v0;
  void *v1;
  _BYTE *v2;
  double v3;
  char v4;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_controlsView);
  v2 = (_BYTE *)(v0 + OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_requiresControlsHidden);
  OUTLINED_FUNCTION_1();
  v3 = 1.0;
  if (*v2)
    v3 = 0.0;
  objc_msgSend(v1, sel_setAlpha_, v3);
  v4 = LocalParticipantView.hidesGradientOverlayView.getter();
  ParticipantView.updateGradientOverlayView(isHidden:alpha:)(v4 & 1, 0, 1);
  OUTLINED_FUNCTION_9_0();
}

uint64_t LocalParticipantView.hidesGradientOverlayView.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;

  if ((*(unsigned __int8 (**)(void))((*MEMORY[0x1E0DEEDD8] & **(_QWORD **)(v0
                                                                          + OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_controlsView))
                                    + 0x210))() != 3)
    return 1;
  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_requiresControlsHidden);
  swift_beginAccess();
  return *v1;
}

void LocalParticipantView.updateGradientOverlayView(isHidden:alpha:)(uint64_t a1, uint64_t a2, char a3)
{
  ParticipantView.updateGradientOverlayView(isHidden:alpha:)(a1, a2, a3 & 1);
  OUTLINED_FUNCTION_0();
}

void LocalParticipantView.requiresControlsHidden.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void LocalParticipantView.requiresControlsHidden.modify(uint64_t a1, char a2)
{
  LocalParticipantView.blurEnabled.modify(a1, a2, (void (*)(uint64_t))LocalParticipantView.requiresControlsHidden.didset);
}

void LocalParticipantView.blurEnabled.modify(uint64_t a1, char a2, void (*a3)(uint64_t))
{
  uint64_t v5;

  v5 = swift_endAccess();
  if ((a2 & 1) == 0)
    a3(v5);
  OUTLINED_FUNCTION_18();
}

void LocalParticipantView.requiresViewHidden.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_32();
}

uint64_t key path getter for LocalParticipantView.requiresViewHidden : LocalParticipantView@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_requiresViewHidden);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void LocalParticipantView.requiresViewHidden.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_requiresViewHidden);
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  LocalParticipantView.updateHiding()();
  OUTLINED_FUNCTION_9_0();
}

Swift::Void __swiftcall LocalParticipantView.updateHiding()()
{
  char *v0;
  void *v1;
  char *v2;

  v1 = v0;
  v2 = &v0[OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_requiresViewHidden];
  OUTLINED_FUNCTION_1();
  if ((*v2 & 1) == 0)
  {
    OUTLINED_FUNCTION_1();
    OUTLINED_FUNCTION_5_72();
  }
  objc_msgSend(v1, sel_setHidden_, 1);
}

void LocalParticipantView.requiresViewHidden.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void LocalParticipantView.requiresViewHidden.modify(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    LocalParticipantView.updateHiding()();
  OUTLINED_FUNCTION_0();
}

void LocalParticipantView.controlsStyle.setter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  _QWORD *v4;
  char v5;

  v3 = *(_QWORD **)(v1 + OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_controlsView);
  v4 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  if ((*(unsigned __int8 (**)(void))((*MEMORY[0x1E0DEEDD8] & *v3) + 0x210))() != a1)
  {
    (*(void (**)(uint64_t))((*v4 & *v3) + 0x218))(a1);
    v5 = LocalParticipantView.hidesGradientOverlayView.getter();
    ParticipantView.updateGradientOverlayView(isHidden:alpha:)(v5 & 1, 0, 1);
  }
}

void LocalParticipantView.supportsRotation.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_4_75();
  OUTLINED_FUNCTION_5_75(v0);
  OUTLINED_FUNCTION_0();
}

void LocalParticipantView.supportsRotation.setter()
{
  void (*v0)(void);
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);

  OUTLINED_FUNCTION_46_24();
  OUTLINED_FUNCTION_4_75();
  if ((((unint64_t)OUTLINED_FUNCTION_7_76(v2) >> 32) & 1) != v1)
  {
    v0();
    OUTLINED_FUNCTION_8_66();
    OUTLINED_FUNCTION_13_57(v3, v4);
  }
  OUTLINED_FUNCTION_91();
}

void LocalParticipantView.supportsRotation.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_25_7(a1);
  OUTLINED_FUNCTION_4_75();
  *(_BYTE *)(v1 + 8) = ((unint64_t)OUTLINED_FUNCTION_5_75(v2) >> 32) & 1;
  OUTLINED_FUNCTION_0();
}

void LocalParticipantView.supportsRotation.modify(uint64_t a1)
{
  OUTLINED_FUNCTION_27_28(a1);
  LocalParticipantView.supportsRotation.setter();
  OUTLINED_FUNCTION_0();
}

void LocalParticipantView.supportsCameraBlur.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_4_75();
  OUTLINED_FUNCTION_5_75(v0);
  OUTLINED_FUNCTION_0();
}

void LocalParticipantView.supportsCameraBlur.setter()
{
  void (*v0)(void);
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);

  OUTLINED_FUNCTION_46_24();
  OUTLINED_FUNCTION_4_75();
  if ((((unint64_t)OUTLINED_FUNCTION_7_76(v2) >> 8) & 1) != v1)
  {
    v0();
    OUTLINED_FUNCTION_8_66();
    OUTLINED_FUNCTION_13_57(v3, v4);
  }
  OUTLINED_FUNCTION_91();
}

void LocalParticipantView.supportsCameraBlur.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_25_7(a1);
  OUTLINED_FUNCTION_4_75();
  *(_BYTE *)(v1 + 8) = ((unsigned __int16)OUTLINED_FUNCTION_5_75(v2) >> 8) & 1;
  OUTLINED_FUNCTION_0();
}

void LocalParticipantView.supportsCameraBlur.modify(uint64_t a1)
{
  OUTLINED_FUNCTION_27_28(a1);
  LocalParticipantView.supportsCameraBlur.setter();
  OUTLINED_FUNCTION_0();
}

void LocalParticipantView.capabilitiesSupportsEffects.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_4_75();
  OUTLINED_FUNCTION_5_75(v0);
  OUTLINED_FUNCTION_0();
}

void LocalParticipantView.hudRecipe.getter()
{
  uint64_t v0;

  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & **(_QWORD **)(v0
                                                          + OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_controlsView))
                    + 0x180))();
  OUTLINED_FUNCTION_0();
}

void key path setter for LocalParticipantView.hudRecipe : LocalParticipantView(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of ConversationControlsRecipe?(a1, (uint64_t)v4);
  LocalParticipantView.hudRecipe.setter((uint64_t)v4);
}

void LocalParticipantView.hudRecipe.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_77();
  v6 = v5 - v4;
  v7 = *(_QWORD **)(v1 + OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_controlsView);
  outlined init with copy of ConversationControlsRecipe?(a1, v5 - v4);
  (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v7) + 0x188))(v6);
  outlined destroy of ConversationControlsRecipe?(a1);
  OUTLINED_FUNCTION_18();
}

void LocalParticipantView.hudRecipe.modify(_QWORD *a1)
{
  uint64_t v1;
  size_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_25_7(a1);
  v2 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?)
                             - 8)
                 + 64);
  *(_QWORD *)(v1 + 8) = malloc(v2);
  *(_QWORD *)(v1 + 16) = malloc(v2);
  OUTLINED_FUNCTION_4_75();
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & v3) + 0x180))();
  OUTLINED_FUNCTION_18();
}

void LocalParticipantView.hudRecipe.modify(uint64_t a1, char a2)
{
  void *v2;
  void *v3;

  v2 = *(void **)(a1 + 8);
  v3 = *(void **)(a1 + 16);
  if ((a2 & 1) != 0)
  {
    outlined init with copy of ConversationControlsRecipe?((uint64_t)v3, (uint64_t)v2);
    LocalParticipantView.hudRecipe.setter((uint64_t)v2);
    outlined destroy of ConversationControlsRecipe?((uint64_t)v3);
  }
  else
  {
    LocalParticipantView.hudRecipe.setter((uint64_t)v3);
  }
  free(v3);
  OUTLINED_FUNCTION_4_2(v2);
}

void LocalParticipantView.isInComingCall.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_4_75();
  OUTLINED_FUNCTION_38_28(v0);
  OUTLINED_FUNCTION_0();
}

void LocalParticipantView.isInComingCall.setter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_4_75();
  OUTLINED_FUNCTION_45_29(v0);
  OUTLINED_FUNCTION_0();
}

void LocalParticipantView.isInComingCall.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_26_34(a1, OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_controlsView);
  v2 = OUTLINED_FUNCTION_38_28(v1);
  OUTLINED_FUNCTION_61_13(v2);
  OUTLINED_FUNCTION_0();
}

void LocalParticipantView.isInComingCall.modify(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_24_40(a1);
  OUTLINED_FUNCTION_45_29(v1);
  OUTLINED_FUNCTION_0();
}

void LocalParticipantView.isInRoster.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_32();
}

uint64_t key path getter for LocalParticipantView.isInRoster : LocalParticipantView@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_isInRoster);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void LocalParticipantView.isInRoster.setter(char a1)
{
  SharedContentViewController.isPipped.setter(a1, &OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_isInRoster, (void (*)(uint64_t))LocalParticipantView.isInRoster.didset);
}

void LocalParticipantView.isInRoster.didset(char a1)
{
  uint64_t v1;
  int v2;
  unsigned __int8 *v3;

  v2 = a1 & 1;
  v3 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_isInRoster);
  swift_beginAccess();
  if (*v3 != v2)
    LocalParticipantView.isInRosterDidChange()();
}

void LocalParticipantView.isInRosterDidChange()()
{
  void *v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  char *v7;

  v1 = (uint64_t)v0;
  v2 = objc_msgSend(v0, sel_layer);
  closure #1 in LocalParticipantView.isInRosterDidChange()(v2, v1);

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_participantView);
  LocalParticipantView.participantViewCornerRadius.getter();
  v5 = v4;
  v6 = (_QWORD *)(v3 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_customCornerRadius);
  swift_beginAccess();
  *v6 = v5;
  ParticipantView.customCornerRadius.didset();
  v7 = (char *)(v1 + OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_isInRoster);
  swift_beginAccess();
  ParticipantView.isInRoster.setter(*v7);
}

void LocalParticipantView.isInRoster.modify()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  _BYTE *v3;

  v2 = OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_35_11((uint64_t)v2);
  v3 = (_BYTE *)(v0 + OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_isInRoster);
  OUTLINED_FUNCTION_1();
  *(_BYTE *)(v1 + 32) = *v3;
  OUTLINED_FUNCTION_18();
}

void LocalParticipantView.isInRoster.modify(uint64_t a1, uint64_t a2)
{
  SharedContentViewController.isPipped.modify(a1, a2, (void (*)(_QWORD))LocalParticipantView.isInRoster.setter);
}

void LocalParticipantView.cinematicFramingIsAvailable.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_4_75();
  OUTLINED_FUNCTION_5_75(v0);
  OUTLINED_FUNCTION_0();
}

void LocalParticipantView.cinematicFramingIsAvailable.setter(char a1)
{
  _QWORD *v1;
  uint64_t (*v2)(void);
  int v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a1 & 1;
  OUTLINED_FUNCTION_4_75();
  v5 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  if ((OUTLINED_FUNCTION_7_76(v6) & 1) != v4)
  {
    v7 = v2();
    (*(void (**)(uint64_t))((*v5 & *v1) + 0x230))(v7 & 0x1010101010100 | a1 & 1);
  }
  OUTLINED_FUNCTION_91();
}

void LocalParticipantView.cinematicFramingIsAvailable.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_25_7(a1);
  OUTLINED_FUNCTION_4_75();
  *(_BYTE *)(v1 + 8) = OUTLINED_FUNCTION_5_75(v2) & 1;
  OUTLINED_FUNCTION_0();
}

void LocalParticipantView.cinematicFramingIsAvailable.modify(uint64_t a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_27_28(a1);
  LocalParticipantView.cinematicFramingIsAvailable.setter(v1);
  OUTLINED_FUNCTION_0();
}

void LocalParticipantView.cinematicFramingIsEnabled.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_4_75();
  OUTLINED_FUNCTION_43_29(v0);
  OUTLINED_FUNCTION_0();
}

void LocalParticipantView.cinematicFramingIsEnabled.setter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_4_75();
  OUTLINED_FUNCTION_40_26(v0);
  OUTLINED_FUNCTION_0();
}

void LocalParticipantView.cinematicFramingIsEnabled.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_26_34(a1, OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_controlsView);
  v2 = OUTLINED_FUNCTION_43_29(v1);
  OUTLINED_FUNCTION_61_13(v2);
  OUTLINED_FUNCTION_0();
}

void LocalParticipantView.cinematicFramingIsEnabled.modify(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_24_40(a1);
  OUTLINED_FUNCTION_40_26(v1);
  OUTLINED_FUNCTION_0();
}

void LocalParticipantView.supportsReactionGestures.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_4_75();
  OUTLINED_FUNCTION_5_75(v0);
  OUTLINED_FUNCTION_0();
}

void LocalParticipantView.supportsReactionGestures.setter()
{
  void (*v0)(void);
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);

  OUTLINED_FUNCTION_46_24();
  OUTLINED_FUNCTION_4_75();
  if ((((unint64_t)OUTLINED_FUNCTION_7_76(v2) >> 40) & 1) != v1)
  {
    v0();
    OUTLINED_FUNCTION_8_66();
    OUTLINED_FUNCTION_13_57(v3, v4);
  }
  OUTLINED_FUNCTION_91();
}

void LocalParticipantView.supportsReactionGestures.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_25_7(a1);
  OUTLINED_FUNCTION_4_75();
  *(_BYTE *)(v1 + 8) = ((unsigned __int16)((unint64_t)OUTLINED_FUNCTION_5_75(v2) >> 32) >> 8) & 1;
  OUTLINED_FUNCTION_0();
}

void LocalParticipantView.supportsReactionGestures.modify(uint64_t a1)
{
  OUTLINED_FUNCTION_27_28(a1);
  LocalParticipantView.supportsReactionGestures.setter();
  OUTLINED_FUNCTION_0();
}

void LocalParticipantView.supportsStudioLight.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_4_75();
  OUTLINED_FUNCTION_5_75(v0);
  OUTLINED_FUNCTION_0();
}

void LocalParticipantView.supportsStudioLight.setter()
{
  void (*v0)(void);
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);

  OUTLINED_FUNCTION_46_24();
  OUTLINED_FUNCTION_4_75();
  if ((((unint64_t)OUTLINED_FUNCTION_7_76(v2) >> 48) & 1) != v1)
  {
    v0();
    OUTLINED_FUNCTION_8_66();
    OUTLINED_FUNCTION_13_57(v3, v4);
  }
  OUTLINED_FUNCTION_91();
}

void LocalParticipantView.supportsStudioLight.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_25_7(a1);
  OUTLINED_FUNCTION_4_75();
  *(_BYTE *)(v1 + 8) = ((unint64_t)OUTLINED_FUNCTION_5_75(v2) >> 48) & 1;
  OUTLINED_FUNCTION_0();
}

void LocalParticipantView.supportsStudioLight.modify(uint64_t a1)
{
  OUTLINED_FUNCTION_27_28(a1);
  LocalParticipantView.supportsStudioLight.setter();
  OUTLINED_FUNCTION_0();
}

void LocalParticipantView.reactionEffectGestureIsEnabled.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_4_75();
  OUTLINED_FUNCTION_44_26(v0);
  OUTLINED_FUNCTION_0();
}

void LocalParticipantView.reactionEffectGestureIsEnabled.setter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_4_75();
  OUTLINED_FUNCTION_41_23(v0);
  OUTLINED_FUNCTION_0();
}

void LocalParticipantView.reactionEffectGestureIsEnabled.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_26_34(a1, OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_controlsView);
  v2 = OUTLINED_FUNCTION_44_26(v1);
  OUTLINED_FUNCTION_61_13(v2);
  OUTLINED_FUNCTION_0();
}

void LocalParticipantView.reactionEffectGestureIsEnabled.modify(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_24_40(a1);
  OUTLINED_FUNCTION_41_23(v1);
  OUTLINED_FUNCTION_0();
}

void LocalParticipantView.studioLightIsEnabled.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_4_75();
  OUTLINED_FUNCTION_42_25(v0);
  OUTLINED_FUNCTION_0();
}

void LocalParticipantView.studioLightIsEnabled.setter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_4_75();
  OUTLINED_FUNCTION_39_33(v0);
  OUTLINED_FUNCTION_0();
}

void LocalParticipantView.studioLightIsEnabled.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_26_34(a1, OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_controlsView);
  v2 = OUTLINED_FUNCTION_42_25(v1);
  OUTLINED_FUNCTION_61_13(v2);
  OUTLINED_FUNCTION_0();
}

void LocalParticipantView.studioLightIsEnabled.modify(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_24_40(a1);
  OUTLINED_FUNCTION_39_33(v1);
  OUTLINED_FUNCTION_0();
}

void LocalParticipantView.cameraFlipButtonIsAvailable.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_4_75();
  OUTLINED_FUNCTION_5_75(v0);
  OUTLINED_FUNCTION_0();
}

void LocalParticipantView.cameraFlipButtonIsAvailable.setter(char a1)
{
  uint64_t v1;
  void (*v2)(void);
  uint64_t v4;
  uint64_t (*v5)(uint64_t);

  if (one-time initialization token for shared != -1)
    swift_once();
  if (((*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 880))() & 1) != 0
    && (((unint64_t)OUTLINED_FUNCTION_7_76(**(_QWORD **)(v1
                                                              + OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_controlsView)) >> 24) & 1) != (a1 & 1))
  {
    v2();
    OUTLINED_FUNCTION_8_66();
    OUTLINED_FUNCTION_13_57(v4, v5);
  }
  OUTLINED_FUNCTION_18();
}

void LocalParticipantView.cameraFlipButtonIsAvailable.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_25_7(a1);
  OUTLINED_FUNCTION_4_75();
  *(_BYTE *)(v1 + 8) = (OUTLINED_FUNCTION_5_75(v2) >> 24) & 1;
  OUTLINED_FUNCTION_0();
}

void LocalParticipantView.cameraFlipButtonIsAvailable.modify(uint64_t a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_27_28(a1);
  LocalParticipantView.cameraFlipButtonIsAvailable.setter(v1);
  OUTLINED_FUNCTION_0();
}

uint64_t LocalParticipantView.videoMessagingState.getter()
{
  unsigned __int8 v1;

  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t key path getter for LocalParticipantView.videoMessagingState : LocalParticipantView@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = LocalParticipantView.videoMessagingState.getter();
  *a1 = result;
  return result;
}

uint64_t key path setter for LocalParticipantView.videoMessagingState : LocalParticipantView()
{
  return LocalParticipantView.videoMessagingState.setter();
}

uint64_t LocalParticipantView.videoMessagingState.setter()
{
  void *v0;
  id v1;

  swift_getKeyPath();
  swift_getKeyPath();
  v1 = v0;
  return static Published.subscript.setter();
}

void LocalParticipantView.videoMessagingState.modify()
{
  _QWORD *v0;
  _QWORD *v1;

  v1 = OUTLINED_FUNCTION_45();
  *v0 = v1;
  v1[4] = swift_getKeyPath();
  v1[5] = swift_getKeyPath();
  v1[6] = static Published.subscript.modify();
  OUTLINED_FUNCTION_18();
}

void LocalParticipantView.$videoMessagingState.getter()
{
  OUTLINED_FUNCTION_2_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<VideoMessageController.State>);
  Published.projectedValue.getter();
  swift_endAccess();
  OUTLINED_FUNCTION_32();
}

void key path setter for LocalParticipantView.$videoMessagingState : LocalParticipantView(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<VideoMessageController.State>.Publisher);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v5 + 16))(v4, a1);
  LocalParticipantView.$videoMessagingState.setter((uint64_t)v4);
}

void LocalParticipantView.$videoMessagingState.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<VideoMessageController.State>.Publisher);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_16_2();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, a1, v3);
  OUTLINED_FUNCTION_2_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<VideoMessageController.State>);
  Published.projectedValue.setter();
  swift_endAccess();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  OUTLINED_FUNCTION_91();
}

void LocalParticipantView.$videoMessagingState.modify()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  size_t v4;

  v1 = malloc(0x40uLL);
  OUTLINED_FUNCTION_35_11((uint64_t)v1);
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<VideoMessageController.State>.Publisher);
  v0[4] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v0[5] = v3;
  v4 = *(_QWORD *)(v3 + 64);
  v0[6] = malloc(v4);
  v0[7] = malloc(v4);
  OUTLINED_FUNCTION_2_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<VideoMessageController.State>);
  Published.projectedValue.getter();
  swift_endAccess();
  OUTLINED_FUNCTION_18();
}

void LocalParticipantView.$videoMessagingState.modify(uint64_t a1, char a2)
{
  _QWORD *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 48);
  v4 = *(void **)(*(_QWORD *)a1 + 56);
  if ((a2 & 1) != 0)
  {
    v5 = v2[4];
    v6 = v2[5];
    (*(void (**)(_QWORD, void *, uint64_t))(v6 + 16))(*(_QWORD *)(*(_QWORD *)a1 + 48), v4, v5);
    LocalParticipantView.$videoMessagingState.setter((uint64_t)v3);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    LocalParticipantView.$videoMessagingState.setter(*(_QWORD *)(*(_QWORD *)a1 + 56));
  }
  free(v4);
  free(v3);
  free(v2);
}

UIView *LocalParticipantView.__allocating_init(isInRoster:supportsRotation:supportsCameraBlur:supportsReactions:supportsReactionGestures:supportsStudioLight:supportsCameraFlip:)(char a1, char a2, char a3, char a4, char a5, char a6, char a7)
{
  objc_class *v7;
  id v15;

  v15 = objc_allocWithZone(v7);
  return LocalParticipantView.init(isInRoster:supportsRotation:supportsCameraBlur:supportsReactions:supportsReactionGestures:supportsStudioLight:supportsCameraFlip:)(a1, a2, a3, a4, a5, a6, a7);
}

UIView *LocalParticipantView.init(isInRoster:supportsRotation:supportsCameraBlur:supportsReactions:supportsReactionGestures:supportsStudioLight:supportsCameraFlip:)(char a1, char a2, char a3, char a4, char a5, char a6, char a7)
{
  char *v7;
  objc_class *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  char *v21;
  uint64_t v22;
  char *v23;
  id v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  _QWORD *v31;
  void (*v32)(unint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  _QWORD *v40;
  char *v41;
  id v42;
  void *v43;
  char *v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  void (*v50)(char *, _UNKNOWN **);
  char *v51;
  _QWORD *v52;
  void *v53;
  CGFloat v54;
  CGFloat v55;
  CGFloat v56;
  CGFloat v57;
  UIView *v58;
  id v59;
  _QWORD *v60;
  uint64_t (*v61)(_QWORD *);
  _QWORD *v62;
  void (*v63)(_QWORD *, _QWORD);
  UIView *v64;
  id v65;
  objc_class *v67;
  uint64_t v73;
  uint64_t v74;
  _QWORD v76[4];
  objc_super v77;
  NSDirectionalEdgeInsets v78;

  v9 = (objc_class *)OUTLINED_FUNCTION_15_6();
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<VideoMessageController.State>.Publisher);
  v73 = *(_QWORD *)(v10 - 8);
  v74 = v10;
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_77();
  v13 = v12 - v11;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<VideoMessageController.State>);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_77();
  v18 = v17 - v16;
  v19 = OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_participantView;
  v20 = objc_allocWithZone((Class)OUTLINED_FUNCTION_42_24());
  v21 = v7;
  *(_QWORD *)&v7[v19] = OUTLINED_FUNCTION_14_62();
  v22 = OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_controlsView;
  *(_QWORD *)&v21[v22] = objc_msgSend(objc_allocWithZone((Class)OUTLINED_FUNCTION_60_18()), sel_init);
  *(_QWORD *)&v21[OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_countdownLabel] = 0;
  OUTLINED_FUNCTION_40_4((uint64_t)&v21[OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_delegate]);
  v21[OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_dragEnabled] = 0;
  v21[OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_blurEnabled] = 0;
  v21[OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_shouldAddOverlayBlur] = 0;
  *(_QWORD *)&v21[OBJC_IVAR____TtC15ConversationKit20LocalParticipantView____lazy_storage___overlayBlurView] = 0;
  v21[OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_requiresControlsHidden] = 0;
  v21[OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_requiresViewHidden] = 0;
  v21[OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_controlsHiddenByViewModel] = 0;
  v23 = &v21[OBJC_IVAR____TtC15ConversationKit20LocalParticipantView__videoMessagingState];
  LOBYTE(v76[0]) = 0;
  Published.init(initialValue:)();
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 32))(v23, v18, v14);
  v21[OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_isInRoster] = a1;

  v77.receiver = v21;
  v77.super_class = v9;
  v67 = v9;
  v24 = objc_msgSendSuper2(&v77, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v25 = one-time initialization token for shared;
  v26 = (char *)v24;
  if (v25 != -1)
    swift_once();
  v27 = static Defaults.shared;
  v28 = (*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 192))();
  v29 = (*(uint64_t (**)(void))(*(_QWORD *)v27 + 184))();
  v30 = OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_controlsView;
  v31 = *(_QWORD **)&v26[OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_controlsView];
  v32 = *(void (**)(unint64_t))((*MEMORY[0x1E0DEEDD8] & *v31) + 0x230);
  v33 = 0x1000000000000;
  if ((a6 & 1) == 0)
    v33 = 0;
  v34 = 0x10000000000;
  if ((a5 & 1) == 0)
    v34 = 0;
  v35 = 0x100000000;
  if ((a2 & 1) == 0)
    v35 = 0;
  v36 = 0x1000000;
  if ((a7 & 1) == 0)
    v36 = 0;
  v37 = 0x10000;
  if ((v29 & 1) == 0)
    v37 = 0;
  v38 = 256;
  if ((a3 & 1) == 0)
    v38 = 0;
  v39 = (v38 | v35 | v34 | v33 | v36) & 0xFFFFFFFFFFFFFFFELL | v28 & 1 | v37;
  v40 = v31;
  v32(v39);

  v41 = v26;
  v42 = objc_msgSend(v41, sel_layer);
  objc_msgSend(v42, sel_setShadowPathIsBounds_, 1);

  v43 = (void *)objc_opt_self();
  v44 = v41;
  v45 = objc_msgSend(v43, sel_clearColor);
  OUTLINED_FUNCTION_48_1(v44, sel_setBackgroundColor_);

  LocalParticipantView.isInRosterDidChange()();
  v46 = *(_QWORD *)&v44[OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_participantView];
  objc_msgSend(v44, sel_addSubview_, v46);
  if ((OUTLINED_FUNCTION_22_6() & 1) != 0)
  {
    v47 = v46 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_delegate;
    OUTLINED_FUNCTION_2_0();
    *(_QWORD *)(v47 + 8) = &protocol witness table for LocalParticipantView;
    swift_unknownObjectWeakAssign();
  }
  v48 = *(_QWORD **)&v26[v30];
  v49 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v50 = *(void (**)(char *, _UNKNOWN **))((*MEMORY[0x1E0DEEDD8] & *v48) + 0x200);
  v51 = v44;
  v52 = v48;
  v50(v44, &protocol witness table for LocalParticipantView);

  v53 = *(void **)&v26[v30];
  OUTLINED_FUNCTION_48_1(v51, sel_addSubview_);
  v54 = *MEMORY[0x1E0DC3298];
  v55 = *(double *)(MEMORY[0x1E0DC3298] + 8);
  v56 = *(double *)(MEMORY[0x1E0DC3298] + 16);
  v57 = *(double *)(MEMORY[0x1E0DC3298] + 24);
  v58 = v51;
  v59 = v53;
  v78.top = v54;
  v78.leading = v55;
  v78.bottom = v56;
  v78.trailing = v57;
  UIView.addConstraintsToFill(_:insets:)(v58, v78);

  OUTLINED_FUNCTION_2_0();
  Published.projectedValue.getter();
  swift_endAccess();
  v60 = *(_QWORD **)&v26[v30];
  v61 = *(uint64_t (**)(_QWORD *))((*v49 & *v60) + 0x360);
  v62 = v60;
  v63 = (void (*)(_QWORD *, _QWORD))v61(v76);
  lazy protocol witness table accessor for type Published<VideoMessageController.State>.Publisher and conformance Published<A>.Publisher();
  Publisher<>.assign(to:)();
  (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v13, v74);
  v63(v76, 0);

  if ((a4 & 1) != 0)
  {
    v76[3] = v67;
    v76[0] = v58;
    objc_allocWithZone(MEMORY[0x1E0DC39C8]);
    v64 = v58;
    v65 = @nonobjc UIPinchGestureRecognizer.init(target:action:)(v76, (uint64_t)sel_handleLongPress_);
    OUTLINED_FUNCTION_48_1(v64, sel_addGestureRecognizer_);

  }
  return v58;
}

uint64_t outlined init with copy of ConversationControlsRecipe?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of ConversationControlsRecipe?(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void LocalParticipantView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;

  objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  OUTLINED_FUNCTION_0();
}

void LocalParticipantView.init(coder:)()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<VideoMessageController.State>);
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_16_2();
  v3 = OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_participantView;
  v4 = objc_allocWithZone((Class)OUTLINED_FUNCTION_42_24());
  *(_QWORD *)&v0[v3] = OUTLINED_FUNCTION_14_62();
  v5 = OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_controlsView;
  *(_QWORD *)&v1[v5] = objc_msgSend(objc_allocWithZone((Class)OUTLINED_FUNCTION_60_18()), sel_init);
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_countdownLabel] = 0;
  OUTLINED_FUNCTION_40_4((uint64_t)&v1[OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_delegate]);
  v1[OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_dragEnabled] = 0;
  v1[OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_blurEnabled] = 0;
  v1[OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_shouldAddOverlayBlur] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit20LocalParticipantView____lazy_storage___overlayBlurView] = 0;
  v1[OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_requiresControlsHidden] = 0;
  v1[OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_requiresViewHidden] = 0;
  v1[OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_controlsHiddenByViewModel] = 0;
  OUTLINED_FUNCTION_49_24();
  OUTLINED_FUNCTION_28_36();

  OUTLINED_FUNCTION_21_4();
  __break(1u);
}

id LocalParticipantView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

void LocalParticipantView.init(frame:)()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<VideoMessageController.State>);
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_16_2();
  v3 = OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_participantView;
  v4 = objc_allocWithZone((Class)OUTLINED_FUNCTION_42_24());
  *(_QWORD *)&v0[v3] = OUTLINED_FUNCTION_14_62();
  v5 = OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_controlsView;
  *(_QWORD *)&v1[v5] = objc_msgSend(objc_allocWithZone((Class)OUTLINED_FUNCTION_60_18()), sel_init);
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_countdownLabel] = 0;
  OUTLINED_FUNCTION_40_4((uint64_t)&v1[OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_delegate]);
  v1[OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_dragEnabled] = 0;
  v1[OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_blurEnabled] = 0;
  v1[OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_shouldAddOverlayBlur] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit20LocalParticipantView____lazy_storage___overlayBlurView] = 0;
  v1[OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_requiresControlsHidden] = 0;
  v1[OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_requiresViewHidden] = 0;
  v1[OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_controlsHiddenByViewModel] = 0;
  OUTLINED_FUNCTION_49_24();
  OUTLINED_FUNCTION_28_36();

  OUTLINED_FUNCTION_21_4();
  __break(1u);
}

Swift::Void __swiftcall LocalParticipantView.handleLongPress(_:)(UILongPressGestureRecognizer *a1)
{
  if (-[UILongPressGestureRecognizer state](a1, sel_state) == (id)1)
  {
    OUTLINED_FUNCTION_1();
    OUTLINED_FUNCTION_5_72();
  }
  OUTLINED_FUNCTION_9_0();
}

Swift::Void __swiftcall LocalParticipantView.layoutSubviews()()
{
  void *v0;
  objc_class *v1;
  void *v2;
  objc_super v3;
  objc_super v4;

  v1 = (objc_class *)OUTLINED_FUNCTION_15_6();
  if (one-time initialization token for shared != -1)
    swift_once();
  if (((*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 632))() & 1) != 0)
  {
    v2 = (void *)objc_opt_self();
    objc_msgSend(v2, sel_begin);
    v3.receiver = v0;
    v3.super_class = v1;
    objc_msgSendSuper2(&v3, sel_layoutSubviews);
    LocalParticipantView._layout()();
    objc_msgSend(v2, sel_commit);
  }
  else
  {
    v4.receiver = v0;
    v4.super_class = v1;
    objc_msgSendSuper2(&v4, sel_layoutSubviews);
    LocalParticipantView._layout()();
  }
  OUTLINED_FUNCTION_9_0();
}

id LocalParticipantView._layout()()
{
  char *v0;
  id result;
  void *v2;
  CGRect v3;
  CGRect v4;

  objc_msgSend(v0, sel_bounds);
  result = (id)CGRectIsInfinite(v3);
  if ((result & 1) == 0)
  {
    objc_msgSend(v0, sel_bounds);
    result = (id)CGRectIsEmpty(v4);
    if ((result & 1) == 0)
    {
      v2 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_participantView];
      objc_msgSend(v0, sel_bounds);
      return objc_msgSend(v2, sel_setFrame_, 0.0, 0.0);
    }
  }
  return result;
}

void LocalParticipantView.configure(with:)(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  _BYTE *v15;
  int EnumCaseMultiPayload;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id __dst[13];
  char v31;
  unsigned __int8 __src[112];

  v2 = v1;
  v4 = type metadata accessor for ParticipantViewModel.ParticipantDetails(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_77();
  v8 = v7 - v6;
  type metadata accessor for ParticipantViewModel(0);
  OUTLINED_FUNCTION_1_1();
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v28 - v13;
  v15 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_isInRoster);
  OUTLINED_FUNCTION_1();
  if (*v15 == 1)
  {
    ParticipantViewModel.compatibleWithRoster.getter();
    ParticipantView.configure(with:)(v14);
    outlined destroy of RemoteControlRequest((uint64_t)v14, type metadata accessor for ParticipantViewModel);
  }
  else
  {
    ParticipantView.configure(with:)(a1);
  }
  outlined init with copy of ParticipantViewModel((uint64_t)a1, (uint64_t)v12);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantVideoView.ViewModel, ParticipantVideoOverlayView.ViewModel));
      outlined init with take of ParticipantVideoOverlayView.ViewModel(&v12[*(int *)(v17 + 64)], __src);
      OUTLINED_FUNCTION_53_20();
      outlined init with copy of ParticipantVideoOverlayView.ViewModel(__src, (char *)__dst);
      if (v31 == 5)
      {

        OUTLINED_FUNCTION_52_21();
        (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & v18) + 0x2F0))(1);
        v19 = 0;
      }
      else
      {
        outlined destroy of ParticipantVideoOverlayView.ViewModel((uint64_t)__dst);
        OUTLINED_FUNCTION_52_21();
        OUTLINED_FUNCTION_19_45(v27);
        v19 = 1;
      }
      outlined destroy of ParticipantVideoOverlayView.ViewModel((uint64_t)__src);
      *(_BYTE *)(v2 + OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_controlsHiddenByViewModel) = v19;
      outlined destroy of ParticipantVideoView.ViewModel((uint64_t)&v12[*(int *)(v17 + 48)]);
    }
    else
    {
      v23 = &v12[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantMonogramView.ViewModel))
                        + 48)];
      v29 = *(id *)v23;
      v24 = *((_QWORD *)v23 + 9);
      v25 = *((_QWORD *)v23 + 10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      outlined consume of AnsweringMachineCallStatus?(v24, v25);
      if (one-time initialization token for shared != -1)
        swift_once();
      if ((OUTLINED_FUNCTION_22_6() & 1) == 0)
        UIView.removeTapInteractions(withTapCount:)(1);
      OUTLINED_FUNCTION_52_21();
      OUTLINED_FUNCTION_19_45(v26);
      *(_BYTE *)(v2 + OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_controlsHiddenByViewModel) = 1;
    }
    outlined destroy of RemoteControlRequest((uint64_t)v12, type metadata accessor for ParticipantViewModel.ParticipantDetails);
  }
  else
  {
    outlined init with take of ParticipantViewModel.ParticipantDetails((uint64_t)v12, v8);
    OUTLINED_FUNCTION_53_20();
    OUTLINED_FUNCTION_52_21();
    OUTLINED_FUNCTION_19_45(v20);
    v21 = *(_BYTE *)(v8 + *(int *)(v4 + 40));
    outlined destroy of RemoteControlRequest(v8, type metadata accessor for ParticipantViewModel.ParticipantDetails);
    *(_BYTE *)(v2 + OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_controlsHiddenByViewModel) = v21;
    v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantVideoView.ViewModel));
    outlined destroy of ParticipantVideoView.ViewModel((uint64_t)&v12[*(int *)(v22 + 48)]);
  }
}

Swift::Void __swiftcall LocalParticipantView.addEffectsView(effectsView:)(UIView *effectsView)
{
  char *v1;

  objc_msgSend(v1, sel_addSubview_, effectsView);
  objc_msgSend(v1, sel_bringSubviewToFront_, *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_controlsView]);
}

void LocalParticipantView.registerVideoLayers(with:)(uint64_t a1)
{
  ParticipantView.registerVideoLayers(with:)(a1);
  OUTLINED_FUNCTION_0();
}

Swift::Void __swiftcall LocalParticipantView.updateControlsAlpha(animated:)(Swift::Bool animated)
{
  char *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  char *v5;
  id v6;
  _QWORD aBlock[6];

  if (animated)
  {
    v2 = (void *)objc_opt_self();
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = v1;
    aBlock[4] = partial apply for closure #1 in LocalParticipantView.updateControlsAlpha(animated:);
    aBlock[5] = v3;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
    aBlock[3] = &block_descriptor_40;
    v4 = _Block_copy(aBlock);
    v5 = v1;
    swift_release();
    objc_msgSend(v2, sel_animateWithDuration_animations_, v4, 0.25);
    _Block_release(v4);
  }
  else
  {
    v6 = *(id *)&v1[OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_controlsView];
    LocalParticipantControlsView.updateControlsAlpha(animated:)(0);

  }
}

void closure #1 in LocalParticipantView.updateControlsAlpha(animated:)(uint64_t a1)
{
  id v1;

  v1 = *(id *)(a1 + OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_controlsView);
  LocalParticipantControlsView.updateControlsAlpha(animated:)(0);

}

void LocalParticipantView.configureControls(_:)(unsigned __int8 a1)
{
  uint64_t v1;
  uint64_t v3;
  unsigned __int8 v4;
  uint64_t v5;
  uint64_t v6;
  int v7;

  OUTLINED_FUNCTION_4_75();
  v4 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v3) + 0x210))();
  v5 = OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_controlsHiddenByViewModel;
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_controlsHiddenByViewModel) & 1) != 0
    || (v6 = a1 >> 6) == 0)
  {
    v6 = 0;
  }
  else if ((_DWORD)v6 != 1)
  {
    if (a1 == 128)
      v6 = 2;
    else
      v6 = 3;
  }
  v7 = v4;
  LocalParticipantView.controlsStyle.setter(v6);
  if (v7 == 3)
    LocalParticipantView.updateControlsAlpha(animated:)(0);
  if (one-time initialization token for shared != -1)
    swift_once();
  if ((OUTLINED_FUNCTION_22_6() & 1) != 0)
    ParticipantView.setInfoViewIsVisible(_:animated:)((a1 == 128) & ~*(_BYTE *)(v1 + v5), 1);
  OUTLINED_FUNCTION_91();
}

Swift::Void __swiftcall LocalParticipantView.configureWithRecordingLocalVideo(_:)(Swift::Bool a1)
{
  if (one-time initialization token for shared != -1)
    swift_once();
  if ((OUTLINED_FUNCTION_22_6() & 1) != 0)
    ParticipantView.configureWithRecordingLocalVideo(_:)(a1);
  OUTLINED_FUNCTION_18();
}

Swift::Void __swiftcall LocalParticipantView.configureWithEffectsAvailable(_:effectsSelected:)(Swift::Bool _, Swift::Bool effectsSelected)
{
  _QWORD *v2;
  _BOOL4 v4;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;

  v4 = _;
  OUTLINED_FUNCTION_4_75();
  v5 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v7 = OUTLINED_FUNCTION_5_75(v6);
  if (((v7 >> 16) & 1) != v4)
    OUTLINED_FUNCTION_13_57(v7, *(uint64_t (**)(uint64_t))((*v5 & *v2) + 0x230));
  (*(void (**)(Swift::Bool))((*v5 & *v2) + 0x278))(effectsSelected);
  OUTLINED_FUNCTION_91();
}

void LocalParticipantView.updateVisibleCameraPosition(_:localDeviceOrientation:animated:)(char a1, uint64_t a2, char a3)
{
  ParticipantVideoView.updateVideoLayers(with:localDeviceOrientation:isLocal:animated:)(a1, a2, 1, a3);
  OUTLINED_FUNCTION_0();
}

id closure #1 in LocalParticipantView.isInRosterDidChange()(void *a1, uint64_t a2)
{
  _BYTE *v3;
  id v4;
  double v5;
  id v7;
  id v8;
  double v9;

  v3 = (_BYTE *)(a2 + OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_isInRoster);
  swift_beginAccess();
  if (*v3 == 1)
  {
    if (one-time initialization token for shadow != -1)
      swift_once();
    v4 = objc_msgSend((id)static Colors.LocalParticipantView.shadow, sel_CGColor);
    objc_msgSend(a1, sel_setShadowColor_, v4);

    LODWORD(v5) = 1062501089;
    objc_msgSend(a1, sel_setShadowOpacity_, v5);
    objc_msgSend(a1, sel_setShadowOffset_, -7.0, 0.0);
    return objc_msgSend(a1, sel_setShadowRadius_, 7.0);
  }
  else
  {
    v7 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
    v8 = objc_msgSend(v7, sel_CGColor);

    objc_msgSend(a1, sel_setShadowColor_, v8);
    LODWORD(v9) = 0;
    return objc_msgSend(a1, sel_setShadowOpacity_, v9);
  }
}

uint64_t LocalParticipantView.participantViewCornerRadius.getter()
{
  uint64_t v0;
  _BYTE *v1;

  v1 = (_BYTE *)(v0 + OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_isInRoster);
  swift_beginAccess();
  if (*v1 == 1)
    return static Platform.current.getter();
  if (one-time initialization token for shared != -1)
    swift_once();
  return (*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 384))();
}

id LocalParticipantView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)OUTLINED_FUNCTION_15_6();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t (*protocol witness for DraggableView.dragEnabled.modify in conformance LocalParticipantView())()
{
  swift_beginAccess();
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

Swift::Void __swiftcall LocalParticipantView.didTap(_:)(ConversationKit::LocalParticipantAction a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;

  v2 = a1;
  v3 = v1 + OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_delegate;
  OUTLINED_FUNCTION_1();
  if (MEMORY[0x1C3B752C0](v3))
  {
    v4 = *(_QWORD *)(v3 + 8);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 8))(v2, v1, ObjectType, v4);
    swift_unknownObjectRelease();
  }
  OUTLINED_FUNCTION_9_0();
}

void __swiftcall LocalParticipantView.hostingController()(UIViewController_optional *__return_ptr retstr)
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_26();
}

uint64_t sub_1BD1FC198(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v4;

  if (!a1)
    return 0;
  v2 = *(_QWORD *)(v1 + 8);
  ObjectType = swift_getObjectType();
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 24))(ObjectType, v2);
  OUTLINED_FUNCTION_10();
  return v4;
}

void LocalParticipantView.participantViewDidTapShutter(_:)()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_5_72();
}

void sub_1BD1FC210(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (a1)
  {
    v3 = OUTLINED_FUNCTION_37_29();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 8))(5, v1, v3, v2);
    swift_unknownObjectRelease();
  }
  OUTLINED_FUNCTION_9_0();
}

uint64_t LocalParticipantView.participantViewShouldShowShutterTappedAlert(_:)()
{
  return 0;
}

void LocalParticipantView.layoutIdiom.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_5_72();
}

void sub_1BD1FC28C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, __int16 a10, char a11, char a12)
{
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;

  if (a1)
  {
    v14 = OUTLINED_FUNCTION_37_29();
    (*(void (**)(char *__return_ptr, uint64_t, uint64_t))(v13 + 32))(&a12, v14, v13);
    OUTLINED_FUNCTION_10();
    v15 = a12;
  }
  else
  {
    v15 = 2;
  }
  *v12 = v15;
  OUTLINED_FUNCTION_9_0();
}

void LocalParticipantView.showCountdownLabelIfNeeded()()
{
  char *v0;
  uint64_t v1;
  char *v2;
  id v3;
  id v4;
  uint64_t inited;
  void *v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  id v15;
  Class isa;
  id v17;
  id v18;
  id v19;
  UILabel *v20;
  void *v21;
  void *v22;
  void *v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  Class v37;
  void *v38;
  UIColor_optional v39;

  v1 = OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_countdownLabel;
  if (!*(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_countdownLabel])
  {
    v2 = v0;
    v3 = objc_msgSend((id)objc_opt_self(), sel_preferredFontDescriptorWithTextStyle_, *MEMORY[0x1E0DC4AE8]);
    v4 = objc_msgSend(v3, sel_fontDescriptorWithDesign_, *MEMORY[0x1E0DC13A8]);

    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(UIFontDescriptorFeatureKey, Int)>);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1BD645380;
    v6 = (void *)*MEMORY[0x1E0DC4A60];
    *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC4A60];
    *(_QWORD *)(inited + 40) = 6;
    v7 = (void *)*MEMORY[0x1E0DC4A50];
    *(_QWORD *)(inited + 48) = *MEMORY[0x1E0DC4A50];
    *(_QWORD *)(inited + 56) = 0;
    type metadata accessor for UIFontDescriptorFeatureKey(0);
    _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type UIFontDescriptorFeatureKey and conformance UIFontDescriptorFeatureKey, (uint64_t (*)(uint64_t))type metadata accessor for UIFontDescriptorFeatureKey, (uint64_t)&protocol conformance descriptor for UIFontDescriptorFeatureKey);
    v8 = v6;
    v9 = v7;
    v10 = Dictionary.init(dictionaryLiteral:)();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(UIFontDescriptorAttributeName, [[UIFontDescriptorFeatureKey : Int]])>);
    v11 = swift_initStackObject();
    *(_OWORD *)(v11 + 16) = xmmword_1BD6441D0;
    v12 = (void *)*MEMORY[0x1E0DC1380];
    *(_QWORD *)(v11 + 32) = *MEMORY[0x1E0DC1380];
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<[UIFontDescriptorFeatureKey : Int]>);
    v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_1BD6441D0;
    *(_QWORD *)(v13 + 32) = v10;
    *(_QWORD *)(v11 + 40) = v13;
    type metadata accessor for UIFontDescriptorAttributeName(0);
    v14 = v12;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [[UIFontDescriptorFeatureKey : Int]]);
    _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type UIFontDescriptorAttributeName and conformance UIFontDescriptorAttributeName, (uint64_t (*)(uint64_t))type metadata accessor for UIFontDescriptorAttributeName, (uint64_t)&protocol conformance descriptor for UIFontDescriptorAttributeName);
    Dictionary.init(dictionaryLiteral:)();
    if (v4)
    {
      v15 = v4;
      specialized _dictionaryUpCast<A, B, C, D>(_:)();
      swift_bridgeObjectRelease();
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      v17 = objc_msgSend(v15, sel_fontDescriptorByAddingAttributes_, isa);

      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UILabel);
      if (v17)
      {
        v18 = objc_msgSend((id)objc_opt_self(), sel_fontWithDescriptor_size_, v17, 200.0);
LABEL_7:
        v19 = v18;
        v39.value.super.isa = (Class)objc_msgSend((id)objc_opt_self(), sel_whiteColor);
        UILabel.init(font:textColor:)(v20, (UIFont)v19, v39);
        v22 = v21;
        objc_msgSend(v21, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
        objc_msgSend(v22, sel_setTextAlignment_, 1);
        objc_msgSend(v2, sel_insertSubview_belowSubview_, v22, *(_QWORD *)&v2[OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_controlsView]);
        v23 = (void *)objc_opt_self();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
        v24 = swift_allocObject();
        *(_OWORD *)(v24 + 16) = xmmword_1BD644140;
        v25 = objc_msgSend(v22, sel_topAnchor);
        v26 = objc_msgSend(v2, sel_topAnchor);
        v27 = objc_msgSend(v25, sel_constraintEqualToAnchor_, v26);

        *(_QWORD *)(v24 + 32) = v27;
        v28 = objc_msgSend(v22, sel_bottomAnchor);
        v29 = objc_msgSend(v2, sel_bottomAnchor);
        v30 = objc_msgSend(v28, sel_constraintEqualToAnchor_, v29);

        *(_QWORD *)(v24 + 40) = v30;
        v31 = objc_msgSend(v22, sel_leadingAnchor);
        v32 = objc_msgSend(v2, sel_leadingAnchor);
        v33 = objc_msgSend(v31, sel_constraintEqualToAnchor_, v32);

        *(_QWORD *)(v24 + 48) = v33;
        v34 = objc_msgSend(v22, sel_trailingAnchor);
        v35 = objc_msgSend(v2, sel_trailingAnchor);
        v36 = objc_msgSend(v34, sel_constraintEqualToAnchor_, v35);

        *(_QWORD *)(v24 + 56) = v36;
        specialized Array._endMutation()();
        type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
        v37 = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        objc_msgSend(v23, sel_activateConstraints_, v37);

        v38 = *(void **)&v2[v1];
        *(_QWORD *)&v2[v1] = v22;

        return;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UILabel);
    }
    v18 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_, 200.0);
    v17 = 0;
    goto LABEL_7;
  }
}

Swift::Void __swiftcall LocalParticipantView.updateCountdownWith(_:)(Swift::Int a1)
{
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;

  LocalParticipantView.showCountdownLabelIfNeeded()();
  v2 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_countdownLabel);
  if (v2)
  {
    v3 = v2;
    v4 = dispatch thunk of CustomStringConvertible.description.getter();
    outlined bridged method (mbnn) of @objc UILabel.text.setter(v4, v5, v3);

  }
}

Swift::Void __swiftcall LocalParticipantView.endCountdown()()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_countdownLabel;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_countdownLabel);
  if (v2)
  {
    objc_msgSend(v2, sel_removeFromSuperview);
    v2 = *(void **)(v0 + v1);
  }
  *(_QWORD *)(v0 + v1) = 0;

}

void sub_1BD1FC948()
{
  _BYTE *v0;

  OUTLINED_FUNCTION_4();
  *v0 = LocalParticipantView.videoMessagingState.getter();
  OUTLINED_FUNCTION_0();
}

void sub_1BD1FC968()
{
  LocalParticipantView.videoMessagingState.setter();
  OUTLINED_FUNCTION_0();
}

unint64_t lazy protocol witness table accessor for type Published<VideoMessageController.State>.Publisher and conformance Published<A>.Publisher()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type Published<VideoMessageController.State>.Publisher and conformance Published<A>.Publisher;
  if (!lazy protocol witness table cache variable for type Published<VideoMessageController.State>.Publisher and conformance Published<A>.Publisher)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&demangling cache variable for type metadata for Published<VideoMessageController.State>.Publisher);
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0C96190], v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Published<VideoMessageController.State>.Publisher and conformance Published<A>.Publisher);
  }
  return result;
}

uint64_t outlined init with copy of ParticipantViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ParticipantViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

char *outlined init with copy of ParticipantVideoOverlayView.ViewModel(unsigned __int8 *__src, char *__dst)
{
  initializeWithCopy for ParticipantVideoOverlayView.ViewModel(__dst, __src);
  return __dst;
}

uint64_t sub_1BD1FCA4C()
{
  uint64_t v0;

  return swift_deallocObject();
}

void partial apply for closure #1 in LocalParticipantView.updateControlsAlpha(animated:)()
{
  uint64_t v0;

  closure #1 in LocalParticipantView.updateControlsAlpha(animated:)(*(_QWORD *)(v0 + 16));
}

unint64_t lazy protocol witness table accessor for type LocalParticipantLongPressAction and conformance LocalParticipantLongPressAction()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type LocalParticipantLongPressAction and conformance LocalParticipantLongPressAction;
  if (!lazy protocol witness table cache variable for type LocalParticipantLongPressAction and conformance LocalParticipantLongPressAction)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for LocalParticipantLongPressAction, &type metadata for LocalParticipantLongPressAction);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LocalParticipantLongPressAction and conformance LocalParticipantLongPressAction);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type LocalParticipantAction and conformance LocalParticipantAction()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type LocalParticipantAction and conformance LocalParticipantAction;
  if (!lazy protocol witness table cache variable for type LocalParticipantAction and conformance LocalParticipantAction)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for LocalParticipantAction, &type metadata for LocalParticipantAction);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LocalParticipantAction and conformance LocalParticipantAction);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type LocalParticipantView.DragEventType and conformance LocalParticipantView.DragEventType()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type LocalParticipantView.DragEventType and conformance LocalParticipantView.DragEventType;
  if (!lazy protocol witness table cache variable for type LocalParticipantView.DragEventType and conformance LocalParticipantView.DragEventType)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for LocalParticipantView.DragEventType, &type metadata for LocalParticipantView.DragEventType);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LocalParticipantView.DragEventType and conformance LocalParticipantView.DragEventType);
  }
  return result;
}

void sub_1BD1FCB44(unsigned __int8 *a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_65_6(a1);
  LocalParticipantView.blurEnabled.setter(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD1FCB64(unsigned __int8 *a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_65_6(a1);
  LocalParticipantView.shouldAddOverlayBlur.setter(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD1FCB84(unsigned __int8 *a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_65_6(a1);
  LocalParticipantView.requiresControlsHidden.setter(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD1FCBA4(unsigned __int8 *a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_65_6(a1);
  LocalParticipantView.requiresViewHidden.setter(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD1FCBC0()
{
  uint64_t v0;

  OUTLINED_FUNCTION_4();
  LocalParticipantView.supportsRotation.getter();
  OUTLINED_FUNCTION_68_0(v0);
  OUTLINED_FUNCTION_0();
}

void sub_1BD1FCBE0(unsigned __int8 *a1)
{
  OUTLINED_FUNCTION_65_6(a1);
  LocalParticipantView.supportsRotation.setter();
  OUTLINED_FUNCTION_0();
}

void sub_1BD1FCBFC()
{
  uint64_t v0;

  OUTLINED_FUNCTION_4();
  LocalParticipantView.supportsCameraBlur.getter();
  OUTLINED_FUNCTION_68_0(v0);
  OUTLINED_FUNCTION_0();
}

void sub_1BD1FCC1C(unsigned __int8 *a1)
{
  OUTLINED_FUNCTION_65_6(a1);
  LocalParticipantView.supportsCameraBlur.setter();
  OUTLINED_FUNCTION_0();
}

void sub_1BD1FCC38()
{
  LocalParticipantView.hudRecipe.getter();
  OUTLINED_FUNCTION_0();
}

void sub_1BD1FCC58()
{
  uint64_t v0;

  OUTLINED_FUNCTION_4();
  LocalParticipantView.isInComingCall.getter();
  OUTLINED_FUNCTION_68_0(v0);
  OUTLINED_FUNCTION_0();
}

void sub_1BD1FCC78(unsigned __int8 *a1)
{
  OUTLINED_FUNCTION_65_6(a1);
  LocalParticipantView.isInComingCall.setter();
  OUTLINED_FUNCTION_0();
}

void sub_1BD1FCC98(unsigned __int8 *a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_65_6(a1);
  LocalParticipantView.isInRoster.setter(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD1FCCB4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_4();
  LocalParticipantView.cinematicFramingIsAvailable.getter();
  OUTLINED_FUNCTION_68_0(v0);
  OUTLINED_FUNCTION_0();
}

void sub_1BD1FCCD4(unsigned __int8 *a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_65_6(a1);
  LocalParticipantView.cinematicFramingIsAvailable.setter(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD1FCCF0()
{
  uint64_t v0;

  OUTLINED_FUNCTION_4();
  LocalParticipantView.cinematicFramingIsEnabled.getter();
  OUTLINED_FUNCTION_68_0(v0);
  OUTLINED_FUNCTION_0();
}

void sub_1BD1FCD10(unsigned __int8 *a1)
{
  OUTLINED_FUNCTION_65_6(a1);
  LocalParticipantView.cinematicFramingIsEnabled.setter();
  OUTLINED_FUNCTION_0();
}

void sub_1BD1FCD2C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_4();
  LocalParticipantView.supportsReactionGestures.getter();
  OUTLINED_FUNCTION_68_0(v0);
  OUTLINED_FUNCTION_0();
}

void sub_1BD1FCD4C(unsigned __int8 *a1)
{
  OUTLINED_FUNCTION_65_6(a1);
  LocalParticipantView.supportsReactionGestures.setter();
  OUTLINED_FUNCTION_0();
}

void sub_1BD1FCD68()
{
  uint64_t v0;

  OUTLINED_FUNCTION_4();
  LocalParticipantView.supportsStudioLight.getter();
  OUTLINED_FUNCTION_68_0(v0);
  OUTLINED_FUNCTION_0();
}

void sub_1BD1FCD88(unsigned __int8 *a1)
{
  OUTLINED_FUNCTION_65_6(a1);
  LocalParticipantView.supportsStudioLight.setter();
  OUTLINED_FUNCTION_0();
}

void sub_1BD1FCDA4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_4();
  LocalParticipantView.reactionEffectGestureIsEnabled.getter();
  OUTLINED_FUNCTION_68_0(v0);
  OUTLINED_FUNCTION_0();
}

void sub_1BD1FCDC4(unsigned __int8 *a1)
{
  OUTLINED_FUNCTION_65_6(a1);
  LocalParticipantView.reactionEffectGestureIsEnabled.setter();
  OUTLINED_FUNCTION_0();
}

void sub_1BD1FCDE0()
{
  uint64_t v0;

  OUTLINED_FUNCTION_4();
  LocalParticipantView.studioLightIsEnabled.getter();
  OUTLINED_FUNCTION_68_0(v0);
  OUTLINED_FUNCTION_0();
}

void sub_1BD1FCE00(unsigned __int8 *a1)
{
  OUTLINED_FUNCTION_65_6(a1);
  LocalParticipantView.studioLightIsEnabled.setter();
  OUTLINED_FUNCTION_0();
}

void sub_1BD1FCE1C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_4();
  LocalParticipantView.cameraFlipButtonIsAvailable.getter();
  OUTLINED_FUNCTION_68_0(v0);
  OUTLINED_FUNCTION_0();
}

void sub_1BD1FCE3C(unsigned __int8 *a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_65_6(a1);
  LocalParticipantView.cameraFlipButtonIsAvailable.setter(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD1FCE58()
{
  LocalParticipantView.$videoMessagingState.getter();
  OUTLINED_FUNCTION_0();
}

uint64_t dispatch thunk of LocalParticipantViewDelegate.localParticipantViewDidTap(_:localParticipantView:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of LocalParticipantViewDelegate.localParticipantViewDidLongPress(_:localParticipantView:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of LocalParticipantViewDelegate.hostingController()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of LocalParticipantViewDelegate.layoutIdiom.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of LocalParticipantViewDelegate.isCameraMixedWithScreen.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t storeEnumTagSinglePayload for LocalParticipantLongPressAction(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BD1FCEE0 + 4 * byte_1BD650D10[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BD1FCF00 + 4 * byte_1BD650D15[v4]))();
}

_BYTE *sub_1BD1FCEE0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BD1FCF00(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BD1FCF08(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BD1FCF10(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BD1FCF18(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BD1FCF20(_DWORD *result)
{
  *result = 0;
  return result;
}

void type metadata accessor for LocalParticipantLongPressAction()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t getEnumTagSinglePayload for LocalParticipantAction(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF1)
  {
    if (a2 + 15 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 15) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 16;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x10;
  v5 = v6 - 16;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for LocalParticipantAction(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 15 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 15) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF1)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF0)
    return ((uint64_t (*)(void))((char *)&loc_1BD1FD00C + 4 * byte_1BD650D1F[v4]))();
  *a1 = a2 + 15;
  return ((uint64_t (*)(void))((char *)sub_1BD1FD040 + 4 * byte_1BD650D1A[v4]))();
}

uint64_t sub_1BD1FD040(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD1FD048(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD1FD050);
  return result;
}

uint64_t sub_1BD1FD05C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD1FD064);
  *(_BYTE *)result = a2 + 15;
  return result;
}

uint64_t sub_1BD1FD068(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD1FD070(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for LocalParticipantAction()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t ObjC metadata update function for LocalParticipantView()
{
  return type metadata accessor for LocalParticipantView();
}

uint64_t type metadata accessor for LocalParticipantView()
{
  uint64_t result;

  result = type metadata singleton initialization cache for LocalParticipantView;
  if (!type metadata singleton initialization cache for LocalParticipantView)
    return swift_getSingletonMetadata();
  return result;
}

void type metadata completion function for LocalParticipantView()
{
  unint64_t v0;

  type metadata accessor for Published<VideoMessageController.State>();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for LocalParticipantView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of LocalParticipantView.__allocating_init(isInRoster:supportsRotation:supportsCameraBlur:supportsReactions:supportsReactionGestures:supportsStudioLight:supportsCameraFlip:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 184))();
}

void type metadata accessor for Published<VideoMessageController.State>()
{
  unint64_t v0;
  uint64_t v1;

  if (!lazy cache variable for type metadata for Published<VideoMessageController.State>)
  {
    v0 = type metadata accessor for Published();
    if (!v1)
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for Published<VideoMessageController.State>);
  }
}

uint64_t storeEnumTagSinglePayload for LocalParticipantView.DragEventType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BD1FD218 + 4 * byte_1BD650D29[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BD1FD24C + 4 * byte_1BD650D24[v4]))();
}

uint64_t sub_1BD1FD24C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD1FD254(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD1FD25CLL);
  return result;
}

uint64_t sub_1BD1FD268(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD1FD270);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BD1FD274(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD1FD27C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for LocalParticipantView.DragEventType()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t OUTLINED_FUNCTION_39_33@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(void))((v1 & a1) + 0x2D8))();
}

BOOL static CallScreeningScreeningState.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  BOOL v4;

  v4 = *a1 == *a2 && a1[1] == a2[1];
  return (v4 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      && specialized static CKStateMachineContainer.== infix(_:_:)(a1[6], a2[6]);
}

void CallScreeningScreeningState.callUUID.getter()
{
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_0();
}

void CallScreeningScreeningState.onEnterState.getter()
{
  swift_retain();
  OUTLINED_FUNCTION_0();
}

void CallScreeningScreeningState.onLeaveState.getter()
{
  swift_retain();
  OUTLINED_FUNCTION_0();
}

uint64_t CallScreeningScreeningState.stateMachineContainer.getter()
{
  return swift_retain();
}

uint64_t CallScreeningScreeningState.init(prevState:onEnterState:onLeaveState:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CKStateMachineContainer<CallScreening.State>);
  v12 = swift_allocObject();
  swift_weakInit();
  v13 = *a1;
  v14 = a1[1];
  swift_release();
  result = swift_release();
  *a6 = v13;
  a6[1] = v14;
  a6[2] = a2;
  a6[3] = a3;
  a6[4] = a4;
  a6[5] = a5;
  a6[6] = v12;
  return result;
}

void CallScreeningScreeningState.willExit(to:)(_QWORD *a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  void *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[2];
  os_log_t v33;
  int v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  void (*v38)(_QWORD *, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44[8];
  uint64_t v45;

  v3 = v2;
  v43 = type metadata accessor for Logger();
  v6 = *(_QWORD *)(v43 - 8);
  MEMORY[0x1E0C80A78](v43);
  v8 = (char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = OUTLINED_FUNCTION_9_62();
  v10 = MEMORY[0x1C3B750C8](&protocol conformance descriptor for CallScreeningScreeningState<A>, a2, v9);
  v11 = CallScreeningState.stateMachine.getter(a2, v10);
  if (v11)
  {
    v40 = v11;
    v41 = v6;
    v12 = *v2;
    v13 = v2[1];
    v38 = (void (*)(_QWORD *, uint64_t, uint64_t))v2[4];
    v39 = v12;
    v14 = v2[5];
    (*(void (**)(_QWORD))(*(_QWORD *)(a2 + 24) + 16))(*(_QWORD *)(a2 + 16));
    OUTLINED_FUNCTION_33_1();
    swift_retain();
    OUTLINED_FUNCTION_4_76();
    swift_retain();
    OUTLINED_FUNCTION_27_29();
    v42 = v13;
    v15 = v14;
    swift_bridgeObjectRetain();
    swift_retain();
    OUTLINED_FUNCTION_4_76();
    swift_retain();
    OUTLINED_FUNCTION_27_29();
    v16 = Logger.logObject.getter();
    v17 = static os_log_type_t.default.getter();
    v18 = v17;
    if (os_log_type_enabled(v16, v17))
    {
      v19 = OUTLINED_FUNCTION_105();
      v34 = v18;
      v20 = v19;
      v35 = OUTLINED_FUNCTION_105();
      v44[0] = v35;
      *(_DWORD *)v20 = 136446466;
      v32[1] = v20 + 4;
      v33 = v16;
      v21 = CallScreeningScreeningState.description.getter();
      v23 = v22;
      v36 = v8;
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      v45 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v21, v23, v44);
      v37 = v15;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      *(_WORD *)(v20 + 12) = 2082;
      outlined retain of CallScreening.State(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined copy of CallScreening.State);
      CallScreening.State.description.getter();
      v25 = v24;
      v27 = v26;
      OUTLINED_FUNCTION_11_61();
      v45 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v25, v27, v44);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_11_61();
      OUTLINED_FUNCTION_11_61();
      _os_log_impl(&dword_1BD004000, v33, (os_log_type_t)v34, "%{public}s Exiting to %{public}s", (uint8_t *)v20, 0x16u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_60();
    }
    swift_bridgeObjectRelease_n();
    OUTLINED_FUNCTION_23_0();
    OUTLINED_FUNCTION_23_0();
    OUTLINED_FUNCTION_23_0();
    OUTLINED_FUNCTION_28_37();
    OUTLINED_FUNCTION_28_37();

    (*(void (**)(char *, uint64_t))(v41 + 8))(v8, v43);
    v38(v3, v39, v42);
    swift_unknownObjectRelease();
  }
  else
  {
    if (one-time initialization token for answeringMachine != -1)
      swift_once();
    __swift_project_value_buffer(v43, (uint64_t)&static Logger.answeringMachine);
    v28 = (void *)Logger.logObject.getter();
    v29 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_13_0(v29))
    {
      *(_WORD *)OUTLINED_FUNCTION_105() = 0;
      OUTLINED_FUNCTION_13_58(&dword_1BD004000, v30, v31, "StateMachine is nil in willExit");
      OUTLINED_FUNCTION_60();
    }

  }
  OUTLINED_FUNCTION_1_29();
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> CallScreeningScreeningState.enteredState()()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t);
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  unint64_t v19;
  unint64_t v20;
  void *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[4];
  void (*v26)(uint64_t *, uint64_t, char *);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31[10];

  v2 = v0;
  v30 = type metadata accessor for Logger();
  v3 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v5 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = OUTLINED_FUNCTION_9_62();
  v7 = MEMORY[0x1C3B750C8](&protocol conformance descriptor for CallScreeningScreeningState<A>, v2, v6);
  v8 = CallScreeningState.stateMachine.getter(v2, v7);
  if (v8)
  {
    v9 = v8;
    v10 = v1[1];
    v28 = *v1;
    v11 = v1[3];
    v26 = (void (*)(uint64_t *, uint64_t, char *))v1[2];
    v12 = v1[5];
    v13 = v1[6];
    v14 = *(_QWORD *)(v2 + 16);
    v15 = *(void (**)(uint64_t))(*(_QWORD *)(v2 + 24) + 16);
    v25[2] = v9;
    v15(v14);
    v27 = v10;
    swift_bridgeObjectRetain();
    v29 = v11;
    swift_retain();
    v25[1] = v12;
    swift_retain();
    v25[3] = v13;
    OUTLINED_FUNCTION_21_7();
    v16 = Logger.logObject.getter();
    v17 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)OUTLINED_FUNCTION_105();
      v31[0] = OUTLINED_FUNCTION_105();
      v25[0] = v3;
      *(_DWORD *)v18 = 136446210;
      v19 = CallScreeningScreeningState.description.getter();
      v31[9] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v19, v20, v31);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_22_44();
      swift_release();
      swift_release();
      swift_release();
      _os_log_impl(&dword_1BD004000, v16, v17, "EnteredState %{public}s", v18, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_60();
    }
    OUTLINED_FUNCTION_22_44();
    swift_release();
    swift_release();
    swift_release();

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v30);
    v26(v1, v28, v5);
    swift_unknownObjectRelease();
  }
  else
  {
    if (one-time initialization token for answeringMachine != -1)
      swift_once();
    __swift_project_value_buffer(v30, (uint64_t)&static Logger.answeringMachine);
    v21 = (void *)Logger.logObject.getter();
    v22 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_13_0(v22))
    {
      *(_WORD *)OUTLINED_FUNCTION_105() = 0;
      OUTLINED_FUNCTION_13_58(&dword_1BD004000, v23, v24, "StateMachine is nil in enteredState");
      OUTLINED_FUNCTION_60();
    }

  }
  OUTLINED_FUNCTION_1_29();
}

uint64_t CallScreeningScreeningState.update(with:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[19] = a2;
  v3[20] = v2;
  v3[18] = a1;
  v4 = type metadata accessor for Logger();
  v3[21] = v4;
  v3[22] = *(_QWORD *)(v4 - 8);
  v3[23] = swift_task_alloc();
  if (one-time initialization token for shared != -1)
    swift_once();
  v3[24] = static CKStateMachineActor.shared;
  return swift_task_switch();
}

uint64_t CallScreeningScreeningState.update(with:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  __int128 *v10;
  uint64_t v11;
  unint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  NSObject *v20;
  _BOOL4 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  os_log_type_t type;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;

  v2 = *(_QWORD *)(v0 + 152);
  v1 = *(_QWORD *)(v0 + 160);
  v4 = *(_OWORD *)(v1 + 16);
  v3 = *(_OWORD *)(v1 + 32);
  v5 = *(_QWORD *)(v1 + 48);
  *(_OWORD *)(v0 + 72) = *(_OWORD *)v1;
  *(_QWORD *)(v0 + 120) = v5;
  *(_OWORD *)(v0 + 104) = v3;
  *(_OWORD *)(v0 + 88) = v4;
  v6 = MEMORY[0x1C3B750C8](&protocol conformance descriptor for CallScreeningScreeningState<A>, v2);
  v7 = CallScreeningState.stateMachine.getter(v2, v6);
  *(_QWORD *)(v0 + 200) = v7;
  if (v7)
  {
    v9 = (uint64_t *)(v0 + 144);
    v8 = *(_QWORD *)(v0 + 144);
    v10 = *(__int128 **)(v0 + 160);
    v11 = *(_QWORD *)v10;
    v12 = *((_QWORD *)v10 + 1);
    v13 = *(_QWORD *)(v8 + 16) == *(_QWORD *)v10 && *(_QWORD *)(v8 + 24) == v12;
    v29 = *(_QWORD *)(v8 + 16);
    v30 = *(_QWORD *)(v8 + 24);
    if (v13)
    {
LABEL_8:
      v14 = *(_QWORD *)(v0 + 152);
      v15 = swift_allocObject();
      *(_QWORD *)(v0 + 208) = v15;
      *(_QWORD *)(v15 + 16) = *(_QWORD *)(v14 + 16);
      *(_QWORD *)(v15 + 24) = *(_QWORD *)(v14 + 24);
      v16 = *v10;
      v17 = v10[1];
      v18 = v10[2];
      *(_QWORD *)(v15 + 80) = *((_QWORD *)v10 + 6);
      *(_OWORD *)(v15 + 48) = v17;
      *(_OWORD *)(v15 + 64) = v18;
      *(_OWORD *)(v15 + 32) = v16;
      __asm { BR              X10 }
    }
    if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      v10 = *(__int128 **)(v0 + 160);
      v8 = *(_QWORD *)(v0 + 144);
      goto LABEL_8;
    }
    v19 = *v9;
    if ((*(_BYTE *)(*v9 + 33) & 1) != 0)
    {
      (*(void (**)(_QWORD))(*(_QWORD *)(*(_QWORD *)(v0 + 152) + 24) + 16))(*(_QWORD *)(*(_QWORD *)(v0 + 152) + 16));
      OUTLINED_FUNCTION_33_1();
      OUTLINED_FUNCTION_4_76();
      OUTLINED_FUNCTION_21_7();
      swift_retain();
      outlined retain of AnsweringMachineCallStatus(v19);
      OUTLINED_FUNCTION_33_1();
      OUTLINED_FUNCTION_4_76();
      OUTLINED_FUNCTION_21_7();
      swift_retain();
      outlined retain of AnsweringMachineCallStatus(v19);
      v20 = Logger.logObject.getter();
      type = static os_log_type_t.error.getter();
      v21 = os_log_type_enabled(v20, type);
      v22 = *(_QWORD *)(v0 + 184);
      v28 = *(_QWORD *)(v0 + 176);
      v23 = *(_QWORD *)(v0 + 168);
      v27 = *(_QWORD *)(v0 + 144);
      if (v21)
      {
        v24 = swift_slowAlloc();
        v31 = swift_slowAlloc();
        *(_DWORD *)v24 = 136446466;
        OUTLINED_FUNCTION_33_1();
        *(_QWORD *)(v0 + 128) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v11, v12, &v31);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        OUTLINED_FUNCTION_23_0();
        OUTLINED_FUNCTION_23_0();
        OUTLINED_FUNCTION_23_0();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v24 + 12) = 2082;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v0 + 136) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v29, v30, &v31);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        outlined release of AnsweringMachineCallStatus(v27);
        outlined release of AnsweringMachineCallStatus(v27);
        _os_log_impl(&dword_1BD004000, v20, type, "Found a call in screening that does not match the one we are tracking! Tracked: %{public}s new: %{public}s", (uint8_t *)v24, 0x16u);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_60();
      }
      OUTLINED_FUNCTION_23_0();
      OUTLINED_FUNCTION_23_0();
      OUTLINED_FUNCTION_23_0();
      swift_bridgeObjectRelease_n();
      OUTLINED_FUNCTION_19_0();
      outlined release of AnsweringMachineCallStatus(v27);
      outlined release of AnsweringMachineCallStatus(v27);

      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v22, v23);
    }
    else
    {
      OUTLINED_FUNCTION_19_0();
    }
  }
  OUTLINED_FUNCTION_30_37();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_30();
  *v3 = *v2;
  *(_QWORD *)(v0 + 224) = v1;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_2_8();
}

{
  uint64_t v0;

  swift_release();
  OUTLINED_FUNCTION_19_0();
  outlined retain of CallScreening.State((_QWORD *)(v0 + 16), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined consume of CallScreening.State);
  OUTLINED_FUNCTION_30_37();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_30();
  *v3 = *v2;
  *(_QWORD *)(v0 + 240) = v1;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_2_8();
}

{
  uint64_t v0;

  swift_release();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_30_37();
  return OUTLINED_FUNCTION_16(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_30();
  *v3 = *v2;
  *(_QWORD *)(v0 + 256) = v1;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_2_8();
}

{
  uint64_t v0;

  outlined retain of CallScreening.State((_QWORD *)(v0 + 16), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined consume of CallScreening.State);
  OUTLINED_FUNCTION_10_70();
  OUTLINED_FUNCTION_19_0();
  OUTLINED_FUNCTION_81_0();
  return OUTLINED_FUNCTION_14_3(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;

  OUTLINED_FUNCTION_10_70();
  OUTLINED_FUNCTION_19_0();
  OUTLINED_FUNCTION_81_0();
  return OUTLINED_FUNCTION_14_3(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;

  OUTLINED_FUNCTION_10_70();
  OUTLINED_FUNCTION_19_0();
  OUTLINED_FUNCTION_81_0();
  return OUTLINED_FUNCTION_14_3(*(uint64_t (**)(void))(v0 + 8));
}

void closure #1 in CallScreeningScreeningState.update(with:)(__int128 *a1)
{
  _BYTE v1[48];

  outlined init with take of CallScreening.State(a1, (uint64_t)v1);
  __asm { BR              X11 }
}

uint64_t sub_1BD1FE340()
{
  lazy protocol witness table accessor for type CKStateMachineError and conformance CKStateMachineError();
  swift_allocError();
  return swift_willThrow();
}

void sub_1BD1FE3A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  _QWORD *v11;

  if (a10 != *v11 || a11 != v11[1])
    _stringCompareWithSmolCheck(_:_:expecting:)();
  JUMPOUT(0x1BD1FE34CLL);
}

uint64_t protocol witness for CallScreeningState.stateMachineContainer.getter in conformance CallScreeningScreeningState<A>()
{
  return swift_retain();
}

void protocol witness for CallScreeningState.willExit(to:) in conformance CallScreeningScreeningState<A>(_QWORD *a1, uint64_t a2)
{
  CallScreeningScreeningState.willExit(to:)(a1, a2);
}

void protocol witness for CallScreeningState.enteredState() in conformance CallScreeningScreeningState<A>()
{
  CallScreeningScreeningState.enteredState()();
}

uint64_t protocol witness for UpdatesWithCallStatus.update(with:) in conformance CallScreeningScreeningState<A>(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  __int128 v6;
  _QWORD *v7;

  v6 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v3 + 32) = v6;
  *(_OWORD *)(v3 + 48) = *(_OWORD *)(v2 + 32);
  *(_QWORD *)(v3 + 64) = *(_QWORD *)(v2 + 48);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 72) = v7;
  *v7 = v3;
  v7[1] = protocol witness for UpdatesWithCallStatus.update(with:) in conformance CallScreeningScreeningState<A>;
  return CallScreeningScreeningState.update(with:)(a1, a2);
}

uint64_t protocol witness for UpdatesWithCallStatus.update(with:) in conformance CallScreeningScreeningState<A>()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_16(*(uint64_t (**)(void))(v2 + 8));
}

unint64_t CallScreeningScreeningState.description.getter()
{
  uint64_t *v0;
  void *v1;
  uint64_t v2;
  Swift::String v3;
  Swift::String v4;

  _StringGuts.grow(_:)(28);
  swift_bridgeObjectRelease();
  v2 = *v0;
  v1 = (void *)v0[1];
  swift_bridgeObjectRetain();
  v3._countAndFlagsBits = v2;
  v3._object = v1;
  String.append(_:)(v3);
  swift_bridgeObjectRelease();
  v4._countAndFlagsBits = 41;
  v4._object = (void *)0xE100000000000000;
  String.append(_:)(v4);
  return 0xD000000000000019;
}

uint64_t sub_1BD1FE5BC()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void partial apply for closure #1 in CallScreeningScreeningState.update(with:)(__int128 *a1)
{
  closure #1 in CallScreeningScreeningState.update(with:)(a1);
}

uint64_t instantiation function for generic protocol witness table for CallScreeningScreeningState<A>(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for CallScreeningScreeningState<A>);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t destroy for CallScreeningScreeningState()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for CallScreeningScreeningState(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v3 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v3;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for CallScreeningScreeningState(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_release();
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_retain();
  swift_release();
  a1[6] = a2[6];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for CallScreeningScreeningState(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  return a1;
}

uint64_t type metadata accessor for CallScreeningScreeningState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CallScreeningScreeningState);
}

void __swiftcall UIActivityIndicatorView.init(style:size:)(UIActivityIndicatorView *__return_ptr retstr, ConversationKit::PlatformActivityIndicatorStyle style, ConversationKit::PlatformActivityIndicatorSize size)
{
  id v4;
  uint64_t v5;

  v4 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if ((size & 1) != 0)
    v5 = 101;
  else
    v5 = 100;
  objc_msgSend(v4, sel_setActivityIndicatorViewStyle_, v5);
}

BOOL static PlatformActivityIndicatorSize.== infix(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void PlatformActivityIndicatorSize.hash(into:)(uint64_t a1, char a2)
{
  Hasher._combine(_:)(a2 & 1);
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance PlatformActivityIndicatorSize(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static PlatformActivityIndicatorSize.== infix(_:_:)(*a1, *a2);
}

uint64_t protocol witness for Hashable.hashValue.getter in conformance PlatformActivityIndicatorSize()
{
  unsigned __int8 *v0;

  return PlatformActivityIndicatorSize.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance PlatformActivityIndicatorSize(uint64_t a1)
{
  char *v1;

  PlatformActivityIndicatorSize.hash(into:)(a1, *v1);
}

void PlatformActivityIndicatorSize.hashValue.getter(char a1)
{
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1 & 1);
  Hasher._finalize()();
  OUTLINED_FUNCTION_2();
}

unint64_t lazy protocol witness table accessor for type PlatformActivityIndicatorSize and conformance PlatformActivityIndicatorSize()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PlatformActivityIndicatorSize and conformance PlatformActivityIndicatorSize;
  if (!lazy protocol witness table cache variable for type PlatformActivityIndicatorSize and conformance PlatformActivityIndicatorSize)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for PlatformActivityIndicatorSize, &type metadata for PlatformActivityIndicatorSize);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PlatformActivityIndicatorSize and conformance PlatformActivityIndicatorSize);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type PlatformActivityIndicatorStyle and conformance PlatformActivityIndicatorStyle()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PlatformActivityIndicatorStyle and conformance PlatformActivityIndicatorStyle;
  if (!lazy protocol witness table cache variable for type PlatformActivityIndicatorStyle and conformance PlatformActivityIndicatorStyle)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for PlatformActivityIndicatorStyle, &type metadata for PlatformActivityIndicatorStyle);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PlatformActivityIndicatorStyle and conformance PlatformActivityIndicatorStyle);
  }
  return result;
}

ValueMetadata *type metadata accessor for PlatformActivityIndicatorSize()
{
  return &type metadata for PlatformActivityIndicatorSize;
}

uint64_t storeEnumTagSinglePayload for PlatformActivityIndicatorSize(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BD1FE9C4 + 4 * byte_1BD6510E5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BD1FE9F8 + 4 * byte_1BD6510E0[v4]))();
}

uint64_t sub_1BD1FE9F8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD1FEA00(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD1FEA08);
  return result;
}

uint64_t sub_1BD1FEA14(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD1FEA1CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BD1FEA20(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD1FEA28(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PlatformActivityIndicatorStyle()
{
  return &type metadata for PlatformActivityIndicatorStyle;
}

Swift::Void __swiftcall UIView.setCHCRPriority(_:)(__C::UILayoutPriority a1)
{
  void *v1;
  double v3;
  double v4;
  double v5;

  objc_msgSend(v1, sel_setContentCompressionResistancePriority_forAxis_, 1);
  LODWORD(v3) = a1;
  objc_msgSend(v1, sel_setContentCompressionResistancePriority_forAxis_, 0, v3);
  LODWORD(v4) = a1;
  objc_msgSend(v1, sel_setContentHuggingPriority_forAxis_, 1, v4);
  LODWORD(v5) = a1;
  objc_msgSend(v1, sel_setContentHuggingPriority_forAxis_, 0, v5);
}

void static UIView.animate(with:delay:animations:completion:)(_QWORD *a1, uint64_t a2, char a3, const void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _QWORD *v16;

  v13 = a1[3];
  v14 = a1[4];
  v15 = a3 & 1;
  v16 = __swift_project_boxed_opaque_existential_1(a1, v13);
  specialized static UIView.animate(with:delay:animations:completion:)((uint64_t)v16, a2, v15, a4, a5, a6, a7, v7, v13, v14);
}

void static UIView.animate(withCubicAnimationParameters:animations:completion:)(double *a1, uint64_t (*a2)(), uint64_t a3, uint64_t a4, uint64_t a5)
{
  specialized static UIView.animate(with:delay:animations:completion:)(a1, 0, 1, a2, a3, a4, a5);
}

void static UIView.animate(withSpringParameters:delay:animations:completion:)(double *a1, uint64_t a2, char a3, const void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  specialized static UIView.animate(with:delay:animations:completion:)(a1, a2, a3 & 1, a4, a5, a6, a7);
}

BOOL ContextMenuNotificationUserInfoKey.init(rawValue:)(Swift::String string)
{
  void *object;
  Swift::String v2;
  Swift::Int v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of ContextMenuNotificationUserInfoKey.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  return v3 != 0;
}

unint64_t ContextMenuNotificationUserInfoKey.rawValue.getter()
{
  return 0xD000000000000018;
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance ContextMenuNotificationUserInfoKey@<W0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  _BOOL8 result;

  result = ContextMenuNotificationUserInfoKey.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

unint64_t protocol witness for RawRepresentable.rawValue.getter in conformance ContextMenuNotificationUserInfoKey@<X0>(_QWORD *a1@<X8>)
{
  unint64_t result;
  uint64_t v3;

  result = ContextMenuNotificationUserInfoKey.rawValue.getter();
  *a1 = 0xD000000000000018;
  a1[1] = v3;
  return result;
}

uint64_t UIView.contextMenuUserInfo.getter()
{
  void *v0;
  id v1;
  uint64_t v2;
  _QWORD v4[4];
  uint64_t v5;

  v5 = MEMORY[0x1E0DEE9E0];
  v1 = objc_msgSend(v0, sel_SBUISA_layoutMode);
  type metadata accessor for SBUISystemApertureLayoutMode(0);
  v4[3] = v2;
  v4[0] = v1;
  specialized Dictionary.subscript.setter((uint64_t)v4);
  return v5;
}

void specialized static UIView.animate(with:delay:animations:completion:)(double *a1, uint64_t a2, char a3, const void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3CA0]), sel_initWithMass_stiffness_damping_initialVelocity_, a1[1], a1[2], a1[3], a1[4], a1[5]);
  v13 = OUTLINED_FUNCTION_2_81(objc_allocWithZone(MEMORY[0x1E0DC3F38]), sel_initWithDuration_timingParameters_);

  v14 = MEMORY[0x1E0C809B0];
  OUTLINED_FUNCTION_9_2((uint64_t)thunk for @escaping @callee_guaranteed () -> (), MEMORY[0x1E0C809B0], 1107296256, v18, v20);
  OUTLINED_FUNCTION_1_83();
  swift_release();
  objc_msgSend(v13, sel_addAnimations_, a4);
  _Block_release(a4);
  v15 = OUTLINED_FUNCTION_0_13();
  *(_QWORD *)(v15 + 16) = a6;
  *(_QWORD *)(v15 + 24) = a7;
  v16 = OUTLINED_FUNCTION_9_2((uint64_t)thunk for @escaping @callee_guaranteed (@unowned Bool) -> (), v14, 1107296256, v19, v21);
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(a6);
  swift_release();
  objc_msgSend(v13, sel_addCompletion_, v16);
  _Block_release(v16);
  if ((a3 & 1) != 0 || (v17 = *(double *)&a2, *(double *)&a2 <= 0.0))
    objc_msgSend(v13, sel_startAnimation, v17);
  else
    objc_msgSend(v13, sel_startAnimationAfterDelay_, *(double *)&a2);

}

void specialized static UIView.animate(with:delay:animations:completion:)(double *a1, uint64_t a2, char a3, uint64_t (*a4)(), uint64_t a5, uint64_t a6, uint64_t a7)
{
  double v13;
  id v14;
  id v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  uint64_t (*v25)();
  uint64_t v26;

  v13 = *a1;
  v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC36D8]), sel_initWithControlPoint1_controlPoint2_, a1[1], a1[2], a1[3], a1[4]);
  v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F38]), sel_initWithDuration_timingParameters_, v14, v13);

  v25 = a4;
  v26 = a5;
  v16 = MEMORY[0x1E0C809B0];
  v21 = MEMORY[0x1E0C809B0];
  v22 = 1107296256;
  v23 = thunk for @escaping @callee_guaranteed () -> ();
  v24 = &block_descriptor_6_4;
  v17 = _Block_copy(&v21);
  swift_retain();
  swift_release();
  objc_msgSend(v15, sel_addAnimations_, v17);
  _Block_release(v17);
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = a6;
  *(_QWORD *)(v18 + 24) = a7;
  v25 = partial apply for closure #1 in static UIView.animate(with:delay:animations:completion:);
  v26 = v18;
  v21 = v16;
  v22 = 1107296256;
  v23 = thunk for @escaping @callee_guaranteed (@unowned Bool) -> ();
  v24 = &block_descriptor_13_0;
  v19 = _Block_copy(&v21);
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(a6);
  swift_release();
  objc_msgSend(v15, sel_addCompletion_, v19);
  _Block_release(v19);
  if ((a3 & 1) != 0 || (v20 = *(double *)&a2, *(double *)&a2 <= 0.0))
    objc_msgSend(v15, sel_startAnimation, v20);
  else
    objc_msgSend(v15, sel_startAnimationAfterDelay_, *(double *)&a2);

}

void specialized static UIView.animate(with:delay:animations:completion:)(uint64_t a1, uint64_t a2, char a3, const void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  id v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  (*(void (**)(uint64_t, uint64_t))(a10 + 8))(a9, a10);
  (*(void (**)(uint64_t, uint64_t))(a10 + 16))(a9, a10);
  v15 = OUTLINED_FUNCTION_2_81(objc_allocWithZone(MEMORY[0x1E0DC3F38]), sel_initWithDuration_timingParameters_);
  swift_unknownObjectRelease();
  v16 = MEMORY[0x1E0C809B0];
  OUTLINED_FUNCTION_9_2((uint64_t)thunk for @escaping @callee_guaranteed () -> (), MEMORY[0x1E0C809B0], 1107296256, v20, v22);
  OUTLINED_FUNCTION_1_83();
  swift_release();
  objc_msgSend(v15, sel_addAnimations_, a4);
  _Block_release(a4);
  v17 = OUTLINED_FUNCTION_0_13();
  *(_QWORD *)(v17 + 16) = a6;
  *(_QWORD *)(v17 + 24) = a7;
  v18 = OUTLINED_FUNCTION_9_2((uint64_t)thunk for @escaping @callee_guaranteed (@unowned Bool) -> (), v16, 1107296256, v21, v23);
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(a6);
  swift_release();
  objc_msgSend(v15, sel_addCompletion_, v18);
  _Block_release(v18);
  if ((a3 & 1) != 0 || (v19 = *(double *)&a2, *(double *)&a2 <= 0.0))
    objc_msgSend(v15, sel_startAnimation, v19);
  else
    objc_msgSend(v15, sel_startAnimationAfterDelay_, *(double *)&a2);

}

uint64_t storeEnumTagSinglePayload for ContextMenuNotificationUserInfoKey(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BD1FF29C + 4 * asc_1BD651200[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BD1FF2BC + 4 * byte_1BD651205[v4]))();
}

_BYTE *sub_1BD1FF29C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BD1FF2BC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BD1FF2C4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BD1FF2CC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BD1FF2D4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BD1FF2DC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ContextMenuNotificationUserInfoKey()
{
  return &type metadata for ContextMenuNotificationUserInfoKey;
}

uint64_t objectdestroyTm_6()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in static UIView.animate(with:delay:animations:completion:)(uint64_t result)
{
  uint64_t v1;
  uint64_t (*v2)(BOOL);

  v2 = *(uint64_t (**)(BOOL))(v1 + 16);
  if (v2)
    return v2(result == 0);
  return result;
}

void *static SystemSymbol<A>.catalystCallControl(name:color:backgroundColor:scale:font:weight:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>, uint64_t a8@<D0>)
{
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*__src[12])();

  v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Image.Scale?);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)__src - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for Image.Scale();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v18, a5, v19);
  __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, v19);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)(a1, a2, a3, a4, (uint64_t)v18, a6, a8, 0, __src);
  return memcpy(a7, __src, 0x60uLL);
}

uint64_t static SystemSymbol.catalystCallControl(name:color:backgroundColor:)@<X0>(unint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, unint64_t a4@<X3>, unint64_t a5@<X4>, unint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  __n128 v20;
  __n128 __src[6];

  v16 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v16 + 16) = a7;
  v17 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v17 + 16) = a7;
  v18 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v18 + 16) = a7;
  v20.n128_u64[1] = v17;
  v20.n128_u64[0] = (unint64_t)partial apply for closure #2 in static SystemSymbol.catalystCallControl(name:color:backgroundColor:);
  SystemSymbol.init(name:color:backgroundColor:scale:font:weight:)(a1, a2, a3, a4, a5, a6, (unint64_t)partial apply for closure #1 in static SystemSymbol.catalystCallControl(name:color:backgroundColor:), v16, __src, v20, (unint64_t)partial apply for closure #3 in static SystemSymbol.catalystCallControl(name:color:backgroundColor:), v18);
  memcpy(a8, __src, 0x60uLL);
  swift_retain();
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  return swift_retain();
}

uint64_t closure #1 in static SystemSymbol.catalystCallControl(name:color:backgroundColor:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x1E0CDF7D8];
  v3 = type metadata accessor for Image.Scale();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t partial apply for closure #1 in static SystemSymbol.catalystCallControl(name:color:backgroundColor:)@<X0>(uint64_t a1@<X8>)
{
  return closure #1 in static SystemSymbol.catalystCallControl(name:color:backgroundColor:)(a1);
}

uint64_t one-time initialization function for callControlBackgroundOn()
{
  uint64_t result;

  result = static Color.white.getter();
  static SystemSymbol<A>.callControlBackgroundOn = result;
  return result;
}

uint64_t *SystemSymbol<A>.callControlBackgroundOn.unsafeMutableAddressor()
{
  if (one-time initialization token for callControlBackgroundOn != -1)
    swift_once();
  return &static SystemSymbol<A>.callControlBackgroundOn;
}

uint64_t static SystemSymbol<A>.callControlBackgroundOn.getter()
{
  return static SystemSymbol<A>.callControlBackgroundOn.getter(&one-time initialization token for callControlBackgroundOn);
}

uint64_t one-time initialization function for callControlBackgroundOff()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v0 = type metadata accessor for Color.RGBColorSpace();
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD))(v3 + 104))(v2, *MEMORY[0x1E0CDF3E0]);
  result = MEMORY[0x1C3B72614](v2, 0.311111111, 0.274509804, 0.274509804, 0.7);
  static SystemSymbol<A>.callControlBackgroundOff = result;
  return result;
}

uint64_t *SystemSymbol<A>.callControlBackgroundOff.unsafeMutableAddressor()
{
  if (one-time initialization token for callControlBackgroundOff != -1)
    swift_once();
  return &static SystemSymbol<A>.callControlBackgroundOff;
}

uint64_t static SystemSymbol<A>.callControlBackgroundOff.getter()
{
  return static SystemSymbol<A>.callControlBackgroundOn.getter(&one-time initialization token for callControlBackgroundOff);
}

uint64_t static SystemSymbol<A>.callControlBackgroundOn.getter(_QWORD *a1)
{
  if (*a1 != -1)
    swift_once();
  return swift_retain();
}

uint64_t (*default argument 1 of static SystemSymbol<A>.catalystCallControl(name:color:backgroundColor:)())(char a1)
{
  return closure #1 in default argument 1 of static SystemSymbol<A>.catalystCallControl(name:color:backgroundColor:);
}

uint64_t closure #1 in default argument 1 of static SystemSymbol<A>.catalystCallControl(name:color:backgroundColor:)(char a1)
{
  if ((a1 & 1) != 0)
    return static Color.black.getter();
  else
    return static Color.white.getter();
}

uint64_t (*default argument 2 of static SystemSymbol<A>.catalystCallControl(name:color:backgroundColor:)())(char a1)
{
  return closure #1 in default argument 2 of static SystemSymbol<A>.catalystCallControl(name:color:backgroundColor:);
}

uint64_t closure #1 in default argument 2 of static SystemSymbol<A>.catalystCallControl(name:color:backgroundColor:)(char a1)
{
  if ((a1 & 1) != 0)
  {
    if (one-time initialization token for callControlBackgroundOn == -1)
      return swift_retain();
    goto LABEL_6;
  }
  if (one-time initialization token for callControlBackgroundOff != -1)
LABEL_6:
    swift_once();
  return swift_retain();
}

uint64_t static SystemSymbol<A>.catalystCallControl(name:color:backgroundColor:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t (**a7)()@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v14 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = a2;
  v15 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v15 + 16) = a3;
  *(_QWORD *)(v15 + 24) = a4;
  v16 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v16 + 16) = a5;
  *(_QWORD *)(v16 + 24) = a6;
  *a7 = partial apply for closure #1 in static SystemSymbol<A>.catalystCallControl(name:color:backgroundColor:);
  a7[1] = (uint64_t (*)())v14;
  a7[2] = (uint64_t (*)())partial apply for thunk for @escaping @callee_guaranteed (@unowned Bool) -> (@owned Color);
  a7[3] = (uint64_t (*)())v15;
  a7[4] = thunk for @escaping @callee_guaranteed (@unowned Bool) -> (@owned Color)partial apply;
  a7[5] = (uint64_t (*)())v16;
  a7[6] = (uint64_t (*)())closure #1 in static SystemSymbol.catalystCallControl(name:color:backgroundColor:);
  a7[7] = 0;
  a7[8] = (uint64_t (*)())partial apply for closure #2 in static SystemSymbol.catalystCallControl(name:color:backgroundColor:);
  a7[9] = 0;
  a7[10] = (uint64_t (*)())partial apply for closure #3 in static SystemSymbol.catalystCallControl(name:color:backgroundColor:);
  a7[11] = 0;
  swift_bridgeObjectRetain();
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  return swift_retain();
}

uint64_t closure #1 in static SystemSymbol<A>.catalystCallControl(name:color:backgroundColor:)(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRetain();
  return a2;
}

uint64_t sub_1BD1FF98C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in static SystemSymbol<A>.catalystCallControl(name:color:backgroundColor:)()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BD1FF9DC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@unowned Bool) -> (@owned Color)(unsigned __int8 *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 16))(*a1);
}

void ConversationHUDControlsView.recipe.didset()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v1 = v0;
  v2 = type metadata accessor for ConversationControlsRecipe();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD **)(v0 + OBJC_IVAR____TtC15ConversationKit27ConversationHUDControlsView_statusView);
  v6 = v1 + OBJC_IVAR____TtC15ConversationKit27ConversationHUDControlsView_recipe;
  swift_beginAccess();
  outlined init with copy of ConversationControlsRecipe(v6, (uint64_t)v4);
  (*(void (**)(char *))((*MEMORY[0x1E0DEEDD8] & *v5) + 0xA0))(v4);
  specialized FaceTimeControlsView.handleUpdateDuringEphemeralAlert()();
}

void ConversationHUDControlsView.recipe.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15ConversationKit27ConversationHUDControlsView_recipe;
  OUTLINED_FUNCTION_2_0();
  outlined init with copy of ConversationControlsRecipe(v3, a1);
  OUTLINED_FUNCTION_32();
}

uint64_t ConversationHUDControlsView.recipe.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15ConversationKit27ConversationHUDControlsView_recipe;
  OUTLINED_FUNCTION_2_0();
  outlined assign with copy of ConversationControlsRecipe(a1, v3);
  swift_endAccess();
  ConversationHUDControlsView.recipe.didset();
  return outlined destroy of ConversationControlsRecipe(a1);
}

void ConversationHUDControlsView.recipe.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_7_6();
  OUTLINED_FUNCTION_0();
}

uint64_t ConversationHUDControlsView.recipe.modify(uint64_t a1, char a2)
{
  return SystemApertureOngoingTelephonyControlsView.cnkContentAlpha.modify(a1, a2, (uint64_t (*)(uint64_t))ConversationHUDControlsView.recipe.didset);
}

id ConversationHUDControlsView.controlsManager.getter()
{
  return OUTLINED_FUNCTION_7(OBJC_IVAR____TtC15ConversationKit27ConversationHUDControlsView_controlsManager);
}

uint64_t ConversationHUDControlsView.context.getter()
{
  unsigned __int8 *v0;

  OUTLINED_FUNCTION_1_7();
  return *v0;
}

void ConversationHUDControlsView.context.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit27ConversationHUDControlsView_context);
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  OUTLINED_FUNCTION_32();
}

void ConversationHUDControlsView.context.modify()
{
  OUTLINED_FUNCTION_7_6();
  OUTLINED_FUNCTION_0();
}

uint64_t key path setter for ConversationHUDControlsView.ephemeralAlertTimer : ConversationHUDControlsView(id *a1, _QWORD **a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & **a2) + 0xD0);
  v4 = *a1;
  return v3(v2);
}

void ConversationHUDControlsView.ephemeralAlertTimer.getter()
{
  id *v0;
  id v1;

  OUTLINED_FUNCTION_1_7();
  v1 = *v0;
  OUTLINED_FUNCTION_32();
}

void ConversationHUDControlsView.ephemeralAlertTimer.setter(void *a1)
{
  ConversationHUDControlsView.ephemeralAlertTimer.setter(a1, &OBJC_IVAR____TtC15ConversationKit27ConversationHUDControlsView_ephemeralAlertTimer);
}

void ConversationHUDControlsView.ephemeralAlertTimer.modify()
{
  OUTLINED_FUNCTION_7_6();
  OUTLINED_FUNCTION_0();
}

uint64_t key path setter for ConversationHUDControlsView.ephemeralAlert : ConversationHUDControlsView(uint64_t a1, _QWORD **a2)
{
  id v2;
  void *v3;
  uint64_t (*v4)(id, void *, uint64_t);
  uint64_t v5;

  v2 = *(id *)a1;
  v3 = *(void **)(a1 + 8);
  v4 = *(uint64_t (**)(id, void *, uint64_t))((*MEMORY[0x1E0DEEDD8] & **a2) + 0xE8);
  v5 = *(unsigned __int8 *)(a1 + 16);
  outlined copy of ConversationControlsRecipe.View?(*(id *)a1, v3);
  return v4(v2, v3, v5);
}

void ConversationHUDControlsView.ephemeralAlert.didset()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit27ConversationHUDControlsView_ephemeralAlert);
  swift_beginAccess();
  if (*v1)
    specialized FaceTimeControlsView.displayEphemeralAlert()();
  else
    specialized FaceTimeControlsView.cleanUpEphemeralAlert()();
}

void *ConversationHUDControlsView.ephemeralAlert.getter()
{
  void **v0;
  void *v1;

  OUTLINED_FUNCTION_1_7();
  v1 = *v0;
  OUTLINED_FUNCTION_42_3(*v0);
  return v1;
}

void ConversationHUDControlsView.ephemeralAlert.setter(void *a1, void *a2, char a3)
{
  uint64_t v3;
  uint64_t v7;
  void *v8;
  void *v9;

  v7 = v3 + OBJC_IVAR____TtC15ConversationKit27ConversationHUDControlsView_ephemeralAlert;
  OUTLINED_FUNCTION_2_0();
  v8 = *(void **)v7;
  v9 = *(void **)(v7 + 8);
  *(_QWORD *)v7 = a1;
  *(_QWORD *)(v7 + 8) = a2;
  *(_BYTE *)(v7 + 16) = a3;
  OUTLINED_FUNCTION_42_3(a1);
  outlined consume of ConversationControlsRecipe.View?(v8, v9);
  ConversationHUDControlsView.ephemeralAlert.didset();
  outlined consume of ConversationControlsRecipe.View?(a1, a2);
}

void ConversationHUDControlsView.ephemeralAlert.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_7_6();
  OUTLINED_FUNCTION_0();
}

uint64_t ConversationHUDControlsView.ephemeralAlert.modify(uint64_t a1, char a2)
{
  return SystemApertureOngoingTelephonyControlsView.cnkContentAlpha.modify(a1, a2, (uint64_t (*)(uint64_t))ConversationHUDControlsView.ephemeralAlert.didset);
}

void ConversationHUDControlsView.cnkContentAlpha.didset()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  double *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  double *v10;
  void *v11;
  double *v12;

  v1 = v0;
  v2 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v3 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x118))();
  if (v3)
  {
    v4 = (_QWORD *)v3;
    v5 = (double *)((char *)v1 + OBJC_IVAR____TtC15ConversationKit27ConversationHUDControlsView_cnkContentAlpha);
    v6 = swift_beginAccess();
    (*(void (**)(uint64_t, double))((*v2 & *v4) + 0x68))(v6, *v5);

  }
  v7 = (void *)(*(uint64_t (**)(void))((*v2 & *v1) + 0xE0))();
  outlined consume of ConversationControlsRecipe.View?(v7, v8);
  if (v7)
  {
    v9 = (void *)(*(uint64_t (**)(void))((*v2 & *v1) + 0x130))();
    v10 = (double *)((char *)v1 + OBJC_IVAR____TtC15ConversationKit27ConversationHUDControlsView_cnkContentAlpha);
    swift_beginAccess();
    objc_msgSend(v9, sel_setAlpha_, *v10);

  }
  else
  {
    v11 = *(void **)((char *)v1 + OBJC_IVAR____TtC15ConversationKit27ConversationHUDControlsView_statusView);
    v12 = (double *)((char *)v1 + OBJC_IVAR____TtC15ConversationKit27ConversationHUDControlsView_cnkContentAlpha);
    swift_beginAccess();
    objc_msgSend(v11, sel_setAlpha_, *v12);
  }
}

double ConversationHUDControlsView.cnkContentAlpha.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_1_7();
  return *(double *)v0;
}

void ConversationHUDControlsView.cnkContentAlpha.setter(double a1)
{
  uint64_t v1;
  double *v3;

  v3 = (double *)(v1 + OBJC_IVAR____TtC15ConversationKit27ConversationHUDControlsView_cnkContentAlpha);
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  ConversationHUDControlsView.cnkContentAlpha.didset();
}

void ConversationHUDControlsView.cnkContentAlpha.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_7_6();
  OUTLINED_FUNCTION_0();
}

uint64_t ConversationHUDControlsView.cnkContentAlpha.modify(uint64_t a1, char a2)
{
  return SystemApertureOngoingTelephonyControlsView.cnkContentAlpha.modify(a1, a2, (uint64_t (*)(uint64_t))ConversationHUDControlsView.cnkContentAlpha.didset);
}

uint64_t ConversationHUDControlsView.showCallDetailsButton.getter()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  v1 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v2 = (_QWORD *)(*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **(_QWORD **)(v0
                                                                            + OBJC_IVAR____TtC15ConversationKit27ConversationHUDControlsView_statusView))
                                      + 0xE0))();
  v3 = (*(uint64_t (**)(void))((*v1 & *v2) + 0xB8))();

  return v3;
}

id ConversationHUDControlsView.statusView.getter()
{
  return OUTLINED_FUNCTION_7(OBJC_IVAR____TtC15ConversationKit27ConversationHUDControlsView_statusView);
}

void key path setter for ConversationHUDControlsView.buttonShelfView : ConversationHUDControlsView(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  ConversationHUDControlsView.buttonShelfView.setter(v1);
}

void ConversationHUDControlsView.buttonShelfView.getter()
{
  id *v0;
  id v1;

  OUTLINED_FUNCTION_1_7();
  v1 = *v0;
  OUTLINED_FUNCTION_32();
}

void ConversationHUDControlsView.buttonShelfView.setter(void *a1)
{
  ConversationHUDControlsView.ephemeralAlertTimer.setter(a1, &OBJC_IVAR____TtC15ConversationKit27ConversationHUDControlsView_buttonShelfView);
}

void ConversationHUDControlsView.ephemeralAlertTimer.setter(void *a1, _QWORD *a2)
{
  uint64_t v2;
  void **v4;
  void *v5;

  v4 = (void **)(v2 + *a2);
  OUTLINED_FUNCTION_2_0();
  v5 = *v4;
  *v4 = a1;

  OUTLINED_FUNCTION_32();
}

uint64_t ConversationHUDControlsView.ephemeralAlertNotice.getter()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;

  v1 = *(void **)(v0
                + OBJC_IVAR____TtC15ConversationKit27ConversationHUDControlsView____lazy_storage___ephemeralAlertNotice);
  if (!v1)
  {
    v3 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit27ConversationHUDControlsView_controlsManager);
    v4 = objc_allocWithZone((Class)type metadata accessor for ConversationHUDEphemeralNotice());
    ConversationHUDEphemeralNotice.init(controlsManager:)(v3);
  }
  v2 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtC15ConversationKit27ConversationHUDControlsView____lazy_storage___ephemeralAlertNotice);
  v5 = v1;
  return v2;
}

void ConversationHUDControlsView.ephemeralAlertNotice.setter(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1
                + OBJC_IVAR____TtC15ConversationKit27ConversationHUDControlsView____lazy_storage___ephemeralAlertNotice);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit27ConversationHUDControlsView____lazy_storage___ephemeralAlertNotice) = a1;

}

void ConversationHUDControlsView.ephemeralAlertNotice.modify(uint64_t *a1)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = ConversationHUDControlsView.ephemeralAlertNotice.getter();
  OUTLINED_FUNCTION_0();
}

void ConversationHUDControlsView.ephemeralAlertNotice.modify(void **a1, char a2)
{
  void *v2;
  id v3;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    v3 = v2;
    ConversationHUDControlsView.ephemeralAlertNotice.setter((uint64_t)v3);

  }
  else
  {
    ConversationHUDControlsView.ephemeralAlertNotice.setter((uint64_t)v2);
    OUTLINED_FUNCTION_36();
  }
}

void ConversationHUDControlsView.__allocating_init(recipe:controlsManager:context:menuHostViewController:)(uint64_t a1, void *a2, char a3, void *a4, uint64_t a5)
{
  objc_class *v5;
  id v11;

  v11 = objc_allocWithZone(v5);
  ConversationHUDControlsView.init(recipe:controlsManager:context:menuHostViewController:)(a1, a2, a3, a4, a5);
}

void ConversationHUDControlsView.init(recipe:controlsManager:context:menuHostViewController:)(uint64_t a1, void *a2, char a3, void *a4, uint64_t a5)
{
  _BYTE *v5;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  id v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  id v26;
  void **v27;
  objc_class *v28;
  id v29;
  uint64_t v30;
  void **v31;
  void *v32;
  uint64_t v33;
  id v34;
  objc_super v35;

  v11 = type metadata accessor for ConversationControlsRecipe();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v5[OBJC_IVAR____TtC15ConversationKit27ConversationHUDControlsView_ephemeralAlertTimer] = 0;
  v14 = &v5[OBJC_IVAR____TtC15ConversationKit27ConversationHUDControlsView_ephemeralAlert];
  *(_QWORD *)v14 = 0;
  *((_QWORD *)v14 + 1) = 0;
  v14[16] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC15ConversationKit27ConversationHUDControlsView_cnkContentAlpha] = 0x3FF0000000000000;
  v31 = (void **)&v5[OBJC_IVAR____TtC15ConversationKit27ConversationHUDControlsView_buttonShelfView];
  *v31 = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC15ConversationKit27ConversationHUDControlsView____lazy_storage___ephemeralAlertNotice] = 0;
  outlined init with copy of ConversationControlsRecipe(a1, (uint64_t)&v5[OBJC_IVAR____TtC15ConversationKit27ConversationHUDControlsView_recipe]);
  *(_QWORD *)&v5[OBJC_IVAR____TtC15ConversationKit27ConversationHUDControlsView_controlsManager] = a2;
  v5[OBJC_IVAR____TtC15ConversationKit27ConversationHUDControlsView_context] = a3;
  OUTLINED_FUNCTION_43_30();
  objc_allocWithZone((Class)type metadata accessor for ConversationHUDControlsStatusView());
  v34 = a4;
  v15 = a2;
  v16 = v5;
  v32 = a4;
  v33 = a5;
  *(_QWORD *)&v16[OBJC_IVAR____TtC15ConversationKit27ConversationHUDControlsView_statusView] = ConversationHUDControlsStatusView.init(recipe:controlsManager:menuHostViewController:context:presentationStyle:)((uint64_t)v13, v15, a4, a5, a3, 0);
  v17 = a1 + *(int *)(v11 + 60);
  v18 = *(char *)(v17 + 40);
  if ((int)v18 <= -3)
  {
    v19 = *(_QWORD *)v17;
    outlined copy of ConversationControlsRecipe.Actions(*(_QWORD *)v17, *(_QWORD *)(v17 + 8), *(_QWORD *)(v17 + 16), *(_QWORD *)(v17 + 24), *(_QWORD *)(v17 + 32), v18);
  }
  else
  {
    v19 = MEMORY[0x1E0DEE9D8];
  }
  v20 = *(_QWORD *)(v19 + 16);
  OUTLINED_FUNCTION_27();
  v21 = v16;
  v22 = v34;
  if (v20)
  {
    OUTLINED_FUNCTION_43_30();
    v23 = objc_allocWithZone((Class)type metadata accessor for ConversationHUDControlsButtonShelfView());
    v24 = v15;
    v25 = v22;
    v26 = ConversationHUDControlsButtonShelfView.init(recipe:controlsManager:context:menuHostViewController:)((uint64_t)v13, v24, a3, v32);
    v27 = v31;
    OUTLINED_FUNCTION_2_0();
    v21 = *v27;
    *v27 = v26;

  }
  v28 = (objc_class *)ObjC metadata update function for ConversationHUDControlsView();
  v35.receiver = v16;
  v35.super_class = v28;
  v29 = objc_msgSendSuper2(&v35, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  ConversationHUDControlsView.setupRootView()();
}

void *sub_1BD2005D4()
{
  void *v0;
  uint64_t v1;
  void *v2;
  void *v3;

  outlined destroy of ConversationControlsRecipe(v1);
  return v0;
}

void ConversationHUDControlsView.setupRootView()()
{
  _QWORD *v0;
  id v1;
  void *v2;
  _QWORD *v3;
  void (*v4)(void);
  void *v5;
  uint64_t v6;
  void *v7;

  v1 = objc_msgSend(v0, sel_layer);
  objc_msgSend(v1, sel_setAllowsGroupOpacity_, 0);

  v2 = *(void **)((char *)v0 + OBJC_IVAR____TtC15ConversationKit27ConversationHUDControlsView_statusView);
  v3 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v4 = *(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8);
  v4();
  objc_msgSend(v2, sel_setAlpha_);
  v5 = (void *)(*(uint64_t (**)(id))((*v3 & *v0) + 0x130))(objc_msgSend(v0, sel_addSubview_, v2));
  objc_msgSend(v0, sel_insertSubview_below_, v5, v2);

  specialized FaceTimeControlsView.handleUpdateDuringEphemeralAlert()();
  v6 = (*(uint64_t (**)(void))((*v3 & *v0) + 0x118))();
  if (v6)
  {
    v7 = (void *)v6;
    v4();
    objc_msgSend(v7, sel_setAlpha_);
    objc_msgSend(v0, sel_addSubview_, v7);

  }
  ConversationHUDControlsView.setupLayoutConstraints()();
}

id ConversationHUDControlsView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void ConversationHUDControlsView.init(coder:)()
{
  char *v0;
  char *v1;

  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit27ConversationHUDControlsView_ephemeralAlertTimer] = 0;
  v1 = &v0[OBJC_IVAR____TtC15ConversationKit27ConversationHUDControlsView_ephemeralAlert];
  *(_QWORD *)v1 = 0;
  *((_QWORD *)v1 + 1) = 0;
  v1[16] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit27ConversationHUDControlsView_cnkContentAlpha] = 0x3FF0000000000000;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit27ConversationHUDControlsView_buttonShelfView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit27ConversationHUDControlsView____lazy_storage___ephemeralAlertNotice] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

Swift::Void __swiftcall ConversationHUDControlsView.layoutSubviews()()
{
  char *v0;
  id v1;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)ObjC metadata update function for ConversationHUDControlsView();
  v1 = objc_msgSendSuper2(&v2, sel_layoutSubviews);
  (*(void (**)(id))((*MEMORY[0x1E0DEEDD8] & **(_QWORD **)&v0[OBJC_IVAR____TtC15ConversationKit27ConversationHUDControlsView_controlsManager])
                             + 0x988))(v1);
  OUTLINED_FUNCTION_36();
}

id ConversationHUDControlsView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

void ConversationHUDControlsView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id ConversationHUDControlsView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)ObjC metadata update function for ConversationHUDControlsView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t protocol witness for FaceTimeControlsView.ephemeralAlert.getter in conformance ConversationHUDControlsView()
{
  uint64_t *v0;

  return OUTLINED_FUNCTION_20_49(*v0);
}

uint64_t protocol witness for FaceTimeControlsView.ephemeralAlert.setter in conformance ConversationHUDControlsView()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE8))();
}

uint64_t protocol witness for FaceTimeControlsView.ephemeralAlertNotice.getter in conformance ConversationHUDControlsView()
{
  uint64_t *v0;

  return OUTLINED_FUNCTION_19_46(*v0);
}

uint64_t protocol witness for FaceTimeControlsView.ephemeralAlertTimer.getter in conformance ConversationHUDControlsView()
{
  uint64_t *v0;

  return OUTLINED_FUNCTION_21_44(*v0);
}

uint64_t protocol witness for FaceTimeControlsView.ephemeralAlertTimer.setter in conformance ConversationHUDControlsView()
{
  return OUTLINED_FUNCTION_16_50(*MEMORY[0x1E0DEEDD8]);
}

uint64_t protocol witness for FaceTimeControlsView.showCallDetailsButton.getter in conformance ConversationHUDControlsView()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x110))();
}

uint64_t protocol witness for FaceTimeControlsView.buttonShelfView.getter in conformance ConversationHUDControlsView()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x118))();
}

uint64_t protocol witness for ControlsView.context.getter in conformance ConversationHUDControlsView()
{
  uint64_t *v0;

  return OUTLINED_FUNCTION_22_45(*v0);
}

uint64_t protocol witness for ControlsView.cnkContentAlpha.getter in conformance ConversationHUDControlsView()
{
  uint64_t *v0;

  return OUTLINED_FUNCTION_18_51(*v0);
}

uint64_t protocol witness for ControlsView.cnkContentAlpha.setter in conformance ConversationHUDControlsView()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x100))();
}

uint64_t (*protocol witness for ControlsView.cnkContentAlpha.modify in conformance ConversationHUDControlsView(_QWORD *a1))()
{
  _QWORD *v1;
  _QWORD *v3;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x108))();
  return protocol witness for ControlsView.cnkContentAlpha.modify in conformance SystemApertureOngoingTelephonyControlsView;
}

uint64_t protocol witness for ControlsView.recipe.getter in conformance ConversationHUDControlsView()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t protocol witness for ControlsView.recipe.setter in conformance ConversationHUDControlsView()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t (*protocol witness for ControlsView.recipe.modify in conformance ConversationHUDControlsView(_QWORD *a1))()
{
  _QWORD *v1;
  _QWORD *v3;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v1) + 0xA8))();
  return protocol witness for ControlsView.cnkContentAlpha.modify in conformance SystemApertureOngoingTelephonyControlsView;
}

Swift::Void __swiftcall ConversationHUDControlsView.setupLayoutConstraints()()
{
  _QWORD *v0;
  unsigned __int8 (*v1)(void);
  __n128 v2;
  double *v3;
  double v4;
  double *v5;
  double v6;
  id v7;
  id v8;
  void *v9;
  SEL v10;
  id v11;
  uint64_t v12;
  id v13;
  id v14;
  void *v15;
  SEL v16;
  id v17;
  uint64_t v18;
  id v19;
  id v20;
  void *v21;
  SEL v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  SEL v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  char **v32;
  _BYTE v33[104];
  uint64_t v34;
  uint64_t v35;
  _BYTE v36[104];
  uint64_t v37;
  uint64_t v38;

  v1 = *(unsigned __int8 (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0);
  if (v1() == 2)
  {
    v2.n128_f64[0] = static Layout.ConversationControls.values.getter((uint64_t)v33);
    v3 = (double *)&v35;
  }
  else
  {
    v2.n128_f64[0] = static Layout.ConversationControls.values.getter((uint64_t)v33);
    v3 = (double *)&v34;
  }
  v4 = *v3;
  if (((unsigned __int8 (*)(__n128))v1)(v2) == 2)
  {
    static Layout.ConversationControls.values.getter((uint64_t)v36);
    v5 = (double *)&v38;
  }
  else
  {
    static Layout.ConversationControls.values.getter((uint64_t)v36);
    v5 = (double *)&v37;
  }
  v6 = *v5;
  v7 = OUTLINED_FUNCTION_123((uint64_t)objc_msgSend(v0, sel_addLayoutGuide_, objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC39A0]), sel_init)), sel_topAnchor);
  v8 = OUTLINED_FUNCTION_9((uint64_t)v7, sel_topAnchor);
  v9 = (void *)OUTLINED_FUNCTION_49_25();
  v11 = objc_msgSend(v9, v10, v8, v4);
  OUTLINED_FUNCTION_4_39();

  v13 = OUTLINED_FUNCTION_123(v12, sel_bottomAnchor);
  v14 = OUTLINED_FUNCTION_9((uint64_t)v13, sel_bottomAnchor);
  v15 = (void *)OUTLINED_FUNCTION_49_25();
  v17 = objc_msgSend(v15, v16, v14);
  OUTLINED_FUNCTION_18_14();

  v19 = OUTLINED_FUNCTION_123(v18, sel_leadingAnchor);
  v20 = OUTLINED_FUNCTION_9((uint64_t)v19, sel_leadingAnchor);
  v21 = (void *)OUTLINED_FUNCTION_49_25();
  v23 = objc_msgSend(v21, v22, v20, v6);
  OUTLINED_FUNCTION_10_20();

  v25 = (uint64_t)OUTLINED_FUNCTION_123(v24, sel_trailingAnchor);
  v26 = OUTLINED_FUNCTION_9(v25, sel_trailingAnchor);
  v27 = (void *)OUTLINED_FUNCTION_49_25();
  v29 = objc_msgSend(v27, v28, v26);
  OUTLINED_FUNCTION_16_25();

  OUTLINED_FUNCTION_40_27();
  if (v30)
  {
    swift_bridgeObjectRetain();
    v31 = _CocoaArrayWrapper.endIndex.getter();
    OUTLINED_FUNCTION_27();
  }
  else
  {
    v31 = *(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (!__OFADD__(v31, 4))
  {
    OUTLINED_FUNCTION_28_5(v31 + 4);
    OUTLINED_FUNCTION_3_12();
    v32 = &selRef_associatedAppBundleIdentifier;
    OUTLINED_FUNCTION_5_33();
  }
  __break(1u);
  JUMPOUT(0x1BD2016F8);
}

uint64_t type metadata accessor for ConversationHUDControlsView()
{
  uint64_t result;

  result = type metadata singleton initialization cache for ConversationHUDControlsView;
  if (!type metadata singleton initialization cache for ConversationHUDControlsView)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BD20186C(_QWORD **a1)
{
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x98))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD2018A4()
{
  _BYTE *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0xB0))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD2018D8(unsigned __int8 *a1, _QWORD **a2)
{
  (*(void (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & **a2) + 0xB8))(*a1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD201910()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0xC8))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD201948()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;

  OUTLINED_FUNCTION_1_0();
  *(_QWORD *)v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0xE0))();
  *(_QWORD *)(v0 + 8) = v2;
  *(_BYTE *)(v0 + 16) = v3;
  OUTLINED_FUNCTION_0();
}

void sub_1BD201984()
{
  double *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(double (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0xF8))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD2019B8(double *a1, _QWORD **a2)
{
  (*(void (**)(double))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x100))(*a1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD2019F0()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x118))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD201A28()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x130))();
  OUTLINED_FUNCTION_0();
}

uint64_t type metadata completion function for ConversationHUDControlsView()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ConversationControlsRecipe();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for ConversationHUDControlsView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ConversationHUDControlsView.recipe.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of ConversationHUDControlsView.recipe.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of ConversationHUDControlsView.recipe.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of ConversationHUDControlsView.context.getter()
{
  uint64_t *v0;

  return OUTLINED_FUNCTION_22_45(*v0);
}

uint64_t dispatch thunk of ConversationHUDControlsView.context.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of ConversationHUDControlsView.context.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of ConversationHUDControlsView.ephemeralAlertTimer.getter()
{
  uint64_t *v0;

  return OUTLINED_FUNCTION_21_44(*v0);
}

uint64_t dispatch thunk of ConversationHUDControlsView.ephemeralAlertTimer.setter()
{
  return OUTLINED_FUNCTION_16_50(*MEMORY[0x1E0DEEDD8]);
}

uint64_t dispatch thunk of ConversationHUDControlsView.ephemeralAlertTimer.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of ConversationHUDControlsView.ephemeralAlert.getter()
{
  uint64_t *v0;

  return OUTLINED_FUNCTION_20_49(*v0);
}

uint64_t dispatch thunk of ConversationHUDControlsView.ephemeralAlert.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of ConversationHUDControlsView.ephemeralAlert.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of ConversationHUDControlsView.cnkContentAlpha.getter()
{
  uint64_t *v0;

  return OUTLINED_FUNCTION_18_51(*v0);
}

uint64_t dispatch thunk of ConversationHUDControlsView.cnkContentAlpha.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of ConversationHUDControlsView.cnkContentAlpha.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x108))();
}

uint64_t dispatch thunk of ConversationHUDControlsView.showCallDetailsButton.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x110))();
}

uint64_t dispatch thunk of ConversationHUDControlsView.buttonShelfView.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x118))();
}

uint64_t dispatch thunk of ConversationHUDControlsView.ephemeralAlertNotice.getter()
{
  uint64_t *v0;

  return OUTLINED_FUNCTION_19_46(*v0);
}

uint64_t dispatch thunk of ConversationHUDControlsView.ephemeralAlertNotice.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x138))();
}

uint64_t dispatch thunk of ConversationHUDControlsView.ephemeralAlertNotice.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x140))();
}

uint64_t dispatch thunk of ConversationHUDControlsView.__allocating_init(recipe:controlsManager:context:menuHostViewController:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 328))();
}

void ConversationControlsMicMenuButtonProvider.__allocating_init(controlsManager:context:shape:menuHostViewController:)()
{
  OUTLINED_FUNCTION_7_26();
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_8_67();
  ConversationControlsMicMenuButtonProvider.init(controlsManager:context:shape:menuHostViewController:)();
}

id ConversationControlsMicMenuButtonProvider.routeController.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 160);
}

uint64_t ConversationControlsMicMenuButtonProvider.routeCallbackCancellable.getter()
{
  OUTLINED_FUNCTION_2_0();
  return swift_retain();
}

uint64_t ConversationControlsMicMenuButtonProvider.routeCallbackCancellable.setter(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v1 + 168) = a1;
  return swift_release();
}

uint64_t (*ConversationControlsMicMenuButtonProvider.routeCallbackCancellable.modify())()
{
  OUTLINED_FUNCTION_2_0();
  return CallRecordingPillViewController.cancellable.modify;
}

void ConversationControlsMicMenuButtonProvider.init(controlsManager:context:shape:menuHostViewController:)()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;

  OUTLINED_FUNCTION_7_26();
  v1 = (void *)objc_opt_self();
  swift_retain();
  v2 = objc_msgSend(v1, sel_sharedInstance);
  v3 = objc_msgSend(v2, sel_routeController);

  *(_QWORD *)(v0 + 160) = v3;
  *(_QWORD *)(v0 + 168) = 0;
  swift_release();
  OUTLINED_FUNCTION_8_67();
  ConversationControlsMenuButtonProvider.init(controlsManager:context:shape:menuHostViewController:)();
}

uint64_t ConversationControlsMicMenuButtonProvider.buttonConfiguration.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIConfigurationColorTransformer?);
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_77();
  v3 = v2 - v1;
  ConversationControlsMenuButtonProvider.buttonConfiguration.getter();
  OUTLINED_FUNCTION_7_0();
  swift_weakInit();
  UIConfigurationColorTransformer.init(_:)();
  v4 = type metadata accessor for UIConfigurationColorTransformer();
  __swift_storeEnumTagSinglePayload(v3, 0, 1, v4);
  return UIButton.Configuration.imageColorTransformer.setter();
}

uint64_t sub_1BD201F60()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

id closure #1 in ConversationControlsMicMenuButtonProvider.buttonConfiguration.getter(void *a1)
{
  uint64_t Strong;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v7;
  id v8;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (!Strong)
    return a1;
  v2 = Strong + 16;
  swift_beginAccess();
  v3 = MEMORY[0x1C3B752C0](v2);
  if (!v3)
  {
    swift_release();
    return a1;
  }
  v4 = (void *)v3;
  if (static Platform.current.getter() == 2)
    v5 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
  else
    v5 = a1;
  v7 = v5;
  if (objc_msgSend(v4, sel_isSelected))
  {
    v8 = objc_msgSend((id)objc_opt_self(), sel_systemRedColor);

    swift_release();
    return v8;
  }
  else
  {

    swift_release();
    return v7;
  }
}

id partial apply for closure #1 in ConversationControlsMicMenuButtonProvider.buttonConfiguration.getter(void *a1)
{
  return closure #1 in ConversationControlsMicMenuButtonProvider.buttonConfiguration.getter(a1);
}

Swift::Void __swiftcall ConversationControlsMicMenuButtonProvider.buttonChanged()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  objc_class *v14;
  NSBundle v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<TURoute?>.Publisher);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_77();
  v6 = v5 - v4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_77();
  v11 = v10 - v9;
  ControlsButtonProvider.buttonChanged()();
  OUTLINED_FUNCTION_2_0();
  v12 = (void *)MEMORY[0x1C3B752C0](v0 + 16);
  if (v12)
  {
    v13 = v12;
    v28 = v3;
    v29 = v2;
    outlined bridged method (mbnn) of @objc NSObject.accessibilityIdentifier.setter(0xD000000000000013, 0x80000001BD672490, v12);
    objc_msgSend(v13, sel_addTarget_action_forControlEvents_, v0, sel_toggleMicButtonTapped, 0x2000);
    type metadata accessor for ConversationControlsButton();
    if (swift_dynamicCastClass())
    {
      objc_opt_self();
      v27 = v13;
      v14 = (objc_class *)OUTLINED_FUNCTION_20_4((uint64_t)v27, sel_conversationKit);
      OUTLINED_FUNCTION_7_14();
      v15.super.isa = v14;
      v20 = OUTLINED_FUNCTION_49_2(v16, v17, v18, v19, v15);
      v22 = v21;

      ConversationControlsButton.localizedName.setter(v20, v22);
    }
    v23 = *(_QWORD **)(v0 + 136);
    (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v23) + 0x5F8))();
    OUTLINED_FUNCTION_7_0();
    OUTLINED_FUNCTION_10_72();
    _s7Combine9PublishedV9PublisherVySb_GAEyx_GAadAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type Published<Bool>.Publisher and conformance Published<A>.Publisher, &demangling cache variable for type metadata for Published<Bool>.Publisher);
    v24 = Publisher<>.sink(receiveValue:)();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v11, v7);
    OUTLINED_FUNCTION_2_0();
    *(_QWORD *)(v1 + 48) = v24;
    v25 = swift_release();
    (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v23) + 0x598))(v25);
    OUTLINED_FUNCTION_7_0();
    OUTLINED_FUNCTION_10_72();
    _s7Combine9PublishedV9PublisherVySb_GAEyx_GAadAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type Published<TURoute?>.Publisher and conformance Published<A>.Publisher, (uint64_t *)&demangling cache variable for type metadata for Published<TURoute?>.Publisher);
    v26 = Publisher<>.sink(receiveValue:)();

    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v6, v29);
    OUTLINED_FUNCTION_2_0();
    *(_QWORD *)(v1 + 168) = v26;
    swift_release();
  }
}

void closure #1 in ConversationControlsMicMenuButtonProvider.buttonChanged()(unsigned __int8 *a1)
{
  int v1;
  uint64_t Strong;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;

  v1 = *a1;
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v3 = Strong + 16;
    swift_beginAccess();
    v4 = (void *)MEMORY[0x1C3B752C0](v3);
    if (v4)
    {
      v5 = v4;
      objc_msgSend(v4, sel_setSelected_, v1 ^ 1u);
      v6 = v5;
      objc_msgSend(v6, sel_setShowsMenuAsPrimaryAction_, (unint64_t)ConversationControlsMicMenuButtonProvider.shouldEnableMenu(localAudioEnabled:audioRoute:)(v1, 0) & 1);
      swift_release();

    }
    else
    {
      swift_release();
    }
  }
}

id ConversationControlsMicMenuButtonProvider.shouldEnableMenu(localAudioEnabled:audioRoute:)(char a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v6;
  id result;
  id v8;
  _QWORD *v9;
  _QWORD *v10;
  void *v11;
  uint64_t v12;
  char v13;
  char v14;

  v3 = v2;
  if (a2)
  {
    v6 = a2;
  }
  else
  {
    result = objc_msgSend(*(id *)(v3 + 160), sel_pickedRoute);
    if (!result)
      return result;
    v6 = result;
  }
  v8 = a2;
  if ((!objc_msgSend(v6, sel_isBluetooth)
     || (objc_msgSend(v6, sel_isPartnerRouteRoutable) & 1) == 0)
    && (!objc_msgSend(v6, sel_isBluetoothLE)
     || (objc_msgSend(v6, sel_isSiblingRoutePresent) & 1) == 0))
  {
    goto LABEL_19;
  }
  v9 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  if (a1 == 2)
  {
    if (((*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **(_QWORD **)(v3 + 136)) + 0x5E0))() & 1) == 0)
      goto LABEL_11;
LABEL_19:

    return 0;
  }
  if ((a1 & 1) != 0)
    goto LABEL_19;
LABEL_11:
  v10 = *(_QWORD **)(v3 + 136);
  v11 = (void *)(*(uint64_t (**)(void))((*v9 & *v10) + 0x8D0))();

  v12 = (*(uint64_t (**)(void))((*v9 & *v10) + 0x5B0))();
  v14 = v13;

  if ((v14 & 1) != 0)
    return (id)(v11 != 0);
  return (id)(v11 || v12 == 1);
}

void closure #2 in ConversationControlsMicMenuButtonProvider.buttonChanged()(void **a1)
{
  void *v1;
  uint64_t Strong;
  uint64_t v3;
  void *v4;
  id v5;

  v1 = *a1;
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v3 = Strong + 16;
    swift_beginAccess();
    v4 = (void *)MEMORY[0x1C3B752C0](v3);
    if (v4)
    {
      v5 = v4;
      objc_msgSend(v5, sel_setShowsMenuAsPrimaryAction_, (unint64_t)ConversationControlsMicMenuButtonProvider.shouldEnableMenu(localAudioEnabled:audioRoute:)(2, v1) & 1);
      swift_release();

    }
    else
    {
      swift_release();
    }
  }
}

Swift::Bool __swiftcall ConversationControlsMicMenuButtonProvider.shouldEnableMenu()()
{
  return ConversationControlsMicMenuButtonProvider.shouldEnableMenu(localAudioEnabled:audioRoute:)(2, 0);
}

Swift::Void __swiftcall ConversationControlsMicMenuButtonProvider.toggleMicButtonTapped()()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_2_0();
  v1 = MEMORY[0x1C3B752C0](v0 + 16);
  if (v1)
  {
    objc_msgSend(*(id *)(v0 + 136), sel_toggleMicButtonTappedWithButton_, v1);
    ConversationControlsMicMenuButtonProvider.localAudioEphemeralAlert(bluetoothAudioFormat:)();
  }
}

void ConversationControlsMicMenuButtonProvider.localAudioEphemeralAlert(bluetoothAudioFormat:)()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;
  Swift::String v6;
  Swift::String_optional v7;
  Swift::String v8;
  _QWORD v9[4];
  __int16 v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  Swift::String v14;

  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
  v0 = (void *)*MEMORY[0x1E0DC4AD0];
  v9[0] = 0x6C6C69662E63696DLL;
  v9[1] = 0xE800000000000000;
  v9[2] = 1;
  v9[3] = v0;
  v10 = 0;
  v11 = 4;
  v12 = 0;
  v13 = 0;
  v1 = v0;
  v2 = static UIImage.symbolImage(for:)((uint64_t)v9);

  swift_bridgeObjectRelease();
  if (v2)
  {
    v3 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
    v4 = objc_msgSend(v2, sel_imageWithTintColor_, v3);

  }
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSAttributedString);
  v5 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v14._object = (void *)0xE000000000000000;
  v6._countAndFlagsBits = 0x6F68706F7263694DLL;
  v6._object = (void *)0xEA0000000000656ELL;
  v7.value._countAndFlagsBits = 0x61737265766E6F43;
  v7.value._object = (void *)0xEF74694B6E6F6974;
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  v14._countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v6, v7, (NSBundle)v5, v8, v14);

  static NSAttributedString.localizedString(_:prefixImage:imageBounds:)();
}

void sub_1BD202908()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  Swift::String_optional v11;
  Swift::String v12;
  uint64_t v13;
  uint64_t countAndFlagsBits;
  void *object;
  Swift::String v16;
  uint64_t v17;
  void *v18;
  Swift::String v19;
  id v20;
  unint64_t v21;
  uint64_t v22;
  char v23;

  v4 = swift_bridgeObjectRelease();
  if (((*(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & **(_QWORD **)(v2 + 136)) + 0x5E0))(v4) & 1) != 0)
  {
    if ((v23 & 1) == 0)
    {
      if (v22 == 1)
      {
        v20 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
        v8 = objc_msgSend(v20, sel_model);

        goto LABEL_12;
      }
      if (!v22)
      {
        v5 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
        v6 = objc_msgSend(v5, sel_routeController);

        v7 = objc_msgSend(v6, sel_pickedRoute);
        if (v7)
        {
          v8 = objc_msgSend(v7, sel_name);

LABEL_12:
          countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)();
LABEL_10:
          v17 = countAndFlagsBits;
          v18 = object;

          v19._countAndFlagsBits = v17;
          v19._object = v18;
          NSMutableAttributedString.__allocating_init(string:)(v19);
        }
      }
    }
    v8 = objc_msgSend(v3, *(SEL *)(v0 + 864));
    v21 = 0xE000000000000000;
    v9 = 0x4E4F5F43494DLL;
    v10 = 0xE600000000000000;
  }
  else
  {
    v8 = objc_msgSend(v3, *(SEL *)(v0 + 864));
    v21 = v1;
    v9 = 0x46464F5F43494DLL;
    v10 = 0xE700000000000000;
  }
  v11.value._countAndFlagsBits = 0x61737265766E6F43;
  v11.value._object = (void *)0xEF74694B6E6F6974;
  v12._countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  v13 = 0;
  v16 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v9, v11, (NSBundle)v8, v12, *(Swift::String *)(&v21 - 1));
  object = v16._object;
  countAndFlagsBits = v16._countAndFlagsBits;
  goto LABEL_10;
}

Class ConversationControlsMicMenuButtonProvider.menu(for:)()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  _QWORD *v8;
  uint64_t v9;
  _BOOL8 v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  objc_class *v20;
  NSBundle v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t);
  void *v30;
  id v31;
  Class v32;
  void (*v33)(void *);
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  void *v45;
  id v46;
  uint64_t v47;
  id v48;
  id v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  id v54;
  uint64_t v55;
  UIMenuElementSize v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  Class isa;
  uint64_t v67;
  id v68;
  objc_class *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  id v78;
  id v79;
  uint64_t v80;
  Swift::OpaquePointer v81;
  id v82;
  void *v83;
  void *v84;
  UIMenuElementSize v85;

  v1 = v0;
  v2 = objc_msgSend(*(id *)(v0 + 160), sel_pickedRoute);
  if (!v2)
    return 0;
  v3 = v2;
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v84 = v3;
  v4 = type metadata accessor for Logger();
  __swift_project_value_buffer(v4, (uint64_t)&static Logger.conversationControls);
  v5 = Logger.logObject.getter();
  v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)OUTLINED_FUNCTION_7_8();
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_1BD004000, v5, v6, "Displaying Mic menu", v7, 2u);
    OUTLINED_FUNCTION_60();
  }

  v8 = *(_QWORD **)(v1 + 136);
  v9 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v8) + 0x5E0))();
  v10 = (v9 & 1) == 0;
  OUTLINED_FUNCTION_17_8(v9, (unint64_t *)&lazy cache variable for type metadata for UIAction);
  v11 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  OUTLINED_FUNCTION_0_3(0x4F48504F5243494DLL, 0xEE0046464F5F454ELL);

  OUTLINED_FUNCTION_17_8(v12, (unint64_t *)&lazy cache variable for type metadata for UIImage);
  @nonobjc UIImage.__allocating_init(systemName:)();
  v13 = OUTLINED_FUNCTION_7_0();
  swift_weakInit();
  v83 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  v14 = objc_msgSend((id)objc_opt_self(), sel_currentDevice, 0, 0, v10, partial apply for closure #1 in ConversationControlsMicMenuButtonProvider.menu(for:), v13);
  v15 = objc_msgSend(v14, sel_model);

  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v18 = v17;

  v20 = (objc_class *)OUTLINED_FUNCTION_20_4(v19, sel_conversationKit);
  OUTLINED_FUNCTION_7_14();
  v21.super.isa = v20;
  OUTLINED_FUNCTION_49_2(v22, v23, v24, v25, v21);

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v26 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v26 + 16) = xmmword_1BD6441D0;
  *(_QWORD *)(v26 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v26 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v26 + 32) = v16;
  *(_QWORD *)(v26 + 40) = v18;
  String.init(format:_:)();
  v27 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v28 = swift_bridgeObjectRelease();
  v29 = *(uint64_t (**)(uint64_t))((*v27 & *v8) + 0x460);
  v30 = (void *)v29(v28);
  if (v30)
  {
    v31 = objc_msgSend(v30, sel_audioRouteGlyphForDevice, 0xE000000000000000);
    v30 = (void *)OUTLINED_FUNCTION_10();
  }
  else
  {
    v31 = 0;
  }
  v33 = *(void (**)(void *))((*v27 & *v8) + 0x270);
  v33(v30);
  v34 = OUTLINED_FUNCTION_17_49();
  v35 = OUTLINED_FUNCTION_20_50(v34);
  OUTLINED_FUNCTION_10();
  v82 = v31;
  v36 = OUTLINED_FUNCTION_20_4((uint64_t)v82, sel_conversationKit);
  OUTLINED_FUNCTION_0_3(0xD000000000000012, 0x80000001BD67C180);
  v38 = v37;

  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_9_63();
  v80 = v38;
  OUTLINED_FUNCTION_13_59();
  v39 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  v44 = (void *)((uint64_t (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t))v29)(v39, v40, v41, v42, v43);
  if (v44)
  {
    v45 = v84;
    v46 = objc_msgSend(v44, sel_audioRouteGlyphFor_, v84, v80, 0, v35 == 1, partial apply for closure #2 in ConversationControlsMicMenuButtonProvider.menu(for:), v36);
    v44 = (void *)OUTLINED_FUNCTION_10();
  }
  else
  {
    v46 = 0;
    v45 = v84;
  }
  v33(v44);
  v47 = OUTLINED_FUNCTION_17_49();
  OUTLINED_FUNCTION_20_50(v47);
  OUTLINED_FUNCTION_10();
  v48 = objc_msgSend(v45, sel_name);
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_9_63();
  v49 = v46;
  OUTLINED_FUNCTION_13_59();
  v50 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v51 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v51 + 16) = xmmword_1BD6441C0;
  *(_QWORD *)(v51 + 32) = v39;
  *(_QWORD *)(v51 + 40) = v50;
  v52 = OUTLINED_FUNCTION_15_59(v51);
  if ((unint64_t)v85 >> 62)
  {
    OUTLINED_FUNCTION_17_8(v52, &lazy cache variable for type metadata for UIMenuElement);
    v78 = v39;
    v79 = v50;
    swift_bridgeObjectRetain();
    v56 = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    v53 = v39;
    v54 = v50;
    swift_bridgeObjectRetain();
    v55 = dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    OUTLINED_FUNCTION_17_8(v55, &lazy cache variable for type metadata for UIMenuElement);
    v56 = v85;
  }
  v57 = swift_bridgeObjectRelease();
  v58 = OUTLINED_FUNCTION_17_8(v57, &lazy cache variable for type metadata for UIMenu);
  isa = OUTLINED_FUNCTION_3_79(v58, v59, v60, v61, v62, v63, v64, v65, v56, 0).super.super.isa;
  v67 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v67 + 16) = xmmword_1BD6441C0;
  *(_QWORD *)(v67 + 32) = v83;
  *(_QWORD *)(v67 + 40) = isa;
  OUTLINED_FUNCTION_15_59(v67);
  v68 = v83;
  v69 = isa;
  v32 = OUTLINED_FUNCTION_3_79((uint64_t)v69, v70, v71, v72, v73, v74, v75, v76, v85, v81).super.super.isa;

  return v32;
}

uint64_t closure #1 in ConversationControlsMicMenuButtonProvider.menu(for:)(uint64_t a1, uint64_t a2, const char *a3)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  id v10;
  id v11;

  OUTLINED_FUNCTION_2_0();
  result = swift_weakLoadStrong();
  if (result)
  {
    v5 = result;
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v6 = type metadata accessor for Logger();
    __swift_project_value_buffer(v6, (uint64_t)&static Logger.conversationControls);
    v7 = Logger.logObject.getter();
    v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)OUTLINED_FUNCTION_7_8();
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_1BD004000, v7, v8, a3, v9, 2u);
      OUTLINED_FUNCTION_60();
    }

    v10 = *(id *)(v5 + 136);
    ConversationControlsManager.setLocalAudio(muted:bluetoothAudioFormat:)();

    v11 = *(id *)(v5 + 136);
    ConversationControlsMicMenuButtonProvider.localAudioEphemeralAlert(bluetoothAudioFormat:)();
  }
  return result;
}

uint64_t ConversationControlsMicMenuButtonProvider.__ivar_destroyer()
{
  uint64_t v0;

  return swift_release();
}

uint64_t ConversationControlsMicMenuButtonProvider.deinit()
{
  uint64_t v0;

  v0 = ConversationControlsMenuButtonProvider.deinit();

  swift_release();
  return v0;
}

uint64_t ConversationControlsMicMenuButtonProvider.__deallocating_deinit()
{
  ConversationControlsMicMenuButtonProvider.deinit();
  return swift_deallocClassInstance();
}

void partial apply for closure #1 in ConversationControlsMicMenuButtonProvider.buttonChanged()(unsigned __int8 *a1)
{
  closure #1 in ConversationControlsMicMenuButtonProvider.buttonChanged()(a1);
}

void partial apply for closure #2 in ConversationControlsMicMenuButtonProvider.buttonChanged()(void **a1)
{
  closure #2 in ConversationControlsMicMenuButtonProvider.buttonChanged()(a1);
}

uint64_t _s7Combine9PublishedV9PublisherVySb_GAEyx_GAadAWlTm_0(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0C96190], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t partial apply for closure #1 in ConversationControlsMicMenuButtonProvider.menu(for:)(uint64_t a1)
{
  uint64_t v1;

  return closure #1 in ConversationControlsMicMenuButtonProvider.menu(for:)(a1, v1, "1. Muting mic");
}

uint64_t partial apply for closure #2 in ConversationControlsMicMenuButtonProvider.menu(for:)(uint64_t a1)
{
  uint64_t v1;

  return closure #1 in ConversationControlsMicMenuButtonProvider.menu(for:)(a1, v1, "2. Switching to A2DP format");
}

uint64_t partial apply for closure #3 in ConversationControlsMicMenuButtonProvider.menu(for:)(uint64_t a1)
{
  uint64_t v1;

  return closure #1 in ConversationControlsMicMenuButtonProvider.menu(for:)(a1, v1, "3. Switching to HFP format");
}

uint64_t type metadata accessor for ConversationControlsMicMenuButtonProvider()
{
  return objc_opt_self();
}

void *specialized Sequence.first(where:)(unint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;

  if (a1 >> 62)
  {
LABEL_21:
    swift_bridgeObjectRetain();
    v4 = _CocoaArrayWrapper.endIndex.getter();
    if (v4)
      goto LABEL_3;
  }
  else
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4)
    {
LABEL_3:
      v5 = 4;
      do
      {
        if ((a1 & 0xC000000000000001) != 0)
          v6 = (id)MEMORY[0x1C3B73D18](v5 - 4, a1);
        else
          v6 = *(id *)(a1 + 8 * v5);
        v7 = v6;
        v8 = v5 - 3;
        if (__OFADD__(v5 - 4, 1))
        {
          __break(1u);
          goto LABEL_21;
        }
        v9 = objc_msgSend(v6, sel_deviceType);
        v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        v12 = v11;
        if (v10 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v12 == v13)
        {

          swift_bridgeObjectRelease_n();
        }
        else
        {
          v15 = _stringCompareWithSmolCheck(_:_:expecting:)();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v15 & 1) == 0)
          {
            if (objc_msgSend(v7, sel_position) == (id)(2 - a3))
              goto LABEL_19;
            goto LABEL_17;
          }
        }
        if ((a3 | 2) == 2)
        {
LABEL_19:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return v7;
        }
LABEL_17:

        ++v5;
      }
      while (v8 != v4);
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0;
}

void *specialized Array<A>.preferredDevice(at:previousDevice:)(unsigned __int8 a1, void *a2, unint64_t a3)
{
  void *v4;
  id v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v4 = a2;
  if (a2)
  {
    v6 = a2;
    if (specialized Array<A>.camera(_:matchesPosition:)(v6, a1)
      && (specialized Sequence<>.contains(_:)((uint64_t)v6, a3) & 1) != 0)
    {
      if (one-time initialization token for conversationKit != -1)
        swift_once();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_1BD6441D0;
      type metadata accessor for AVCaptureDevice();
      v8 = v6;
      v9 = String.init<A>(reflecting:)();
      v11 = v10;
      *(_QWORD *)(v7 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v7 + 64) = lazy protocol witness table accessor for type String and conformance String();
      *(_QWORD *)(v7 + 32) = v9;
      *(_QWORD *)(v7 + 40) = v11;
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();
      swift_bridgeObjectRelease();
      return v4;
    }

  }
  v12 = swift_bridgeObjectRetain();
  v13 = specialized Sequence.first(where:)(v12, a3, a1);
  if (v13)
  {
    v14 = v13;
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1BD645380;
    type metadata accessor for AVCaptureDevice();
    v16 = v14;
    v17 = String.init<A>(reflecting:)();
    v19 = v18;
    v20 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v15 + 56) = MEMORY[0x1E0DEA968];
    v21 = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v15 + 64) = v21;
    *(_QWORD *)(v15 + 32) = v17;
    *(_QWORD *)(v15 + 40) = v19;
    if (v4)
    {
      v22 = v4;
      v23 = String.init<A>(reflecting:)();
    }
    else
    {
      v24 = 0xE300000000000000;
      v23 = 7104878;
    }
    *(_QWORD *)(v15 + 96) = v20;
    *(_QWORD *)(v15 + 104) = v21;
    *(_QWORD *)(v15 + 72) = v23;
    *(_QWORD *)(v15 + 80) = v24;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    return v14;
  }
  else
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_1BD645380;
    v26 = String.init<A>(reflecting:)();
    v28 = v27;
    v29 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v25 + 56) = MEMORY[0x1E0DEA968];
    v30 = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v25 + 64) = v30;
    *(_QWORD *)(v25 + 32) = v26;
    *(_QWORD *)(v25 + 40) = v28;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [AVCaptureDevice]);
    v31 = String.init<A>(reflecting:)();
    *(_QWORD *)(v25 + 96) = v29;
    *(_QWORD *)(v25 + 104) = v30;
    *(_QWORD *)(v25 + 72) = v31;
    *(_QWORD *)(v25 + 80) = v32;
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    return 0;
  }
}

BOOL specialized Array<A>.camera(_:matchesPosition:)(void *a1, unsigned __int8 a2)
{
  unsigned int v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v10;

  v3 = a2;
  v4 = objc_msgSend(a1, sel_deviceType);
  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v7 = v6;
  if (v5 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v7 == v8)
  {

    swift_bridgeObjectRelease_n();
  }
  else
  {
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v10 & 1) == 0)
      return objc_msgSend(a1, sel_position) == (id)(2 - v3);
  }
  return (v3 & 0xFD) == 0;
}

id TUVideoDeviceController.cameraPosition.getter()
{
  void *v0;
  id result;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;
  unsigned int v10;
  unsigned int v11;
  int v12;

  result = objc_msgSend(v0, sel_currentInputDevice);
  if (result)
  {
    v2 = result;
    if (CameraPosition.init(avDevicePosition:)((AVCaptureDevicePosition)objc_msgSend(result, sel_position)).value != ConversationKit_CameraPosition_unknownDefault)
    {
      v3 = objc_msgSend(v2, sel_deviceType);
      v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v6 = v5;
      if (v4 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v6 == v7)
      {

        swift_bridgeObjectRelease_n();
      }
      else
      {
        v9 = _stringCompareWithSmolCheck(_:_:expecting:)();

        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_53();
        if ((v9 & 1) == 0)
        {
          LOBYTE(v10) = CameraPosition.init(avDevicePosition:)((AVCaptureDevicePosition)objc_msgSend(v2, sel_position));
          v11 = v10;
          v12 = v10;

          if (v12 == 3)
            return 0;
          else
            return (id)v11;
        }
      }
    }

    return 0;
  }
  return result;
}

id TUVideoDeviceController.localContentsFrame.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_localScreenContentsRect);
}

Swift::Void __swiftcall TUVideoDeviceController.setReactionEffectGestureEnabled(_:)(Swift::Bool a1)
{
  OUTLINED_FUNCTION_3_80(a1, sel_setReactionEffectGestureEnabled_);
}

Swift::Void __swiftcall TUVideoDeviceController.setStudioLightEnabled(_:)(Swift::Bool a1)
{
  OUTLINED_FUNCTION_3_80(a1, sel_setStudioLightEnabled_);
}

void TUVideoDeviceController.startCamera(at:deviceOrientation:shouldUpdateLayers:)(ConversationKit::CameraPosition a1, unint64_t a2, char a3)
{
  void *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  unint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;

  if (one-time initialization token for conversationKit != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1BD645380;
  v8 = String.init<A>(reflecting:)();
  v10 = v9;
  v11 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v7 + 56) = MEMORY[0x1E0DEA968];
  v12 = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v7 + 64) = v12;
  *(_QWORD *)(v7 + 32) = v8;
  *(_QWORD *)(v7 + 40) = v10;
  type metadata accessor for CNKDeviceOrientation(0);
  v13 = String.init<A>(reflecting:)();
  *(_QWORD *)(v7 + 96) = v11;
  *(_QWORD *)(v7 + 104) = v12;
  *(_QWORD *)(v7 + 72) = v13;
  *(_QWORD *)(v7 + 80) = v14;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  v15 = swift_bridgeObjectRelease();
  v16 = OUTLINED_FUNCTION_25_1(v15, sel_inputDevices);
  type metadata accessor for AVCaptureDevice();
  v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  v19 = OUTLINED_FUNCTION_25_1(v18, sel_currentInputDevice);
  v20 = specialized Array<A>.preferredDevice(at:previousDevice:)(a1, v19, v17);
  swift_bridgeObjectRelease();

  if (v20)
  {
    objc_msgSend(v3, sel_setCurrentInputDevice_, v20, a2);
    objc_msgSend(v3, sel_setCurrentVideoOrientation_, TUVideoDeviceController.tuVideoDeviceOrientationFor(_:)(a2));
    objc_msgSend(v3, sel_startPreview);
    if ((a3 & 1) != 0)
      TUVideoDeviceController.updateVideoLayers(for:)(a1);

  }
  else
  {
    static os_log_type_t.error.getter();
    OUTLINED_FUNCTION_55_0();
  }
}

uint64_t TUVideoDeviceController.tuVideoDeviceOrientationFor(_:)(unint64_t a1)
{
  void *v1;
  id v3;
  id v4;
  BOOL v5;

  v3 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
  v4 = objc_msgSend(v3, sel_userInterfaceIdiom);

  if (objc_msgSend(v1, sel_currentInputIsExternal))
    v5 = v4 == (id)1;
  else
    v5 = 0;
  if (v5)
    return 2;
  if (a1 > 3)
    return 0;
  return dword_1BD6513F0[a1];
}

Swift::Void __swiftcall TUVideoDeviceController.updateVideoLayers(for:)(ConversationKit::CameraPosition a1)
{
  void *v1;
  id v2;
  id v3;
  id v4;
  void *v5;

  if (a1 == ConversationKit_CameraPosition_front)
  {
    *(_QWORD *)&a1 = OUTLINED_FUNCTION_25_1(a1, sel_localBackLayer);
    if ((_QWORD)a1)
    {
      OUTLINED_FUNCTION_2_82((void *)a1);

    }
    goto LABEL_8;
  }
  if (a1 != ConversationKit_CameraPosition_back)
  {
LABEL_8:
    v3 = OUTLINED_FUNCTION_25_1(a1, sel_localFrontLayer);
    goto LABEL_9;
  }
  v2 = OUTLINED_FUNCTION_25_1(a1, sel_localFrontLayer);
  if (v2)
  {
    OUTLINED_FUNCTION_2_82(v2);

  }
  v3 = OUTLINED_FUNCTION_25_1((uint64_t)v2, sel_localBackLayer);
LABEL_9:
  v4 = v3;
  if (v4)
  {
    v5 = v4;
    objc_msgSend(v4, sel_setHidden_, 0);
    OUTLINED_FUNCTION_15_9(v5);
  }
  else
  {
    OUTLINED_FUNCTION_45_0();
  }
}

id TUVideoDeviceController.updateCurrentVideoOrientation(_:)(unint64_t a1)
{
  void *v1;

  return objc_msgSend(v1, sel_setCurrentVideoOrientation_, TUVideoDeviceController.tuVideoDeviceOrientationFor(_:)(a1));
}

Swift::Void __swiftcall TUVideoDeviceController.stopCamera()()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  void *v4;

  if (one-time initialization token for conversationKit != -1)
    swift_once();
  v1 = (void *)static OS_os_log.conversationKit;
  static os_log_type_t.default.getter();
  OUTLINED_FUNCTION_55_0();
  v2 = OUTLINED_FUNCTION_25_1((uint64_t)objc_msgSend(v0, sel_stopPreview), sel_localFrontLayer);
  if (v2)
  {
    OUTLINED_FUNCTION_2_82(v2);

  }
  v3 = OUTLINED_FUNCTION_25_1((uint64_t)v2, sel_localBackLayer);
  if (v3)
  {
    v4 = v3;
    objc_msgSend(v3, sel_setHidden_, 1);
    OUTLINED_FUNCTION_15_9(v4);
  }
  else
  {
    OUTLINED_FUNCTION_45_0();
  }
}

Swift::Void __swiftcall TUVideoDeviceController.pauseCamera()()
{
  void *v0;

  if (one-time initialization token for conversationKit != -1)
    swift_once();
  static os_log_type_t.default.getter();
  OUTLINED_FUNCTION_55_0();
  objc_msgSend(v0, sel_pausePreview);
}

Swift::Void __swiftcall TUVideoDeviceController.setCameraBlurEnabled(_:)(Swift::Bool a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  if (one-time initialization token for conversationKit != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v1 = OUTLINED_FUNCTION_16_9();
  *(_OWORD *)(v1 + 16) = xmmword_1BD6441D0;
  String.init<A>(reflecting:)();
  *(_QWORD *)(v1 + 56) = MEMORY[0x1E0DEA968];
  v2 = lazy protocol witness table accessor for type String and conformance String();
  OUTLINED_FUNCTION_11_62(v2);
  OUTLINED_FUNCTION_6_61();
  OUTLINED_FUNCTION_53();
  TUVideoDeviceController.setCurrentBackgroundBlurControlMode(mode:)();
  OUTLINED_FUNCTION_10_16(v3, sel_setCameraBlurEnabled_);
  OUTLINED_FUNCTION_49_0();
}

void TUVideoDeviceController.setCurrentBackgroundBlurControlMode(mode:)()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  if (one-time initialization token for conversationKit != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v0 = OUTLINED_FUNCTION_16_9();
  *(_OWORD *)(v0 + 16) = xmmword_1BD6441D0;
  type metadata accessor for TUVideoDeviceBackgroundBlurControlMode(0);
  String.init<A>(reflecting:)();
  *(_QWORD *)(v0 + 56) = MEMORY[0x1E0DEA968];
  v1 = lazy protocol witness table accessor for type String and conformance String();
  OUTLINED_FUNCTION_11_62(v1);
  OUTLINED_FUNCTION_6_61();
  v2 = OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_10_16(v2, sel_setCurrentBackgroundBlurControlMode_);
  OUTLINED_FUNCTION_49_0();
}

id protocol witness for CameraContainer.cameraPosition.getter in conformance TUVideoDeviceController()
{
  return TUVideoDeviceController.cameraPosition.getter();
}

id protocol witness for CameraContainer.localContentsFrame.getter in conformance TUVideoDeviceController()
{
  return TUVideoDeviceController.localContentsFrame.getter();
}

unint64_t protocol witness for CameraContainer.isPreviewRunning.getter in conformance TUVideoDeviceController()
{
  return (unint64_t)@nonobjc TUVideoDeviceController.isPreviewRunning.getter() & 1;
}

id @nonobjc TUVideoDeviceController.isPreviewRunning.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_isPreviewRunning);
}

void protocol witness for CameraContainer.startCamera(at:deviceOrientation:shouldUpdateLayers:) in conformance TUVideoDeviceController(ConversationKit::CameraPosition a1, unint64_t a2, char a3)
{
  TUVideoDeviceController.startCamera(at:deviceOrientation:shouldUpdateLayers:)(a1, a2, a3);
}

void protocol witness for CameraContainer.updateVideoLayers(for:) in conformance TUVideoDeviceController(ConversationKit::CameraPosition a1)
{
  TUVideoDeviceController.updateVideoLayers(for:)(a1);
}

id protocol witness for CameraContainer.updateCurrentVideoOrientation(_:) in conformance TUVideoDeviceController(unint64_t a1)
{
  return TUVideoDeviceController.updateCurrentVideoOrientation(_:)(a1);
}

void protocol witness for CameraContainer.stopCamera() in conformance TUVideoDeviceController()
{
  TUVideoDeviceController.stopCamera()();
}

void protocol witness for CameraContainer.pauseCamera() in conformance TUVideoDeviceController()
{
  TUVideoDeviceController.pauseCamera()();
}

id protocol witness for CameraContainer.getSnapshot() in conformance TUVideoDeviceController()
{
  return @nonobjc TUVideoDeviceController.getSnapshot()();
}

id @nonobjc TUVideoDeviceController.getSnapshot()()
{
  void *v0;

  return objc_msgSend(v0, sel_getSnapshot);
}

unint64_t protocol witness for CameraContainer.supportsCameraBlur.getter in conformance TUVideoDeviceController()
{
  return (unint64_t)@nonobjc TUVideoDeviceController.supportsCameraBlur.getter() & 1;
}

id @nonobjc TUVideoDeviceController.supportsCameraBlur.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_supportsCameraBlur);
}

unint64_t protocol witness for CameraContainer.cameraBlurEnabled.getter in conformance TUVideoDeviceController()
{
  return (unint64_t)@nonobjc TUVideoDeviceController.cameraBlurEnabled.getter() & 1;
}

id @nonobjc TUVideoDeviceController.cameraBlurEnabled.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_cameraBlurEnabled);
}

void protocol witness for CameraContainer.setCameraBlurEnabled(_:) in conformance TUVideoDeviceController(Swift::Bool a1)
{
  TUVideoDeviceController.setCameraBlurEnabled(_:)(a1);
}

void protocol witness for CameraContainer.setCurrentBackgroundBlurControlMode(mode:) in conformance TUVideoDeviceController()
{
  TUVideoDeviceController.setCurrentBackgroundBlurControlMode(mode:)();
}

unint64_t protocol witness for CameraContainer.hasAvailableDeskViewCameras.getter in conformance TUVideoDeviceController()
{
  return (unint64_t)@nonobjc TUVideoDeviceController.hasAvailableDeskViewCameras.getter() & 1;
}

id @nonobjc TUVideoDeviceController.hasAvailableDeskViewCameras.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_hasAvailableDeskViewCameras);
}

unint64_t protocol witness for CameraContainer.isCinematicFramingEnabled.getter in conformance TUVideoDeviceController()
{
  return (unint64_t)@nonobjc TUVideoDeviceController.isCinematicFramingEnabled.getter() & 1;
}

id @nonobjc TUVideoDeviceController.isCinematicFramingEnabled.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_isCinematicFramingEnabled);
}

id protocol witness for CameraContainer.setCinematicFramingEnabled(_:) in conformance TUVideoDeviceController(char a1)
{
  return @nonobjc TUVideoDeviceController.setCinematicFramingEnabled(_:)(a1);
}

id @nonobjc TUVideoDeviceController.setCinematicFramingEnabled(_:)(char a1)
{
  void *v1;

  return objc_msgSend(v1, sel_setCinematicFramingEnabled_, a1 & 1);
}

unint64_t protocol witness for CameraContainer.currentInputSupportsReactionEffects.getter in conformance TUVideoDeviceController()
{
  return (unint64_t)@nonobjc TUVideoDeviceController.currentInputSupportsReactionEffects.getter() & 1;
}

id @nonobjc TUVideoDeviceController.currentInputSupportsReactionEffects.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_currentInputSupportsReactionEffects);
}

unint64_t protocol witness for CameraContainer.currentInputSupportsStudioLight.getter in conformance TUVideoDeviceController()
{
  return (unint64_t)@nonobjc TUVideoDeviceController.currentInputSupportsStudioLight.getter() & 1;
}

id @nonobjc TUVideoDeviceController.currentInputSupportsStudioLight.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_currentInputSupportsStudioLight);
}

unint64_t protocol witness for CameraContainer.isReactionEffectGestureEnabled.getter in conformance TUVideoDeviceController()
{
  return (unint64_t)@nonobjc TUVideoDeviceController.isReactionEffectGestureEnabled.getter() & 1;
}

id @nonobjc TUVideoDeviceController.isReactionEffectGestureEnabled.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_isReactionEffectGestureEnabled);
}

void protocol witness for CameraContainer.setReactionEffectGestureEnabled(_:) in conformance TUVideoDeviceController(Swift::Bool a1)
{
  TUVideoDeviceController.setReactionEffectGestureEnabled(_:)(a1);
}

unint64_t protocol witness for CameraContainer.isStudioLightEnabled.getter in conformance TUVideoDeviceController()
{
  return (unint64_t)@nonobjc TUVideoDeviceController.isStudioLightEnabled.getter() & 1;
}

id @nonobjc TUVideoDeviceController.isStudioLightEnabled.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_isStudioLightEnabled);
}

void protocol witness for CameraContainer.setStudioLightEnabled(_:) in conformance TUVideoDeviceController(Swift::Bool a1)
{
  TUVideoDeviceController.setStudioLightEnabled(_:)(a1);
}

unint64_t protocol witness for CameraContainer.currentInputIsExternal.getter in conformance TUVideoDeviceController()
{
  return (unint64_t)@nonobjc TUVideoDeviceController.currentInputIsExternal.getter() & 1;
}

id @nonobjc TUVideoDeviceController.currentInputIsExternal.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_currentInputIsExternal);
}

uint64_t dispatch thunk of CameraContainer.cameraPosition.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of CameraContainer.localContentsFrame.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of CameraContainer.isPreviewRunning.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of CameraContainer.startCamera(at:deviceOrientation:shouldUpdateLayers:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

uint64_t dispatch thunk of CameraContainer.updateVideoLayers(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of CameraContainer.updateCurrentVideoOrientation(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of CameraContainer.stopCamera()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of CameraContainer.pauseCamera()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of CameraContainer.getSnapshot()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of CameraContainer.supportsCameraBlur.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of CameraContainer.cameraBlurEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of CameraContainer.setCameraBlurEnabled(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

uint64_t dispatch thunk of CameraContainer.setCurrentBackgroundBlurControlMode(mode:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 104))();
}

uint64_t dispatch thunk of CameraContainer.hasAvailableDeskViewCameras.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t dispatch thunk of CameraContainer.isCinematicFramingEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 120))();
}

uint64_t dispatch thunk of CameraContainer.setCinematicFramingEnabled(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 128))();
}

uint64_t dispatch thunk of CameraContainer.currentInputSupportsReactionEffects.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 136))();
}

uint64_t dispatch thunk of CameraContainer.currentInputSupportsStudioLight.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 144))();
}

uint64_t dispatch thunk of CameraContainer.isReactionEffectGestureEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 152))();
}

uint64_t dispatch thunk of CameraContainer.setReactionEffectGestureEnabled(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 160))();
}

uint64_t dispatch thunk of CameraContainer.isStudioLightEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 168))();
}

uint64_t dispatch thunk of CameraContainer.setStudioLightEnabled(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 176))();
}

uint64_t dispatch thunk of CameraContainer.currentInputIsExternal.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 184))();
}

BOOL specialized Set.isEmpty.getter(uint64_t a1)
{
  uint64_t v1;

  if ((a1 & 0xC000000000000001) != 0)
    v1 = __CocoaSet.count.getter();
  else
    v1 = *(_QWORD *)(a1 + 16);
  return v1 == 0;
}

unint64_t protocol witness for SoundPlayerProtocol.isPlaying.getter in conformance TUCallSoundPlayer()
{
  return (unint64_t)@nonobjc TUCallSoundPlayer.isPlaying.getter() & 1;
}

id @nonobjc TUCallSoundPlayer.isPlaying.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_isPlaying);
}

id protocol witness for SoundPlayerProtocol.currentlyPlayingSoundType.getter in conformance TUCallSoundPlayer()
{
  return @nonobjc TUCallSoundPlayer.currentlyPlayingSoundType.getter();
}

id @nonobjc TUCallSoundPlayer.currentlyPlayingSoundType.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_currentlyPlayingSoundType);
}

id protocol witness for SoundPlayerProtocol.stopPlaying() in conformance TUCallSoundPlayer()
{
  return @nonobjc TUCallSoundPlayer.stopPlaying()();
}

id @nonobjc TUCallSoundPlayer.stopPlaying()()
{
  void *v0;

  return objc_msgSend(v0, sel_stopPlaying);
}

unint64_t protocol witness for SoundPlayerProtocol.attempt(toPlay:) in conformance TUCallSoundPlayer(uint64_t a1)
{
  return (unint64_t)@nonobjc TUCallSoundPlayer.attempt(toPlay:)(a1) & 1;
}

id @nonobjc TUCallSoundPlayer.attempt(toPlay:)(uint64_t a1)
{
  void *v1;

  return objc_msgSend(v1, sel_attemptToPlayDescriptor_, a1);
}

void *TonePlayer.minimumDelayBetweenTones.unsafeMutableAddressor()
{
  return &static TonePlayer.minimumDelayBetweenTones;
}

double static TonePlayer.minimumDelayBetweenTones.getter()
{
  return 2.0;
}

id TonePlayer.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

uint64_t TonePlayer.init()()
{
  uint64_t ObjectType;
  id v1;
  uint64_t v2;
  _QWORD v4[5];

  ObjectType = swift_getObjectType();
  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DBD1F8]), sel_init);
  v4[3] = _sSo8NSObjectCMaTm_0(0, &lazy cache variable for type metadata for TUCallSoundPlayer);
  v4[4] = &protocol witness table for TUCallSoundPlayer;
  v4[0] = v1;
  v2 = (*(uint64_t (**)(_QWORD *))(ObjectType + 184))(v4);
  swift_deallocPartialClassInstance();
  return v2;
}

void TonePlayer.__allocating_init(soundPlayer:)()
{
  objc_class *v0;
  id v1;
  uint64_t v2;

  v1 = objc_allocWithZone(v0);
  v2 = OUTLINED_FUNCTION_13_6();
  TonePlayer.init(soundPlayer:)(v2);
  OUTLINED_FUNCTION_0();
}

char *TonePlayer.init(soundPlayer:)(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  objc_super v12;

  v3 = type metadata accessor for UUID();
  OUTLINED_FUNCTION_17_50(v3, v4, v5, v3);
  v6 = type metadata accessor for Date();
  OUTLINED_FUNCTION_17_50(v6, v7, v8, v6);
  v9 = &v1[OBJC_IVAR____TtC15ConversationKit10TonePlayer_lastPlayedSoundEventType];
  *(_QWORD *)v9 = 0;
  v9[8] = 1;
  outlined init with copy of RadarReporting(a1, (uint64_t)&v1[OBJC_IVAR____TtC15ConversationKit10TonePlayer_soundPlayer]);
  v12.receiver = v1;
  v12.super_class = (Class)type metadata accessor for TonePlayer();
  objc_msgSendSuper2(&v12, sel_init);
  v10 = OUTLINED_FUNCTION_13_6();
  __swift_destroy_boxed_opaque_existential_1(v10);
  return v1;
}

uint64_t type metadata accessor for TonePlayer()
{
  uint64_t result;

  result = type metadata singleton initialization cache for TonePlayer;
  if (!type metadata singleton initialization cache for TonePlayer)
    return swift_getSingletonMetadata();
  return result;
}

void TonePlayer.playOutgoingGFTRingtone(for:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  BOOL v38;
  BOOL v39;
  uint64_t v40;
  void *v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD v47[4];
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  _QWORD aBlock[6];

  v4 = type metadata accessor for DispatchWorkItemFlags();
  v51 = *(_QWORD *)(v4 - 8);
  v52 = v4;
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_41();
  v48 = v5;
  v6 = type metadata accessor for DispatchQoS();
  v49 = *(_QWORD *)(v6 - 8);
  v50 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchTime();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)v47 - v14;
  OUTLINED_FUNCTION_22_46();
  v16 = OUTLINED_FUNCTION_20_51(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 96));
  v17 = specialized Set.count.getter(v16);
  OUTLINED_FUNCTION_27();
  if (v17 < 2)
    goto LABEL_34;
  v18 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit10TonePlayer_soundPlayer + 32);
  OUTLINED_FUNCTION_14_64((_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit10TonePlayer_soundPlayer));
  if ((OUTLINED_FUNCTION_4_77(*(uint64_t (**)(uint64_t, uint64_t))(v18 + 8)) & 1) != 0)
    goto LABEL_34;
  v19 = a1[4];
  OUTLINED_FUNCTION_14_64(a1);
  if ((OUTLINED_FUNCTION_4_77(*(uint64_t (**)(uint64_t, uint64_t))(v19 + 208)) & 1) == 0)
    goto LABEL_34;
  v20 = a1[3];
  v21 = a1[4];
  OUTLINED_FUNCTION_14_64(a1);
  if ((OUTLINED_FUNCTION_4_77(*(uint64_t (**)(uint64_t, uint64_t))(v21 + 296)) & 1) == 0)
    goto LABEL_34;
  v47[1] = v1;
  if (one-time initialization token for shared != -1)
    goto LABEL_36;
LABEL_6:
  v22 = (*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 856))();
  OUTLINED_FUNCTION_22_46();
  v23 = OUTLINED_FUNCTION_20_51(*(uint64_t (**)(uint64_t, uint64_t))(v20 + 120));
  if ((v22 & 1) == 0)
  {
    v38 = specialized Set.isEmpty.getter(v23);
    OUTLINED_FUNCTION_27();
    if (!v38)
      goto LABEL_34;
    goto LABEL_31;
  }
  if ((v23 & 0xC000000000000001) != 0)
  {
    v24 = MEMORY[0x1E0DEE9E8];
    aBlock[0] = MEMORY[0x1E0DEE9E8];
    __CocoaSet.makeIterator()();
    v25 = __CocoaSet.Iterator.next()();
    if (!v25)
    {
LABEL_26:
      swift_release();
      goto LABEL_30;
    }
    v26 = v25;
    v47[3] = _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
    v47[2] = MEMORY[0x1E0DEE9B0] + 8;
    while (1)
    {
      v53 = v26;
      swift_dynamicCast();
      v27 = objc_msgSend(v54, sel_audioVideoMode);
      v28 = v54;
      if (v27)
      {
        v20 = aBlock[0];
        v29 = *(_QWORD *)(aBlock[0] + 16);
        if (*(_QWORD *)(aBlock[0] + 24) <= v29)
        {
          specialized _NativeSet.resize(capacity:)(v29 + 1);
          v20 = aBlock[0];
        }
        v30 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v20 + 40)) & ~(-1 << *(_BYTE *)(v20 + 32));
        if (((-1 << v30) & ~*(_QWORD *)(v20 + 56 + 8 * (v30 >> 6))) == 0)
        {
          OUTLINED_FUNCTION_30_8();
          while (++v34 != v35 || (v33 & 1) == 0)
          {
            v36 = v34 == v35;
            if (v34 == v35)
              v34 = 0;
            v33 |= v36;
            if (*(_QWORD *)(v32 + 8 * v34) != -1)
            {
              OUTLINED_FUNCTION_28_6();
              goto LABEL_23;
            }
          }
          __break(1u);
LABEL_36:
          swift_once();
          goto LABEL_6;
        }
        OUTLINED_FUNCTION_31_9();
LABEL_23:
        OUTLINED_FUNCTION_7_77(v31);
        *(_QWORD *)(*(_QWORD *)(v20 + 48) + 8 * v37) = v28;
        ++*(_QWORD *)(v20 + 16);
      }
      else
      {

      }
      v26 = __CocoaSet.Iterator.next()();
      if (!v26)
      {
        v24 = aBlock[0];
        goto LABEL_26;
      }
    }
  }
  v24 = specialized _NativeSet.filter(_:)(v23);
LABEL_30:
  v39 = specialized Set.isEmpty.getter(v24);
  swift_release();
  if (!v39)
    goto LABEL_34;
LABEL_31:
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  static os_log_type_t.default.getter();
  v40 = MEMORY[0x1E0DEE9D8];
  os_log(_:dso:log:type:_:)();
  TonePlayer.playTone(_:)(1);
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v41 = (void *)static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  MEMORY[0x1C3B72C50](v13, 30.0);
  v42 = *(void (**)(char *, uint64_t))(v10 + 8);
  v42(v13, v9);
  v43 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = partial apply for closure #2 in TonePlayer.playOutgoingGFTRingtone(for:);
  aBlock[5] = v43;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = &block_descriptor_42;
  v44 = _Block_copy(aBlock);
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = v40;
  _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]();
  v45 = v48;
  v46 = v52;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  MEMORY[0x1C3B735B0](v15, v8, v45, v44);
  _Block_release(v44);

  (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v45, v46);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v8, v50);
  v42(v15, v9);
LABEL_34:
  OUTLINED_FUNCTION_52_1();
}

void closure #2 in TonePlayer.playOutgoingGFTRingtone(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x1C3B752C0](v1);
  if (v2)
  {
    v3 = (_QWORD *)v2;
    v4 = (_QWORD *)(v2 + OBJC_IVAR____TtC15ConversationKit10TonePlayer_soundPlayer);
    v5 = v4[3];
    v6 = v4[4];
    __swift_project_boxed_opaque_existential_1(v4, v5);
    if ((*(uint64_t (**)(uint64_t, uint64_t))(v6 + 16))(v5, v6) == 1)
    {
      if (one-time initialization token for conversationKit != -1)
        swift_once();
      static os_log_type_t.default.getter();
      v7 = os_log(_:dso:log:type:_:)();
      (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v3) + 0xE0))(v7);
    }

  }
}

void TonePlayer.playConnectedTone(for:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  void (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(uint64_t, uint64_t);
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  _QWORD v47[5];

  v3 = type metadata accessor for UUID();
  v43 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_41();
  v42 = v4;
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_29_35();
  OUTLINED_FUNCTION_1_1();
  v10 = MEMORY[0x1E0C80A78](v9);
  v46 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v10);
  v44 = (uint64_t)&v41 - v13;
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v41 - v15;
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v41 - v17;
  v41 = v1;
  v19 = v1 + OBJC_IVAR____TtC15ConversationKit10TonePlayer_lastPlayedConnectedToneUUID;
  OUTLINED_FUNCTION_2_0();
  v45 = v19;
  OUTLINED_FUNCTION_10_73(v19, (uint64_t)v18);
  v20 = a1[3];
  v21 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v20);
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v21);
  OUTLINED_FUNCTION_19_8((uint64_t)v16);
  v22 = (uint64_t)&v8[*(int *)(v5 + 48)];
  OUTLINED_FUNCTION_10_73((uint64_t)v18, (uint64_t)v8);
  OUTLINED_FUNCTION_10_73((uint64_t)v16, v22);
  OUTLINED_FUNCTION_23_30((uint64_t)v8);
  if (v26)
  {
    OUTLINED_FUNCTION_13_9((uint64_t)v16);
    OUTLINED_FUNCTION_13_9((uint64_t)v18);
    OUTLINED_FUNCTION_23_30(v22);
    if (v26)
    {
      outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v8, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      goto LABEL_15;
    }
  }
  else
  {
    v24 = v42;
    v23 = v43;
    v25 = v44;
    outlined init with copy of FeatureEligibility?((uint64_t)v8, v44, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    OUTLINED_FUNCTION_23_30(v22);
    if (!v26)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 32))(v24, v22, v3);
      _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
      v22 = dispatch thunk of static Equatable.== infix(_:_:)();
      v27 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
      v27(v24, v3);
      OUTLINED_FUNCTION_13_9((uint64_t)v16);
      OUTLINED_FUNCTION_13_9((uint64_t)v18);
      v27(v25, v3);
      OUTLINED_FUNCTION_13_9((uint64_t)v8);
      if ((v22 & 1) != 0)
        goto LABEL_15;
      goto LABEL_11;
    }
    v22 = (uint64_t)&demangling cache variable for type metadata for UUID?;
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v16, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v18, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v25, v3);
  }
  outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v8, (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
LABEL_11:
  v28 = a1[4];
  OUTLINED_FUNCTION_24_41();
  v29 = (uint64_t)v46;
  v30 = OUTLINED_FUNCTION_13_6();
  v31(v30, v28);
  OUTLINED_FUNCTION_19_8(v29);
  v32 = v45;
  OUTLINED_FUNCTION_2_0();
  outlined assign with take of Participant?(v29, v32, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  swift_endAccess();
  v33 = a1[4];
  OUTLINED_FUNCTION_24_41();
  v34 = OUTLINED_FUNCTION_13_6();
  v36 = v35(v34, v33);
  specialized Set.count.getter(v36);
  OUTLINED_FUNCTION_13_6();
  swift_bridgeObjectRelease();
  outlined init with copy of RadarReporting((uint64_t)a1, (uint64_t)v47);
  if (v22 == 1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
LABEL_14:
    TonePlayer.playTone(_:)(2);
    goto LABEL_15;
  }
  v37 = v47[4];
  __swift_project_boxed_opaque_existential_1(v47, v47[3]);
  v38 = OUTLINED_FUNCTION_13_6();
  v40 = v39(v38, v37);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
  if ((v40 & 1) == 0)
    goto LABEL_14;
LABEL_15:
  OUTLINED_FUNCTION_52_1();
}

Swift::Void __swiftcall TonePlayer.playParticipantJoinedTone()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  double v8;
  double v9;

  OUTLINED_FUNCTION_29_35();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_3_81();
  OUTLINED_FUNCTION_27_31();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_8_68();
  OUTLINED_FUNCTION_10_73(v3, v2);
  if (__swift_getEnumTagSinglePayload(v2, 1, v1) == 1)
  {
    outlined destroy of OS_dispatch_queue.SchedulerOptions?(v2, (uint64_t *)&demangling cache variable for type metadata for Date?);
  }
  else
  {
    OUTLINED_FUNCTION_12_57();
    if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC15ConversationKit10TonePlayer_lastPlayedSoundEventType + 8) & 1) == 0
      && ((v6 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit10TonePlayer_lastPlayedSoundEventType), v6 != 8)
        ? (v7 = v6 == 2)
        : (v7 = 1),
          v7))
    {
      Date.timeIntervalSinceNow.getter();
      v9 = v8;
      OUTLINED_FUNCTION_1_84();
      if (v9 < 2.0)
        goto LABEL_13;
    }
    else
    {
      OUTLINED_FUNCTION_1_84();
    }
  }
  TonePlayer.playTone(_:)(8);
LABEL_13:
  OUTLINED_FUNCTION_6_62();
}

Swift::Void __swiftcall TonePlayer.playParticipantLeftTone()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  double v7;

  OUTLINED_FUNCTION_29_35();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_3_81();
  OUTLINED_FUNCTION_27_31();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_8_68();
  OUTLINED_FUNCTION_10_73(v3, v2);
  if (__swift_getEnumTagSinglePayload(v2, 1, v1) == 1)
  {
    outlined destroy of OS_dispatch_queue.SchedulerOptions?(v2, (uint64_t *)&demangling cache variable for type metadata for Date?);
  }
  else
  {
    OUTLINED_FUNCTION_12_57();
    if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC15ConversationKit10TonePlayer_lastPlayedSoundEventType + 8) & 1) != 0
      || *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit10TonePlayer_lastPlayedSoundEventType) != 9)
    {
      OUTLINED_FUNCTION_1_84();
    }
    else
    {
      Date.timeIntervalSinceNow.getter();
      v7 = v6;
      OUTLINED_FUNCTION_1_84();
      if (v7 < 2.0)
        goto LABEL_9;
    }
  }
  TonePlayer.playTone(_:)(9);
LABEL_9:
  OUTLINED_FUNCTION_6_62();
}

Swift::Void __swiftcall TonePlayer.stopPlaying()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = (_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit10TonePlayer_soundPlayer);
  OUTLINED_FUNCTION_16_51();
  if (((*(uint64_t (**)())(v1 + 8))() & 1) != 0)
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    v3 = static OS_os_log.conversationKit;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v4 = OUTLINED_FUNCTION_16_9();
    *(_OWORD *)(v4 + 16) = xmmword_1BD6441D0;
    v5 = v2[3];
    v6 = v2[4];
    OUTLINED_FUNCTION_14_64(v2);
    (*(void (**)(uint64_t, uint64_t))(v6 + 16))(v5, v6);
    v7 = String.init<A>(reflecting:)();
    v9 = v8;
    *(_QWORD *)(v4 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v4 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v4 + 32) = v7;
    *(_QWORD *)(v4 + 40) = v9;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_16_51();
    (*(void (**)(uint64_t, uint64_t))(v4 + 24))(v3, v4);
  }
}

void TonePlayer.playTone(_:)(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v7 = OUTLINED_FUNCTION_16_9();
  v25 = xmmword_1BD6441D0;
  *(_OWORD *)(v7 + 16) = xmmword_1BD6441D0;
  v26 = a1;
  v8 = String.init<A>(reflecting:)();
  v10 = v9;
  v11 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v7 + 56) = MEMORY[0x1E0DEA968];
  v12 = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v7 + 64) = v12;
  *(_QWORD *)(v7 + 32) = v8;
  *(_QWORD *)(v7 + 40) = v10;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  v13 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v14 = objc_msgSend(v13, sel_providerManager);

  v15 = objc_msgSend(v14, sel_faceTimeProvider);
  v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DBD200]), sel_initWithSoundType_provider_video_region_, a1, v15, 1, 0);

  if (v16)
  {
    (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v1) + 0xE0))();
    v17 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC15ConversationKit10TonePlayer_soundPlayer + 24);
    v18 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC15ConversationKit10TonePlayer_soundPlayer + 32);
    OUTLINED_FUNCTION_14_64((_QWORD *)((char *)v1 + OBJC_IVAR____TtC15ConversationKit10TonePlayer_soundPlayer));
    (*(void (**)(id, uint64_t, uint64_t))(v18 + 32))(v16, v17, v18);
    static Date.now.getter();
    v19 = type metadata accessor for Date();
    __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v19);
    v20 = (uint64_t)v1 + OBJC_IVAR____TtC15ConversationKit10TonePlayer_lastPlayedSoundDate;
    OUTLINED_FUNCTION_2_0();
    outlined assign with take of Participant?((uint64_t)v6, v20, (uint64_t *)&demangling cache variable for type metadata for Date?);
    swift_endAccess();

    v21 = (char *)v2 + OBJC_IVAR____TtC15ConversationKit10TonePlayer_lastPlayedSoundEventType;
    *(_QWORD *)v21 = a1;
    v21[8] = 0;
  }
  else
  {
    static os_log_type_t.error.getter();
    v22 = OUTLINED_FUNCTION_16_9();
    *(_OWORD *)(v22 + 16) = v25;
    v26 = a1;
    v23 = String.init<A>(reflecting:)();
    *(_QWORD *)(v22 + 56) = v11;
    *(_QWORD *)(v22 + 64) = v12;
    *(_QWORD *)(v22 + 32) = v23;
    *(_QWORD *)(v22 + 40) = v24;
    os_log(_:dso:log:type:_:)();
    OUTLINED_FUNCTION_27();
  }
  OUTLINED_FUNCTION_52_1();
}

id TonePlayer.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TonePlayer();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void specialized Set._Variant.filter(_:)(uint64_t (*a1)(id *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  id v17;
  uint64_t v18;

  if ((a3 & 0xC000000000000001) == 0)
  {
    specialized _NativeSet.filter(_:)((uint64_t)a1, a2, a3);
    return;
  }
  v18 = MEMORY[0x1E0DEE9E8];
  __CocoaSet.makeIterator()();
  if (!__CocoaSet.Iterator.next()())
  {
LABEL_20:
    swift_release();
    return;
  }
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
  while (1)
  {
    swift_dynamicCast();
    v5 = a1(&v17);
    if (v3)
    {
      swift_release();

      swift_release();
      return;
    }
    v6 = v17;
    if ((v5 & 1) != 0)
      break;

LABEL_19:
    if (!__CocoaSet.Iterator.next()())
      goto LABEL_20;
  }
  v7 = v18;
  v8 = *(_QWORD *)(v18 + 16);
  if (*(_QWORD *)(v18 + 24) <= v8)
  {
    specialized _NativeSet.resize(capacity:)(v8 + 1);
    v7 = v18;
  }
  v9 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v7 + 40)) & ~(-1 << *(_BYTE *)(v7 + 32));
  if (((-1 << v9) & ~*(_QWORD *)(v7 + 56 + 8 * (v9 >> 6))) != 0)
  {
    OUTLINED_FUNCTION_31_9();
LABEL_18:
    OUTLINED_FUNCTION_7_77(v10);
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v16) = v6;
    ++*(_QWORD *)(v7 + 16);
    goto LABEL_19;
  }
  OUTLINED_FUNCTION_30_8();
  while (++v13 != v14 || (v12 & 1) == 0)
  {
    v15 = v13 == v14;
    if (v13 == v14)
      v13 = 0;
    v12 |= v15;
    if (*(_QWORD *)(v11 + 8 * v13) != -1)
    {
      OUTLINED_FUNCTION_28_6();
      goto LABEL_18;
    }
  }
  __break(1u);
}

uint64_t specialized _NativeSet.filter(_:)(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t (*v5)(id *);
  char v6;
  unint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  _QWORD v14[2];

  v5 = (uint64_t (*)(id *))isStackAllocationSafe;
  v14[1] = *MEMORY[0x1E0C80C00];
  v6 = *(_BYTE *)(a3 + 32);
  v7 = (unint64_t)((1 << v6) + 63) >> 6;
  if ((v6 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    v8 = (_QWORD *)((char *)v14 - ((8 * v7 + 15) & 0x3FFFFFFFFFFFFFF0));
    specialized UnsafeMutablePointer.assign(repeating:count:)(0, v7, v8);
    specialized closure #1 in _NativeSet.filter(_:)(v8, v7, a3, v5);
    v10 = v9;
    swift_release();
    if (v3)
      swift_willThrow();
  }
  else
  {
    v11 = (uint64_t *)swift_slowAlloc();
    specialized UnsafeMutablePointer.assign(repeating:count:)(0, v7, v11);
    specialized closure #1 in _NativeSet.filter(_:)(v11, v7, a3, v5);
    v10 = v12;
    swift_release();
    MEMORY[0x1C3B751B8](v11, -1, -1);
  }
  return v10;
}

uint64_t sub_1BD20614C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void partial apply for closure #2 in TonePlayer.playOutgoingGFTRingtone(for:)()
{
  uint64_t v0;

  closure #2 in TonePlayer.playOutgoingGFTRingtone(for:)(v0);
}

uint64_t dispatch thunk of SoundPlayerProtocol.isPlaying.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of SoundPlayerProtocol.currentlyPlayingSoundType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of SoundPlayerProtocol.stopPlaying()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of SoundPlayerProtocol.attempt(toPlay:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t ObjC metadata update function for TonePlayer()
{
  return type metadata accessor for TonePlayer();
}

void type metadata completion function for TonePlayer()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for Participant?(319, (unint64_t *)&lazy cache variable for type metadata for UUID?, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
  if (v0 <= 0x3F)
  {
    type metadata accessor for Participant?(319, (unint64_t *)&lazy cache variable for type metadata for Date?, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for TonePlayer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TonePlayer.__allocating_init(soundPlayer:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t dispatch thunk of TonePlayer.playOutgoingGFTRingtone(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of TonePlayer.playConnectedTone(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of TonePlayer.playParticipantJoinedTone()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of TonePlayer.playParticipantLeftTone()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of TonePlayer.stopPlaying()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

void specialized closure #1 in _NativeSet.filter(_:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(id *))
{
  uint64_t v4;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  BOOL v13;
  unint64_t v14;
  int64_t v15;
  id v16;
  char v17;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  id v23;

  v7 = 0;
  v20 = 0;
  v21 = a3 + 56;
  v8 = 1 << *(_BYTE *)(a3 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(a3 + 56);
  v22 = (unint64_t)(v8 + 63) >> 6;
  while (v10)
  {
    v11 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    v12 = v11 | (v7 << 6);
LABEL_17:
    v23 = *(id *)(*(_QWORD *)(a3 + 48) + 8 * v12);
    v16 = v23;
    v17 = a4(&v23);

    if (v4)
      return;
    if ((v17 & 1) != 0)
    {
      *(uint64_t *)((char *)a1 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = __OFADD__(v20++, 1);
      if (v13)
        goto LABEL_30;
    }
  }
  v13 = __OFADD__(v7++, 1);
  if (v13)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v7 >= v22)
    goto LABEL_26;
  v14 = *(_QWORD *)(v21 + 8 * v7);
  if (v14)
  {
LABEL_16:
    v10 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v7 << 6);
    goto LABEL_17;
  }
  v15 = v7 + 1;
  if (v7 + 1 >= v22)
    goto LABEL_26;
  v14 = *(_QWORD *)(v21 + 8 * v15);
  if (v14)
    goto LABEL_15;
  v15 = v7 + 2;
  if (v7 + 2 >= v22)
    goto LABEL_26;
  v14 = *(_QWORD *)(v21 + 8 * v15);
  if (v14)
    goto LABEL_15;
  v15 = v7 + 3;
  if (v7 + 3 >= v22)
  {
LABEL_26:
    swift_retain();
    specialized _NativeSet.extractSubset(using:count:)(a1, a2, v20, a3);
    return;
  }
  v14 = *(_QWORD *)(v21 + 8 * v15);
  if (v14)
  {
LABEL_15:
    v7 = v15;
    goto LABEL_16;
  }
  while (1)
  {
    v7 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v7 >= v22)
      goto LABEL_26;
    v14 = *(_QWORD *)(v21 + 8 * v7);
    ++v15;
    if (v14)
      goto LABEL_16;
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
}

BOOL static InCallControlsView.JoinLeaveConfiguration.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

void InCallControlsView.JoinLeaveConfiguration.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
  Hasher._combine(_:)(a2);
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance InCallControlsView.JoinLeaveConfiguration(char *a1, char *a2)
{
  return static InCallControlsView.JoinLeaveConfiguration.== infix(_:_:)(*a1, *a2);
}

uint64_t protocol witness for Hashable.hashValue.getter in conformance InCallControlsView.JoinLeaveConfiguration()
{
  unsigned __int8 *v0;

  return InCallControlsView.JoinLeaveConfiguration.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance InCallControlsView.JoinLeaveConfiguration(uint64_t a1)
{
  unsigned __int8 *v1;

  InCallControlsView.JoinLeaveConfiguration.hash(into:)(a1, *v1);
}

ConversationKit::InCallControlsView::ConfigurationCapabilities __swiftcall InCallControlsView.ConfigurationCapabilities.init(supportsCinematicFraming:supportsEffects:supportsVideo:isLegacyCall:)(Swift::Bool supportsCinematicFraming, Swift::Bool supportsEffects, Swift::Bool supportsVideo, Swift::Bool isLegacyCall)
{
  ConversationKit::InCallControlsView::ConfigurationCapabilities v4;

  if (supportsVideo || isLegacyCall)
    v4 = ConversationKit_InCallControlsView_ConfigurationCapabilities_videoNoEffects;
  else
    v4 = ConversationKit_InCallControlsView_ConfigurationCapabilities_audioOnly;
  if (supportsCinematicFraming || supportsEffects)
    return !supportsCinematicFraming;
  else
    return v4;
}

void InCallControlsView.JoinLeaveConfiguration.hashValue.getter(unsigned __int8 a1)
{
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1);
  Hasher._finalize()();
  OUTLINED_FUNCTION_26_11();
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance InCallControlsView.JoinLeaveConfiguration()
{
  unsigned __int8 *v0;
  Swift::UInt v1;

  v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  Hasher._finalize()();
  OUTLINED_FUNCTION_26_11();
}

uint64_t key path getter for InCallControlsView.dataSource : InCallControlsView@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *a1 + OBJC_IVAR____TtC15ConversationKit18InCallControlsView_dataSource;
  swift_beginAccess();
  result = MEMORY[0x1C3B752C0](v3);
  v5 = *(_QWORD *)(v3 + 8);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t key path setter for InCallControlsView.dataSource : InCallControlsView(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *a2 + OBJC_IVAR____TtC15ConversationKit18InCallControlsView_dataSource;
  swift_beginAccess();
  *(_QWORD *)(v3 + 8) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t InCallControlsView.dataSource.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit18InCallControlsView_dataSource;
  OUTLINED_FUNCTION_1();
  return MEMORY[0x1C3B752C0](v1);
}

void InCallControlsView.dataSource.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + OBJC_IVAR____TtC15ConversationKit18InCallControlsView_dataSource;
  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_9_0();
}

void InCallControlsView.dataSource.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC15ConversationKit18InCallControlsView_dataSource;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  OUTLINED_FUNCTION_2_0();
  v6 = MEMORY[0x1C3B752C0](v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  OUTLINED_FUNCTION_18();
}

id InCallControlsView.effectsButton.getter()
{
  return OUTLINED_FUNCTION_7(OBJC_IVAR____TtC15ConversationKit18InCallControlsView_effectsButton);
}

id InCallControlsView.muteButton.getter()
{
  return OUTLINED_FUNCTION_7(OBJC_IVAR____TtC15ConversationKit18InCallControlsView_muteButton);
}

id InCallControlsView.flipCameraButton.getter()
{
  return OUTLINED_FUNCTION_7(OBJC_IVAR____TtC15ConversationKit18InCallControlsView_flipCameraButton);
}

id InCallControlsView.joinLeaveButton.getter()
{
  return OUTLINED_FUNCTION_7(OBJC_IVAR____TtC15ConversationKit18InCallControlsView_joinLeaveButton);
}

id InCallControlsView.screenShareButton.getter()
{
  return OUTLINED_FUNCTION_7(OBJC_IVAR____TtC15ConversationKit18InCallControlsView_screenShareButton);
}

id InCallControlsView.audioRouteButton.getter()
{
  return OUTLINED_FUNCTION_7(OBJC_IVAR____TtC15ConversationKit18InCallControlsView_audioRouteButton);
}

id InCallControlsView.toggleCameraButton.getter()
{
  return OUTLINED_FUNCTION_7(OBJC_IVAR____TtC15ConversationKit18InCallControlsView_toggleCameraButton);
}

id InCallControlsView.toggleCinematicFramingButton.getter()
{
  return OUTLINED_FUNCTION_7(OBJC_IVAR____TtC15ConversationKit18InCallControlsView_toggleCinematicFramingButton);
}

uint64_t InCallControlsView.buttonsByRow.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t InCallControlsView.joinLeaveConfiguration.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC15ConversationKit18InCallControlsView_joinLeaveConfiguration);
  OUTLINED_FUNCTION_1();
  return *v1;
}

uint64_t key path getter for InCallControlsView.joinLeaveConfiguration : InCallControlsView@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC15ConversationKit18InCallControlsView_joinLeaveConfiguration);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void InCallControlsView.joinLeaveConfiguration.setter(unsigned __int8 a1)
{
  uint64_t v1;
  unsigned __int8 *v3;
  unsigned __int8 v4;

  v3 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC15ConversationKit18InCallControlsView_joinLeaveConfiguration);
  OUTLINED_FUNCTION_2_0();
  v4 = *v3;
  *v3 = a1;
  InCallControlsView.joinLeaveConfiguration.didset(v4);
  OUTLINED_FUNCTION_9_0();
}

uint64_t InCallControlsView.joinLeaveConfiguration.didset(unsigned __int8 a1)
{
  uint64_t v1;
  unsigned __int8 *v3;
  uint64_t result;
  int v5;

  v3 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC15ConversationKit18InCallControlsView_joinLeaveConfiguration);
  result = swift_beginAccess();
  v5 = *v3;
  if (v5 != a1)
    return InCallControlsView.JoinLeaveConfiguration.configure(_:)(*(_QWORD **)(v1 + OBJC_IVAR____TtC15ConversationKit18InCallControlsView_joinLeaveButton), v5);
  return result;
}

uint64_t InCallControlsView.JoinLeaveConfiguration.configure(_:)(_QWORD *a1, char a2)
{
  _QWORD *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  unint64_t v8;
  const char *v9;
  void *v10;
  id v11;
  id v12;
  unint64_t v13;
  Swift::String_optional v14;
  Swift::String v15;
  uint64_t v16;
  Swift::String v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  Swift::String v22;
  Swift::String_optional v23;
  Swift::String v24;
  Swift::String v25;
  uint64_t (*v26)(uint64_t);
  uint64_t v27;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  void *v33;
  __int16 v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  Swift::String v38;

  v3 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  if (!a2)
  {
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
    v10 = (void *)*MEMORY[0x1E0DC4B60];
    v30 = 0x69662E6F65646976;
    v31 = 0xEA00000000006C6CLL;
    v32 = 3;
    v33 = v10;
    v34 = 0;
    v35 = 4;
    v36 = 0;
    v37 = 0;
    v11 = v10;
    v12 = static UIImage.symbolImage(for:)((uint64_t)&v30);

    swift_bridgeObjectRelease();
    (*(void (**)(id))((*v3 & *a1) + 0x120))(v12);
    v7 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
    v8 = 0xD00000000000001FLL;
    v29 = 0xE000000000000000;
    v9 = "DRAWER_REQUEST_JOIN_CALL_BUTTON";
LABEL_5:
    v13 = (unint64_t)(v9 - 32) | 0x8000000000000000;
    v14.value._countAndFlagsBits = 0x61737265766E6F43;
    v14.value._object = (void *)0xEF74694B6E6F6974;
    v15._countAndFlagsBits = 0;
    v15._object = (void *)0xE000000000000000;
    v16 = 0;
    v17 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v8, v14, (NSBundle)v7, v15, *(Swift::String *)(&v29 - 1));

    (*(void (**)(uint64_t, void *))((*v3 & *a1) + 0x170))(v17._countAndFlagsBits, v17._object);
    if (one-time initialization token for joinButton == -1)
      goto LABEL_8;
    goto LABEL_9;
  }
  if (a2 == 1)
  {
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
    v4 = (void *)*MEMORY[0x1E0DC4B60];
    v30 = 0x69662E6F65646976;
    v31 = 0xEA00000000006C6CLL;
    v32 = 3;
    v33 = v4;
    v34 = 0;
    v35 = 4;
    v36 = 0;
    v37 = 0;
    v5 = v4;
    v6 = static UIImage.symbolImage(for:)((uint64_t)&v30);

    swift_bridgeObjectRelease();
    (*(void (**)(id))((*v3 & *a1) + 0x120))(v6);
    v7 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
    v8 = 0xD000000000000017;
    v29 = 0xE000000000000000;
    v9 = "DRAWER_JOIN_CALL_BUTTON";
    goto LABEL_5;
  }
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
  v18 = (void *)*MEMORY[0x1E0DC4B58];
  v30 = 0x6B72616D78;
  v31 = 0xE500000000000000;
  v32 = 3;
  v33 = v18;
  v34 = 0;
  v35 = 6;
  v36 = 0;
  v37 = 0;
  v19 = v18;
  v20 = static UIImage.symbolImage(for:)((uint64_t)&v30);

  swift_bridgeObjectRelease();
  (*(void (**)(id))((*v3 & *a1) + 0x120))(v20);
  v21 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v38._object = (void *)0xE000000000000000;
  v22._object = (void *)0x80000001BD67C620;
  v22._countAndFlagsBits = 0xD000000000000016;
  v23.value._countAndFlagsBits = 0x61737265766E6F43;
  v23.value._object = (void *)0xEF74694B6E6F6974;
  v24._countAndFlagsBits = 0;
  v24._object = (void *)0xE000000000000000;
  v38._countAndFlagsBits = 0;
  v25 = NSLocalizedString(_:tableName:bundle:value:comment:)(v22, v23, (NSBundle)v21, v24, v38);

  (*(void (**)(uint64_t, void *))((*v3 & *a1) + 0x170))(v25._countAndFlagsBits, v25._object);
  if (one-time initialization token for leaveButton != -1)
LABEL_9:
    swift_once();
LABEL_8:
  v26 = *(uint64_t (**)(uint64_t))((*v3 & *a1) + 0x188);
  v27 = swift_bridgeObjectRetain();
  return v26(v27);
}

void InCallControlsView.joinLeaveConfiguration.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  _BYTE *v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit18InCallControlsView_joinLeaveConfiguration);
  OUTLINED_FUNCTION_1();
  *((_BYTE *)v3 + 32) = *v4;
  OUTLINED_FUNCTION_18();
}

void InCallControlsView.joinLeaveConfiguration.modify(uint64_t a1)
{
  void *v1;

  v1 = *(void **)a1;
  InCallControlsView.joinLeaveConfiguration.setter(*(_BYTE *)(*(_QWORD *)a1 + 32));
  free(v1);
}

void InCallControlsView.__allocating_init(capabilities:)(char a1)
{
  OUTLINED_FUNCTION_12_3();
  InCallControlsView.init(frame:capabilities:)(a1);
}

void InCallControlsView.__allocating_init(frame:capabilities:)(char a1)
{
  OUTLINED_FUNCTION_17_7();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_15_0();
  InCallControlsView.init(frame:capabilities:)(a1);
}

void InCallControlsView.init(frame:capabilities:)(char a1)
{
  char *v1;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_17_7();
  OUTLINED_FUNCTION_15_6();
  OUTLINED_FUNCTION_18_1(OBJC_IVAR____TtC15ConversationKit18InCallControlsView_dataSource);
  v3 = OBJC_IVAR____TtC15ConversationKit18InCallControlsView_effectsButton;
  OUTLINED_FUNCTION_80_7();
  v4 = v1;
  OUTLINED_FUNCTION_72_13();
  *(_QWORD *)&v1[v3] = OUTLINED_FUNCTION_76_3();
  v5 = OBJC_IVAR____TtC15ConversationKit18InCallControlsView_muteButton;
  OUTLINED_FUNCTION_56_20();
  *(_QWORD *)&v4[v5] = OUTLINED_FUNCTION_1_85();
  v6 = OBJC_IVAR____TtC15ConversationKit18InCallControlsView_flipCameraButton;
  OUTLINED_FUNCTION_14_65();
  *(_QWORD *)&v4[v6] = OUTLINED_FUNCTION_1_85();
  v7 = OBJC_IVAR____TtC15ConversationKit18InCallControlsView_joinLeaveButton;
  OUTLINED_FUNCTION_72_13();
  OUTLINED_FUNCTION_67_9();
  *(_QWORD *)&v4[v7] = OUTLINED_FUNCTION_1_85();
  v8 = OBJC_IVAR____TtC15ConversationKit18InCallControlsView_screenShareButton;
  OUTLINED_FUNCTION_56_20();
  *(_QWORD *)&v4[v8] = OUTLINED_FUNCTION_1_85();
  v9 = OBJC_IVAR____TtC15ConversationKit18InCallControlsView_toggleCinematicFramingButton;
  OUTLINED_FUNCTION_71_14();
  OUTLINED_FUNCTION_67_9();
  *(_QWORD *)&v4[v9] = OUTLINED_FUNCTION_1_85();
  v4[OBJC_IVAR____TtC15ConversationKit18InCallControlsView_joinLeaveConfiguration] = 2;
  __asm { BR              X11 }
}

void sub_1BD207298(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, int a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,id a26,uint64_t a27,id a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56)
{
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  double v62;
  void *v64;
  uint64_t v65;
  void *v66;
  char **v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  unint64_t v78;
  uint64_t v79;
  id v80;
  char **v81;
  uint64_t v82;
  char *v83;
  void *v84;
  void *v85;
  uint64_t v86;
  void *v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  BOOL v93;
  uint64_t v94;
  uint64_t v96;
  unint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t i;
  char *v101;
  void *v102;
  void *v103;
  id v104;
  id v105;
  uint64_t v106;
  id v107;
  char **v108;
  double v109;
  objc_super *v110;
  SEL v111;
  char *v112;
  _QWORD *v113;
  void (*v114)(char *, _UNKNOWN **);
  char *v115;
  _QWORD *v116;
  char *v117;
  _QWORD *v118;
  id v119;
  id v120;
  id v121;
  id v122;
  uint64_t v123;
  id v124;
  id v125;
  id v126;
  uint64_t v127;
  id v128;
  id v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  void *v133;
  void *v134;
  void *v135;
  uint64_t v136;
  void *v137;
  char *v138;
  char **v139;
  void *v140;
  void *v141;
  _QWORD v142[25];

  *(_QWORD *)(v61 - 152) = v58;
  *(_QWORD *)(v61 - 144) = v56;
  *(_BYTE *)(v61 - 176) = 0;
  OUTLINED_FUNCTION_14_65();
  v133 = (void *)OUTLINED_FUNCTION_1_85();
  *(_QWORD *)&v138[*(_QWORD *)(v57 + 3744)] = v133;
  OUTLINED_FUNCTION_5_76();
  LOWORD(v132) = 1;
  v64 = (void *)OUTLINED_FUNCTION_1_85();
  *(_QWORD *)&v138[*(_QWORD *)(v60 + 3736)] = v64;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v65 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v65 + 16) = *(_OWORD *)(v59 + 3632);
  v67 = v139;
  v66 = v141;
  *(_QWORD *)(v65 + 32) = v134;
  *(_QWORD *)(v65 + 40) = v141;
  *(_QWORD *)(v65 + 48) = v135;
  *(_QWORD *)(v65 + 56) = v137;
  *(_QWORD *)(v65 + 64) = v139;
  OUTLINED_FUNCTION_15_60(v65);
  v68 = *(_QWORD *)(v61 - 176);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<[InCallControlButton]>);
  v69 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v69 + 16) = xmmword_1BD646740;
  *(_QWORD *)(v69 + 32) = v68;
  v70 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v70 + 16) = xmmword_1BD6441C0;
  *(_QWORD *)(v70 + 32) = v133;
  *(_QWORD *)(v70 + 40) = v64;
  OUTLINED_FUNCTION_15_60(v70);
  *(_QWORD *)(v69 + 40) = *(_QWORD *)(v61 - 176);
  v71 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v71 + 16) = xmmword_1BD6443F0;
  *(_QWORD *)(v71 + 32) = a1;
  *(_QWORD *)(v61 - 176) = v71;
  specialized Array._endMutation()();
  *(_QWORD *)(v69 + 48) = *(_QWORD *)(v61 - 176);
  *(_QWORD *)&v138[OBJC_IVAR____TtC15ConversationKit18InCallControlsView_buttonsByRow] = v69;
  v72 = v134;
  v73 = v135;
  v74 = v137;
  v75 = v133;
  v76 = v64;
  v77 = a1;
  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, 1, v69);
  v78 = *(_QWORD *)(v69 + 32);
  if (v78 >> 62)
    goto LABEL_51;
  v79 = *(_QWORD *)((v78 & 0xFFFFFFFFFFFFF8) + 0x10);
  v80 = v141;
  v81 = v139;
  OUTLINED_FUNCTION_5_0();
  while (1)
  {
    if (v79)
    {
      if (v79 < 1)
      {
LABEL_61:
        __break(1u);
        goto LABEL_62;
      }
      v82 = 0;
      v67 = &selRef_associatedAppBundleIdentifier;
      do
      {
        if ((v78 & 0xC000000000000001) != 0)
          v83 = (char *)MEMORY[0x1C3B73D18](v82, v78);
        else
          v83 = (char *)OUTLINED_FUNCTION_5_6(v78 + 8 * v82);
        v84 = v83;
        v85 = *(void **)&v83[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_label];
        if (v85)
        {
          objc_msgSend(*(id *)&v83[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_label], sel_setTextAlignment_, 1, v132);
          objc_msgSend(v85, sel_setNumberOfLines_, 2);
        }
        ++v82;

      }
      while (v79 != v82);
    }
    OUTLINED_FUNCTION_27();
    v86 = *(_QWORD *)&v138[OBJC_IVAR____TtC15ConversationKit18InCallControlsView_buttonsByRow];
    v87 = *(void **)(v86 + 16);
    v88 = MEMORY[0x1E0DEE9D8];
    if (!v87)
      goto LABEL_31;
    v136 = OBJC_IVAR____TtC15ConversationKit18InCallControlsView_buttonsByRow;
    *(_QWORD *)(v61 - 176) = MEMORY[0x1E0DEE9D8];
    OUTLINED_FUNCTION_124();
    v78 = v61 - 176;
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    v66 = 0;
    v89 = *(_QWORD *)(v61 - 176);
    v140 = v87;
LABEL_14:
    v90 = *(_QWORD *)(v86 + 32 + 8 * (_QWORD)v66);
    if (v90 >> 62)
    {
      OUTLINED_FUNCTION_16_31();
      v91 = OUTLINED_FUNCTION_188();
      OUTLINED_FUNCTION_2_1();
      if (v91 < 0)
        goto LABEL_48;
    }
    else
    {
      v91 = *(_QWORD *)((v90 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
    }
    if (__OFADD__(v91, 1))
      goto LABEL_49;
    v142[0] = v88;
    v78 = (unint64_t)v142;
    specialized ContiguousArray.reserveCapacity(_:)();
    if (v91 + 1 < 0)
      goto LABEL_50;
    v92 = 0;
    v93 = 0;
    v66 = (char *)v66 + 1;
    v94 = -1;
    while (v91 != v94)
    {
      if (v93)
      {
        __break(1u);
        goto LABEL_61;
      }
      objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC39A0]), sel_init);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      v67 = *(char ***)(v142[0] + 16);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      v78 = (unint64_t)v142;
      specialized ContiguousArray._endMutation()();
      v93 = v92 == v91;
      if (v92 == v91)
      {
        v92 = 0;
      }
      else if (__OFADD__(v92++, 1))
      {
        goto LABEL_47;
      }
      if (v91 == ++v94)
      {
        v96 = v142[0];
        OUTLINED_FUNCTION_2_1();
        *(_QWORD *)(v61 - 176) = v89;
        v97 = *(_QWORD *)(v89 + 16);
        if (v97 >= *(_QWORD *)(v89 + 24) >> 1)
        {
          v78 = v61 - 176;
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          v89 = *(_QWORD *)(v61 - 176);
        }
        *(_QWORD *)(v89 + 16) = v97 + 1;
        *(_QWORD *)(v89 + 8 * v97 + 32) = v96;
        if (v66 == v140)
        {
          swift_bridgeObjectRelease();
          v86 = *(_QWORD *)&v138[v136];
LABEL_31:
          OUTLINED_FUNCTION_31_36();
          v98 = *(_QWORD *)(v86 + 32);
          *(_QWORD *)(v61 - 176) = v88;
          if (!(v98 >> 62))
          {
            v99 = *(_QWORD *)((v98 & 0xFFFFFFFFFFFFF8) + 0x10);
            OUTLINED_FUNCTION_16_31();
            if (v99)
              goto LABEL_33;
LABEL_53:
            OUTLINED_FUNCTION_133();
            v106 = MEMORY[0x1E0DEE9D8];
LABEL_54:
            OUTLINED_FUNCTION_133();
            *(_QWORD *)&v138[OBJC_IVAR____TtC15ConversationKit18InCallControlsView_buttonLabelWidthConstraints] = v106;

            v109 = OUTLINED_FUNCTION_15_0();
            v112 = (char *)objc_msgSendSuper2(v110, v111, v109);
            v113 = *(_QWORD **)&v112[OBJC_IVAR____TtC15ConversationKit18InCallControlsView_audioRouteButton];
            v114 = *(void (**)(char *, _UNKNOWN **))((*MEMORY[0x1E0DEEDD8] & *v113) + 0x1B8);
            v115 = v112;
            v116 = v113;
            v114(v112, &protocol witness table for InCallControlsView);

            v117 = &v115[OBJC_IVAR____TtC15ConversationKit18InCallControlsView_joinLeaveConfiguration];
            OUTLINED_FUNCTION_1();
            LOBYTE(v117) = *v117;
            v118 = *(id *)&v115[OBJC_IVAR____TtC15ConversationKit18InCallControlsView_joinLeaveButton];
            InCallControlsView.JoinLeaveConfiguration.configure(_:)(v118, (char)v117);

            v142[0] = *(_QWORD *)&v115[OBJC_IVAR____TtC15ConversationKit18InCallControlsView_buttonLabelWidthConstraints];
            v119 = objc_allocWithZone(MEMORY[0x1E0DC39A0]);
            OUTLINED_FUNCTION_124();
            v120 = OUTLINED_FUNCTION_5_39((uint64_t)objc_msgSend(v115, sel_addLayoutGuide_, objc_msgSend(v119, sel_init)), sel_leadingAnchor);
            v121 = objc_msgSend(v115, sel_leadingAnchor);
            v122 = OUTLINED_FUNCTION_4_24((uint64_t)v121, sel_constraintEqualToAnchor_);
            OUTLINED_FUNCTION_48_25();

            v124 = OUTLINED_FUNCTION_5_39(v123, sel_trailingAnchor);
            v125 = objc_msgSend(v115, sel_trailingAnchor);
            v126 = OUTLINED_FUNCTION_4_24((uint64_t)v125, sel_constraintEqualToAnchor_);

            v128 = OUTLINED_FUNCTION_5_39(v127, sel_heightAnchor);
            v129 = objc_msgSend(v128, sel_constraintEqualToConstant_, 0.0);

            OUTLINED_FUNCTION_50_23();
            if (v130)
            {
              OUTLINED_FUNCTION_17_20();
              OUTLINED_FUNCTION_25_3();
              OUTLINED_FUNCTION_7_15();
            }
            else
            {
              OUTLINED_FUNCTION_49_26();
            }
            if (!__OFADD__(v125, 3))
            {
              OUTLINED_FUNCTION_83_9((uint64_t)v125 + 3);
              OUTLINED_FUNCTION_4_78();
              v131 = v112;
              OUTLINED_FUNCTION_7_78();
            }
            __break(1u);
            JUMPOUT(0x1BD207FB8);
          }
          OUTLINED_FUNCTION_16_31();
          v99 = OUTLINED_FUNCTION_188();
          if (!v99)
            goto LABEL_53;
LABEL_33:
          if (v99 >= 1)
          {
            for (i = 0; i != v99; ++i)
            {
              if ((v98 & 0xC000000000000001) != 0)
                v101 = (char *)MEMORY[0x1C3B73D18](i, v98);
              else
                v101 = (char *)OUTLINED_FUNCTION_5_6(v98 + 8 * i);
              v102 = v101;
              v103 = *(void **)&v101[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_label];
              if (v103)
              {
                v104 = objc_msgSend(v103, sel_widthAnchor);
                v105 = objc_msgSend(v104, sel_constraintEqualToConstant_, v62);

                if (v105)
                {
                  MEMORY[0x1C3B7301C]();
                  if (*(_QWORD *)((*(_QWORD *)(v61 - 176) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v61 - 176) & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
                    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
                  OUTLINED_FUNCTION_77_8();
                  specialized Array._endMutation()();
                }
              }
              else
              {

              }
            }
            OUTLINED_FUNCTION_133();
            v106 = *(_QWORD *)(v61 - 176);
            goto LABEL_54;
          }
LABEL_62:
          __break(1u);
          JUMPOUT(0x1BD209224);
        }
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
LABEL_51:
    v107 = v66;
    v108 = v67;
    OUTLINED_FUNCTION_5_0();
    v79 = OUTLINED_FUNCTION_188();
  }
}

void sub_1BD209274(uint64_t a1)
{
  id v2;

  OUTLINED_FUNCTION_27();
  v2 = *(id *)(a1 + OBJC_IVAR____TtC15ConversationKit19InCallControlButton_label);
  swift_unknownObjectRelease();
  JUMPOUT(0x1BD2085E4);
}

uint64_t InCallControlsView.__allocating_init(coder:)(uint64_t a1)
{
  uint64_t v1;

  objc_msgSend(OUTLINED_FUNCTION_12_3(), sel_initWithCoder_, a1);
  OUTLINED_FUNCTION_49_5();
  return v1;
}

void InCallControlsView.init(coder:)()
{
  _BYTE *v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  Swift::String v15;
  Swift::String_optional v16;
  Swift::String v17;
  uint64_t v18;
  Swift::String v19;

  OUTLINED_FUNCTION_18_1(OBJC_IVAR____TtC15ConversationKit18InCallControlsView_dataSource);
  v1 = OBJC_IVAR____TtC15ConversationKit18InCallControlsView_effectsButton;
  OUTLINED_FUNCTION_80_7();
  v2 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  OUTLINED_FUNCTION_27_3(0xD000000000000015, 0x80000001BD67C5C0);
  OUTLINED_FUNCTION_11_12();
  v3 = OUTLINED_FUNCTION_76_3();
  *(_QWORD *)&v0[v1] = v3;
  v4 = OBJC_IVAR____TtC15ConversationKit18InCallControlsView_muteButton;
  v5 = OUTLINED_FUNCTION_9(v3, sel_conversationKit);
  OUTLINED_FUNCTION_27_3(0xD000000000000018, 0x80000001BD67C5E0);
  OUTLINED_FUNCTION_11_12();
  v6 = OUTLINED_FUNCTION_1_85();
  *(_QWORD *)&v0[v4] = v6;
  v7 = OBJC_IVAR____TtC15ConversationKit18InCallControlsView_flipCameraButton;
  v8 = OUTLINED_FUNCTION_9(v6, sel_conversationKit);
  OUTLINED_FUNCTION_27_3(0xD000000000000019, 0x80000001BD67C600);
  OUTLINED_FUNCTION_11_12();
  v9 = OUTLINED_FUNCTION_1_85();
  *(_QWORD *)&v0[v7] = v9;
  v10 = OBJC_IVAR____TtC15ConversationKit18InCallControlsView_joinLeaveButton;
  v11 = OUTLINED_FUNCTION_9(v9, sel_conversationKit);
  OUTLINED_FUNCTION_27_3(0xD000000000000016, 0x80000001BD67C620);
  OUTLINED_FUNCTION_11_12();
  v12 = OUTLINED_FUNCTION_1_85();
  *(_QWORD *)&v0[v10] = v12;
  v13 = OBJC_IVAR____TtC15ConversationKit18InCallControlsView_screenShareButton;
  v14 = OUTLINED_FUNCTION_9(v12, sel_conversationKit);
  v19._object = (void *)0xE000000000000000;
  v15._object = (void *)0x80000001BD67C640;
  v15._countAndFlagsBits = 0xD000000000000018;
  v16.value._countAndFlagsBits = 0x61737265766E6F43;
  v16.value._object = (void *)0xEF74694B6E6F6974;
  v17._countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  v19._countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v15, v16, (NSBundle)v14, v17, v19);

  *(_QWORD *)&v0[v13] = OUTLINED_FUNCTION_1_85();
  v18 = OBJC_IVAR____TtC15ConversationKit18InCallControlsView_toggleCinematicFramingButton;
  OUTLINED_FUNCTION_71_14();
  *(_QWORD *)&v0[v18] = OUTLINED_FUNCTION_1_85();
  v0[OBJC_IVAR____TtC15ConversationKit18InCallControlsView_joinLeaveConfiguration] = 2;

  OUTLINED_FUNCTION_39_34();
  __break(1u);
}

Swift::Void __swiftcall InCallControlsView.layoutSubviews()()
{
  objc_class *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  double v6;
  double v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  id v12;
  void *v13;
  objc_super v14;

  v2 = OUTLINED_FUNCTION_15_6();
  v3 = *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit18InCallControlsView_buttonsByRow];
  if (*(_QWORD *)(v3 + 16))
  {
    v0 = (objc_class *)v2;
    v4 = *(_QWORD *)(v3 + 32);
    if (!(v4 >> 62))
    {
      v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_4;
    }
  }
  else
  {
    __break(1u);
  }
  OUTLINED_FUNCTION_44_0();
  v5 = _CocoaArrayWrapper.endIndex.getter();
  OUTLINED_FUNCTION_2_1();
LABEL_4:
  objc_msgSend(v1, sel_bounds);
  v7 = v6;
  v8 = *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit18InCallControlsView_buttonLabelWidthConstraints];
  if (!(v8 >> 62))
  {
    v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_6;
LABEL_12:
    OUTLINED_FUNCTION_2_1();
    v14.receiver = v1;
    v14.super_class = v0;
    objc_msgSendSuper2(&v14, sel_layoutSubviews);
    return;
  }
  OUTLINED_FUNCTION_44_0();
  v9 = _CocoaArrayWrapper.endIndex.getter();
  if (!v9)
    goto LABEL_12;
LABEL_6:
  if (v9 >= 1)
  {
    v10 = 0;
    v11 = (v7 + (double)v5 * -10.0 + -10.0) / (double)v5;
    do
    {
      if ((v8 & 0xC000000000000001) != 0)
        v12 = (id)MEMORY[0x1C3B73D18](v10, v8);
      else
        v12 = OUTLINED_FUNCTION_5_6(v8 + 8 * v10);
      v13 = v12;
      ++v10;
      objc_msgSend(v12, sel_setConstant_, v11);

    }
    while (v9 != v10);
    goto LABEL_12;
  }
  __break(1u);
}

id InCallControlsView.__allocating_init(frame:)()
{
  Class v0;
  id v1;
  double v2;
  id v3;
  SEL v4;

  OUTLINED_FUNCTION_17_7();
  v1 = objc_allocWithZone(v0);
  v2 = OUTLINED_FUNCTION_15_0();
  return objc_msgSend(v3, v4, v2);
}

void InCallControlsView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id InCallControlsView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)OUTLINED_FUNCTION_15_6();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void InCallControlsView.menu(for:)(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  void (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);
  id v9;

  OUTLINED_FUNCTION_80_7();
  v3 = swift_dynamicCastClass();
  if (v3)
  {
    v4 = v3;
    v5 = v1 + OBJC_IVAR____TtC15ConversationKit18InCallControlsView_dataSource;
    OUTLINED_FUNCTION_1();
    if (MEMORY[0x1C3B752C0](v5))
    {
      v6 = *(_QWORD *)(v5 + 8);
      ObjectType = swift_getObjectType();
      v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 8);
      v9 = a1;
      v8(v1, v4, ObjectType, v6);
      swift_unknownObjectRelease();

    }
  }
  OUTLINED_FUNCTION_26_11();
}

unint64_t lazy protocol witness table accessor for type InCallControlsView.JoinLeaveConfiguration and conformance InCallControlsView.JoinLeaveConfiguration()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type InCallControlsView.JoinLeaveConfiguration and conformance InCallControlsView.JoinLeaveConfiguration;
  if (!lazy protocol witness table cache variable for type InCallControlsView.JoinLeaveConfiguration and conformance InCallControlsView.JoinLeaveConfiguration)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for InCallControlsView.JoinLeaveConfiguration, &type metadata for InCallControlsView.JoinLeaveConfiguration);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type InCallControlsView.JoinLeaveConfiguration and conformance InCallControlsView.JoinLeaveConfiguration);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type InCallControlsView.ConfigurationCapabilities and conformance InCallControlsView.ConfigurationCapabilities()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type InCallControlsView.ConfigurationCapabilities and conformance InCallControlsView.ConfigurationCapabilities;
  if (!lazy protocol witness table cache variable for type InCallControlsView.ConfigurationCapabilities and conformance InCallControlsView.ConfigurationCapabilities)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for InCallControlsView.ConfigurationCapabilities, &type metadata for InCallControlsView.ConfigurationCapabilities);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type InCallControlsView.ConfigurationCapabilities and conformance InCallControlsView.ConfigurationCapabilities);
  }
  return result;
}

void sub_1BD209B50(unsigned __int8 *a1)
{
  InCallControlsView.joinLeaveConfiguration.setter(*a1);
}

uint64_t dispatch thunk of InCallControlsViewDataSource.menu(for:button:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t type metadata accessor for InCallControlsView()
{
  return objc_opt_self();
}

uint64_t method lookup function for InCallControlsView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InCallControlsView.__allocating_init(frame:capabilities:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t storeEnumTagSinglePayload for InCallControlsView.JoinLeaveConfiguration(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BD209BFC + 4 * byte_1BD6514E5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BD209C30 + 4 * byte_1BD6514E0[v4]))();
}

uint64_t sub_1BD209C30(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD209C38(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD209C40);
  return result;
}

uint64_t sub_1BD209C4C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD209C54);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BD209C58(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD209C60(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for InCallControlsView.JoinLeaveConfiguration()
{
  return &type metadata for InCallControlsView.JoinLeaveConfiguration;
}

uint64_t storeEnumTagSinglePayload for InCallControlsView.ConfigurationCapabilities(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BD209CC8 + 4 * byte_1BD6514EF[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BD209CFC + 4 * byte_1BD6514EA[v4]))();
}

uint64_t sub_1BD209CFC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD209D04(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD209D0CLL);
  return result;
}

uint64_t sub_1BD209D18(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD209D20);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BD209D24(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD209D2C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for InCallControlsView.ConfigurationCapabilities()
{
  return &type metadata for InCallControlsView.ConfigurationCapabilities;
}

uint64_t OUTLINED_FUNCTION_39_34()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

id OUTLINED_FUNCTION_76_9(double a1, uint64_t a2, const char *a3)
{
  void *v3;
  int v4;

  LODWORD(a1) = v4;
  return objc_msgSend(v3, a3, a1);
}

Swift::Bool __swiftcall CNContactStore.hasImage(forContactId:)(Swift::String forContactId)
{
  void *v1;
  void *object;
  uint64_t countAndFlagsBits;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  Class isa;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  _QWORD *v16;
  Swift::Bool result;
  uint64_t v18;
  id v19[2];

  object = forContactId._object;
  countAndFlagsBits = forContactId._countAndFlagsBits;
  v19[1] = *(id *)MEMORY[0x1E0C80C00];
  v4 = (void *)MEMORY[0x1C3B72E00]();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v5 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v5 + 16) = xmmword_1BD6443F0;
  v6 = (void *)*MEMORY[0x1E0C96700];
  *(_QWORD *)(v5 + 32) = *MEMORY[0x1E0C96700];
  specialized Array._endMutation()();
  v7 = v6;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for CNKeyDescriptor);
  isa = Array._bridgeToObjectiveC()().super.isa;
  OUTLINED_FUNCTION_27();
  v19[0] = 0;
  v9 = objc_msgSend(v1, sel_unifiedContactWithIdentifier_keysToFetch_error_, v4, isa, v19);

  if (v9)
  {
    v10 = v19[0];
    objc_msgSend(v9, sel_imageDataAvailable);

  }
  else
  {
    v11 = v19[0];
    _convertNSErrorToError(_:)();

    swift_willThrow();
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    v12 = type metadata accessor for Logger();
    __swift_project_value_buffer(v12, (uint64_t)&static Logger.conversationKit);
    OUTLINED_FUNCTION_124();
    OUTLINED_FUNCTION_14_66();
    OUTLINED_FUNCTION_124();
    OUTLINED_FUNCTION_14_66();
    v13 = Logger.logObject.getter();
    v14 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = OUTLINED_FUNCTION_105();
      v16 = (_QWORD *)OUTLINED_FUNCTION_105();
      v19[0] = (id)OUTLINED_FUNCTION_105();
      *(_DWORD *)v15 = 141558531;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v15 + 12) = 2085;
      OUTLINED_FUNCTION_124();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(countAndFlagsBits, (unint64_t)object, (uint64_t *)v19);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v15 + 22) = 2112;
      OUTLINED_FUNCTION_14_66();
      v18 = _swift_stdlib_bridgeErrorToNSError();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *v16 = v18;
      OUTLINED_FUNCTION_2_13();
      OUTLINED_FUNCTION_2_13();
      _os_log_impl(&dword_1BD004000, v13, v14, "Error trying to fetch backing contact for identifier %{sensitive,mask.hash}s: %@", (uint8_t *)v15, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_60();
    }
    OUTLINED_FUNCTION_2_13();
    swift_bridgeObjectRelease_n();
    OUTLINED_FUNCTION_2_13();
    OUTLINED_FUNCTION_2_13();

  }
  OUTLINED_FUNCTION_8_0();
  return result;
}

id static CNContactStore.authorizationStatus.getter()
{
  return objc_msgSend((id)objc_opt_self(), sel_authorizationStatusForEntityType_, 0);
}

BOOL static CNContactStore.authorized.getter()
{
  return objc_msgSend((id)objc_opt_self(), sel_authorizationStatusForEntityType_, 0) == (id)3;
}

void CNContactStore.contactsByContactHandle(for:keyDescriptors:)(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  CNContactFetchRequest v4;
  void *v5;
  uint64_t v6;
  Class isa;
  id v8;
  uint64_t v9;
  objc_class *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  void *v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  id v27[2];

  v27[1] = *(id *)MEMORY[0x1E0C80C00];
  if (*(_QWORD *)(a1 + 16))
  {
    v2 = v1;
    OUTLINED_FUNCTION_17_8(a1, &lazy cache variable for type metadata for CNContactFetchRequest);
    v3 = OUTLINED_FUNCTION_124();
    v4.super.super.isa = CNContactFetchRequest.__allocating_init(keysToFetch:)((Swift::OpaquePointer)v3).super.super.isa;
    v5 = (void *)objc_opt_self();
    v6 = MEMORY[0x1E0DEA968];
    isa = Array._bridgeToObjectiveC()().super.isa;
    v8 = objc_msgSend(v5, sel_predicateForContactsMatchingHandleStrings_, isa);

    -[objc_class setPredicate:](v4.super.super.isa, sel_setPredicate_, v8);
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v9 = OUTLINED_FUNCTION_15();
    *(_OWORD *)(v9 + 16) = xmmword_1BD645380;
    v10 = v4.super.super.isa;
    v11 = String.init<A>(reflecting:)();
    v13 = v12;
    *(_QWORD *)(v9 + 56) = v6;
    v14 = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v9 + 64) = v14;
    *(_QWORD *)(v9 + 32) = v11;
    *(_QWORD *)(v9 + 40) = v13;
    OUTLINED_FUNCTION_17_8(v14, &lazy cache variable for type metadata for CNContactStore);
    v15 = v2;
    v16 = String.init<A>(reflecting:)();
    *(_QWORD *)(v9 + 96) = v6;
    *(_QWORD *)(v9 + 104) = v14;
    *(_QWORD *)(v9 + 72) = v16;
    *(_QWORD *)(v9 + 80) = v17;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    OUTLINED_FUNCTION_21_0();
    v27[0] = 0;
    v18 = objc_msgSend(v15, sel_executeFetchRequest_error_, v10, v27);
    if (v18)
    {
      v19 = v18;
      v20 = v27[0];
      v27[0] = objc_msgSend(v19, sel_value);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String : [CNContact]]);
      if (!swift_dynamicCast())
      {
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [CNContact]);
        Dictionary.init(dictionaryLiteral:)();
      }

    }
    else
    {
      v21 = v27[0];
      v22 = (void *)_convertNSErrorToError(_:)();

      swift_willThrow();
      static os_log_type_t.error.getter();
      v23 = OUTLINED_FUNCTION_15();
      *(_OWORD *)(v23 + 16) = xmmword_1BD6441D0;
      v27[0] = v22;
      v24 = v22;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
      v25 = String.init<A>(reflecting:)();
      *(_QWORD *)(v23 + 56) = v6;
      *(_QWORD *)(v23 + 64) = v14;
      *(_QWORD *)(v23 + 32) = v25;
      *(_QWORD *)(v23 + 40) = v26;
      os_log(_:dso:log:type:_:)();
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [CNContact]);
      Dictionary.init(dictionaryLiteral:)();

    }
    OUTLINED_FUNCTION_8_0();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [CNContact]);
    OUTLINED_FUNCTION_8_0();
    Dictionary.init(dictionaryLiteral:)();
  }
}

CNContactFetchRequest __swiftcall CNContactFetchRequest.__allocating_init(keysToFetch:)(Swift::OpaquePointer keysToFetch)
{
  id v1;
  Class isa;
  id v3;

  v1 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for CNKeyDescriptor);
  isa = Array._bridgeToObjectiveC()().super.isa;
  OUTLINED_FUNCTION_13_3();
  v3 = objc_msgSend(v1, sel_initWithKeysToFetch_, isa);

  return (CNContactFetchRequest)v3;
}

Class @objc CNContactStore.contactsByContactHandle(for:keyDescriptors:)(void *a1)
{
  uint64_t v2;
  id v3;
  Class isa;

  v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for CNKeyDescriptor);
  static Array._unconditionallyBridgeFromObjectiveC(_:)();
  v3 = a1;
  CNContactStore.contactsByContactHandle(for:keyDescriptors:)(v2);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [CNContact]);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  return isa;
}

uint64_t CNContactStore.contactsByHandle(for:keyDescriptors:)(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  id v6;
  BOOL v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  Class isa;
  Class v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  int64_t v43;
  int64_t i;
  unint64_t v45;
  unint64_t v46;
  int64_t v47;
  unint64_t v48;
  int64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  id v58;
  void *v59;
  id v60;
  unint64_t v61;
  char v62;
  char isUniquelyReferenced_nonNull_native;
  void *v64;
  unint64_t v65;
  char v66;
  uint64_t v67;
  _BOOL8 v68;
  Swift::Int v69;
  unint64_t v70;
  char v71;
  Swift::Bool v72;
  unint64_t v73;
  uint64_t v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  char v79;
  char v80;
  Swift::Int v81;
  Swift::Bool v82;
  uint64_t v83;
  uint64_t v84;
  id v85;
  int64_t v87;
  int64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t v95;
  id v96;
  unint64_t v97;
  unint64_t v98;
  uint64_t v99;
  void *v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD *v103;
  uint64_t v104;

  v1 = a1;
  if (a1 >> 62)
    goto LABEL_101;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v2)
  {
LABEL_3:
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [TUHandle]);
    v3 = Dictionary.init(dictionaryLiteral:)();
    v4 = v1;
    v1 = v3;
    v94 = v4 & 0xC000000000000001;
    v90 = v4 + 32;
    v92 = v4 & 0xFFFFFFFFFFFFFF8;
    v93 = v4;
    swift_bridgeObjectRetain();
    v5 = 0;
    while (1)
    {
      if (v94)
      {
        v6 = (id)MEMORY[0x1C3B73D18](v5, v93);
      }
      else
      {
        if (v5 >= *(_QWORD *)(v92 + 16))
          goto LABEL_98;
        v6 = *(id *)(v90 + 8 * v5);
      }
      v100 = v6;
      v7 = __OFADD__(v5, 1);
      v8 = v5 + 1;
      if (v7)
        goto LABEL_95;
      v98 = v8;
      v9 = CNContactStore.contactHandles(for:)(v6);
      v10 = *(_QWORD *)(v9 + 16);
      if (v10)
        break;
LABEL_35:

      swift_bridgeObjectRelease();
      v5 = v98;
      if (v98 == v2)
      {
        v32 = swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_17_8(v32, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [CNContact]);
        lazy protocol witness table accessor for type TUHandle and conformance NSObject();
        v33 = Dictionary.init(dictionaryLiteral:)();
        v34 = OUTLINED_FUNCTION_124();
        specialized _copyCollectionToContiguousArray<A>(_:)(v34);
        OUTLINED_FUNCTION_13_3();
        isa = Array._bridgeToObjectiveC()().super.isa;
        swift_release();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for CNKeyDescriptor);
        v36 = Array._bridgeToObjectiveC()().super.isa;
        v37 = objc_msgSend(v96, sel_contactsByContactHandleForContactHandles_keyDescriptors_, isa, v36);

        v38 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
        v39 = v38 + 64;
        v40 = 1 << *(_BYTE *)(v38 + 32);
        v41 = -1;
        if (v40 < 64)
          v41 = ~(-1 << v40);
        v42 = v41 & *(_QWORD *)(v38 + 64);
        v43 = (unint64_t)(v40 + 63) >> 6;
        swift_bridgeObjectRetain();
        for (i = 0; ; i = v87)
        {
          while (1)
          {
            do
            {
              if (v42)
              {
                v45 = __clz(__rbit64(v42));
                v42 &= v42 - 1;
                v46 = v45 | (i << 6);
              }
              else
              {
                v47 = i + 1;
                if (__OFADD__(i, 1))
                  goto LABEL_96;
                if (v47 >= v43)
                {
LABEL_90:
                  swift_release();
                  swift_bridgeObjectRelease();
                  OUTLINED_FUNCTION_13_3();
                  return v33;
                }
                v48 = *(_QWORD *)(v39 + 8 * v47);
                ++i;
                if (!v48)
                {
                  i = v47 + 1;
                  if (v47 + 1 >= v43)
                    goto LABEL_90;
                  v48 = *(_QWORD *)(v39 + 8 * i);
                  if (!v48)
                  {
                    i = v47 + 2;
                    if (v47 + 2 >= v43)
                      goto LABEL_90;
                    v48 = *(_QWORD *)(v39 + 8 * i);
                    if (!v48)
                    {
                      i = v47 + 3;
                      if (v47 + 3 >= v43)
                        goto LABEL_90;
                      v48 = *(_QWORD *)(v39 + 8 * i);
                      if (!v48)
                      {
                        i = v47 + 4;
                        if (v47 + 4 >= v43)
                          goto LABEL_90;
                        v48 = *(_QWORD *)(v39 + 8 * i);
                        if (!v48)
                        {
                          v49 = v47 + 5;
                          if (v49 >= v43)
                            goto LABEL_90;
                          v48 = *(_QWORD *)(v39 + 8 * v49);
                          if (!v48)
                          {
                            while (1)
                            {
                              i = v49 + 1;
                              if (__OFADD__(v49, 1))
                                break;
                              if (i >= v43)
                                goto LABEL_90;
                              v48 = *(_QWORD *)(v39 + 8 * i);
                              ++v49;
                              if (v48)
                                goto LABEL_58;
                            }
                            __break(1u);
                            while (1)
                            {
LABEL_104:
                              KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
                              __break(1u);
                            }
                          }
                          i = v49;
                        }
                      }
                    }
                  }
                }
LABEL_58:
                v42 = (v48 - 1) & v48;
                v46 = __clz(__rbit64(v48)) + (i << 6);
              }
            }
            while (!*(_QWORD *)(v1 + 16));
            v50 = (uint64_t *)(*(_QWORD *)(v38 + 48) + 16 * v46);
            v52 = *v50;
            v51 = v50[1];
            swift_bridgeObjectRetain();
            v53 = specialized __RawDictionaryStorage.find<A>(_:)(v52, v51);
            if ((v54 & 1) != 0)
              break;
            OUTLINED_FUNCTION_54_1();
          }
          v55 = *(_QWORD *)(*(_QWORD *)(v1 + 56) + 8 * v53);
          v97 = v55;
          if (v55 >> 62)
          {
            swift_bridgeObjectRetain_n();
            v99 = _CocoaArrayWrapper.endIndex.getter();
            OUTLINED_FUNCTION_27();
          }
          else
          {
            v99 = *(_QWORD *)((v55 & 0xFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain();
          }
          v87 = i;
          v88 = v43;
          v89 = v39;
          if (v99)
            break;
LABEL_88:
          OUTLINED_FUNCTION_54_1();
          OUTLINED_FUNCTION_21_0();
          v43 = v88;
          v39 = v89;
        }
        v96 = (id)v52;
        v56 = v55;
        v57 = 4;
        v91 = v38;
        while (2)
        {
          if ((v97 & 0xC000000000000001) != 0)
            v58 = (id)MEMORY[0x1C3B73D18](v57 - 4, v56);
          else
            v58 = *(id *)(v56 + 8 * v57);
          v59 = v58;
          if (__OFADD__(v57 - 4, 1))
            goto LABEL_97;
          v101 = v57 - 3;
          if (*(_QWORD *)(v38 + 16))
          {
            swift_bridgeObjectRetain();
            v60 = v59;
            v61 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)v96, v51);
            if ((v62 & 1) != 0)
            {
              v95 = *(_QWORD *)(*(_QWORD *)(v38 + 56) + 8 * v61);
              swift_bridgeObjectRetain();
              OUTLINED_FUNCTION_54_1();
              isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              v103 = (_QWORD *)v33;
              v64 = v60;
              specialized __RawDictionaryStorage.find<A>(_:)();
              v67 = *(_QWORD *)(v33 + 16);
              v68 = (v66 & 1) == 0;
              v69 = v67 + v68;
              if (__OFADD__(v67, v68))
                goto LABEL_99;
              v70 = v65;
              v71 = v66;
              __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _NativeDictionary<TUHandle, [CNContact]>);
              v72 = _NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v69);
              v56 = v97;
              if (v72)
              {
                specialized __RawDictionaryStorage.find<A>(_:)();
                OUTLINED_FUNCTION_11_63();
                if (!v23)
                  goto LABEL_104;
                v70 = v73;
              }
              v33 = (uint64_t)v103;
              if ((v71 & 1) != 0)
              {
                v74 = v103[7];
                swift_bridgeObjectRelease();
                *(_QWORD *)(v74 + 8 * v70) = v95;
              }
              else
              {
                v103[(v70 >> 6) + 8] |= 1 << v70;
                *(_QWORD *)(v103[6] + 8 * v70) = v64;
                *(_QWORD *)(v103[7] + 8 * v70) = v95;
                v83 = v103[2];
                v7 = __OFADD__(v83, 1);
                v84 = v83 + 1;
                if (v7)
                  goto LABEL_100;
                v103[2] = v84;
                v85 = v64;
              }

              OUTLINED_FUNCTION_36_2();
              v38 = v91;
LABEL_87:
              ++v57;
              if (v101 == v99)
                goto LABEL_88;
              continue;
            }
            OUTLINED_FUNCTION_54_1();
          }
          else
          {
            v75 = v58;
          }
          break;
        }
        swift_bridgeObjectRetain();
        specialized __RawDictionaryStorage.find<A>(_:)();
        v77 = v76;
        v79 = v78;
        swift_bridgeObjectRelease();
        if ((v79 & 1) != 0)
        {
          v80 = swift_isUniquelyReferenced_nonNull_native();
          v104 = v33;
          v81 = *(_QWORD *)(v33 + 24);
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _NativeDictionary<TUHandle, [CNContact]>);
          v82 = v80;
          v56 = v97;
          _NativeDictionary.ensureUnique(isUnique:capacity:)(v82, v81);
          v33 = v104;

          _NativeDictionary._delete(at:)();
          OUTLINED_FUNCTION_27();

          OUTLINED_FUNCTION_36_2();
        }
        else
        {

        }
        goto LABEL_87;
      }
    }
    v11 = v9 + 40;
    while (1)
    {
      v12 = *(_QWORD *)(v1 + 16);
      OUTLINED_FUNCTION_26_22();
      if (v12)
      {
        OUTLINED_FUNCTION_26_22();
        v13 = OUTLINED_FUNCTION_1_86();
        if ((v14 & 1) != 0)
        {
          v15 = *(_QWORD *)(*(_QWORD *)(v1 + 56) + 8 * v13);
          swift_bridgeObjectRetain();
          OUTLINED_FUNCTION_21_0();
          v16 = v100;
          MEMORY[0x1C3B7301C]();
          if (*(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          v17 = v15;
          swift_isUniquelyReferenced_nonNull_native();
          OUTLINED_FUNCTION_1_86();
          OUTLINED_FUNCTION_13_60();
          if (v7)
            goto LABEL_93;
          v20 = v18;
          v21 = v19;
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<String, [TUHandle]>);
          if (OUTLINED_FUNCTION_12_59())
          {
            OUTLINED_FUNCTION_19_47();
            OUTLINED_FUNCTION_11_63();
            if (!v23)
              goto LABEL_104;
            v20 = v22;
          }
          if ((v21 & 1) == 0)
          {
            OUTLINED_FUNCTION_0_94();
            if (v7)
              goto LABEL_94;
LABEL_33:
            *(_QWORD *)(v1 + 16) = v24;
            OUTLINED_FUNCTION_26_22();
            goto LABEL_34;
          }
          goto LABEL_31;
        }
        OUTLINED_FUNCTION_21_0();
      }
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
      v25 = OUTLINED_FUNCTION_15();
      *(_OWORD *)(v25 + 16) = xmmword_1BD6443F0;
      *(_QWORD *)(v25 + 32) = v100;
      v102 = v25;
      specialized Array._endMutation()();
      v17 = v102;
      v26 = v100;
      swift_isUniquelyReferenced_nonNull_native();
      OUTLINED_FUNCTION_1_86();
      OUTLINED_FUNCTION_13_60();
      if (v7)
      {
        __break(1u);
LABEL_92:
        __break(1u);
LABEL_93:
        __break(1u);
LABEL_94:
        __break(1u);
LABEL_95:
        __break(1u);
LABEL_96:
        __break(1u);
LABEL_97:
        __break(1u);
LABEL_98:
        __break(1u);
LABEL_99:
        __break(1u);
LABEL_100:
        __break(1u);
LABEL_101:
        swift_bridgeObjectRetain();
        v2 = _CocoaArrayWrapper.endIndex.getter();
        a1 = OUTLINED_FUNCTION_13_3();
        if (!v2)
          break;
        goto LABEL_3;
      }
      v20 = v27;
      v29 = v28;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<String, [TUHandle]>);
      if (OUTLINED_FUNCTION_12_59())
      {
        OUTLINED_FUNCTION_19_47();
        OUTLINED_FUNCTION_11_63();
        if (!v23)
          goto LABEL_104;
        v20 = v30;
      }
      if ((v29 & 1) == 0)
      {
        OUTLINED_FUNCTION_0_94();
        if (v7)
          goto LABEL_92;
        goto LABEL_33;
      }
LABEL_31:
      v31 = *(_QWORD *)(v1 + 56);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v31 + 8 * v20) = v17;
LABEL_34:
      OUTLINED_FUNCTION_21_0();
      OUTLINED_FUNCTION_36_2();
      v11 += 16;
      if (!--v10)
        goto LABEL_35;
    }
  }
  OUTLINED_FUNCTION_17_8(a1, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [CNContact]);
  lazy protocol witness table accessor for type TUHandle and conformance NSObject();
  return Dictionary.init(dictionaryLiteral:)();
}

uint64_t CNContactStore.contactHandles(for:)(void *a1)
{
  id v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[8];
  uint64_t v14;

  v14 = MEMORY[0x1E0DEE9E8];
  v2 = objc_msgSend(a1, sel_value);
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v5 = v4;

  v6 = HIBYTE(v5) & 0xF;
  if ((v5 & 0x2000000000000000) == 0)
    v6 = v3 & 0xFFFFFFFFFFFFLL;
  if (v6)
    specialized Set._Variant.insert(_:)(v13, v3, v5);
  swift_bridgeObjectRelease();
  v7 = outlined bridged method (pb) of @objc TUHandle.normalizedValue.getter(a1);
  if (v8)
  {
    v9 = HIBYTE(v8) & 0xF;
    if ((v8 & 0x2000000000000000) == 0)
      v9 = v7 & 0xFFFFFFFFFFFFLL;
    if (v9)
      specialized Set._Variant.insert(_:)(v13, v7, v8);
    swift_bridgeObjectRelease();
  }
  specialized _copyCollectionToContiguousArray<A>(_:)();
  v11 = v10;
  swift_bridgeObjectRelease();
  return v11;
}

Class @objc CNContactStore.contactsByHandle(for:keyDescriptors:)(void *a1)
{
  unint64_t v2;
  id v3;
  Class isa;

  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
  v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for CNKeyDescriptor);
  static Array._unconditionallyBridgeFromObjectiveC(_:)();
  v3 = a1;
  CNContactStore.contactsByHandle(for:keyDescriptors:)(v2);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [CNContact]);
  lazy protocol witness table accessor for type TUHandle and conformance NSObject();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  return isa;
}

uint64_t ParticipantListViewConstraintManager.__allocating_init(containingGuide:rosterView:controlsView:type:bannerLayoutGuide:rosterCellLayoutGuide:)(void *a1, void *a2, void *a3, char a4, void *a5, void *a6)
{
  uint64_t v12;

  v12 = swift_allocObject();
  ParticipantListViewConstraintManager.init(containingGuide:rosterView:controlsView:type:bannerLayoutGuide:rosterCellLayoutGuide:)(a1, a2, a3, a4, a5, a6);
  return v12;
}

BOOL static ParticipantListViewConstraintManager.ParticipantListLayoutType.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

void ParticipantListViewConstraintManager.ParticipantListLayoutType.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
  Hasher._combine(_:)(a2);
  OUTLINED_FUNCTION_0();
}

Swift::Int ParticipantListViewConstraintManager.ParticipantListLayoutType.hashValue.getter(unsigned __int8 a1)
{
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1);
  return Hasher._finalize()();
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance ParticipantListViewConstraintManager.ParticipantListLayoutType(char *a1, char *a2)
{
  return static ParticipantListViewConstraintManager.ParticipantListLayoutType.== infix(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance ParticipantListViewConstraintManager.ParticipantListLayoutType()
{
  unsigned __int8 *v0;

  return ParticipantListViewConstraintManager.ParticipantListLayoutType.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance ParticipantListViewConstraintManager.ParticipantListLayoutType(uint64_t a1)
{
  unsigned __int8 *v1;

  ParticipantListViewConstraintManager.ParticipantListLayoutType.hash(into:)(a1, *v1);
}

uint64_t ParticipantListViewConstraintManager.type.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_2_0();
  return *(unsigned __int8 *)(v0 + 104);
}

uint64_t ParticipantListViewConstraintManager.type.setter(char a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_2_0();
  *(_BYTE *)(v1 + 104) = a1;
  return ParticipantListViewConstraintManager.updateConstraints()();
}

void (*ParticipantListViewConstraintManager.type.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_2_0();
  return ParticipantListViewConstraintManager.type.modify;
}

void ParticipantListViewConstraintManager.type.modify(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    ParticipantListViewConstraintManager.updateConstraints()();
  OUTLINED_FUNCTION_0();
}

uint64_t ParticipantListViewConstraintManager.init(containingGuide:rosterView:controlsView:type:bannerLayoutGuide:rosterCellLayoutGuide:)(void *a1, void *a2, void *a3, char a4, void *a5, void *a6)
{
  uint64_t v6;
  uint64_t v7;
  id v12;
  id v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  _BOOL8 v39;
  id v40;
  id v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  id v45;
  id v46;
  id v47;
  uint64_t v48;
  id v49;
  id v50;
  id v51;
  uint64_t v52;
  id v53;
  id v54;
  uint64_t v55;
  id v56;
  void *v59;

  v7 = v6;
  *(_QWORD *)(v7 + 96) = MEMORY[0x1E0DEE9D8];
  *(_BYTE *)(v7 + 104) = a4;
  v12 = OUTLINED_FUNCTION_6_7((uint64_t)a1, sel_leadingAnchor);
  v59 = a5;
  v13 = objc_msgSend(a5, sel_trailingAnchor);
  v14 = static Layout.MediaPip.padding.getter();
  if (one-time initialization token for shared != -1)
    swift_once();
  v15 = static Defaults.shared;
  (*(void (**)(void))(*(_QWORD *)static Defaults.shared + 384))();
  v16 = static Platform.current.getter();
  (*(void (**)(uint64_t))(*(_QWORD *)v15 + 488))(v16);
  v17 = objc_msgSend(v12, sel_constraintEqualToAnchor_constant_, v13, v14);

  *(_QWORD *)(v7 + 16) = v17;
  v19 = OUTLINED_FUNCTION_6_7(v18, sel_leadingAnchor);
  v20 = OUTLINED_FUNCTION_39((uint64_t)v19, sel_leadingAnchor);
  v21 = OUTLINED_FUNCTION_1_87();
  OUTLINED_FUNCTION_45_6();

  *(_QWORD *)(v7 + 24) = v13;
  v23 = OUTLINED_FUNCTION_6_7(v22, sel_trailingAnchor);
  v24 = OUTLINED_FUNCTION_9((uint64_t)v23, sel_leadingAnchor);
  v25 = OUTLINED_FUNCTION_1_87();
  OUTLINED_FUNCTION_45_6();

  *(_QWORD *)(v7 + 32) = v13;
  v27 = OUTLINED_FUNCTION_6_7(v26, sel_topAnchor);
  v28 = OUTLINED_FUNCTION_39((uint64_t)v27, sel_topAnchor);
  OUTLINED_FUNCTION_6_63();
  v29 = OUTLINED_FUNCTION_3_82();
  OUTLINED_FUNCTION_45_6();

  *(_QWORD *)(v7 + 40) = v13;
  v31 = OUTLINED_FUNCTION_6_7(v30, sel_bottomAnchor);
  v32 = OUTLINED_FUNCTION_39((uint64_t)v31, sel_bottomAnchor);
  OUTLINED_FUNCTION_6_63();
  v33 = OUTLINED_FUNCTION_3_82();
  OUTLINED_FUNCTION_45_6();

  *(_QWORD *)(v7 + 48) = v13;
  v35 = OUTLINED_FUNCTION_6_7(v34, sel_heightAnchor);
  v36 = OUTLINED_FUNCTION_9((uint64_t)v35, sel_heightAnchor);
  OUTLINED_FUNCTION_6_63();
  v37 = OUTLINED_FUNCTION_3_82();
  OUTLINED_FUNCTION_45_6();

  *(_QWORD *)(v7 + 56) = v13;
  v38 = static Platform.current.getter();
  v39 = v38 == 0;
  v40 = OUTLINED_FUNCTION_6_7(v38, sel_topAnchor);
  v41 = OUTLINED_FUNCTION_39((uint64_t)v40, sel_topAnchor);
  v42 = OUTLINED_FUNCTION_6_63();
  v43 = OUTLINED_FUNCTION_8_70(v42, sel_constraintEqualToAnchor_constant_);
  OUTLINED_FUNCTION_45_6();

  *(_QWORD *)(v7 + 64) = v39;
  v45 = OUTLINED_FUNCTION_6_7(v44, sel_leadingAnchor);
  v46 = OUTLINED_FUNCTION_9((uint64_t)v45, sel_leadingAnchor);
  v47 = OUTLINED_FUNCTION_1_87();
  OUTLINED_FUNCTION_45_6();

  *(_QWORD *)(v7 + 72) = v39;
  v49 = OUTLINED_FUNCTION_6_7(v48, sel_trailingAnchor);
  v50 = OUTLINED_FUNCTION_9((uint64_t)v49, sel_trailingAnchor);
  v51 = OUTLINED_FUNCTION_1_87();
  OUTLINED_FUNCTION_45_6();

  *(_QWORD *)(v7 + 80) = v39;
  v53 = OUTLINED_FUNCTION_6_7(v52, sel_bottomAnchor);
  v54 = OUTLINED_FUNCTION_39((uint64_t)v53, sel_bottomAnchor);
  v55 = OUTLINED_FUNCTION_6_63();
  v56 = OUTLINED_FUNCTION_8_70(v55, (const char *)&selRef_initWithLayoutStyle_ + 7);
  OUTLINED_FUNCTION_45_6();

  *(_QWORD *)(v7 + 88) = v39;
  ParticipantListViewConstraintManager.updateConstraints()();

  return v7;
}

uint64_t ParticipantListViewConstraintManager.constraintsForLayout(_:in:deviceOrientation:)()
{
  return swift_bridgeObjectRetain();
}

uint64_t ParticipantListViewConstraintManager.updateConstraints()()
{
  _QWORD *v0;
  int v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  uint64_t v12;

  v1 = OUTLINED_FUNCTION_4_58();
  if (v1)
  {
    if (v1 != 1)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
      v2 = OUTLINED_FUNCTION_5_10();
      *(_OWORD *)(v2 + 16) = xmmword_1BD644140;
      v4 = (void *)v0[10];
      v5 = (void *)v0[11];
      v6 = (void *)v0[8];
      v3 = (void *)v0[9];
      *(_QWORD *)(v2 + 32) = v3;
      *(_QWORD *)(v2 + 40) = v4;
      goto LABEL_7;
    }
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    v2 = OUTLINED_FUNCTION_5_10();
    *(_OWORD *)(v2 + 16) = xmmword_1BD644140;
    v3 = (void *)v0[3];
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    v2 = OUTLINED_FUNCTION_5_10();
    *(_OWORD *)(v2 + 16) = xmmword_1BD644140;
    v3 = (void *)v0[2];
  }
  v4 = (void *)v0[4];
  *(_QWORD *)(v2 + 32) = v3;
  *(_QWORD *)(v2 + 40) = v4;
  v5 = (void *)v0[6];
  v6 = (void *)v0[7];
LABEL_7:
  *(_QWORD *)(v2 + 48) = v5;
  *(_QWORD *)(v2 + 56) = v6;
  v12 = v2;
  specialized Array._endMutation()();
  v0[12] = v12;
  v7 = v3;
  v8 = v4;
  v9 = v5;
  v10 = v6;
  return swift_bridgeObjectRelease();
}

id *ParticipantListViewConstraintManager.deinit()
{
  id *v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ParticipantListViewConstraintManager.__deallocating_deinit()
{
  ParticipantListViewConstraintManager.deinit();
  return swift_deallocClassInstance();
}

uint64_t protocol witness for ViewConstraintManager.constraintsForLayout(_:in:deviceOrientation:) in conformance ParticipantListViewConstraintManager()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 232))();
}

unint64_t lazy protocol witness table accessor for type ParticipantListViewConstraintManager.ParticipantListLayoutType and conformance ParticipantListViewConstraintManager.ParticipantListLayoutType()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ParticipantListViewConstraintManager.ParticipantListLayoutType and conformance ParticipantListViewConstraintManager.ParticipantListLayoutType;
  if (!lazy protocol witness table cache variable for type ParticipantListViewConstraintManager.ParticipantListLayoutType and conformance ParticipantListViewConstraintManager.ParticipantListLayoutType)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ParticipantListViewConstraintManager.ParticipantListLayoutType, &type metadata for ParticipantListViewConstraintManager.ParticipantListLayoutType);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ParticipantListViewConstraintManager.ParticipantListLayoutType and conformance ParticipantListViewConstraintManager.ParticipantListLayoutType);
  }
  return result;
}

void sub_1BD20B8D0(_BYTE *a1@<X8>)
{
  *a1 = OUTLINED_FUNCTION_4_58();
  OUTLINED_FUNCTION_0();
}

void sub_1BD20B8F4(unsigned __int8 *a1, uint64_t a2)
{
  (*(void (**)(_QWORD))(**(_QWORD **)a2 + 208))(*a1);
  OUTLINED_FUNCTION_0();
}

uint64_t type metadata accessor for ParticipantListViewConstraintManager()
{
  return objc_opt_self();
}

uint64_t method lookup function for ParticipantListViewConstraintManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ParticipantListViewConstraintManager.type.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of ParticipantListViewConstraintManager.type.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of ParticipantListViewConstraintManager.type.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of ParticipantListViewConstraintManager.__allocating_init(containingGuide:rosterView:controlsView:type:bannerLayoutGuide:rosterCellLayoutGuide:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 224))();
}

uint64_t dispatch thunk of ParticipantListViewConstraintManager.constraintsForLayout(_:in:deviceOrientation:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t storeEnumTagSinglePayload for ParticipantListViewConstraintManager.ParticipantListLayoutType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BD20B9CC + 4 * byte_1BD651695[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BD20BA00 + 4 * byte_1BD651690[v4]))();
}

uint64_t sub_1BD20BA00(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD20BA08(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD20BA10);
  return result;
}

uint64_t sub_1BD20BA1C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD20BA24);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BD20BA28(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD20BA30(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ParticipantListViewConstraintManager.ParticipantListLayoutType()
{
  return &type metadata for ParticipantListViewConstraintManager.ParticipantListLayoutType;
}

uint64_t ActivityType.iconSymbolName.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(_QWORD, _QWORD))((char *)sub_1BD20BA6C + 4 * byte_1BD6517E0[a1]))(a1, a1);
}

uint64_t sub_1BD20BA6C()
{
  return 6516580;
}

uint64_t sub_1BD20BA7C()
{
  return 0x6F6E2E636973756DLL;
}

uint64_t sub_1BD20BA98()
{
  return 0x76742E79616C70;
}

uint64_t sub_1BD20BAB0()
{
  return 0x722E657275676966;
}

unint64_t sub_1BD20BAD0()
{
  return 0xD000000000000028;
}

uint64_t sub_1BD20BAEC()
{
  return 0x74656B636F72;
}

uint64_t sub_1BD20BB00()
{
  return 6775138;
}

uint64_t sub_1BD20BB10()
{
  return 1802465122;
}

uint64_t sub_1BD20BB20()
{
  return 0x65626F6C67;
}

uint64_t sub_1BD20BB34()
{
  return 0x65762E736B6F6F62;
}

uint64_t sub_1BD20BB58()
{
  return 0x656C626269726373;
}

BOOL static ActivityType.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

BOOL TUConversationActivitySession.isJoined.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_state) == (id)1;
}

void TUConversationActivitySession.concatenatedDescription.getter()
{
  void *v0;
  id v1;

  v1 = objc_msgSend(objc_msgSend(v0, sel_activity), sel_concatenatedDescription);
  OUTLINED_FUNCTION_49_5();
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  OUTLINED_FUNCTION_18();
}

uint64_t TUConversationActivitySession.uniqueIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  uint64_t v6;
  uint64_t v8;

  v0 = type metadata accessor for UUID();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = OUTLINED_FUNCTION_25_1(v2, sel_UUID);
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  v6 = UUID.uuidString.getter();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  return v6;
}

void TUConversationActivitySession.localizedApplicationName.getter()
{
  void *v0;

  outlined bridged method (ob) of @objc TUConversationActivityMetadata.title.getter(objc_msgSend(v0, sel_activity), (SEL *)&selRef_localizedApplicationName);
}

void TUConversationActivitySession.isScreenSharing.getter()
{
  TUConversationActivitySession.isScreenSharing.getter((SEL *)&selRef_isScreenSharingActivity);
}

id one-time initialization function for watchTogether()
{
  id result;

  result = closure #1 in variable initialization expression of static ActivityType.Image.watchTogether();
  static ActivityType.Image.watchTogether = (uint64_t)result;
  return result;
}

id closure #1 in variable initialization expression of static ActivityType.Image.watchTogether()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  _QWORD v5[4];
  __int16 v6;
  uint64_t v7;
  char v8;
  uint64_t v9;

  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
  v0 = (void *)*MEMORY[0x1E0DC4AE8];
  v5[0] = 0x76742E79616C70;
  v5[1] = 0xE700000000000000;
  v5[2] = 3;
  v5[3] = v0;
  v6 = 0;
  v7 = 4;
  v8 = 0;
  v9 = 0;
  v1 = v0;
  v2 = static UIImage.symbolImage(for:)((uint64_t)v5);

  swift_bridgeObjectRelease();
  if (!v2)
    return 0;
  v3 = UIImage.activityTinted.getter();

  return v3;
}

id UIImage.activityTinted.getter()
{
  void *v0;
  id v1;
  id v2;

  v1 = objc_msgSend((id)objc_opt_self(), sel_lightGrayColor);
  v2 = objc_msgSend(v0, sel_imageWithTintColor_renderingMode_, v1, 1);

  return v2;
}

id one-time initialization function for listenTogether()
{
  id result;

  result = closure #1 in variable initialization expression of static ActivityType.Image.listenTogether();
  static ActivityType.Image.listenTogether = (uint64_t)result;
  return result;
}

id closure #1 in variable initialization expression of static ActivityType.Image.listenTogether()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  _QWORD v5[4];
  __int16 v6;
  uint64_t v7;
  char v8;
  uint64_t v9;

  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
  v0 = (void *)*MEMORY[0x1E0DC4AE8];
  v5[0] = 0x6F6E2E636973756DLL;
  v5[1] = 0xEA00000000006574;
  v5[2] = 3;
  v5[3] = v0;
  v6 = 0;
  v7 = 4;
  v8 = 0;
  v9 = 0;
  v1 = v0;
  v2 = static UIImage.symbolImage(for:)((uint64_t)v5);

  swift_bridgeObjectRelease();
  if (!v2)
    return 0;
  v3 = UIImage.activityTinted.getter();

  return v3;
}

id one-time initialization function for playTogether()
{
  id result;

  result = closure #1 in variable initialization expression of static ActivityType.Image.playTogether();
  static ActivityType.Image.playTogether = (uint64_t)result;
  return result;
}

id closure #1 in variable initialization expression of static ActivityType.Image.playTogether()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  _QWORD v5[4];
  __int16 v6;
  uint64_t v7;
  char v8;
  uint64_t v9;

  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
  v0 = (void *)*MEMORY[0x1E0DC4AE8];
  v5[0] = 0x74656B636F72;
  v5[1] = 0xE600000000000000;
  v5[2] = 3;
  v5[3] = v0;
  v6 = 0;
  v7 = 4;
  v8 = 0;
  v9 = 0;
  v1 = v0;
  v2 = static UIImage.symbolImage(for:)((uint64_t)v5);

  swift_bridgeObjectRelease();
  if (!v2)
    return 0;
  v3 = UIImage.activityTinted.getter();

  return v3;
}

id one-time initialization function for workoutTogether()
{
  id result;

  result = closure #1 in variable initialization expression of static ActivityType.Image.workoutTogether();
  static ActivityType.Image.workoutTogether = (uint64_t)result;
  return result;
}

id closure #1 in variable initialization expression of static ActivityType.Image.workoutTogether()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  _QWORD v5[4];
  __int16 v6;
  uint64_t v7;
  char v8;
  uint64_t v9;

  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
  v0 = (void *)*MEMORY[0x1E0DC4AE8];
  v5[0] = 0x722E657275676966;
  v5[1] = 0xEA00000000006E75;
  v5[2] = 3;
  v5[3] = v0;
  v6 = 0;
  v7 = 4;
  v8 = 0;
  v9 = 0;
  v1 = v0;
  v2 = static UIImage.symbolImage(for:)((uint64_t)v5);

  swift_bridgeObjectRelease();
  if (!v2)
    return 0;
  v3 = UIImage.activityTinted.getter();

  return v3;
}

id one-time initialization function for shopTogether()
{
  id result;

  result = closure #1 in variable initialization expression of static ActivityType.Image.shopTogether();
  static ActivityType.Image.shopTogether = (uint64_t)result;
  return result;
}

id closure #1 in variable initialization expression of static ActivityType.Image.shopTogether()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  _QWORD v5[4];
  __int16 v6;
  uint64_t v7;
  char v8;
  uint64_t v9;

  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
  v0 = (void *)*MEMORY[0x1E0DC4AE8];
  v5[0] = 6775138;
  v5[1] = 0xE300000000000000;
  v5[2] = 3;
  v5[3] = v0;
  v6 = 0;
  v7 = 4;
  v8 = 0;
  v9 = 0;
  v1 = v0;
  v2 = static UIImage.symbolImage(for:)((uint64_t)v5);

  swift_bridgeObjectRelease();
  if (!v2)
    return 0;
  v3 = UIImage.activityTinted.getter();

  return v3;
}

id one-time initialization function for readTogether()
{
  id result;

  result = closure #1 in variable initialization expression of static ActivityType.Image.readTogether();
  static ActivityType.Image.readTogether = (uint64_t)result;
  return result;
}

id closure #1 in variable initialization expression of static ActivityType.Image.readTogether()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  _QWORD v5[4];
  __int16 v6;
  uint64_t v7;
  char v8;
  uint64_t v9;

  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
  v0 = (void *)*MEMORY[0x1E0DC4AE8];
  v5[0] = 1802465122;
  v5[1] = 0xE400000000000000;
  v5[2] = 3;
  v5[3] = v0;
  v6 = 0;
  v7 = 4;
  v8 = 0;
  v9 = 0;
  v1 = v0;
  v2 = static UIImage.symbolImage(for:)((uint64_t)v5);

  swift_bridgeObjectRelease();
  if (!v2)
    return 0;
  v3 = UIImage.activityTinted.getter();

  return v3;
}

id one-time initialization function for exploreTogether()
{
  id result;

  result = closure #1 in variable initialization expression of static ActivityType.Image.exploreTogether();
  static ActivityType.Image.exploreTogether = (uint64_t)result;
  return result;
}

id closure #1 in variable initialization expression of static ActivityType.Image.exploreTogether()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  _QWORD v5[4];
  __int16 v6;
  uint64_t v7;
  char v8;
  uint64_t v9;

  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
  v0 = (void *)*MEMORY[0x1E0DC4AE8];
  v5[0] = 0x65626F6C67;
  v5[1] = 0xE500000000000000;
  v5[2] = 3;
  v5[3] = v0;
  v6 = 0;
  v7 = 4;
  v8 = 0;
  v9 = 0;
  v1 = v0;
  v2 = static UIImage.symbolImage(for:)((uint64_t)v5);

  swift_bridgeObjectRelease();
  if (!v2)
    return 0;
  v3 = UIImage.activityTinted.getter();

  return v3;
}

id one-time initialization function for learnTogether()
{
  id result;

  result = closure #1 in variable initialization expression of static ActivityType.Image.learnTogether();
  static ActivityType.Image.learnTogether = (uint64_t)result;
  return result;
}

id closure #1 in variable initialization expression of static ActivityType.Image.learnTogether()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  char v5[16];
  uint64_t v6;
  void *v7;
  __int16 v8;
  uint64_t v9;
  char v10;
  uint64_t v11;

  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
  v0 = (void *)*MEMORY[0x1E0DC4AE8];
  strcpy(v5, "books.vertical");
  v5[15] = -18;
  v6 = 3;
  v7 = v0;
  v8 = 0;
  v9 = 4;
  v10 = 0;
  v11 = 0;
  v1 = v0;
  v2 = static UIImage.symbolImage(for:)((uint64_t)v5);

  swift_bridgeObjectRelease();
  if (!v2)
    return 0;
  v3 = UIImage.activityTinted.getter();

  return v3;
}

id one-time initialization function for createTogether()
{
  id result;

  result = closure #1 in variable initialization expression of static ActivityType.Image.createTogether();
  static ActivityType.Image.createTogether = (uint64_t)result;
  return result;
}

id closure #1 in variable initialization expression of static ActivityType.Image.createTogether()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  _QWORD v5[4];
  __int16 v6;
  uint64_t v7;
  char v8;
  uint64_t v9;

  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
  v0 = (void *)*MEMORY[0x1E0DC4AE8];
  v5[0] = 0x656C626269726373;
  v5[1] = 0xE800000000000000;
  v5[2] = 3;
  v5[3] = v0;
  v6 = 0;
  v7 = 4;
  v8 = 0;
  v9 = 0;
  v1 = v0;
  v2 = static UIImage.symbolImage(for:)((uint64_t)v5);

  swift_bridgeObjectRelease();
  if (!v2)
    return 0;
  v3 = UIImage.activityTinted.getter();

  return v3;
}

id one-time initialization function for collaboration()
{
  id result;

  result = closure #1 in variable initialization expression of static ActivityType.Image.collaboration();
  static ActivityType.Image.collaboration = (uint64_t)result;
  return result;
}

id closure #1 in variable initialization expression of static ActivityType.Image.collaboration()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  _QWORD v5[4];
  __int16 v6;
  uint64_t v7;
  char v8;
  uint64_t v9;

  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
  v0 = (void *)*MEMORY[0x1E0DC4AE8];
  v5[0] = 6516580;
  v5[1] = 0xE300000000000000;
  v5[2] = 3;
  v5[3] = v0;
  v6 = 0;
  v7 = 4;
  v8 = 0;
  v9 = 0;
  v1 = v0;
  v2 = static UIImage.symbolImage(for:)((uint64_t)v5);

  swift_bridgeObjectRelease();
  if (!v2)
    return 0;
  v3 = UIImage.activityTinted.getter();

  return v3;
}

id one-time initialization function for other()
{
  id result;

  result = closure #1 in variable initialization expression of static ActivityType.Image.other();
  static ActivityType.Image.other = (uint64_t)result;
  return result;
}

id closure #1 in variable initialization expression of static ActivityType.Image.other()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  _QWORD v5[4];
  __int16 v6;
  uint64_t v7;
  char v8;
  uint64_t v9;

  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
  v0 = (void *)*MEMORY[0x1E0DC4AE8];
  v5[0] = 0x6F746F6870;
  v5[1] = 0xE500000000000000;
  v5[2] = 3;
  v5[3] = v0;
  v6 = 0;
  v7 = 4;
  v8 = 0;
  v9 = 0;
  v1 = v0;
  v2 = static UIImage.symbolImage(for:)((uint64_t)v5);

  swift_bridgeObjectRelease();
  if (!v2)
    return 0;
  v3 = UIImage.activityTinted.getter();

  return v3;
}

uint64_t one-time initialization function for watchTogether()
{
  void *v0;
  id v1;
  id v2;
  uint64_t result;
  _QWORD v4[4];
  __int16 v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
  v0 = (void *)*MEMORY[0x1E0DC4B10];
  v4[0] = 0x76742E79616C70;
  v4[1] = 0xE700000000000000;
  v4[2] = 1;
  v4[3] = v0;
  v5 = 0;
  v6 = 4;
  v7 = 0;
  v8 = 0;
  v1 = v0;
  v2 = static UIImage.symbolImage(for:)((uint64_t)v4);

  result = swift_bridgeObjectRelease();
  static ActivityType.Icon.watchTogether = (uint64_t)v2;
  return result;
}

uint64_t one-time initialization function for listenTogether()
{
  void *v0;
  id v1;
  id v2;
  uint64_t result;
  _QWORD v4[4];
  __int16 v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
  v0 = (void *)*MEMORY[0x1E0DC4B10];
  v4[0] = 0x6F6E2E636973756DLL;
  v4[1] = 0xEA00000000006574;
  v4[2] = 1;
  v4[3] = v0;
  v5 = 0;
  v6 = 4;
  v7 = 0;
  v8 = 0;
  v1 = v0;
  v2 = static UIImage.symbolImage(for:)((uint64_t)v4);

  result = swift_bridgeObjectRelease();
  static ActivityType.Icon.listenTogether = (uint64_t)v2;
  return result;
}

uint64_t one-time initialization function for playTogether()
{
  void *v0;
  id v1;
  id v2;
  uint64_t result;
  _QWORD v4[4];
  __int16 v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
  v0 = (void *)*MEMORY[0x1E0DC4B10];
  v4[0] = 0x74656B636F72;
  v4[1] = 0xE600000000000000;
  v4[2] = 1;
  v4[3] = v0;
  v5 = 0;
  v6 = 4;
  v7 = 0;
  v8 = 0;
  v1 = v0;
  v2 = static UIImage.symbolImage(for:)((uint64_t)v4);

  result = swift_bridgeObjectRelease();
  static ActivityType.Icon.playTogether = (uint64_t)v2;
  return result;
}

uint64_t one-time initialization function for workoutTogether()
{
  void *v0;
  id v1;
  id v2;
  uint64_t result;
  _QWORD v4[4];
  __int16 v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
  v0 = (void *)*MEMORY[0x1E0DC4B10];
  v4[0] = 0x722E657275676966;
  v4[1] = 0xEA00000000006E75;
  v4[2] = 1;
  v4[3] = v0;
  v5 = 0;
  v6 = 4;
  v7 = 0;
  v8 = 0;
  v1 = v0;
  v2 = static UIImage.symbolImage(for:)((uint64_t)v4);

  result = swift_bridgeObjectRelease();
  static ActivityType.Icon.workoutTogether = (uint64_t)v2;
  return result;
}

uint64_t one-time initialization function for shopTogether()
{
  void *v0;
  id v1;
  id v2;
  uint64_t result;
  _QWORD v4[4];
  __int16 v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
  v0 = (void *)*MEMORY[0x1E0DC4B10];
  v4[0] = 6775138;
  v4[1] = 0xE300000000000000;
  v4[2] = 1;
  v4[3] = v0;
  v5 = 0;
  v6 = 4;
  v7 = 0;
  v8 = 0;
  v1 = v0;
  v2 = static UIImage.symbolImage(for:)((uint64_t)v4);

  result = swift_bridgeObjectRelease();
  static ActivityType.Icon.shopTogether = (uint64_t)v2;
  return result;
}

uint64_t one-time initialization function for readTogether()
{
  void *v0;
  id v1;
  id v2;
  uint64_t result;
  _QWORD v4[4];
  __int16 v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
  v0 = (void *)*MEMORY[0x1E0DC4B10];
  v4[0] = 1802465122;
  v4[1] = 0xE400000000000000;
  v4[2] = 1;
  v4[3] = v0;
  v5 = 0;
  v6 = 4;
  v7 = 0;
  v8 = 0;
  v1 = v0;
  v2 = static UIImage.symbolImage(for:)((uint64_t)v4);

  result = swift_bridgeObjectRelease();
  static ActivityType.Icon.readTogether = (uint64_t)v2;
  return result;
}

uint64_t one-time initialization function for exploreTogether()
{
  void *v0;
  id v1;
  id v2;
  uint64_t result;
  _QWORD v4[4];
  __int16 v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
  v0 = (void *)*MEMORY[0x1E0DC4B10];
  v4[0] = 0x65626F6C67;
  v4[1] = 0xE500000000000000;
  v4[2] = 1;
  v4[3] = v0;
  v5 = 0;
  v6 = 4;
  v7 = 0;
  v8 = 0;
  v1 = v0;
  v2 = static UIImage.symbolImage(for:)((uint64_t)v4);

  result = swift_bridgeObjectRelease();
  static ActivityType.Icon.exploreTogether = (uint64_t)v2;
  return result;
}

uint64_t one-time initialization function for learnTogether()
{
  void *v0;
  id v1;
  id v2;
  uint64_t result;
  char v4[16];
  uint64_t v5;
  void *v6;
  __int16 v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
  v0 = (void *)*MEMORY[0x1E0DC4B10];
  strcpy(v4, "books.vertical");
  v4[15] = -18;
  v5 = 1;
  v6 = v0;
  v7 = 0;
  v8 = 4;
  v9 = 0;
  v10 = 0;
  v1 = v0;
  v2 = static UIImage.symbolImage(for:)((uint64_t)v4);

  result = swift_bridgeObjectRelease();
  static ActivityType.Icon.learnTogether = (uint64_t)v2;
  return result;
}

uint64_t one-time initialization function for createTogether()
{
  void *v0;
  id v1;
  id v2;
  uint64_t result;
  _QWORD v4[4];
  __int16 v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
  v0 = (void *)*MEMORY[0x1E0DC4B10];
  v4[0] = 0x656C626269726373;
  v4[1] = 0xE800000000000000;
  v4[2] = 1;
  v4[3] = v0;
  v5 = 0;
  v6 = 4;
  v7 = 0;
  v8 = 0;
  v1 = v0;
  v2 = static UIImage.symbolImage(for:)((uint64_t)v4);

  result = swift_bridgeObjectRelease();
  static ActivityType.Icon.createTogether = (uint64_t)v2;
  return result;
}

uint64_t one-time initialization function for collaboration()
{
  void *v0;
  id v1;
  id v2;
  uint64_t result;
  _QWORD v4[4];
  __int16 v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
  v0 = (void *)*MEMORY[0x1E0DC4B10];
  v4[0] = 6516580;
  v4[1] = 0xE300000000000000;
  v4[2] = 1;
  v4[3] = v0;
  v5 = 0;
  v6 = 4;
  v7 = 0;
  v8 = 0;
  v1 = v0;
  v2 = static UIImage.symbolImage(for:)((uint64_t)v4);

  result = swift_bridgeObjectRelease();
  static ActivityType.Icon.collaboration = (uint64_t)v2;
  return result;
}

uint64_t one-time initialization function for other()
{
  void *v0;
  id v1;
  id v2;
  uint64_t result;
  _QWORD v4[4];
  __int16 v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
  v0 = (void *)*MEMORY[0x1E0DC4B10];
  v4[0] = 0x616C706572616873;
  v4[1] = 0xE900000000000079;
  v4[2] = 1;
  v4[3] = v0;
  v5 = 0;
  v6 = 4;
  v7 = 0;
  v8 = 0;
  v1 = v0;
  v2 = static UIImage.symbolImage(for:)((uint64_t)v4);

  result = swift_bridgeObjectRelease();
  static ActivityType.Icon.other = (uint64_t)v2;
  return result;
}

void ActivityType.placeholderImage.getter(char a1)
{
  __asm { BR              X10 }
}

void sub_1BD20CDD4()
{
  id v0;

  if (one-time initialization token for collaboration != -1)
    swift_once();
  v0 = (id)static ActivityType.Image.collaboration;
  OUTLINED_FUNCTION_0();
}

void ActivityType.icon.getter(char a1)
{
  __asm { BR              X10 }
}

void sub_1BD20D04C()
{
  id v0;

  if (one-time initialization token for collaboration != -1)
    swift_once();
  v0 = (id)static ActivityType.Icon.collaboration;
  OUTLINED_FUNCTION_0();
}

void ActivityType.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
  Hasher._combine(_:)(a2);
}

Swift::Int ActivityType.hashValue.getter(unsigned __int8 a1)
{
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1);
  return Hasher._finalize()();
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance ActivityType(char *a1, char *a2)
{
  return static ActivityType.== infix(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance ActivityType()
{
  unsigned __int8 *v0;

  return ActivityType.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance ActivityType(uint64_t a1)
{
  unsigned __int8 *v1;

  ActivityType.hash(into:)(a1, *v1);
}

uint64_t Activity.sharePlayActivity.getter()
{
  return 0;
}

uint64_t specialized Activity.collaboration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = type metadata accessor for Collaboration(0);
  return __swift_storeEnumTagSinglePayload(a1, 1, 1, v2);
}

uint64_t Activity.collaboration.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  type metadata accessor for Collaboration(0);
  v0 = OUTLINED_FUNCTION_76_0();
  return OUTLINED_FUNCTION_34_5(v0, v1, v2, v3);
}

uint64_t specialized Activity.stagedCollaboration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = type metadata accessor for StagedCollaboration(0);
  return __swift_storeEnumTagSinglePayload(a1, 1, 1, v2);
}

uint64_t Activity.stagedCollaboration.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  type metadata accessor for StagedCollaboration(0);
  v0 = OUTLINED_FUNCTION_76_0();
  return OUTLINED_FUNCTION_34_5(v0, v1, v2, v3);
}

id TUConversationActivitySession.activityState.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_state);
}

void TUConversationActivitySession.originator.getter()
{
  void *v0;
  id v1;

  v1 = objc_msgSend(objc_msgSend(v0, sel_activity), sel_originator);
  OUTLINED_FUNCTION_49_5();
  OUTLINED_FUNCTION_0();
}

id TUConversationActivitySession.preferredBroadcastingAttributes.getter()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;

  v2 = objc_msgSend(v1, sel_activity);
  v3 = objc_msgSend(v2, sel_metadata);
  OUTLINED_FUNCTION_37_0();
  if (!v0)
    return 0;
  OUTLINED_FUNCTION_123(v4, sel_preferredBroadcastingAttributes);
  OUTLINED_FUNCTION_49_5();
  return v2;
}

void TUConversationActivitySession.generateSplitSessionState.getter()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  id v4;

  if (objc_msgSend(v0, sel_state) == (id)4)
  {
    v1 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
    v2 = objc_msgSend(v1, sel_neighborhoodActivityConduit);
    OUTLINED_FUNCTION_49_5();
    v4 = OUTLINED_FUNCTION_25_1(v3, sel_activeSplitSessionTV);
    OUTLINED_FUNCTION_37_0();
    if (v1)

  }
  OUTLINED_FUNCTION_0();
}

void TUConversationActivitySession.isPlaceholderActivity.getter()
{
  TUConversationActivitySession.isScreenSharing.getter((SEL *)&selRef_isPlaceholderActivity);
}

void TUConversationActivitySession.updatedAt.getter()
{
  void *v0;
  id v1;

  v1 = objc_msgSend(v0, sel_timestamp);
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

}

uint64_t TUConversationActivitySession.generateType.getter()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v14;
  uint64_t v16;
  uint64_t v18;
  uint64_t v20;
  uint64_t v22;
  uint64_t v24;
  uint64_t v26;
  uint64_t v28;
  uint64_t v30;
  uint64_t v32;
  int v34;
  unsigned int v36;

  v4 = objc_msgSend(v1, sel_activity);
  v5 = objc_msgSend(v4, sel_metadata);
  OUTLINED_FUNCTION_37_0();
  if (!v0)
    return 0;
  v7 = OUTLINED_FUNCTION_123(v6, sel_context);
  OUTLINED_FUNCTION_49_5();
  if (!v4)
    return 0;
  v9 = OUTLINED_FUNCTION_25_1(v8, sel_typedIdentifier);
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (v3 == OUTLINED_FUNCTION_1_88() && v2 == v10)
  {
    OUTLINED_FUNCTION_12_15();
    goto LABEL_68;
  }
  OUTLINED_FUNCTION_1_18();
  OUTLINED_FUNCTION_3_83();
  OUTLINED_FUNCTION_53();
  if ((v3 & 1) != 0)
  {
LABEL_68:

    return 0;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (v3 == OUTLINED_FUNCTION_1_88() && v2 == v12)
  {
    OUTLINED_FUNCTION_12_15();
    goto LABEL_71;
  }
  OUTLINED_FUNCTION_1_18();
  OUTLINED_FUNCTION_3_83();
  OUTLINED_FUNCTION_53();
  if ((v3 & 1) != 0)
  {
LABEL_71:

    return 1;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (v3 == OUTLINED_FUNCTION_1_88() && v2 == v14)
  {
    OUTLINED_FUNCTION_12_15();
    goto LABEL_73;
  }
  OUTLINED_FUNCTION_1_18();
  OUTLINED_FUNCTION_3_83();
  OUTLINED_FUNCTION_53();
  if ((v3 & 1) != 0)
  {
LABEL_73:

    return 3;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (v3 == OUTLINED_FUNCTION_1_88() && v2 == v16)
  {
    OUTLINED_FUNCTION_12_15();
    goto LABEL_75;
  }
  OUTLINED_FUNCTION_1_18();
  OUTLINED_FUNCTION_3_83();
  OUTLINED_FUNCTION_53();
  if ((v3 & 1) != 0)
  {
LABEL_75:

    return 7;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (v3 == OUTLINED_FUNCTION_1_88() && v2 == v18)
  {
    OUTLINED_FUNCTION_12_15();
    goto LABEL_77;
  }
  OUTLINED_FUNCTION_1_18();
  OUTLINED_FUNCTION_3_83();
  OUTLINED_FUNCTION_53();
  if ((v3 & 1) != 0)
  {
LABEL_77:

    return 4;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (v3 == OUTLINED_FUNCTION_1_88() && v2 == v20)
  {
    OUTLINED_FUNCTION_12_15();
    goto LABEL_79;
  }
  OUTLINED_FUNCTION_1_18();
  OUTLINED_FUNCTION_3_83();
  OUTLINED_FUNCTION_53();
  if ((v3 & 1) != 0)
  {
LABEL_79:

    return 5;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (v3 == OUTLINED_FUNCTION_1_88() && v2 == v22)
  {
    OUTLINED_FUNCTION_12_15();
    goto LABEL_81;
  }
  OUTLINED_FUNCTION_1_18();
  OUTLINED_FUNCTION_3_83();
  OUTLINED_FUNCTION_53();
  if ((v3 & 1) != 0)
  {
LABEL_81:

    return 8;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (v3 == OUTLINED_FUNCTION_1_88() && v2 == v24)
  {
    OUTLINED_FUNCTION_12_15();
    goto LABEL_83;
  }
  OUTLINED_FUNCTION_1_18();
  OUTLINED_FUNCTION_3_83();
  OUTLINED_FUNCTION_53();
  if ((v3 & 1) != 0)
  {
LABEL_83:

    return 9;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (v3 == OUTLINED_FUNCTION_1_88() && v2 == v26)
  {
    OUTLINED_FUNCTION_12_15();
    goto LABEL_85;
  }
  OUTLINED_FUNCTION_1_18();
  OUTLINED_FUNCTION_3_83();
  OUTLINED_FUNCTION_53();
  if ((v3 & 1) != 0)
  {
LABEL_85:

    return 10;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (v3 == OUTLINED_FUNCTION_1_88() && v2 == v28)
  {
    OUTLINED_FUNCTION_12_15();
    goto LABEL_87;
  }
  OUTLINED_FUNCTION_1_18();
  OUTLINED_FUNCTION_3_83();
  OUTLINED_FUNCTION_53();
  if ((v3 & 1) != 0)
  {
LABEL_87:

    return 11;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (v3 == OUTLINED_FUNCTION_1_88() && v2 == v30)
  {
    OUTLINED_FUNCTION_12_15();
    goto LABEL_89;
  }
  OUTLINED_FUNCTION_1_18();
  OUTLINED_FUNCTION_3_83();
  OUTLINED_FUNCTION_53();
  if ((v3 & 1) != 0)
  {
LABEL_89:

    return 12;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  v36 = 6;
  if (v3 != OUTLINED_FUNCTION_1_88() || v2 != v32)
  {
    if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      v34 = 6;
    else
      v34 = 0;
    v36 = v34;
  }

  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_53();
  return v36;
}

uint64_t TUConversationActivitySession.activeRemoteParticipantCount.getter()
{
  void *v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(v0, sel_activeRemoteParticipants);
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
  lazy protocol witness table accessor for type TUHandle and conformance NSObject((unint64_t *)&lazy protocol witness table cache variable for type TUConversationParticipant and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
  static Set._unconditionallyBridgeFromObjectiveC(_:)();
  OUTLINED_FUNCTION_49_5();
  v2 = specialized Set.count.getter(&lazy cache variable for type metadata for TUConversationParticipant);
  swift_bridgeObjectRelease();
  return v2;
}

void TUConversationActivitySession.bundleIdentifier.getter()
{
  void *v0;

  outlined bridged method (ob) of @objc TUConversationActivityMetadata.title.getter(objc_msgSend(v0, sel_activity), (SEL *)&selRef_bundleIdentifier);
}

void TUConversationActivitySession.isAppInstalled.getter()
{
  TUConversationActivitySession.isScreenSharing.getter((SEL *)&selRef_isSupported);
}

void TUConversationActivitySession.isScreenSharing.getter(SEL *a1)
{
  void *v1;
  id v3;

  v3 = objc_msgSend(v1, sel_activity);
  objc_msgSend(v3, *a1);

  OUTLINED_FUNCTION_0();
}

void TUConversationActivitySession.title.getter()
{
  TUConversationActivitySession.title.getter((SEL *)&selRef_title);
}

void TUConversationActivitySession.subtitle.getter()
{
  TUConversationActivitySession.title.getter((SEL *)&selRef_subTitle);
}

void TUConversationActivitySession.title.getter(SEL *a1)
{
  void *v1;
  id v3;
  id v4;

  v3 = objc_msgSend(v1, sel_activity);
  v4 = objc_msgSend(v3, sel_metadata);

  if (v4)
    outlined bridged method (ob) of @objc TUConversationActivityMetadata.title.getter(v4, a1);
  OUTLINED_FUNCTION_18();
}

void TUConversationActivitySession.image.getter()
{
  uint64_t v0;
  char v1;

  TUConversationActivitySession.generateImage.getter();
  if (!v0)
  {
    v1 = TUConversationActivitySession.generateType.getter();
    ActivityType.placeholderImage.getter(v1);
  }
}

void TUConversationActivitySession.generateImage.getter()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = objc_msgSend(v0, sel_activity);
  v2 = objc_msgSend(v1, sel_metadata);

  if (v2)
  {
    v3 = outlined bridged method (ob) of @objc TUConversationActivityMetadata.imageData.getter(v2);
    if (v4 >> 60 != 15)
    {
      v5 = v3;
      v6 = v4;
      _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
      UIImage.__allocating_init(data:)(v5, v6);
    }
  }
}

void TUConversationActivitySession.icon.getter()
{
  char v0;

  v0 = TUConversationActivitySession.generateType.getter();
  ActivityType.icon.getter(v0);
}

void TUConversationActivitySession.ongoingDescription.getter()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  id v7;

  v2 = objc_msgSend(v1, sel_activity);
  v3 = objc_msgSend(v2, sel_metadata);
  OUTLINED_FUNCTION_37_0();
  if (v0)
  {
    v5 = OUTLINED_FUNCTION_123(v4, sel_context);
    OUTLINED_FUNCTION_49_5();
    v7 = OUTLINED_FUNCTION_25_1(v6, sel_ongoingDescription);

    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  OUTLINED_FUNCTION_18();
}

uint64_t TUConversationActivitySession.metadataHash.getter()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;

  v1 = objc_msgSend(v0, sel_activity);
  v2 = objc_msgSend(v1, sel_metadata);

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TUConversationActivityMetadata?);
  lazy protocol witness table accessor for type TUHandle and conformance NSObject(&lazy protocol witness table cache variable for type TUConversationActivityMetadata and conformance NSObject, &lazy cache variable for type metadata for TUConversationActivityMetadata);
  v3 = Optional<A>.hashValue.getter();

  return v3;
}

void *TUConversationActivitySession.sharePlayActivity.getter()
{
  void *v0;
  id v1;

  v1 = v0;
  return v0;
}

uint64_t protocol witness for Activity.uniqueIdentifier.getter in conformance TUConversationActivitySession()
{
  return TUConversationActivitySession.uniqueIdentifier.getter();
}

uint64_t protocol witness for Activity.type.getter in conformance TUConversationActivitySession()
{
  return TUConversationActivitySession.type.getter();
}

uint64_t protocol witness for Activity.activeRemoteParticipantCount.getter in conformance TUConversationActivitySession()
{
  return TUConversationActivitySession.activeRemoteParticipantCount.getter();
}

void protocol witness for Activity.bundleIdentifier.getter in conformance TUConversationActivitySession()
{
  TUConversationActivitySession.bundleIdentifier.getter();
}

void protocol witness for Activity.isAppInstalled.getter in conformance TUConversationActivitySession()
{
  TUConversationActivitySession.isAppInstalled.getter();
  OUTLINED_FUNCTION_0();
}

void protocol witness for Activity.title.getter in conformance TUConversationActivitySession()
{
  TUConversationActivitySession.title.getter();
}

void protocol witness for Activity.subtitle.getter in conformance TUConversationActivitySession()
{
  TUConversationActivitySession.subtitle.getter();
}

void protocol witness for Activity.image.getter in conformance TUConversationActivitySession()
{
  TUConversationActivitySession.image.getter();
}

void protocol witness for Activity.icon.getter in conformance TUConversationActivitySession()
{
  TUConversationActivitySession.icon.getter();
}

void protocol witness for Activity.concatenatedDescription.getter in conformance TUConversationActivitySession()
{
  TUConversationActivitySession.concatenatedDescription.getter();
}

void protocol witness for Activity.ongoingDescription.getter in conformance TUConversationActivitySession()
{
  TUConversationActivitySession.ongoingDescription.getter();
}

uint64_t protocol witness for Activity.metadataHash.getter in conformance TUConversationActivitySession()
{
  return TUConversationActivitySession.metadataHash.getter();
}

void *protocol witness for Activity.sharePlayActivity.getter in conformance TUConversationActivitySession()
{
  return TUConversationActivitySession.sharePlayActivity.getter();
}

uint64_t protocol witness for Activity.collaboration.getter in conformance TUConversationActivitySession()
{
  return Activity.collaboration.getter();
}

uint64_t protocol witness for Activity.stagedCollaboration.getter in conformance TUConversationActivitySession()
{
  return Activity.stagedCollaboration.getter();
}

id Activity.linkMetadata.getter(uint64_t a1, uint64_t (**a2)(uint64_t, uint64_t))
{
  void *v2;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;

  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CC11A8]), sel_init);
  v6 = OUTLINED_FUNCTION_8(a2[6]);
  if (v7)
  {
    MEMORY[0x1C3B72E00](v6);
    v6 = OUTLINED_FUNCTION_16_52();
  }
  else
  {
    v2 = 0;
  }
  OUTLINED_FUNCTION_21_10(v6, sel_setTitle_);

  v8 = OUTLINED_FUNCTION_8(a2[7]);
  if (v9)
  {
    MEMORY[0x1C3B72E00](v8);
    v8 = OUTLINED_FUNCTION_16_52();
  }
  else
  {
    v2 = 0;
  }
  OUTLINED_FUNCTION_21_10(v8, sel_setSummary_);

  v10 = a2[8](a1, (uint64_t)a2);
  if (v10)
  {
    v11 = (void *)v10;
    v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CC1178]), sel_initWithPlatformImage_, v10);
    objc_msgSend(v5, sel_setImage_, v12);

  }
  return v5;
}

void outlined bridged method (ob) of @objc TUConversationActivity.bundleIdentifier.getter(void *a1)
{
  outlined bridged method (ob) of @objc TUConversationActivityMetadata.title.getter(a1, (SEL *)&selRef_bundleIdentifier);
}

void outlined bridged method (ob) of @objc TUConversationActivity.localizedApplicationName.getter(void *a1)
{
  outlined bridged method (ob) of @objc TUConversationActivityMetadata.title.getter(a1, (SEL *)&selRef_localizedApplicationName);
}

void outlined bridged method (ob) of @objc TUConversationActivityMetadata.title.getter(void *a1, SEL *a2)
{
  void *v2;
  id v3;

  v3 = objc_msgSend(a1, *a2);
  OUTLINED_FUNCTION_37_0();
  if (v2)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();

  }
  OUTLINED_FUNCTION_18();
}

unint64_t lazy protocol witness table accessor for type ActivityType and conformance ActivityType()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ActivityType and conformance ActivityType;
  if (!lazy protocol witness table cache variable for type ActivityType and conformance ActivityType)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ActivityType, &type metadata for ActivityType);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ActivityType and conformance ActivityType);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ActivityType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 12 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 12) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF3)
    return ((uint64_t (*)(void))((char *)&loc_1BD20E154 + 4 * byte_1BD65180C[v4]))();
  *a1 = a2 + 12;
  return ((uint64_t (*)(void))((char *)sub_1BD20E188 + 4 * byte_1BD651807[v4]))();
}

uint64_t sub_1BD20E188(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD20E190(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD20E198);
  return result;
}

uint64_t sub_1BD20E1A4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD20E1ACLL);
  *(_BYTE *)result = a2 + 12;
  return result;
}

uint64_t sub_1BD20E1B0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD20E1B8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ActivityType()
{
  return &type metadata for ActivityType;
}

uint64_t dispatch thunk of Activity.uniqueIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of Activity.type.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of Activity.activeRemoteParticipantCount.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of Activity.bundleIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of Activity.isAppInstalled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of Activity.title.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of Activity.subtitle.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of Activity.image.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of Activity.icon.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of Activity.concatenatedDescription.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of Activity.ongoingDescription.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of Activity.metadataHash.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t dispatch thunk of Activity.sharePlayActivity.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t dispatch thunk of Activity.collaboration.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t dispatch thunk of Activity.stagedCollaboration.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 120))();
}

uint64_t outlined bridged method (ob) of @objc TUConversationActivityMetadata.imageData.getter(void *a1)
{
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(a1, sel_imageData);

  if (!v2)
    return 0;
  v3 = static Data._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

double CGSize.scaledToFit(_:)(uint64_t a1, char a2, uint64_t a3, char a4, double a5, double a6)
{
  return CGSize.scaledToFit(_:)(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, double, double))CGSize.scaleThatFits(_:), a5, a6);
}

uint64_t AspectRatioLayout.contentMode.getter(char a1)
{
  return a1 & 1;
}

uint64_t AspectRatioLayout.contentMode.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result & 1;
  return result;
}

uint64_t (*AspectRatioLayout.contentMode.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t AspectRatioLayout.spaceOffered(to:in:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5)
{
  double v9;
  double v10;
  double v11;
  double v12;
  char v13;
  char v14;
  double v15;
  char v16;

  static ProposedViewSize.unspecified.getter();
  if ((static ProposedViewSize.== infix(_:_:)() & 1) == 0)
  {
    static ProposedViewSize.unspecified.getter();
    LayoutSubview.sizeThatFits(_:)();
    v10 = v9;
    v12 = v11;
    v13 = static ContentMode.== infix(_:_:)();
    static ProposedViewSize.unspecified.getter();
    if ((v13 & 1) != 0)
    {
      v14 = a5 & 1;
      if ((static ProposedViewSize.== infix(_:_:)() & 1) == 0)
      {
        v15 = CGSize.scaleThatFits(_:)(a2, a3 & 1, a4, v14, v10, v12);
        goto LABEL_7;
      }
    }
    else
    {
      v16 = a5 & 1;
      if ((static ProposedViewSize.== infix(_:_:)() & 1) == 0)
      {
        v15 = CGSize.scaleThatFills(_:)(a2, a3 & 1, a4, v16, v10, v12);
LABEL_7:
        if (v10 == 0.0)
          v10 = 0.0;
        else
          v10 = v10 * v15;
      }
    }
    return *(_QWORD *)&v10;
  }
  return a2;
}

double CGSize.scaledToFill(_:)(uint64_t a1, char a2, uint64_t a3, char a4, double a5, double a6)
{
  return CGSize.scaledToFit(_:)(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, double, double))CGSize.scaleThatFills(_:), a5, a6);
}

double CGSize.scaledToFit(_:)(uint64_t a1, char a2, uint64_t a3, char a4, void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, double, double), double a6, double a7)
{
  uint64_t v14;
  uint64_t v15;
  double v16;

  static ProposedViewSize.unspecified.getter();
  v14 = a2 & 1;
  v15 = a4 & 1;
  if ((static ProposedViewSize.== infix(_:_:)() & 1) == 0)
  {
    a5(a1, v14, a3, v15, a6, a7);
    if (a6 == 0.0)
      return 0.0;
    else
      return v16 * a6;
  }
  return a6;
}

uint64_t AspectRatioLayout.sizeThatFits(proposal:subviews:cache:)(uint64_t a1, char a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t EnumTagSinglePayload;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LayoutSubview?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_2_83();
  OUTLINED_FUNCTION_11_64();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_1_89();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v6, 1, v4);
  if ((_DWORD)EnumTagSinglePayload == 1)
  {
    result = OUTLINED_FUNCTION_7_79(EnumTagSinglePayload, &demangling cache variable for type metadata for LayoutSubview?);
  }
  else
  {
    OUTLINED_FUNCTION_5_77();
    OUTLINED_FUNCTION_13_61();
    lazy protocol witness table accessor for type LayoutSubviews and conformance LayoutSubviews();
    OUTLINED_FUNCTION_9_65();
    OUTLINED_FUNCTION_8_71();
    if (OUTLINED_FUNCTION_12_60() == 1)
    {
      AspectRatioLayout.spaceOffered(to:in:)(v5, a1, a2 & 1, a3, a4 & 1);
      LayoutSubview.sizeThatFits(_:)();
      return OUTLINED_FUNCTION_3_84();
    }
    result = OUTLINED_FUNCTION_3_84();
  }
  __break(1u);
  return result;
}

uint64_t AspectRatioLayout.placeSubviews(in:proposal:subviews:cache:)(uint64_t a1, char a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t EnumTagSinglePayload;
  CGRect v15;
  CGRect v16;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LayoutSubview?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_2_83();
  OUTLINED_FUNCTION_11_64();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_1_89();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v6, 1, v4);
  if ((_DWORD)EnumTagSinglePayload == 1)
    return OUTLINED_FUNCTION_7_79(EnumTagSinglePayload, &demangling cache variable for type metadata for LayoutSubview?);
  OUTLINED_FUNCTION_5_77();
  OUTLINED_FUNCTION_13_61();
  lazy protocol witness table accessor for type LayoutSubviews and conformance LayoutSubviews();
  OUTLINED_FUNCTION_9_65();
  OUTLINED_FUNCTION_8_71();
  if (OUTLINED_FUNCTION_12_60() == 1)
  {
    v15.origin.x = OUTLINED_FUNCTION_15_0();
    CGRectGetMidX(v15);
    v16.origin.x = OUTLINED_FUNCTION_15_0();
    CGRectGetMidY(v16);
    static UnitPoint.center.getter();
    AspectRatioLayout.spaceOffered(to:in:)(v5, a1, a2 & 1, a3, a4 & 1);
    LayoutSubview.place(at:anchor:proposal:)();
  }
  return OUTLINED_FUNCTION_3_84();
}

uint64_t AspectRatioLayout.init(contentMode:)(char a1)
{
  return a1 & 1;
}

uint64_t protocol witness for Layout.sizeThatFits(proposal:subviews:cache:) in conformance AspectRatioLayout(uint64_t a1, char a2, uint64_t a3, char a4)
{
  return AspectRatioLayout.sizeThatFits(proposal:subviews:cache:)(a1, a2 & 1, a3, a4 & 1);
}

uint64_t protocol witness for Layout.placeSubviews(in:proposal:subviews:cache:) in conformance AspectRatioLayout(uint64_t a1, char a2, uint64_t a3, char a4)
{
  return AspectRatioLayout.placeSubviews(in:proposal:subviews:cache:)(a1, a2 & 1, a3, a4 & 1);
}

uint64_t protocol witness for Layout.explicitAlignment(of:in:proposal:subviews:cache:) in conformance AspectRatioLayout(uint64_t a1, uint64_t a2, char a3)
{
  return protocol witness for Layout.explicitAlignment(of:in:proposal:subviews:cache:) in conformance AspectRatioLayout(a1, a2, a3);
}

{
  return protocol witness for Layout.explicitAlignment(of:in:proposal:subviews:cache:) in conformance AspectRatioLayout(a1, a2, a3);
}

{
  return OUTLINED_FUNCTION_0_95(a1, a2, a3);
}

uint64_t protocol witness for Animatable.animatableData.getter in conformance AspectRatioLayout()
{
  unsigned __int8 *v0;

  return TPNumberPadCharacter.rawValue.getter(*v0);
}

uint64_t (*protocol witness for Animatable.animatableData.modify in conformance AspectRatioLayout(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = Animatable<>.animatableData.modify();
  return protocol witness for ControlsView.cnkContentAlpha.modify in conformance SystemApertureOngoingTelephonyControlsView;
}

double ContentFillLayout.sizeThatFits(proposal:subviews:cache:)(uint64_t a1, char a2)
{
  double result;

  result = *(double *)&a1;
  if ((a2 & 1) != 0)
    return 10.0;
  return result;
}

uint64_t ContentFillLayout.placeSubviews(in:proposal:subviews:cache:)(uint64_t a1, int a2, uint64_t a3, int a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char v24;
  void (*v25)(_QWORD *, _QWORD);
  char *v26;
  uint64_t EnumTagSinglePayload;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  int v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t);
  char *v39;
  uint64_t v40;
  char v41;
  _QWORD v42[4];

  v33 = a2;
  v34 = a4;
  v36 = a1;
  v37 = a3;
  v6 = type metadata accessor for LayoutSubview();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_41();
  v35 = v8;
  v9 = OUTLINED_FUNCTION_13_61();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_41();
  v39 = v11;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LayoutSubview?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IndexingIterator<LayoutSubviews>);
  OUTLINED_FUNCTION_1_1();
  v17 = MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v33 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v33 - v20;
  v40 = v10;
  v38 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v38(v19, a5, v9);
  lazy protocol witness table accessor for type LayoutSubviews and conformance LayoutSubviews();
  dispatch thunk of Collection.startIndex.getter();
  *(_QWORD *)&v19[*(int *)(v15 + 36)] = v42[0];
  outlined init with take of IndexingIterator<LayoutSubviews>((uint64_t)v19, (uint64_t)v21);
  v22 = &v21[*(int *)(v15 + 36)];
  v23 = *(_QWORD *)v22;
  OUTLINED_FUNCTION_6_64();
  if (v23 == v42[0])
  {
LABEL_6:
    EnumTagSinglePayload = OUTLINED_FUNCTION_83_0((uint64_t)v14, 1);
  }
  else
  {
    v24 = v33 & 1;
    v34 &= 1u;
    while (1)
    {
      v25 = (void (*)(_QWORD *, _QWORD))dispatch thunk of Collection.subscript.read();
      (*(void (**)(char *))(v7 + 16))(v14);
      v25(v42, 0);
      v26 = v39;
      v38(v39, (uint64_t)v21, v9);
      dispatch thunk of Collection.formIndex(after:)();
      (*(void (**)(char *, uint64_t))(v40 + 8))(v26, v9);
      OUTLINED_FUNCTION_83_0((uint64_t)v14, 0);
      EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v14, 1, v6);
      if ((_DWORD)EnumTagSinglePayload == 1)
        break;
      v28 = v35;
      (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v35, v14, v6);
      static UnitPoint.topLeading.getter();
      LOBYTE(v42[0]) = v24;
      v41 = v34;
      LayoutSubview.place(at:anchor:proposal:)();
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v28, v6);
      v29 = v7;
      v30 = *(_QWORD *)v22;
      OUTLINED_FUNCTION_6_64();
      v31 = v30 == v42[0];
      v7 = v29;
      if (v31)
        goto LABEL_6;
    }
  }
  return OUTLINED_FUNCTION_7_79(EnumTagSinglePayload, &demangling cache variable for type metadata for IndexingIterator<LayoutSubviews>);
}

double protocol witness for Layout.sizeThatFits(proposal:subviews:cache:) in conformance ContentFillLayout(uint64_t a1, char a2)
{
  return ContentFillLayout.sizeThatFits(proposal:subviews:cache:)(a1, a2 & 1);
}

uint64_t protocol witness for Layout.placeSubviews(in:proposal:subviews:cache:) in conformance ContentFillLayout(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5)
{
  return ContentFillLayout.placeSubviews(in:proposal:subviews:cache:)(a1, a2 & 1, a3, a4 & 1, a5);
}

double CGSize.scaledBy(x:y:)(double a1, double a2, double a3)
{
  double result;

  result = a1 * a3;
  if (a3 == 0.0)
    return 0.0;
  return result;
}

double CGSize.scaled(by:)(double a1, double a2)
{
  double v2;

  v2 = a1 * a2;
  if (a2 == 0.0)
    return 0.0;
  return v2;
}

CGSize __swiftcall CGSize.scaled(by:)(CGSize by)
{
  double v1;
  double v2;
  double v3;
  double v4;
  CGSize result;

  v3 = by.width * v1;
  if (v1 == 0.0)
    v3 = 0.0;
  v4 = by.height * v2;
  if (v2 == 0.0)
    v4 = 0.0;
  result.height = v4;
  result.width = v3;
  return result;
}

double CGSize.scaleThatFits(_:)(uint64_t a1, char a2, uint64_t a3, char a4, double a5, double a6)
{
  double result;
  double v7;

  if ((a2 & 1) != 0 || a5 == 0.0 && *(double *)&a1 == 0.0)
  {
    result = INFINITY;
    if ((a4 & 1) != 0)
      goto LABEL_9;
  }
  else
  {
    result = *(double *)&a1 / a5;
    if ((a4 & 1) != 0)
    {
LABEL_9:
      v7 = INFINITY;
      goto LABEL_11;
    }
  }
  if (a6 == 0.0 && *(double *)&a3 == 0.0)
    goto LABEL_9;
  v7 = *(double *)&a3 / a6;
LABEL_11:
  if (v7 < result)
    return v7;
  return result;
}

double CGSize.scaleThatFills(_:)(uint64_t a1, char a2, uint64_t a3, char a4, double a5, double a6)
{
  double result;
  double v7;

  if ((a2 & 1) != 0 || a5 == 0.0 && *(double *)&a1 == 0.0)
  {
    result = -INFINITY;
    if ((a4 & 1) != 0)
      goto LABEL_9;
  }
  else
  {
    result = *(double *)&a1 / a5;
    if ((a4 & 1) != 0)
    {
LABEL_9:
      v7 = -INFINITY;
      goto LABEL_11;
    }
  }
  if (a6 == 0.0 && *(double *)&a3 == 0.0)
    goto LABEL_9;
  v7 = *(double *)&a3 / a6;
LABEL_11:
  if (result <= v7)
    return v7;
  return result;
}

unint64_t lazy protocol witness table accessor for type LayoutSubviews and conformance LayoutSubviews()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type LayoutSubviews and conformance LayoutSubviews;
  if (!lazy protocol witness table cache variable for type LayoutSubviews and conformance LayoutSubviews)
  {
    v1 = type metadata accessor for LayoutSubviews();
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9390], v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LayoutSubviews and conformance LayoutSubviews);
  }
  return result;
}

uint64_t outlined init with take of IndexingIterator<LayoutSubviews>(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IndexingIterator<LayoutSubviews>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t lazy protocol witness table accessor for type AspectRatioLayout and conformance AspectRatioLayout()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type AspectRatioLayout and conformance AspectRatioLayout;
  if (!lazy protocol witness table cache variable for type AspectRatioLayout and conformance AspectRatioLayout)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for AspectRatioLayout, &type metadata for AspectRatioLayout);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AspectRatioLayout and conformance AspectRatioLayout);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ContentFillLayout and conformance ContentFillLayout()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ContentFillLayout and conformance ContentFillLayout;
  if (!lazy protocol witness table cache variable for type ContentFillLayout and conformance ContentFillLayout)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ContentFillLayout, &type metadata for ContentFillLayout);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ContentFillLayout and conformance ContentFillLayout);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AspectRatioLayout(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BD20EF78 + 4 * byte_1BD6518D5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BD20EFAC + 4 * asc_1BD6518D0[v4]))();
}

uint64_t sub_1BD20EFAC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD20EFB4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD20EFBCLL);
  return result;
}

uint64_t sub_1BD20EFC8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD20EFD0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BD20EFD4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD20EFDC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AspectRatioLayout()
{
  return &type metadata for AspectRatioLayout;
}

ValueMetadata *type metadata accessor for ContentFillLayout()
{
  return &type metadata for ContentFillLayout;
}

uint64_t *CallScreeningRTTHelper.shared.unsafeMutableAddressor()
{
  if (one-time initialization token for shared != -1)
    swift_once();
  return &static CallScreeningRTTHelper.shared;
}

uint64_t static CallScreeningRTTHelper.shared.getter()
{
  if (one-time initialization token for shared != -1)
    swift_once();
  return swift_retain();
}

uint64_t CallScreeningRTTHelper.().init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [TranscriptionViewModel.Caption]);
  *(_QWORD *)(v0 + 16) = Dictionary.init(dictionaryLiteral:)();
  v1 = OBJC_IVAR____TtC15ConversationKit22CallScreeningRTTHelper_mainActorLogger;
  if (one-time initialization token for answeringMachine != -1)
    swift_once();
  v2 = type metadata accessor for Logger();
  v3 = __swift_project_value_buffer(v2, (uint64_t)&static Logger.answeringMachine);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v0 + v1, v3, v2);
  return v0;
}

Swift::Void __swiftcall CallScreeningRTTHelper.setupObservers()()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  v0 = (void *)objc_opt_self();
  v1 = objc_msgSend(v0, sel_defaultCenter);
  OUTLINED_FUNCTION_28(v1, v2, v3, (uint64_t)sel_callStatusChanged_, *MEMORY[0x1E0DBD4A0]);

  v6 = objc_msgSend(v0, sel_defaultCenter);
  OUTLINED_FUNCTION_28(v6, v4, v5, (uint64_t)sel_callRTTStatusChanged_, *MEMORY[0x1E0DBD568]);

}

Swift::Void __swiftcall CallScreeningRTTHelper.saveCaptions(_:for:)(Swift::OpaquePointer _, Swift::String a2)
{
  uint64_t v2;
  NSObject *v3;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t *v16;
  id v17;

  object = a2._object;
  countAndFlagsBits = a2._countAndFlagsBits;
  v6 = OUTLINED_FUNCTION_17_2();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_4_1();
  v8 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v9 = OUTLINED_FUNCTION_49_16();
  v10 = (void *)MEMORY[0x1C3B72E00](v9);
  v17 = objc_msgSend(v8, sel_callWithCallUUID_, v10);

  if (v17)
  {
    if (!objc_msgSend(v17, sel_isActive))
    {

      return;
    }
    OUTLINED_FUNCTION_2_0();
    swift_bridgeObjectRetain();
    v11 = swift_bridgeObjectRetain();
    specialized Dictionary._Variant.setValue(_:forKey:)(v11, countAndFlagsBits, (uint64_t)object);
    swift_endAccess();
    swift_bridgeObjectRelease();
    (*(void (**)(NSObject *, uint64_t, uint64_t))(v7 + 16))(v3, v2 + OBJC_IVAR____TtC15ConversationKit22CallScreeningRTTHelper_mainActorLogger, v6);
    OUTLINED_FUNCTION_16_31();
    Logger.logObject.getter();
    v12 = OUTLINED_FUNCTION_12_0();
    if (os_log_type_enabled(v3, v12))
    {
      v13 = (uint8_t *)OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_105();
      *(_DWORD *)v13 = 136446210;
      swift_bridgeObjectRetain();
      v14 = OUTLINED_FUNCTION_49_16();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v14, v15, v16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1BD004000, v3, v12, "CallScreeningRTTHelper: saved captions for callUUID %{public}s", v13, 0xCu);
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_60();
    }

    OUTLINED_FUNCTION_19_1();
    (*(void (**)(NSObject *, uint64_t))(v7 + 8))(v3, v6);
  }
  OUTLINED_FUNCTION_52_1();
}

Swift::Void __swiftcall CallScreeningRTTHelper.syncCaptionsToRTT(for:)(Swift::String a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v6;
  void *v7;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t);
  uint64_t v18;
  uint64_t v19;

  v3 = v1;
  object = a1._object;
  countAndFlagsBits = a1._countAndFlagsBits;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TranscriptionViewModel.Caption?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_11_2();
  if (one-time initialization token for viewModel != -1)
    swift_once();
  swift_retain();
  if (TranscriptionViewModel.callUUID.getter() == countAndFlagsBits && v7 == object)
  {
    OUTLINED_FUNCTION_2_1();
    goto LABEL_11;
  }
  v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
  OUTLINED_FUNCTION_27();
  if ((v9 & 1) != 0)
  {
LABEL_11:
    v12 = TranscriptionViewModel.captions.getter();
    goto LABEL_12;
  }
  OUTLINED_FUNCTION_2_0();
  v10 = *(_QWORD *)(v1 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  specialized Dictionary.subscript.getter(countAndFlagsBits, (uint64_t)object, v10);
  v12 = v11;
  OUTLINED_FUNCTION_2_1();
  OUTLINED_FUNCTION_27();
  if (!v12)
  {
    swift_release();
    goto LABEL_17;
  }
LABEL_12:
  v13 = *(_QWORD *)(v12 + 16);
  if (v13)
  {
    v14 = type metadata accessor for TranscriptionViewModel.Caption(0);
    v15 = *(_QWORD *)(v14 - 8);
    v16 = v12 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
    v17 = *(void (**)(uint64_t))(*(_QWORD *)v3 + 176);
    v18 = *(_QWORD *)(v15 + 72);
    swift_bridgeObjectRetain();
    do
    {
      outlined init with copy of TranscriptionViewModel.Caption(v16, v2);
      __swift_storeEnumTagSinglePayload(v2, 0, 1, v14);
      v19 = OUTLINED_FUNCTION_49_16();
      v17(v19);
      outlined destroy of TranscriptionViewModel.Caption?(v2, &demangling cache variable for type metadata for TranscriptionViewModel.Caption?);
      v16 += v18;
      --v13;
    }
    while (v13);
    swift_bridgeObjectRelease();
  }
  swift_release();
  swift_bridgeObjectRelease();
LABEL_17:
  OUTLINED_FUNCTION_52_1();
}

void CallScreeningRTTHelper.syncCaptionToRTT(_:callUUID:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  NSObject *v21;
  os_log_type_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  Swift::Int v26;
  uint64_t *v27;
  unint64_t v28;
  uint64_t v29;
  id v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  Class isa;
  void *v36;
  _QWORD v37[2];
  int v38;
  os_log_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v42 = a2;
  v43 = OUTLINED_FUNCTION_17_2();
  v7 = *(_QWORD *)(v43 - 8);
  MEMORY[0x1E0C80A78](v43);
  v9 = (char *)v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TranscriptionViewModel.Caption?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_4_1();
  v11 = type metadata accessor for TranscriptionViewModel.Caption(0);
  OUTLINED_FUNCTION_1_1();
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v13);
  v18 = (char *)v37 - v17;
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)v37 - v19;
  outlined init with copy of TranscriptionViewModel.Caption?(a1, v4);
  if (__swift_getEnumTagSinglePayload(v4, 1, v11) == 1)
  {
    outlined destroy of TranscriptionViewModel.Caption?(v4, &demangling cache variable for type metadata for TranscriptionViewModel.Caption?);
  }
  else
  {
    outlined init with take of TranscriptionViewModel.Caption(v4, (uint64_t)v20);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v3 + OBJC_IVAR____TtC15ConversationKit22CallScreeningRTTHelper_mainActorLogger, v43);
    outlined init with copy of TranscriptionViewModel.Caption((uint64_t)v20, (uint64_t)v18);
    outlined init with copy of TranscriptionViewModel.Caption((uint64_t)v20, (uint64_t)v15);
    v21 = Logger.logObject.getter();
    v22 = static os_log_type_t.default.getter();
    v23 = v22;
    if (os_log_type_enabled(v21, v22))
    {
      v24 = OUTLINED_FUNCTION_105();
      v39 = v21;
      v25 = v24;
      v40 = OUTLINED_FUNCTION_105();
      v44 = v40;
      *(_DWORD *)v25 = 134349314;
      v37[1] = v25 + 4;
      v41 = a3;
      OUTLINED_FUNCTION_31_37();
      v38 = v23;
      OUTLINED_FUNCTION_28_38();
      v26 = Hasher._finalize()();
      outlined destroy of TranscriptionViewModel.Caption((uint64_t)v18);
      v45 = v26;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v25 + 12) = 2080;
      v27 = (uint64_t *)&v15[*(int *)(v11 + 28)];
      v29 = *v27;
      v28 = v27[1];
      swift_bridgeObjectRetain();
      v45 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v29, v28, &v44);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      outlined destroy of TranscriptionViewModel.Caption((uint64_t)v15);
      _os_log_impl(&dword_1BD004000, v39, (os_log_type_t)v38, "CallScreeningRTTHelper: sending notification for caption %{public}ld: %s", (uint8_t *)v25, 0x16u);
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_60();
    }
    outlined destroy of TranscriptionViewModel.Caption((uint64_t)v18);
    outlined destroy of TranscriptionViewModel.Caption((uint64_t)v15);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v43);
    v30 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
    v31 = &v20[*(int *)(v11 + 28)];
    v32 = *(_QWORD *)v31;
    v33 = *((_QWORD *)v31 + 1);
    swift_bridgeObjectRetain();
    v34 = (void *)MEMORY[0x1C3B72E00](v32, v33);
    OUTLINED_FUNCTION_2_1();
    OUTLINED_FUNCTION_31_37();
    OUTLINED_FUNCTION_28_38();
    Hasher._finalize()();
    isa = Int._bridgeToObjectiveC()().super.super.isa;
    v36 = (void *)MEMORY[0x1C3B72E00](v42, a3);
    objc_msgSend(v30, sel_processCallScreeningTranscription_transcriptionID_callUUID_, v34, isa, v36);

    outlined destroy of TranscriptionViewModel.Caption((uint64_t)v20);
  }
  OUTLINED_FUNCTION_52_1();
}

uint64_t CallScreeningRTTHelper.shouldShowScreeningRTT(for:)(void *a1)
{
  id v1;
  uint64_t v2;

  if (!a1)
    return 0;
  v1 = a1;
  if (TUCallScreeningRTTEnabled())
  {
    if ((objc_msgSend(v1, sel_isRTT) & 1) != 0)
      v2 = 1;
    else
      v2 = (uint64_t)objc_msgSend(v1, sel_isTTY);
  }
  else
  {
    v2 = 0;
  }

  return v2;
}

Swift::Bool __swiftcall CallScreeningRTTHelper.shouldShowScreeningRTT(for:)(Swift::String a1)
{
  uint64_t v1;
  void *object;
  uint64_t countAndFlagsBits;
  id v4;
  uint64_t v5;
  id v6;

  object = a1._object;
  countAndFlagsBits = a1._countAndFlagsBits;
  v4 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v5 = MEMORY[0x1C3B72E00](countAndFlagsBits, object);
  v6 = objc_msgSend(v4, sel_callWithCallUUID_, v5);

  LOBYTE(v5) = (*(uint64_t (**)(id))(*(_QWORD *)v1 + 184))(v6);
  return v5 & 1;
}

void CallScreeningRTTHelper.callStatusChanged(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  void *v11;
  _BYTE v12[24];
  uint64_t v13;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_7_80();
  if (v13)
  {
    type metadata accessor for TUCall();
    if ((OUTLINED_FUNCTION_14_67() & 1) != 0)
    {
      v3 = objc_msgSend(v11, sel_callUUID);
      v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v6 = v5;

      if ((objc_msgSend(v11, sel_isActive) & 1) != 0)
      {
        swift_bridgeObjectRelease();

      }
      else
      {
        static TaskPriority.userInitiated.getter();
        v7 = type metadata accessor for TaskPriority();
        OUTLINED_FUNCTION_11_65(v7);
        OUTLINED_FUNCTION_34_23();
        v8 = static MainActor.shared.getter();
        v9 = (_QWORD *)OUTLINED_FUNCTION_35_20();
        v10 = MEMORY[0x1E0DF06E8];
        v9[2] = v8;
        v9[3] = v10;
        v9[4] = v1;
        v9[5] = v4;
        v9[6] = v6;
        _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();

        swift_release();
      }
    }
  }
  else
  {
    outlined destroy of TranscriptionViewModel.Caption?((uint64_t)v12, &demangling cache variable for type metadata for Any?);
  }
  OUTLINED_FUNCTION_91();
}

uint64_t closure #1 in CallScreeningRTTHelper.callStatusChanged(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;

  v6[7] = a5;
  v6[8] = a6;
  v6[6] = a4;
  v7 = type metadata accessor for Logger();
  v6[9] = v7;
  v6[10] = *(_QWORD *)(v7 - 8);
  v6[11] = swift_task_alloc();
  type metadata accessor for MainActor();
  v6[12] = static MainActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  return swift_task_switch();
}

uint64_t closure #1 in CallScreeningRTTHelper.callStatusChanged(_:)()
{
  uint64_t v0;
  void *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(void **)(v0 + 88);
  swift_release();
  OUTLINED_FUNCTION_10_75(OBJC_IVAR____TtC15ConversationKit22CallScreeningRTTHelper_mainActorLogger);
  OUTLINED_FUNCTION_16_31();
  Logger.logObject.getter();
  v2 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_7_9(v2))
  {
    OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_105();
    v3 = OUTLINED_FUNCTION_13_62(4.8751e-34);
    *(_QWORD *)(v0 + 40) = OUTLINED_FUNCTION_16_53(v3, v4, v5, v6);
    OUTLINED_FUNCTION_12_61();
    OUTLINED_FUNCTION_29_36();
    OUTLINED_FUNCTION_15_61(&dword_1BD004000, v7, v8, "CallScreeningRTTHelper: removing saved captions for inactive call with callUUID %{public}s");
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }
  v10 = *(_QWORD *)(v0 + 80);
  v9 = *(_QWORD *)(v0 + 88);
  v11 = *(_QWORD *)(v0 + 72);
  OUTLINED_FUNCTION_19_1();

  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
  OUTLINED_FUNCTION_2_0();
  specialized Dictionary._Variant.removeValue(forKey:)();
  swift_endAccess();
  OUTLINED_FUNCTION_27();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void CallScreeningRTTHelper.callRTTStatusChanged(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();
  id v5;
  char v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  void *v15;
  _BYTE v16[24];
  uint64_t v17;

  v2 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_7_80();
  if (v17)
  {
    type metadata accessor for TUCall();
    if ((OUTLINED_FUNCTION_14_67() & 1) != 0)
    {
      v4 = *(uint64_t (**)())(*(_QWORD *)v0 + 184);
      v5 = v15;
      v6 = v4();

      if ((v6 & 1) != 0)
      {
        v7 = objc_msgSend(v5, sel_callUUID);
        v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        v10 = v9;

        static TaskPriority.userInitiated.getter();
        v11 = type metadata accessor for TaskPriority();
        OUTLINED_FUNCTION_11_65(v11);
        OUTLINED_FUNCTION_34_23();
        v12 = static MainActor.shared.getter();
        v13 = (_QWORD *)OUTLINED_FUNCTION_35_20();
        v14 = MEMORY[0x1E0DF06E8];
        v13[2] = v12;
        v13[3] = v14;
        v13[4] = v2;
        v13[5] = v8;
        v13[6] = v10;
        _sScTss5Error_pRs_rlE8priority9operationScTyxsAA_pGScPSg_xyYaKYAcntcfCyt_Tgm5(v1, (uint64_t)&async function pointer to partial apply for closure #1 in CallScreeningRTTHelper.callRTTStatusChanged(_:), (uint64_t)v13);
        swift_release();
      }

    }
  }
  else
  {
    outlined destroy of TranscriptionViewModel.Caption?((uint64_t)v16, &demangling cache variable for type metadata for Any?);
  }
  OUTLINED_FUNCTION_91();
}

uint64_t closure #1 in CallScreeningRTTHelper.callRTTStatusChanged(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;

  v6[4] = a5;
  v6[5] = a6;
  v6[3] = a4;
  v7 = type metadata accessor for Logger();
  v6[6] = v7;
  v6[7] = *(_QWORD *)(v7 - 8);
  v6[8] = swift_task_alloc();
  v6[9] = type metadata accessor for MainActor();
  v6[10] = static MainActor.shared.getter();
  v8 = (_QWORD *)swift_task_alloc();
  v6[11] = v8;
  *v8 = v6;
  v8[1] = closure #1 in CallScreeningRTTHelper.callRTTStatusChanged(_:);
  return static Task<>.sleep(nanoseconds:)();
}

uint64_t closure #1 in CallScreeningRTTHelper.callRTTStatusChanged(_:)()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc();
  dispatch thunk of Actor.unownedExecutor.getter();
  return swift_task_switch();
}

{
  uint64_t v0;
  void *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(void **)(v0 + 64);
  swift_release();
  OUTLINED_FUNCTION_10_75(OBJC_IVAR____TtC15ConversationKit22CallScreeningRTTHelper_mainActorLogger);
  OUTLINED_FUNCTION_16_31();
  Logger.logObject.getter();
  v2 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_7_9(v2))
  {
    OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_105();
    v3 = OUTLINED_FUNCTION_13_62(4.8751e-34);
    *(_QWORD *)(v0 + 16) = OUTLINED_FUNCTION_16_53(v3, v4, v5, v6);
    OUTLINED_FUNCTION_12_61();
    OUTLINED_FUNCTION_29_36();
    OUTLINED_FUNCTION_15_61(&dword_1BD004000, v7, v8, "CallScreeningRTTHelper: syncing captions to RTT on call upgrade for callUUID %{public}s");
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }
  v10 = *(_QWORD *)(v0 + 56);
  v9 = *(_QWORD *)(v0 + 64);
  v11 = *(_QWORD *)(v0 + 48);
  OUTLINED_FUNCTION_19_1();

  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
  (*(void (**)(_QWORD, _QWORD))(**(_QWORD **)(v0 + 24) + 168))(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_16(*(uint64_t (**)(void))(v0 + 8));
}

void @objc CallScreeningRTTHelper.callStatusChanged(_:)(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t);

  v6 = type metadata accessor for Notification();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_11_2();
  static Notification._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  a4(v4);
  swift_release();
  v7 = OUTLINED_FUNCTION_49_16();
  v8(v7);
  OUTLINED_FUNCTION_91();
}

uint64_t CallScreeningRTTHelper.deinit()
{
  uint64_t v0;
  uint64_t v1;

  swift_bridgeObjectRelease();
  v1 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_17_1(v1);
  return v0;
}

uint64_t CallScreeningRTTHelper.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  v0 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_17_1(v0);
  return swift_deallocClassInstance();
}

uint64_t outlined init with copy of TranscriptionViewModel.Caption?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TranscriptionViewModel.Caption?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of TranscriptionViewModel.Caption(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TranscriptionViewModel.Caption(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t outlined destroy of TranscriptionViewModel.Caption?(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  OUTLINED_FUNCTION_17_1(v3);
  return a1;
}

unint64_t type metadata accessor for TUCall()
{
  unint64_t result;

  result = lazy cache variable for type metadata for TUCall;
  if (!lazy cache variable for type metadata for TUCall)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for TUCall);
  }
  return result;
}

uint64_t partial apply for closure #1 in CallScreeningRTTHelper.callStatusChanged(_:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_30_38();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_6_65(v1);
  return closure #1 in CallScreeningRTTHelper.callStatusChanged(_:)(v2, v3, v4, v5, v6, v7);
}

uint64_t objectdestroyTm_7()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in CallScreeningRTTHelper.callRTTStatusChanged(_:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_30_38();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_6_65(v1);
  return closure #1 in CallScreeningRTTHelper.callRTTStatusChanged(_:)(v2, v3, v4, v5, v6, v7);
}

uint64_t ObjC metadata update function for CallScreeningRTTHelper()
{
  return type metadata accessor for CallScreeningRTTHelper();
}

uint64_t type metadata accessor for CallScreeningRTTHelper()
{
  uint64_t result;

  result = type metadata singleton initialization cache for CallScreeningRTTHelper;
  if (!type metadata singleton initialization cache for CallScreeningRTTHelper)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata completion function for CallScreeningRTTHelper()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Logger();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for CallScreeningRTTHelper()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CallScreeningRTTHelper.setupObservers()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of CallScreeningRTTHelper.saveCaptions(_:for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of CallScreeningRTTHelper.syncCaptionsToRTT(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of CallScreeningRTTHelper.syncCaptionToRTT(_:callUUID:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of CallScreeningRTTHelper.shouldShowScreeningRTT(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of CallScreeningRTTHelper.callStatusChanged(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of CallScreeningRTTHelper.callRTTStatusChanged(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t static ButtonStyle<>.notice.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v2;

  *a1 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ColorScheme>.Content);
  OUTLINED_FUNCTION_46_15();
  v2 = (uint64_t *)((char *)a1 + *(int *)(OUTLINED_FUNCTION_10_76() + 20));
  *v2 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<Material?>.Content);
  OUTLINED_FUNCTION_5_78();
  return OUTLINED_FUNCTION_36_7();
}

uint64_t NoticeButtonStyle.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v2;

  *a1 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ColorScheme>.Content);
  OUTLINED_FUNCTION_46_15();
  v2 = (uint64_t *)((char *)a1 + *(int *)(OUTLINED_FUNCTION_10_76() + 20));
  *v2 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<Material?>.Content);
  OUTLINED_FUNCTION_5_78();
  return OUTLINED_FUNCTION_36_7();
}

void NoticeButtonStyle.makeBody(configuration:)(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t KeyPath;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _OWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v2 = type metadata accessor for BlendMode();
  v53 = *(_QWORD *)(v2 - 8);
  v54 = v2;
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_41();
  v52 = v3;
  v51 = type metadata accessor for RoundedRectangle();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_41();
  v50 = v5;
  v6 = type metadata accessor for ButtonStyleConfiguration.Label();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_4_1();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<Color?>>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_77();
  v12 = v11 - v10;
  v46 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_77();
  v16 = v15 - v14;
  v47 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>, _InsettableBackgroundShapeModifier<Color, RoundedRectangle>>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_77();
  v20 = v19 - v18;
  v49 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>, _InsettableBackgroundShapeModifier<Color, RoundedRectangle>>, _BlendModeEffect>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v21);
  OUTLINED_FUNCTION_41();
  v48 = v22;
  ButtonStyleConfiguration.label.getter();
  v23 = static Color.white.getter();
  KeyPath = swift_getKeyPath();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v12, v1, v6);
  v25 = (uint64_t *)(v12 + *(int *)(v8 + 36));
  *v25 = KeyPath;
  v25[1] = v23;
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v1, v6);
  LOBYTE(v23) = static Edge.Set.all.getter();
  EdgeInsets.init(_all:)();
  v27 = v26;
  v29 = v28;
  v31 = v30;
  v33 = v32;
  outlined init with copy of FeatureEligibility?(v12, v16, &demangling cache variable for type metadata for ModifiedContent<ButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<Color?>>);
  v34 = v16 + *(int *)(v46 + 36);
  *(_BYTE *)v34 = v23;
  *(_QWORD *)(v34 + 8) = v27;
  *(_QWORD *)(v34 + 16) = v29;
  *(_QWORD *)(v34 + 24) = v31;
  *(_QWORD *)(v34 + 32) = v33;
  *(_BYTE *)(v34 + 40) = 0;
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v12, &demangling cache variable for type metadata for ModifiedContent<ButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<Color?>>);
  static Color.gray.getter();
  ButtonStyleConfiguration.isPressed.getter();
  v35 = Color.opacity(_:)();
  swift_release();
  v36 = (char *)v50 + *(int *)(v51 + 20);
  v37 = *MEMORY[0x1E0CDB0C0];
  v38 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 104))(v36, v37, v38);
  __asm { FMOV            V0.2D, #5.0 }
  *v50 = _Q0;
  v44 = (uint64_t *)(v20 + *(int *)(v47 + 36));
  v45 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _InsettableBackgroundShapeModifier<Color, RoundedRectangle>);
  outlined init with copy of RoundedRectangle((uint64_t)v50, (uint64_t)v44 + *(int *)(v45 + 52));
  *v44 = v35;
  *(_WORD *)((char *)v44 + *(int *)(v45 + 56)) = 256;
  outlined init with copy of FeatureEligibility?(v16, v20, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>);
  outlined destroy of RoundedRectangle((uint64_t)v50);
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v16, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v53 + 104))(v52, *MEMORY[0x1E0CE0368], v54);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 16))(v48 + *(int *)(v49 + 36), v52, v54);
  outlined init with copy of FeatureEligibility?(v20, v48, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>, _InsettableBackgroundShapeModifier<Color, RoundedRectangle>>);
  (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v52, v54);
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v20, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>, _InsettableBackgroundShapeModifier<Color, RoundedRectangle>>);
  outlined init with take of Any?(v48, a1, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>, _InsettableBackgroundShapeModifier<Color, RoundedRectangle>>, _BlendModeEffect>);
}

uint64_t default argument 0 of NoticeButtonStyle.init(colorScheme:)@<X0>(uint64_t *a1@<X8>)
{
  *a1 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ColorScheme>.Content);
  OUTLINED_FUNCTION_5_78();
  return OUTLINED_FUNCTION_36_7();
}

uint64_t NoticeButtonStyle.init(colorScheme:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v3;

  outlined init with take of Any?(a1, a2, &demangling cache variable for type metadata for Environment<ColorScheme>);
  v3 = (uint64_t *)(a2 + *(int *)(OUTLINED_FUNCTION_10_76() + 20));
  *v3 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<Material?>.Content);
  OUTLINED_FUNCTION_5_78();
  return OUTLINED_FUNCTION_36_7();
}

void key path getter for EnvironmentValues.backgroundMaterial : EnvironmentValues()
{
  EnvironmentValues.backgroundMaterial.getter();
  OUTLINED_FUNCTION_0();
}

void key path setter for EnvironmentValues.backgroundMaterial : EnvironmentValues(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Material?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_77();
  outlined init with copy of FeatureEligibility?(a1, v4 - v3, &demangling cache variable for type metadata for Material?);
  EnvironmentValues.backgroundMaterial.setter();
  OUTLINED_FUNCTION_18();
}

void protocol witness for ButtonStyle.makeBody(configuration:) in conformance NoticeButtonStyle(uint64_t a1@<X8>)
{
  NoticeButtonStyle.makeBody(configuration:)(a1);
}

void key path getter for EnvironmentValues.colorScheme : EnvironmentValues()
{
  EnvironmentValues.colorScheme.getter();
  OUTLINED_FUNCTION_0();
}

void sub_1BD210C34()
{
  EnvironmentValues.colorScheme.getter();
  OUTLINED_FUNCTION_0();
}

void key path setter for EnvironmentValues.colorScheme : EnvironmentValues(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = type metadata accessor for ColorScheme();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_4_1();
  (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v1, a1);
  EnvironmentValues.colorScheme.setter();
  OUTLINED_FUNCTION_18();
}

uint64_t type metadata accessor for NoticeButtonStyle()
{
  uint64_t result;

  result = type metadata singleton initialization cache for NoticeButtonStyle;
  if (!type metadata singleton initialization cache for NoticeButtonStyle)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BD210CF0()
{
  EnvironmentValues.backgroundMaterial.getter();
  OUTLINED_FUNCTION_0();
}

void key path getter for EnvironmentValues.foregroundColor : EnvironmentValues, serialized()
{
  uint64_t *v0;

  *v0 = OUTLINED_FUNCTION_13_63();
  OUTLINED_FUNCTION_0();
}

void sub_1BD210D2C()
{
  uint64_t *v0;

  *v0 = OUTLINED_FUNCTION_13_63();
  OUTLINED_FUNCTION_0();
}

void key path setter for EnvironmentValues.foregroundColor : EnvironmentValues, serialized()
{
  swift_retain();
  EnvironmentValues.foregroundColor.setter();
  OUTLINED_FUNCTION_0();
}

uint64_t outlined init with copy of RoundedRectangle(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RoundedRectangle();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of RoundedRectangle(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for RoundedRectangle();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t associated type witness table accessor for ButtonStyle.Body : View in NoticeButtonStyle()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t *initializeBufferWithCopyOfBuffer for NoticeButtonStyle(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ColorScheme>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = type metadata accessor for ColorScheme();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v9 = *(int *)(a3 + 20);
    v10 = (uint64_t *)((char *)a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<Material?>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = type metadata accessor for Material();
      if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12))
      {
        v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Material?);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
        __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v12);
      }
    }
    else
    {
      *v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for NoticeButtonStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ColorScheme>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = type metadata accessor for ColorScheme();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  v5 = a1 + *(int *)(a2 + 20);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<Material?>.Content);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v6 = type metadata accessor for Material();
  result = __swift_getEnumTagSinglePayload(v5, 1, v6);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  return result;
}

_QWORD *initializeWithCopy for NoticeButtonStyle(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ColorScheme>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = type metadata accessor for ColorScheme();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<Material?>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = type metadata accessor for Material();
    if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
    {
      v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Material?);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
    }
  }
  else
  {
    *v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *assignWithCopy for NoticeButtonStyle(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  if (a1 != a2)
  {
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)a1, &demangling cache variable for type metadata for Environment<ColorScheme>.Content);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ColorScheme>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = type metadata accessor for ColorScheme();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v7 = *(int *)(a3 + 20);
    v8 = (_QWORD *)((char *)a1 + v7);
    v9 = (_QWORD *)((char *)a2 + v7);
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)a1 + v7, &demangling cache variable for type metadata for Environment<Material?>.Content);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<Material?>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = type metadata accessor for Material();
      if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
      {
        v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Material?);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
        __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
      }
    }
    else
    {
      *v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *initializeWithTake for NoticeButtonStyle(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ColorScheme>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = type metadata accessor for ColorScheme();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<Material?>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v12 = type metadata accessor for Material();
    if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v12))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Material?);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v9, v10, v12);
      __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v12);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  return a1;
}

char *assignWithTake for NoticeButtonStyle(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if (a1 != a2)
  {
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)a1, &demangling cache variable for type metadata for Environment<ColorScheme>.Content);
    v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ColorScheme>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = type metadata accessor for ColorScheme();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
    v8 = *(int *)(a3 + 20);
    v9 = &a1[v8];
    v10 = &a2[v8];
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)&a1[v8], &demangling cache variable for type metadata for Environment<Material?>.Content);
    v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<Material?>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = type metadata accessor for Material();
      if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v12))
      {
        v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Material?);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v9, v10, v12);
        __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v12);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for NoticeButtonStyle()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BD211698(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ColorScheme>);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = a1;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<Material?>);
    v8 = a1 + *(int *)(a3 + 20);
  }
  return __swift_getEnumTagSinglePayload(v8, a2, v7);
}

uint64_t storeEnumTagSinglePayload for NoticeButtonStyle()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BD211714(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ColorScheme>);
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = a1;
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<Material?>);
    v10 = a1 + *(int *)(a4 + 20);
  }
  return __swift_storeEnumTagSinglePayload(v10, a2, a2, v9);
}

void type metadata completion function for NoticeButtonStyle()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for Environment<ColorScheme>.Content();
  if (v0 <= 0x3F)
  {
    type metadata accessor for Environment<Material?>.Content();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void type metadata accessor for Environment<ColorScheme>.Content()
{
  unint64_t v0;
  uint64_t v1;

  if (!lazy cache variable for type metadata for Environment<ColorScheme>.Content)
  {
    type metadata accessor for ColorScheme();
    v0 = type metadata accessor for Environment.Content();
    if (!v1)
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for Environment<ColorScheme>.Content);
  }
}

void type metadata accessor for Environment<Material?>.Content()
{
  unint64_t v0;
  uint64_t v1;

  if (!lazy cache variable for type metadata for Environment<Material?>.Content)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Material?);
    v0 = type metadata accessor for Environment.Content();
    if (!v1)
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for Environment<Material?>.Content);
  }
}

uint64_t sub_1BD2118BC()
{
  return lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<PlaceholderContentView<ModalOverlayTransition>, _OpacityEffect>, _BlurEffect>, _ScaleEffect> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>, _InsettableBackgroundShapeModifier<Color, RoundedRectangle>>, _BlendModeEffect> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>, _InsettableBackgroundShapeModifier<Color, RoundedRectangle>>, _BlendModeEffect>, (uint64_t (*)(void))lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>, _InsettableBackgroundShapeModifier<Color, RoundedRectangle>> and conformance <> ModifiedContent<A, B>, MEMORY[0x1E0CDA1C0]);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>, _InsettableBackgroundShapeModifier<Color, RoundedRectangle>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>, _InsettableBackgroundShapeModifier<Color, RoundedRectangle>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>, _InsettableBackgroundShapeModifier<Color, RoundedRectangle>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>, _InsettableBackgroundShapeModifier<Color, RoundedRectangle>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<PlaceholderContentView<ModalOverlayTransition>, _OpacityEffect>, _BlurEffect>, _ScaleEffect> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>, (uint64_t (*)(void))lazy protocol witness table accessor for type ModifiedContent<ButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>, MEMORY[0x1E0CD9758]);
    lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type _InsettableBackgroundShapeModifier<Color, RoundedRectangle> and conformance _InsettableBackgroundShapeModifier<A, B>, &demangling cache variable for type metadata for _InsettableBackgroundShapeModifier<Color, RoundedRectangle>, MEMORY[0x1E0CDD198]);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>, _InsettableBackgroundShapeModifier<Color, RoundedRectangle>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<Color?>>);
    v2 = lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label();
    lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Color?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Color?>, MEMORY[0x1E0CDCF80]);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label;
  if (!lazy protocol witness table cache variable for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label)
  {
    v1 = type metadata accessor for ButtonStyleConfiguration.Label();
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDC520], v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label);
  }
  return result;
}

uint64_t ParticipantPresentationContext.idsIdentifier.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t ParticipantPresentationContext.videoQuality.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t ParticipantPresentationContext.visibility.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t ParticipantPresentationContext.prominence.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

double ParticipantPresentationContext.spatialPosition.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

uint64_t ParticipantPresentationContext.isInCanvas.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 64);
}

uint64_t static ParticipantPresentationContext.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  char v4;

  if (*(_QWORD *)a1 == *(_QWORD *)a2
    && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    && *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16)
    && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24)
    && CGRectEqualToRect(*(CGRect *)(a1 + 32), *(CGRect *)(a2 + 32)))
  {
    v4 = ((*(_BYTE *)(a1 + 64) & 1) == 0) ^ *(_BYTE *)(a2 + 64);
  }
  else
  {
    v4 = 0;
  }
  return v4 & 1;
}

uint64_t ParticipantPresentationContext.init(idsIdentifier:videoQuality:visibility:prominence:spatialPosition:isInCanvas:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>, double a7@<D0>, double a8@<D1>, double a9@<D2>, double a10@<D3>)
{
  *(_QWORD *)a6 = result;
  *(_QWORD *)(a6 + 8) = a2;
  *(_QWORD *)(a6 + 16) = a3;
  *(_QWORD *)(a6 + 24) = a4;
  *(double *)(a6 + 32) = a7;
  *(double *)(a6 + 40) = a8;
  *(double *)(a6 + 48) = a9;
  *(double *)(a6 + 56) = a10;
  *(_BYTE *)(a6 + 64) = a5;
  return result;
}

void *__swift_memcpy65_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x41uLL);
}

uint64_t getEnumTagSinglePayload for ParticipantPresentationContext(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  BOOL v4;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 65))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 64);
      v4 = v3 >= 2;
      v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ParticipantPresentationContext(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 64) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 65) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 65) = 0;
    if (a2)
      *(_BYTE *)(result + 64) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticipantPresentationContext()
{
  return &type metadata for ParticipantPresentationContext;
}

id ParticipantInfoView.nameLabel.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC15ConversationKit19ParticipantInfoView_nameLabel);
}

id ParticipantInfoView.isExpanded.didset()
{
  char *v0;
  void *v1;
  char *v2;
  uint64_t v3;
  void *v4;

  v1 = v0;
  v2 = &v0[OBJC_IVAR____TtC15ConversationKit19ParticipantInfoView_isExpanded];
  swift_beginAccess();
  if (*v2)
    v3 = 2;
  else
    v3 = 1;
  specialized static UIImage.image(named:)(v3);
  ParticipantViewButton.image.setter(v4);
  return objc_msgSend(v1, sel_setNeedsLayout);
}

void ParticipantInfoView.isExpanded.getter()
{
  OUTLINED_FUNCTION_1_7();
  OUTLINED_FUNCTION_32();
}

void ParticipantInfoView.isExpanded.setter(char a1)
{
  LocalParticipantView.blurEnabled.setter(a1, &OBJC_IVAR____TtC15ConversationKit19ParticipantInfoView_isExpanded, (void (*)(uint64_t))ParticipantInfoView.isExpanded.didset);
}

void ParticipantInfoView.isExpanded.modify(uint64_t a1)
{
  OUTLINED_FUNCTION_16_54(a1);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t ParticipantInfoView.isExpanded.modify(uint64_t a1, char a2)
{
  return SystemApertureOngoingTelephonyControlsView.cnkContentAlpha.modify(a1, a2, (uint64_t (*)(uint64_t))ParticipantInfoView.isExpanded.didset);
}

id ParticipantInfoView.customCornerRadius.didset()
{
  uint64_t v0;
  void *v1;
  double *v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit19ParticipantInfoView_gradientView);
  v2 = (double *)(v0 + OBJC_IVAR____TtC15ConversationKit19ParticipantInfoView_customCornerRadius);
  swift_beginAccess();
  return objc_msgSend(v1, sel__setContinuousCornerRadius_, *v2);
}

double ParticipantInfoView.customCornerRadius.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_1_7();
  return *(double *)v0;
}

id ParticipantInfoView.customCornerRadius.setter(double a1)
{
  uint64_t v1;
  double *v3;

  v3 = (double *)(v1 + OBJC_IVAR____TtC15ConversationKit19ParticipantInfoView_customCornerRadius);
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  return ParticipantInfoView.customCornerRadius.didset();
}

void ParticipantInfoView.customCornerRadius.modify(uint64_t a1)
{
  OUTLINED_FUNCTION_16_54(a1);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t ParticipantInfoView.customCornerRadius.modify(uint64_t a1, char a2)
{
  return SystemApertureOngoingTelephonyControlsView.cnkContentAlpha.modify(a1, a2, (uint64_t (*)(uint64_t))ParticipantInfoView.customCornerRadius.didset);
}

void ParticipantInfoView.isMomentsAvailable.getter()
{
  OUTLINED_FUNCTION_1_7();
  OUTLINED_FUNCTION_32();
}

void ParticipantInfoView.isMomentsAvailable.setter(char a1)
{
  LocalParticipantView.blurEnabled.setter(a1, &OBJC_IVAR____TtC15ConversationKit19ParticipantInfoView_isMomentsAvailable, (void (*)(uint64_t))ParticipantInfoView.isMomentsAvailable.didset);
}

id ParticipantInfoView.isMomentsAvailable.didset()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t *v2;

  v1 = (_BYTE *)(v0 + OBJC_IVAR____TtC15ConversationKit19ParticipantInfoView_isMomentsAvailable);
  swift_beginAccess();
  if (*v1 == 1)
  {
    if (one-time initialization token for shutterButtonEnabled != -1)
      swift_once();
    v2 = &static Colors.ParticipantViews.shutterButtonEnabled;
  }
  else
  {
    if (one-time initialization token for shutterButtonDisabled != -1)
      swift_once();
    v2 = &static Colors.ParticipantViews.shutterButtonDisabled;
  }
  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15ConversationKit19ParticipantInfoView_shutterButton), sel_setTintColor_, *v2);
}

void ParticipantInfoView.isMomentsAvailable.modify(uint64_t a1)
{
  OUTLINED_FUNCTION_16_54(a1);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t ParticipantInfoView.isMomentsAvailable.modify(uint64_t a1, char a2)
{
  return SystemApertureOngoingTelephonyControlsView.cnkContentAlpha.modify(a1, a2, (uint64_t (*)(uint64_t))ParticipantInfoView.isMomentsAvailable.didset);
}

void ParticipantInfoView.recordingLocalVideo.didset()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  _QWORD v8[4];
  __int16 v9;
  uint64_t v10;
  char v11;
  uint64_t v12;

  v1 = v0;
  if (one-time initialization token for shared != -1)
    swift_once();
  if (((*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 568))() & 1) != 0)
  {
    v2 = (_BYTE *)(v0 + OBJC_IVAR____TtC15ConversationKit19ParticipantInfoView_recordingLocalVideo);
    swift_beginAccess();
    v3 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit19ParticipantInfoView_shutterButton);
    if (*v2 == 1)
    {
      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
      v4 = (void *)*MEMORY[0x1E0DC4B50];
      v8[0] = 0x7269632E706F7473;
      v8[1] = 0xEB00000000656C63;
      v8[2] = 3;
      v8[3] = v4;
      v9 = 0;
      v10 = 4;
      v11 = 0;
      v12 = 0;
      v5 = v4;
      v6 = static UIImage.symbolImage(for:)((uint64_t)v8);

      swift_bridgeObjectRelease();
    }
    else
    {
      specialized static UIImage.image(named:)(0);
      v6 = v7;
    }
    objc_msgSend(v3, sel_setImage_forState_, v6, 0);

  }
}

void ParticipantInfoView.recordingLocalVideo.getter()
{
  OUTLINED_FUNCTION_1_7();
  OUTLINED_FUNCTION_32();
}

void ParticipantInfoView.recordingLocalVideo.setter(char a1)
{
  LocalParticipantView.blurEnabled.setter(a1, &OBJC_IVAR____TtC15ConversationKit19ParticipantInfoView_recordingLocalVideo, (void (*)(uint64_t))ParticipantInfoView.recordingLocalVideo.didset);
}

void ParticipantInfoView.recordingLocalVideo.modify(uint64_t a1)
{
  OUTLINED_FUNCTION_16_54(a1);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t ParticipantInfoView.recordingLocalVideo.modify(uint64_t a1, char a2)
{
  return SystemApertureOngoingTelephonyControlsView.cnkContentAlpha.modify(a1, a2, (uint64_t (*)(uint64_t))ParticipantInfoView.recordingLocalVideo.didset);
}

uint64_t key path setter for ParticipantInfoView.delegate : ParticipantInfoView(uint64_t a1, _QWORD **a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(uint64_t (**)(uint64_t, uint64_t))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x108);
  v4 = swift_unknownObjectRetain();
  return v3(v4, v2);
}

uint64_t ParticipantInfoView.delegate.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_1_7();
  return MEMORY[0x1C3B752C0](v0);
}

void ParticipantInfoView.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + OBJC_IVAR____TtC15ConversationKit19ParticipantInfoView_delegate;
  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_9_0();
}

void (*ParticipantInfoView.delegate.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC15ConversationKit19ParticipantInfoView_delegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  OUTLINED_FUNCTION_2_0();
  v6 = MEMORY[0x1C3B752C0](v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return InCallControlsBaseCell.delegate.modify;
}

uint64_t ParticipantInfoView.localRecordingLayout.getter()
{
  uint64_t v0;

  if (one-time initialization token for shared != -1)
    swift_once();
  if (((*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 568))() & 1) != 0)
    return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC15ConversationKit19ParticipantInfoView_localParticipant);
  else
    return 0;
}

char *ParticipantInfoView.__allocating_init(localParticipant:)(char a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return ParticipantInfoView.init(localParticipant:)(a1);
}

char *ParticipantInfoView.init(localParticipant:)(char a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  char *v6;
  uint64_t v7;
  id v8;
  void *v9;
  void *v10;
  uint64_t v11;
  objc_class *v12;
  char *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  char *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  char *v28;
  char *v29;
  id v30;
  id v31;
  id v32;
  id v33;
  void *v34;
  void *v35;
  void *v36;
  id v37;
  id v38;
  id v39;
  id v40;
  void *v41;
  SEL v42;
  void *v43;
  SEL v44;
  void *v45;
  SEL v46;
  void *v47;
  SEL v48;
  uint64_t v49;
  id v50;
  uint64_t v52;
  objc_super v53;
  _QWORD v54[3];
  objc_class *v55;
  uint64_t v56;

  v3 = OBJC_IVAR____TtC15ConversationKit19ParticipantInfoView_gradientView;
  v4 = objc_allocWithZone((Class)type metadata accessor for GradientView());
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, sel_init);
  v6 = (char *)OBJC_IVAR____TtC15ConversationKit19ParticipantInfoView_nameLabel;
  type metadata accessor for ParticipantViewLabelContainerView();
  *(_QWORD *)&v6[(_QWORD)v5] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  v7 = OBJC_IVAR____TtC15ConversationKit19ParticipantInfoView_shutterButton;
  v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3518]), sel_init);
  OUTLINED_FUNCTION_23_45();
  v10 = v9;
  objc_msgSend(v6, sel_setImage_forState_, v9, 0);

  *(_QWORD *)&v5[v7] = v6;
  v11 = OBJC_IVAR____TtC15ConversationKit19ParticipantInfoView_expandButton;
  type metadata accessor for ParticipantViewButton();
  *(_QWORD *)&v5[v11] = OUTLINED_FUNCTION_4_79((uint64_t)&type metadata for ImageNames.ParticipantView, v52, (uint64_t)v53.receiver, (uint64_t)v53.super_class, v54[0], v54[1], v54[2], (uint64_t)v55, v56);
  v5[OBJC_IVAR____TtC15ConversationKit19ParticipantInfoView_isExpanded] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC15ConversationKit19ParticipantInfoView_customCornerRadius] = 0;
  v5[OBJC_IVAR____TtC15ConversationKit19ParticipantInfoView_isMomentsAvailable] = 0;
  v5[OBJC_IVAR____TtC15ConversationKit19ParticipantInfoView_recordingLocalVideo] = 0;
  OUTLINED_FUNCTION_40_4((uint64_t)&v5[OBJC_IVAR____TtC15ConversationKit19ParticipantInfoView_delegate]);
  v5[OBJC_IVAR____TtC15ConversationKit19ParticipantInfoView_localParticipant] = a1;

  v12 = (objc_class *)type metadata accessor for ParticipantInfoView();
  v53.receiver = v5;
  v53.super_class = v12;
  v13 = (char *)objc_msgSendSuper2(&v53, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v14 = OBJC_IVAR____TtC15ConversationKit19ParticipantInfoView_gradientView;
  v15 = *(void **)&v13[OBJC_IVAR____TtC15ConversationKit19ParticipantInfoView_gradientView];
  v16 = one-time initialization token for bottomGradient;
  v17 = v13;
  v18 = v15;
  if (v16 != -1)
    swift_once();
  v19 = swift_bridgeObjectRetain();
  GradientView.colors.setter(v19);

  v20 = OBJC_IVAR____TtC15ConversationKit19ParticipantInfoView_shutterButton;
  v55 = v12;
  v54[0] = v17;
  v21 = v17;
  UIButton.add(target:action:)((uint64_t)v54, (uint64_t)sel_didTapShutterButton);
  outlined destroy of Any?((uint64_t)v54);
  v22 = OBJC_IVAR____TtC15ConversationKit19ParticipantInfoView_expandButton;
  v23 = one-time initialization token for buttonIcon;
  v24 = *(id *)&v21[OBJC_IVAR____TtC15ConversationKit19ParticipantInfoView_expandButton];
  if (v23 != -1)
    swift_once();
  OUTLINED_FUNCTION_17_51();

  objc_msgSend(*(id *)&v21[v22], sel_addTarget_action_forControlEvents_, v21, sel_didTapExpandButton, 1);
  v25 = one-time initialization token for bottomBarText;
  v26 = *(id *)&v17[v20];
  if (v25 != -1)
    swift_once();
  OUTLINED_FUNCTION_17_51();

  v27 = OBJC_IVAR____TtC15ConversationKit19ParticipantInfoView_nameLabel;
  v28 = *(char **)&v21[OBJC_IVAR____TtC15ConversationKit19ParticipantInfoView_nameLabel];
  objc_msgSend(*(id *)&v28[OBJC_IVAR____TtC15ConversationKit33ParticipantViewLabelContainerView_label], sel_setTextColor_, static Colors.ParticipantViews.bottomBarText);
  v29 = v28;
  ParticipantViewLabelContainerView.isCentered.setter(0);

  v30 = *(id *)&v21[v27];
  v31 = objc_msgSend(v30, sel_layer);
  closure #1 in ParticipantInfoView.init(localParticipant:)(v31);

  v32 = *(id *)&v13[v14];
  v33 = objc_msgSend(v32, sel_layer);
  objc_msgSend(v33, sel_setMaskedCorners_, 12);
  objc_msgSend(v33, sel_setMasksToBounds_, 1);

  v34 = *(void **)&v17[v20];
  v35 = *(void **)&v21[v22];
  v36 = *(void **)&v21[v27];
  v37 = *(id *)&v13[v14];
  v38 = v34;
  v39 = v35;
  v40 = v36;
  v41 = (void *)OUTLINED_FUNCTION_13_64();
  objc_msgSend(v41, v42, v37);
  v43 = (void *)OUTLINED_FUNCTION_13_64();
  objc_msgSend(v43, v44, v38);
  v45 = (void *)OUTLINED_FUNCTION_13_64();
  objc_msgSend(v45, v46, v39);
  v47 = (void *)OUTLINED_FUNCTION_13_64();
  objc_msgSend(v47, v48, v40);

  v49 = one-time initialization token for bottomBarRegular;
  v50 = objc_retain(*(id *)(*(_QWORD *)&v21[v27]
                          + OBJC_IVAR____TtC15ConversationKit33ParticipantViewLabelContainerView_label));
  if (v49 != -1)
    swift_once();
  objc_msgSend(v50, sel_setFont_, static Fonts.ParticipantViews.bottomBarRegular);

  return v21;
}

id closure #1 in ParticipantInfoView.init(localParticipant:)(void *a1)
{
  id v2;
  double v3;

  if (one-time initialization token for bottomShadow != -1)
    swift_once();
  v2 = objc_msgSend((id)static Colors.ParticipantViews.bottomShadow, sel_CGColor);
  objc_msgSend(a1, sel_setShadowColor_, v2);

  LODWORD(v3) = 0.5;
  objc_msgSend(a1, sel_setShadowOpacity_, v3);
  objc_msgSend(a1, sel_setShadowOffset_, 0.0, -2.0);
  return objc_msgSend(a1, sel_setShadowRadius_, 5.0);
}

id ParticipantInfoView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void ParticipantInfoView.init(coder:)()
{
  _BYTE *v0;
  void *v1;
  uint64_t v2;
  id v3;
  char *v4;
  id v5;
  uint64_t v6;
  id v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = v0;
  v2 = OBJC_IVAR____TtC15ConversationKit19ParticipantInfoView_gradientView;
  v3 = objc_allocWithZone((Class)type metadata accessor for GradientView());
  *(_QWORD *)((char *)v1 + v2) = OUTLINED_FUNCTION_70_0(v3);
  v4 = (char *)OBJC_IVAR____TtC15ConversationKit19ParticipantInfoView_nameLabel;
  type metadata accessor for ParticipantViewLabelContainerView();
  v5 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  *(_QWORD *)&v4[(_QWORD)v1] = OUTLINED_FUNCTION_70_0(v5);
  v6 = OBJC_IVAR____TtC15ConversationKit19ParticipantInfoView_shutterButton;
  v7 = OUTLINED_FUNCTION_70_0(objc_allocWithZone(MEMORY[0x1E0DC3518]));
  OUTLINED_FUNCTION_23_45();
  v9 = v8;
  objc_msgSend(v4, sel_setImage_forState_, v8, 0);

  *(_QWORD *)((char *)v1 + v6) = v4;
  v10 = OBJC_IVAR____TtC15ConversationKit19ParticipantInfoView_expandButton;
  type metadata accessor for ParticipantViewButton();
  *(_QWORD *)((char *)v1 + v10) = OUTLINED_FUNCTION_4_79((uint64_t)&type metadata for ImageNames.ParticipantView, v11, v12, v13, v14, v15, v16, v17, v18);
  *((_BYTE *)v1 + OBJC_IVAR____TtC15ConversationKit19ParticipantInfoView_isExpanded) = 0;
  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC15ConversationKit19ParticipantInfoView_customCornerRadius) = 0;
  *((_BYTE *)v1 + OBJC_IVAR____TtC15ConversationKit19ParticipantInfoView_isMomentsAvailable) = 0;
  *((_BYTE *)v1 + OBJC_IVAR____TtC15ConversationKit19ParticipantInfoView_recordingLocalVideo) = 0;
  OUTLINED_FUNCTION_40_4((uint64_t)v1 + OBJC_IVAR____TtC15ConversationKit19ParticipantInfoView_delegate);

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

Swift::Void __swiftcall ParticipantInfoView.configure(with:isMomentsAvailable:shouldHideShutterButton:)(Swift::String with, Swift::Bool isMomentsAvailable, Swift::Bool shouldHideShutterButton)
{
  _QWORD *v3;
  _QWORD *v4;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  char v14;
  id v15;
  _QWORD *v16;
  uint64_t v17;

  v4 = v3;
  object = with._object;
  countAndFlagsBits = with._countAndFlagsBits;
  v9 = type metadata accessor for DispatchPredicate();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (uint64_t *)((char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  OUTLINED_FUNCTION_59(v11, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v13 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v10 + 104))(v13, *MEMORY[0x1E0DEF740], v9);
  v14 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v10 + 8))(v13, v9);
  if ((v14 & 1) != 0)
  {
    v15 = objc_retain(*(id *)(*(_QWORD *)((char *)v4 + OBJC_IVAR____TtC15ConversationKit19ParticipantInfoView_nameLabel)
                            + OBJC_IVAR____TtC15ConversationKit33ParticipantViewLabelContainerView_label));
    outlined bridged method (mbgnn) of @objc UILabel.text.setter(countAndFlagsBits, (uint64_t)object, v15);

    v16 = (_QWORD *)MEMORY[0x1E0DEEDD8];
    (*(void (**)(Swift::Bool))((*MEMORY[0x1E0DEEDD8] & *v4) + 0x130))(shouldHideShutterButton);
    (*(void (**)(Swift::Bool))((*v16 & *v4) + 0xD8))(isMomentsAvailable);
  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall ParticipantInfoView.configure(shouldHideShutterButton:)(Swift::Bool shouldHideShutterButton)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  char v9;
  double v10;
  uint64_t v11;

  v2 = v1;
  v4 = type metadata accessor for DispatchPredicate();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (uint64_t *)((char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  OUTLINED_FUNCTION_59(v6, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v8 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v8, *MEMORY[0x1E0DEF740], v4);
  v9 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v8, v4);
  if ((v9 & 1) != 0)
  {
    v10 = 1.0;
    if (shouldHideShutterButton)
      v10 = 0.0;
    objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC15ConversationKit19ParticipantInfoView_shutterButton), sel_setAlpha_, v10);
    OUTLINED_FUNCTION_91();
  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall ParticipantInfoView.layoutSubviews()()
{
  void *v0;
  objc_super v1;

  v1.receiver = v0;
  v1.super_class = (Class)type metadata accessor for ParticipantInfoView();
  objc_msgSendSuper2(&v1, sel_layoutSubviews);
  ParticipantInfoView._layout()();
}

void ParticipantInfoView._layout()()
{
  _QWORD *v0;
  _QWORD *v1;
  double v2;
  CGFloat v3;
  double v4;
  CGFloat v5;
  char *v6;
  id v7;
  void *v8;
  double v9;
  double v10;
  CGFloat v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  CGFloat v18;
  CGFloat v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  CGFloat v26;
  double MinX;
  uint64_t v28;
  uint64_t v29;
  CGFloat v30;
  uint64_t v31;
  double v32;
  double v33;
  double v34;
  double v35;
  id v36;
  SEL v37;
  double v38;
  double v39;
  double v40;
  double v41;
  CGRect v42;
  CGRect v43;
  CGRect v44;
  CGRect v45;
  CGRect v46;
  CGRect v47;
  CGRect v48;

  v1 = v0;
  objc_msgSend(v0, sel_bounds);
  if (CGRectIsInfinite(v42) || (OUTLINED_FUNCTION_8_72(), CGRectIsEmpty(v43)))
  {
    OUTLINED_FUNCTION_19_48();
  }
  else
  {
    OUTLINED_FUNCTION_8_72();
    v3 = v2;
    v5 = v4;
    v6 = *(char **)((char *)v0 + OBJC_IVAR____TtC15ConversationKit19ParticipantInfoView_nameLabel);
    v7 = objc_msgSend(*(id *)&v6[OBJC_IVAR____TtC15ConversationKit33ParticipantViewLabelContainerView_label], sel_font);
    if (v7)
    {
      v8 = v7;
      objc_msgSend(v7, sel_lineHeight);
      v10 = v9;

      v39 = ceil(v10);
      v44.origin.x = OUTLINED_FUNCTION_12_62();
      v11 = CGRectGetMaxX(v44) + -10.0 + -32.0;
      v45.origin.x = OUTLINED_FUNCTION_12_62();
      v12 = CGRectGetMinY(v45) + 10.0;
      v13 = OUTLINED_FUNCTION_14_68();
      v40 = v3;
      v14 = v5;
      v20 = closure #2 in ParticipantInfoView._layout()(v13, v15, v16, v17, v18, v19, v3, v5);
      v22 = v21;
      v24 = v23;
      v26 = v25;
      v41 = v11;
      v46.origin.x = OUTLINED_FUNCTION_14_68();
      MinX = CGRectGetMinX(v46);
      if (((*(uint64_t (**)(uint64_t, uint64_t))((*MEMORY[0x1E0DEEDD8] & *v1) + 0xA0))(v28, v29) & 1) != 0)
      {
        v47.origin.x = v20;
        v47.origin.y = v22;
        v47.size.width = v24;
        v47.size.height = v26;
        MinX = CGRectGetMinX(v47);
      }
      v48.size.height = v26;
      v38 = v26;
      v48.origin.x = v20;
      v48.origin.y = v22;
      v48.size.width = v24;
      v30 = CGRectGetMidY(v48) + v39 * -0.5;
      OUTLINED_FUNCTION_59(v31, (unint64_t *)&lazy cache variable for type metadata for UIView);
      static UIView.screenScale.getter();
      v33 = round(v30 * v32);
      static UIView.screenScale.getter();
      v35 = v33 / v34;
      OUTLINED_FUNCTION_8_72();
      objc_msgSend(*(id *)((char *)v1 + OBJC_IVAR____TtC15ConversationKit19ParticipantInfoView_gradientView), sel_setFrame_, 0.0, 0.0, v40, v14, 0x4040000000000000, 0x4024000000000000);
      objc_msgSend(v6, sel_setFrame_, 10.0, v35, v40 + -10.0 + -10.0 + MinX - v40, v39);
      objc_msgSend(*(id *)((char *)v1 + OBJC_IVAR____TtC15ConversationKit19ParticipantInfoView_shutterButton), sel_setFrame_, v20, v22, v24, v38);
      objc_msgSend(*(id *)((char *)v1 + OBJC_IVAR____TtC15ConversationKit19ParticipantInfoView_expandButton), sel_setFrame_, v41, v12, 32.0, 32.0);
      objc_msgSend(v6, sel_setHidden_, ParticipantInfoView.localRecordingLayout.getter() & 1);
      ParticipantInfoView.localRecordingLayout.getter();
      OUTLINED_FUNCTION_19_48();
      objc_msgSend(v36, v37);
    }
    else
    {
      __break(1u);
    }
  }
}

double closure #2 in ParticipantInfoView._layout()(double a1, double a2, double a3, double a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat a8)
{
  double MinX;
  CGRect v14;
  CGRect v15;

  MinX = CGRectGetMinX(*(CGRect *)&a1);
  if ((ParticipantInfoView.localRecordingLayout.getter() & 1) != 0)
  {
    v14.origin.x = a5;
    v14.origin.y = a6;
    v14.size.width = a7;
    v14.size.height = a8;
    CGRectGetMidY(v14);
  }
  else
  {
    v15.origin.x = a5;
    v15.origin.y = a6;
    v15.size.width = a7;
    v15.size.height = a8;
    CGRectGetMaxY(v15);
  }
  return MinX;
}

void ParticipantInfoView.didTapExpandButton()()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;

  if (OUTLINED_FUNCTION_65_0(*v0))
  {
    v2 = v1;
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(ObjectType, v2);
    swift_unknownObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_0();
  }
}

void ParticipantInfoView.didTapShutterButton()()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  char v4;

  if (OUTLINED_FUNCTION_65_0(*v0))
  {
    v2 = v1;
    ObjectType = swift_getObjectType();
    v4 = OUTLINED_FUNCTION_14_24(*v0);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v2 + 16))(v4 & 1, ObjectType, v2);
    swift_unknownObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_91();
  }
}

id ParticipantInfoView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

void ParticipantInfoView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id ParticipantInfoView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ParticipantInfoView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ParticipantInfoView()
{
  return objc_opt_self();
}

void sub_1BD213370()
{
  _BYTE *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0xA0))() & 1;
  OUTLINED_FUNCTION_0();
}

void sub_1BD2133A8(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_31_5(a1);
  (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & v2) + 0xA8))(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD2133D8()
{
  double *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(double (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0xB8))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD21340C(double *a1, _QWORD **a2)
{
  (*(void (**)(double))((*MEMORY[0x1E0DEEDD8] & **a2) + 0xC0))(*a1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD213444()
{
  _BYTE *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = OUTLINED_FUNCTION_14_24(v1) & 1;
  OUTLINED_FUNCTION_0();
}

void sub_1BD213474(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_31_5(a1);
  (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & v2) + 0xD8))(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD2134A4()
{
  _BYTE *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0xE8))() & 1;
  OUTLINED_FUNCTION_0();
}

void sub_1BD2134DC(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_31_5(a1);
  (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & v2) + 0xF0))(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD21350C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_1_0();
  *v0 = OUTLINED_FUNCTION_65_0(v1);
  v0[1] = v2;
  OUTLINED_FUNCTION_0();
}

uint64_t dispatch thunk of ParticipantInfoViewDelegate.participantViewDidTapToggleFocus()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ParticipantInfoViewDelegate.participantViewDidTapShutter(isEnabled:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t method lookup function for ParticipantInfoView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ParticipantInfoView.isExpanded.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of ParticipantInfoView.isExpanded.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of ParticipantInfoView.isExpanded.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of ParticipantInfoView.customCornerRadius.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of ParticipantInfoView.customCornerRadius.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of ParticipantInfoView.customCornerRadius.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of ParticipantInfoView.isMomentsAvailable.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of ParticipantInfoView.isMomentsAvailable.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of ParticipantInfoView.isMomentsAvailable.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of ParticipantInfoView.recordingLocalVideo.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of ParticipantInfoView.recordingLocalVideo.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of ParticipantInfoView.recordingLocalVideo.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of ParticipantInfoView.delegate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of ParticipantInfoView.delegate.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x108))();
}

uint64_t dispatch thunk of ParticipantInfoView.delegate.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x110))();
}

uint64_t dispatch thunk of ParticipantInfoView.__allocating_init(localParticipant:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 288))();
}

uint64_t dispatch thunk of ParticipantInfoView.configure(with:isMomentsAvailable:shouldHideShutterButton:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x128))();
}

uint64_t dispatch thunk of ParticipantInfoView.configure(shouldHideShutterButton:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x130))();
}

id specialized PictureInPictureWrapperViewController.init(wrappedViewController:)(uint64_t a1)
{
  char *v1;
  char *v2;
  __int128 v3;
  objc_super v5;

  v2 = &v1[direct field offset for PictureInPictureWrapperViewController.touchInsets];
  v3 = *(_OWORD *)(MEMORY[0x1E0DC49E8] + 16);
  *(_OWORD *)v2 = *MEMORY[0x1E0DC49E8];
  *((_OWORD *)v2 + 1) = v3;
  *(_QWORD *)&v1[direct field offset for PictureInPictureWrapperViewController.wrappedViewController] = a1;
  v5.receiver = v1;
  v5.super_class = (Class)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PictureInPictureWrapperViewController<SharedContentViewController>);
  return objc_msgSendSuper2(&v5, sel_initWithNibName_bundle_, 0, 0);
}

uint64_t ScreenSharingSpectatorTip.title.getter()
{
  objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  OUTLINED_FUNCTION_0_96(27, 0x80000001BD67CCE0);
  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_28_39();
  OUTLINED_FUNCTION_11_15();
  lazy protocol witness table accessor for type String and conformance String();
  return Text.init<A>(_:)();
}

uint64_t ScreenSharingSpectatorTip.message.getter()
{
  objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  OUTLINED_FUNCTION_0_96(39, 0x80000001BD67CD00);
  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_28_39();
  OUTLINED_FUNCTION_11_15();
  lazy protocol witness table accessor for type String and conformance String();
  return Text.init<A>(_:)();
}

uint64_t ScreenSharingSpectatorTip.image.getter()
{
  return Image.init(systemName:)();
}

void one-time initialization function for $isScreenSharingInteractive()
{
  uint64_t v0;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Tips.Parameter<Bool>);
  __swift_allocate_value_buffer(v0, static ScreenSharingSpectatorTip.$isScreenSharingInteractive);
  __swift_project_value_buffer(v0, (uint64_t)static ScreenSharingSpectatorTip.$isScreenSharingInteractive);
  Tips.Parameter.init<A>(_:_:_:_:)();
  OUTLINED_FUNCTION_36();
}

uint64_t ScreenSharingSpectatorTip.$isScreenSharingInteractive.unsafeMutableAddressor()
{
  uint64_t v0;

  if (one-time initialization token for $isScreenSharingInteractive != -1)
    swift_once();
  v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Tips.Parameter<Bool>);
  return __swift_project_value_buffer(v0, (uint64_t)static ScreenSharingSpectatorTip.$isScreenSharingInteractive);
}

void static ScreenSharingSpectatorTip.$isScreenSharingInteractive.getter(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (one-time initialization token for $isScreenSharingInteractive != -1)
    swift_once();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Tips.Parameter<Bool>);
  v3 = __swift_project_value_buffer(v2, (uint64_t)static ScreenSharingSpectatorTip.$isScreenSharingInteractive);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_33_28(a1, v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16));
  OUTLINED_FUNCTION_9_0();
}

void static ScreenSharingSpectatorTip.$isScreenSharingInteractive.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (one-time initialization token for $isScreenSharingInteractive != -1)
    swift_once();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Tips.Parameter<Bool>);
  v3 = __swift_project_value_buffer(v2, (uint64_t)static ScreenSharingSpectatorTip.$isScreenSharingInteractive);
  OUTLINED_FUNCTION_2_0();
  v4 = *(_QWORD *)(v2 - 8);
  OUTLINED_FUNCTION_33_28(v3, a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 24));
  swift_endAccess();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v2);
  OUTLINED_FUNCTION_9_0();
}

void static ScreenSharingSpectatorTip.$isScreenSharingInteractive.modify()
{
  uint64_t v0;

  if (one-time initialization token for $isScreenSharingInteractive != -1)
    swift_once();
  v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Tips.Parameter<Bool>);
  __swift_project_value_buffer(v0, (uint64_t)static ScreenSharingSpectatorTip.$isScreenSharingInteractive);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void static ScreenSharingSpectatorTip.isScreenSharingInteractive.getter()
{
  uint64_t v0;

  if (one-time initialization token for $isScreenSharingInteractive != -1)
    swift_once();
  v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Tips.Parameter<Bool>);
  __swift_project_value_buffer(v0, (uint64_t)static ScreenSharingSpectatorTip.$isScreenSharingInteractive);
  OUTLINED_FUNCTION_2_0();
  Tips.Parameter.wrappedValue.getter();
  swift_endAccess();
  OUTLINED_FUNCTION_32();
}

void static ScreenSharingSpectatorTip.isScreenSharingInteractive.setter()
{
  uint64_t v0;

  if (one-time initialization token for $isScreenSharingInteractive != -1)
    swift_once();
  v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Tips.Parameter<Bool>);
  __swift_project_value_buffer(v0, (uint64_t)static ScreenSharingSpectatorTip.$isScreenSharingInteractive);
  OUTLINED_FUNCTION_2_0();
  Tips.Parameter.wrappedValue.setter();
  swift_endAccess();
  OUTLINED_FUNCTION_9_0();
}

void (*static ScreenSharingSpectatorTip.isScreenSharingInteractive.modify(_QWORD *a1))(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  char v4;

  v2 = malloc(0x30uLL);
  *a1 = v2;
  if (one-time initialization token for $isScreenSharingInteractive != -1)
    swift_once();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Tips.Parameter<Bool>);
  v2[3] = v3;
  v2[4] = __swift_project_value_buffer(v3, (uint64_t)static ScreenSharingSpectatorTip.$isScreenSharingInteractive);
  OUTLINED_FUNCTION_2_0();
  Tips.Parameter.wrappedValue.getter();
  v4 = *((_BYTE *)v2 + 41);
  swift_endAccess();
  *((_BYTE *)v2 + 40) = v4;
  return static ScreenSharingSpectatorTip.isScreenSharingInteractive.modify;
}

void static ScreenSharingSpectatorTip.isScreenSharingInteractive.modify(uint64_t a1)
{
  void *v1;

  v1 = *(void **)a1;
  *(_BYTE *)(*(_QWORD *)a1 + 41) = *(_BYTE *)(*(_QWORD *)a1 + 40);
  OUTLINED_FUNCTION_2_0();
  Tips.Parameter.wrappedValue.setter();
  swift_endAccess();
  free(v1);
}

uint64_t ScreenSharingSpectatorTip.rules.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v10;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Tips.Parameter<Bool>);
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Tips.Rule();
  OUTLINED_FUNCTION_42_26();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_16_2();
  if (one-time initialization token for $isScreenSharingInteractive != -1)
    swift_once();
  v5 = __swift_project_value_buffer(v0, (uint64_t)static ScreenSharingSpectatorTip.$isScreenSharingInteractive);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_33_28((uint64_t)v3, v5, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 16));
  Tips.Rule.init<A>(_:_:)();
  static Tips.RuleBuilder.buildExpression(_:)();
  v6 = OUTLINED_FUNCTION_131();
  v7(v6);
  v8 = swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_27();
  return v8;
}

uint64_t closure #2 in ScreenSharingSpectatorTip.rules.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE v11[16];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PredicateExpressions.Value<Bool>);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PredicateExpressions.Variable<Bool>);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = &v11[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type PredicateExpressions.Variable<Bool> and conformance PredicateExpressions.Variable<A>, &demangling cache variable for type metadata for PredicateExpressions.Variable<Bool>);
  static PredicateExpressions.build_Arg<A>(_:)();
  v11[15] = 1;
  static PredicateExpressions.build_Arg<A>(_:)();
  a1[3] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PredicateExpressions.Equal<PredicateExpressions.Variable<Bool>, PredicateExpressions.Value<Bool>>);
  a1[4] = lazy protocol witness table accessor for type PredicateExpressions.Equal<PredicateExpressions.Variable<Bool>, PredicateExpressions.Value<Bool>> and conformance <> PredicateExpressions.Equal<A, B>();
  __swift_allocate_boxed_opaque_existential_1(a1);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type PredicateExpressions.Value<Bool> and conformance PredicateExpressions.Value<A>, &demangling cache variable for type metadata for PredicateExpressions.Value<Bool>);
  static PredicateExpressions.build_Equal<A, B>(lhs:rhs:)();
  (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t protocol witness for Tip.title.getter in conformance ScreenSharingSpectatorTip()
{
  return ScreenSharingSpectatorTip.title.getter();
}

uint64_t protocol witness for Identifiable.id.getter in conformance ScreenSharingSpectatorTip@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v4;
  uint64_t result;
  uint64_t v6;

  v4 = lazy protocol witness table accessor for type ScreenSharingSpectatorTip and conformance ScreenSharingSpectatorTip();
  result = MEMORY[0x1C3B70ED4](a1, v4);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t ScreenSharingSpectatorView.model.getter()
{
  return swift_retain();
}

void ScreenSharingSpectatorView.content.getter()
{
  swift_retain();
  OUTLINED_FUNCTION_0();
}

uint64_t property wrapper backing initializer of ScreenSharingSpectatorView.isCapturingTouch()
{
  unsigned __int8 v1;

  State.init(wrappedValue:)();
  return v1;
}

void ScreenSharingSpectatorView.isCapturingTouch.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
  State.wrappedValue.getter();
  OUTLINED_FUNCTION_32();
}

void key path getter for ScreenSharingSpectatorView.isCapturingTouch : <A>ScreenSharingSpectatorView<A>(_BYTE *a1@<X8>)
{
  char v2;

  ScreenSharingSpectatorView.isCapturingTouch.getter();
  *a1 = v2 & 1;
}

uint64_t key path setter for ScreenSharingSpectatorView.isCapturingTouch : <A>ScreenSharingSpectatorView<A>()
{
  return ScreenSharingSpectatorView.isCapturingTouch.setter();
}

uint64_t ScreenSharingSpectatorView.isCapturingTouch.setter()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
  return State.wrappedValue.setter();
}

void (*ScreenSharingSpectatorView.isCapturingTouch.modify(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  _OWORD *v3;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[1] = *(_OWORD *)(v1 + 24);
  outlined init with take of Any?((uint64_t)v3 + 24, (uint64_t)(v3 + 2), &demangling cache variable for type metadata for AnyLocation<Bool>?);
  *v3 = v3[1];
  outlined retain of AnyLocation<String>?((uint64_t)(v3 + 2));
  *((_QWORD *)v3 + 5) = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
  State.wrappedValue.getter();
  return ScreenSharingSpectatorView.isCapturingTouch.modify;
}

void ScreenSharingSpectatorView.isCapturingTouch.modify(uint64_t a1)
{
  _BYTE *v1;
  _OWORD *v2;
  char v3;

  v1 = *(_BYTE **)a1;
  v2 = (_OWORD *)(*(_QWORD *)a1 + 16);
  v3 = *(_BYTE *)(*(_QWORD *)a1 + 49);
  *(_OWORD *)v1 = *v2;
  v1[48] = v3;
  State.wrappedValue.setter();
  outlined release of State<Bool>((uint64_t)v2);
  free(v1);
}

uint64_t outlined release of State<Bool>(uint64_t a1)
{
  swift_release();
  return a1;
}

uint64_t ScreenSharingSpectatorView.$isCapturingTouch.getter()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
  State.projectedValue.getter();
  return v1;
}

uint64_t (*ScreenSharingSpectatorView.spectatorTip.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t specialized ScreenSharingSpectatorView.init(model:content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t result;
  char v9;
  uint64_t v10;

  State.init(wrappedValue:)();
  swift_retain();
  swift_retain();
  static Tips.configure(_:)();
  swift_release();
  result = swift_release();
  *(_QWORD *)a4 = a1;
  *(_QWORD *)(a4 + 8) = a2;
  *(_QWORD *)(a4 + 16) = a3;
  *(_BYTE *)(a4 + 24) = v9;
  *(_QWORD *)(a4 + 32) = v10;
  return result;
}

uint64_t ScreenSharingSpectatorView.init(model:content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  v8 = property wrapper backing initializer of ScreenSharingSpectatorView.isCapturingTouch();
  v10 = v9;
  swift_retain();
  swift_retain();
  static Tips.configure(_:)();
  swift_release();
  result = OUTLINED_FUNCTION_22();
  *(_QWORD *)a4 = a1;
  *(_QWORD *)(a4 + 8) = a2;
  *(_QWORD *)(a4 + 16) = a3;
  *(_BYTE *)(a4 + 24) = v8 & 1;
  *(_QWORD *)(a4 + 32) = v10;
  return result;
}

void ScreenSharingSpectatorView.body.getter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[2];
  _QWORD v18[2];
  _QWORD v19[2];
  _QWORD v20[2];
  _QWORD v21[2];
  _QWORD v22[3];

  v2 = type metadata accessor for ModifiedContent();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<BezelShieldMaterial>);
  OUTLINED_FUNCTION_9_11();
  v3 = type metadata accessor for ModifiedContent();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Color>);
  v4 = OUTLINED_FUNCTION_16_55();
  v5 = type metadata accessor for ModifiedContent();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _OverlayModifier<ModifiedContent<ScreenSharingSpectatorModalOverlay, _TraitWritingModifier<TransitionTraitKey>>?>);
  OUTLINED_FUNCTION_9_11();
  v6 = type metadata accessor for ModifiedContent();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _AnimationModifier<Bool>);
  OUTLINED_FUNCTION_9_11();
  v7 = type metadata accessor for ModifiedContent();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for TransitioningText<FadeOutFadeInTransition>);
  type metadata accessor for ScreenSharingSpectatorToolbar();
  v22[0] = *(_QWORD *)(a1 + 24);
  v22[1] = lazy protocol witness table accessor for type BezelEffectModifier and conformance BezelEffectModifier();
  v8 = MEMORY[0x1E0CD9C20];
  v9 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v2, v22);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<BezelShieldMaterial> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<BezelShieldMaterial>);
  v21[0] = v9;
  v21[1] = v10;
  v11 = MEMORY[0x1C3B750C8](v8, v3, v21);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Color> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Color>);
  v20[0] = v11;
  v20[1] = v12;
  v19[0] = MEMORY[0x1C3B750C8](v8, v4, v20);
  v19[1] = lazy protocol witness table accessor for type ScreenSharingTouchShield and conformance ScreenSharingTouchShield();
  v13 = MEMORY[0x1C3B750C8](v8, v5, v19);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _OverlayModifier<ModifiedContent<ScreenSharingSpectatorModalOverlay, _TraitWritingModifier<TransitionTraitKey>>?> and conformance _OverlayModifier<A>, &demangling cache variable for type metadata for _OverlayModifier<ModifiedContent<ScreenSharingSpectatorModalOverlay, _TraitWritingModifier<TransitionTraitKey>>?>);
  v18[0] = v13;
  v18[1] = v14;
  v15 = MEMORY[0x1C3B750C8](v8, v6, v18);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _AnimationModifier<Bool> and conformance _AnimationModifier<A>, &demangling cache variable for type metadata for _AnimationModifier<Bool>);
  v17[0] = v15;
  v17[1] = v16;
  MEMORY[0x1C3B750C8](v8, v7, v17);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type TransitioningText<FadeOutFadeInTransition> and conformance TransitioningText<A>, &demangling cache variable for type metadata for TransitioningText<FadeOutFadeInTransition>);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type ScreenSharingSpectatorToolbar and conformance ScreenSharingSpectatorToolbar, (void (*)(uint64_t))type metadata accessor for ScreenSharingSpectatorToolbar);
  type metadata accessor for ScreenSharingContentView();
}

void sub_1BD214ACC()
{
  OUTLINED_FUNCTION_41_25();
  OUTLINED_FUNCTION_13_7();
}

void sub_1BD214AE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v6;

  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type ScreenSharingSpectatorViewModel and conformance ScreenSharingSpectatorViewModel, v3);
  *(_QWORD *)(v4 - 232) = v1;
  *(_QWORD *)(v4 - 224) = v2;
  *(_QWORD *)(v4 - 216) = a1;
  *(_QWORD *)(v4 - 208) = v6;
  OUTLINED_FUNCTION_25_9();
}

void sub_1BD214B1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<TipView<ScreenSharingSpectatorTip>, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>);
  OUTLINED_FUNCTION_9_6();
  v1 = OUTLINED_FUNCTION_41_0();
  MEMORY[0x1C3B750C8](MEMORY[0x1E0CE0680], v1);
  type metadata accessor for ZStack();
  OUTLINED_FUNCTION_42_26();
  v3 = MEMORY[0x1E0C80A78](v2);
  MEMORY[0x1E0C80A78](v3);
  static Alignment.top.getter();
  v4 = *(_QWORD *)(v0 - 304);
  *(_QWORD *)(v0 - 256) = *(_QWORD *)(v0 - 296);
  *(_QWORD *)(v0 - 248) = v4;
  *(_QWORD *)(v0 - 240) = *(_QWORD *)(v0 - 288);
  ZStack.init(alignment:content:)();
  OUTLINED_FUNCTION_13_7();
}

uint64_t sub_1BD214BE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t);
  uint64_t v9;

  v6 = OUTLINED_FUNCTION_131();
  static ViewBuilder.buildExpression<A>(_:)(v6, v7, a1);
  v8 = *(void (**)(uint64_t))(v3 + 8);
  v9 = OUTLINED_FUNCTION_131();
  v8(v9);
  static ViewBuilder.buildBlock<A>(_:)(v2, v1, *(_QWORD *)(v4 - 280));
  return ((uint64_t (*)(uint64_t, uint64_t))v8)(v2, v1);
}

void closure #1 in ScreenSharingSpectatorView.body.getter(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[19];
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD v47[2];
  _QWORD v48[2];
  _QWORD v49[2];
  _QWORD v50[2];
  _QWORD v51[2];
  _QWORD v52[2];

  v33[12] = a3;
  v33[15] = a2;
  v33[14] = a1;
  v39 = a4;
  v38 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TipView<ScreenSharingSpectatorTip>);
  v37 = *(_QWORD *)(v38 - 8);
  MEMORY[0x1E0C80A78](v38);
  v33[16] = (char *)v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<TipView<ScreenSharingSpectatorTip>, _EnvironmentKeyWritingModifier<Color?>>);
  MEMORY[0x1E0C80A78](v34);
  v33[17] = (char *)v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<TipView<ScreenSharingSpectatorTip>, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>);
  v7 = MEMORY[0x1E0C80A78](v36);
  v33[18] = (char *)v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v35 = (char *)v33 - v9;
  v10 = type metadata accessor for ModifiedContent();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<BezelShieldMaterial>);
  v11 = type metadata accessor for ModifiedContent();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Color>);
  v12 = type metadata accessor for ModifiedContent();
  v13 = type metadata accessor for ModifiedContent();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _OverlayModifier<ModifiedContent<ScreenSharingSpectatorModalOverlay, _TraitWritingModifier<TransitionTraitKey>>?>);
  v14 = type metadata accessor for ModifiedContent();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _AnimationModifier<Bool>);
  v15 = type metadata accessor for ModifiedContent();
  v16 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for TransitioningText<FadeOutFadeInTransition>);
  v33[7] = v16;
  v40 = type metadata accessor for ScreenSharingSpectatorToolbar();
  v17 = lazy protocol witness table accessor for type BezelEffectModifier and conformance BezelEffectModifier();
  v52[0] = a3;
  v52[1] = v17;
  v18 = MEMORY[0x1E0CD9C20];
  v19 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v10, v52);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<BezelShieldMaterial> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<BezelShieldMaterial>);
  v51[0] = v19;
  v51[1] = v20;
  v21 = MEMORY[0x1C3B750C8](v18, v11, v51);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Color> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Color>);
  v50[0] = v21;
  v50[1] = v22;
  v23 = MEMORY[0x1C3B750C8](v18, v12, v50);
  v24 = lazy protocol witness table accessor for type ScreenSharingTouchShield and conformance ScreenSharingTouchShield();
  v49[0] = v23;
  v49[1] = v24;
  v25 = MEMORY[0x1C3B750C8](v18, v13, v49);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _OverlayModifier<ModifiedContent<ScreenSharingSpectatorModalOverlay, _TraitWritingModifier<TransitionTraitKey>>?> and conformance _OverlayModifier<A>, &demangling cache variable for type metadata for _OverlayModifier<ModifiedContent<ScreenSharingSpectatorModalOverlay, _TraitWritingModifier<TransitionTraitKey>>?>);
  v48[0] = v25;
  v48[1] = v26;
  v27 = MEMORY[0x1C3B750C8](v18, v14, v48);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _AnimationModifier<Bool> and conformance _AnimationModifier<A>, &demangling cache variable for type metadata for _AnimationModifier<Bool>);
  v47[0] = v27;
  v47[1] = v28;
  v33[8] = v15;
  v29 = MEMORY[0x1C3B750C8](v18, v15, v47);
  v33[4] = v29;
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type TransitioningText<FadeOutFadeInTransition> and conformance TransitioningText<A>, &demangling cache variable for type metadata for TransitioningText<FadeOutFadeInTransition>);
  v31 = v30;
  v33[1] = v30;
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type ScreenSharingSpectatorToolbar and conformance ScreenSharingSpectatorToolbar, (void (*)(uint64_t))type metadata accessor for ScreenSharingSpectatorToolbar);
  v33[0] = v32;
  v41 = v15;
  v42 = v16;
  v43 = v40;
  v44 = v29;
  v45 = v31;
  v46 = v32;
  type metadata accessor for ScreenSharingContentView();
}

void sub_1BD214FFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  __int128 v28;

  *(_QWORD *)(v9 - 408) = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1);
  v12 = (char *)&a9 - v11;
  v13 = type metadata accessor for ScreenSharingSpectatorViewModel();
  *(_QWORD *)(v9 - 472) = v13;
  v14 = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ScreenSharingContentView<A, B, C>, a1);
  *(_QWORD *)(v9 - 448) = v14;
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type ScreenSharingSpectatorViewModel and conformance ScreenSharingSpectatorViewModel, (void (*)(uint64_t))type metadata accessor for ScreenSharingSpectatorViewModel);
  *(_QWORD *)(v9 - 456) = v15;
  *(_QWORD *)(v9 - 256) = a1;
  *(_QWORD *)(v9 - 248) = v13;
  *(_QWORD *)(v9 - 240) = v14;
  *(_QWORD *)(v9 - 232) = v15;
  v16 = MEMORY[0x1C3B75050](0, v9 - 256, MEMORY[0x1E0CDE048], 0);
  *(_QWORD *)(v9 - 424) = v16;
  *(_QWORD *)(v9 - 416) = *(_QWORD *)(v16 - 8);
  v17 = MEMORY[0x1E0C80A78](v16);
  *(_QWORD *)(v9 - 392) = (char *)&a9 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x1E0C80A78](v17);
  v20 = MEMORY[0x1E0C80A78](v19);
  *(_QWORD *)(v9 - 480) = (char *)&a9 - v21;
  v22 = *(_QWORD *)(v9 - 384);
  (*(void (**)(uint64_t))(**(_QWORD **)v22 + 264))(v20);
  *(_OWORD *)(v9 - 112) = *(_OWORD *)(v22 + 24);
  v23 = swift_allocObject();
  v24 = *(_QWORD *)(v9 - 376);
  v25 = *(_QWORD *)(v9 - 400);
  *(_QWORD *)(v23 + 16) = v24;
  *(_QWORD *)(v23 + 24) = v25;
  v26 = *(_OWORD *)(v22 + 16);
  *(_OWORD *)(v23 + 32) = *(_OWORD *)v22;
  *(_OWORD *)(v23 + 48) = v26;
  *(_QWORD *)(v23 + 64) = *(_QWORD *)(v22 + 32);
  v27 = swift_allocObject();
  *(_QWORD *)(v27 + 16) = v24;
  *(_QWORD *)(v27 + 24) = v25;
  v28 = *(_OWORD *)(v22 + 16);
  *(_OWORD *)(v27 + 32) = *(_OWORD *)v22;
  *(_OWORD *)(v27 + 48) = v28;
  *(_QWORD *)(v27 + 64) = *(_QWORD *)(v22 + 32);
  ScreenSharingContentView.init(contentMode:content:title:toolbar:)((uint64_t)v12);
}

uint64_t sub_1BD215230()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t OpaqueTypeConformance2;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t);

  swift_retain();
  swift_retain();
  outlined retain of State<Bool>(v3 - 112);
  swift_retain();
  swift_retain();
  outlined retain of State<Bool>(v3 - 112);
  v4 = swift_checkMetadataState();
  v5 = *(_QWORD *)(v3 - 448);
  v6 = *(_QWORD *)(v3 - 456);
  View.environment<A>(_:)();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 408) + 8))(v1, v2);
  *(_QWORD *)(v3 - 256) = v2;
  *(_QWORD *)(v3 - 248) = v4;
  *(_QWORD *)(v3 - 240) = v5;
  *(_QWORD *)(v3 - 232) = v6;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  *(_QWORD *)(v3 - 376) = OpaqueTypeConformance2;
  v8 = *(_QWORD *)(v3 - 480);
  v9 = *(_QWORD *)(v3 - 424);
  static ViewBuilder.buildExpression<A>(_:)(v0, v9, OpaqueTypeConformance2);
  v10 = *(_QWORD *)(v3 - 416);
  v11 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  *(_QWORD *)(v3 - 296) = v11;
  v11(v0, v9);
  lazy protocol witness table accessor for type ScreenSharingSpectatorTip and conformance ScreenSharingSpectatorTip();
  v12 = *(_QWORD *)(v3 - 368);
  TipView.init(_:arrowEdge:action:)();
  v13 = static Color.white.getter();
  KeyPath = swift_getKeyPath();
  v15 = *(_QWORD *)(v3 - 320);
  v16 = *(_QWORD *)(v3 - 360);
  v17 = *(_QWORD *)(v3 - 312);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v16, v12, v17);
  v18 = (uint64_t *)(v16 + *(int *)(*(_QWORD *)(v3 - 344) + 36));
  *v18 = KeyPath;
  v18[1] = v13;
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v12, v17);
  LOBYTE(v13) = static Edge.Set.all.getter();
  v19 = *(_QWORD *)(v3 - 352);
  outlined init with copy of FeatureEligibility?(v16, v19, &demangling cache variable for type metadata for ModifiedContent<TipView<ScreenSharingSpectatorTip>, _EnvironmentKeyWritingModifier<Color?>>);
  v20 = *(_QWORD *)(v3 - 328);
  v21 = v19 + *(int *)(v20 + 36);
  *(_BYTE *)v21 = v13;
  *(_OWORD *)(v21 + 8) = 0u;
  *(_OWORD *)(v21 + 24) = 0u;
  *(_BYTE *)(v21 + 40) = 1;
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v16, &demangling cache variable for type metadata for ModifiedContent<TipView<ScreenSharingSpectatorTip>, _EnvironmentKeyWritingModifier<Color?>>);
  v22 = *(_QWORD *)(v3 - 336);
  outlined init with take of Any?(v19, v22, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<TipView<ScreenSharingSpectatorTip>, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>);
  v23 = *(_QWORD *)(v3 - 392);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v23, v8, v9);
  *(_QWORD *)(v3 - 256) = v23;
  outlined init with copy of FeatureEligibility?(v22, v19, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<TipView<ScreenSharingSpectatorTip>, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>);
  *(_QWORD *)(v3 - 248) = v19;
  *(_QWORD *)(v3 - 272) = v9;
  *(_QWORD *)(v3 - 264) = v20;
  *(_QWORD *)(v3 - 288) = *(_QWORD *)(v3 - 376);
  *(_QWORD *)(v3 - 280) = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<TipView<ScreenSharingSpectatorTip>, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>();
  static ViewBuilder.buildBlock<each A>(_:)((uint64_t *)(v3 - 256), 2, v3 - 272);
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v22, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<TipView<ScreenSharingSpectatorTip>, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>);
  v24 = *(void (**)(uint64_t, uint64_t))(v3 - 296);
  v24(v8, v9);
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v19, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<TipView<ScreenSharingSpectatorTip>, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>);
  return ((uint64_t (*)(uint64_t, uint64_t))v24)(v23, v9);
}

uint64_t closure #1 in closure #1 in ScreenSharingSpectatorView.body.getter@<X0>(uint64_t (**a1)(_QWORD)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  uint64_t v31;
  uint64_t (*v32)(char *, uint64_t);
  uint64_t v33;
  char *v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(char *, uint64_t);
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  _QWORD v96[2];
  _QWORD v97[2];
  _QWORD v98[2];
  _QWORD v99[2];
  char v100;
  _QWORD v101[2];
  _QWORD v102[2];
  __int128 v103;
  double v104;
  uint64_t v105;
  char v106;
  double v107;

  v95 = a3;
  v93 = a4;
  v86 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v7 = (char *)&v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ModifiedContent();
  v78 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v76 - v9;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<BezelShieldMaterial>);
  v11 = type metadata accessor for ModifiedContent();
  v80 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v77 = (char *)&v76 - v12;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Color>);
  v13 = type metadata accessor for ModifiedContent();
  v81 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v94 = (char *)&v76 - v14;
  v82 = v15;
  v16 = type metadata accessor for ModifiedContent();
  v84 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v83 = (char *)&v76 - v17;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _OverlayModifier<ModifiedContent<ScreenSharingSpectatorModalOverlay, _TraitWritingModifier<TransitionTraitKey>>?>);
  v79 = v16;
  v18 = type metadata accessor for ModifiedContent();
  v87 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v85 = (char *)&v76 - v19;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _AnimationModifier<Bool>);
  v89 = v18;
  v92 = type metadata accessor for ModifiedContent();
  v91 = *(_QWORD *)(v92 - 8);
  v20 = MEMORY[0x1E0C80A78](v92);
  v88 = (char *)&v76 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x1E0C80A78](v20);
  v90 = (char *)&v76 - v23;
  v24 = a1[1](v22);
  v25 = (uint64_t)*a1;
  v26 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)*a1 + 840))(v24);
  v27 = (*(double (**)(void))(*(_QWORD *)v25 + 816))();
  v29 = v28;
  v30 = (*(double (**)(void))(*(_QWORD *)v25 + 832))();
  *(double *)&v103 = v27;
  *((_QWORD *)&v103 + 1) = v29;
  v104 = v27;
  v105 = v29;
  v106 = 0;
  v107 = v30;
  v31 = v95;
  View.bezelEffect(_:metrics:)(v26, &v103, a2);
  swift_bridgeObjectRelease();
  v32 = *(uint64_t (**)(char *, uint64_t))(v86 + 8);
  v86 = a2;
  v33 = a2;
  v34 = v77;
  v35 = v32(v7, v33);
  (*(void (**)(uint64_t))(*(_QWORD *)v25 + 848))(v35);
  v36 = lazy protocol witness table accessor for type BezelEffectModifier and conformance BezelEffectModifier();
  v102[0] = v31;
  v102[1] = v36;
  v37 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v8, v102);
  View.bezelShieldMaterial(_:)();
  (*(void (**)(char *, uint64_t))(v78 + 8))(v10, v8);
  ScreenSharingSpectatorView.isCapturingTouch.getter();
  if ((v38 & 1) != 0)
    static Color.red.getter();
  else
    static Color.blue.getter();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<BezelShieldMaterial> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<BezelShieldMaterial>);
  v101[0] = v37;
  v101[1] = v39;
  v40 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v11, v101);
  View.bezelOutlineColor(_:)();
  swift_release();
  v41 = (*(uint64_t (**)(char *, uint64_t))(v80 + 8))(v34, v11);
  if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)v25 + 264))(v41) & 1) != 0)
  {
    v42 = 0;
  }
  else
  {
    (*(void (**)(char *__return_ptr))(*(_QWORD *)v25 + 784))(&v100);
    v42 = v100 == 1;
  }
  v43 = ScreenSharingSpectatorView.$isCapturingTouch.getter();
  v45 = v44;
  v47 = v46;
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Color> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Color>);
  v99[0] = v40;
  v99[1] = v48;
  v49 = MEMORY[0x1E0CD9C20];
  v50 = v82;
  v51 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v82, v99);
  v52 = v47 & 1;
  v53 = v83;
  v54 = v94;
  View.screenSharingTouchShield(isActive:isCapturingTouch:)(v42, v43, v45, v52, v50, v51);
  swift_release();
  swift_release();
  v55 = (*(uint64_t (**)(char *, uint64_t))(v81 + 8))(v54, v50);
  MEMORY[0x1E0C80A78](v55);
  v56 = v95;
  *(&v76 - 4) = v86;
  *(&v76 - 3) = v56;
  *(&v76 - 2) = (uint64_t)a1;
  v57 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ScreenSharingSpectatorModalOverlay, _TraitWritingModifier<TransitionTraitKey>>?);
  v58 = lazy protocol witness table accessor for type ScreenSharingTouchShield and conformance ScreenSharingTouchShield();
  v98[0] = v51;
  v98[1] = v58;
  v59 = v49;
  v60 = v49;
  v61 = v79;
  v62 = MEMORY[0x1C3B750C8](v59, v79, v98);
  v63 = lazy protocol witness table accessor for type ModifiedContent<ScreenSharingSpectatorModalOverlay, _TraitWritingModifier<TransitionTraitKey>>? and conformance <A> A?();
  default argument 2 of View.frame(width:height:alignment:)(v61, v57, v62, v63);
  v64 = v85;
  View.overlay<A>(alignment:content:)();
  (*(void (**)(char *, uint64_t))(v84 + 8))(v53, v61);
  static Animation.interpolatingSpring(mass:stiffness:damping:initialVelocity:)();
  v100 = (*(uint64_t (**)(void))(*(_QWORD *)v25 + 856))() & 1;
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _OverlayModifier<ModifiedContent<ScreenSharingSpectatorModalOverlay, _TraitWritingModifier<TransitionTraitKey>>?> and conformance _OverlayModifier<A>, &demangling cache variable for type metadata for _OverlayModifier<ModifiedContent<ScreenSharingSpectatorModalOverlay, _TraitWritingModifier<TransitionTraitKey>>?>);
  v97[0] = v62;
  v97[1] = v65;
  v66 = v89;
  v67 = MEMORY[0x1C3B750C8](v60, v89, v97);
  v68 = v88;
  View.animation<A>(_:value:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v87 + 8))(v64, v66);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _AnimationModifier<Bool> and conformance _AnimationModifier<A>, &demangling cache variable for type metadata for _AnimationModifier<Bool>);
  v96[0] = v67;
  v96[1] = v69;
  v70 = v60;
  v71 = v92;
  v72 = MEMORY[0x1C3B750C8](v70, v92, v96);
  v73 = (uint64_t)v90;
  static ViewBuilder.buildExpression<A>(_:)(v68, v71, v72);
  v74 = *(void (**)(char *, uint64_t))(v91 + 8);
  v74(v68, v71);
  static ViewBuilder.buildBlock<A>(_:)(v73, v71, v93);
  return ((uint64_t (*)(uint64_t, uint64_t))v74)(v73, v71);
}

uint64_t closure #1 in closure #1 in closure #1 in ScreenSharingSpectatorView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char v15;
  uint64_t v16;
  uint64_t v18;

  v4 = type metadata accessor for ScreenSharingSpectatorModalOverlay(0);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (uint64_t *)((char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v18 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ScreenSharingSpectatorModalOverlay, _TraitWritingModifier<TransitionTraitKey>>);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (((*(uint64_t (**)(uint64_t))(**(_QWORD **)a1 + 856))(v11) & 1) == 0)
    return __swift_storeEnumTagSinglePayload(a2, 1, 1, v10);
  *v7 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
  swift_storeEnumTagMultiPayload();
  v14 = (char *)v7 + *(int *)(v4 + 20);
  type metadata accessor for ScreenSharingSpectatorViewModel();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type ScreenSharingSpectatorViewModel and conformance ScreenSharingSpectatorViewModel, (void (*)(uint64_t))type metadata accessor for ScreenSharingSpectatorViewModel);
  *(_QWORD *)v14 = Environment.init<A>(_:)();
  v14[8] = v15 & 1;
  outlined init with take of ScreenSharingSpectatorModalOverlay((uint64_t)v7, (uint64_t)v9);
  lazy protocol witness table accessor for type ModalOverlayTransition and conformance ModalOverlayTransition();
  v16 = AnyTransition.init<A>(_:)();
  outlined init with copy of ScreenSharingSpectatorModalOverlay((uint64_t)v9, (uint64_t)v13);
  *(_QWORD *)&v13[*(int *)(v10 + 36)] = v16;
  outlined destroy of ScreenSharingSpectatorModalOverlay((uint64_t)v9);
  outlined init with take of Any?((uint64_t)v13, a2, &demangling cache variable for type metadata for ModifiedContent<ScreenSharingSpectatorModalOverlay, _TraitWritingModifier<TransitionTraitKey>>);
  return __swift_storeEnumTagSinglePayload(a2, 0, 1, v10);
}

uint64_t closure #2 in closure #1 in ScreenSharingSpectatorView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t result;

  v3 = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 792))();
  v5 = v4;
  v6 = (uint64_t *)((char *)a2
                 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TransitioningText<FadeOutFadeInTransition>)
                          + 40));
  *v6 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
  result = swift_storeEnumTagMultiPayload();
  *a2 = v3;
  a2[1] = v5;
  return result;
}

uint64_t closure #3 in closure #1 in ScreenSharingSpectatorView.body.getter@<X0>(uint64_t *a1@<X8>)
{
  char *v2;
  uint64_t result;
  char v4;

  *a1 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
  swift_storeEnumTagMultiPayload();
  v2 = (char *)a1 + *(int *)(type metadata accessor for ScreenSharingSpectatorToolbar() + 20);
  type metadata accessor for ScreenSharingSpectatorViewModel();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type ScreenSharingSpectatorViewModel and conformance ScreenSharingSpectatorViewModel, (void (*)(uint64_t))type metadata accessor for ScreenSharingSpectatorViewModel);
  result = Environment.init<A>(_:)();
  *(_QWORD *)v2 = result;
  v2[8] = v4 & 1;
  return result;
}

void protocol witness for View.body.getter in conformance ScreenSharingSpectatorView<A>(uint64_t a1)
{
  ScreenSharingSpectatorView.body.getter(a1);
}

uint64_t ScreenSharingSpectatorViewController.screenInfoDidChangeSubject.getter()
{
  return swift_retain();
}

uint64_t ScreenSharingSpectatorViewController.isPipped.getter()
{
  return OUTLINED_FUNCTION_39_35() & 1;
}

void ScreenSharingSpectatorViewController.isPipped.setter()
{
  OUTLINED_FUNCTION_40_6();
  OUTLINED_FUNCTION_0();
}

void ScreenSharingSpectatorViewController.isPipped.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit36ScreenSharingSpectatorViewController_model);
  *(_BYTE *)(a1 + 8) = OUTLINED_FUNCTION_39_35() & 1;
  OUTLINED_FUNCTION_0();
}

void ScreenSharingSpectatorViewController.isPipped.modify()
{
  OUTLINED_FUNCTION_40_6();
  OUTLINED_FUNCTION_0();
}

uint64_t ScreenSharingSpectatorViewController.supportedInterfaceOrientations.getter()
{
  uint64_t v1;

  type metadata accessor for UIInterfaceOrientationMask(0);
  OUTLINED_FUNCTION_36_33();
  return v1;
}

unint64_t closure #1 in ScreenSharingSpectatorViewController.supportedInterfaceOrientations.getter@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v3;
  unint64_t result;
  uint64_t v5;
  unint64_t v6;

  (*(void (**)(unint64_t *__return_ptr))(**(_QWORD **)(a1
                                                                       + OBJC_IVAR____TtC15ConversationKit36ScreenSharingSpectatorViewController_model)
                                                         + 648))(&v6);
  v3 = v6;
  result = outlined consume of RemoteControlState(v6);
  v5 = v3 >> 61;
  if (v3 >> 61 != 2)
  {
    result = static Platform.current.getter();
    v5 = 26;
    if (result == 1)
      v5 = 30;
  }
  *a2 = v5;
  return result;
}

uint64_t (*implicit closure #1 in ScreenSharingSpectatorViewController.supportedInterfaceOrientations.getter())()
{
  swift_allocObject();
  swift_unknownObjectWeakInit();
  return partial apply for closure #2 in implicit closure #1 in ScreenSharingSpectatorViewController.supportedInterfaceOrientations.getter;
}

uint64_t closure #1 in closure #2 in implicit closure #1 in ScreenSharingSpectatorViewController.supportedInterfaceOrientations.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[5] = a1;
  v4[6] = a4;
  type metadata accessor for MainActor();
  v4[7] = static MainActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  return swift_task_switch();
}

uint64_t closure #1 in closure #2 in implicit closure #1 in ScreenSharingSpectatorViewController.supportedInterfaceOrientations.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;

  OUTLINED_FUNCTION_27_32();
  OUTLINED_FUNCTION_2_0();
  v2 = (void *)MEMORY[0x1C3B752C0](v0 + 16);
  v3 = v2;
  if (v2)
  {
    objc_msgSend(v2, sel_setNeedsUpdateOfSupportedInterfaceOrientations);

  }
  **(_BYTE **)(v1 + 40) = v3 == 0;
  return OUTLINED_FUNCTION_6(*(uint64_t (**)(void))(v1 + 8));
}

id ScreenSharingSpectatorViewController.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

char *ScreenSharingSpectatorViewController.init()()
{
  void *v0;
  void *v1;
  char *v2;
  char *result;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  char *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  void (*v17)(char *, _UNKNOWN **);
  char *v18;
  _QWORD *v19;
  _QWORD *v20;
  double v21;
  double v22;
  double v23;
  double v24;
  void (*v25)(double, double, double, double);
  _QWORD *v26;
  void *v27;
  void (*v28)(void);
  id v29;
  objc_super v30;

  v1 = (void *)objc_opt_self();
  v2 = v0;
  result = (char *)objc_msgSend(v1, sel_sharedInstance);
  if (result)
  {
    v4 = result;
    v5 = OBJC_IVAR____TtC15ConversationKit36ScreenSharingSpectatorViewController_model;
    if (one-time initialization token for shared != -1)
      swift_once();
    v6 = one-time initialization token for sharedMonitor;
    v7 = static ScreenSharingInteractionController.shared;
    if (v6 != -1)
      swift_once();
    v8 = static ScreenSharingStateMonitor.sharedMonitor;
    type metadata accessor for ScreenSharingSpectatorViewModel();
    v9 = OUTLINED_FUNCTION_14_0();
    *(_QWORD *)&v2[v5] = specialized ScreenSharingSpectatorViewModel.init(serverBag:interactionController:screenSharingStateMonitor:)(v4, v7, v8, v9);
    v10 = OBJC_IVAR____TtC15ConversationKit36ScreenSharingSpectatorViewController_screenInfoDidChangeSubject;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CurrentValueSubject<()?, Never>);
    OUTLINED_FUNCTION_14_0();
    *(_QWORD *)&v2[v10] = CurrentValueSubject.init(_:)();
    v11 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SharedContentViewController()), sel_init);
    v12 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PictureInPictureWrapperViewController<SharedContentViewController>));
    *(_QWORD *)&v2[OBJC_IVAR____TtC15ConversationKit36ScreenSharingSpectatorViewController_contentViewController] = specialized PictureInPictureWrapperViewController.init(wrappedViewController:)((uint64_t)v11);

    v30.receiver = v2;
    v30.super_class = (Class)type metadata accessor for ScreenSharingSpectatorViewController();
    v13 = (char *)objc_msgSendSuper2(&v30, sel_initWithNibName_bundle_, 0, 0);
    v14 = OBJC_IVAR____TtC15ConversationKit36ScreenSharingSpectatorViewController_contentViewController;
    v15 = *(_QWORD **)(*(_QWORD *)&v13[OBJC_IVAR____TtC15ConversationKit36ScreenSharingSpectatorViewController_contentViewController]
                     + direct field offset for PictureInPictureWrapperViewController.wrappedViewController);
    v16 = (_QWORD *)MEMORY[0x1E0DEEDD8];
    v17 = *(void (**)(char *, _UNKNOWN **))((*MEMORY[0x1E0DEEDD8] & *v15) + 0xB8);
    v18 = v13;
    v19 = v15;
    v17(v13, &protocol witness table for ScreenSharingSpectatorViewController);

    v20 = *(_QWORD **)&v13[v14];
    OUTLINED_FUNCTION_2_0();
    v21 = *(double *)&static Layout.ParticipantViews.screenSharingInteractionTouchInsets;
    v22 = unk_1EF4D4170;
    v23 = *(double *)&qword_1EF4D4178;
    v24 = unk_1EF4D4180;
    v25 = *(void (**)(double, double, double, double))((*v16 & *v20) + 0x70);
    v26 = v20;
    v25(v21, v22, v23, v24);

    v27 = *(void **)(*(_QWORD *)&v13[v14]
                   + direct field offset for PictureInPictureWrapperViewController.wrappedViewController);
    v28 = *(void (**)(void))((*v16 & *(_QWORD *)static ScreenSharingStateMonitor.sharedMonitor) + 0x140);
    v29 = v27;
    v28();

    return v18;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void ScreenSharingSpectatorViewController.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;

  objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  OUTLINED_FUNCTION_0();
}

void ScreenSharingSpectatorViewController.init(coder:)()
{
  char *v0;
  char *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v1 = v0;
  v2 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  if (!v2)
    __break(1u);
  v9 = v2;
  v3 = OBJC_IVAR____TtC15ConversationKit36ScreenSharingSpectatorViewController_model;
  if (one-time initialization token for shared != -1)
    swift_once();
  v4 = one-time initialization token for sharedMonitor;
  v5 = static ScreenSharingInteractionController.shared;
  if (v4 != -1)
    swift_once();
  v6 = static ScreenSharingStateMonitor.sharedMonitor;
  type metadata accessor for ScreenSharingSpectatorViewModel();
  v7 = OUTLINED_FUNCTION_14_0();
  *(_QWORD *)&v1[v3] = specialized ScreenSharingSpectatorViewModel.init(serverBag:interactionController:screenSharingStateMonitor:)(v9, v5, v6, v7);
  v8 = OBJC_IVAR____TtC15ConversationKit36ScreenSharingSpectatorViewController_screenInfoDidChangeSubject;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CurrentValueSubject<()?, Never>);
  OUTLINED_FUNCTION_14_0();
  *(_QWORD *)&v1[v8] = CurrentValueSubject.init(_:)();

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

Swift::Void __swiftcall ScreenSharingSpectatorViewController.loadView()()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  void *v43;
  void *v44;
  id v45;
  id v46;
  Class isa;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  objc_super v51;
  __int128 v52;
  _BYTE v53[24];
  __int128 v54;

  v1 = v0;
  v51.receiver = v0;
  v51.super_class = (Class)type metadata accessor for ScreenSharingSpectatorViewController();
  objc_msgSendSuper2(&v51, sel_loadView);
  objc_msgSend(v0, sel_setOverrideUserInterfaceStyle_, 2);
  v2 = objc_msgSend(v0, sel_view);
  if (!v2)
  {
    __break(1u);
    goto LABEL_16;
  }
  v3 = v2;
  v4 = (void *)objc_opt_self();
  v5 = objc_msgSend(v4, sel_blackColor);
  objc_msgSend(v3, sel_setBackgroundColor_, v5);

  v6 = *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit36ScreenSharingSpectatorViewController_model];
  v7 = *(void **)&v1[OBJC_IVAR____TtC15ConversationKit36ScreenSharingSpectatorViewController_contentViewController];
  v8 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v8 + 16) = v7;
  swift_retain();
  v9 = v7;
  specialized ScreenSharingSpectatorView.init(model:content:)(v6, (uint64_t)partial apply for closure #1 in ScreenSharingSpectatorViewController.loadView(), v8, (uint64_t)&v52);
  v54 = *(_OWORD *)&v53[8];
  v10 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LockScreenHostingController<ScreenSharingSpectatorView<PictureInPictureWrapper<SharedContentViewController>>>));
  v48 = v52;
  v49 = *(_OWORD *)v53;
  v50 = *(_QWORD *)&v53[16];
  swift_retain();
  swift_retain();
  outlined retain of State<Bool>((uint64_t)&v54);
  v11 = (void *)UIHostingController.init(rootView:)();
  v12 = objc_msgSend(v11, sel_view, v48, v49, v50);
  if (!v12)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v13 = v12;
  objc_msgSend(v12, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  v14 = OUTLINED_FUNCTION_2_84();
  if (!v14)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v15 = v14;
  v16 = objc_msgSend(v4, sel_blackColor);
  OUTLINED_FUNCTION_30_0((uint64_t)v16, sel_setBackgroundColor_);

  v17 = OUTLINED_FUNCTION_4_80();
  if (!v17)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v18 = v17;
  v19 = OUTLINED_FUNCTION_2_84();
  if (!v19)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v20 = v19;
  OUTLINED_FUNCTION_30_0((uint64_t)v19, sel_addSubview_);

  objc_msgSend(v1, sel_addChildViewController_, v11);
  objc_msgSend(v11, sel_didMoveToParentViewController_, v1);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v21 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v21 + 16) = xmmword_1BD644140;
  v22 = OUTLINED_FUNCTION_2_84();
  if (!v22)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v23 = objc_msgSend(v22, sel_leadingAnchor);
  OUTLINED_FUNCTION_41_2();
  v24 = OUTLINED_FUNCTION_4_80();
  if (!v24)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v25 = v24;
  v26 = objc_msgSend(v24, sel_leadingAnchor);
  OUTLINED_FUNCTION_40_1();
  v27 = OUTLINED_FUNCTION_3_9();
  OUTLINED_FUNCTION_17_52();

  *(_QWORD *)(v21 + 32) = v25;
  v28 = OUTLINED_FUNCTION_2_84();
  if (!v28)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v29 = objc_msgSend(v28, sel_trailingAnchor);
  OUTLINED_FUNCTION_41_2();
  v30 = OUTLINED_FUNCTION_4_80();
  if (!v30)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v31 = v30;
  v32 = objc_msgSend(v30, sel_trailingAnchor);
  OUTLINED_FUNCTION_40_1();
  v33 = OUTLINED_FUNCTION_3_9();
  OUTLINED_FUNCTION_17_52();

  *(_QWORD *)(v21 + 40) = v31;
  v34 = OUTLINED_FUNCTION_2_84();
  if (!v34)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v35 = objc_msgSend(v34, sel_topAnchor);
  OUTLINED_FUNCTION_41_2();
  v36 = OUTLINED_FUNCTION_4_80();
  if (!v36)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v37 = v36;
  v38 = objc_msgSend(v36, sel_topAnchor);
  OUTLINED_FUNCTION_40_1();
  v39 = OUTLINED_FUNCTION_3_9();
  OUTLINED_FUNCTION_17_52();

  *(_QWORD *)(v21 + 48) = v37;
  v40 = OUTLINED_FUNCTION_2_84();
  if (!v40)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v41 = objc_msgSend(v40, sel_bottomAnchor);
  OUTLINED_FUNCTION_41_2();
  v42 = OUTLINED_FUNCTION_4_80();
  if (v42)
  {
    v43 = v42;
    v44 = (void *)objc_opt_self();
    v45 = objc_msgSend(v43, sel_bottomAnchor);
    OUTLINED_FUNCTION_40_1();
    v46 = OUTLINED_FUNCTION_3_9();
    OUTLINED_FUNCTION_17_52();

    *(_QWORD *)(v21 + 56) = v43;
    specialized Array._endMutation()();
    type metadata accessor for NSLayoutConstraint();
    isa = Array._bridgeToObjectiveC()().super.isa;
    OUTLINED_FUNCTION_27();
    objc_msgSend(v44, sel_activateConstraints_, isa, v21);

    OUTLINED_FUNCTION_22();
    swift_release();
    outlined release of State<Bool>((uint64_t)&v54);
    return;
  }
LABEL_27:
  __break(1u);
}

Swift::Void __swiftcall ScreenSharingSpectatorViewController.viewDidLoad()()
{
  void *v0;
  objc_super v1;

  v1.receiver = v0;
  v1.super_class = (Class)type metadata accessor for ScreenSharingSpectatorViewController();
  objc_msgSendSuper2(&v1, sel_viewDidLoad);
  ScreenSharingSpectatorViewController.updateSharedContentViewController()();
}

void ScreenSharingSpectatorViewController.updateSharedContentViewController()()
{
  uint64_t v0;
  id v1;

  v1 = objc_retain(*(id *)(*(_QWORD *)(v0
                                     + OBJC_IVAR____TtC15ConversationKit36ScreenSharingSpectatorViewController_contentViewController)
                         + direct field offset for PictureInPictureWrapperViewController.wrappedViewController));
  OUTLINED_FUNCTION_36_33();

}

uint64_t closure #1 in ScreenSharingSpectatorViewController.updateSharedContentViewController()(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  _QWORD *v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;

  v3 = *(_QWORD *)(a2 + OBJC_IVAR____TtC15ConversationKit36ScreenSharingSpectatorViewController_model);
  v4 = (*(uint64_t (**)(void))(*(_QWORD *)v3 + 312))();
  v5 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v6 = (*(uint64_t (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & *a1) + 0xD0))(v4 & 1);
  v7 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 856))(v6);
  v8 = (*(uint64_t (**)(_QWORD))((*v5 & *a1) + 0xE8))(v7 & 1);
  v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 264))(v8);
  v10 = (*(uint64_t (**)(_QWORD))((*v5 & *a1) + 0x100))(v9 & 1);
  v11 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 800))(v10);
  return (*(uint64_t (**)(_QWORD))((*v5 & *a1) + 0x118))(v11 & 1);
}

uint64_t (*implicit closure #1 in ScreenSharingSpectatorViewController.updateSharedContentViewController()())()
{
  swift_allocObject();
  swift_unknownObjectWeakInit();
  return partial apply for closure #2 in implicit closure #1 in ScreenSharingSpectatorViewController.updateSharedContentViewController();
}

uint64_t closure #2 in implicit closure #1 in ScreenSharingSpectatorViewController.supportedInterfaceOrientations.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_16_2();
  v4 = type metadata accessor for TaskPriority();
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v4);
  v5 = OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_2_0();
  v6 = (void *)MEMORY[0x1C3B752C0](a1 + 16);
  swift_unknownObjectWeakInit();

  type metadata accessor for MainActor();
  swift_retain();
  v7 = static MainActor.shared.getter();
  v8 = (_QWORD *)OUTLINED_FUNCTION_15();
  v9 = MEMORY[0x1E0DF06E8];
  v8[2] = v7;
  v8[3] = v9;
  v8[4] = v5;
  swift_release();
  OUTLINED_FUNCTION_131();
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCytSg_Tgm5();
  return swift_release();
}

uint64_t closure #1 in closure #2 in implicit closure #1 in ScreenSharingSpectatorViewController.updateSharedContentViewController()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[5] = a1;
  v4[6] = a4;
  type metadata accessor for MainActor();
  v4[7] = static MainActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  return swift_task_switch();
}

uint64_t closure #1 in closure #2 in implicit closure #1 in ScreenSharingSpectatorViewController.updateSharedContentViewController()()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  OUTLINED_FUNCTION_27_32();
  OUTLINED_FUNCTION_2_0();
  v2 = (void *)MEMORY[0x1C3B752C0](v0 + 16);
  if (v2)
  {
    ScreenSharingSpectatorViewController.updateSharedContentViewController()();

  }
  **(_BYTE **)(v1 + 40) = v2 == 0;
  return OUTLINED_FUNCTION_6(*(uint64_t (**)(void))(v1 + 8));
}

void __swiftcall ScreenSharingSpectatorViewController.parentViewControllerForRestoringPiP()(UIViewController *__return_ptr retstr)
{
  uint64_t v1;
  id v2;

  v2 = objc_retain(*(id *)(v1
                         + OBJC_IVAR____TtC15ConversationKit36ScreenSharingSpectatorViewController_contentViewController));
}

Swift::Void __swiftcall ScreenSharingSpectatorViewController.handlePictureInPictureRestored()()
{
  uint64_t v0;

  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & **(_QWORD **)(v0
                                                          + OBJC_IVAR____TtC15ConversationKit36ScreenSharingSpectatorViewController_contentViewController))
                    + 0x90))();
  OUTLINED_FUNCTION_0();
}

void ScreenSharingSpectatorViewController.sharedContentViewControllerDidUpdateScreenInfo(_:)()
{
  CurrentValueSubject.send(_:)();
  OUTLINED_FUNCTION_36();
}

id ScreenSharingSpectatorViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;
  id v7;

  v4 = v3;
  if (a2)
  {
    v6 = (void *)MEMORY[0x1C3B72E00]();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void ScreenSharingSpectatorViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t ScreenSharingSpectatorViewController.__ivar_destroyer()
{
  uint64_t v0;

  swift_release();

  return swift_release();
}

id ScreenSharingSpectatorViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ScreenSharingSpectatorViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t protocol witness for SharedContentViewControllerDelegate.sharedContentViewControllerDidUpdateScreenInfo(_:) in conformance ScreenSharingSpectatorViewController()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

unint64_t lazy protocol witness table accessor for type ScreenSharingTouchShield and conformance ScreenSharingTouchShield()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ScreenSharingTouchShield and conformance ScreenSharingTouchShield;
  if (!lazy protocol witness table cache variable for type ScreenSharingTouchShield and conformance ScreenSharingTouchShield)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ScreenSharingTouchShield, &type metadata for ScreenSharingTouchShield);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ScreenSharingTouchShield and conformance ScreenSharingTouchShield);
  }
  return result;
}

void partial apply for closure #1 in ScreenSharingSpectatorView.body.getter(uint64_t a1@<X8>)
{
  uint64_t *v1;

  closure #1 in ScreenSharingSpectatorView.body.getter(v1[4], v1[2], v1[3], a1);
}

unint64_t partial apply for closure #1 in ScreenSharingSpectatorViewController.supportedInterfaceOrientations.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return closure #1 in ScreenSharingSpectatorViewController.supportedInterfaceOrientations.getter(*(_QWORD *)(v1 + 16), a1);
}

uint64_t (*partial apply for implicit closure #1 in ScreenSharingSpectatorViewController.supportedInterfaceOrientations.getter())()
{
  return implicit closure #1 in ScreenSharingSpectatorViewController.supportedInterfaceOrientations.getter();
}

uint64_t specialized ScreenSharingSpectatorViewModel.init(serverBag:interactionController:screenSharingStateMonitor:)(void *a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t (*v22)(uint64_t (*)(), uint64_t);
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<ScreenSharingInteractionSession?>.Publisher);
  v27 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a4 + OBJC_IVAR____TtC15ConversationKit31ScreenSharingSpectatorViewModel__broadcastingParticipant;
  v12 = type metadata accessor for Participant(0);
  __swift_storeEnumTagSinglePayload(v11, 1, 1, v12);
  *(_BYTE *)(a4 + OBJC_IVAR____TtC15ConversationKit31ScreenSharingSpectatorViewModel__isZoomEnabled) = 0;
  *(_BYTE *)(a4 + OBJC_IVAR____TtC15ConversationKit31ScreenSharingSpectatorViewModel__isPipped) = 0;
  *(_BYTE *)(a4 + OBJC_IVAR____TtC15ConversationKit31ScreenSharingSpectatorViewModel__disableRequestButton) = 0;
  *(_QWORD *)(a4 + OBJC_IVAR____TtC15ConversationKit31ScreenSharingSpectatorViewModel__activeParticipantObserver) = 0;
  *(_QWORD *)(a4 + OBJC_IVAR____TtC15ConversationKit31ScreenSharingSpectatorViewModel__sessionObserver) = 0;
  *(_BYTE *)(a4 + OBJC_IVAR____TtC15ConversationKit31ScreenSharingSpectatorViewModel__isTransitioningRemoteControlState) = 0;
  *(_QWORD *)(a4
            + OBJC_IVAR____TtC15ConversationKit31ScreenSharingSpectatorViewModel__isTransitioningRemoteControlStateTask) = 0;
  v13 = static Duration.seconds(_:)();
  v14 = (uint64_t *)(a4
                  + OBJC_IVAR____TtC15ConversationKit31ScreenSharingSpectatorViewModel__remoteControlStateTransitionTime);
  *v14 = v13;
  v14[1] = v15;
  *(_QWORD *)(a4 + OBJC_IVAR____TtC15ConversationKit31ScreenSharingSpectatorViewModel__remoteControlState) = 0xA000000000000010;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ManagedBuffer<(), os_unfair_lock_s>);
  v16 = swift_allocObject();
  *(_DWORD *)(v16 + 16) = 0;
  *(_QWORD *)(a4 + OBJC_IVAR____TtC15ConversationKit31ScreenSharingSpectatorViewModel__requirmentsLock) = v16;
  *(_QWORD *)(a4 + OBJC_IVAR____TtC15ConversationKit31ScreenSharingSpectatorViewModel__remoteControlRequirements) = 0;
  ObservationRegistrar.init()();
  *(_QWORD *)(a4 + OBJC_IVAR____TtC15ConversationKit31ScreenSharingSpectatorViewModel_interactionController) = a2;
  v17 = a2;
  v18 = a3;
  objc_msgSend(a3, sel_addObserver_, a4);
  v19 = swift_allocObject();
  swift_weakInit();
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = v19;
  *(_QWORD *)(v20 + 24) = v17;
  v21 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v22 = *(uint64_t (**)(uint64_t (*)(), uint64_t))((*MEMORY[0x1E0DEEDD8] & *v17) + 0x1B0);
  v23 = v17;
  v24 = v22(partial apply for closure #1 in ScreenSharingSpectatorViewModel.init(serverBag:interactionController:screenSharingStateMonitor:), v20);
  (*(void (**)(uint64_t))((*v21 & *v23) + 0x110))(v24);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Published<ScreenSharingInteractionSession?>.Publisher and conformance Published<A>.Publisher, &demangling cache variable for type metadata for Published<ScreenSharingInteractionSession?>.Publisher);
  swift_retain();
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v10, v8);
  ScreenSharingSpectatorViewModel.sessionObserver.setter();
  if ((FTServerBag.remoteControlEnabled.getter() & 1) != 0)
  {
    swift_getKeyPath();
    (*(void (**)(void))(*(_QWORD *)a4 + 912))();
    swift_release();
    v28 = a4;
    swift_getKeyPath();
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type ScreenSharingSpectatorViewModel and conformance ScreenSharingSpectatorViewModel, (void (*)(uint64_t))type metadata accessor for ScreenSharingSpectatorViewModel);
    ObservationRegistrar.willSet<A, B>(_:keyPath:)();
    swift_release();
    v25 = *(_QWORD *)(a4 + OBJC_IVAR____TtC15ConversationKit31ScreenSharingSpectatorViewModel__remoteControlRequirements);
    if ((v25 & 8) == 0)
      *(_QWORD *)(a4 + OBJC_IVAR____TtC15ConversationKit31ScreenSharingSpectatorViewModel__remoteControlRequirements) = v25 | 8;
    ScreenSharingSpectatorViewModel._remoteControlRequirements.didset();
    v28 = a4;
    swift_getKeyPath();
    ObservationRegistrar.didSet<A, B>(_:keyPath:)();

    swift_release();
  }
  else
  {

  }
  return a4;
}

{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t (*v21)(uint64_t (*)(), uint64_t);
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<ScreenSharingInteractionSession?>.Publisher);
  v26 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a4 + OBJC_IVAR____TtC15ConversationKit31ScreenSharingSpectatorViewModel__broadcastingParticipant;
  v12 = type metadata accessor for Participant(0);
  __swift_storeEnumTagSinglePayload(v11, 1, 1, v12);
  *(_BYTE *)(a4 + OBJC_IVAR____TtC15ConversationKit31ScreenSharingSpectatorViewModel__isZoomEnabled) = 0;
  *(_BYTE *)(a4 + OBJC_IVAR____TtC15ConversationKit31ScreenSharingSpectatorViewModel__isPipped) = 0;
  *(_BYTE *)(a4 + OBJC_IVAR____TtC15ConversationKit31ScreenSharingSpectatorViewModel__disableRequestButton) = 0;
  *(_QWORD *)(a4 + OBJC_IVAR____TtC15ConversationKit31ScreenSharingSpectatorViewModel__activeParticipantObserver) = 0;
  *(_QWORD *)(a4 + OBJC_IVAR____TtC15ConversationKit31ScreenSharingSpectatorViewModel__sessionObserver) = 0;
  *(_BYTE *)(a4 + OBJC_IVAR____TtC15ConversationKit31ScreenSharingSpectatorViewModel__isTransitioningRemoteControlState) = 0;
  *(_QWORD *)(a4
            + OBJC_IVAR____TtC15ConversationKit31ScreenSharingSpectatorViewModel__isTransitioningRemoteControlStateTask) = 0;
  v13 = static Duration.seconds(_:)();
  v14 = (uint64_t *)(a4
                  + OBJC_IVAR____TtC15ConversationKit31ScreenSharingSpectatorViewModel__remoteControlStateTransitionTime);
  *v14 = v13;
  v14[1] = v15;
  *(_QWORD *)(a4 + OBJC_IVAR____TtC15ConversationKit31ScreenSharingSpectatorViewModel__remoteControlState) = 0xA000000000000010;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ManagedBuffer<(), os_unfair_lock_s>);
  v16 = swift_allocObject();
  *(_DWORD *)(v16 + 16) = 0;
  *(_QWORD *)(a4 + OBJC_IVAR____TtC15ConversationKit31ScreenSharingSpectatorViewModel__requirmentsLock) = v16;
  *(_QWORD *)(a4 + OBJC_IVAR____TtC15ConversationKit31ScreenSharingSpectatorViewModel__remoteControlRequirements) = 0;
  ObservationRegistrar.init()();
  *(_QWORD *)(a4 + OBJC_IVAR____TtC15ConversationKit31ScreenSharingSpectatorViewModel_interactionController) = a2;
  v17 = a2;
  objc_msgSend(a3, sel_addObserver_, a4);
  v18 = swift_allocObject();
  swift_weakInit();
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = v18;
  *(_QWORD *)(v19 + 24) = v17;
  v20 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v21 = *(uint64_t (**)(uint64_t (*)(), uint64_t))((*MEMORY[0x1E0DEEDD8] & *v17) + 0x1B0);
  v22 = v17;
  v23 = v21(partial apply for closure #1 in ScreenSharingSpectatorViewModel.init(serverBag:interactionController:screenSharingStateMonitor:), v19);
  (*(void (**)(uint64_t))((*v20 & *v22) + 0x110))(v23);
  lazy protocol witness table accessor for type Published<Set<Participant>>.Publisher and conformance Published<A>.Publisher(&lazy protocol witness table cache variable for type Published<ScreenSharingInteractionSession?>.Publisher and conformance Published<A>.Publisher, &demangling cache variable for type metadata for Published<ScreenSharingInteractionSession?>.Publisher);
  swift_retain();
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v10, v8);
  ScreenSharingSpectatorViewModel.sessionObserver.setter();
  if ((FTServerBag.remoteControlEnabled.getter() & 1) != 0)
  {
    swift_getKeyPath();
    (*(void (**)(void))(*(_QWORD *)a4 + 912))();
    swift_release();
    v27 = a4;
    swift_getKeyPath();
    _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type ScreenSharingSpectatorViewModel and conformance ScreenSharingSpectatorViewModel, (uint64_t (*)(uint64_t))type metadata accessor for ScreenSharingSpectatorViewModel, (uint64_t)&protocol conformance descriptor for ScreenSharingSpectatorViewModel);
    ObservationRegistrar.willSet<A, B>(_:keyPath:)();
    swift_release();
    v24 = *(_QWORD *)(a4 + OBJC_IVAR____TtC15ConversationKit31ScreenSharingSpectatorViewModel__remoteControlRequirements);
    if ((v24 & 8) == 0)
      *(_QWORD *)(a4 + OBJC_IVAR____TtC15ConversationKit31ScreenSharingSpectatorViewModel__remoteControlRequirements) = v24 | 8;
    ScreenSharingSpectatorViewModel._remoteControlRequirements.didset();
    v27 = a4;
    swift_getKeyPath();
    ObservationRegistrar.didSet<A, B>(_:keyPath:)();
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
  }

  return a4;
}

uint64_t type metadata accessor for ScreenSharingSpectatorViewController()
{
  return objc_opt_self();
}

uint64_t sub_1BD217664()
{
  uint64_t v0;

  OUTLINED_FUNCTION_58();
  return swift_deallocObject();
}

id partial apply for closure #1 in ScreenSharingSpectatorViewController.loadView()@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + 16);
  *a1 = v2;
  return v2;
}

uint64_t outlined retain of State<Bool>(uint64_t a1)
{
  swift_retain();
  return a1;
}

unint64_t lazy protocol witness table accessor for type ScreenSharingSpectatorTip and conformance ScreenSharingSpectatorTip()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ScreenSharingSpectatorTip and conformance ScreenSharingSpectatorTip;
  if (!lazy protocol witness table cache variable for type ScreenSharingSpectatorTip and conformance ScreenSharingSpectatorTip)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ScreenSharingSpectatorTip, &type metadata for ScreenSharingSpectatorTip);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ScreenSharingSpectatorTip and conformance ScreenSharingSpectatorTip);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ScreenSharingSpectatorTip and conformance ScreenSharingSpectatorTip;
  if (!lazy protocol witness table cache variable for type ScreenSharingSpectatorTip and conformance ScreenSharingSpectatorTip)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ScreenSharingSpectatorTip, &type metadata for ScreenSharingSpectatorTip);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ScreenSharingSpectatorTip and conformance ScreenSharingSpectatorTip);
  }
  return result;
}

uint64_t associated type witness table accessor for View.Body : View in ScreenSharingSpectatorView<A>()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1BD217730()
{
  return 16;
}

__n128 sub_1BD21773C(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

void sub_1BD217748(_QWORD **a1@<X0>, _BYTE *a2@<X8>)
{
  *a2 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x90))() & 1;
  OUTLINED_FUNCTION_0();
}

void sub_1BD217788(unsigned __int8 *a1, _QWORD **a2)
{
  (*(void (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x98))(*a1);
  OUTLINED_FUNCTION_0();
}

ValueMetadata *type metadata accessor for ScreenSharingSpectatorTip()
{
  return &type metadata for ScreenSharingSpectatorTip;
}

uint64_t destroy for ScreenSharingSpectatorView()
{
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for ScreenSharingSpectatorView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ScreenSharingSpectatorView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ScreenSharingSpectatorView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_release();
  v4 = *(_QWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v4;
  swift_release();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ScreenSharingSpectatorView(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 40))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ScreenSharingSpectatorView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for ScreenSharingSpectatorView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ScreenSharingSpectatorView);
}

uint64_t method lookup function for ScreenSharingSpectatorViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ScreenSharingSpectatorViewController.isPipped.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of ScreenSharingSpectatorViewController.isPipped.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of ScreenSharingSpectatorViewController.isPipped.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of ScreenSharingSpectatorViewController.pipSourceProvider()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of ScreenSharingSpectatorViewController.parentViewControllerForRestoringPiP()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of ScreenSharingSpectatorViewController.handlePictureInPictureRestored()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of ScreenSharingSpectatorViewController.sharedContentViewControllerDidUpdateScreenInfo(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

void sub_1BD217AB0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[2];
  _QWORD v15[2];
  _QWORD v16[2];
  _QWORD v17[2];
  _QWORD v18[3];

  v1 = *(_QWORD *)(a1 + 8);
  v2 = type metadata accessor for ModifiedContent();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<BezelShieldMaterial>);
  OUTLINED_FUNCTION_9_11();
  v3 = type metadata accessor for ModifiedContent();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Color>);
  OUTLINED_FUNCTION_9_11();
  v4 = type metadata accessor for ModifiedContent();
  v5 = type metadata accessor for ModifiedContent();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _OverlayModifier<ModifiedContent<ScreenSharingSpectatorModalOverlay, _TraitWritingModifier<TransitionTraitKey>>?>);
  v6 = OUTLINED_FUNCTION_16_55();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _AnimationModifier<Bool>);
  OUTLINED_FUNCTION_9_11();
  type metadata accessor for ModifiedContent();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for TransitioningText<FadeOutFadeInTransition>);
  type metadata accessor for ScreenSharingSpectatorToolbar();
  v18[0] = v1;
  v18[1] = lazy protocol witness table accessor for type BezelEffectModifier and conformance BezelEffectModifier();
  v7 = MEMORY[0x1E0CD9C20];
  v8 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v2, v18);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<BezelShieldMaterial> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<BezelShieldMaterial>);
  v17[0] = v8;
  v17[1] = v9;
  v10 = MEMORY[0x1C3B750C8](v7, v3, v17);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Color> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Color>);
  v16[0] = v10;
  v16[1] = v11;
  v15[0] = MEMORY[0x1C3B750C8](v7, v4, v16);
  v15[1] = lazy protocol witness table accessor for type ScreenSharingTouchShield and conformance ScreenSharingTouchShield();
  v12 = MEMORY[0x1C3B750C8](v7, v5, v15);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _OverlayModifier<ModifiedContent<ScreenSharingSpectatorModalOverlay, _TraitWritingModifier<TransitionTraitKey>>?> and conformance _OverlayModifier<A>, &demangling cache variable for type metadata for _OverlayModifier<ModifiedContent<ScreenSharingSpectatorModalOverlay, _TraitWritingModifier<TransitionTraitKey>>?>);
  v14[0] = v12;
  v14[1] = v13;
  MEMORY[0x1C3B750C8](v7, v6, v14);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _AnimationModifier<Bool> and conformance _AnimationModifier<A>, &demangling cache variable for type metadata for _AnimationModifier<Bool>);
  OUTLINED_FUNCTION_13_7();
}

void sub_1BD217C8C()
{
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type TransitioningText<FadeOutFadeInTransition> and conformance TransitioningText<A>, &demangling cache variable for type metadata for TransitioningText<FadeOutFadeInTransition>);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type ScreenSharingSpectatorToolbar and conformance ScreenSharingSpectatorToolbar, (void (*)(uint64_t))type metadata accessor for ScreenSharingSpectatorToolbar);
  type metadata accessor for ScreenSharingContentView();
}

void sub_1BD217CE8()
{
  OUTLINED_FUNCTION_41_25();
  OUTLINED_FUNCTION_13_7();
}

void sub_1BD217D04()
{
  void (*v0)(uint64_t);

  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type ScreenSharingSpectatorViewModel and conformance ScreenSharingSpectatorViewModel, v0);
  OUTLINED_FUNCTION_25_9();
}

void sub_1BD217D38()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<TipView<ScreenSharingSpectatorTip>, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>);
  OUTLINED_FUNCTION_9_6();
  OUTLINED_FUNCTION_41_0();
  OUTLINED_FUNCTION_13_7();
}

uint64_t sub_1BD217D60()
{
  uint64_t v0;

  v0 = type metadata accessor for ZStack();
  return MEMORY[0x1C3B750C8](MEMORY[0x1E0CDFCF8], v0);
}

uint64_t partial apply for closure #1 in ScreenSharingSpectatorViewController.updateSharedContentViewController()()
{
  uint64_t v0;

  return closure #1 in ScreenSharingSpectatorViewController.updateSharedContentViewController()(*(_QWORD **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t (*partial apply for implicit closure #1 in ScreenSharingSpectatorViewController.updateSharedContentViewController()())()
{
  return implicit closure #1 in ScreenSharingSpectatorViewController.updateSharedContentViewController()();
}

uint64_t sub_1BD217DEC()
{
  swift_unknownObjectWeakDestroy();
  OUTLINED_FUNCTION_58();
  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in implicit closure #1 in ScreenSharingSpectatorViewController.updateSharedContentViewController()()
{
  uint64_t v0;

  return closure #2 in implicit closure #1 in ScreenSharingSpectatorViewController.supportedInterfaceOrientations.getter(v0);
}

uint64_t partial apply for closure #1 in closure #2 in implicit closure #1 in ScreenSharingSpectatorViewController.updateSharedContentViewController()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_7_11(v1);
  return closure #1 in closure #2 in implicit closure #1 in ScreenSharingSpectatorViewController.updateSharedContentViewController()(v2, v3, v4, v5);
}

uint64_t sub_1BD217E8C()
{
  swift_weakDestroy();
  OUTLINED_FUNCTION_58();
  return swift_deallocObject();
}

uint64_t sub_1BD217EA8()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ScreenSharingSpectatorViewModel.init(serverBag:interactionController:screenSharingStateMonitor:)()
{
  uint64_t v0;

  return closure #1 in ScreenSharingSpectatorViewModel.init(serverBag:interactionController:screenSharingStateMonitor:)(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

void partial apply for closure #2 in ScreenSharingSpectatorViewModel.init(serverBag:interactionController:screenSharingStateMonitor:)()
{
  closure #2 in ScreenSharingSpectatorViewModel.init(serverBag:interactionController:screenSharingStateMonitor:)();
}

uint64_t partial apply for closure #2 in implicit closure #1 in ScreenSharingSpectatorViewController.supportedInterfaceOrientations.getter()
{
  uint64_t v0;

  return closure #2 in implicit closure #1 in ScreenSharingSpectatorViewController.supportedInterfaceOrientations.getter(v0);
}

uint64_t partial apply for closure #1 in closure #2 in implicit closure #1 in ScreenSharingSpectatorViewController.supportedInterfaceOrientations.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_7_11(v1);
  return closure #1 in closure #2 in implicit closure #1 in ScreenSharingSpectatorViewController.supportedInterfaceOrientations.getter(v2, v3, v4, v5);
}

uint64_t partial apply for closure #1 in closure #1 in ScreenSharingSpectatorView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return closure #1 in closure #1 in ScreenSharingSpectatorView.body.getter((uint64_t (**)(_QWORD))(v1 + 32), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t objectdestroy_28Tm()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in closure #1 in ScreenSharingSpectatorView.body.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return closure #2 in closure #1 in ScreenSharingSpectatorView.body.getter(v1 + 32, a1);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<TipView<ScreenSharingSpectatorTip>, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<TipView<ScreenSharingSpectatorTip>, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<TipView<ScreenSharingSpectatorTip>, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<TipView<ScreenSharingSpectatorTip>, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>);
    v2[0] = lazy protocol witness table accessor for type ModifiedContent<TipView<ScreenSharingSpectatorTip>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>();
    v2[1] = MEMORY[0x1E0CD9758];
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<TipView<ScreenSharingSpectatorTip>, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<TipView<ScreenSharingSpectatorTip>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<TipView<ScreenSharingSpectatorTip>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<TipView<ScreenSharingSpectatorTip>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<TipView<ScreenSharingSpectatorTip>, _EnvironmentKeyWritingModifier<Color?>>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type TipView<ScreenSharingSpectatorTip> and conformance TipView<A>, &demangling cache variable for type metadata for TipView<ScreenSharingSpectatorTip>);
    v3 = v2;
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Color?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Color?>);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v5);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<TipView<ScreenSharingSpectatorTip>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t partial apply for closure #1 in closure #1 in closure #1 in ScreenSharingSpectatorView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return closure #1 in closure #1 in closure #1 in ScreenSharingSpectatorView.body.getter(*(_QWORD *)(v1 + 32), a1);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ScreenSharingSpectatorModalOverlay, _TraitWritingModifier<TransitionTraitKey>>? and conformance <A> A?()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = lazy protocol witness table cache variable for type ModifiedContent<ScreenSharingSpectatorModalOverlay, _TraitWritingModifier<TransitionTraitKey>>? and conformance <A> A?;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ScreenSharingSpectatorModalOverlay, _TraitWritingModifier<TransitionTraitKey>>? and conformance <A> A?)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ScreenSharingSpectatorModalOverlay, _TraitWritingModifier<TransitionTraitKey>>?);
    v2 = lazy protocol witness table accessor for type ModifiedContent<ScreenSharingSpectatorModalOverlay, _TraitWritingModifier<TransitionTraitKey>> and conformance <> ModifiedContent<A, B>();
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CE0798], v1, &v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ScreenSharingSpectatorModalOverlay, _TraitWritingModifier<TransitionTraitKey>>? and conformance <A> A?);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ScreenSharingSpectatorModalOverlay, _TraitWritingModifier<TransitionTraitKey>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ScreenSharingSpectatorModalOverlay, _TraitWritingModifier<TransitionTraitKey>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ScreenSharingSpectatorModalOverlay, _TraitWritingModifier<TransitionTraitKey>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ScreenSharingSpectatorModalOverlay, _TraitWritingModifier<TransitionTraitKey>>);
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type ScreenSharingSpectatorModalOverlay and conformance ScreenSharingSpectatorModalOverlay, (void (*)(uint64_t))type metadata accessor for ScreenSharingSpectatorModalOverlay);
    v3 = v2;
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _TraitWritingModifier<TransitionTraitKey> and conformance _TraitWritingModifier<A>, &demangling cache variable for type metadata for _TraitWritingModifier<TransitionTraitKey>);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v5);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ScreenSharingSpectatorModalOverlay, _TraitWritingModifier<TransitionTraitKey>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t outlined init with take of ScreenSharingSpectatorModalOverlay(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ScreenSharingSpectatorModalOverlay(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t lazy protocol witness table accessor for type ModalOverlayTransition and conformance ModalOverlayTransition()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ModalOverlayTransition and conformance ModalOverlayTransition;
  if (!lazy protocol witness table cache variable for type ModalOverlayTransition and conformance ModalOverlayTransition)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ModalOverlayTransition, &type metadata for ModalOverlayTransition);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalOverlayTransition and conformance ModalOverlayTransition);
  }
  return result;
}

uint64_t outlined init with copy of ScreenSharingSpectatorModalOverlay(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ScreenSharingSpectatorModalOverlay(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of ScreenSharingSpectatorModalOverlay(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ScreenSharingSpectatorModalOverlay(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t lazy protocol witness table accessor for type PredicateExpressions.Equal<PredicateExpressions.Variable<Bool>, PredicateExpressions.Value<Bool>> and conformance <> PredicateExpressions.Equal<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = lazy protocol witness table cache variable for type PredicateExpressions.Equal<PredicateExpressions.Variable<Bool>, PredicateExpressions.Value<Bool>> and conformance <> PredicateExpressions.Equal<A, B>;
  if (!lazy protocol witness table cache variable for type PredicateExpressions.Equal<PredicateExpressions.Variable<Bool>, PredicateExpressions.Value<Bool>> and conformance <> PredicateExpressions.Equal<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for PredicateExpressions.Equal<PredicateExpressions.Variable<Bool>, PredicateExpressions.Value<Bool>>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type PredicateExpressions.Variable<Bool> and conformance PredicateExpressions.Variable<A>, &demangling cache variable for type metadata for PredicateExpressions.Variable<Bool>);
    v3[0] = v2;
    v3[1] = lazy protocol witness table accessor for type PredicateExpressions.Value<Bool> and conformance <A> PredicateExpressions.Value<A>();
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CAF830], v1, v3);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PredicateExpressions.Equal<PredicateExpressions.Variable<Bool>, PredicateExpressions.Value<Bool>> and conformance <> PredicateExpressions.Equal<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type PredicateExpressions.Value<Bool> and conformance <A> PredicateExpressions.Value<A>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type PredicateExpressions.Value<Bool> and conformance <A> PredicateExpressions.Value<A>;
  if (!lazy protocol witness table cache variable for type PredicateExpressions.Value<Bool> and conformance <A> PredicateExpressions.Value<A>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for PredicateExpressions.Value<Bool>);
    v2[0] = MEMORY[0x1E0DEAFC0];
    v2[1] = MEMORY[0x1E0DEAFA8];
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CAF848], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PredicateExpressions.Value<Bool> and conformance <A> PredicateExpressions.Value<A>);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_39_35()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 312))();
}

void one-time initialization function for joinLink(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0_97(a1, 2, a3, &static InvitationPreferences.joinLink);
}

uint64_t static InvitationPreferences.joinLink.getter()
{
  return static InvitationPreferences.joinLink.getter(&one-time initialization token for joinLink);
}

void one-time initialization function for startMultiwayCall(uint64_t a1)
{
  one-time initialization function for joinLink(a1, 6, 6, &static InvitationPreferences.startMultiwayCall);
}

uint64_t static InvitationPreferences.startMultiwayCall.getter()
{
  return static InvitationPreferences.joinLink.getter(&one-time initialization token for startMultiwayCall);
}

uint64_t static InvitationPreferences.joinLink.getter(_QWORD *a1)
{
  if (*a1 != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

void one-time initialization function for inviteWithMessages(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0_97(a1, 1, a3, &static InvitationPreferences.inviteWithMessages);
}

void one-time initialization function for joinLink(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t inited;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BD644B60;
  *(_QWORD *)(inited + 32) = objc_msgSend(OUTLINED_FUNCTION_1_90(), sel_initWithHandleType_notificationStyles_, 2, a2);
  *(_QWORD *)(inited + 40) = objc_msgSend(OUTLINED_FUNCTION_1_90(), sel_initWithHandleType_notificationStyles_, 3, a3);
  *(_QWORD *)(inited + 48) = objc_msgSend(OUTLINED_FUNCTION_1_90(), sel_initWithHandleType_notificationStyles_, 1, a3);
  specialized Array._endMutation()();
  specialized Set.init<A>(_:)(inited, v8, v9, v10, v11, v12, v13, v14, (void *)inited, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25,
    v26);
  *a4 = v15;
}

uint64_t static InvitationPreferences.inviteWithMessages.getter()
{
  return static InvitationPreferences.joinLink.getter(&one-time initialization token for inviteWithMessages);
}

ValueMetadata *type metadata accessor for InvitationPreferences()
{
  return &type metadata for InvitationPreferences;
}

uint64_t default argument 3 of ParticipantVideoView.ViewModel.init(videoProvider:videoTransform:prefersSnapshotFadeAnimation:prefersAnimatedVideoTransform:shouldRegisterVideoLayers:freezeFrameUntilUpdate:)()
{
  return 0;
}

uint64_t default argument 5 of ParticipantVideoView.ViewModel.init(videoProvider:videoTransform:prefersSnapshotFadeAnimation:prefersAnimatedVideoTransform:shouldRegisterVideoLayers:freezeFrameUntilUpdate:)()
{
  return 0;
}

void *ParticipantVideoView.ViewModel.init(videoProvider:videoTransform:prefersSnapshotFadeAnimation:prefersAnimatedVideoTransform:shouldRegisterVideoLayers:freezeFrameUntilUpdate:)@<X0>(uint64_t a1@<X0>, const void *a2@<X1>, char a3@<W2>, char a4@<W3>, char a5@<W4>, char a6@<W5>, _BYTE *a7@<X8>)
{
  void *result;

  outlined init with take of SystemApertureIconFactory.SystemApertureIconSet?(a1, (uint64_t)a7, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
  result = memcpy(a7 + 40, a2, 0x80uLL);
  a7[168] = a3;
  a7[169] = a4;
  a7[170] = a5;
  a7[171] = a6;
  return result;
}

BOOL static ParticipantVideoView.ViewModel.== infix(_:_:)()
{
  Swift::Int v0;

  OUTLINED_FUNCTION_5_1();
  OUTLINED_FUNCTION_26_36();
  v0 = OUTLINED_FUNCTION_4_6();
  OUTLINED_FUNCTION_5_1();
  ParticipantVideoView.ViewModel.hash(into:)();
  return v0 == OUTLINED_FUNCTION_4_6();
}

uint64_t ParticipantVideoView.ViewModel.contentsRect.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[3];
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  outlined init with copy of ParticipantVideoProvider?(v0, (uint64_t)v4);
  v1 = v5;
  if (!v5)
    return outlined destroy of ParticipantVideoProvider?((uint64_t)v4);
  v2 = v6;
  __swift_project_boxed_opaque_existential_1(v4, v5);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v2 + 64))(&v7, v1, v2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
  return outlined init with take of SystemApertureIconFactory.SystemApertureIconSet?((uint64_t)&v7, (uint64_t)v4, &demangling cache variable for type metadata for CGRect?);
}

uint64_t default argument 4 of ParticipantVideoView.ViewModel.init(videoProvider:videoTransform:prefersSnapshotFadeAnimation:prefersAnimatedVideoTransform:shouldRegisterVideoLayers:freezeFrameUntilUpdate:)()
{
  return 1;
}

uint64_t static ParticipantVideoView.Errors.== infix(_:_:)()
{
  return 1;
}

void ParticipantVideoView.Errors.hash(into:)()
{
  Hasher._combine(_:)(0);
}

void ParticipantVideoView.Errors.hashValue.getter()
{
  OUTLINED_FUNCTION_5_1();
  Hasher._combine(_:)(0);
  OUTLINED_FUNCTION_4_6();
  OUTLINED_FUNCTION_2();
}

uint64_t ParticipantVideoView.ViewModel.videoProvider.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return outlined init with copy of ParticipantVideoProvider?(v1, a1);
}

uint64_t ParticipantVideoView.ViewModel.videoProvider.setter(uint64_t a1)
{
  uint64_t v1;

  return outlined assign with take of ParticipantVideoProvider?(a1, v1);
}

uint64_t (*ParticipantVideoView.ViewModel.videoProvider.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void *ParticipantVideoView.ViewModel.videoTransform.getter@<X0>(void *a1@<X8>)
{
  uint64_t v1;

  return OUTLINED_FUNCTION_6_11(a1, (const void *)(v1 + 40));
}

void *ParticipantVideoView.ViewModel.videoTransform.setter(const void *a1)
{
  uint64_t v1;

  return OUTLINED_FUNCTION_6_11((void *)(v1 + 40), a1);
}

uint64_t (*ParticipantVideoView.ViewModel.videoTransform.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ParticipantVideoView.ViewModel.prefersSnapshotFadeAnimation.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 168);
}

uint64_t ParticipantVideoView.ViewModel.prefersSnapshotFadeAnimation.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 168) = result;
  return result;
}

uint64_t (*ParticipantVideoView.ViewModel.prefersSnapshotFadeAnimation.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ParticipantVideoView.ViewModel.prefersAnimatedVideoTransform.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 169);
}

uint64_t ParticipantVideoView.ViewModel.prefersAnimatedVideoTransform.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 169) = result;
  return result;
}

uint64_t (*ParticipantVideoView.ViewModel.prefersAnimatedVideoTransform.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ParticipantVideoView.ViewModel.shouldRegisterVideoLayers.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 170);
}

uint64_t ParticipantVideoView.ViewModel.shouldRegisterVideoLayers.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 170) = result;
  return result;
}

uint64_t (*ParticipantVideoView.ViewModel.shouldRegisterVideoLayers.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ParticipantVideoView.ViewModel.freezeFrameUntilUpdate.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 171);
}

uint64_t ParticipantVideoView.ViewModel.freezeFrameUntilUpdate.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 171) = result;
  return result;
}

uint64_t (*ParticipantVideoView.ViewModel.freezeFrameUntilUpdate.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

id ParticipantVideoView.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

char *ParticipantVideoView.init()()
{
  char *v0;
  char *v1;
  objc_class *v2;
  uint64_t v3;
  objc_class *v4;
  _BYTE *v5;
  char *v6;
  uint64_t v7;
  _BYTE *v8;
  char *v9;
  char *v10;
  char *v11;
  char *v12;
  void *v13;
  char *v14;
  id v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  CGColorRef GenericCMYK;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  objc_super v28;
  objc_super v29;
  objc_super v30;

  v1 = v0;
  v2 = (objc_class *)OUTLINED_FUNCTION_15_6();
  v3 = OBJC_IVAR____TtC15ConversationKit20ParticipantVideoView_frontFacingCameraView;
  v4 = (objc_class *)OUTLINED_FUNCTION_27_33();
  v5 = objc_allocWithZone(v4);
  v5[OBJC_IVAR____TtC15ConversationKit26ParticipantVideoCameraView_style] = 0;
  v30.receiver = v5;
  v30.super_class = v4;
  v6 = v0;
  *(_QWORD *)&v1[v3] = objc_msgSendSuper2(&v30, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v7 = OBJC_IVAR____TtC15ConversationKit20ParticipantVideoView_backFacingCameraView;
  v8 = objc_allocWithZone(v4);
  v8[OBJC_IVAR____TtC15ConversationKit26ParticipantVideoCameraView_style] = 0;
  v29.receiver = v8;
  v29.super_class = v4;
  *(_QWORD *)&v6[v7] = OUTLINED_FUNCTION_0_98(&v29, sel_initWithFrame_);
  v9 = &v6[OBJC_IVAR____TtC15ConversationKit20ParticipantVideoView_previousViewModelHash];
  *(_QWORD *)v9 = 0;
  v9[8] = 1;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15ConversationKit20ParticipantVideoView_previousVideoSnapshot] = 0;
  v6[OBJC_IVAR____TtC15ConversationKit20ParticipantVideoView_hasPerformedFirstVideoTransform] = 0;
  v6[OBJC_IVAR____TtC15ConversationKit20ParticipantVideoView_shouldSkipTransformsForLayerHostMode] = 0;
  v10 = &v6[OBJC_IVAR____TtC15ConversationKit20ParticipantVideoView_pendingRegisterVideoLayerForFrontVideoProvider];
  *((_QWORD *)v10 + 4) = 0;
  *(_OWORD *)v10 = 0u;
  *((_OWORD *)v10 + 1) = 0u;
  v11 = &v6[OBJC_IVAR____TtC15ConversationKit20ParticipantVideoView_pendingRegisterVideoLayerForBackVideoProvider];
  *(_OWORD *)v11 = 0u;
  *((_OWORD *)v11 + 1) = 0u;
  *((_QWORD *)v11 + 4) = 0;
  OUTLINED_FUNCTION_39_36(OBJC_IVAR____TtC15ConversationKit20ParticipantVideoView_isViewFrozen);
  v28.receiver = v6;
  v28.super_class = v2;
  v12 = (char *)OUTLINED_FUNCTION_0_98(&v28, sel_initWithFrame_);
  objc_msgSend(v12, sel_setClipsToBounds_, 1);
  if (one-time initialization token for shared != -1)
    swift_once();
  if (((*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 264))() & 1) != 0)
  {
    v13 = (void *)objc_opt_self();
    v14 = v12;
    v15 = objc_msgSend(v13, sel_systemRedColor);
    OUTLINED_FUNCTION_59_6(v14, sel_setBackgroundColor_);

    v16 = OBJC_IVAR____TtC15ConversationKit20ParticipantVideoView_frontFacingCameraView;
    v17 = *(id *)&v14[OBJC_IVAR____TtC15ConversationKit20ParticipantVideoView_frontFacingCameraView];
    v18 = objc_msgSend(v13, sel_systemBlueColor);
    objc_msgSend(v17, sel_setBackgroundColor_, v18);

    v19 = objc_msgSend(*(id *)&v14[v16], sel_layer);
    GenericCMYK = CGColorCreateGenericCMYK(0.0, 0.0, 1.0, 0.0, 1.0);
    OUTLINED_FUNCTION_59_6(v19, sel_setBorderColor_);

    v21 = objc_msgSend(*(id *)&v14[v16], sel_layer);
    objc_msgSend(v21, sel_setBorderWidth_, 5.0);

  }
  v22 = *(void **)&v12[OBJC_IVAR____TtC15ConversationKit20ParticipantVideoView_frontFacingCameraView];
  OUTLINED_FUNCTION_61();
  outlined bridged method (mbnn) of @objc NSObject.accessibilityIdentifier.setter(v23, v24, v22);
  v25 = *(void **)&v12[OBJC_IVAR____TtC15ConversationKit20ParticipantVideoView_backFacingCameraView];
  OUTLINED_FUNCTION_61();
  outlined bridged method (mbnn) of @objc NSObject.accessibilityIdentifier.setter(0xD00000000000001FLL, v26, v25);
  objc_msgSend(v12, sel_addSubview_, v22);
  objc_msgSend(v12, sel_addSubview_, v25);

  return v12;
}

id ParticipantVideoView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void ParticipantVideoView.init(coder:)()
{
  uint64_t v0;
  uint64_t v1;
  objc_class *v2;
  _BYTE *v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  objc_super v9;
  objc_super v10;

  v1 = OBJC_IVAR____TtC15ConversationKit20ParticipantVideoView_frontFacingCameraView;
  v2 = (objc_class *)OUTLINED_FUNCTION_27_33();
  v3 = objc_allocWithZone(v2);
  v3[OBJC_IVAR____TtC15ConversationKit26ParticipantVideoCameraView_style] = 0;
  v10.receiver = v3;
  v10.super_class = v2;
  *(_QWORD *)(v0 + v1) = OUTLINED_FUNCTION_0_98(&v10, sel_initWithFrame_);
  v4 = OBJC_IVAR____TtC15ConversationKit20ParticipantVideoView_backFacingCameraView;
  v5 = objc_allocWithZone(v2);
  v5[OBJC_IVAR____TtC15ConversationKit26ParticipantVideoCameraView_style] = 0;
  v9.receiver = v5;
  v9.super_class = v2;
  *(_QWORD *)(v0 + v4) = OUTLINED_FUNCTION_0_98(&v9, sel_initWithFrame_);
  v6 = v0 + OBJC_IVAR____TtC15ConversationKit20ParticipantVideoView_previousViewModelHash;
  *(_QWORD *)v6 = 0;
  *(_BYTE *)(v6 + 8) = 1;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit20ParticipantVideoView_previousVideoSnapshot) = 0;
  *(_BYTE *)(v0 + OBJC_IVAR____TtC15ConversationKit20ParticipantVideoView_hasPerformedFirstVideoTransform) = 0;
  *(_BYTE *)(v0 + OBJC_IVAR____TtC15ConversationKit20ParticipantVideoView_shouldSkipTransformsForLayerHostMode) = 0;
  v7 = v0 + OBJC_IVAR____TtC15ConversationKit20ParticipantVideoView_pendingRegisterVideoLayerForFrontVideoProvider;
  *(_QWORD *)(v7 + 32) = 0;
  *(_OWORD *)v7 = 0u;
  *(_OWORD *)(v7 + 16) = 0u;
  v8 = v0 + OBJC_IVAR____TtC15ConversationKit20ParticipantVideoView_pendingRegisterVideoLayerForBackVideoProvider;
  *(_OWORD *)v8 = 0u;
  *(_OWORD *)(v8 + 16) = 0u;
  *(_QWORD *)(v8 + 32) = 0;
  OUTLINED_FUNCTION_39_36(OBJC_IVAR____TtC15ConversationKit20ParticipantVideoView_isViewFrozen);
  OUTLINED_FUNCTION_21_4();
  __break(1u);
}

id ParticipantVideoView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

void ParticipantVideoView.init(frame:)()
{
  uint64_t v0;
  uint64_t v1;
  objc_class *v2;
  _BYTE *v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  objc_super v9;
  objc_super v10;

  v1 = OBJC_IVAR____TtC15ConversationKit20ParticipantVideoView_frontFacingCameraView;
  v2 = (objc_class *)OUTLINED_FUNCTION_27_33();
  v3 = objc_allocWithZone(v2);
  v3[OBJC_IVAR____TtC15ConversationKit26ParticipantVideoCameraView_style] = 0;
  v10.receiver = v3;
  v10.super_class = v2;
  *(_QWORD *)(v0 + v1) = OUTLINED_FUNCTION_0_98(&v10, sel_initWithFrame_);
  v4 = OBJC_IVAR____TtC15ConversationKit20ParticipantVideoView_backFacingCameraView;
  v5 = objc_allocWithZone(v2);
  v5[OBJC_IVAR____TtC15ConversationKit26ParticipantVideoCameraView_style] = 0;
  v9.receiver = v5;
  v9.super_class = v2;
  *(_QWORD *)(v0 + v4) = OUTLINED_FUNCTION_0_98(&v9, sel_initWithFrame_);
  v6 = v0 + OBJC_IVAR____TtC15ConversationKit20ParticipantVideoView_previousViewModelHash;
  *(_QWORD *)v6 = 0;
  *(_BYTE *)(v6 + 8) = 1;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit20ParticipantVideoView_previousVideoSnapshot) = 0;
  *(_BYTE *)(v0 + OBJC_IVAR____TtC15ConversationKit20ParticipantVideoView_hasPerformedFirstVideoTransform) = 0;
  *(_BYTE *)(v0 + OBJC_IVAR____TtC15ConversationKit20ParticipantVideoView_shouldSkipTransformsForLayerHostMode) = 0;
  v7 = v0 + OBJC_IVAR____TtC15ConversationKit20ParticipantVideoView_pendingRegisterVideoLayerForFrontVideoProvider;
  *(_QWORD *)(v7 + 32) = 0;
  *(_OWORD *)v7 = 0u;
  *(_OWORD *)(v7 + 16) = 0u;
  v8 = v0 + OBJC_IVAR____TtC15ConversationKit20ParticipantVideoView_pendingRegisterVideoLayerForBackVideoProvider;
  *(_OWORD *)v8 = 0u;
  *(_OWORD *)(v8 + 16) = 0u;
  *(_QWORD *)(v8 + 32) = 0;
  OUTLINED_FUNCTION_39_36(OBJC_IVAR____TtC15ConversationKit20ParticipantVideoView_isViewFrozen);
  OUTLINED_FUNCTION_21_4();
  __break(1u);
}

Swift::Void __swiftcall ParticipantVideoView.layoutSubviews()()
{
  void *v0;
  objc_super v1;

  v1.receiver = v0;
  v1.super_class = (Class)OUTLINED_FUNCTION_15_6();
  objc_msgSendSuper2(&v1, sel_layoutSubviews);
  ParticipantVideoView._layout()();
}

void ParticipantVideoView._layout()()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;
  id v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  CGFloat v14;
  CGFloat v15;
  CGFloat v16;
  CGFloat v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  double v23;
  CGFloat v24;
  double v25;
  CGFloat v26;
  double v27;
  CGFloat v28;
  double v29;
  CGFloat v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  void *v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  id v45;
  void *v46;
  id v47;
  uint64_t i;
  id v49;
  void *v50;
  double v51;
  double v52;
  id v53;
  void *v54;
  id v55;
  char *v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;
  CGRect v60;
  CGRect v61;
  CGRect v62;
  CGRect v63;
  CGRect v64;
  CGRect v65;

  v3 = v0;
  objc_msgSend(v0, sel_bounds);
  if (CGRectIsInfinite(v60))
    return;
  objc_msgSend(v0, sel_bounds);
  if (CGRectIsEmpty(v61))
    return;
  if (v0[OBJC_IVAR____TtC15ConversationKit20ParticipantVideoView_shouldSkipTransformsForLayerHostMode] != 1)
    goto LABEL_37;
  v4 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit20ParticipantVideoView_frontFacingCameraView];
  v5 = objc_msgSend(v4, sel_layer);
  objc_msgSend(v5, sel_bounds);
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v13 = v12;

  v14 = *MEMORY[0x1E0C9D648];
  v15 = *(double *)(MEMORY[0x1E0C9D648] + 8);
  v16 = *(double *)(MEMORY[0x1E0C9D648] + 16);
  v17 = *(double *)(MEMORY[0x1E0C9D648] + 24);
  v62.origin.x = v7;
  v62.origin.y = v9;
  v62.size.width = v11;
  v62.size.height = v13;
  v64.origin.x = *(CGFloat *)MEMORY[0x1E0C9D648];
  v64.origin.y = v15;
  v64.size.width = v16;
  v64.size.height = v17;
  if (!CGRectEqualToRect(v62, v64))
  {
    v18 = (uint64_t)&v3[OBJC_IVAR____TtC15ConversationKit20ParticipantVideoView_pendingRegisterVideoLayerForFrontVideoProvider];
    swift_beginAccess();
    outlined init with copy of ParticipantVideoProvider?(v18, (uint64_t)&v57);
    v19 = *((_QWORD *)&v58 + 1);
    outlined destroy of ParticipantVideoProvider?((uint64_t)&v57);
    if (v19)
    {
      if (*(_QWORD *)(v18 + 24))
      {
        outlined init with copy of IDSLookupManager(v18, (uint64_t)&v57);
        v20 = v59;
        __swift_project_boxed_opaque_existential_1(&v57, *((uint64_t *)&v58 + 1));
        v21 = objc_msgSend(v4, sel_layer);
        (*(void (**)(void))(v20 + 120))();

        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v57);
      }
      v59 = 0;
      v57 = 0u;
      v58 = 0u;
      swift_beginAccess();
      outlined assign with take of ParticipantVideoProvider?((uint64_t)&v57, v18);
      swift_endAccess();
    }
  }
  v1 = *(_QWORD *)&v3[OBJC_IVAR____TtC15ConversationKit20ParticipantVideoView_backFacingCameraView];
  v22 = objc_msgSend((id)v1, sel_layer);
  objc_msgSend(v22, sel_bounds);
  v24 = v23;
  v26 = v25;
  v28 = v27;
  v30 = v29;

  v63.origin.x = v24;
  v63.origin.y = v26;
  v63.size.width = v28;
  v63.size.height = v30;
  v65.origin.x = v14;
  v65.origin.y = v15;
  v65.size.width = v16;
  v65.size.height = v17;
  if (!CGRectEqualToRect(v63, v65))
  {
    v31 = (uint64_t)&v3[OBJC_IVAR____TtC15ConversationKit20ParticipantVideoView_pendingRegisterVideoLayerForBackVideoProvider];
    swift_beginAccess();
    outlined init with copy of ParticipantVideoProvider?(v31, (uint64_t)&v57);
    v32 = *((_QWORD *)&v58 + 1);
    outlined destroy of ParticipantVideoProvider?((uint64_t)&v57);
    if (v32)
    {
      if (*(_QWORD *)(v31 + 24))
      {
        outlined init with copy of IDSLookupManager(v31, (uint64_t)&v57);
        v33 = v59;
        __swift_project_boxed_opaque_existential_1(&v57, *((uint64_t *)&v58 + 1));
        v34 = objc_msgSend((id)v1, sel_layer);
        (*(void (**)(void))(v33 + 120))();

        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v57);
      }
      v59 = 0;
      v57 = 0u;
      v58 = 0u;
      swift_beginAccess();
      outlined assign with take of ParticipantVideoProvider?((uint64_t)&v57, v31);
      swift_endAccess();
    }
  }
  v35 = objc_opt_self();
  objc_msgSend((id)v35, sel_begin);
  outlined bridged method (ob) of @objc CALayer.sublayers.getter(objc_msgSend(v4, sel_layer));
  v2 = MEMORY[0x1E0DEE9D8];
  if (v36)
    v37 = v36;
  else
    v37 = MEMORY[0x1E0DEE9D8];
  if ((unint64_t)v37 >> 62)
    goto LABEL_54;
  v38 = *(_QWORD *)((v37 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v38)
  {
LABEL_19:
    if (v38 >= 1)
    {
      v39 = 0;
      do
      {
        if ((v37 & 0xC000000000000001) != 0)
          v40 = (id)MEMORY[0x1C3B73D18](v39, v37);
        else
          v40 = *(id *)(v37 + 8 * v39 + 32);
        v41 = v40;
        ++v39;
        objc_msgSend(v3, sel_bounds);
        objc_msgSend(v41, sel_setFrame_);

      }
      while (v38 != v39);
      goto LABEL_25;
    }
    __break(1u);
LABEL_59:
    __break(1u);
    return;
  }
  while (1)
  {
LABEL_25:
    swift_bridgeObjectRelease();
    outlined bridged method (ob) of @objc CALayer.sublayers.getter(objc_msgSend((id)v1, sel_layer));
    v43 = v42 ? v42 : v2;
    if (v43 >> 62)
    {
      swift_bridgeObjectRetain();
      v1 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v1)
        goto LABEL_36;
    }
    else
    {
      v1 = *(_QWORD *)((v43 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v1)
        goto LABEL_36;
    }
    if (v1 < 1)
      goto LABEL_59;
    v44 = 0;
    do
    {
      if ((v43 & 0xC000000000000001) != 0)
        v45 = (id)MEMORY[0x1C3B73D18](v44, v43);
      else
        v45 = *(id *)(v43 + 8 * v44 + 32);
      v46 = v45;
      ++v44;
      objc_msgSend(v3, sel_bounds);
      objc_msgSend(v46, sel_setFrame_);

    }
    while (v1 != v44);
LABEL_36:
    swift_bridgeObjectRelease();
    objc_msgSend((id)v35, sel_commit);
LABEL_37:
    v47 = objc_msgSend(v3, sel_subviews);
    type metadata accessor for UIView();
    v35 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v35 >> 62)
    {
      swift_bridgeObjectRetain();
      v37 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v37)
        goto LABEL_49;
    }
    else
    {
      v37 = *(_QWORD *)((v35 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v37)
        goto LABEL_49;
    }
    if (v37 >= 1)
      break;
    __break(1u);
LABEL_54:
    swift_bridgeObjectRetain();
    v38 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v38)
      goto LABEL_19;
  }
  for (i = 0; i != v37; ++i)
  {
    if ((v35 & 0xC000000000000001) != 0)
      v49 = (id)MEMORY[0x1C3B73D18](i, v35);
    else
      v49 = *(id *)(v35 + 8 * i + 32);
    v50 = v49;
    objc_msgSend(v49, sel_frame);
    if (v52 == 0.0 && v51 == 0.0)
    {
      objc_msgSend(v3, sel_bounds);
      objc_msgSend(v50, sel_setFrame_);
    }
    else
    {
      v53 = objc_msgSend(v3, sel_layer);
      v54 = (void *)objc_opt_self();
      v55 = v50;
      v56 = v3;
      objc_msgSend(v54, sel_begin);
      objc_msgSend(v54, sel_setDisableActions_, 1);
      objc_msgSend(v56, sel_bounds);
      objc_msgSend(v55, sel_setFrame_);
      objc_msgSend(v54, sel_commit);

    }
  }
LABEL_49:
  swift_bridgeObjectRelease();
}

void ParticipantVideoView.configure(with:)(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;
  _BYTE *v3;
  char *v5;
  uint64_t v6;
  int v7;
  Swift::Int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  Swift::Int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  double v58;
  double v59;
  double v60;
  char v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  double v83;
  double v84;
  double v85;
  char v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _BOOL4 v96;
  BOOL v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  uint64_t v108;
  NSObject *v109;
  os_log_type_t v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  unint64_t v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  _BOOL8 v128;
  BOOL v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  _BYTE *v137;
  id v138;
  void *v139;
  double v140;
  uint64_t v141;
  double v142;
  double v143;
  double v144;
  unint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t ObjectType;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  os_log_t log;
  os_log_t loga;
  os_log_t logb;
  os_log_t logc;
  NSObject *logd;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  _QWORD *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  _QWORD v193[3];
  uint64_t v194;
  uint64_t v195;
  char v196;
  id v197;
  CGRect v198;
  CGRect v199;

  v3 = v1;
  ObjectType = swift_getObjectType();
  v5 = &v1[OBJC_IVAR____TtC15ConversationKit20ParticipantVideoView_previousViewModelHash];
  v6 = *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit20ParticipantVideoView_previousViewModelHash];
  v7 = v1[OBJC_IVAR____TtC15ConversationKit20ParticipantVideoView_previousViewModelHash + 8];
  OUTLINED_FUNCTION_37_30();
  OUTLINED_FUNCTION_34_24();
  v8 = Hasher._finalize()();
  if (v6 == v8)
    v16 = v7;
  else
    v16 = 1;
  v154 = *(_QWORD *)v5;
  HIDWORD(v150) = v5[8];
  LODWORD(log) = v16;
  if (v16 == 1)
  {
    OUTLINED_FUNCTION_37_30();
    OUTLINED_FUNCTION_34_24();
    v17 = Hasher._finalize()();
    *(_QWORD *)v5 = v17;
    v5[8] = 0;
    v18 = OUTLINED_FUNCTION_23_46(v17, (uint64_t)v193);
    v26 = MEMORY[0x1E0DEA968];
    if ((v7 & 1) != 0)
    {
      v27 = OUTLINED_FUNCTION_21_45(v18, v19, v20, v21, v22, v23, v24, v25, v146, v150, v154, ObjectType, (uint64_t)log, v167, v168, v169, v170, (uint64_t)v171, v172,
              v173,
              v174,
              v175,
              v176,
              v177,
              v178,
              v179,
              v180,
              v181,
              v182,
              v183,
              v184,
              v185,
              v186,
              v187,
              v188,
              v189,
              v190,
              v191,
              v192,
              v193[0]);
      goto LABEL_11;
    }
    v28 = v196;
    v27 = OUTLINED_FUNCTION_21_45(v18, v19, v20, v21, v22, v23, v24, v25, v146, v150, v154, ObjectType, (uint64_t)log, v167, v168, v169, v170, (uint64_t)v171, v172,
            v173,
            v174,
            v175,
            v176,
            v177,
            v178,
            v179,
            v180,
            v181,
            v182,
            v183,
            v184,
            v185,
            v186,
            v187,
            v188,
            v189,
            v190,
            v191,
            v192,
            v193[0]);
    if ((v28 & 1) == 0)
    {
LABEL_11:
      OUTLINED_FUNCTION_23_46(v27, (uint64_t)&v171);
      if ((v7 & 1) != 0)
      {
        v8 = outlined destroy of ParticipantVideoView.ViewModel((uint64_t)&v171);
      }
      else
      {
        v33 = v192;
        v8 = outlined destroy of ParticipantVideoView.ViewModel((uint64_t)&v171);
        if ((v33 & 1) != 0)
        {
          ParticipantVideoView.freezeCurrentFrame()();
          v34 = 1;
LABEL_19:
          ParticipantVideoView.hideSnapshot(animated:)(v34);
          goto LABEL_20;
        }
      }
      if (v3[OBJC_IVAR____TtC15ConversationKit20ParticipantVideoView_isViewFrozen] != 1)
        goto LABEL_20;
      if (one-time initialization token for conversationKit != -1)
        swift_once();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v35 = swift_allocObject();
      *(_OWORD *)(v35 + 16) = xmmword_1BD645380;
      v167 = OUTLINED_FUNCTION_11_5();
      v168 = v36;
      OUTLINED_FUNCTION_25_38();
      OUTLINED_FUNCTION_61();
      OUTLINED_FUNCTION_24_0(v37, v38);
      String.init<A>(reflecting:)();
      v39 = OUTLINED_FUNCTION_18_52();
      *(_QWORD *)(v35 + 64) = v39;
      *(_QWORD *)(v35 + 32) = &v167;
      *(_QWORD *)(v35 + 40) = v2;
      ParticipantVideoView.ViewModel.contentsRect.getter();
      v167 = v40;
      v168 = v41;
      v169 = v42;
      v170 = v43;
      type metadata accessor for CGRect(0);
      v44 = String.init<A>(reflecting:)();
      *(_QWORD *)(v35 + 96) = v26;
      *(_QWORD *)(v35 + 104) = v39;
      *(_QWORD *)(v35 + 72) = v44;
      *(_QWORD *)(v35 + 80) = v45;
      static os_log_type_t.default.getter();
      OUTLINED_FUNCTION_19_49();
      swift_bridgeObjectRelease();
      v34 = 0;
      goto LABEL_19;
    }
    ParticipantVideoView.freezeCurrentFrame()();
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_1BD6441D0;
    v171 = (_QWORD *)OUTLINED_FUNCTION_11_5();
    v172 = v30;
    OUTLINED_FUNCTION_25_38();
    OUTLINED_FUNCTION_61();
    OUTLINED_FUNCTION_24_0(v31, v32);
    String.init<A>(reflecting:)();
    *(_QWORD *)(v29 + 64) = OUTLINED_FUNCTION_18_52();
    *(_QWORD *)(v29 + 32) = &v171;
    *(_QWORD *)(v29 + 40) = v2;
    static os_log_type_t.default.getter();
    OUTLINED_FUNCTION_19_49();
    v8 = swift_bridgeObjectRelease();
  }
LABEL_20:
  v46 = OUTLINED_FUNCTION_14_69(v8, v9, v10, v11, v12, v13, v14, v15, v146, v150, v154, ObjectType, (uint64_t)log, v167, v168, v169, v170, (uint64_t)v171, v172,
          v173,
          v174,
          v175,
          v176,
          v177,
          v178,
          v179,
          v180,
          v181,
          v182,
          v183,
          v184,
          v185,
          v186,
          v187,
          v188,
          v189,
          v190,
          v191,
          v192,
          v193[0]);
  v54 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  if (!v194)
  {
    OUTLINED_FUNCTION_35_21(v46, v47, v48, v49, v50, v51, v52, v53, v147, v151, v155, v159, (uint64_t)loga, v167, v168, v169, v170, (uint64_t)v171, v172,
      v173,
      v174,
      v175,
      v176,
      v177,
      v178,
      v179,
      v180,
      v181,
      v182,
      v183,
      v184,
      v185,
      v186,
      v187,
      v188,
      v189,
      v190,
      v191,
      v192,
      v193[0]);
    goto LABEL_33;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParticipantVideoProvider);
  OUTLINED_FUNCTION_28_40();
  if ((OUTLINED_FUNCTION_7_81() & 1) == 0)
    goto LABEL_33;
  v55 = v171;
  v56 = (*(uint64_t (**)(void))((*v54 & *v171) + 0xA0))();
  if ((v56 & 0x100000000) != 0)
  {

    goto LABEL_33;
  }
  v57 = VideoAttributeOrientation.deviceOrientation.getter(v56);
  v58 = COERCE_DOUBLE((*(uint64_t (**)(void))((*v54 & *v55) + 0x120))());
  v60 = v59;
  v62 = v61;

  if ((v62 & 1) != 0)
  {
LABEL_33:
    v63 = ParticipantVideoView.ViewModel.contentsRect.getter();
    v72 = 0;
    goto LABEL_34;
  }
  if (!v57)
  {
    if (v58 < v60)
      goto LABEL_60;
    goto LABEL_33;
  }
  if (v57 != 2 || v58 >= v60)
    goto LABEL_33;
LABEL_60:
  v72 = 1;
LABEL_34:
  v73 = OUTLINED_FUNCTION_14_69(v63, v64, v65, v66, v67, v68, v69, v70, v147, v151, v155, v159, (uint64_t)loga, v167, v168, v169, v170, (uint64_t)v171, v172,
          v173,
          v174,
          v175,
          v176,
          v177,
          v178,
          v179,
          v180,
          v181,
          v182,
          v183,
          v184,
          v185,
          v186,
          v187,
          v188,
          v189,
          v190,
          v191,
          v192,
          v193[0]);
  v81 = v194;
  if (v194)
  {
    v82 = v195;
    __swift_project_boxed_opaque_existential_1(v193, v194);
    v83 = COERCE_DOUBLE((*(uint64_t (**)(uint64_t, uint64_t))(v82 + 80))(v81, v82));
    v85 = v84;
    v87 = v86;
    v88 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v193);
    v96 = (v87 & 1) != 0 || v83 == v85;
    v97 = (v87 & 1) != 0;
  }
  else
  {
    v88 = OUTLINED_FUNCTION_35_21(v73, v74, v75, v76, v77, v78, v79, v80, v148, v152, v156, v160, (uint64_t)logb, v167, v168, v169, v170, (uint64_t)v171, v172,
            v173,
            v174,
            v175,
            v176,
            v177,
            v178,
            v179,
            v180,
            v181,
            v182,
            v183,
            v184,
            v185,
            v186,
            v187,
            v188,
            v189,
            v190,
            v191,
            v192,
            v193[0]);
    v83 = 0.0;
    v85 = 0.0;
    v96 = 1;
    v97 = 1;
  }
  v98 = OUTLINED_FUNCTION_14_69(v88, v89, v90, v91, v92, v93, v94, v95, v148, v152, v156, v160, (uint64_t)logb, v167, v168, v169, v170, (uint64_t)v171, v172,
          v173,
          v174,
          v175,
          v176,
          v177,
          v178,
          v179,
          v180,
          v181,
          v182,
          v183,
          v184,
          v185,
          v186,
          v187,
          v188,
          v189,
          v190,
          v191,
          v192,
          v193[0]);
  if (v194)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParticipantVideoProvider);
    OUTLINED_FUNCTION_28_40();
    v106 = OUTLINED_FUNCTION_7_81();
    if ((v106 & 1) != 0)
    {
      v107 = v171;
      if (v96 && (v72 & 1) == 0 && ((*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v171) + 0x178))() & 1) != 0)
      {
        v197 = v107;
        if (one-time initialization token for conversationKit != -1)
          swift_once();
        v108 = type metadata accessor for Logger();
        __swift_project_value_buffer(v108, (uint64_t)&static Logger.conversationKit);
        v109 = Logger.logObject.getter();
        v110 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v109, v110))
        {
          logd = v109;
          v111 = swift_slowAlloc();
          v171 = (_QWORD *)swift_slowAlloc();
          *(_DWORD *)v111 = 136315650;
          v112 = OUTLINED_FUNCTION_11_5();
          v193[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v112, v113, (uint64_t *)&v171);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          *(_WORD *)(v111 + 12) = 2080;
          OUTLINED_FUNCTION_61();
          getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000010, v114, (uint64_t *)&v171);
          OUTLINED_FUNCTION_10_77();
          *(_WORD *)(v111 + 22) = 2080;
          if (v97)
          {
            v115 = 0xE300000000000000;
            v116 = 7104878;
          }
          else
          {
            *(double *)v193 = v83;
            *(double *)&v193[1] = v85;
            type metadata accessor for CGSize(0);
            v116 = String.init<A>(reflecting:)();
            v115 = v145;
          }
          getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v116, v115, (uint64_t *)&v171);
          OUTLINED_FUNCTION_10_77();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1BD004000, logd, v110, "%s.%s: Skipping Attributes Update for Square Video %s", (uint8_t *)v111, 0x20u);
          swift_arrayDestroy();
          OUTLINED_FUNCTION_60();
        }

        *(_QWORD *)v5 = v157;
        v5[8] = BYTE4(v153);
        lazy protocol witness table accessor for type ParticipantVideoView.Errors and conformance ParticipantVideoView.Errors();
        swift_allocError();
        swift_willThrow();

        return;
      }

    }
  }
  else
  {
    v106 = OUTLINED_FUNCTION_35_21(v98, v99, v100, v101, v102, v103, v104, v105, v149, v153, v157, v161, (uint64_t)logc, v167, v168, v169, v170, (uint64_t)v171, v172,
             v173,
             v174,
             v175,
             v176,
             v177,
             v178,
             v179,
             v180,
             v181,
             v182,
             v183,
             v184,
             v185,
             v186,
             v187,
             v188,
             v189,
             v190,
             v191,
             v192,
             v193[0]);
  }
  v117 = OUTLINED_FUNCTION_23_46(v106, (uint64_t)v193);
  if ((_DWORD)logc)
  {
    OUTLINED_FUNCTION_21_45(v117, v118, v119, v120, v121, v122, v123, v124, v149, v153, v157, v161, (uint64_t)logc, v167, v168, v169, v170, (uint64_t)v171, v172,
      v173,
      v174,
      v175,
      v176,
      v177,
      v178,
      v179,
      v180,
      v181,
      v182,
      v183,
      v184,
      v185,
      v186,
      v187,
      v188,
      v189,
      v190,
      v191,
      v192,
      v193[0]);
  }
  else
  {
    ParticipantVideoView.ViewModel.contentsRect.getter();
    v198.origin.x = OUTLINED_FUNCTION_38_30();
    v128 = CGRectEqualToRect(v198, v199);
    v129 = v128;
    OUTLINED_FUNCTION_21_45(v128, v130, v131, v132, v133, v134, v135, v136, v149, v153, v157, v161, (uint64_t)logc, v167, v168, v169, v170, (uint64_t)v171, v172,
      v173,
      v174,
      v175,
      v176,
      v177,
      v178,
      v179,
      v180,
      v181,
      v182,
      v183,
      v184,
      v185,
      v186,
      v187,
      v188,
      v189,
      v190,
      v191,
      v192,
      v193[0]);
    if (v129)
      return;
  }
  if (*(_BYTE *)(a1 + 170) == 1)
    ParticipantVideoView.registerVideoLayers(with:)(a1, v125, v126, v127);
  v137 = v3;
  v138 = objc_msgSend(v137, sel_layer);
  v139 = (void *)objc_opt_self();
  objc_msgSend(v139, sel_begin);
  objc_msgSend(v139, sel_setDisableActions_, 1);
  v140 = OUTLINED_FUNCTION_38_30();
  closure #1 in ParticipantVideoView.configure(with:)(v141, (_QWORD *)a1, v140, v142, v143, v144);
  objc_msgSend(v139, sel_commit);

}

void ParticipantVideoView.ViewModel.hashValue.getter()
{
  OUTLINED_FUNCTION_5_1();
  OUTLINED_FUNCTION_26_36();
  OUTLINED_FUNCTION_4_6();
  OUTLINED_FUNCTION_2();
}

void ParticipantVideoView.freezeCurrentFrame()()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;

  v1 = OBJC_IVAR____TtC15ConversationKit20ParticipantVideoView_isViewFrozen;
  if ((v0[OBJC_IVAR____TtC15ConversationKit20ParticipantVideoView_isViewFrozen] & 1) == 0)
  {
    v2 = OBJC_IVAR____TtC15ConversationKit20ParticipantVideoView_previousVideoSnapshot;
    v3 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit20ParticipantVideoView_previousVideoSnapshot];
    if (v3)
      objc_msgSend(v3, sel_removeFromSuperview);
    v4 = objc_msgSend(v0, sel_snapshotViewAfterScreenUpdates_, 0);
    v5 = *(void **)&v0[v2];
    *(_QWORD *)&v0[v2] = v4;

    if (*(_QWORD *)&v0[v2])
    {
      objc_msgSend(v0, sel_addSubview_);
      v0[v1] = 1;
    }
  }
}

void ParticipantVideoView.hideSnapshot(animated:)(char a1)
{
  void *v1;
  double v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;

  if ((a1 & 1) != 0)
    v2 = 0.5;
  else
    v2 = 0.0;
  v3 = (void *)objc_opt_self();
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v1;
  v15 = partial apply for closure #1 in ParticipantVideoView.hideSnapshot(animated:);
  v16 = v4;
  v5 = MEMORY[0x1E0C809B0];
  v11 = MEMORY[0x1E0C809B0];
  v12 = 1107296256;
  v13 = thunk for @escaping @callee_guaranteed () -> ();
  v14 = &block_descriptor_15_1;
  v6 = _Block_copy(&v11);
  v7 = v1;
  swift_release();
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v7;
  v15 = partial apply for closure #2 in ParticipantVideoView.hideSnapshot(animated:);
  v16 = v8;
  v11 = v5;
  v12 = 1107296256;
  v13 = thunk for @escaping @callee_guaranteed (@unowned Bool) -> ();
  v14 = &block_descriptor_21_3;
  v9 = _Block_copy(&v11);
  v10 = v7;
  swift_release();
  objc_msgSend(v3, sel_animateWithDuration_animations_completion_, v6, v9, v2);
  _Block_release(v9);
  _Block_release(v6);
}

uint64_t ParticipantVideoView.registerVideoLayers(with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BOOL8 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t (**v46)(uint64_t, uint64_t, uint64_t, uint64_t);
  _BOOL8 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  __int128 v63;
  uint64_t v64;

  v6 = v4;
  if (*(_BYTE *)(v4 + OBJC_IVAR____TtC15ConversationKit20ParticipantVideoView_shouldSkipTransformsForLayerHostMode) == 1)
  {
    objc_msgSend(OUTLINED_FUNCTION_5_79(), sel_bounds);
    OUTLINED_FUNCTION_12_63();
    v8 = OUTLINED_FUNCTION_1_91();
    if (v8)
    {
      v12 = v4 + OBJC_IVAR____TtC15ConversationKit20ParticipantVideoView_pendingRegisterVideoLayerForFrontVideoProvider;
      OUTLINED_FUNCTION_60_0();
      outlined assign with copy of ParticipantVideoProvider?(a1, v12);
    }
    else
    {
      v26 = OUTLINED_FUNCTION_3_85(v8, v9, v10, v11);
      if (*((_QWORD *)&v63 + 1))
      {
        OUTLINED_FUNCTION_22_47(v26, v27, v28, v29);
        v30 = OUTLINED_FUNCTION_5_79();
        OUTLINED_FUNCTION_33_29((uint64_t)v30, 0, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 120));

        OUTLINED_FUNCTION_16_56(v31, v32, v33, v34);
      }
      else
      {
        OUTLINED_FUNCTION_15_62(v26, v27, v28, v29);
      }
      v64 = 0;
      v62 = 0u;
      v63 = 0u;
      v45 = v4 + OBJC_IVAR____TtC15ConversationKit20ParticipantVideoView_pendingRegisterVideoLayerForFrontVideoProvider;
      OUTLINED_FUNCTION_60_0();
      outlined assign with take of ParticipantVideoProvider?((uint64_t)&v62, v45);
    }
    swift_endAccess();
    v46 = (uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))OUTLINED_FUNCTION_5_79();
    objc_msgSend(v46, sel_bounds);
    OUTLINED_FUNCTION_12_63();
    v47 = OUTLINED_FUNCTION_1_91();
    if (v47)
    {
      v51 = v6 + OBJC_IVAR____TtC15ConversationKit20ParticipantVideoView_pendingRegisterVideoLayerForBackVideoProvider;
      OUTLINED_FUNCTION_60_0();
      outlined assign with copy of ParticipantVideoProvider?(a1, v51);
    }
    else
    {
      v52 = OUTLINED_FUNCTION_3_85(v47, v48, v49, v50);
      if (*((_QWORD *)&v63 + 1))
      {
        OUTLINED_FUNCTION_20_52(v52, v53, v54, v55);
        v56 = OUTLINED_FUNCTION_5_79();
        OUTLINED_FUNCTION_31_38((uint64_t)v56, 1, v46[15]);

        OUTLINED_FUNCTION_16_56(v57, v58, v59, v60);
      }
      else
      {
        OUTLINED_FUNCTION_15_62(v52, v53, v54, v55);
      }
      v64 = 0;
      v62 = 0u;
      v63 = 0u;
      v61 = v6 + OBJC_IVAR____TtC15ConversationKit20ParticipantVideoView_pendingRegisterVideoLayerForBackVideoProvider;
      OUTLINED_FUNCTION_60_0();
      outlined assign with take of ParticipantVideoProvider?((uint64_t)&v62, v61);
    }
    return swift_endAccess();
  }
  else
  {
    v13 = OUTLINED_FUNCTION_3_85(a1, a2, a3, a4);
    if (*((_QWORD *)&v63 + 1))
    {
      OUTLINED_FUNCTION_22_47(v13, v14, v15, v16);
      v17 = OUTLINED_FUNCTION_40_28(OBJC_IVAR____TtC15ConversationKit20ParticipantVideoView_frontFacingCameraView);
      OUTLINED_FUNCTION_33_29((uint64_t)v17, 0, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 120));

      v22 = OUTLINED_FUNCTION_16_56(v18, v19, v20, v21);
    }
    else
    {
      v22 = OUTLINED_FUNCTION_15_62(v13, v14, v15, v16);
    }
    v35 = OUTLINED_FUNCTION_3_85(v22, v23, v24, v25);
    if (*((_QWORD *)&v63 + 1))
    {
      OUTLINED_FUNCTION_20_52(v35, v36, v37, v38);
      v39 = OUTLINED_FUNCTION_40_28(OBJC_IVAR____TtC15ConversationKit20ParticipantVideoView_backFacingCameraView);
      OUTLINED_FUNCTION_31_38((uint64_t)v39, 1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*((_QWORD *)&v63 + 1) + 120));

      return OUTLINED_FUNCTION_16_56(v40, v41, v42, v43);
    }
    else
    {
      return OUTLINED_FUNCTION_15_62(v35, v36, v37, v38);
    }
  }
}

void closure #1 in ParticipantVideoView.configure(with:)(uint64_t a1, _QWORD *a2, double a3, double a4, double a5, double a6)
{
  void *v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  if ((*(_BYTE *)(a1 + OBJC_IVAR____TtC15ConversationKit20ParticipantVideoView_shouldSkipTransformsForLayerHostMode) & 1) == 0)
  {
    v12 = *(void **)(a1 + OBJC_IVAR____TtC15ConversationKit20ParticipantVideoView_frontFacingCameraView);
    v13 = objc_msgSend(v12, sel_layer);
    objc_msgSend(v13, sel_setContentsRect_, a3, a4, a5, a6);

    v14 = *(void **)(a1 + OBJC_IVAR____TtC15ConversationKit20ParticipantVideoView_backFacingCameraView);
    v15 = objc_msgSend(v14, sel_layer);
    objc_msgSend(v15, sel_setContentsRect_, a3, a4, a5, a6);

    v16 = objc_msgSend(v12, sel_layer);
    v18 = a2[6];
    v19 = a2[7];
    v20 = a2[8];
    v21 = a2[9];
    v22 = a2[10];
    v23 = a2[11];
    v24 = a2[12];
    v32 = a2[14];
    v33 = a2[13];
    v30 = a2[16];
    v31 = a2[15];
    v28 = a2[18];
    v29 = a2[17];
    v26 = a2[20];
    v27 = a2[19];
    v34 = a2[5];
    v17 = v34;
    v35 = v18;
    v36 = v19;
    v37 = v20;
    v38 = v21;
    v39 = v22;
    v40 = v23;
    v41 = v24;
    v42 = v33;
    v43 = v32;
    v44 = v31;
    v45 = v30;
    v46 = v29;
    v47 = v28;
    v48 = v27;
    v49 = v26;
    objc_msgSend(v16, sel_setTransform_, &v34);

    v25 = objc_msgSend(v14, sel_layer);
    v34 = v17;
    v35 = v18;
    v36 = v19;
    v37 = v20;
    v38 = v21;
    v39 = v22;
    v40 = v23;
    v41 = v24;
    v42 = v33;
    v43 = v32;
    v44 = v31;
    v45 = v30;
    v46 = v29;
    v47 = v28;
    v48 = v27;
    v49 = v26;
    objc_msgSend(v25, sel_setTransform_, &v34);

  }
}

Swift::Void __swiftcall ParticipantVideoView.updatePreviewLayerHostMode(with:)(Swift::Bool with)
{
  uint64_t v1;

  *(_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit20ParticipantVideoView_shouldSkipTransformsForLayerHostMode) = with;
}

void ParticipantVideoView.updateVideoLayers(with:localDeviceOrientation:isLocal:animated:)(char a1, uint64_t a2, char a3, char a4)
{
  char *v4;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t *v11;
  void *v12;
  char *v13;
  id v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v8 = OUTLINED_FUNCTION_0_13();
  *(_BYTE *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = v4;
  v9 = OUTLINED_FUNCTION_0_13();
  *(_BYTE *)(v9 + 16) = a3;
  v10 = a3 & 1;
  *(_BYTE *)(v9 + 17) = a1;
  *(_QWORD *)(v9 + 24) = v4;
  if ((a4 & 1) != 0)
  {
    v11 = &OBJC_IVAR____TtC15ConversationKit20ParticipantVideoView_frontFacingCameraView;
    if (a1 != 1)
      v11 = &OBJC_IVAR____TtC15ConversationKit20ParticipantVideoView_backFacingCameraView;
    v12 = *(void **)&v4[*v11];
    v13 = v4;
    v14 = v12;
    OUTLINED_FUNCTION_59_6(v13, sel_bringSubviewToFront_);
    v15 = (void *)objc_opt_self();
    v16 = MEMORY[0x1E0C809B0];
    v17 = OUTLINED_FUNCTION_9_2((uint64_t)thunk for @escaping @callee_guaranteed () -> (), MEMORY[0x1E0C809B0], 1107296256, v21, v23);
    swift_retain();
    swift_release();
    v18 = swift_allocObject();
    *(_QWORD *)(v18 + 16) = partial apply for closure #2 in ParticipantVideoView.updateVideoLayers(with:localDeviceOrientation:isLocal:animated:);
    *(_QWORD *)(v18 + 24) = v9;
    *(_BYTE *)(v18 + 32) = v10;
    v19 = OUTLINED_FUNCTION_9_2((uint64_t)thunk for @escaping @callee_guaranteed (@unowned Bool) -> (), v16, 1107296256, v22, v24);
    swift_retain();
    swift_release();
    objc_msgSend(v15, sel_transitionWithView_duration_options_animations_completion_, v13, 1048704, v17, v19, 0.5);

    swift_release();
    swift_release();
    _Block_release(v19);
    _Block_release(v17);
  }
  else
  {
    v20 = v4;
    closure #1 in ParticipantVideoView.updateVideoLayers(with:localDeviceOrientation:isLocal:animated:)(a1, v20);
    closure #2 in ParticipantVideoView.updateVideoLayers(with:localDeviceOrientation:isLocal:animated:)(v10, a1, (uint64_t)v20);
    swift_release();
    swift_release();
  }
}

id closure #1 in ParticipantVideoView.updateVideoLayers(with:localDeviceOrientation:isLocal:animated:)(char a1, char *a2)
{
  uint64_t *v3;
  void *v4;

  if (a1 == 1)
    v3 = &OBJC_IVAR____TtC15ConversationKit20ParticipantVideoView_backFacingCameraView;
  else
    v3 = &OBJC_IVAR____TtC15ConversationKit20ParticipantVideoView_frontFacingCameraView;
  v4 = *(void **)&a2[*v3];
  objc_msgSend(v4, sel_setHidden_, 0);
  return objc_msgSend(a2, sel_bringSubviewToFront_, v4);
}

void closure #2 in ParticipantVideoView.updateVideoLayers(with:localDeviceOrientation:isLocal:animated:)(char a1, char a2, uint64_t a3)
{
  _BOOL8 v4;
  _BOOL8 v5;
  void *v6;
  id v7;
  void *v8;
  id v9;

  if ((a1 & 1) != 0)
  {
    v4 = a2 != 1;
    v5 = a2 == 1;
    v6 = *(void **)(a3 + OBJC_IVAR____TtC15ConversationKit20ParticipantVideoView_frontFacingCameraView);
    objc_msgSend(v6, sel_setHidden_, v5);
    v7 = objc_msgSend(v6, sel_layer);
    objc_msgSend(v7, sel_setHidden_, v5);

    v8 = *(void **)(a3 + OBJC_IVAR____TtC15ConversationKit20ParticipantVideoView_backFacingCameraView);
    objc_msgSend(v8, sel_setHidden_, v4);
    v9 = objc_msgSend(v8, sel_layer);
    objc_msgSend(v9, sel_setHidden_, v4);

  }
}

void closure #3 in ParticipantVideoView.updateVideoLayers(with:localDeviceOrientation:isLocal:animated:)(char a1, void (*a2)(void), uint64_t a3, char a4)
{
  id v5;
  id v6;

  if ((a1 & 1) != 0)
  {
    a2();
    if ((a4 & 1) != 0)
    {
      v5 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
      v6 = v5;
      if (one-time initialization token for localPreviewDidFinishRotationAnimation != -1)
      {
        swift_once();
        v5 = v6;
      }
      objc_msgSend(v5, sel_postNotificationName_object_, static Strings.Notifications.localPreviewDidFinishRotationAnimation, 0);

    }
  }
}

id closure #1 in ParticipantVideoView.hideSnapshot(animated:)(uint64_t a1)
{
  id result;

  result = *(id *)(a1 + OBJC_IVAR____TtC15ConversationKit20ParticipantVideoView_previousVideoSnapshot);
  if (result)
    return objc_msgSend(result, sel_setAlpha_, 0.0);
  return result;
}

void closure #2 in ParticipantVideoView.hideSnapshot(animated:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  void *v5;

  v3 = OBJC_IVAR____TtC15ConversationKit20ParticipantVideoView_previousVideoSnapshot;
  v4 = *(void **)(a2 + OBJC_IVAR____TtC15ConversationKit20ParticipantVideoView_previousVideoSnapshot);
  if (v4)
  {
    objc_msgSend(v4, sel_removeFromSuperview);
    v5 = *(void **)(a2 + v3);
  }
  else
  {
    v5 = 0;
  }
  *(_QWORD *)(a2 + v3) = 0;

  *(_BYTE *)(a2 + OBJC_IVAR____TtC15ConversationKit20ParticipantVideoView_isViewFrozen) = 0;
}

id ParticipantVideoView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)OUTLINED_FUNCTION_15_6();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void ParticipantVideoView.ViewModel.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  Swift::UInt v4;
  char v5;
  char v6;
  double v7;
  double v8;
  double v9;
  double v10;
  uint64_t v11[16];

  v1 = v0;
  outlined init with copy of ParticipantVideoProvider?(v0, (uint64_t)v11);
  v2 = v11[3];
  if (!v11[3])
  {
    outlined destroy of ParticipantVideoProvider?((uint64_t)v11);
    goto LABEL_5;
  }
  v3 = v11[4];
  __swift_project_boxed_opaque_existential_1(v11, v11[3]);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
  v6 = v5;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  if ((v6 & 1) != 0)
  {
LABEL_5:
    Hasher._combine(_:)(0);
    goto LABEL_6;
  }
  Hasher._combine(_:)(1u);
  Hasher._combine(_:)(v4);
LABEL_6:
  memcpy(v11, (const void *)(v1 + 40), sizeof(v11));
  CATransform3D.hash(into:)();
  ParticipantVideoView.ViewModel.contentsRect.getter();
  CGRect.hash(into:)(v7, v8, v9, v10);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance ParticipantVideoView.ViewModel()
{
  Hasher.init(_seed:)();
  OUTLINED_FUNCTION_26_36();
  OUTLINED_FUNCTION_4_6();
  OUTLINED_FUNCTION_2();
}

uint64_t outlined destroy of ParticipantVideoProvider?(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t outlined assign with take of ParticipantVideoProvider?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t lazy protocol witness table accessor for type ParticipantVideoView.Errors and conformance ParticipantVideoView.Errors()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ParticipantVideoView.Errors and conformance ParticipantVideoView.Errors;
  if (!lazy protocol witness table cache variable for type ParticipantVideoView.Errors and conformance ParticipantVideoView.Errors)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ParticipantVideoView.Errors, &type metadata for ParticipantVideoView.Errors);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ParticipantVideoView.Errors and conformance ParticipantVideoView.Errors);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ParticipantVideoView.Errors and conformance ParticipantVideoView.Errors;
  if (!lazy protocol witness table cache variable for type ParticipantVideoView.Errors and conformance ParticipantVideoView.Errors)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ParticipantVideoView.Errors, &type metadata for ParticipantVideoView.Errors);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ParticipantVideoView.Errors and conformance ParticipantVideoView.Errors);
  }
  return result;
}

uint64_t outlined assign with copy of ParticipantVideoProvider?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BD21ABE8()
{
  uint64_t v0;

  return swift_deallocObject();
}

id partial apply for closure #1 in ParticipantVideoView.updateVideoLayers(with:localDeviceOrientation:isLocal:animated:)()
{
  uint64_t v0;

  return closure #1 in ParticipantVideoView.updateVideoLayers(with:localDeviceOrientation:isLocal:animated:)(*(_BYTE *)(v0 + 16), *(char **)(v0 + 24));
}

void partial apply for closure #2 in ParticipantVideoView.updateVideoLayers(with:localDeviceOrientation:isLocal:animated:)()
{
  uint64_t v0;

  closure #2 in ParticipantVideoView.updateVideoLayers(with:localDeviceOrientation:isLocal:animated:)(*(_BYTE *)(v0 + 16), *(_BYTE *)(v0 + 17), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1BD21AC28()
{
  swift_release();
  return swift_deallocObject();
}

void partial apply for closure #3 in ParticipantVideoView.updateVideoLayers(with:localDeviceOrientation:isLocal:animated:)(char a1)
{
  uint64_t v1;

  closure #3 in ParticipantVideoView.updateVideoLayers(with:localDeviceOrientation:isLocal:animated:)(a1, *(void (**)(void))(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32));
}

unint64_t lazy protocol witness table accessor for type ParticipantVideoView.ViewModel and conformance ParticipantVideoView.ViewModel()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ParticipantVideoView.ViewModel and conformance ParticipantVideoView.ViewModel;
  if (!lazy protocol witness table cache variable for type ParticipantVideoView.ViewModel and conformance ParticipantVideoView.ViewModel)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ParticipantVideoView.ViewModel, &type metadata for ParticipantVideoView.ViewModel);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ParticipantVideoView.ViewModel and conformance ParticipantVideoView.ViewModel);
  }
  return result;
}

uint64_t type metadata accessor for ParticipantVideoView()
{
  return objc_opt_self();
}

uint64_t storeEnumTagSinglePayload for ParticipantVideoView.Errors(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BD21AD38 + 4 * asc_1BD651EF0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BD21AD58 + 4 * byte_1BD651EF5[v4]))();
}

_BYTE *sub_1BD21AD38(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BD21AD58(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BD21AD60(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BD21AD68(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BD21AD70(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BD21AD78(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ParticipantVideoView.Errors()
{
  return &type metadata for ParticipantVideoView.Errors;
}

uint64_t destroy for ParticipantVideoView.ViewModel(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 24))
    return __swift_destroy_boxed_opaque_existential_1(a1);
  return a1;
}

uint64_t initializeWithCopy for ParticipantVideoView.ViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v4 = *(_QWORD *)(a2 + 24);
  if (v4)
  {
    v5 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v4;
    *(_QWORD *)(a1 + 32) = v5;
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
  }
  else
  {
    v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  }
  memcpy((void *)(a1 + 40), (const void *)(a2 + 40), 0x84uLL);
  return a1;
}

uint64_t assignWithCopy for ParticipantVideoView.ViewModel(uint64_t a1, __int128 *a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;

  v4 = *((_QWORD *)a2 + 3);
  if (!*(_QWORD *)(a1 + 24))
  {
    if (v4)
    {
      *(_QWORD *)(a1 + 24) = v4;
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      (**(void (***)(uint64_t, __int128 *))(v4 - 8))(a1, a2);
      goto LABEL_8;
    }
LABEL_7:
    v5 = *a2;
    v6 = a2[1];
    *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
    *(_OWORD *)a1 = v5;
    *(_OWORD *)(a1 + 16) = v6;
    goto LABEL_8;
  }
  if (!v4)
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
LABEL_8:
  *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
  *(_QWORD *)(a1 + 48) = *((_QWORD *)a2 + 6);
  *(_QWORD *)(a1 + 56) = *((_QWORD *)a2 + 7);
  *(_QWORD *)(a1 + 64) = *((_QWORD *)a2 + 8);
  *(_QWORD *)(a1 + 72) = *((_QWORD *)a2 + 9);
  *(_QWORD *)(a1 + 80) = *((_QWORD *)a2 + 10);
  *(_QWORD *)(a1 + 88) = *((_QWORD *)a2 + 11);
  *(_QWORD *)(a1 + 96) = *((_QWORD *)a2 + 12);
  *(_QWORD *)(a1 + 104) = *((_QWORD *)a2 + 13);
  *(_QWORD *)(a1 + 112) = *((_QWORD *)a2 + 14);
  *(_QWORD *)(a1 + 120) = *((_QWORD *)a2 + 15);
  *(_QWORD *)(a1 + 128) = *((_QWORD *)a2 + 16);
  *(_QWORD *)(a1 + 136) = *((_QWORD *)a2 + 17);
  *(_QWORD *)(a1 + 144) = *((_QWORD *)a2 + 18);
  *(_QWORD *)(a1 + 152) = *((_QWORD *)a2 + 19);
  *(_QWORD *)(a1 + 160) = *((_QWORD *)a2 + 20);
  *(_BYTE *)(a1 + 168) = *((_BYTE *)a2 + 168);
  *(_BYTE *)(a1 + 169) = *((_BYTE *)a2 + 169);
  *(_BYTE *)(a1 + 170) = *((_BYTE *)a2 + 170);
  *(_BYTE *)(a1 + 171) = *((_BYTE *)a2 + 171);
  return a1;
}

void *__swift_memcpy172_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xACuLL);
}

uint64_t assignWithTake for ParticipantVideoView.ViewModel(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  if (*(_QWORD *)(a1 + 24))
    __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
  *(_BYTE *)(a1 + 169) = *(_BYTE *)(a2 + 169);
  *(_BYTE *)(a1 + 170) = *(_BYTE *)(a2 + 170);
  *(_BYTE *)(a1 + 171) = *(_BYTE *)(a2 + 171);
  return a1;
}

uint64_t getEnumTagSinglePayload for ParticipantVideoView.ViewModel(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 172))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 24);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ParticipantVideoView.ViewModel(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 168) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 172) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 172) = 0;
    if (a2)
      *(_QWORD *)(result + 24) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticipantVideoView.ViewModel()
{
  return &type metadata for ParticipantVideoView.ViewModel;
}

uint64_t sub_1BD21B0C8()
{
  uint64_t v0;

  return swift_deallocObject();
}

id partial apply for closure #1 in ParticipantVideoView.hideSnapshot(animated:)()
{
  uint64_t v0;

  return closure #1 in ParticipantVideoView.hideSnapshot(animated:)(*(_QWORD *)(v0 + 16));
}

void partial apply for closure #2 in ParticipantVideoView.hideSnapshot(animated:)(uint64_t a1)
{
  uint64_t v1;

  closure #2 in ParticipantVideoView.hideSnapshot(animated:)(a1, *(_QWORD *)(v1 + 16));
}

void OUTLINED_FUNCTION_39_36(uint64_t a1@<X8>)
{
  _BYTE *v1;

  v1[a1] = 0;

}

uint64_t dispatch thunk of ParticipantTile.isInRoster.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ParticipantTile.isInRoster.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of ParticipantTile.isInRoster.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of ParticipantTile.customCornerRadius.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of ParticipantTile.customCornerRadius.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of ParticipantTile.customCornerRadius.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of ParticipantTile.isExpanded.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of ParticipantTile.isExpanded.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of ParticipantTile.isExpanded.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of ParticipantTile.updateDebugOverlayLabel(text:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 80))();
}

uint64_t dispatch thunk of ParticipantTile.updateLayerTransform(to:)(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v3)(_OWORD *);
  __int128 v4;
  _OWORD v6[3];

  v3 = *(uint64_t (**)(_OWORD *))(a3 + 88);
  v4 = a1[1];
  v6[0] = *a1;
  v6[1] = v4;
  v6[2] = a1[2];
  return v3(v6);
}

id PickablePerson.__allocating_init(contact:handle:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  return PickablePerson.init(contact:handle:)(a1, a2);
}

void *PickablePerson.contact.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit14PickablePerson_contact);
  v2 = v1;
  return v1;
}

id PickablePerson.handle.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC15ConversationKit14PickablePerson_handle);
}

uint64_t PickablePerson.address.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit14PickablePerson_address);
  swift_bridgeObjectRetain();
  return v1;
}

id PickablePerson.init(contact:handle:)(void *a1, void *a2)
{
  char *v2;
  id v4;
  id v5;
  char *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  id v12;
  objc_super v14;

  *(_QWORD *)&v2[OBJC_IVAR____TtC15ConversationKit14PickablePerson_contact] = a1;
  *(_QWORD *)&v2[OBJC_IVAR____TtC15ConversationKit14PickablePerson_handle] = a2;
  v4 = a1;
  v5 = a2;
  v6 = v2;
  v7 = objc_msgSend(v5, sel_value);
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v10 = v9;

  v11 = (uint64_t *)&v6[OBJC_IVAR____TtC15ConversationKit14PickablePerson_address];
  *v11 = v8;
  v11[1] = v10;

  v14.receiver = v6;
  v14.super_class = (Class)type metadata accessor for PickablePerson();
  v12 = objc_msgSendSuper2(&v14, sel_init);

  return v12;
}

uint64_t type metadata accessor for PickablePerson()
{
  return objc_opt_self();
}

id PickablePerson.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void PickablePerson.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id PickablePerson.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PickablePerson();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for PickablePerson()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PickablePerson.__allocating_init(contact:handle:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

void CaptionsPauseTransition.hash(into:)()
{
  unsigned __int8 *v0;

  Hasher._combine(_:)(*v0);
}

BOOL static CaptionsPauseTransition.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

Swift::Int CaptionsPauseTransition.hashValue.getter()
{
  unsigned __int8 *v0;
  Swift::UInt v1;

  v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

BOOL static CaptionsPausedState.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2;
  int v3;

  v2 = *a1;
  v3 = *a2;
  if (v2 == 4)
    return v3 == 4;
  if (v3 == 4)
    return 0;
  if (v2 != 3)
    return v3 != 3 && v2 == v3;
  return v3 == 3;
}

Swift::Void __swiftcall CaptionsStateController.updateCaptionsEnablement(pauseTransitionIfAllowed:)(ConversationKit::CaptionsPauseTransition pauseTransitionIfAllowed)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  unsigned int v6;
  char v7;
  int v8;
  char v9;
  unsigned __int8 v11;
  char v12;
  char v13;
  unsigned __int8 v14;
  unsigned __int8 v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  _BYTE v21[2];

  v3 = v2;
  v4 = v1;
  v5 = *(unsigned __int8 *)pauseTransitionIfAllowed;
  if (((*(uint64_t (**)())(v2 + 8))() & 1) == 0
    || (OUTLINED_FUNCTION_4_30(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 72)) & 1) != 0
    || OUTLINED_FUNCTION_0_11() == 2
    || OUTLINED_FUNCTION_0_11() == 1
    || !v5)
  {
    OUTLINED_FUNCTION_1_92();
    if (v21[1] == 4)
    {
      OUTLINED_FUNCTION_5_80();
      if (v20 == 3 || !v20)
      {
        v9 = 1;
      }
      else
      {
        OUTLINED_FUNCTION_5_80();
        v9 = v18;
      }
      v19 = v9;
      OUTLINED_FUNCTION_3_86((uint64_t)&v19, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 40));
    }
    goto LABEL_19;
  }
  if (v5 != 1)
  {
    OUTLINED_FUNCTION_1_92();
    if (v17 == 4)
    {
      if ((OUTLINED_FUNCTION_5_80() & 1) != 0)
      {
        OUTLINED_FUNCTION_0_11();
        if (v16 == 3 || !v16)
        {
          v8 = 1;
        }
        else
        {
          OUTLINED_FUNCTION_0_11();
          if (v15 == 3)
            v8 = 1;
          else
            v8 = v15;
        }
      }
      else
      {
        v8 = 0;
      }
      v7 = OUTLINED_FUNCTION_5_80();
LABEL_42:
      if (v8 != 1)
        goto LABEL_20;
      goto LABEL_43;
    }
LABEL_19:
    LOBYTE(v8) = 0;
    v7 = 0;
    goto LABEL_20;
  }
  OUTLINED_FUNCTION_1_92();
  v6 = v14;
  if (v14 == 4)
  {
    v7 = OUTLINED_FUNCTION_0_11();
    if ((OUTLINED_FUNCTION_0_11() & 1) == 0)
    {
      LOBYTE(v8) = 0;
      goto LABEL_20;
    }
    OUTLINED_FUNCTION_0_11();
    if (v12 == 3)
      goto LABEL_43;
    if (!v12)
      goto LABEL_43;
    OUTLINED_FUNCTION_0_11();
    v8 = v11;
    if (v11 == 3)
      goto LABEL_43;
    goto LABEL_42;
  }
  v13 = 4;
  OUTLINED_FUNCTION_3_86((uint64_t)&v13, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 40));
  if ((OUTLINED_FUNCTION_4_30(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 56)) & 1) == 0)
    goto LABEL_19;
  if (v6 <= 1)
    LOBYTE(v8) = 1;
  else
    LOBYTE(v8) = v6;
  v7 = 1;
  if (v6 <= 3 && v6 != 2)
  {
LABEL_43:
    if ((OUTLINED_FUNCTION_4_30(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 64)) & 1) != 0)
      LOBYTE(v8) = 1;
    else
      LOBYTE(v8) = 2;
  }
LABEL_20:
  v21[0] = v8;
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v3 + 80))(v21, v7 & 1, v4, v3);
}

unint64_t lazy protocol witness table accessor for type CaptionsPauseTransition and conformance CaptionsPauseTransition()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type CaptionsPauseTransition and conformance CaptionsPauseTransition;
  if (!lazy protocol witness table cache variable for type CaptionsPauseTransition and conformance CaptionsPauseTransition)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for CaptionsPauseTransition, &type metadata for CaptionsPauseTransition);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type CaptionsPauseTransition and conformance CaptionsPauseTransition);
  }
  return result;
}

uint64_t dispatch thunk of CaptionsStateController.isFullScreen.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of CaptionsStateController.pipState.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of CaptionsStateController.captionsLayoutState.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of CaptionsStateController.captionsPausedState.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of CaptionsStateController.captionsPausedState.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of CaptionsStateController.captionsPausedState.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of CaptionsStateController.isCaptioningEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of CaptionsStateController.captionsBubbleModeIsAllowed.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of CaptionsStateController.isScreenSharing.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of CaptionsStateController.implementNewCaptionsState(newLayoutState:newRecognizerState:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 80))();
}

uint64_t storeEnumTagSinglePayload for CaptionsPauseTransition(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BD21B81C + 4 * byte_1BD6520A5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BD21B850 + 4 * byte_1BD6520A0[v4]))();
}

uint64_t sub_1BD21B850(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD21B858(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD21B860);
  return result;
}

uint64_t sub_1BD21B86C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD21B874);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BD21B878(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD21B880(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CaptionsPauseTransition()
{
  return &type metadata for CaptionsPauseTransition;
}

uint64_t getEnumTagSinglePayload for CaptionsPausedState(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  int v6;
  unsigned int v7;
  unsigned int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
  {
    if (*a1 <= 3u)
      v6 = 3;
    else
      v6 = *a1;
    v7 = v6 - 4;
    if (*a1 < 3u)
      v8 = -1;
    else
      v8 = v7;
    if (v8 + 1 >= 2)
      return v8;
    else
      return 0;
  }
  else
  {
    v2 = a2 + 4;
    if (a2 + 4 >= 0xFFFF00)
      v3 = 4;
    else
      v3 = 2;
    if (v2 >> 8 < 0xFF)
      v3 = 1;
    if (v2 >= 0x100)
      v4 = v3;
    else
      v4 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1BD21B8EC + 4 * byte_1BD6520AA[v4]))();
  }
}

uint64_t storeEnumTagSinglePayload for CaptionsPausedState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 4;
  if (a3 + 4 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xFC)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1BD21B9A4 + 4 * byte_1BD6520B4[v5]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1BD21B9D8 + 4 * byte_1BD6520AF[v5]))();
}

uint64_t sub_1BD21B9D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD21B9E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD21B9E8);
  return result;
}

uint64_t sub_1BD21B9F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD21B9FCLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1BD21BA00(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD21BA08(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t getEnumTag for CaptionsPausedState(unsigned __int8 *a1)
{
  int v1;
  unsigned int v2;

  if (*a1 <= 3u)
    v1 = 3;
  else
    v1 = *a1;
  v2 = v1 - 3;
  if (*a1 >= 3u)
    return v2;
  else
    return 0;
}

_BYTE *destructiveInjectEnumTag for CaptionsPausedState(_BYTE *result, int a2)
{
  if (a2)
    *result = a2 + 3;
  return result;
}

ValueMetadata *type metadata accessor for CaptionsPausedState()
{
  return &type metadata for CaptionsPausedState;
}

uint64_t key path getter for ConversationControlsShareCardViewController.delegate : ConversationControlsShareCardViewController@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *a1 + OBJC_IVAR____TtC15ConversationKit43ConversationControlsShareCardViewController_delegate;
  swift_beginAccess();
  result = MEMORY[0x1C3B752C0](v3);
  v5 = *(_QWORD *)(v3 + 8);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t key path setter for ConversationControlsShareCardViewController.delegate : ConversationControlsShareCardViewController(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *a2 + OBJC_IVAR____TtC15ConversationKit43ConversationControlsShareCardViewController_delegate;
  swift_beginAccess();
  *(_QWORD *)(v3 + 8) = v2;
  return swift_unknownObjectWeakAssign();
}

void ConversationControlsShareCardViewController.delegate.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit43ConversationControlsShareCardViewController_delegate;
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x1C3B752C0](v1);
  OUTLINED_FUNCTION_32();
}

void ConversationControlsShareCardViewController.delegate.setter(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = v2 + OBJC_IVAR____TtC15ConversationKit43ConversationControlsShareCardViewController_delegate;
  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v5 + 8) = a2;
  swift_unknownObjectWeakAssign();

  OUTLINED_FUNCTION_9_0();
}

void ConversationControlsShareCardViewController.delegate.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC15ConversationKit43ConversationControlsShareCardViewController_delegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  OUTLINED_FUNCTION_2_0();
  v6 = MEMORY[0x1C3B752C0](v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  OUTLINED_FUNCTION_18();
}

void ConversationControlsShareCardViewController.delegate.modify(id **a1, char a2)
{
  id *v3;
  id v4;

  v3 = *a1;
  v4 = (*a1)[3];
  *(_QWORD *)((char *)(*a1)[6] + (_QWORD)(*a1)[5] + 8) = (*a1)[4];
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {

    swift_endAccess();
  }
  else
  {
    swift_endAccess();

  }
  free(v3);
}

uint64_t key path getter for ConversationControlsShareCardViewController.updateSheetDetent : ConversationControlsShareCardViewController@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD *);

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit43ConversationControlsShareCardViewController_updateSheetDetent);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = partial apply for thunk for @escaping @callee_guaranteed (@guaranteed CNComposeRecipient) -> ();
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationControlsShareCardViewController.updateSheetDetent : ConversationControlsShareCardViewController(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t);
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed UITapGestureRecognizer) -> (@out ());
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit43ConversationControlsShareCardViewController_updateSheetDetent);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

void ConversationControlsShareCardViewController.updateSheetDetent.getter()
{
  uint64_t v0;
  uint64_t *v1;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC15ConversationKit43ConversationControlsShareCardViewController_updateSheetDetent);
  OUTLINED_FUNCTION_2_0();
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(*v1);
  OUTLINED_FUNCTION_32();
}

void ConversationControlsShareCardViewController.updateSheetDetent.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;

  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit43ConversationControlsShareCardViewController_updateSheetDetent);
  OUTLINED_FUNCTION_2_0();
  v6 = *v5;
  *v5 = a1;
  v5[1] = a2;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v6);
  OUTLINED_FUNCTION_9_0();
}

uint64_t (*ConversationControlsShareCardViewController.updateSheetDetent.modify())()
{
  OUTLINED_FUNCTION_2_0();
  return CallRecordingPillViewController.cancellable.modify;
}

id ConversationControlsShareCardViewController.backgroundMaterialView.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC15ConversationKit43ConversationControlsShareCardViewController____lazy_storage___backgroundMaterialView;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC15ConversationKit43ConversationControlsShareCardViewController____lazy_storage___backgroundMaterialView);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC15ConversationKit43ConversationControlsShareCardViewController____lazy_storage___backgroundMaterialView);
  }
  else
  {
    v4 = closure #1 in ConversationControlsShareCardViewController.backgroundMaterialView.getter();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id closure #1 in ConversationControlsShareCardViewController.backgroundMaterialView.getter()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(), sel_effectWithStyle_, 18);
  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F58]), sel_initWithEffect_, v0);

  objc_msgSend(v1, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  return v1;
}

id closure #1 in ConversationControlsShareCardViewController.headerView.getter(char *a1)
{
  void *v1;
  id v3;
  _BOOL8 v4;
  id v5;
  id v6;
  id result;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  uint64_t v12;
  objc_super v13;

  v1 = *(void **)&a1[OBJC_IVAR____TtC15ConversationKit43ConversationControlsShareCardViewController_conversationControlsManager];
  if (!v1)
    return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_init);
  v13.receiver = a1;
  v13.super_class = (Class)swift_getObjectType();
  v3 = v1;
  v4 = objc_msgSendSuper2(&v13, sel_modalPresentationStyle) == (id)7;
  State.init(wrappedValue:)();
  v5 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIHostingAutoResizableController<ShareCardHeaderView>));
  v6 = specialized UIHostingAutoResizableController.init(rootView:canShowWhileLocked:)(v3, v4, v11, v12, 1);
  objc_msgSend(a1, sel_addChildViewController_, v6);
  result = objc_msgSend(v6, sel_view);
  if (result)
  {
    v8 = result;
    objc_msgSend(result, sel_setBackgroundColor_, 0);

    result = objc_msgSend(v6, sel_view);
    if (result)
    {
      v9 = result;
      objc_msgSend(result, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

      objc_msgSend(v6, sel_didMoveToParentViewController_, a1);
      result = objc_msgSend(v6, sel_view);
      if (result)
      {
        v10 = result;

        return v10;
      }
      goto LABEL_9;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_9:
  __break(1u);
  return result;
}

id ConversationControlsShareCardViewController.modalPresentationStyle.getter()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)OUTLINED_FUNCTION_15_6();
  return objc_msgSendSuper2(&v2, sel_modalPresentationStyle);
}

id closure #1 in ConversationControlsShareCardViewController.closeButton.getter(uint64_t a1)
{
  id v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  double v9;

  v2 = objc_msgSend((id)objc_opt_self(), sel_buttonWithType_, 7);
  v3 = (void *)objc_opt_self();
  v4 = objc_msgSend(v3, sel_labelColor);
  objc_msgSend(v2, sel__setImageColor_forState_, v4, 0);

  v5 = objc_msgSend(v2, sel_backgroundImageForState_, 0);
  if (v5)
  {
    v6 = v5;
    v7 = objc_msgSend(v3, sel_secondarySystemFillColor);
    v8 = objc_msgSend(v6, sel_imageWithTintColor_, v7);

  }
  else
  {
    v8 = 0;
  }
  objc_msgSend(v2, sel_setBackgroundImage_forState_, v8, 0);
  objc_msgSend(v2, sel_addTarget_action_forControlEvents_, a1, sel_didTapCloseButton, 64);
  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  LODWORD(v9) = 1144750080;
  objc_msgSend(v2, sel_setContentHuggingPriority_forAxis_, 0, v9);

  return v2;
}

id ConversationControlsShareCardViewController.scrollView.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC15ConversationKit43ConversationControlsShareCardViewController____lazy_storage___scrollView;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC15ConversationKit43ConversationControlsShareCardViewController____lazy_storage___scrollView);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC15ConversationKit43ConversationControlsShareCardViewController____lazy_storage___scrollView);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3C28]), sel_init);
    objc_msgSend(v4, sel_setShowsVerticalScrollIndicator_, 0);
    objc_msgSend(v4, sel_setShowsHorizontalScrollIndicator_, 0);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id ConversationControlsShareCardViewController.scrollViewContent.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC15ConversationKit43ConversationControlsShareCardViewController____lazy_storage___scrollViewContent;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC15ConversationKit43ConversationControlsShareCardViewController____lazy_storage___scrollViewContent);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC15ConversationKit43ConversationControlsShareCardViewController____lazy_storage___scrollViewContent);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_init);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id closure #1 in ConversationControlsShareCardViewController.controlsView.getter(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(_QWORD *);
  id v10;
  char *v11;
  id v12;
  id v13;
  id result;
  void *v15;
  void *v16;
  id v17;
  _QWORD v19[5];

  v2 = type metadata accessor for ShareCardControlsView(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (_QWORD *)((char *)&v19[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = *(void **)&a1[OBJC_IVAR____TtC15ConversationKit43ConversationControlsShareCardViewController_conversationControlsManager];
  if (!v5)
    return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_init);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  type metadata accessor for ShareCardViewModel(0);
  swift_allocObject();
  v6 = v5;
  ShareCardViewModel.init(didTapScreenShareButton:didTapAskToScreenShareButton:didTapCollaborateButton:didTapEndSharePlay:)();
  v8 = v7;
  v19[3] = type metadata accessor for ConversationControlsManager(0);
  v19[4] = &protocol witness table for ConversationControlsManager;
  v19[0] = v6;
  v9 = *(void (**)(_QWORD *))(*(_QWORD *)v8 + 576);
  v10 = v6;
  v9(v19);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  *v4 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>.Content);
  swift_storeEnumTagMultiPayload();
  v11 = (char *)v4 + *(int *)(v2 + 20);
  *(_QWORD *)v11 = partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:);
  *((_QWORD *)v11 + 1) = v8;
  v11[16] = 0;
  v12 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIHostingAutoResizableController<ShareCardControlsView>));
  swift_retain();
  v13 = specialized UIHostingAutoResizableController.init(rootView:canShowWhileLocked:)((uint64_t)v4, 1);
  objc_msgSend(a1, sel_addChildViewController_, v13);
  result = objc_msgSend(v13, sel_view);
  if (result)
  {
    v15 = result;
    objc_msgSend(result, sel_setBackgroundColor_, 0);

    result = objc_msgSend(v13, sel_view);
    if (result)
    {
      v16 = result;
      objc_msgSend(result, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

      objc_msgSend(v13, sel_didMoveToParentViewController_, a1);
      result = objc_msgSend(v13, sel_view);
      if (result)
      {
        v17 = result;

        swift_release();
        return v17;
      }
      goto LABEL_9;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_9:
  __break(1u);
  return result;
}

void ConversationControlsShareCardViewController.didTapScreenShareButton()()
{
  char *v0;
  char *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  void *v6;
  id v7;

  v1 = v0;
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v2 = type metadata accessor for Logger();
  __swift_project_value_buffer(v2, (uint64_t)&static Logger.conversationControls);
  v3 = Logger.logObject.getter();
  v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_1BD004000, v3, v4, "Did tap share card screen share button", v5, 2u);
    MEMORY[0x1C3B751B8](v5, -1, -1);
  }

  v6 = *(void **)&v1[OBJC_IVAR____TtC15ConversationKit43ConversationControlsShareCardViewController_conversationControlsManager];
  if (v6)
  {
    v7 = v6;
    objc_msgSend(v1, sel_dismissViewControllerAnimated_completion_, 1, 0);
    ConversationControlsManager.showHUD()();
    ConversationControlsManager.startScreenShareWithCountdown(completion:)();

  }
}

void closure #2 in closure #1 in ConversationControlsShareCardViewController.controlsView.getter(NSObject *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v3 = a2 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1C3B752C0](v3);
  if (v4)
  {
    v5 = (void *)v4;
    ConversationControlsShareCardViewController.didTapAskToScreenShareButton(_:)(a1);

  }
}

void ConversationControlsShareCardViewController.didTapAskToScreenShareButton(_:)(NSObject *a1)
{
  char *v1;
  char *v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  _QWORD *v7;
  uint64_t (*v8)(void);
  NSObject *v9;
  NSObject *v10;
  NSObject *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  NSObject *v17;
  void *v18;
  void *v19;
  id v20;
  os_log_type_t v21;
  uint8_t *v22;
  NSObject *v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  NSObject *v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;

  v2 = v1;
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v3 = type metadata accessor for Logger();
  __swift_project_value_buffer(v3, (uint64_t)&static Logger.conversationControls);
  v4 = Logger.logObject.getter();
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v6 = 0;
    _os_log_impl(&dword_1BD004000, v4, v5, "Did tap share card ask to share screen button", v6, 2u);
    MEMORY[0x1C3B751B8](v6, -1, -1);
  }

  objc_msgSend(v2, sel_dismissViewControllerAnimated_completion_, 1, 0);
  if (!a1)
  {
    a1 = Logger.logObject.getter();
    v21 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(a1, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v22 = 0;
      _os_log_impl(&dword_1BD004000, a1, v21, "Cannot request to screen share without a handle", v22, 2u);
      MEMORY[0x1C3B751B8](v22, -1, -1);
    }
    goto LABEL_17;
  }
  v7 = *(_QWORD **)&v2[OBJC_IVAR____TtC15ConversationKit43ConversationControlsShareCardViewController_conversationControlsManager];
  if (!v7)
  {
    v23 = a1;
    goto LABEL_14;
  }
  v8 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v7) + 0x290);
  v9 = a1;
  v10 = v8();
  if (!v10)
  {
LABEL_14:
    v24 = Logger.logObject.getter();
    v25 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v26 = 0;
      _os_log_impl(&dword_1BD004000, v24, v25, "Cannot request to screen share without a conversation", v26, 2u);
      MEMORY[0x1C3B751B8](v26, -1, -1);
    }

    goto LABEL_17;
  }
  v11 = v10;
  v12 = -[NSObject mergedActiveRemoteParticipants](v10, sel_mergedActiveRemoteParticipants);
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
  lazy protocol witness table accessor for type TUConversationParticipant and conformance NSObject();
  v13 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  v14 = specialized Set.count.getter(v13);
  swift_bridgeObjectRelease();
  if (!v14)
  {
    v28 = Logger.logObject.getter();
    v29 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v30 = 0;
      _os_log_impl(&dword_1BD004000, v28, v29, "Cannot request to screen share with no participants", v30, 2u);
      MEMORY[0x1C3B751B8](v30, -1, -1);
    }

    goto LABEL_25;
  }
  v15 = -[NSObject mergedActiveRemoteParticipants](v11, sel_mergedActiveRemoteParticipants);
  v16 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  v17 = v9;
  specialized Sequence.first(where:)(v16, v17);
  v19 = v18;
  swift_bridgeObjectRelease();
  if (!v19)
  {
    v31 = Logger.logObject.getter();
    v32 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v33 = 0;
      _os_log_impl(&dword_1BD004000, v31, v32, "Couldn't find participant for request to screen share", v33, 2u);
      MEMORY[0x1C3B751B8](v33, -1, -1);
    }

LABEL_25:
    v27 = v11;
    goto LABEL_18;
  }
  v20 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  a1 = objc_msgSend(v20, sel_conversationManager);

  -[NSObject requestParticipantToShareScreen:forConversation:](a1, sel_requestParticipantToShareScreen_forConversation_, v19, v11);
LABEL_17:
  v27 = a1;
LABEL_18:

}

void ConversationControlsShareCardViewController.didTapCollaborateButton()()
{
  char *v0;
  char *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  void *v6;
  id v7;

  v1 = v0;
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v2 = type metadata accessor for Logger();
  __swift_project_value_buffer(v2, (uint64_t)&static Logger.conversationControls);
  v3 = Logger.logObject.getter();
  v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_1BD004000, v3, v4, "Did tap share card collaborate button", v5, 2u);
    MEMORY[0x1C3B751B8](v5, -1, -1);
  }

  v6 = *(void **)&v1[OBJC_IVAR____TtC15ConversationKit43ConversationControlsShareCardViewController_conversationControlsManager];
  if (v6)
  {
    v7 = v6;
    objc_msgSend(v1, sel_dismissViewControllerAnimated_completion_, 1, 0);
    objc_msgSend(v7, sel_collaborateButtonTapped);

  }
}

void closure #1 in closure #1 in ConversationControlsShareCardViewController.controlsView.getter(uint64_t a1, void (*a2)(void))
{
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v3 = a1 + 16;
  OUTLINED_FUNCTION_2_0();
  v4 = MEMORY[0x1C3B752C0](v3);
  if (v4)
  {
    v5 = (void *)v4;
    a2();

  }
}

uint64_t ConversationControlsShareCardViewController.didTapEndSharePlay()()
{
  char *v0;
  char *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint8_t *v20;
  id v22;
  id v23;
  uint64_t v24;
  void *v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  _BYTE v29[40];

  v1 = v0;
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v2 = type metadata accessor for Logger();
  __swift_project_value_buffer(v2, (uint64_t)&static Logger.conversationControls);
  v3 = Logger.logObject.getter();
  v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_1BD004000, v3, v4, "Did Tap End Share Play", v5, 2u);
    MEMORY[0x1C3B751B8](v5, -1, -1);
  }

  v6 = *(_QWORD **)&v1[OBJC_IVAR____TtC15ConversationKit43ConversationControlsShareCardViewController_conversationControlsManager];
  if (!v6)
  {
    v28 = 0;
    v26 = 0u;
    v27 = 0u;
    return outlined destroy of Activity?((uint64_t)&v26);
  }
  v7 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  (*(void (**)(__int128 *__return_ptr))((*MEMORY[0x1E0DEEDD8] & *v6) + 0x8C8))(&v26);
  if (!*((_QWORD *)&v27 + 1))
    return outlined destroy of Activity?((uint64_t)&v26);
  v8 = outlined init with take of Notice(&v26, (uint64_t)v29);
  v9 = (*(uint64_t (**)(uint64_t))((*v7 & *v6) + 0x290))(v8);
  if (v9)
  {
    v10 = (void *)v9;
    outlined init with copy of IDSLookupManager((uint64_t)v29, (uint64_t)&v26);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Activity);
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationActivitySession);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v11 = v25;
      outlined init with copy of IDSLookupManager((uint64_t)v29, (uint64_t)&v26);
      v12 = Logger.logObject.getter();
      v13 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v12, v13))
      {
        v24 = (uint64_t)v25;
        v14 = (uint8_t *)swift_slowAlloc();
        v15 = swift_slowAlloc();
        v25 = (void *)v15;
        *(_DWORD *)v14 = 136315138;
        v16 = *((_QWORD *)&v27 + 1);
        v17 = v28;
        __swift_project_boxed_opaque_existential_1(&v26, *((uint64_t *)&v27 + 1));
        v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8))(v16, v17);
        getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v18, v19, (uint64_t *)&v25);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v26);
        _os_log_impl(&dword_1BD004000, v12, v13, "End active SharePlay activity: %s", v14, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C3B751B8](v15, -1, -1);
        v20 = v14;
        v11 = (void *)v24;
        MEMORY[0x1C3B751B8](v20, -1, -1);
      }
      else
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v26);
      }

      v22 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
      v23 = objc_msgSend(v22, sel_conversationManager);

      objc_msgSend(v23, sel_presentDismissalAlertForActivitySession_onConversation_, v11, v10);
      objc_msgSend(v1, sel_dismissViewControllerAnimated_completion_, 1, 0);

    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
}

void ConversationControlsShareCardViewController.gelatoDiscoverabilityView.getter(_QWORD *a1, char a2)
{
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  id v6;

  v4 = *(void **)(v2 + *a1);
  if (!v4)
  {
    closure #1 in ConversationControlsShareCardViewController.sharePlayDiscoverabilityView.getter(v2, a2);
    OUTLINED_FUNCTION_17_3(v5);

    v4 = 0;
  }
  v6 = v4;
  OUTLINED_FUNCTION_18();
}

void closure #1 in ConversationControlsShareCardViewController.sharePlayDiscoverabilityView.getter(uint64_t a1, char a2)
{
  _QWORD *v3;
  id v4;

  v3 = *(_QWORD **)(a1
                  + OBJC_IVAR____TtC15ConversationKit43ConversationControlsShareCardViewController_conversationControlsManager);
  if (v3)
    v3 = (_QWORD *)(*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v3) + 0x778))();
  v4 = objc_allocWithZone((Class)type metadata accessor for SharePlayDiscoverabilityMenuView());
  objc_msgSend(SharePlayDiscoverabilityMenuView.init(type:presentationStyle:foregroundApp:)(a2, 1, v3), sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  OUTLINED_FUNCTION_0();
}

id ConversationControlsShareCardViewController.createSeparator()()
{
  id v0;
  id v1;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_init);
  v1 = objc_msgSend((id)objc_opt_self(), sel_tertiaryLabelColor);
  objc_msgSend(v0, sel_setBackgroundColor_, v1);

  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  return v0;
}

void ConversationControlsShareCardViewController.__allocating_init(conversationControlsManager:)()
{
  uint64_t v0;

  OUTLINED_FUNCTION_16_1();
  ConversationControlsShareCardViewController.init(conversationControlsManager:)(v0);
  OUTLINED_FUNCTION_0();
}

id ConversationControlsShareCardViewController.init(conversationControlsManager:)(uint64_t a1)
{
  char *v1;
  objc_class *v3;
  char *v4;
  objc_super v6;

  v3 = (objc_class *)OUTLINED_FUNCTION_15_6();
  OUTLINED_FUNCTION_18_1(OBJC_IVAR____TtC15ConversationKit43ConversationControlsShareCardViewController_delegate);
  v4 = &v1[OBJC_IVAR____TtC15ConversationKit43ConversationControlsShareCardViewController_updateSheetDetent];
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit43ConversationControlsShareCardViewController_foregroundAppCancellable] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit43ConversationControlsShareCardViewController____lazy_storage___backgroundMaterialView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit43ConversationControlsShareCardViewController____lazy_storage___headerView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit43ConversationControlsShareCardViewController____lazy_storage___closeButton] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit43ConversationControlsShareCardViewController____lazy_storage___scrollView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit43ConversationControlsShareCardViewController____lazy_storage___scrollViewContent] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit43ConversationControlsShareCardViewController____lazy_storage___controlsView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit43ConversationControlsShareCardViewController____lazy_storage___sharePlayDiscoverabilityView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit43ConversationControlsShareCardViewController____lazy_storage___gelatoDiscoverabilityView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit43ConversationControlsShareCardViewController_conversationControlsManager] = a1;
  v6.receiver = v1;
  v6.super_class = v3;
  return objc_msgSendSuper2(&v6, sel_initWithNibName_bundle_, 0, 0);
}

void ConversationControlsShareCardViewController.__allocating_init(coder:)()
{
  void *v0;

  objc_msgSend(OUTLINED_FUNCTION_16_1(), sel_initWithCoder_, v0);

  OUTLINED_FUNCTION_0();
}

void ConversationControlsShareCardViewController.init(coder:)()
{
  char *v0;
  char *v1;

  OUTLINED_FUNCTION_18_1(OBJC_IVAR____TtC15ConversationKit43ConversationControlsShareCardViewController_delegate);
  v1 = &v0[OBJC_IVAR____TtC15ConversationKit43ConversationControlsShareCardViewController_updateSheetDetent];
  *(_QWORD *)v1 = 0;
  *((_QWORD *)v1 + 1) = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit43ConversationControlsShareCardViewController_foregroundAppCancellable] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit43ConversationControlsShareCardViewController____lazy_storage___backgroundMaterialView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit43ConversationControlsShareCardViewController____lazy_storage___headerView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit43ConversationControlsShareCardViewController____lazy_storage___closeButton] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit43ConversationControlsShareCardViewController____lazy_storage___scrollView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit43ConversationControlsShareCardViewController____lazy_storage___scrollViewContent] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit43ConversationControlsShareCardViewController____lazy_storage___controlsView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit43ConversationControlsShareCardViewController____lazy_storage___sharePlayDiscoverabilityView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit43ConversationControlsShareCardViewController____lazy_storage___gelatoDiscoverabilityView] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

Swift::Bool __swiftcall ConversationControlsShareCardViewController._canShowWhileLocked()()
{
  return 1;
}

Swift::Void __swiftcall ConversationControlsShareCardViewController.viewDidLoad()()
{
  void *v0;
  void *v1;
  objc_class *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  char *v8;
  UIView *v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  void *v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  uint64_t v29;
  SEL v30;
  void *v31;
  uint64_t v32;
  SEL v33;
  void *v34;
  uint64_t v35;
  SEL v36;
  uint64_t v37;
  id v38;
  id v39;
  void *v40;
  void *v41;
  uint64_t v42;
  id v43;
  id v44;
  void *v45;
  id v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  id v52;
  id v53;
  id v54;
  uint64_t v55;
  id v56;
  id v57;
  id v58;
  unint64_t v59;
  id v60;
  void *v61;
  id v62;
  uint64_t v63;
  id v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  _QWORD v69[7];
  UIView *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  void *v75;
  void *v76;
  void *v77;
  uint64_t v78;
  objc_super v79;

  v1 = v0;
  v2 = (objc_class *)OUTLINED_FUNCTION_15_6();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<ForegroundApp?>.Publisher);
  v69[5] = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v69[4] = (char *)v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.RemoveDuplicates<Published<ForegroundApp?>.Publisher>);
  v6 = *(void **)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(v0, sel_setOverrideUserInterfaceStyle_, 2);
  v9 = (UIView *)ConversationControlsShareCardViewController.backgroundMaterialView.getter();
  v10 = objc_msgSend(v0, sel_view);
  if (v10)
  {
    v11 = v10;
    v70 = v9;
    OUTLINED_FUNCTION_54_24(v10, sel_addSubview_);

    OUTLINED_FUNCTION_53_22(&OBJC_IVAR____TtC15ConversationKit43ConversationControlsShareCardViewController____lazy_storage___headerView, (uint64_t (*)(uint64_t))closure #1 in ConversationControlsShareCardViewController.headerView.getter);
    v13 = v12;
    v14 = OUTLINED_FUNCTION_123(v12, sel_view);
    if (v14)
    {
      v15 = v14;
      v77 = (void *)v13;
      OUTLINED_FUNCTION_54_24(v14, sel_addSubview_);

      OUTLINED_FUNCTION_53_22(&OBJC_IVAR____TtC15ConversationKit43ConversationControlsShareCardViewController____lazy_storage___closeButton, (uint64_t (*)(uint64_t))closure #1 in ConversationControlsShareCardViewController.closeButton.getter);
      v17 = (void *)v16;
      v18 = OUTLINED_FUNCTION_123(v16, sel_view);
      if (v18)
      {
        v19 = v18;
        v69[3] = v3;
        OUTLINED_FUNCTION_54_24(v18, sel_addSubview_);

        v20 = ConversationControlsShareCardViewController.scrollView.getter();
        v21 = OUTLINED_FUNCTION_123((uint64_t)v20, sel_view);
        if (v21)
        {
          v22 = v21;
          objc_msgSend(v21, sel_addSubview_, v20);

          v23 = ConversationControlsShareCardViewController.scrollViewContent.getter();
          v74 = v20;
          v24 = v20;
          v25 = v23;
          objc_msgSend(v24, sel_addSubview_, v23);
          CallControlsFullScreenStatusView.textContainer.getter(&OBJC_IVAR____TtC15ConversationKit43ConversationControlsShareCardViewController____lazy_storage___controlsView, (uint64_t (*)(uint64_t))closure #1 in ConversationControlsShareCardViewController.controlsView.getter);
          v27 = v26;
          objc_msgSend(v25, sel_addSubview_, v26);

          ConversationControlsShareCardViewController.createSeparator()();
          v28 = (void *)OUTLINED_FUNCTION_41_26();
          v73 = v29;
          objc_msgSend(v28, v30);
          ConversationControlsShareCardViewController.gelatoDiscoverabilityView.getter(&OBJC_IVAR____TtC15ConversationKit43ConversationControlsShareCardViewController____lazy_storage___sharePlayDiscoverabilityView, 0);
          v31 = (void *)OUTLINED_FUNCTION_41_26();
          v72 = v32;
          objc_msgSend(v31, v33);
          ConversationControlsShareCardViewController.createSeparator()();
          v34 = (void *)OUTLINED_FUNCTION_41_26();
          v71 = v35;
          objc_msgSend(v34, v36);
          ConversationControlsShareCardViewController.gelatoDiscoverabilityView.getter(&OBJC_IVAR____TtC15ConversationKit43ConversationControlsShareCardViewController____lazy_storage___gelatoDiscoverabilityView, 1);
          v76 = v25;
          v69[6] = v37;
          objc_msgSend(v25, sel_addSubview_);
          v79.receiver = v1;
          v79.super_class = v2;
          v38 = objc_msgSendSuper2(&v79, sel_modalPresentationStyle);
          v75 = v17;
          v39 = OUTLINED_FUNCTION_123((uint64_t)objc_msgSend(v17, sel_setHidden_, v38 == (id)7), sel_view);
          if (v39)
          {
            v40 = v39;
            UIView.addConstraintsToFill(_:insets:)(v70, *MEMORY[0x1E0DC3298]);

            v78 = MEMORY[0x1E0DEE9D8];
            v41 = v77;
            v43 = OUTLINED_FUNCTION_9(v42, sel_topAnchor);
            v44 = OUTLINED_FUNCTION_123((uint64_t)v43, sel_view);
            if (v44)
            {
              v45 = v44;
              v46 = objc_msgSend(v44, sel_safeAreaLayoutGuide, v8, v6, v5);

              v48 = OUTLINED_FUNCTION_6_7(v47, sel_topAnchor);
              OUTLINED_FUNCTION_8_10();
              v50 = OUTLINED_FUNCTION_9_66(v49, sel_constraintEqualToAnchor_);
              OUTLINED_FUNCTION_4_39();

              v52 = OUTLINED_FUNCTION_9(v51, sel_leadingAnchor);
              v53 = OUTLINED_FUNCTION_123((uint64_t)v52, sel_view);
              if (v53)
              {
                v54 = objc_msgSend(v53, sel_safeAreaLayoutGuide);
                OUTLINED_FUNCTION_8_10();
                v56 = OUTLINED_FUNCTION_39(v55, sel_leadingAnchor);
                OUTLINED_FUNCTION_40_1();
                v57 = objc_msgSend(v52, sel_constraintEqualToAnchor_constant_, &selRef_associatedAppBundleIdentifier, 16.0);
                OUTLINED_FUNCTION_10_20();

                v58 = objc_msgSend(v41, sel_trailingAnchor);
                v59 = (unint64_t)v58;
                if (v38 == (id)7)
                {
                  v60 = OUTLINED_FUNCTION_123((uint64_t)v58, sel_view);
                  if (!v60)
                    goto LABEL_25;
                  v61 = v60;
                  v62 = objc_msgSend(v60, sel_safeAreaLayoutGuide);

                  v64 = OUTLINED_FUNCTION_20_4(v63, sel_trailingAnchor);
                }
                else
                {
                  v64 = OUTLINED_FUNCTION_20_4((uint64_t)v58, sel_leadingAnchor);
                }
                v65 = OUTLINED_FUNCTION_37_31();
                OUTLINED_FUNCTION_18_14();

                OUTLINED_FUNCTION_24_43();
                if (v66)
                {
                  OUTLINED_FUNCTION_14_19();
                  v67 = OUTLINED_FUNCTION_62_16();
                  OUTLINED_FUNCTION_27();
                }
                else
                {
                  v67 = *(_QWORD *)((v59 & 0xFFFFFFFFFFFFF8) + 0x10);
                }
                if (!__OFADD__(v67, 3))
                {
                  OUTLINED_FUNCTION_4_81(v67 + 3);
                  specialized Array._endMutation()();
                  v68 = v45;
                  OUTLINED_FUNCTION_40();
                }
LABEL_25:
                __break(1u);
                JUMPOUT(0x1BD21F020);
              }
LABEL_24:
              __break(1u);
              JUMPOUT(0x1BD21F2C8);
            }
LABEL_23:
            __break(1u);
            goto LABEL_24;
          }
LABEL_22:
          __break(1u);
          goto LABEL_23;
        }
LABEL_21:
        __break(1u);
        goto LABEL_22;
      }
LABEL_20:
      __break(1u);
      goto LABEL_21;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  goto LABEL_20;
}

void ConversationControlsShareCardViewController.updateSize()()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  id v3;
  id v4;
  double v5;
  double v6;
  double v7;
  double v8;
  id v9;
  double v10;
  double v11;
  id v12;
  double v13;
  double v14;
  double v15;
  id v16;
  double v17;
  double v18;
  void *v19;
  char *v20;
  void (*v21)(void *);
  objc_super v22;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = ConversationControlsShareCardViewController.scrollView.getter();
  v4 = ConversationControlsShareCardViewController.scrollViewContent.getter();
  objc_msgSend(v4, sel_systemLayoutSizeFittingSize_, 375.0, *(double *)(MEMORY[0x1E0DC4FF8] + 8));
  v6 = v5;
  v8 = v7;

  objc_msgSend(v3, sel_setContentSize_, v6, v8);
  v9 = ConversationControlsShareCardViewController.scrollView.getter();
  objc_msgSend(v9, sel_contentSize);
  v11 = v10;

  v12 = ConversationControlsShareCardViewController.scrollView.getter();
  objc_msgSend(v12, sel_frame);
  v14 = v13;

  v15 = v11 + v14;
  v22.receiver = v1;
  v22.super_class = ObjectType;
  if (objc_msgSendSuper2(&v22, sel_modalPresentationStyle) == (id)7)
  {
    v16 = ConversationControlsShareCardViewController.scrollView.getter();
    objc_msgSend(v16, sel_contentSize);
    v18 = v17;

    objc_msgSend(v1, sel_setPreferredContentSize_, v18, v15);
  }
  else
  {
    _sSo8NSObjectCMaTm_0(0, &lazy cache variable for type metadata for UISheetPresentationControllerDetent);
    *(double *)(swift_allocObject() + 16) = v15;
    v19 = (void *)static UISheetPresentationControllerDetent.custom(identifier:resolver:)();
    swift_release();
    v20 = &v1[OBJC_IVAR____TtC15ConversationKit43ConversationControlsShareCardViewController_updateSheetDetent];
    swift_beginAccess();
    v21 = *(void (**)(void *))v20;
    if (*(_QWORD *)v20)
    {
      swift_retain();
      v21(v19);
      outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v21);
    }

  }
}

void closure #1 in ConversationControlsShareCardViewController.viewDidLoad()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  void *v4;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = (void *)MEMORY[0x1C3B752C0](v2);
  if (v3)
  {
    v4 = v3;
    objc_msgSend(v3, sel_dismissViewControllerAnimated_completion_, 1, 0);

  }
}

void sub_1BD21F550()
{
  void *v0;

}

Swift::Void __swiftcall ConversationControlsShareCardViewController.viewDidDisappear(_:)(Swift::Bool a1)
{
  char *v1;
  char *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t ObjectType;
  objc_super v8;

  v8.receiver = v1;
  v8.super_class = (Class)OUTLINED_FUNCTION_15_6();
  objc_msgSendSuper2(&v8, sel_viewDidDisappear_, a1);
  v3 = &v1[OBJC_IVAR____TtC15ConversationKit43ConversationControlsShareCardViewController_delegate];
  OUTLINED_FUNCTION_2_0();
  v4 = MEMORY[0x1C3B752C0](v3);
  if (v4)
  {
    v5 = (void *)v4;
    v6 = *((_QWORD *)v3 + 1);
    ObjectType = swift_getObjectType();
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 8))(v1, ObjectType, v6);

  }
}

void ConversationControlsShareCardViewController.modalPresentationStyle.setter(uint64_t a1)
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)OUTLINED_FUNCTION_15_6();
  objc_msgSendSuper2(&v3, sel_setModalPresentationStyle_, a1);
  ConversationControlsShareCardViewController.modalPresentationStyle.didset();
  OUTLINED_FUNCTION_36();
}

void ConversationControlsShareCardViewController.modalPresentationStyle.didset()
{
  void *v0;
  _BOOL8 v1;
  void *v2;
  void *v3;
  objc_super v4;

  v4.receiver = v0;
  v4.super_class = (Class)OUTLINED_FUNCTION_15_6();
  v1 = objc_msgSendSuper2(&v4, sel_modalPresentationStyle) == (id)7;
  CallControlsFullScreenStatusView.textContainer.getter(&OBJC_IVAR____TtC15ConversationKit43ConversationControlsShareCardViewController____lazy_storage___closeButton, (uint64_t (*)(uint64_t))closure #1 in ConversationControlsShareCardViewController.closeButton.getter);
  v3 = v2;
  objc_msgSend(v2, sel_setHidden_, v1);

  OUTLINED_FUNCTION_36();
}

void ConversationControlsShareCardViewController.modalPresentationStyle.modify(objc_super **a1)
{
  objc_class *v1;
  objc_super *v3;
  uint64_t v4;

  v3 = (objc_super *)malloc(0x48uLL);
  *a1 = v3;
  v3[3].super_class = v1;
  v4 = OUTLINED_FUNCTION_15_6();
  v3[4].receiver = (id)v4;
  v3->receiver = v1;
  v3->super_class = (Class)v4;
  v3[3].receiver = -[objc_super modalPresentationStyle](v3, sel_modalPresentationStyle);
  OUTLINED_FUNCTION_18();
}

void ConversationControlsShareCardViewController.modalPresentationStyle.modify(objc_super **a1, char a2)
{
  objc_super *v2;
  id receiver;
  objc_class *v4;
  Class super_class;
  objc_super *v6;

  v2 = *a1;
  receiver = (*a1)[3].receiver;
  super_class = (*a1)[3].super_class;
  v4 = (objc_class *)(*a1)[4].receiver;
  v6 = *a1;
  if ((a2 & 1) != 0)
  {
    v6[1].receiver = super_class;
    v6[1].super_class = v4;
    objc_msgSendSuper2(v6 + 1, sel_setModalPresentationStyle_, receiver);
  }
  else
  {
    v6[2].receiver = super_class;
    v6[2].super_class = v4;
    objc_msgSendSuper2(v6 + 2, sel_setModalPresentationStyle_, receiver);
    ConversationControlsShareCardViewController.modalPresentationStyle.didset();
  }
  free(v2);
}

Swift::Void __swiftcall ConversationControlsShareCardViewController.viewDidLayoutSubviews()()
{
  void *v0;
  objc_super v1;

  v1.receiver = v0;
  v1.super_class = (Class)OUTLINED_FUNCTION_15_6();
  objc_msgSendSuper2(&v1, sel_viewDidLayoutSubviews);
  ConversationControlsShareCardViewController.updateSize()();
}

id ConversationControlsShareCardViewController.didTapCloseButton()()
{
  void *v0;
  void *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;

  v1 = v0;
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v2 = type metadata accessor for Logger();
  __swift_project_value_buffer(v2, (uint64_t)&static Logger.conversationControls);
  v3 = Logger.logObject.getter();
  v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_1BD004000, v3, v4, "Did tap share card close button", v5, 2u);
    MEMORY[0x1C3B751B8](v5, -1, -1);
  }

  return objc_msgSend(v1, sel_dismissViewControllerAnimated_completion_, 1, 0);
}

void ConversationControlsShareCardViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;

  v4 = v3;
  if (a2)
  {
    v6 = (void *)MEMORY[0x1C3B72E00]();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  OUTLINED_FUNCTION_18();
}

void ConversationControlsShareCardViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id ConversationControlsShareCardViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)OUTLINED_FUNCTION_15_6();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id specialized UIHostingAutoResizableController.init(rootView:canShowWhileLocked:)(void *a1, uint64_t a2, void *a3, uint64_t a4, char a5)
{
  _QWORD *v5;
  uint64_t v9;
  _QWORD *v10;
  char *v11;
  id v12;
  id v13;
  void *v14;
  id v15;

  v9 = type metadata accessor for UIHostingControllerSizingOptions();
  MEMORY[0x1E0C80A78](v9);
  v10 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v11 = (char *)v5
      + *(_QWORD *)(class metadata base offset for UIHostingAutoResizableController + (*MEMORY[0x1E0DEEDD8] & *v5) + 16);
  *(_QWORD *)v11 = 0;
  *((_QWORD *)v11 + 1) = 0;
  v11[16] = 1;
  *((_BYTE *)v5 + *(_QWORD *)(class metadata base offset for UIHostingAutoResizableController + (*v10 & *v5) + 24)) = a5;
  swift_retain();
  v12 = a1;
  v13 = a3;
  v14 = (void *)UIHostingController.init(rootView:)();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UIHostingControllerSizingOptions>);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BD645380;
  v15 = v14;
  static UIHostingControllerSizingOptions.intrinsicContentSize.getter();
  static UIHostingControllerSizingOptions.preferredContentSize.getter();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UIHostingControllerSizingOptions and conformance UIHostingControllerSizingOptions, (void (*)(uint64_t))MEMORY[0x1E0CDD0B0]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [UIHostingControllerSizingOptions]);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type [UIHostingControllerSizingOptions] and conformance [A], &demangling cache variable for type metadata for [UIHostingControllerSizingOptions]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  dispatch thunk of UIHostingController.sizingOptions.setter();
  swift_release();

  return v15;
}

id specialized UIHostingAutoResizableController.init(rootView:canShowWhileLocked:)(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v5;
  void (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  char *v11;
  void *v12;
  uint64_t v13;
  id v14;
  _QWORD v16[2];

  v5 = type metadata accessor for UIHostingControllerSizingOptions();
  v6 = (void (*)(uint64_t))MEMORY[0x1E0CDD0B0];
  MEMORY[0x1E0C80A78](v5);
  v7 = type metadata accessor for ShareCardControlsView(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v11 = (char *)v2
      + *(_QWORD *)(class metadata base offset for UIHostingAutoResizableController + (*MEMORY[0x1E0DEEDD8] & *v2) + 16);
  *(_QWORD *)v11 = 0;
  *((_QWORD *)v11 + 1) = 0;
  v11[16] = 1;
  *((_BYTE *)v2 + *(_QWORD *)(class metadata base offset for UIHostingAutoResizableController + (*v10 & *v2) + 24)) = a2;
  outlined init with copy of ShareCardControlsView(a1, (uint64_t)v9);
  v12 = (void *)UIHostingController.init(rootView:)();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UIHostingControllerSizingOptions>);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1BD645380;
  v14 = v12;
  static UIHostingControllerSizingOptions.intrinsicContentSize.getter();
  static UIHostingControllerSizingOptions.preferredContentSize.getter();
  v16[1] = v13;
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UIHostingControllerSizingOptions and conformance UIHostingControllerSizingOptions, v6);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [UIHostingControllerSizingOptions]);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type [UIHostingControllerSizingOptions] and conformance [A], &demangling cache variable for type metadata for [UIHostingControllerSizingOptions]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  dispatch thunk of UIHostingController.sizingOptions.setter();

  outlined destroy of ShareCardControlsView(a1);
  return v14;
}

uint64_t sub_1BD22001C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void partial apply for closure #1 in ConversationControlsShareCardViewController.viewDidLoad()(uint64_t a1)
{
  uint64_t v1;

  closure #1 in ConversationControlsShareCardViewController.viewDidLoad()(a1, v1);
}

uint64_t dispatch thunk of ConversationControlsShareCardViewControllerDelegate.shareCardViewControllerDidDismiss(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t type metadata accessor for ConversationControlsShareCardViewController()
{
  return objc_opt_self();
}

uint64_t method lookup function for ConversationControlsShareCardViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ConversationControlsShareCardViewController.__allocating_init(conversationControlsManager:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t outlined destroy of Activity?(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Activity?);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t lazy protocol witness table accessor for type TUConversationParticipant and conformance NSObject()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type TUConversationParticipant and conformance NSObject;
  if (!lazy protocol witness table cache variable for type TUConversationParticipant and conformance NSObject)
  {
    v1 = _sSo8NSObjectCMaTm_0(255, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type TUConversationParticipant and conformance NSObject);
  }
  return result;
}

uint64_t sub_1BD220124()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BD220148()
{
  return swift_deallocObject();
}

double partial apply for closure #1 in ConversationControlsShareCardViewController.updateSize()(void *a1)
{
  uint64_t v1;
  double v2;
  double result;

  v2 = *(double *)(v1 + 16);
  objc_msgSend(a1, sel_maximumDetentValue);
  if (result >= v2)
    return v2;
  return result;
}

void partial apply for closure #1 in closure #1 in ConversationControlsShareCardViewController.controlsView.getter()
{
  uint64_t v0;

  closure #1 in closure #1 in ConversationControlsShareCardViewController.controlsView.getter(v0, ConversationControlsShareCardViewController.didTapScreenShareButton());
}

void partial apply for closure #2 in closure #1 in ConversationControlsShareCardViewController.controlsView.getter(NSObject *a1)
{
  uint64_t v1;

  closure #2 in closure #1 in ConversationControlsShareCardViewController.controlsView.getter(a1, v1);
}

void partial apply for closure #3 in closure #1 in ConversationControlsShareCardViewController.controlsView.getter()
{
  uint64_t v0;

  closure #1 in closure #1 in ConversationControlsShareCardViewController.controlsView.getter(v0, ConversationControlsShareCardViewController.didTapCollaborateButton());
}

void partial apply for closure #4 in closure #1 in ConversationControlsShareCardViewController.controlsView.getter()
{
  uint64_t v0;

  closure #1 in closure #1 in ConversationControlsShareCardViewController.controlsView.getter(v0, (void (*)(void))ConversationControlsShareCardViewController.didTapEndSharePlay());
}

uint64_t outlined init with copy of ShareCardControlsView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ShareCardControlsView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of ShareCardControlsView(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ShareCardControlsView(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void OUTLINED_FUNCTION_39_37()
{
  JUMPOUT(0x1C3B7301CLL);
}

uint64_t specialized StateHolder.state.getter()
{
  uint64_t v0;

  swift_getKeyPath();
  OUTLINED_FUNCTION_19_50();
  lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type StateHolder<Bool> and conformance StateHolder<A>, &demangling cache variable for type metadata for StateHolder<Bool>, (uint64_t)&protocol conformance descriptor for StateHolder<A>);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_2_0();
  return *(unsigned __int8 *)(v0 + 16);
}

{
  uint64_t v0;
  int v1;

  swift_getKeyPath();
  OUTLINED_FUNCTION_19_50();
  lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type StateHolder<ShareMenuActionState> and conformance StateHolder<A>, &demangling cache variable for type metadata for StateHolder<ShareMenuActionState>, (uint64_t)&protocol conformance descriptor for StateHolder<A>);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_2_0();
  if (*(_BYTE *)(v0 + 17))
    v1 = 256;
  else
    v1 = 0;
  return v1 | *(unsigned __int8 *)(v0 + 16);
}

uint64_t specialized StateHolder.state.setter()
{
  uint64_t KeyPath;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_21_47(KeyPath, (uint64_t)partial apply for specialized closure #1 in StateHolder.state.setter, v1, &lazy protocol witness table cache variable for type StateHolder<Bool> and conformance StateHolder<A>, &demangling cache variable for type metadata for StateHolder<Bool>, v2, v3, v4, v6);
  return swift_release();
}

{
  uint64_t KeyPath;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_21_47(KeyPath, (uint64_t)partial apply for specialized closure #1 in StateHolder.state.setter, v1, &lazy protocol witness table cache variable for type StateHolder<ShareMenuActionState> and conformance StateHolder<A>, &demangling cache variable for type metadata for StateHolder<ShareMenuActionState>, v2, v3, v4, v6);
  return swift_release();
}

uint64_t specialized closure #1 in StateHolder.state.setter(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_beginAccess();
  *(_BYTE *)(a1 + 16) = a2;
  return result;
}

uint64_t specialized closure #1 in StateHolder.state.setter(uint64_t a1, __int16 a2, uint64_t a3, __int16 a4)
{
  uint64_t result;

  result = swift_beginAccess();
  *(_BYTE *)(a1 + 16) = a2 & 1;
  *(_BYTE *)(a1 + 17) = HIBYTE(a2) & 1;
  *(_QWORD *)(a1 + 24) = a3;
  *(_BYTE *)(a1 + 32) = a4 & 1;
  *(_BYTE *)(a1 + 33) = HIBYTE(a4) & 1;
  return result;
}

uint64_t specialized StateHolder.withMutation<A, B>(keyPath:_:)(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t *a5)
{
  lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(a4, a5, (uint64_t)&protocol conformance descriptor for StateHolder<A>);
  return ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
}

uint64_t VideoButtonViewModel.__allocating_init(service:)(__int128 *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  VideoButtonViewModel.init(service:)(a1);
  return v2;
}

uint64_t specialized thunk for @escaping @callee_guaranteed (@unowned Bool) -> (@owned Color)(char *a1)
{
  return closure #1 in default argument 1 of static SystemSymbol<A>.catalystCallControl(name:color:backgroundColor:)(*a1);
}

{
  return closure #1 in default argument 2 of static SystemSymbol<A>.catalystCallControl(name:color:backgroundColor:)(*a1);
}

{
  return closure #1 in AudioMuteButtonViewModel.config.getter(*a1);
}

uint64_t VideoButtonViewModel.init(service:)(__int128 *a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 56) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v1 + 64) = 0;
  outlined init with take of Notice(a1, v1 + 16);
  return v1;
}

uint64_t VideoButtonViewModel.controlType.getter()
{
  return VideoButtonViewModel.config.getter();
}

uint64_t VideoButtonViewModel.config.getter()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  objc_class *v11;
  NSBundle v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  objc_class *v20;
  NSBundle v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t);
  uint64_t v39;
  uint64_t (*v40)(char *);
  uint64_t v41;
  uint64_t (*v42)(char *);
  uint64_t v43;
  uint64_t (*v44)@<X0>(uint64_t@<X8>);
  uint64_t v45;
  uint64_t (*v46)(_QWORD, _QWORD, _QWORD);
  uint64_t v47;
  uint64_t (*v48)(_QWORD, _QWORD, _QWORD);
  uint64_t v49;

  v1 = v0;
  v2 = type metadata accessor for Font.Leading();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v1[8])
  {
    v6 = v1[8];
  }
  else
  {
    swift_bridgeObjectRelease();
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = 0x69662E6F65646976;
    *(_QWORD *)(v7 + 24) = 0xEA00000000006C6CLL;
    v8 = static Color.white.getter();
    static Font.subheadline.getter();
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0CDD6D8], v2);
    v9 = Font.leading(_:)();
    OUTLINED_FUNCTION_27_0();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    v34 = xmmword_1BD6456D0;
    v35 = 0x401C000000000000;
    v36 = v8;
    v37 = v9;
    v38 = _s15ConversationKit12SystemSymbolVAASbRszlE19catalystCallControl4name5color15backgroundColorACySbGSS_7SwiftUI0K0VSbcAKSbctFZSSSbcfU_TA_0;
    v39 = v7;
    v40 = specialized thunk for @escaping @callee_guaranteed (@unowned Bool) -> (@owned Color);
    v41 = 0;
    v42 = specialized thunk for @escaping @callee_guaranteed (@unowned Bool) -> (@owned Color);
    v43 = 0;
    v44 = closure #1 in static SystemSymbol.catalystCallControl(name:color:backgroundColor:);
    v45 = 0;
    v46 = partial apply for closure #2 in static SystemSymbol.catalystCallControl(name:color:backgroundColor:);
    v47 = 0;
    v48 = partial apply for closure #3 in static SystemSymbol.catalystCallControl(name:color:backgroundColor:);
    v49 = 0;
    v10 = (void *)objc_opt_self();
    v11 = (objc_class *)objc_msgSend(v10, sel_conversationKit);
    OUTLINED_FUNCTION_2_15();
    v12.super.isa = v11;
    v17 = OUTLINED_FUNCTION_49_2(v13, v14, v15, v16, v12);
    v19 = v18;

    v20 = (objc_class *)objc_msgSend(v10, sel_conversationKit);
    OUTLINED_FUNCTION_2_15();
    v21.super.isa = v20;
    v26 = OUTLINED_FUNCTION_49_2(v22, v23, v24, v25, v21);
    v28 = v27;

    v29 = v1[5];
    v30 = v1[6];
    __swift_project_boxed_opaque_existential_1(v1 + 2, v29);
    LOBYTE(v29) = (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 208))(v29, v30);
    v31 = v1[5];
    v32 = v1[6];
    __swift_project_boxed_opaque_existential_1(v1 + 2, v31);
    LOBYTE(v20) = (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 192))(v31, v32);
    OUTLINED_FUNCTION_7_0();
    OUTLINED_FUNCTION_7_4();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IconButtonConfig<Bool>);
    swift_allocObject();
    v6 = specialized IconButtonConfig.init(buttonStyle:title:hasBadge:accessibilityLabel:accessibilityIdentifier:state:enabled:didTap:)((uint64_t)&v34, v17, v19, 0, v26, v28, 0xD000000000000011, 0x80000001BD6724B0, v29 & 1, v20 & 1);
    v1[8] = v6;
    swift_retain();
    OUTLINED_FUNCTION_11_0();
  }
  swift_retain();
  return v6;
}

BOOL VideoButtonViewModel.enabled(for:)(uint64_t a1)
{
  return (a1 & 0xE100000000) != 0x100000000;
}

Swift::Void __swiftcall VideoButtonViewModel.onAppear()()
{
  uint64_t v0;

  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v0 + 56) = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRelease();
  VideoButtonViewModel.observeLocalVideoSupportedState()();
  VideoButtonViewModel.observeVideoState()();
  VideoButtonViewModel.updateLabels()();
}

Swift::Void __swiftcall VideoButtonViewModel.observeLocalVideoSupportedState()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_0_7();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.ReceiveOn<AnyPublisher<Bool, Never>, NSRunLoop>);
  OUTLINED_FUNCTION_18_53();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_1_94();
  v6 = OUTLINED_FUNCTION_13_11(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 200));
  v4 = objc_msgSend((id)objc_opt_self(), sel_mainRunLoop, v6);
  v5 = OUTLINED_FUNCTION_22_48((uint64_t)v4);
  OUTLINED_FUNCTION_7_27(v5);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnyPublisher<Bool, Never>);
  OUTLINED_FUNCTION_20_0();
  lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type AnyPublisher<Bool, Never> and conformance AnyPublisher<A, B>, &demangling cache variable for type metadata for AnyPublisher<Bool, Never>, MEMORY[0x1E0C95D90]);
  lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop();
  OUTLINED_FUNCTION_0_22();
  outlined destroy of NSRunLoop.SchedulerOptions?(v0);

  swift_release();
  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_7_4();
  lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type Publishers.ReceiveOn<AnyPublisher<Bool, Never>, NSRunLoop> and conformance Publishers.ReceiveOn<A, B>, &demangling cache variable for type metadata for Publishers.ReceiveOn<AnyPublisher<Bool, Never>, NSRunLoop>, MEMORY[0x1E0C95CB8]);
  OUTLINED_FUNCTION_16_57();
  OUTLINED_FUNCTION_27_0();
  OUTLINED_FUNCTION_10_6();
  OUTLINED_FUNCTION_4_82();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [AnyCancellable]);
  lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(lazy protocol witness table cache variable for type [AnyCancellable] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [AnyCancellable], MEMORY[0x1E0DEAF58]);
  OUTLINED_FUNCTION_12_65();
  swift_endAccess();
  swift_release();
  OUTLINED_FUNCTION_52_1();
}

Swift::Void __swiftcall VideoButtonViewModel.observeVideoState()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_0_7();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.ReceiveOn<AnyPublisher<Bool, Never>, NSRunLoop>);
  OUTLINED_FUNCTION_18_53();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_1_94();
  v6 = OUTLINED_FUNCTION_13_11(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 216));
  v4 = objc_msgSend((id)objc_opt_self(), sel_mainRunLoop, v6);
  v5 = OUTLINED_FUNCTION_22_48((uint64_t)v4);
  OUTLINED_FUNCTION_7_27(v5);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnyPublisher<Bool, Never>);
  OUTLINED_FUNCTION_20_0();
  lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type AnyPublisher<Bool, Never> and conformance AnyPublisher<A, B>, &demangling cache variable for type metadata for AnyPublisher<Bool, Never>, MEMORY[0x1E0C95D90]);
  lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop();
  OUTLINED_FUNCTION_0_22();
  outlined destroy of NSRunLoop.SchedulerOptions?(v0);

  swift_release();
  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_7_4();
  lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type Publishers.ReceiveOn<AnyPublisher<Bool, Never>, NSRunLoop> and conformance Publishers.ReceiveOn<A, B>, &demangling cache variable for type metadata for Publishers.ReceiveOn<AnyPublisher<Bool, Never>, NSRunLoop>, MEMORY[0x1E0C95CB8]);
  OUTLINED_FUNCTION_16_57();
  OUTLINED_FUNCTION_27_0();
  OUTLINED_FUNCTION_10_6();
  OUTLINED_FUNCTION_4_82();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [AnyCancellable]);
  lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(lazy protocol witness table cache variable for type [AnyCancellable] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [AnyCancellable], MEMORY[0x1E0DEAF58]);
  OUTLINED_FUNCTION_12_65();
  swift_endAccess();
  swift_release();
  OUTLINED_FUNCTION_52_1();
}

uint64_t VideoButtonViewModel.updateLabels()()
{
  char v0;
  uint64_t v1;
  id v2;
  unint64_t v3;
  unint64_t v4;
  Swift::String_optional v5;
  Swift::String v6;
  uint64_t v7;
  Swift::String v8;
  unint64_t v10;

  ((void (*)(void))VideoButtonViewModel.config.getter)();
  v0 = specialized StateHolder.state.getter();
  v1 = swift_release();
  VideoButtonViewModel.config.getter(v1);
  v2 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  if ((v0 & 1) != 0)
  {
    v3 = 0xD000000000000014;
    v10 = 0xE000000000000000;
    v4 = 0x80000001BD67D3A0;
  }
  else
  {
    v10 = 0xE000000000000000;
    v4 = 0x80000001BD67D3F0;
    v3 = 0xD000000000000013;
  }
  v5.value._countAndFlagsBits = 0x61737265766E6F43;
  v5.value._object = (void *)0xEF74694B6E6F6974;
  v6._countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  v7 = 0;
  v8 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v3, v5, (NSBundle)v2, v6, *(Swift::String *)(&v10 - 1));

  specialized IconButtonConfig.accessibilityLabel.setter(v8._countAndFlagsBits, (uint64_t)v8._object);
  return swift_release();
}

Swift::Void __swiftcall VideoButtonViewModel.didTap()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  char v3;

  VideoButtonViewModel.config.getter();
  specialized StateHolder.state.getter();
  specialized StateHolder.state.setter();
  OUTLINED_FUNCTION_11_0();
  v1 = v0[5];
  v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  VideoButtonViewModel.config.getter();
  v3 = specialized StateHolder.state.getter();
  OUTLINED_FUNCTION_27_0();
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v2 + 224))(v3 & 1, v1, v2);
  VideoButtonViewModel.updateLabels()();
}

uint64_t closure #1 in VideoButtonViewModel.observeLocalVideoSupportedState()(unsigned __int8 *a1)
{
  int v1;
  uint64_t result;
  int v3;

  v1 = *a1;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    VideoButtonViewModel.config.getter();
    v3 = specialized IconButtonConfig.enabled.getter() & 1;
    swift_release();
    if (v1 != v3)
    {
      VideoButtonViewModel.config.getter();
      specialized IconButtonConfig.enabled.setter(v1);
      swift_release();
    }
    return swift_release();
  }
  return result;
}

uint64_t specialized IconButtonConfig.enabled.getter()
{
  uint64_t v0;

  swift_getKeyPath();
  lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type IconButtonConfig<Bool> and conformance IconButtonConfig<A>, &demangling cache variable for type metadata for IconButtonConfig<Bool>, (uint64_t)&protocol conformance descriptor for IconButtonConfig<A>);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 168);
}

uint64_t closure #1 in VideoButtonViewModel.observeVideoState()(unsigned __int8 *a1)
{
  int v1;
  uint64_t result;
  int v3;

  v1 = *a1;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    VideoButtonViewModel.config.getter();
    v3 = specialized StateHolder.state.getter() & 1;
    swift_release();
    if (v1 != v3)
    {
      VideoButtonViewModel.config.getter();
      specialized StateHolder.state.setter();
      swift_release();
      VideoButtonViewModel.updateLabels()();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1BD22112C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t _s15ConversationKit12SystemSymbolVAASbRszlE19catalystCallControl4name5color15backgroundColorACySbGSS_7SwiftUI0K0VSbcAKSbctFZSSSbcfU_TA_0(uint64_t a1)
{
  uint64_t v1;

  return closure #1 in static SystemSymbol<A>.catalystCallControl(name:color:backgroundColor:)(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BD221158()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t closure #1 in VideoButtonViewModel.config.getter()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    VideoButtonViewModel.didTap()();
    return swift_release();
  }
  return result;
}

uint64_t partial apply for closure #1 in VideoButtonViewModel.config.getter()
{
  return closure #1 in VideoButtonViewModel.config.getter();
}

uint64_t VideoButtonViewModel.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t VideoButtonViewModel.__deallocating_deinit()
{
  VideoButtonViewModel.deinit();
  return swift_deallocClassInstance();
}

BOOL protocol witness for CallControlsInCallButtonViewModel.enabled(for:) in conformance VideoButtonViewModel(uint64_t a1)
{
  return VideoButtonViewModel.enabled(for:)(a1 & 0xFFFFFFFFFFLL);
}

uint64_t protocol witness for CallControlsButtonViewModel.controlType.getter in conformance VideoButtonViewModel()
{
  return VideoButtonViewModel.controlType.getter();
}

void protocol witness for CallControlsButtonViewModel.onAppear() in conformance VideoButtonViewModel()
{
  VideoButtonViewModel.onAppear()();
}

uint64_t partial apply for closure #1 in VideoButtonViewModel.observeLocalVideoSupportedState()(unsigned __int8 *a1)
{
  return closure #1 in VideoButtonViewModel.observeLocalVideoSupportedState()(a1);
}

uint64_t partial apply for closure #1 in VideoButtonViewModel.observeVideoState()(unsigned __int8 *a1)
{
  return closure #1 in VideoButtonViewModel.observeVideoState()(a1);
}

uint64_t sub_1BD22129C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = VideoButtonViewModel.config.getter();
  *a1 = result;
  return result;
}

uint64_t type metadata accessor for VideoButtonViewModel()
{
  return objc_opt_self();
}

uint64_t method lookup function for VideoButtonViewModel()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of VideoButtonViewModel.__allocating_init(service:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

_QWORD *sub_1BD221308(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t specialized closure #1 in StateHolder.state.setter(uint64_t a1, char *a2)
{
  return specialized closure #1 in StateHolder.state.setter(a1, *a2);
}

uint64_t specialized closure #1 in StateHolder.state.setter(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v2;
  __int16 v3;
  int v4;
  __int16 v5;
  __int16 v6;
  __int16 v7;

  v2 = *((_QWORD *)a2 + 1);
  v3 = a2[16];
  v4 = a2[17];
  if (a2[1])
    v5 = 256;
  else
    v5 = 0;
  v6 = v5 | *a2;
  if (v4)
    v7 = 256;
  else
    v7 = 0;
  return specialized closure #1 in StateHolder.state.setter(a1, v6, v2, v7 | v3);
}

uint64_t partial apply for specialized closure #1 in StateHolder.state.setter()
{
  uint64_t v0;

  return specialized closure #1 in StateHolder.state.setter(*(_QWORD *)(v0 + 16), *(unsigned __int8 **)(v0 + 24));
}

{
  uint64_t v0;

  return specialized closure #1 in StateHolder.state.setter(*(_QWORD *)(v0 + 16), *(char **)(v0 + 24));
}

uint64_t specialized CKStateMachine.currentState.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;

  v3 = (uint64_t *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 104));
  OUTLINED_FUNCTION_1();
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  v10 = v3[6];
  result = outlined copy of CallScreening.State(v4, v5, v6, v7, v8, v9, v10);
  *a1 = v4;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  a1[6] = v10;
  return result;
}

uint64_t CKStateMachine<>.update(with:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[15] = a1;
  v2[16] = v1;
  if (one-time initialization token for shared != -1)
    swift_once();
  v2[17] = static CKStateMachineActor.shared;
  return OUTLINED_FUNCTION_4_4();
}

uint64_t CKStateMachine<>.update(with:)()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  __int128 *v13;
  _QWORD *v14;
  os_log_type_t type;
  uint64_t v17;

  v1 = v0[15];
  v0[18] = direct field offset for CKStateMachine.logger;
  OUTLINED_FUNCTION_11_8();
  outlined retain of AnsweringMachineCallStatus(v1);
  OUTLINED_FUNCTION_11_8();
  outlined retain of AnsweringMachineCallStatus(v1);
  v2 = Logger.logObject.getter();
  v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    type = v3;
    v4 = v0[15];
    v5 = OUTLINED_FUNCTION_105();
    v17 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v5 = 136446466;
    swift_retain();
    v6 = specialized CKStateMachine.description.getter();
    v8 = v7;
    swift_release();
    v0[13] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v6, v8, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_13_66();
    *(_WORD *)(v5 + 12) = 2082;
    outlined retain of AnsweringMachineCallStatus(v4);
    v9 = AnsweringMachineCallStatus.description.getter();
    v11 = v10;
    OUTLINED_FUNCTION_11_66();
    v0[14] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v9, v11, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_11_66();
    OUTLINED_FUNCTION_11_66();
    _os_log_impl(&dword_1BD004000, v2, type, "Updating %{public}s with callupdate %{public}s", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_60();
  }
  v12 = v0[15];

  OUTLINED_FUNCTION_13_66();
  outlined release of AnsweringMachineCallStatus(v12);
  outlined release of AnsweringMachineCallStatus(v12);
  v13 = (__int128 *)(v0[16] + *(_QWORD *)(*(_QWORD *)v0[16] + 104));
  OUTLINED_FUNCTION_1();
  outlined init with take of CallScreening.State(v13, (uint64_t)(v0 + 2));
  outlined retain of CallScreening.State(v0 + 2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined copy of CallScreening.State);
  v14 = (_QWORD *)swift_task_alloc();
  v0[19] = v14;
  *v14 = v0;
  v14[1] = CKStateMachine<>.update(with:);
  return CallScreening.State.update(with:)(v0[15]);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 160) = v0;
  swift_task_dealloc();
  if (v0)
    return OUTLINED_FUNCTION_2_8();
  outlined retain of CallScreening.State((_QWORD *)(v2 + 16), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined consume of CallScreening.State);
  return OUTLINED_FUNCTION_1_8(*(uint64_t (**)(void))(v2 + 8));
}

{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  _QWORD *v4;
  uint64_t v5;

  outlined retain of CallScreening.State((_QWORD *)(v0 + 16), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined consume of CallScreening.State);
  OUTLINED_FUNCTION_15_63();
  OUTLINED_FUNCTION_15_63();
  v1 = Logger.logObject.getter();
  v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)OUTLINED_FUNCTION_105();
    v4 = (_QWORD *)OUTLINED_FUNCTION_105();
    *(_DWORD *)v3 = 138543362;
    OUTLINED_FUNCTION_15_63();
    v5 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 96) = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *v4 = v5;
    OUTLINED_FUNCTION_19_2();
    OUTLINED_FUNCTION_19_2();
    _os_log_impl(&dword_1BD004000, v1, v2, "Failed to update callStatus with error: %{public}@", v3, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_60();
  }
  OUTLINED_FUNCTION_19_2();

  OUTLINED_FUNCTION_19_2();
  OUTLINED_FUNCTION_19_2();
  return OUTLINED_FUNCTION_1_8(*(uint64_t (**)(void))(v0 + 8));
}

unint64_t specialized CKStateMachine.description.getter()
{
  uint64_t v0;
  Swift::String v1;
  Swift::String v2;
  __int128 *v3;
  Swift::String v4;
  Swift::String v5;
  _QWORD v7[7];

  v7[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(40);
  swift_bridgeObjectRelease();
  v7[0] = v0;
  v1._countAndFlagsBits = _Pointer.debugDescription.getter();
  String.append(_:)(v1);
  swift_bridgeObjectRelease();
  v2._object = (void *)0x80000001BD67D490;
  v2._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v2);
  v3 = (__int128 *)(v7[0] + *(_QWORD *)(*(_QWORD *)v7[0] + 104));
  OUTLINED_FUNCTION_1();
  outlined init with take of CallScreening.State(v3, (uint64_t)v7);
  outlined retain of CallScreening.State(v7, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined copy of CallScreening.State);
  CallScreening.State.description.getter();
  String.append(_:)(v4);
  swift_bridgeObjectRelease();
  outlined retain of CallScreening.State(v7, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined consume of CallScreening.State);
  v5._countAndFlagsBits = 41;
  v5._object = (void *)0xE100000000000000;
  String.append(_:)(v5);
  return 0xD000000000000016;
}

uint64_t CallScreening.State.update(with:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[29] = a1;
  v2[30] = v1;
  if (one-time initialization token for shared != -1)
    swift_once();
  v2[31] = static CKStateMachineActor.shared;
  return OUTLINED_FUNCTION_4_4();
}

void CallScreening.State.update(with:)()
{
  uint64_t v0;

  outlined init with take of CallScreening.State(*(__int128 **)(v0 + 240), v0 + 16);
  __asm { BR              X11 }
}

uint64_t sub_1BD221ACC@<X0>(uint64_t x8_0@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  Swift::String v4;
  Swift::String v6;
  Swift::String v7;
  Swift::String v8;

  *(_QWORD *)(v1 + 64) = x8_0 & 0x1FFFFFFFFFFFFFFFLL;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CKStateMachine<CallScreening.State>.Error);
  lazy protocol witness table accessor for type CKStateMachine<CallScreening.State>.Error and conformance CKStateMachine<A>.Error();
  swift_allocError();
  v3 = v2;
  _StringGuts.grow(_:)(79);
  v6._countAndFlagsBits = 0xD000000000000036;
  v6._object = (void *)0x80000001BD67D410;
  OUTLINED_FUNCTION_22_2(v6);
  v7._countAndFlagsBits = AnsweringMachineCallStatus.description.getter();
  OUTLINED_FUNCTION_22_2(v7);
  swift_bridgeObjectRelease();
  v4._object = (void *)0x80000001BD67D450;
  v4._countAndFlagsBits = 0xD000000000000015;
  String.append(_:)(v4);
  CallScreening.State.description.getter();
  OUTLINED_FUNCTION_22_2(v8);
  swift_bridgeObjectRelease();
  *(_QWORD *)v3 = 0;
  *(_QWORD *)(v3 + 8) = 0xE000000000000000;
  *(_BYTE *)(v3 + 73) = 0;
  swift_willThrow();
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1BD221BD0@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v8;
  char *v9;

  OUTLINED_FUNCTION_5_81(a1);
  v2 = v1[2];
  v3 = v1[3];
  v4 = v1[4];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CallScreeningListeningState<CKStateMachine<CallScreening.State>>);
  v1[18] = v5;
  v1[19] = &protocol witness table for CallScreeningListeningState<A>;
  v1[15] = v2;
  v1[16] = v3;
  v1[17] = v4;
  swift_retain();
  OUTLINED_FUNCTION_11_8();
  __swift_project_boxed_opaque_existential_1(v8, v5);
  v9 = (char *)&async function pointer to protocol witness for UpdatesWithCallStatus.update(with:) in conformance CallScreeningListeningState<A>
     + async function pointer to protocol witness for UpdatesWithCallStatus.update(with:) in conformance CallScreeningListeningState<A>;
  v6 = (_QWORD *)swift_task_alloc();
  v1[32] = v6;
  *v6 = v1;
  v6[1] = CallScreening.State.update(with:);
  return ((uint64_t (*)(_QWORD, uint64_t, _UNKNOWN **))v9)(v1[29], v5, &protocol witness table for CallScreeningListeningState<A>);
}

uint64_t CallScreening.State.update(with:)()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 264) = v0;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_2_8();
}

{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 120);
  return OUTLINED_FUNCTION_16(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 120);
  return OUTLINED_FUNCTION_16(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t protocol witness for UpdatesWithCallStatus.update(with:) in conformance <> CKStateMachine<A>(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = partial apply for closure #1 in AsyncCancellableTimer.wait(with:);
  return CKStateMachine<>.update(with:)(a1);
}

uint64_t protocol witness for UpdatesWithCallStatus.update(with:) in conformance CallScreening.State(uint64_t a1)
{
  __int128 *v1;
  uint64_t v2;
  _QWORD *v4;

  outlined init with take of CallScreening.State(v1, v2 + 16);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 72) = v4;
  *v4 = v2;
  v4[1] = protocol witness for UpdatesWithCallStatus.update(with:) in conformance CallScreening.State;
  return CallScreening.State.update(with:)(a1);
}

uint64_t protocol witness for UpdatesWithCallStatus.update(with:) in conformance CallScreening.State()
{
  uint64_t v0;

  OUTLINED_FUNCTION_1_95();
  return OUTLINED_FUNCTION_16(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1BD221FD0()
{
  uint64_t v0;

  outlined consume of CallScreening.EndingAction(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32));
  swift_release();
  OUTLINED_FUNCTION_32_5();
  return swift_deallocObject();
}

uint64_t sub_1BD222004()
{
  swift_bridgeObjectRelease();
  swift_release();
  OUTLINED_FUNCTION_32_5();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BD22203C()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BD222070()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  OUTLINED_FUNCTION_32_5();
  return swift_deallocObject();
}

unint64_t lazy protocol witness table accessor for type CKStateMachine<CallScreening.State>.Error and conformance CKStateMachine<A>.Error()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type CKStateMachine<CallScreening.State>.Error and conformance CKStateMachine<A>.Error;
  if (!lazy protocol witness table cache variable for type CKStateMachine<CallScreening.State>.Error and conformance CKStateMachine<A>.Error)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for CKStateMachine<CallScreening.State>.Error);
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for CKStateMachine<A>.Error, v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type CKStateMachine<CallScreening.State>.Error and conformance CKStateMachine<A>.Error);
  }
  return result;
}

uint64_t dispatch thunk of UpdatesWithCallStatus.update(with:)(__int128 *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  char v9;
  char v10;
  uint64_t v11;
  char v12;
  _QWORD *v13;
  __int128 v15;
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t);

  v15 = *a1;
  v5 = *((_QWORD *)a1 + 2);
  v6 = *((_QWORD *)a1 + 3);
  v7 = *((_BYTE *)a1 + 32);
  v8 = *((_BYTE *)a1 + 33);
  v9 = *((_BYTE *)a1 + 34);
  v10 = *((_BYTE *)a1 + 35);
  v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 8) + *(_QWORD *)(a3 + 8));
  v11 = *((_QWORD *)a1 + 5);
  v12 = *((_BYTE *)a1 + 48);
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 72) = v13;
  *(_OWORD *)(v3 + 16) = v15;
  *(_QWORD *)(v3 + 32) = v5;
  *(_QWORD *)(v3 + 40) = v6;
  *(_BYTE *)(v3 + 48) = v7;
  *(_BYTE *)(v3 + 49) = v8;
  *(_BYTE *)(v3 + 50) = v9;
  *(_BYTE *)(v3 + 51) = v10;
  *(_QWORD *)(v3 + 56) = v11;
  *(_BYTE *)(v3 + 64) = v12;
  *v13 = v3;
  v13[1] = protocol witness for UpdatesWithCallStatus.update(with:) in conformance CallScreening.State;
  return v16(v3 + 16, a2, a3);
}

void ConversationHUDDetailsViewController.__allocating_init(controlsManager:)()
{
  uint64_t v0;

  OUTLINED_FUNCTION_16_1();
  ConversationHUDDetailsViewController.init(controlsManager:)(v0);
  OUTLINED_FUNCTION_0();
}

Swift::Void __swiftcall ConversationHUDDetailsViewController.refreshTitleCell()()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit36ConversationHUDDetailsViewController_detailsViewController);
  if (v1)
  {
    v2 = v1;
    InCallControlsCollectionViewController.refreshTitleCell()();
    OUTLINED_FUNCTION_7_1(v2);
  }
  else
  {
    OUTLINED_FUNCTION_36();
  }
}

Swift::Void __swiftcall ConversationHUDDetailsViewController.resetScroll(animated:)(Swift::Bool animated)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  id *v8;
  Class v9;
  Class isa;
  uint64_t v11;

  v3 = type metadata accessor for IndexPath();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit36ConversationHUDDetailsViewController_detailsViewController);
  if (v7)
  {
    v8 = (id *)(v7 + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_collectionView);
    OUTLINED_FUNCTION_2_0();
    if (*v8)
    {
      v9 = (Class)*v8;
      if ((uint64_t)-[objc_class numberOfSections](v9, sel_numberOfSections) >= 1
        && (uint64_t)-[objc_class numberOfItemsInSection:](v9, sel_numberOfItemsInSection_, 0) >= 1)
      {
        MEMORY[0x1C3B70094](0, 0);
        isa = IndexPath._bridgeToObjectiveC()().super.isa;
        OUTLINED_FUNCTION_101((uint64_t)v6, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
        -[objc_class scrollToItemAtIndexPath:atScrollPosition:animated:](v9, sel_scrollToItemAtIndexPath_atScrollPosition_animated_, isa, 1, animated);

        v9 = isa;
      }

    }
  }
}

Swift::Void __swiftcall ConversationHUDDetailsViewController.captioningStateDidChange()()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit36ConversationHUDDetailsViewController_detailsViewController);
  if (v1)
  {
    v2 = v1;
    InCallControlsCollectionViewController.captioningStateDidChange()();
    OUTLINED_FUNCTION_7_1(v2);
  }
  else
  {
    OUTLINED_FUNCTION_36();
  }
}

Swift::Void __swiftcall ConversationHUDDetailsViewController.controlsModeUpdated()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  id v3;
  char v4;
  id v5;

  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit36ConversationHUDDetailsViewController_detailsViewController))
  {
    OUTLINED_FUNCTION_40_29();
    v2 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x840);
    v5 = v3;
    v4 = v2();
    InCallControlsCollectionViewController.mode.setter(v4);
    OUTLINED_FUNCTION_7_1(v5);
  }
  else
  {
    OUTLINED_FUNCTION_36();
  }
}

Swift::Void __swiftcall ConversationHUDDetailsViewController.layoutStyleUpdated()()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t *__return_ptr);
  id v3;
  id v4;
  unsigned __int8 v5;
  uint64_t v6;

  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit36ConversationHUDDetailsViewController_detailsViewController))
  {
    OUTLINED_FUNCTION_40_29();
    v2 = *(void (**)(uint64_t *__return_ptr))((*MEMORY[0x1E0DEEDD8] & v1) + 0x838);
    v4 = v3;
    v2(&v6);
    v5 = v6;
    InCallControlsCollectionViewController.gridLayoutStyle.setter(&v5);

  }
}

void ConversationHUDDetailsViewController.updated(_:)()
{
  uint64_t v0;
  void *v1;
  id v2;
  _BYTE v3[40];

  v1 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit36ConversationHUDDetailsViewController_detailsViewController);
  if (v1)
  {
    outlined init with copy of Activity?();
    v2 = v1;
    InCallControlsCollectionViewController.activity.setter((uint64_t)v3);

  }
}

void ConversationHUDDetailsViewController.update(participant:broadcastingState:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);
  id v4;
  id v5;
  void *v6;
  void *v7;
  id v8;

  v1 = OBJC_IVAR____TtC15ConversationKit36ConversationHUDDetailsViewController_detailsViewController;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit36ConversationHUDDetailsViewController_detailsViewController))
  {
    OUTLINED_FUNCTION_40_29();
    v3 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v2) + 0x290);
    v5 = v4;
    v6 = (void *)v3();
    InCallControlsCollectionViewController.conversation.setter(v6);

    v7 = *(void **)(v0 + v1);
    if (v7)
    {
      v8 = v7;
      InCallControlsCollectionViewController.update(participant:broadcastingState:)();

    }
  }
}

Swift::Void __swiftcall ConversationHUDDetailsViewController.updateLocalViews(for:isLocalMemberAuthorizedToChangeGroupMembership:)(Swift::OpaquePointer a1, Swift::Bool isLocalMemberAuthorizedToChangeGroupMembership)
{
  uint64_t v2;
  uint64_t (*v3)(void);
  uint64_t v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  Swift::Bool v11;
  void *v12;

  v4 = OBJC_IVAR____TtC15ConversationKit36ConversationHUDDetailsViewController_detailsViewController;
  if (*(_QWORD *)(v2 + OBJC_IVAR____TtC15ConversationKit36ConversationHUDDetailsViewController_detailsViewController)
    && (OUTLINED_FUNCTION_40_29(),
        v6 = OUTLINED_FUNCTION_92_6(v5),
        v7 = (void *)v3(),
        InCallControlsCollectionViewController.conversation.setter(v7),
        v6,
        (v8 = *(void **)(v2 + v4)) != 0))
  {
    v9 = v8;
    v10 = OUTLINED_FUNCTION_78_10();
    InCallControlsCollectionViewController.updateLocalViews(for:isLocalMemberAuthorizedToChangeGroupMembership:)((Swift::OpaquePointer)v10, v11);
    OUTLINED_FUNCTION_4_21(v12);
  }
  else
  {
    OUTLINED_FUNCTION_6_2();
  }
}

void ConversationHUDDetailsViewController.update(participant:isKickingAvailable:)()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;

  v2 = OBJC_IVAR____TtC15ConversationKit36ConversationHUDDetailsViewController_detailsViewController;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit36ConversationHUDDetailsViewController_detailsViewController)
    && (OUTLINED_FUNCTION_40_29(),
        v4 = OUTLINED_FUNCTION_92_6(v3),
        v5 = (void *)v1(),
        InCallControlsCollectionViewController.conversation.setter(v5),
        v4,
        (v6 = *(void **)(v0 + v2)) != 0))
  {
    v7 = v6;
    OUTLINED_FUNCTION_78_10();
    InCallControlsCollectionViewController.update(participant:isKickingAvailable:)();
    OUTLINED_FUNCTION_4_21(v8);
  }
  else
  {
    OUTLINED_FUNCTION_6_2();
  }
}

void ConversationHUDDetailsViewController.update(with:updateReason:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);
  id v4;
  id v5;
  void *v6;
  void *v7;
  id v8;

  v1 = OBJC_IVAR____TtC15ConversationKit36ConversationHUDDetailsViewController_detailsViewController;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit36ConversationHUDDetailsViewController_detailsViewController))
  {
    OUTLINED_FUNCTION_40_29();
    v3 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v2) + 0x290);
    v5 = v4;
    v6 = (void *)v3();
    InCallControlsCollectionViewController.conversation.setter(v6);

    v7 = *(void **)(v0 + v1);
    if (v7)
    {
      v8 = v7;
      ConversationController.visibleParticipants.getter();
      InCallControlsCollectionViewController.update(with:updateReason:)();

      swift_bridgeObjectRelease();
    }
  }
}

Swift::Void __swiftcall ConversationHUDDetailsViewController.updateRemoteAudioPaused(audioPaused:)(Swift::Bool audioPaused)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Bool *v4;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit36ConversationHUDDetailsViewController_detailsViewController);
  if (v2)
  {
    v4 = (Swift::Bool *)(v2 + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_remoteAudioPaused);
    OUTLINED_FUNCTION_2_0();
    *v4 = audioPaused;
  }
  OUTLINED_FUNCTION_32();
}

Swift::Void __swiftcall ConversationHUDDetailsViewController.refreshToggleIgnoreLMIRequestsRowCell()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  id v3;
  void *v4;
  id v5;

  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit36ConversationHUDDetailsViewController_detailsViewController))
  {
    OUTLINED_FUNCTION_40_29();
    v2 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x290);
    v5 = v3;
    v4 = (void *)v2();
    InCallControlsCollectionViewController.conversation.setter(v4);
    InCallControlsCollectionViewController.refreshToggleIgnoreLMIRequestsRowCell()();
    OUTLINED_FUNCTION_7_1(v5);
  }
  else
  {
    OUTLINED_FUNCTION_36();
  }
}

uint64_t key path setter for ConversationHUDDetailsViewController.detailsDelegate : ConversationHUDDetailsViewController(uint64_t a1, _QWORD **a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x88);
  v3 = swift_unknownObjectRetain();
  return v2(v3);
}

void ConversationHUDDetailsViewController.detailsDelegate.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit36ConversationHUDDetailsViewController_detailsDelegate;
  OUTLINED_FUNCTION_8_19();
  MEMORY[0x1C3B752C0](v1);
  OUTLINED_FUNCTION_32();
}

void ConversationHUDDetailsViewController.detailsDelegate.setter()
{
  OUTLINED_FUNCTION_2_0();
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_32();
}

void ConversationHUDDetailsViewController.detailsDelegate.modify()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2 = OUTLINED_FUNCTION_124_1();
  *v0 = v2;
  v3 = OBJC_IVAR____TtC15ConversationKit36ConversationHUDDetailsViewController_detailsDelegate;
  v2[4] = v1;
  v2[5] = v3;
  v4 = v1 + v3;
  OUTLINED_FUNCTION_2_0();
  v2[3] = MEMORY[0x1C3B752C0](v4);
  OUTLINED_FUNCTION_18();
}

void ConversationHUDDetailsViewController.detailsDelegate.modify(void **a1, char a2)
{
  void *v3;

  v3 = *a1;
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  OUTLINED_FUNCTION_4_2(v3);
}

uint64_t ConversationHUDDetailsViewController.isOnScreen.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC15ConversationKit36ConversationHUDDetailsViewController_isOnScreen);
  OUTLINED_FUNCTION_8_19();
  return *v1;
}

void ConversationHUDDetailsViewController.isOnScreen.setter(char a1)
{
  uint64_t v1;
  char *v3;

  ConversationHUDDetailsViewController.isOnScreen.willset(a1);
  v3 = (char *)(v1 + OBJC_IVAR____TtC15ConversationKit36ConversationHUDDetailsViewController_isOnScreen);
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  OUTLINED_FUNCTION_32();
}

void ConversationHUDDetailsViewController.isOnScreen.willset(char a1)
{
  uint64_t v1;
  void *v2;
  char *v4;
  char *v5;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit36ConversationHUDDetailsViewController_detailsViewController);
  if (v2)
  {
    v4 = v2;
    a1 &= 1u;
    InCallControlsCollectionViewController.isOnScreen.willset(a1);
    v5 = &v4[OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_isOnScreen];
    swift_beginAccess();
    *v5 = a1;

  }
}

void ConversationHUDDetailsViewController.isOnScreen.modify()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  _BYTE *v4;

  v2 = OUTLINED_FUNCTION_124_1();
  *v0 = v2;
  v3 = OBJC_IVAR____TtC15ConversationKit36ConversationHUDDetailsViewController_isOnScreen;
  v2[3] = v1;
  v2[4] = v3;
  v4 = (_BYTE *)(v1 + v3);
  OUTLINED_FUNCTION_2_0();
  *((_BYTE *)v2 + 40) = *v4;
  OUTLINED_FUNCTION_18();
}

void ConversationHUDDetailsViewController.isOnScreen.modify(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v1 = *(void **)a1;
  v2 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v4 = *(_BYTE *)(*(_QWORD *)a1 + 40);
  ConversationHUDDetailsViewController.isOnScreen.willset(v4);
  *(_BYTE *)(v2 + v3) = v4;
  OUTLINED_FUNCTION_4_2(v1);
}

id ConversationHUDDetailsViewController.controlsManager.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC15ConversationKit36ConversationHUDDetailsViewController_controlsManager);
}

void ConversationHUDDetailsViewController.detailsViewController.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_4_3(a1, OBJC_IVAR____TtC15ConversationKit36ConversationHUDDetailsViewController_detailsViewController);
}

void ConversationHUDDetailsViewController.peoplePickerViewController.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_4_3(a1, OBJC_IVAR____TtC15ConversationKit36ConversationHUDDetailsViewController_peoplePickerViewController);
}

id ConversationHUDDetailsViewController.init(controlsManager:)(uint64_t a1)
{
  _BYTE *v1;
  char *v3;
  objc_super v5;

  OUTLINED_FUNCTION_18_35();
  v1[OBJC_IVAR____TtC15ConversationKit36ConversationHUDDetailsViewController_isOnScreen] = 0;
  v3 = &v1[OBJC_IVAR____TtC15ConversationKit36ConversationHUDDetailsViewController_linkShareCoordinator];
  *(_OWORD *)v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *((_QWORD *)v3 + 4) = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit36ConversationHUDDetailsViewController_detailsViewController] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit36ConversationHUDDetailsViewController_peoplePickerViewController] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit36ConversationHUDDetailsViewController_controlsManager] = a1;
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for ConversationHUDDetailsViewController();
  return objc_msgSendSuper2(&v5, sel_initWithNibName_bundle_, 0, 0);
}

void ConversationHUDDetailsViewController.__allocating_init(coder:)()
{
  uint64_t v0;

  objc_msgSend(OUTLINED_FUNCTION_16_1(), sel_initWithCoder_, v0);
  OUTLINED_FUNCTION_49_5();
  OUTLINED_FUNCTION_0();
}

void ConversationHUDDetailsViewController.init(coder:)()
{
  _BYTE *v0;
  char *v1;

  OUTLINED_FUNCTION_18_35();
  v0[OBJC_IVAR____TtC15ConversationKit36ConversationHUDDetailsViewController_isOnScreen] = 0;
  v1 = &v0[OBJC_IVAR____TtC15ConversationKit36ConversationHUDDetailsViewController_linkShareCoordinator];
  *(_OWORD *)v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((_QWORD *)v1 + 4) = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit36ConversationHUDDetailsViewController_detailsViewController] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit36ConversationHUDDetailsViewController_peoplePickerViewController] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

Swift::Void __swiftcall ConversationHUDDetailsViewController.viewDidLoad()()
{
  void *v0;
  objc_super v1;

  v1.receiver = v0;
  v1.super_class = (Class)type metadata accessor for ConversationHUDDetailsViewController();
  objc_msgSendSuper2(&v1, sel_viewDidLoad);
  ConversationHUDDetailsViewController.setupRootView()();
}

void ConversationHUDDetailsViewController.setupRootView()()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  void *v4;
  _QWORD *v5;
  _QWORD *v6;
  id v7;
  id v8;
  char *v9;
  char *v10;
  void **v11;
  void *v12;
  _QWORD *v13;
  char *v14;
  char *v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  _QWORD v20[5];
  char v21;

  v1 = v0;
  v2 = objc_msgSend(v0, sel_parentViewController);
  if (v2)
  {
    v3 = v2;
    swift_getObjectType();
    v4 = (void *)dynamic_cast_existential_1_conditional((uint64_t)v3);
    if (!v4)

  }
  else
  {
    v4 = 0;
  }
  v5 = *(_QWORD **)&v1[OBJC_IVAR____TtC15ConversationKit36ConversationHUDDetailsViewController_controlsManager];
  v6 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v5) + 0x290))();
  ConversationController.visibleParticipants.getter();
  (*(void (**)(void))((*v6 & *v5) + 0x840))();
  (*(void (**)(_QWORD *__return_ptr))((*v6 & *v5) + 0x838))(v20);
  v21 = v20[0];
  v7 = objc_allocWithZone((Class)type metadata accessor for InCallControlsCollectionViewController(0));
  v8 = v4;
  InCallControlsCollectionViewController.init(conversation:participants:mode:gridLayoutStyle:isLegacy:shareLinkEnabled:menuHostViewController:)();
  v10 = v9;
  v11 = (void **)&v9[OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_controlsManager];
  swift_beginAccess();
  v12 = *v11;
  *v11 = v5;
  v13 = v5;

  (*(void (**)(_QWORD *__return_ptr))((*v6 & *v13) + 0x8C8))(v20);
  InCallControlsCollectionViewController.activity.setter((uint64_t)v20);
  v14 = &v10[OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_inCallControlsCollectionViewControllerDelegate];
  swift_beginAccess();
  *((_QWORD *)v14 + 1) = &protocol witness table for ConversationHUDDetailsViewController;
  swift_unknownObjectWeakAssign();
  v15 = v10;
  ConversationHUDDetailsViewController.detailsViewController.setter((uint64_t)v10);
  objc_msgSend(v1, sel_addChildViewController_, v15);
  v16 = objc_msgSend(v1, sel_view);
  if (v16)
  {
    v17 = v16;
    v18 = objc_msgSend(v15, sel_view);
    if (v18)
    {
      v19 = v18;
      objc_msgSend(v17, sel_addSubview_, v18);

      objc_msgSend(v15, sel_didMoveToParentViewController_, v1);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void ConversationHUDDetailsViewController.viewWillTransition(to:with:)(uint64_t a1, double a2, double a3)
{
  void *v3;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[3];
  uint64_t v10;
  uint64_t v11;
  _BYTE v12[24];
  uint64_t v13;
  objc_super v14;

  v14.receiver = v3;
  v14.super_class = (Class)type metadata accessor for ConversationHUDDetailsViewController();
  objc_msgSendSuper2(&v14, sel_viewWillTransitionToSize_withTransitionCoordinator_, a1, a2, a3);
  OUTLINED_FUNCTION_8_19();
  outlined init with copy of Activity?();
  if (v13)
  {
    outlined init with copy of RadarReporting((uint64_t)v12, (uint64_t)v9);
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v12, (uint64_t *)&demangling cache variable for type metadata for LinkShareCoordinatorProtocol?);
    v7 = v10;
    v8 = v11;
    __swift_project_boxed_opaque_existential_1(v9, v10);
    (*(void (**)(uint64_t, uint64_t))(v8 + 24))(v7, v8);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  }
  else
  {
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v12, (uint64_t *)&demangling cache variable for type metadata for LinkShareCoordinatorProtocol?);
  }
}

Swift::Bool __swiftcall ConversationHUDDetailsViewController._canShowWhileLocked()()
{
  return 1;
}

Swift::Void __swiftcall ConversationHUDDetailsViewController.updateScrollableInsets(_:)(UIEdgeInsets a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id *v4;
  uint64_t v5;
  id *v6;

  v2 = OBJC_IVAR____TtC15ConversationKit36ConversationHUDDetailsViewController_detailsViewController;
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit36ConversationHUDDetailsViewController_detailsViewController);
  if (v3)
  {
    v4 = (id *)(v3 + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_collectionView);
    OUTLINED_FUNCTION_8_19();
    if (*v4)
      OUTLINED_FUNCTION_53_23(*v4, sel_setContentInset_);
    v5 = *(_QWORD *)(v1 + v2);
    if (v5)
    {
      v6 = (id *)(v5 + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_collectionView);
      OUTLINED_FUNCTION_8_19();
      if (*v6)
        OUTLINED_FUNCTION_53_23(*v6, sel_setVerticalScrollIndicatorInsets_);
    }
  }
}

void ConversationHUDDetailsViewController.collectionView.getter()
{
  uint64_t v0;
  uint64_t v1;
  id *v2;
  id v3;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit36ConversationHUDDetailsViewController_detailsViewController);
  if (v1)
  {
    v2 = (id *)(v1 + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_collectionView);
    OUTLINED_FUNCTION_8_19();
    v3 = *v2;
  }
  OUTLINED_FUNCTION_32();
}

id ConversationHUDDetailsViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;
  id v7;

  v4 = v3;
  if (a2)
  {
    v6 = (void *)MEMORY[0x1C3B72E00]();
    OUTLINED_FUNCTION_53();
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void ConversationHUDDetailsViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id ConversationHUDDetailsViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ConversationHUDDetailsViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id ConversationHUDDetailsViewController.isCaptioningEnabled(inCallControlsCollectionViewController:)()
{
  uint64_t *v0;
  void *v1;
  void *v2;
  id v3;

  v1 = (void *)OUTLINED_FUNCTION_13_5(*v0);
  if (!v1)
    return 0;
  v2 = v1;
  if ((objc_msgSend(v1, sel_respondsToSelector_, sel_isCaptioningEnabled) & 1) != 0)
    v3 = objc_msgSend(v2, sel_isCaptioningEnabled);
  else
    v3 = 0;
  swift_unknownObjectRelease();
  return v3;
}

void ConversationHUDDetailsViewController.inCallControlsCollectionViewController(_:didTap:from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;

  OUTLINED_FUNCTION_93();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_16_2();
  OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_58_5();
  v2 = type metadata accessor for UUID();
  v3 = MEMORY[0x1E0C80A78](v2);
  MEMORY[0x1E0C80A78](v3);
  type metadata accessor for InCallControlsCollectionViewController.Action(0);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_77();
  outlined init with copy of InCallControlsCollectionViewController.Action();
  v5 = (char *)sub_1BD223600 + 4 * byte_1BD6523B0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_1BD223600()
{
  __int128 *v0;
  uint64_t v1;

  outlined init with take of Notice(v0, v1 - 120);
  ConversationControlsManager.viewActivity(_:)();
  __swift_destroy_boxed_opaque_existential_1(v1 - 120);
  OUTLINED_FUNCTION_52_1();
}

Swift::Void __swiftcall ConversationHUDDetailsViewController.handleAddParticipant()()
{
  char *v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v4)(void);
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  os_log_type_t v10;
  uint8_t *v11;
  id v12;
  _QWORD *v13;
  void *v14;
  void (*v15)(uint64_t, _UNKNOWN **);
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  NSObject *v29;
  id v30;
  uint64_t v31;
  NSObject *v32;
  NSObject *v33;
  uint64_t v34;
  os_log_type_t v35;
  uint8_t *v36;
  NSObject *v37;
  _QWORD v38[4];

  OUTLINED_FUNCTION_93();
  v1 = v0;
  type metadata accessor for UITraitOverrides();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_16_2();
  v3 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v4 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **(_QWORD **)&v0[OBJC_IVAR____TtC15ConversationKit36ConversationHUDDetailsViewController_controlsManager])
                           + 0x290);
  v5 = v4();
  if (v5)
  {
    v6 = (void *)v5;
    LOBYTE(v38[0]) = 1;
    v7 = v4();
    if (v7)
    {
      v8 = v7;
      TUConversation.existingAddressesLowercased.getter();
      OUTLINED_FUNCTION_49_5();
    }
    else
    {
      v8 = MEMORY[0x1E0DEE9E8];
    }
    objc_allocWithZone((Class)type metadata accessor for PeoplePickerViewController());
    v12 = v6;
    PeoplePickerViewController.init(style:existingAddresses:currentConversation:stagedActivity:setPreventsApplicationTerminationWhenModal:)((char *)v38, v8, v6, 0, (uint64_t)TPNumberPadCharacter.rawValue.getter, 0);
    v14 = v13;
    v15 = *(void (**)(uint64_t, _UNKNOWN **))((*v3 & *v13) + 0x368);
    v16 = swift_unknownObjectRetain();
    v15(v16, &protocol witness table for ConversationHUDDetailsViewController);
    v17 = objc_msgSend(v14, sel_view);
    if (v17)
    {
      v18 = v17;
      v19 = objc_msgSend((id)objc_opt_self(), sel_systemGreenColor);
      objc_msgSend(v18, sel_setTintColor_, v19);

      v20 = v14;
      ConversationHUDDetailsViewController.peoplePickerViewController.setter((uint64_t)v14);
      v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3A40]), sel_initWithRootViewController_, v20);
      v22 = objc_msgSend(v21, sel_navigationBar);
      v23 = OUTLINED_FUNCTION_39((uint64_t)v22, sel_systemGreenColor);
      objc_msgSend(v22, sel_setTintColor_, v23);

      v38[3] = type metadata accessor for ConversationHUDDetailsViewController();
      v38[0] = v1;
      v24 = objc_allocWithZone(MEMORY[0x1E0DC34F0]);
      v25 = v1;
      v26 = @nonobjc UIBarButtonItem.init(barButtonSystemItem:target:action:)(1, v38, (uint64_t)sel_dismissPeoplePicker);
      v27 = objc_msgSend(v21, sel_navigationItem);
      objc_msgSend(v27, sel_setRightBarButtonItem_, v26);

      v28 = v21;
      v29 = OUTLINED_FUNCTION_39((uint64_t)v28, sel_traitCollection);
      v30 = -[NSObject userInterfaceIdiom](v29, sel_userInterfaceIdiom);

      if (v30 == (id)5)
        v31 = -2;
      else
        v31 = 6;
      objc_msgSend(v28, sel_setModalPresentationStyle_, v31);

      v32 = objc_msgSend(v28, sel_presentationController);
      if (v32)
      {
        v33 = v32;
        MEMORY[0x1C3B73754]();
        UIMutableTraits.userInterfaceStyle.setter();
        v29 = v33;
        MEMORY[0x1C3B73760]();

      }
      if (one-time initialization token for conversationControls != -1)
        swift_once();
      v34 = OUTLINED_FUNCTION_17_2();
      OUTLINED_FUNCTION_3(v34, (uint64_t)&static Logger.conversationControls);
      v35 = OUTLINED_FUNCTION_12_0();
      if (OUTLINED_FUNCTION_71_0(v29))
      {
        v36 = (uint8_t *)OUTLINED_FUNCTION_7_8();
        *(_WORD *)v36 = 0;
        OUTLINED_FUNCTION_130(&dword_1BD004000, v29, v35, "Present peoplePicker to add participant", v36);
        OUTLINED_FUNCTION_60();
      }

      OUTLINED_FUNCTION_9_67(v25, sel_presentViewController_animated_completion_, (uint64_t)v28);
      OUTLINED_FUNCTION_52_1();
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v9 = OUTLINED_FUNCTION_17_2();
    v37 = OUTLINED_FUNCTION_3(v9, (uint64_t)&static Logger.conversationControls);
    v10 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v37, v10))
    {
      v11 = (uint8_t *)OUTLINED_FUNCTION_7_8();
      *(_WORD *)v11 = 0;
      OUTLINED_FUNCTION_130(&dword_1BD004000, v37, v10, "Unable to addParticipant, no conversation.", v11);
      OUTLINED_FUNCTION_60();
    }
    OUTLINED_FUNCTION_17_41(v37);
  }
}

void ConversationHUDDetailsViewController.showKickParticipantAlert(toKick:)()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  objc_class *v4;
  NSBundle v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  objc_class *v19;
  NSBundle v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;

  OUTLINED_FUNCTION_93();
  v45 = v0;
  v1 = OUTLINED_FUNCTION_14_2();
  v2 = *(_QWORD *)(*(_QWORD *)(v1 - 8) + 64);
  v43 = *(_QWORD *)(v1 - 8);
  v44 = v2;
  MEMORY[0x1E0C80A78](v1);
  v42 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (objc_class *)objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  OUTLINED_FUNCTION_2_15();
  v5.super.isa = v4;
  OUTLINED_FUNCTION_49_2(v6, v7, v8, v9, v5);

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v10 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v10 + 16) = xmmword_1BD6441D0;
  Participant.contactDetails.getter();
  v11 = v46;
  v12 = v47;
  v13 = v48;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_27();

  *(_QWORD *)(v10 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v10 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v10 + 32) = v12;
  *(_QWORD *)(v10 + 40) = v13;
  v14 = String.init(format:_:)();
  v16 = v15;
  v17 = swift_bridgeObjectRelease();
  v18 = OUTLINED_FUNCTION_17_8(v17, (unint64_t *)&lazy cache variable for type metadata for UIAlertController);
  v19 = (objc_class *)OUTLINED_FUNCTION_9(v18, (const char *)&selRef_setCornerRadius_ + 6);
  v20.super.isa = v19;
  v21 = OUTLINED_FUNCTION_49_2(0xD00000000000001ELL, 0x80000001BD67D560, 0x61737265766E6F43, 0xEF74694B6E6F6974, v20);
  v23 = v22;

  v24 = @nonobjc UIAlertController.__allocating_init(title:message:preferredStyle:)(v21, v23, v14, v16, 1);
  v25 = OUTLINED_FUNCTION_17_8((uint64_t)v24, (unint64_t *)&lazy cache variable for type metadata for UIAlertAction);
  v26 = OUTLINED_FUNCTION_9(v25, (const char *)&selRef_setCornerRadius_ + 6);
  v27 = OUTLINED_FUNCTION_7_13(0xD000000000000032, 0x80000001BD67D580);
  v29 = v28;

  v30 = OUTLINED_FUNCTION_15();
  v31 = v45;
  OUTLINED_FUNCTION_112_5();
  v32 = (uint64_t)v42;
  outlined init with copy of InCallControlsCollectionViewController.Action();
  v33 = (*(unsigned __int8 *)(v43 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
  v34 = swift_allocObject();
  *(_QWORD *)(v34 + 16) = v30;
  outlined init with take of Participant(v32, v34 + v33);
  v35 = @nonobjc UIAlertAction.__allocating_init(title:style:handler:)(v27, v29, 0, (uint64_t)partial apply for closure #1 in ConversationHUDDetailsViewController.showKickParticipantAlert(toKick:));
  v36 = OUTLINED_FUNCTION_9((uint64_t)v35, sel_conversationKit);
  v37 = OUTLINED_FUNCTION_7_13(0x4C45434E4143, 0xE600000000000000);
  v39 = v38;

  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_112_5();
  v40 = @nonobjc UIAlertAction.__allocating_init(title:style:handler:)(v37, v39, 0, (uint64_t)partial apply for closure #2 in ConversationHUDDetailsViewController.showKickParticipantAlert(toKick:));
  objc_msgSend(v24, sel_addAction_, v35);
  OUTLINED_FUNCTION_65(v24, sel_addAction_);
  OUTLINED_FUNCTION_9_67(v31, sel_presentViewController_animated_completion_, (uint64_t)v24);

  OUTLINED_FUNCTION_52_1();
}

Swift::Void __swiftcall ConversationHUDDetailsViewController.handleShareLinkAction(hostingViewController:sourceView:)(UIViewController_optional *hostingViewController, UIView_optional *sourceView)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  _QWORD *v20;
  void *v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[6];

  OUTLINED_FUNCTION_93();
  v5 = v4;
  v7 = v6;
  v8 = type metadata accessor for DispatchWorkItemFlags();
  v26 = *(_QWORD *)(v8 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_77();
  v12 = v11 - v10;
  v13 = type metadata accessor for DispatchQoS();
  v24 = *(_QWORD *)(v13 - 8);
  v25 = v13;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_58_5();
  v15 = type metadata accessor for DispatchQoS.QoSClass();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_16_2();
  OUTLINED_FUNCTION_17_8(v17, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v16 + 104))(v2, *MEMORY[0x1E0DEF530], v15);
  v18 = (void *)static OS_dispatch_queue.global(qos:)();
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v2, v15);
  v19 = OUTLINED_FUNCTION_15();
  swift_unknownObjectWeakInit();
  v20 = (_QWORD *)OUTLINED_FUNCTION_15();
  v20[2] = v19;
  v20[3] = v7;
  v20[4] = v5;
  v27[4] = partial apply for closure #1 in ConversationHUDDetailsViewController.handleShareLinkAction(hostingViewController:sourceView:);
  v27[5] = v20;
  v27[0] = MEMORY[0x1E0C809B0];
  v27[1] = 1107296256;
  v27[2] = thunk for @escaping @callee_guaranteed @Sendable () -> ();
  v27[3] = &block_descriptor_44;
  v21 = _Block_copy(v27);
  v22 = v5;
  swift_retain();
  v23 = v7;
  static DispatchQoS.unspecified.getter();
  lazy protocol witness table accessor for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  MEMORY[0x1C3B7361C](0, v3, v12, v21);
  _Block_release(v21);

  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v12, v8);
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v3, v25);
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_52_1();
}

Swift::Void __swiftcall ConversationHUDDetailsViewController.handleToggleIgnoreLMIRequestsAction()()
{
  os_log_type_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  os_log_type_t v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  uint8_t *v15;
  uint64_t v16;
  NSObject *v17;
  NSObject *v18;

  v2 = (void *)OUTLINED_FUNCTION_133_0(**(_QWORD **)(v1
                                                   + OBJC_IVAR____TtC15ConversationKit36ConversationHUDDetailsViewController_controlsManager));
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend(v2, sel_ignoreLMIRequests) ^ 1;
    v5 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
    v17 = objc_msgSend(v5, sel_conversationManager);

    -[NSObject setIgnoreLMIRequests:forConversation:](v17, sel_setIgnoreLMIRequests_forConversation_, v4, v3);
  }
  else
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v6 = OUTLINED_FUNCTION_17_2();
    v18 = OUTLINED_FUNCTION_3(v6, (uint64_t)&static Logger.conversationControls);
    v7 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_5_9(v7, v8, v9, v10, v11, v12, v13, v14, v16, v18))
    {
      v15 = (uint8_t *)OUTLINED_FUNCTION_7_8();
      *(_WORD *)v15 = 0;
      OUTLINED_FUNCTION_130(&dword_1BD004000, v17, v0, "Unable to toggle mute join request state, no conversation.", v15);
      OUTLINED_FUNCTION_60();
    }
  }

}

void closure #1 in ConversationHUDDetailsViewController.showKickParticipantAlert(toKick:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  void *v8;
  id v9;

  v2 = a2 + 16;
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v3 = type metadata accessor for Logger();
  __swift_project_value_buffer(v3, (uint64_t)&static Logger.conversationControls);
  v4 = Logger.logObject.getter();
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v6 = 0;
    _os_log_impl(&dword_1BD004000, v4, v5, "ConversationHUDDetailsViewController: did tap on kick from the kick participant alert", v6, 2u);
    MEMORY[0x1C3B751B8](v6, -1, -1);
  }

  swift_beginAccess();
  v7 = MEMORY[0x1C3B752C0](v2);
  if (v7)
  {
    v8 = (void *)v7;
    v9 = *(id *)(v7 + OBJC_IVAR____TtC15ConversationKit36ConversationHUDDetailsViewController_controlsManager);

    ConversationControlsManager.kick(participant:)();
  }
}

void closure #2 in ConversationHUDDetailsViewController.showKickParticipantAlert(toKick:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  void *v7;
  void *v8;

  v2 = a2 + 16;
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v3 = type metadata accessor for Logger();
  __swift_project_value_buffer(v3, (uint64_t)&static Logger.conversationControls);
  v4 = Logger.logObject.getter();
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v6 = 0;
    _os_log_impl(&dword_1BD004000, v4, v5, "ConversationHUDDetailsViewController: did tap on cancel from the kick participant alert", v6, 2u);
    MEMORY[0x1C3B751B8](v6, -1, -1);
  }

  swift_beginAccess();
  v7 = (void *)MEMORY[0x1C3B752C0](v2);
  if (v7)
  {
    v8 = v7;
    objc_msgSend(v7, sel_dismissViewControllerAnimated_completion_, 1, 0);

  }
}

void TUConversation.existingAddressesLowercased.getter()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  uint64_t v8;
  char v9;
  char **v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char **v29;
  char v30;
  char v31;
  unsigned __int8 v32;
  void (*v33)(char *, _QWORD);
  char v34[32];
  uint64_t v35;
  uint64_t v36;
  unsigned __int8 v37;
  uint64_t v38;

  v2 = objc_msgSend(v0, sel_remoteMembers);
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
  lazy protocol witness table accessor for type TUHandle and conformance NSObject((unint64_t *)&lazy protocol witness table cache variable for type TUConversationMember and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
  static Set._unconditionallyBridgeFromObjectiveC(_:)();
  OUTLINED_FUNCTION_37_0();
  v3 = specialized Set.count.getter(&lazy cache variable for type metadata for TUConversationMember);
  if (v3)
  {
    v4 = v3;
    v38 = MEMORY[0x1E0DEE9D8];
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    if (((unint64_t)&lazy cache variable for type metadata for TUConversationMember & 0xC000000000000001) != 0)
    {
      v5 = __CocoaSet.startIndex.getter();
      v7 = 1;
    }
    else
    {
      v5 = specialized _NativeSet.startIndex.getter(&lazy cache variable for type metadata for TUConversationMember);
      v7 = v9 & 1;
    }
    v35 = v5;
    v36 = v6;
    v37 = v7;
    if (v4 < 0)
    {
      __break(1u);
    }
    else
    {
      v10 = &selRef_associatedAppBundleIdentifier;
      while (1)
      {
        specialized Set.subscript.getter(v35, v36, v37, (uint64_t)&lazy cache variable for type metadata for TUConversationMember);
        v12 = v11;
        v13 = objc_msgSend(objc_msgSend(v11, v10[175]), sel_value);
        OUTLINED_FUNCTION_8_10();
        v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        v16 = v15;

        v17 = (void *)MEMORY[0x1C3B72E00](v14, v16);
        swift_bridgeObjectRelease();
        outlined bridged method (ob) of @objc NSString._im_normalizedURI()(v17);
        if (!v19)
          break;
        v20 = v18;
        v1 = v19;

        v21 = v38;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          v21 = v38;
        }
        v22 = *(_QWORD *)(v21 + 16);
        if (v22 >= *(_QWORD *)(v21 + 24) >> 1)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          v21 = v38;
        }
        *(_QWORD *)(v21 + 16) = v22 + 1;
        v23 = v21 + 16 * v22;
        *(_QWORD *)(v23 + 32) = v20;
        *(_QWORD *)(v23 + 40) = v1;
        if (((unint64_t)&lazy cache variable for type metadata for TUConversationMember & 0xC000000000000001) != 0)
        {
          if ((v37 & 1) == 0)
            goto LABEL_24;
          if (__CocoaSet.Index.handleBitPattern.getter())
            swift_isUniquelyReferenced_nonNull_native();
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Set<TUConversationMember>.Index);
          v33 = (void (*)(char *, _QWORD))Set.Index._asCocoa.modify();
          __CocoaSet.formIndex(after:isUnique:)();
          v33(v34, 0);
        }
        else
        {
          v24 = v35;
          v25 = v36;
          v1 = (void *)v37;
          v26 = specialized _NativeSet.index(after:)(v35, v36, v37, &lazy cache variable for type metadata for TUConversationMember);
          v28 = v27;
          v29 = v10;
          v31 = v30;
          outlined consume of Set<TUHandle>.Index._Variant(v24, v25, (char)v1);
          v35 = v26;
          v36 = v28;
          v32 = v31 & 1;
          v10 = v29;
          v37 = v32;
        }
        if (!--v4)
        {
          outlined consume of Set<TUHandle>.Index._Variant(v35, v36, v37);
          OUTLINED_FUNCTION_13_3();
          v8 = v38;
          goto LABEL_21;
        }
      }
    }
    __break(1u);
LABEL_24:
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_13_3();
    v8 = MEMORY[0x1E0DEE9D8];
LABEL_21:
    specialized Set.init<A>(_:)(v8);
  }
}

uint64_t closure #1 in ConversationHUDDetailsViewController.handleShareLinkAction(hostingViewController:sourceView:)(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5;
  uint64_t result;
  void *v7;
  void *v8;
  _QWORD *v9;
  id v10;
  id v11;
  id v12;
  id v13;

  v5 = a1 + 16;
  swift_beginAccess();
  result = MEMORY[0x1C3B752C0](v5);
  if (result)
  {
    v7 = (void *)result;
    v8 = *(void **)(result + OBJC_IVAR____TtC15ConversationKit36ConversationHUDDetailsViewController_controlsManager);
    v9 = (_QWORD *)swift_allocObject();
    v9[2] = v7;
    v9[3] = a2;
    v9[4] = a3;
    v10 = a3;
    v11 = v8;
    v12 = v7;
    v13 = a2;
    ConversationController.shareableLink(completionHandler:)((uint64_t)partial apply for closure #1 in closure #1 in ConversationHUDDetailsViewController.handleShareLinkAction(hostingViewController:sourceView:), (uint64_t)v9);

    return swift_release();
  }
  return result;
}

void closure #1 in closure #1 in ConversationHUDDetailsViewController.handleShareLinkAction(hostingViewController:sourceView:)(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  NSObject *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  id v20;
  void *v21;
  _QWORD *v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  id v29;
  id v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  uint64_t aBlock[6];
  uint64_t v41;

  v10 = type metadata accessor for DispatchWorkItemFlags();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for DispatchQoS();
  v15 = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 || !a1)
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v28 = type metadata accessor for Logger();
    __swift_project_value_buffer(v28, (uint64_t)&static Logger.conversationControls);
    v29 = a2;
    v30 = a2;
    v39 = Logger.logObject.getter();
    v31 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v39, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc();
      v33 = swift_slowAlloc();
      aBlock[0] = v33;
      *(_DWORD *)v32 = 136315138;
      v41 = (uint64_t)a2;
      v34 = a2;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error?);
      v35 = String.init<A>(describing:)();
      v41 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v35, v36, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1BD004000, v39, v31, "Couldn't look up a link for the active conversation, error: %s", v32, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v33, -1, -1);
      MEMORY[0x1C3B751B8](v32, -1, -1);
    }
    else
    {

    }
  }
  else
  {
    v38 = v16;
    v39 = v15;
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
    v19 = a1;
    v37 = v11;
    v20 = v19;
    v21 = (void *)static OS_dispatch_queue.main.getter();
    v22 = (_QWORD *)swift_allocObject();
    v22[2] = a3;
    v22[3] = v20;
    v22[4] = a4;
    v22[5] = a5;
    aBlock[4] = (uint64_t)partial apply for closure #1 in closure #1 in closure #1 in ConversationHUDDetailsViewController.handleShareLinkAction(hostingViewController:sourceView:);
    aBlock[5] = (uint64_t)v22;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)thunk for @escaping @callee_guaranteed () -> ();
    aBlock[3] = (uint64_t)&block_descriptor_42;
    v23 = _Block_copy(aBlock);
    v24 = a5;
    v25 = v20;
    v26 = a3;
    v27 = a4;
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = MEMORY[0x1E0DEE9D8];
    lazy protocol witness table accessor for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
    lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    MEMORY[0x1C3B7361C](0, v18, v13, v23);
    _Block_release(v23);

    (*(void (**)(char *, uint64_t))(v37 + 8))(v13, v10);
    (*(void (**)(char *, NSObject *))(v38 + 8))(v18, v39);
  }
}

void closure #1 in closure #1 in closure #1 in ConversationHUDDetailsViewController.handleShareLinkAction(hostingViewController:sourceView:)(void *a1, void *a2, void *a3, void *a4)
{
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  objc_class *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[3];
  uint64_t v19;
  uint64_t v20;
  id v21;
  char v22;
  objc_class *v23;
  _UNKNOWN **v24;

  v21 = a2;
  v22 = 0;
  if (a3)
  {
    if (a4)
    {
LABEL_3:
      v8 = a3;
      v9 = a2;
      goto LABEL_6;
    }
  }
  else
  {
    v10 = a1;
    if (a4)
      goto LABEL_3;
  }
  v11 = a3;
  v12 = a2;
  if (!objc_msgSend(a1, sel_view))
  {
    __break(1u);
    return;
  }
LABEL_6:
  v13 = (objc_class *)type metadata accessor for LinkShareCoordinator();
  objc_allocWithZone(v13);
  v14 = a4;
  v23 = v13;
  v24 = &protocol witness table for LinkShareCoordinator;
  v21 = LinkShareCoordinator.init(type:hostViewController:originatingView:)();
  v15 = (uint64_t)a1 + OBJC_IVAR____TtC15ConversationKit36ConversationHUDDetailsViewController_linkShareCoordinator;
  swift_beginAccess();
  outlined assign with take of LinkShareCoordinatorProtocol?((uint64_t)&v21, v15);
  swift_endAccess();
  outlined init with copy of Activity?();
  if (v23)
  {
    outlined init with copy of RadarReporting((uint64_t)&v21, (uint64_t)v18);
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)&v21, (uint64_t *)&demangling cache variable for type metadata for LinkShareCoordinatorProtocol?);
    v16 = v19;
    v17 = v20;
    __swift_project_boxed_opaque_existential_1(v18, v19);
    (*(void (**)(uint64_t (*)(_QWORD), _QWORD, uint64_t, uint64_t))(v17 + 16))(TPNumberPadCharacter.rawValue.getter, 0, v16, v17);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  }
  else
  {
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)&v21, (uint64_t *)&demangling cache variable for type metadata for LinkShareCoordinatorProtocol?);
  }
}

void addPeople(_:toConversation:onActiveCall:shouldAddOtherInvitedToRemoteMembers:)()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  objc_class *v7;
  Class v8;
  void *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  objc_class *v30;
  char v31;
  char v32;
  uint64_t v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  id v41;
  int v42;
  uint64_t v43;
  int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  id v50;
  int v51;
  int v52;
  int v53;
  int v54;
  int v55;
  int v56;
  id v57;
  void *v58;
  void *v59;
  id v60;
  int v61;
  int v62;
  int v63;
  int v64;
  int v65;
  int v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t ObjectType;
  uint64_t v73;
  id v74;
  Class v75;
  uint64_t v76;
  uint64_t (*v77)(uint64_t);
  uint64_t v78;
  void *v79;
  id v80;
  int v81;
  uint64_t v82;
  int v83;
  int v84;
  int v85;
  int v86;
  int v87;
  int v88;
  id v89;
  id v90;
  uint64_t v91;
  uint64_t (*v92)(uint64_t);
  Class isa;
  id v94;
  id v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  __int128 v102;
  uint64_t v103;
  unint64_t v104;
  Class v105;
  void *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;

  OUTLINED_FUNCTION_93();
  v110 = v2;
  v111 = v3;
  HIDWORD(v99) = v4;
  v6 = v5;
  v8 = v7;
  v106 = v9;
  v11 = v10;
  v12 = type metadata accessor for UUID();
  v97 = *(_QWORD *)(v12 - 8);
  v98 = v12;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_77();
  v96 = v15 - v14;
  v108 = MEMORY[0x1E0DEE9E8];
  v109 = MEMORY[0x1E0DEE9E8];
  if (one-time initialization token for peoplePicker != -1)
LABEL_37:
    swift_once();
  v16 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v16, (uint64_t)&static Logger.peoplePicker);
  v17 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_51_3(v17))
  {
    v18 = (uint8_t *)OUTLINED_FUNCTION_7_8();
    *(_WORD *)v18 = 0;
    OUTLINED_FUNCTION_130(&dword_1BD004000, v0, (os_log_type_t)v1, "Adding people to conversation on active call.", v18);
    OUTLINED_FUNCTION_60();
  }

  v100 = v6;
  v101 = (uint64_t)v8;
  if (!(v11 >> 62))
  {
    v19 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v19)
      goto LABEL_6;
LABEL_23:
    swift_bridgeObjectRelease();
    if ((v99 & 0x100000000) != 0)
    {
      v57 = objc_msgSend(v106, sel_otherInvitedHandles);
      _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
      lazy protocol witness table accessor for type TUHandle and conformance NSObject((unint64_t *)&lazy protocol witness table cache variable for type TUHandle and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
      static Set._unconditionallyBridgeFromObjectiveC(_:)();
      OUTLINED_FUNCTION_49_5();
      specialized Collection.first.getter();
      v59 = v58;
      OUTLINED_FUNCTION_27();
      if (v59)
      {
        v60 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DBD2A0]), sel_initWithHandle_, v59);
        v61 = (int)v60;
        objc_msgSend(v60, sel_setIsOtherInvitedHandle_, 1);
        specialized Set._Variant.insert(_:)((int)&v107, v61, v62, v63, v64, v65, v66, v67, v96, v97, v98, v99, v100, v101, v102, *((uint64_t *)&v102 + 1), v103, v104, (uint64_t)v106,
          v107,
          v108,
          v109);

        OUTLINED_FUNCTION_87_5();
      }
    }
    v68 = OUTLINED_FUNCTION_25_2();
    v69 = specialized Set.count.getter(v68);
    OUTLINED_FUNCTION_53();
    v70 = v100;
    if (v69 <= 0)
    {
      v71 = OUTLINED_FUNCTION_5_0();
      v69 = specialized Set.count.getter(v71);
      OUTLINED_FUNCTION_27();
      if (v69 < 1)
      {
        OUTLINED_FUNCTION_53();
        swift_bridgeObjectRelease();
        return;
      }
    }
    if (v101)
    {
      ObjectType = swift_getObjectType();
      v69 = *(_QWORD *)(v100 + 112);
      swift_unknownObjectRetain();
      v73 = OUTLINED_FUNCTION_72_14();
      if ((((uint64_t (*)(uint64_t))v69)(v73) & 1) == 0)
      {
        v76 = OUTLINED_FUNCTION_72_14();
        v78 = v77(v76);
        if (v78)
        {
          v79 = (void *)v78;
          objc_allocWithZone(MEMORY[0x1E0DBD2A0]);
          v80 = v79;
          v81 = @nonobjc TUConversationMember.init(handle:nickname:)(v80, 0, 0);
          OUTLINED_FUNCTION_67_10(v81, v82, v83, v84, v85, v86, v87, v88, v96, v97, v98, v99, v100, v101, v102, *((uint64_t *)&v102 + 1), v103, v104, (uint64_t)v106,
            v107,
            v108,
            v109);

          OUTLINED_FUNCTION_87_5();
        }
        v89 = objc_allocWithZone(MEMORY[0x1E0DBD308]);
        swift_bridgeObjectRetain();
        v90 = @nonobjc TUJoinConversationRequest.init(remoteMembers:otherInvitedHandles:)();
        v91 = OUTLINED_FUNCTION_72_14();
        objc_msgSend(v90, sel_setVideoEnabled_, v92(v91) & 1);
        (*(void (**)(uint64_t, uint64_t))(v70 + 200))(ObjectType, v70);
        isa = UUID._bridgeToObjectiveC()().super.isa;
        OUTLINED_FUNCTION_91_5(v97);
        OUTLINED_FUNCTION_65(v90, sel_setUUID_);

        v94 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
        v95 = objc_msgSend(v94, sel_joinConversationWithConversationRequest_, v90);
        swift_unknownObjectRelease();

        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_52_1();
        return;
      }
      swift_unknownObjectRelease();
    }
    v74 = objc_msgSend(objc_msgSend((id)objc_opt_self(), sel_sharedInstance), sel_conversationManager);
    OUTLINED_FUNCTION_37_0();
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
    lazy protocol witness table accessor for type TUHandle and conformance NSObject((unint64_t *)&lazy protocol witness table cache variable for type TUConversationMember and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
    v75 = Set._bridgeToObjectiveC()().super.isa;
    OUTLINED_FUNCTION_53();
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
    lazy protocol witness table accessor for type TUHandle and conformance NSObject((unint64_t *)&lazy protocol witness table cache variable for type TUHandle and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
    OUTLINED_FUNCTION_25_2();
    v105 = Set._bridgeToObjectiveC()().super.isa;
    OUTLINED_FUNCTION_53();
    objc_msgSend((id)v69, sel_addRemoteMembers_otherInvitedHandles_toConversation_, v75, v105, v106);
    OUTLINED_FUNCTION_53();

    OUTLINED_FUNCTION_17_41(v105);
    return;
  }
  swift_bridgeObjectRetain();
  v19 = _CocoaArrayWrapper.endIndex.getter();
  if (!v19)
    goto LABEL_23;
LABEL_6:
  v104 = v11 & 0xC000000000000001;
  v1 = 4;
  v102 = xmmword_1BD6441D0;
  while (1)
  {
    v0 = (v1 - 4);
    if (v104)
      v20 = (char *)MEMORY[0x1C3B73D18](v1 - 4, v11);
    else
      v20 = (char *)*(id *)(v11 + 8 * v1);
    v21 = v20;
    v6 = v1 - 3;
    if (__OFADD__(v0, 1))
    {
      __break(1u);
      goto LABEL_37;
    }
    TUConversation.existingAddressesLowercased.getter();
    v23 = v22;
    v24 = OBJC_IVAR____TtC15ConversationKit14PickablePerson_handle;
    v25 = objc_msgSend(*(id *)&v21[OBJC_IVAR____TtC15ConversationKit14PickablePerson_handle], sel_value);
    v26 = v25;
    if (!v25)
    {
      v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v26 = (void *)MEMORY[0x1C3B72E00](v27);
      v25 = (id)swift_bridgeObjectRelease();
    }
    v28 = OUTLINED_FUNCTION_39((uint64_t)v25, sel__im_normalizedURIString);

    if (!v28)
      break;
    v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v8 = v30;

    specialized Set.contains(_:)(v29, (uint64_t)v8, v23);
    v32 = v31;
    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_27();
    if ((v32 & 1) != 0)
    {

    }
    else
    {
      v33 = *(_QWORD *)&v21[OBJC_IVAR____TtC15ConversationKit14PickablePerson_address];
      v34 = *(void **)&v21[OBJC_IVAR____TtC15ConversationKit14PickablePerson_address + 8];
      OUTLINED_FUNCTION_5_0();
      v8 = (Class)MEMORY[0x1C3B72E00](v33, v34);
      OUTLINED_FUNCTION_27();
      v35 = (id)TUCopyIDSCanonicalAddressForDestinationID();
      OUTLINED_FUNCTION_49_5();
      if (!v34)
        goto LABEL_19;
      v36 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v38 = v37;

      v39 = objc_msgSend((id)objc_opt_self(), sel_sharedManager);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
      v40 = OUTLINED_FUNCTION_15();
      *(_OWORD *)(v40 + 16) = v102;
      *(_QWORD *)(v40 + 32) = v36;
      *(_QWORD *)(v40 + 40) = v38;
      v8 = Array._bridgeToObjectiveC()().super.isa;
      OUTLINED_FUNCTION_21_0();
      LODWORD(v38) = objc_msgSend(v39, sel_isFaceTimeMultiwayAvailableForAnyDestinationInDestinations_, v8);

      if ((_DWORD)v38)
      {
        v8 = *(Class *)&v21[v24];
        v41 = objc_allocWithZone(MEMORY[0x1E0DBD2A0]);
        v42 = @nonobjc TUConversationMember.init(handle:nickname:)(v8, 0, 0);
        OUTLINED_FUNCTION_67_10(v42, v43, v44, v45, v46, v47, v48, v49, v96, v97, v98, v99, v100, v101, v102, *((uint64_t *)&v102 + 1), v103, v104, (uint64_t)v106,
          v107,
          v108,
          v109);
      }
      else
      {
LABEL_19:
        v50 = (id)TUNormalizedHandleForTUHandle();
        if (!v50)
          goto LABEL_41;
        specialized Set._Variant.insert(_:)((int)&v107, (int)v50, v51, v52, v53, v54, v55, v56, v96, v97, v98, v99, v100, v101, v102, *((uint64_t *)&v102 + 1), v103, v104, (uint64_t)v106,
          v107,
          v108,
          v109);
      }

      OUTLINED_FUNCTION_87_5();
    }
    ++v1;
    if (v6 == v19)
      goto LABEL_23;
  }
  __break(1u);
LABEL_41:
  __break(1u);
}

Swift::Void __swiftcall ConversationHUDDetailsViewController.peoplePickerCancelled()()
{
  void *v0;

  objc_msgSend(v0, sel_dismissPeoplePicker);
}

Swift::Void __swiftcall ConversationHUDDetailsViewController.peoplePickerAdded(_:shouldAddOtherInvitedToRemoteMembers:)(Swift::OpaquePointer _, Swift::Bool shouldAddOtherInvitedToRemoteMembers)
{
  char *v2;
  void *v3;
  uint64_t *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  os_log_type_t v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  uint8_t *v16;
  uint64_t v17;
  NSObject *v18;
  NSObject *v19;

  v3 = v2;
  v4 = *(uint64_t **)&v2[OBJC_IVAR____TtC15ConversationKit36ConversationHUDDetailsViewController_controlsManager];
  v5 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v6 = OUTLINED_FUNCTION_133_0(*v4);
  if (v6)
  {
    v18 = v6;
    (*(void (**)(void))((*v5 & *v4) + 0x270))();
    addPeople(_:toConversation:onActiveCall:shouldAddOtherInvitedToRemoteMembers:)();
    swift_unknownObjectRelease();
    objc_msgSend(v3, sel_dismissPeoplePicker);
  }
  else
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v7 = OUTLINED_FUNCTION_17_2();
    v19 = OUTLINED_FUNCTION_3(v7, (uint64_t)&static Logger.conversationControls);
    v8 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_5_9(v8, v9, v10, v11, v12, v13, v14, v15, v17, v19))
    {
      v16 = (uint8_t *)OUTLINED_FUNCTION_7_8();
      *(_WORD *)v16 = 0;
      OUTLINED_FUNCTION_130(&dword_1BD004000, v18, (os_log_type_t)v3, "Unable to add remote members, no conversation.", v16);
      OUTLINED_FUNCTION_60();
    }
  }

}

Swift::Void __swiftcall ConversationHUDDetailsViewController.dismissPeoplePicker()()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  NSObject *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  os_log_type_t v9;
  uint8_t *v10;
  id v11;
  _OWORD v12[2];
  _BYTE v13[24];
  uint64_t v14;

  v1 = v0;
  v2 = objc_msgSend(v0, sel_view);
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend(v2, sel_window);

    if (v4)
    {
      v5 = (void *)MEMORY[0x1C3B72E00](0x676E69646E69625FLL, 0xED0000726579614CLL);
      v6 = -[NSObject valueForKey:](v4, sel_valueForKey_, v5);

      if (v6)
      {
        _bridgeAnyObjectToAny(_:)();
        swift_unknownObjectRelease();
      }
      else
      {
        memset(v12, 0, sizeof(v12));
      }
      v7 = outlined init with take of Any?((uint64_t)v12, (uint64_t)v13);
      if (v14)
      {
        OUTLINED_FUNCTION_17_8(v7, &lazy cache variable for type metadata for CALayer);
        if ((swift_dynamicCast() & 1) != 0)
        {
          objc_msgSend(v11, sel_setTimeOffset_, 0.0);

        }
        else
        {

        }
      }
      else
      {

        outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v13, &demangling cache variable for type metadata for Any?);
      }
    }
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v8 = OUTLINED_FUNCTION_17_2();
    OUTLINED_FUNCTION_3(v8, (uint64_t)&static Logger.conversationControls);
    v9 = OUTLINED_FUNCTION_12_0();
    if (OUTLINED_FUNCTION_71_0(v4))
    {
      v10 = (uint8_t *)OUTLINED_FUNCTION_7_8();
      *(_WORD *)v10 = 0;
      OUTLINED_FUNCTION_130(&dword_1BD004000, v4, v9, "Dismiss peoplePicker", v10);
      OUTLINED_FUNCTION_60();
    }

    objc_msgSend(v1, sel_dismissViewControllerAnimated_completion_, 1, 0);
  }
  else
  {
    __break(1u);
  }
}

uint64_t type metadata accessor for ConversationHUDDetailsViewController()
{
  return objc_opt_self();
}

void outlined init with copy of Activity?()
{
  uint64_t *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_116_0();
  v1 = __swift_instantiateConcreteTypeFromMangledName(v0);
  OUTLINED_FUNCTION_5(v1);
  OUTLINED_FUNCTION_0();
}

id @nonobjc TUConversationMember.init(handle:nickname:)(void *a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v5;
  id v6;

  if (a3)
  {
    v5 = (void *)MEMORY[0x1C3B72E00](a2, a3);
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = 0;
  }
  v6 = objc_msgSend(v3, sel_initWithHandle_nickname_, a1, v5);

  return v6;
}

id @nonobjc TUJoinConversationRequest.init(remoteMembers:otherInvitedHandles:)()
{
  void *v0;
  Class isa;
  Class v2;
  id v3;

  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
  lazy protocol witness table accessor for type TUHandle and conformance NSObject((unint64_t *)&lazy protocol witness table cache variable for type TUConversationMember and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
  isa = Set._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
  lazy protocol witness table accessor for type TUHandle and conformance NSObject((unint64_t *)&lazy protocol witness table cache variable for type TUHandle and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
  v2 = Set._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v3 = objc_msgSend(v0, sel_initWithRemoteMembers_otherInvitedHandles_, isa, v2);

  return v3;
}

void outlined bridged method (ob) of @objc NSString._im_normalizedURI()(void *a1)
{
  uint64_t v1;
  id v2;

  v2 = objc_msgSend(a1, sel__im_normalizedURIString);
  OUTLINED_FUNCTION_37_0();
  if (v1)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    OUTLINED_FUNCTION_73();
  }
  OUTLINED_FUNCTION_18();
}

void specialized ReportSpamManager.presentReportAndBlockAlert(of:from:preparationHandler:)()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  objc_class *v38;
  NSBundle v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  __n128 *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  id v63;
  id v64;
  id v65;
  uint64_t v66;
  id v67;
  id v68;
  uint64_t v69;
  id v70;
  id v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  id v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  id v101;
  id v102;
  id v103;
  id v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  __int128 v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  __int128 v128[5];

  OUTLINED_FUNCTION_68_9();
  v2 = type metadata accessor for RecentsCallItem(0);
  OUTLINED_FUNCTION_96_5(v2, (uint64_t)&protocol witness table for RecentsCallItem);
  outlined init with copy of InCallControlsCollectionViewController.Action();
  v3 = (void *)objc_opt_self();
  v4 = objc_msgSend(v3, sel_conversationKit);
  OUTLINED_FUNCTION_7_13(0xD000000000000020, 0x80000001BD67D6D0);
  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_17_8(v5, (unint64_t *)&lazy cache variable for type metadata for UIAlertController);
  OUTLINED_FUNCTION_20_53((uint64_t)type metadata accessor for RecentsCallItem, (uint64_t)v0);
  LOBYTE(v128[0]) = OUTLINED_FUNCTION_81_12();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UIViewController.Type);
  v108 = OUTLINED_FUNCTION_94_3();
  v7 = v6;
  v101 = (id)objc_opt_self();
  objc_msgSend(objc_msgSend(v101, sel_currentDevice, 0xE000000000000000), sel_userInterfaceIdiom);
  OUTLINED_FUNCTION_49_5();
  OUTLINED_FUNCTION_17_8(v8, (unint64_t *)&lazy cache variable for type metadata for UIAlertAction);
  v9 = OUTLINED_FUNCTION_60_19();
  OUTLINED_FUNCTION_1_96(0xD00000000000001BLL, 0x80000001BD67D6B0);
  OUTLINED_FUNCTION_116_2();
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_28_3();
  v10 = (_QWORD *)OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_14_70(v10, v11, v12, v13, v14, v15, v16, v17, 0xE000000000000000, v78, v84, v89, type metadata accessor for RecentsCallItem != (uint64_t (*)(uint64_t))1, v98, (uint64_t)v101, v105, v108);
  v18 = OUTLINED_FUNCTION_13_67();
  v95 = OUTLINED_FUNCTION_46_25(v18, v19, v20, (uint64_t)partial apply for closure #1 in ReportSpamManager.presentReportAndBlockAlert(of:from:preparationHandler:), v21, v22, v23, v24, v74, v79, v85, v90, v94);
  v25 = OUTLINED_FUNCTION_26_37();
  OUTLINED_FUNCTION_16_15();
  OUTLINED_FUNCTION_1_96(0xD000000000000020, 0x80000001BD67D700);
  OUTLINED_FUNCTION_118_6();
  OUTLINED_FUNCTION_29_38(v26, v27, v28, v29, v30, v31, v32, v33, v75, v80, v86, v91, (uint64_t)v95, v99, (uint64_t)v102, v106, v109, v112, v114,
    v116,
    v118,
    v120,
    v122,
    v124,
    v126,
    v128[0]);
  v34 = (_QWORD *)OUTLINED_FUNCTION_15();
  v34[2] = v3;
  v35 = v87;
  v34[3] = v87;
  outlined init with take of Notice(v128, (uint64_t)(v34 + 4));
  v34[9] = v7;
  v34[10] = v1;
  OUTLINED_FUNCTION_25_2();
  OUTLINED_FUNCTION_13_67();
  v37 = OUTLINED_FUNCTION_37_32(0xE000000000000000, 0xD000000000000020, v36, (uint64_t)partial apply for closure #2 in ReportSpamManager.presentReportAndBlockAlert(of:from:preparationHandler:));
  v38 = (objc_class *)OUTLINED_FUNCTION_26_37();
  OUTLINED_FUNCTION_16_15();
  v39.super.isa = v38;
  OUTLINED_FUNCTION_49_2(v40, 0x80000001BD67D730, 0x61737265766E6F43, 0xEF74694B6E6F6974, v39);
  OUTLINED_FUNCTION_279();
  OUTLINED_FUNCTION_15();
  v41 = OUTLINED_FUNCTION_84_6();
  OUTLINED_FUNCTION_29_38(v41, v42, v43, v44, v45, v46, v47, v48, v76, v81, v87, v92, v96, v100, (uint64_t)v103, v107, v110, v113, v115,
    v117,
    v119,
    v121,
    v123,
    v125,
    v127,
    v128[0]);
  v49 = (_QWORD *)OUTLINED_FUNCTION_15();
  v49[2] = v111;
  v49[3] = v35;
  outlined init with take of Notice(v128, (uint64_t)(v49 + 4));
  v49[9] = v38;
  v49[10] = v7;
  v49[11] = v1;
  v50 = OUTLINED_FUNCTION_13_67();
  v53 = OUTLINED_FUNCTION_44_27(v50, v51, v52, (uint64_t)partial apply for closure #3 in ReportSpamManager.presentReportAndBlockAlert(of:from:preparationHandler:));
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v54 = (__n128 *)OUTLINED_FUNCTION_114_6();
  OUTLINED_FUNCTION_25_39(v54, (__n128)xmmword_1BD644B60, v55, v56, v57, v58, v59, v60, v61, v77, v82, v88, v93, v97);
  v62 = OUTLINED_FUNCTION_83_10();
  v63 = v37;
  v64 = v53;
  v65 = objc_msgSend(v104, sel_currentDevice);
  objc_msgSend(v65, sel_userInterfaceIdiom);
  OUTLINED_FUNCTION_8_10();
  if (v38 == (objc_class *)1)
  {
    OUTLINED_FUNCTION_27();
    v66 = OUTLINED_FUNCTION_15();
    *(_OWORD *)(v66 + 16) = v111;
    *(_QWORD *)(v66 + 32) = v63;
    *(_QWORD *)(v66 + 40) = v64;
    *(_QWORD *)(v66 + 48) = v62;
    OUTLINED_FUNCTION_27_34();
    OUTLINED_FUNCTION_83_10();
    v67 = v63;
    v68 = v64;
  }
  if ((unint64_t)type metadata accessor for RecentsCallItem >> 62)
    goto LABEL_12;
  OUTLINED_FUNCTION_104_5();
  OUTLINED_FUNCTION_5_0();
  for (; v65; v65 = (id)_CocoaArrayWrapper.endIndex.getter())
  {
    v69 = 4;
    while (1)
    {
      v70 = (id)(v69 - 4);
      if (((unint64_t)type metadata accessor for RecentsCallItem & 0xC000000000000001) != 0)
        OUTLINED_FUNCTION_32_31();
      v71 = *((id *)type metadata accessor for RecentsCallItem + v69);
      OUTLINED_FUNCTION_113_5();
      if (v73)
        break;
      OUTLINED_FUNCTION_28_42(v72, sel_addAction_);

      ++v69;
      if (v70 == v65)
        goto LABEL_10;
    }
    __break(1u);
LABEL_12:
    OUTLINED_FUNCTION_74_8();
    OUTLINED_FUNCTION_5_0();
  }
LABEL_10:

  OUTLINED_FUNCTION_39_2();
  OUTLINED_FUNCTION_9_67(v83, sel_presentViewController_animated_completion_, (uint64_t)v0);

  OUTLINED_FUNCTION_100_2();
  OUTLINED_FUNCTION_31_40();
}

{
  void *v0;
  unint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  objc_class *v41;
  NSBundle v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  __n128 *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  id v66;
  id v67;
  id v68;
  uint64_t v69;
  id v70;
  id v71;
  uint64_t v72;
  id v73;
  id v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  id v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  id v104;
  id v105;
  id v106;
  id v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  __int128 v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  __int128 v131[2];
  void *v132;
  uint64_t v133;
  _UNKNOWN **v134;

  OUTLINED_FUNCTION_68_9();
  v133 = OUTLINED_FUNCTION_17_8(v4, (unint64_t *)&lazy cache variable for type metadata for TUCall);
  v134 = &protocol witness table for TUCall;
  v132 = v0;
  v5 = (void *)objc_opt_self();
  v6 = v0;
  v7 = objc_msgSend(v5, sel_conversationKit);
  OUTLINED_FUNCTION_7_13(0xD000000000000020, 0x80000001BD67D6D0);
  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_17_8(v8, (unint64_t *)&lazy cache variable for type metadata for UIAlertController);
  OUTLINED_FUNCTION_20_53(v1, (uint64_t)v2);
  LOBYTE(v131[0]) = OUTLINED_FUNCTION_81_12();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UIViewController.Type);
  v111 = OUTLINED_FUNCTION_94_3();
  v10 = v9;
  v104 = (id)objc_opt_self();
  objc_msgSend(objc_msgSend(v104, sel_currentDevice, 0xE000000000000000), sel_userInterfaceIdiom);
  OUTLINED_FUNCTION_49_5();
  OUTLINED_FUNCTION_17_8(v11, (unint64_t *)&lazy cache variable for type metadata for UIAlertAction);
  v12 = OUTLINED_FUNCTION_60_19();
  OUTLINED_FUNCTION_1_96(0xD00000000000001BLL, 0x80000001BD67D6B0);
  OUTLINED_FUNCTION_116_2();
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_28_3();
  v13 = (_QWORD *)OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_14_70(v13, v14, v15, v16, v17, v18, v19, v20, 0xE000000000000000, v81, v87, v92, v1 != 1, v101, (uint64_t)v104, v108, v111);
  v21 = OUTLINED_FUNCTION_13_67();
  v98 = OUTLINED_FUNCTION_46_25(v21, v22, v23, (uint64_t)partial apply for closure #1 in ReportSpamManager.presentReportAndBlockAlert(of:from:preparationHandler:), v24, v25, v26, v27, v77, v82, v88, v93, v97);
  v28 = OUTLINED_FUNCTION_26_37();
  OUTLINED_FUNCTION_16_15();
  OUTLINED_FUNCTION_1_96(0xD000000000000020, 0x80000001BD67D700);
  OUTLINED_FUNCTION_118_6();
  OUTLINED_FUNCTION_29_38(v29, v30, v31, v32, v33, v34, v35, v36, v78, v83, v89, v94, (uint64_t)v98, v102, (uint64_t)v105, v109, v112, v115, v117,
    v119,
    v121,
    v123,
    v125,
    v127,
    v129,
    v131[0]);
  v37 = (_QWORD *)OUTLINED_FUNCTION_15();
  v37[2] = v5;
  v38 = v90;
  v37[3] = v90;
  outlined init with take of Notice(v131, (uint64_t)(v37 + 4));
  v37[9] = v10;
  v37[10] = v3;
  OUTLINED_FUNCTION_25_2();
  OUTLINED_FUNCTION_13_67();
  v40 = OUTLINED_FUNCTION_37_32(0xE000000000000000, 0xD000000000000020, v39, (uint64_t)partial apply for closure #2 in ReportSpamManager.presentReportAndBlockAlert(of:from:preparationHandler:));
  v41 = (objc_class *)OUTLINED_FUNCTION_26_37();
  OUTLINED_FUNCTION_16_15();
  v42.super.isa = v41;
  OUTLINED_FUNCTION_49_2(v43, 0x80000001BD67D730, 0x61737265766E6F43, 0xEF74694B6E6F6974, v42);
  OUTLINED_FUNCTION_279();
  OUTLINED_FUNCTION_15();
  v44 = OUTLINED_FUNCTION_84_6();
  OUTLINED_FUNCTION_29_38(v44, v45, v46, v47, v48, v49, v50, v51, v79, v84, v90, v95, v99, v103, (uint64_t)v106, v110, v113, v116, v118,
    v120,
    v122,
    v124,
    v126,
    v128,
    v130,
    v131[0]);
  v52 = (_QWORD *)OUTLINED_FUNCTION_15();
  v52[2] = v114;
  v52[3] = v38;
  outlined init with take of Notice(v131, (uint64_t)(v52 + 4));
  v52[9] = v41;
  v52[10] = v10;
  v52[11] = v3;
  v53 = OUTLINED_FUNCTION_13_67();
  v56 = OUTLINED_FUNCTION_44_27(v53, v54, v55, (uint64_t)partial apply for closure #3 in ReportSpamManager.presentReportAndBlockAlert(of:from:preparationHandler:));
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v57 = (__n128 *)OUTLINED_FUNCTION_114_6();
  OUTLINED_FUNCTION_25_39(v57, (__n128)xmmword_1BD644B60, v58, v59, v60, v61, v62, v63, v64, v80, v85, v91, v96, v100);
  v65 = OUTLINED_FUNCTION_83_10();
  v66 = v40;
  v67 = v56;
  v68 = objc_msgSend(v107, sel_currentDevice);
  objc_msgSend(v68, sel_userInterfaceIdiom);
  OUTLINED_FUNCTION_8_10();
  if (v41 == (objc_class *)1)
  {
    OUTLINED_FUNCTION_27();
    v69 = OUTLINED_FUNCTION_15();
    *(_OWORD *)(v69 + 16) = v114;
    *(_QWORD *)(v69 + 32) = v66;
    *(_QWORD *)(v69 + 40) = v67;
    *(_QWORD *)(v69 + 48) = v65;
    OUTLINED_FUNCTION_27_34();
    OUTLINED_FUNCTION_83_10();
    v70 = v66;
    v71 = v67;
  }
  if (v1 >> 62)
    goto LABEL_12;
  OUTLINED_FUNCTION_104_5();
  OUTLINED_FUNCTION_5_0();
  for (; v68; v68 = (id)_CocoaArrayWrapper.endIndex.getter())
  {
    v72 = 4;
    while (1)
    {
      v73 = (id)(v72 - 4);
      if ((v1 & 0xC000000000000001) != 0)
        OUTLINED_FUNCTION_32_31();
      v74 = *(id *)(v1 + 8 * v72);
      OUTLINED_FUNCTION_113_5();
      if (v76)
        break;
      OUTLINED_FUNCTION_28_42(v75, sel_addAction_);

      ++v72;
      if (v73 == v68)
        goto LABEL_10;
    }
    __break(1u);
LABEL_12:
    OUTLINED_FUNCTION_74_8();
    OUTLINED_FUNCTION_5_0();
  }
LABEL_10:

  OUTLINED_FUNCTION_39_2();
  OUTLINED_FUNCTION_9_67(v86, sel_presentViewController_animated_completion_, (uint64_t)v2);

  OUTLINED_FUNCTION_100_2();
  OUTLINED_FUNCTION_31_40();
}

uint64_t specialized ReportSpamManager.presentBlockAllParticipantsAlert(of:from:preparationHandler:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  void *v15;
  void *v16;
  objc_class *v17;
  NSBundle v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t inited;
  uint64_t v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  id v44;
  NSObject *v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v52;
  id v53;
  void *v54;
  uint64_t v55;
  void *v56;
  __int128 v57[2];
  uint64_t v58;
  _BYTE v59[48];

  v9 = type metadata accessor for RecentsCallItem(0);
  OUTLINED_FUNCTION_96_5(v9, (uint64_t)&protocol witness table for RecentsCallItem);
  outlined init with copy of InCallControlsCollectionViewController.Action();
  RecentsCallItem.tuHandles.getter();
  specialized Sequence.compactMap<A>(_:)(v10);
  v12 = v11;
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(v12 + 16);
  swift_bridgeObjectRelease();
  RecentsCallItem.isGroupFaceTimeCall.getter();
  if ((v14 & 1) == 0 || v13)
  {
    if (one-time initialization token for logger != -1)
      swift_once();
    v43 = OUTLINED_FUNCTION_17_2();
    __swift_project_value_buffer(v43, (uint64_t)static ReportSpamManager.logger);
    v44 = a2;
    v45 = Logger.logObject.getter();
    static os_log_type_t.default.getter();
    if (OUTLINED_FUNCTION_71_0(v45))
    {
      OUTLINED_FUNCTION_105();
      *(_QWORD *)&v57[0] = OUTLINED_FUNCTION_105();
      v58 = OUTLINED_FUNCTION_65_13(4.8151e-34);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UIViewController.Type);
      v46 = String.init<A>(describing:)();
      v58 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v46, v47, (uint64_t *)v57);
      OUTLINED_FUNCTION_127_1();

      OUTLINED_FUNCTION_21_0();
      v48 = OUTLINED_FUNCTION_62_17();
      v58 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v48, 0x80000001BD67D640, (uint64_t *)v57);
      OUTLINED_FUNCTION_128_2();
      OUTLINED_FUNCTION_52_22(&dword_1BD004000, v49, v50, "%s: in %s, callItem is NOT a GFT with all unknown contacts. Cannot present block all participant alert.");
      OUTLINED_FUNCTION_21_31();
      OUTLINED_FUNCTION_60();
    }

  }
  else
  {
    v54 = a2;
    *(_QWORD *)&v57[0] = swift_getObjectType();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UIViewController.Type);
    v55 = String.init<A>(describing:)();
    v56 = v15;
    OUTLINED_FUNCTION_17_8(v55, (unint64_t *)&lazy cache variable for type metadata for UIAlertController);
    v16 = (void *)objc_opt_self();
    v17 = (objc_class *)OUTLINED_FUNCTION_57_9(v16);
    OUTLINED_FUNCTION_16_15();
    v18.super.isa = v17;
    OUTLINED_FUNCTION_49_2(v19, 0x80000001BD67D680, 0x61737265766E6F43, 0xEF74694B6E6F6974, v18);
    OUTLINED_FUNCTION_102_4();
    v20 = OUTLINED_FUNCTION_42_27();
    v21 = OUTLINED_FUNCTION_17_8((uint64_t)v20, (unint64_t *)&lazy cache variable for type metadata for UIAlertAction);
    v22 = OUTLINED_FUNCTION_5_39(v21, (const char *)(v4 + 1326));
    OUTLINED_FUNCTION_16_15();
    OUTLINED_FUNCTION_1_96(v23, 0x80000001BD67A3E0);
    OUTLINED_FUNCTION_88_5();
    outlined init with copy of RadarReporting((uint64_t)v59, (uint64_t)v57);
    v24 = OUTLINED_FUNCTION_15();
    *(_QWORD *)(v24 + 16) = v55;
    *(_QWORD *)(v24 + 24) = v56;
    outlined init with take of Notice(v57, v24 + 32);
    OUTLINED_FUNCTION_90_8();
    OUTLINED_FUNCTION_30_39();
    v26 = OUTLINED_FUNCTION_37_32(v5, 0xD00000000000001BLL, v25, (uint64_t)partial apply for closure #1 in ReportSpamManager.presentBlockAllParticipantsAlert(of:from:preparationHandler:));
    v27 = OUTLINED_FUNCTION_5_39((uint64_t)v26, sel_conversationKit);
    OUTLINED_FUNCTION_16_15();
    OUTLINED_FUNCTION_7_13(0xD00000000000001BLL, 0x80000001BD67D6B0);
    OUTLINED_FUNCTION_271_0();
    v28 = OUTLINED_FUNCTION_15();
    OUTLINED_FUNCTION_28_3();
    v29 = (_QWORD *)OUTLINED_FUNCTION_15();
    v29[2] = v55;
    v29[3] = v56;
    v29[4] = v28;
    v29[5] = a3;
    v29[6] = a4;
    v30 = OUTLINED_FUNCTION_30_39();
    v33 = OUTLINED_FUNCTION_56_22(v30, v31, v32, (uint64_t)partial apply for closure #2 in ReportSpamManager.presentBlockAllParticipantsAlert(of:from:preparationHandler:));
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1BD6441C0;
    *(_QWORD *)(inited + 32) = v26;
    *(_QWORD *)(inited + 40) = v33;
    *(_QWORD *)&v57[0] = inited;
    specialized Array._endMutation()();
    v35 = *(_QWORD *)&v57[0];
    if (*(_QWORD *)&v57[0] >> 62)
      goto LABEL_18;
    OUTLINED_FUNCTION_105_3();
    v36 = v26;
    v37 = v33;
    OUTLINED_FUNCTION_5_0();
    for (; a3; a3 = _CocoaArrayWrapper.endIndex.getter())
    {
      v38 = 4;
      while (1)
      {
        v39 = v38 - 4;
        if ((v35 & 0xC000000000000001) != 0)
          OUTLINED_FUNCTION_32_31();
        v40 = *(id *)(v35 + 8 * v38);
        OUTLINED_FUNCTION_113_5();
        if (v42)
          break;
        OUTLINED_FUNCTION_28_42(v41, sel_addAction_);

        ++v38;
        if (v39 == a3)
          goto LABEL_10;
      }
      __break(1u);
LABEL_18:
      OUTLINED_FUNCTION_73_7();
      v52 = v26;
      v53 = v33;
      OUTLINED_FUNCTION_5_0();
    }
LABEL_10:

    OUTLINED_FUNCTION_39_2();
    OUTLINED_FUNCTION_9_67(v54, sel_presentViewController_animated_completion_, (uint64_t)v20);

  }
  return OUTLINED_FUNCTION_100_2();
}

uint64_t specialized ReportSpamManager.presentBlockAllParticipantsAlert(of:from:preparationHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  void *v11;
  void *v12;
  objc_class *v13;
  NSBundle v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t inited;
  uint64_t v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  id v40;
  NSObject *v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v48;
  id v49;
  void *v50;
  uint64_t v51;
  void *v52;
  __int128 v53[2];
  uint64_t v54;
  _QWORD v55[6];

  OUTLINED_FUNCTION_116_0();
  v55[3] = OUTLINED_FUNCTION_17_8(v10, (unint64_t *)&lazy cache variable for type metadata for TUCall);
  v55[4] = &protocol witness table for TUCall;
  v55[0] = v5;
  if (TUCall.isGroupFaceTimeWithAllUnknownContacts.getter((uint64_t)v5))
  {
    v50 = v4;
    *(_QWORD *)&v53[0] = swift_getObjectType();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UIViewController.Type);
    v51 = String.init<A>(describing:)();
    v52 = v11;
    OUTLINED_FUNCTION_17_8(v51, (unint64_t *)&lazy cache variable for type metadata for UIAlertController);
    v12 = (void *)objc_opt_self();
    v13 = (objc_class *)OUTLINED_FUNCTION_57_9(v12);
    OUTLINED_FUNCTION_16_15();
    v14.super.isa = v13;
    OUTLINED_FUNCTION_49_2(v15, 0x80000001BD67D680, 0x61737265766E6F43, 0xEF74694B6E6F6974, v14);
    OUTLINED_FUNCTION_102_4();
    v16 = OUTLINED_FUNCTION_42_27();
    v17 = OUTLINED_FUNCTION_17_8((uint64_t)v16, (unint64_t *)&lazy cache variable for type metadata for UIAlertAction);
    v18 = OUTLINED_FUNCTION_5_39(v17, (const char *)(v6 + 1326));
    OUTLINED_FUNCTION_16_15();
    OUTLINED_FUNCTION_1_96(v19, 0x80000001BD67A3E0);
    OUTLINED_FUNCTION_88_5();
    outlined init with copy of RadarReporting((uint64_t)v55, (uint64_t)v53);
    v20 = OUTLINED_FUNCTION_15();
    *(_QWORD *)(v20 + 16) = v51;
    *(_QWORD *)(v20 + 24) = v52;
    outlined init with take of Notice(v53, v20 + 32);
    OUTLINED_FUNCTION_90_8();
    OUTLINED_FUNCTION_30_39();
    v22 = OUTLINED_FUNCTION_37_32(v7, 0xD00000000000001BLL, v21, (uint64_t)partial apply for closure #1 in ReportSpamManager.presentBlockAllParticipantsAlert(of:from:preparationHandler:));
    v23 = OUTLINED_FUNCTION_5_39((uint64_t)v22, sel_conversationKit);
    OUTLINED_FUNCTION_16_15();
    OUTLINED_FUNCTION_7_13(0xD00000000000001BLL, 0x80000001BD67D6B0);
    OUTLINED_FUNCTION_271_0();
    v24 = OUTLINED_FUNCTION_15();
    OUTLINED_FUNCTION_28_3();
    v25 = (_QWORD *)OUTLINED_FUNCTION_15();
    v25[2] = v51;
    v25[3] = v52;
    v25[4] = v24;
    v25[5] = a3;
    v25[6] = a4;
    v26 = OUTLINED_FUNCTION_30_39();
    v29 = OUTLINED_FUNCTION_56_22(v26, v27, v28, (uint64_t)partial apply for closure #2 in ReportSpamManager.presentBlockAllParticipantsAlert(of:from:preparationHandler:));
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1BD6441C0;
    *(_QWORD *)(inited + 32) = v22;
    *(_QWORD *)(inited + 40) = v29;
    *(_QWORD *)&v53[0] = inited;
    specialized Array._endMutation()();
    v31 = *(_QWORD *)&v53[0];
    if (*(_QWORD *)&v53[0] >> 62)
      goto LABEL_17;
    OUTLINED_FUNCTION_105_3();
    v32 = v22;
    v33 = v29;
    OUTLINED_FUNCTION_5_0();
    for (; a3; a3 = _CocoaArrayWrapper.endIndex.getter())
    {
      v34 = 4;
      while (1)
      {
        v35 = v34 - 4;
        if ((v31 & 0xC000000000000001) != 0)
          OUTLINED_FUNCTION_32_31();
        v36 = *(id *)(v31 + 8 * v34);
        OUTLINED_FUNCTION_113_5();
        if (v38)
          break;
        OUTLINED_FUNCTION_28_42(v37, sel_addAction_);

        ++v34;
        if (v35 == a3)
          goto LABEL_9;
      }
      __break(1u);
LABEL_17:
      OUTLINED_FUNCTION_73_7();
      v48 = v22;
      v49 = v29;
      OUTLINED_FUNCTION_5_0();
    }
LABEL_9:

    OUTLINED_FUNCTION_39_2();
    OUTLINED_FUNCTION_9_67(v50, sel_presentViewController_animated_completion_, (uint64_t)v16);

  }
  else
  {
    if (one-time initialization token for logger != -1)
      swift_once();
    v39 = OUTLINED_FUNCTION_17_2();
    __swift_project_value_buffer(v39, (uint64_t)static ReportSpamManager.logger);
    v40 = v4;
    v41 = Logger.logObject.getter();
    static os_log_type_t.default.getter();
    if (OUTLINED_FUNCTION_71_0(v41))
    {
      OUTLINED_FUNCTION_105();
      *(_QWORD *)&v53[0] = OUTLINED_FUNCTION_105();
      v54 = OUTLINED_FUNCTION_65_13(4.8151e-34);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UIViewController.Type);
      v42 = String.init<A>(describing:)();
      v54 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v42, v43, (uint64_t *)v53);
      OUTLINED_FUNCTION_127_1();

      OUTLINED_FUNCTION_21_0();
      v44 = OUTLINED_FUNCTION_62_17();
      v54 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v44, 0x80000001BD67D640, (uint64_t *)v53);
      OUTLINED_FUNCTION_128_2();
      OUTLINED_FUNCTION_52_22(&dword_1BD004000, v45, v46, "%s: in %s, callItem is NOT a GFT with all unknown contacts. Cannot present block all participant alert.");
      OUTLINED_FUNCTION_21_31();
      OUTLINED_FUNCTION_60();
    }

  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v55);
}

uint64_t specialized ReportSpamManager.presentReportSingleParticipantAlert(of:from:preparationHandler:)(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, os_log_type_t a5)
{
  void *v5;
  void *v6;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  objc_class *v15;
  NSBundle v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  objc_class *v29;
  NSBundle v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  id v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  id v50;
  uint64_t v51;
  void *v52;
  __int128 v54[2];
  _QWORD v55[5];

  OUTLINED_FUNCTION_116_0();
  v55[3] = OUTLINED_FUNCTION_17_8(v9, (unint64_t *)&lazy cache variable for type metadata for TUCall);
  v55[4] = &protocol witness table for TUCall;
  v55[0] = v6;
  v10 = v6;
  TUCall.formattedInitiatorHandle.getter();
  if (v12)
  {
    v13 = v11;
    v14 = v12;
    v50 = (id)objc_opt_self();
    v15 = (objc_class *)objc_msgSend(v50, sel_conversationKit);
    OUTLINED_FUNCTION_16_15();
    OUTLINED_FUNCTION_2_15();
    v16.super.isa = v15;
    OUTLINED_FUNCTION_49_2(v17, v18, v19, v20, v16);

    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v21 = OUTLINED_FUNCTION_15();
    *(_OWORD *)(v21 + 16) = xmmword_1BD6441D0;
    *(_QWORD *)(v21 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v21 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v21 + 32) = v13;
    *(_QWORD *)(v21 + 40) = v14;
    v22 = String.init(format:_:)();
    v24 = v23;
    v25 = swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_17_8(v25, (unint64_t *)&lazy cache variable for type metadata for UIAlertController);
    v26 = OUTLINED_FUNCTION_20_53(v22, v24);
    *(_QWORD *)&v54[0] = swift_getObjectType();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UIViewController.Type);
    v51 = String.init<A>(describing:)();
    v28 = v27;
    OUTLINED_FUNCTION_17_8(v51, (unint64_t *)&lazy cache variable for type metadata for UIAlertAction);
    v29 = (objc_class *)objc_msgSend(v50, sel_conversationKit);
    OUTLINED_FUNCTION_16_15();
    v30.super.isa = v29;
    v31 = OUTLINED_FUNCTION_49_2(0xD00000000000001BLL, 0x80000001BD67D6B0, 0x61737265766E6F43, 0xEF74694B6E6F6974, v30);
    v33 = v32;

    v34 = OUTLINED_FUNCTION_15();
    OUTLINED_FUNCTION_112_5();
    v35 = (_QWORD *)OUTLINED_FUNCTION_15();
    v52 = v5;
    v35[2] = v51;
    v35[3] = v28;
    v35[4] = v34;
    v35[5] = a3;
    v35[6] = a4;
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_99_4();
    v36 = @nonobjc UIAlertAction.__allocating_init(title:style:handler:)(v31, v33, 1, (uint64_t)partial apply for closure #1 in ReportSpamManager.presentReportSingleParticipantAlert(of:from:preparationHandler:));
    v37 = objc_msgSend(v50, sel_conversationKit);
    OUTLINED_FUNCTION_16_15();
    v39 = OUTLINED_FUNCTION_7_13(v38, 0x80000001BD67D790);
    v41 = v40;

    v42 = OUTLINED_FUNCTION_15();
    swift_weakInit();
    outlined init with copy of RadarReporting((uint64_t)v55, (uint64_t)v54);
    v43 = (_QWORD *)OUTLINED_FUNCTION_15();
    v43[2] = v51;
    v43[3] = v28;
    outlined init with take of Notice(v54, (uint64_t)(v43 + 4));
    v43[9] = v42;
    v43[10] = a3;
    v43[11] = a4;
    OUTLINED_FUNCTION_99_4();
    v44 = @nonobjc UIAlertAction.__allocating_init(title:style:handler:)(v39, v41, 2, (uint64_t)partial apply for closure #2 in ReportSpamManager.presentReportSingleParticipantAlert(of:from:preparationHandler:));
    objc_msgSend(v26, sel_addAction_, v36);
    OUTLINED_FUNCTION_65(v26, sel_addAction_);
    OUTLINED_FUNCTION_9_67(v52, sel_presentViewController_animated_completion_, (uint64_t)v26);

  }
  else
  {
    if (one-time initialization token for logger != -1)
      swift_once();
    v45 = OUTLINED_FUNCTION_17_2();
    v46 = OUTLINED_FUNCTION_3(v45, (uint64_t)static ReportSpamManager.logger);
    v47 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_51_3(v47))
    {
      v48 = (uint8_t *)OUTLINED_FUNCTION_7_8();
      *(_WORD *)v48 = 0;
      OUTLINED_FUNCTION_130(&dword_1BD004000, v46, a5, "initiator handle is nil so we could not report the call", v48);
      OUTLINED_FUNCTION_60();
    }

    if (a3)
      a3(1);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v55);
}

uint64_t sub_1BD227418()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BD22743C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = OUTLINED_FUNCTION_14_2();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_release();
  v3 = v0 + ((v2 + 24) & ~v2);
  type metadata accessor for Participant.State(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 5u:
      v4 = OUTLINED_FUNCTION_33();
      OUTLINED_FUNCTION_75(v4);
      break;
    case 4u:
      v8 = OUTLINED_FUNCTION_33();
      OUTLINED_FUNCTION_75(v8);
      v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      v10 = v3 + *(int *)(v9 + 48);
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v10 + 120) >= 2uLL)
        __swift_destroy_boxed_opaque_existential_1(v10 + 96);
      if (*(_QWORD *)(v10 + 312))
      {
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
      }
      if (*(_QWORD *)(v3 + *(int *)(v9 + 64) + 8))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      break;
    default:
      break;
  }
  v5 = type metadata accessor for UUID();
  OUTLINED_FUNCTION_91_5(*(_QWORD *)(v5 - 8));
  v6 = (id *)(v3 + *(int *)(v1 + 28));
  if (*v6)
  {

    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  OUTLINED_FUNCTION_33();
  if (!OUTLINED_FUNCTION_7_23())
    OUTLINED_FUNCTION_5_62();
  type metadata accessor for Participant.CountdownInfo(0);
  if (!OUTLINED_FUNCTION_7_23())
    OUTLINED_FUNCTION_5_62();
  swift_release();
  return swift_deallocObject();
}

void partial apply for closure #1 in ConversationHUDDetailsViewController.showKickParticipantAlert(toKick:)(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_14_2();
  closure #1 in ConversationHUDDetailsViewController.showKickParticipantAlert(toKick:)(a1, *(_QWORD *)(v1 + 16));
}

void partial apply for closure #2 in ConversationHUDDetailsViewController.showKickParticipantAlert(toKick:)(uint64_t a1)
{
  uint64_t v1;

  closure #2 in ConversationHUDDetailsViewController.showKickParticipantAlert(toKick:)(a1, v1);
}

uint64_t sub_1BD227654()
{
  swift_release();
  OUTLINED_FUNCTION_110_5();
  OUTLINED_FUNCTION_109_8();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ConversationHUDDetailsViewController.handleShareLinkAction(hostingViewController:sourceView:)()
{
  uint64_t v0;

  return closure #1 in ConversationHUDDetailsViewController.handleShareLinkAction(hostingViewController:sourceView:)(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32));
}

void sub_1BD22768C(uint64_t **a1@<X0>, uint64_t *a2@<X8>)
{
  *a2 = OUTLINED_FUNCTION_13_5(**a1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD2276C4(_QWORD **a1@<X0>, _BYTE *a2@<X8>)
{
  *a2 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x98))() & 1;
  OUTLINED_FUNCTION_0();
}

void sub_1BD227704(unsigned __int8 *a1, _QWORD **a2)
{
  (*(void (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & **a2) + 0xA0))(*a1);
  OUTLINED_FUNCTION_0();
}

uint64_t method lookup function for ConversationHUDDetailsViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ConversationHUDDetailsViewController.detailsDelegate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of ConversationHUDDetailsViewController.detailsDelegate.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of ConversationHUDDetailsViewController.detailsDelegate.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of ConversationHUDDetailsViewController.isOnScreen.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of ConversationHUDDetailsViewController.isOnScreen.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of ConversationHUDDetailsViewController.isOnScreen.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of ConversationHUDDetailsViewController.__allocating_init(controlsManager:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 248))();
}

uint64_t dispatch thunk of ConversationHUDDetailsViewController.updateScrollableInsets(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of ConversationHUDDetailsViewController.collectionView.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x108))();
}

void outlined init with copy of InCallControlsCollectionViewController.Action()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;

  OUTLINED_FUNCTION_116_0();
  v1 = v0(0);
  OUTLINED_FUNCTION_5(v1);
  OUTLINED_FUNCTION_0();
}

uint64_t partial apply for closure #1 in ReportSpamManager.presentBlockAllParticipantsAlert(of:from:preparationHandler:)(uint64_t a1)
{
  return partial apply for closure #1 in ReportSpamManager.presentBlockAllParticipantsAlert(of:from:preparationHandler:)(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD *, _QWORD, _QWORD))closure #1 in ReportSpamManager.presentBlockAllParticipantsAlert(of:from:preparationHandler:));
}

uint64_t partial apply for closure #2 in ReportSpamManager.presentBlockAllParticipantsAlert(of:from:preparationHandler:)(uint64_t a1)
{
  return partial apply for closure #2 in ReportSpamManager.presentBlockAllParticipantsAlert(of:from:preparationHandler:)(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))closure #2 in ReportSpamManager.presentBlockAllParticipantsAlert(of:from:preparationHandler:));
}

uint64_t partial apply for closure #1 in ReportSpamManager.presentReportAndBlockAlert(of:from:preparationHandler:)(uint64_t a1)
{
  return partial apply for closure #2 in ReportSpamManager.presentBlockAllParticipantsAlert(of:from:preparationHandler:)(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))closure #1 in ReportSpamManager.presentReportAndBlockAlert(of:from:preparationHandler:));
}

uint64_t partial apply for closure #2 in ReportSpamManager.presentReportAndBlockAlert(of:from:preparationHandler:)(uint64_t a1)
{
  return partial apply for closure #1 in ReportSpamManager.presentBlockAllParticipantsAlert(of:from:preparationHandler:)(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD *, _QWORD, _QWORD))closure #2 in ReportSpamManager.presentReportAndBlockAlert(of:from:preparationHandler:));
}

uint64_t sub_1BD227898()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t partial apply for closure #3 in ReportSpamManager.presentReportAndBlockAlert(of:from:preparationHandler:)(uint64_t a1)
{
  return partial apply for closure #3 in ReportSpamManager.presentReportAndBlockAlert(of:from:preparationHandler:)(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD *, _QWORD, _QWORD, _QWORD))closure #3 in ReportSpamManager.presentReportAndBlockAlert(of:from:preparationHandler:));
}

uint64_t sub_1BD2278CC()
{
  uint64_t v0;

  OUTLINED_FUNCTION_110_5();
  OUTLINED_FUNCTION_109_8();
  return swift_deallocObject();
}

void partial apply for closure #1 in closure #1 in ConversationHUDDetailsViewController.handleShareLinkAction(hostingViewController:sourceView:)(void *a1, void *a2)
{
  void **v2;

  closure #1 in closure #1 in ConversationHUDDetailsViewController.handleShareLinkAction(hostingViewController:sourceView:)(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t sub_1BD227904()
{
  uint64_t v0;

  OUTLINED_FUNCTION_110_5();
  OUTLINED_FUNCTION_109_8();

  return swift_deallocObject();
}

void partial apply for closure #1 in closure #1 in closure #1 in ConversationHUDDetailsViewController.handleShareLinkAction(hostingViewController:sourceView:)()
{
  void **v0;

  closure #1 in closure #1 in closure #1 in ConversationHUDDetailsViewController.handleShareLinkAction(hostingViewController:sourceView:)(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t outlined assign with take of LinkShareCoordinatorProtocol?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for LinkShareCoordinatorProtocol?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t objectdestroy_13Tm_0()
{
  uint64_t v0;

  OUTLINED_FUNCTION_89_2();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  if (*(_QWORD *)(v0 + 72))
    swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ReportSpamManager.presentBlockAllParticipantsAlert(of:from:preparationHandler:)(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD *, _QWORD, _QWORD))
{
  _QWORD *v2;

  return a2(a1, v2[2], v2[3], v2 + 4, v2[9], v2[10]);
}

uint64_t objectdestroy_19Tm_0()
{
  uint64_t v0;

  OUTLINED_FUNCTION_89_2();
  swift_release();
  if (*(_QWORD *)(v0 + 40))
    swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ReportSpamManager.presentReportSingleParticipantAlert(of:from:preparationHandler:)(uint64_t a1)
{
  return partial apply for closure #2 in ReportSpamManager.presentBlockAllParticipantsAlert(of:from:preparationHandler:)(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))closure #1 in ReportSpamManager.presentReportSingleParticipantAlert(of:from:preparationHandler:));
}

uint64_t partial apply for closure #2 in ReportSpamManager.presentBlockAllParticipantsAlert(of:from:preparationHandler:)(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6]);
}

uint64_t objectdestroy_32Tm()
{
  uint64_t v0;

  OUTLINED_FUNCTION_89_2();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  swift_release();
  if (*(_QWORD *)(v0 + 80))
    swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in ReportSpamManager.presentReportSingleParticipantAlert(of:from:preparationHandler:)(uint64_t a1)
{
  return partial apply for closure #3 in ReportSpamManager.presentReportAndBlockAlert(of:from:preparationHandler:)(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD *, _QWORD, _QWORD, _QWORD))closure #2 in ReportSpamManager.presentReportSingleParticipantAlert(of:from:preparationHandler:));
}

uint64_t partial apply for closure #3 in ReportSpamManager.presentReportAndBlockAlert(of:from:preparationHandler:)(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD *, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  return a2(a1, v2[2], v2[3], v2 + 4, v2[9], v2[10], v2[11]);
}

uint64_t OUTLINED_FUNCTION_85_8()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_87_5()
{
  uint64_t v0;

}

uint64_t OUTLINED_FUNCTION_99_4()
{
  uint64_t v0;

  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v0);
}

void OUTLINED_FUNCTION_102_4()
{
  void *v0;

}

id OUTLINED_FUNCTION_104_5()
{
  void *v0;

  return v0;
}

void OUTLINED_FUNCTION_109_8()
{
  uint64_t v0;

}

uint64_t OUTLINED_FUNCTION_112_5()
{
  return swift_unknownObjectWeakInit();
}

void OUTLINED_FUNCTION_116_2()
{
  void *v0;

}

void OUTLINED_FUNCTION_118_6()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_127_1()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_128_2()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t CallScreening.StateTransitioner.trackingServce.getter()
{
  return swift_retain();
}

void CallScreening.StateTransitioner.canScreenCall.getter()
{
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

void CallScreening.StateTransitioner.onEnterAnsweringState.getter()
{
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

void CallScreening.StateTransitioner.onEnterScreeningState.getter()
{
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

void CallScreening.StateTransitioner.onExitScreeningState.getter()
{
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

void CallScreening.StateTransitioner.endCall.getter()
{
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

void CallScreening.StateTransitioner.transition(state:transition:)(__int128 *a1, uint64_t a2)
{
  uint64_t v3;
  _BYTE v4[48];
  uint64_t v6;

  v6 = a2;
  outlined init with take of CallScreening.State(a1, (uint64_t)&v3);
  outlined init with take of CallScreening.State(a1, (uint64_t)v4);
  __asm { BR              X11 }
}

uint64_t sub_1BD227C68()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v10 = (v5 & 0xE0) == 0x80 && *(_QWORD *)(v9 - 72) == 1;
  if (v10 && !v19 && v5 == 128)
  {
    v12 = *(_QWORD *)(v1 + 8);
    v11 = *(_QWORD *)(v1 + 16);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CKStateMachineContainer<CallScreening.State>);
    v13 = OUTLINED_FUNCTION_7_0();
    OUTLINED_FUNCTION_0_100();
    result = swift_retain();
    *v0 = v12;
    v0[1] = v11;
    v0[2] = v13;
    v0[3] = 0;
    v0[4] = 0;
    v0[5] = 0;
    v0[6] = 0x2000000000000000;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CKStateMachine<CallScreening.State>.Error);
    lazy protocol witness table accessor for type CKStateMachine<CallScreening.State>.Error and conformance CKStateMachine<A>.Error();
    swift_allocError();
    *(_QWORD *)v14 = v18;
    *(_QWORD *)(v14 + 8) = v17;
    *(_QWORD *)(v14 + 16) = v3;
    *(_QWORD *)(v14 + 24) = v7;
    *(_QWORD *)(v14 + 32) = v2;
    *(_QWORD *)(v14 + 40) = v6;
    v15 = *(_QWORD *)(v9 - 72);
    *(_QWORD *)(v14 + 48) = v8;
    *(_QWORD *)(v14 + 56) = v15;
    *(_QWORD *)(v14 + 64) = v19;
    *(_BYTE *)(v14 + 72) = v5;
    *(_BYTE *)(v14 + 73) = 2;
    outlined copy of CallScreening.StateTransition(v15, v19, v5);
    outlined retain of CallScreening.State(v4);
    return swift_willThrow();
  }
  return result;
}

__n128 CallScreening.StateTransitioner.init(trackingServce:canScreenCall:onEnterAnsweringState:onEnterScreeningState:onExitScreeningState:endCall:)@<Q0>(unint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, unint64_t a4@<X3>, unint64_t a5@<X4>, unint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, __n128 *a9@<X8>, __n128 a10, unint64_t a11)
{
  __n128 result;

  result = a10;
  a9->n128_u64[0] = a1;
  a9->n128_u64[1] = a2;
  a9[1].n128_u64[0] = a3;
  a9[1].n128_u64[1] = a4;
  a9[2].n128_u64[0] = a5;
  a9[2].n128_u64[1] = a6;
  a9[3].n128_u64[0] = a7;
  a9[3].n128_u64[1] = a8;
  a9[4] = a10;
  a9[5].n128_u64[0] = a11;
  return result;
}

uint64_t destroy for CallScreening.StateTransitioner()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for CallScreening.StateTransitioner(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  __int128 v4;
  uint64_t v5;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  v5 = *(_QWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = v5;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for CallScreening.StateTransitioner(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *a1 = *a2;
  swift_retain();
  swift_release();
  v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_retain();
  swift_release();
  v5 = a2[4];
  a1[3] = a2[3];
  a1[4] = v5;
  swift_retain();
  swift_release();
  v6 = a2[6];
  a1[5] = a2[5];
  a1[6] = v6;
  swift_retain();
  swift_release();
  v7 = a2[8];
  a1[7] = a2[7];
  a1[8] = v7;
  swift_retain();
  swift_release();
  v8 = a2[10];
  a1[9] = a2[9];
  a1[10] = v8;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for CallScreening.StateTransitioner(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  v4 = *(_QWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = v4;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for CallScreening.StateTransitioner(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 88))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CallScreening.StateTransitioner(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CallScreening.StateTransitioner()
{
  return &type metadata for CallScreening.StateTransitioner;
}

id UIBlurEffect.init(privateStyle:)(uint64_t a1)
{
  return objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_effectWithStyle_, a1);
}

void specialized Sequence.forEach(_:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  void (*v31)(_QWORD *, _QWORD);
  id v32;
  id v33;
  _QWORD v34[5];
  int64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[11];

  v40 = a3;
  v7 = type metadata accessor for URL();
  v38 = *(_QWORD *)(v7 - 8);
  v39 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for SGURL);
    lazy protocol witness table accessor for type SGURL and conformance NSObject((unint64_t *)&lazy protocol witness table cache variable for type SGURL and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for SGURL);
    Set.Iterator.init(_cocoa:)();
    a1 = v41[4];
    v36 = v41[5];
    v10 = v41[6];
    v11 = v41[7];
    v12 = v41[8];
  }
  else
  {
    v13 = -1 << *(_BYTE *)(a1 + 32);
    v14 = *(_QWORD *)(a1 + 56);
    v36 = a1 + 56;
    v15 = ~v13;
    v16 = -v13;
    if (v16 < 64)
      v17 = ~(-1 << v16);
    else
      v17 = -1;
    v12 = v17 & v14;
    swift_bridgeObjectRetain();
    v10 = v15;
    v11 = 0;
  }
  v34[1] = v10;
  v34[4] = a1 & 0x7FFFFFFFFFFFFFFFLL;
  v35 = (unint64_t)(v10 + 64) >> 6;
  v37 = a4 & 1;
  v34[3] = MEMORY[0x1E0DEE9B0] + 8;
  if (a1 < 0)
    goto LABEL_10;
  while (1)
  {
    if (v12)
    {
      v18 = (v12 - 1) & v12;
      v19 = __clz(__rbit64(v12)) | (v11 << 6);
      v20 = v11;
      goto LABEL_29;
    }
    v24 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v24 >= v35)
      goto LABEL_34;
    v25 = *(_QWORD *)(v36 + 8 * v24);
    v20 = v11 + 1;
    if (!v25)
    {
      v20 = v11 + 2;
      if (v11 + 2 >= v35)
        goto LABEL_34;
      v25 = *(_QWORD *)(v36 + 8 * v20);
      if (!v25)
      {
        v20 = v11 + 3;
        if (v11 + 3 >= v35)
          goto LABEL_34;
        v25 = *(_QWORD *)(v36 + 8 * v20);
        if (!v25)
        {
          v20 = v11 + 4;
          if (v11 + 4 >= v35)
            goto LABEL_34;
          v25 = *(_QWORD *)(v36 + 8 * v20);
          if (!v25)
          {
            v20 = v11 + 5;
            if (v11 + 5 >= v35)
              goto LABEL_34;
            v25 = *(_QWORD *)(v36 + 8 * v20);
            if (!v25)
            {
              v26 = v11 + 6;
              while (v26 < v35)
              {
                v25 = *(_QWORD *)(v36 + 8 * v26++);
                if (v25)
                {
                  v20 = v26 - 1;
                  goto LABEL_28;
                }
              }
LABEL_34:
              outlined consume of [String : Application].Iterator._Variant();
              swift_release();
              swift_release();
              return;
            }
          }
        }
      }
    }
LABEL_28:
    v18 = (v25 - 1) & v25;
    v19 = __clz(__rbit64(v25)) + (v20 << 6);
LABEL_29:
    v23 = *(id *)(*(_QWORD *)(a1 + 48) + 8 * v19);
    v22 = v23;
    if (!v23)
      goto LABEL_34;
    while (1)
    {
      v27 = (*(uint64_t (**)(id))(*(_QWORD *)a2 + 256))(v23);
      v28 = specialized Collection<>.firstIndex(of:)(v22, v27);
      v30 = v29;
      swift_bridgeObjectRelease();
      if ((v30 & 1) == 0)
      {
        v31 = (void (*)(_QWORD *, _QWORD))(*(uint64_t (**)(_QWORD *))(*(_QWORD *)a2 + 272))(v41);
        specialized Array.remove(at:)(v28);

        v31(v41, 0);
      }
      v33 = objc_msgSend(v22, sel_url);
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      RecentsLinkController.rejectSuggestedURL(_:refresh:)((uint64_t)v9, v37);
      (*(void (**)(char *, uint64_t))(v38 + 8))(v9, v39);

      v11 = v20;
      v12 = v18;
      if ((a1 & 0x8000000000000000) == 0)
        break;
LABEL_10:
      v21 = __CocoaSet.Iterator.next()();
      if (v21)
      {
        v41[10] = v21;
        type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for SGURL);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v22 = (void *)v41[0];
        v23 = (id)swift_unknownObjectRelease();
        v20 = v11;
        v18 = v12;
        if (v22)
          continue;
      }
      goto LABEL_34;
    }
  }
  __break(1u);
}

uint64_t thunk for @escaping @callee_guaranteed (@unowned Int32) -> ()(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t);

  v3 = *(void (**)(uint64_t))(a1 + 32);
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  v3(a2);
  return OUTLINED_FUNCTION_2_19();
}

id @nonobjc UIAlertController.__allocating_init(title:message:preferredStyle:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v8;
  void *v9;
  id v10;

  if (!a2)
  {
    v8 = 0;
    if (a4)
      goto LABEL_3;
LABEL_5:
    v9 = 0;
    goto LABEL_6;
  }
  v8 = (void *)MEMORY[0x1C3B72E00]();
  OUTLINED_FUNCTION_30_4();
  if (!a4)
    goto LABEL_5;
LABEL_3:
  v9 = (void *)MEMORY[0x1C3B72E00](a3, a4);
  OUTLINED_FUNCTION_133();
LABEL_6:
  v10 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_alertControllerWithTitle_message_preferredStyle_, v8, v9, a5);

  return v10;
}

id @nonobjc UIAlertAction.__allocating_init(title:style:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v10;
  uint64_t v11;

  if (!a2)
  {
    v6 = 0;
    if (a4)
      goto LABEL_3;
LABEL_5:
    v7 = 0;
    goto LABEL_6;
  }
  v6 = (void *)MEMORY[0x1C3B72E00]();
  OUTLINED_FUNCTION_30_4();
  if (!a4)
    goto LABEL_5;
LABEL_3:
  v7 = OUTLINED_FUNCTION_9_2((uint64_t)thunk for @escaping @callee_guaranteed @Sendable (@guaranteed NSTimer) -> (), MEMORY[0x1E0C809B0], 1107296256, v10, v11);
  OUTLINED_FUNCTION_55_20();
LABEL_6:
  v8 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_actionWithTitle_style_handler_, v6, a3, v7);
  OUTLINED_FUNCTION_58_6();

  return v8;
}

void RecentsLinkController.__allocating_init(conversationManager:)(uint64_t a1)
{
  OUTLINED_FUNCTION_15();
  RecentsLinkController.init(conversationManager:)(a1);
  OUTLINED_FUNCTION_0();
}

void specialized RecentsLinkController.showDeleteConfirmationIfRequired(for:isRemovingAllRecents:from:completionHandler:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;

  OUTLINED_FUNCTION_93();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  OUTLINED_FUNCTION_67_11();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_28_43(v9, v20);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_27_35(v11, v21);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v12);
  v13 = OUTLINED_FUNCTION_2_20();
  v14 = type metadata accessor for RecentsCallItem(v13);
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_30_6();
  v15 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v15 + 16) = v5;
  *(_QWORD *)(v15 + 24) = v3;
  if (*(_QWORD *)(v7 + 16))
  {
    OUTLINED_FUNCTION_37_3();
    v17 = v7 + v16;
    v5;
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_33_1();
    outlined init with copy of ConversationControlsAppLaunchButtonType(v17, v0, type metadata accessor for RecentsCallItem);
    outlined init with copy of ConversationControlsAppLaunchButtonType(v0, v1, type metadata accessor for RecentsCallItemType);
    v18 = (char *)&loc_1BD22894C + *((int *)qword_1BD228CB0 + swift_getEnumCaseMultiPayload());
    __asm { BR              X9 }
  }
  v19 = v5;
  swift_bridgeObjectRetain();
  doRemoveAllRecents #1 () in RecentsListViewController.deleteAllRecents(_:)();

  OUTLINED_FUNCTION_74();
  OUTLINED_FUNCTION_30_4();
  OUTLINED_FUNCTION_52_1();
}

void specialized RecentsLinkController.showDeleteConfirmationIfRequired(for:isRemovingAllRecents:from:completionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  _QWORD *v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  char *v50;
  void *v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD v57[8];
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  OUTLINED_FUNCTION_93();
  v25 = v24;
  v60 = v26;
  v28 = v27;
  v30 = v29;
  v57[2] = v31;
  v58 = v32;
  v65 = OUTLINED_FUNCTION_67_11();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v33);
  OUTLINED_FUNCTION_41();
  v64 = v34;
  v63 = type metadata accessor for RecentCallRecentItemMetadata(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v35);
  OUTLINED_FUNCTION_41();
  v62 = v36;
  v37 = type metadata accessor for RecentsCallItemType(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v38);
  OUTLINED_FUNCTION_30_6();
  v39 = OUTLINED_FUNCTION_29_39();
  MEMORY[0x1E0C80A78](v39);
  v41 = (char *)v57 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = (_QWORD *)OUTLINED_FUNCTION_15();
  v43 = v30;
  v42[2] = v30;
  v42[3] = v28;
  v44 = v28;
  v45 = v60;
  v42[4] = v60;
  v42[5] = v25;
  v42[6] = a21;
  v42[7] = a22;
  v61 = a22;
  v57[7] = v42;
  v59 = a23;
  v42[8] = a23;
  v46 = v58;
  if (*(_QWORD *)(v58 + 16))
  {
    v57[6] = *(_QWORD *)(v58 + 16);
    OUTLINED_FUNCTION_37_3();
    v48 = v46 + v47;
    v57[1] = v49;
    v57[0] = v49;
    v57[3] = v44;
    OUTLINED_FUNCTION_95_8();
    v57[5] = v25;
    OUTLINED_FUNCTION_15_22();
    v57[4] = a21;
    OUTLINED_FUNCTION_71();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_33_1();
    v66 = v37;
    outlined init with copy of ConversationControlsAppLaunchButtonType(v48, (uint64_t)v41, type metadata accessor for RecentsCallItem);
    outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v41, v23, type metadata accessor for RecentsCallItemType);
    v50 = (char *)&loc_1BD228E7C + dword_1BD2292A4[swift_getEnumCaseMultiPayload()];
    __asm { BR              X9 }
  }
  v51 = v43;
  v52 = v43;
  OUTLINED_FUNCTION_95_8();
  OUTLINED_FUNCTION_15_22();
  OUTLINED_FUNCTION_71();
  v53 = v61;
  OUTLINED_FUNCTION_8_8();
  v54 = swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_2_0();
  v55 = *(_QWORD *)(v25 + 16);
  OUTLINED_FUNCTION_2_0();
  v56 = *(_QWORD *)(a21 + 16);
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_124();
  removeRecents #1 (calls:links:videoMessages:allItems:) in RecentsListViewController.deleteRecentCalls(_:preparationHandler:)(v55, v56, v53, v54, (uint64_t)v51, v44, v45, v25, a21);

  swift_release();
  OUTLINED_FUNCTION_27();
  swift_bridgeObjectRelease();
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v44);
  OUTLINED_FUNCTION_54_1();
  OUTLINED_FUNCTION_2_1();
  OUTLINED_FUNCTION_21_11();
  OUTLINED_FUNCTION_17_22();
  OUTLINED_FUNCTION_52_1();
}

void RecentsLinkController.showDeleteConfirmationIfRequired(for:isRemovingAllRecents:from:completionHandler:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  void (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23[10];

  OUTLINED_FUNCTION_93();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v23[8] = OUTLINED_FUNCTION_67_11();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v9);
  v23[6] = OUTLINED_FUNCTION_28_43(v10, v23[0]);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v11);
  v13 = OUTLINED_FUNCTION_27_35(v12, v23[0]);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = OUTLINED_FUNCTION_29_39();
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_30_6();
  v18 = *(_QWORD *)(v8 + 16);
  if (v18)
  {
    v23[3] = (uint64_t)v4;
    v23[4] = v2;
    v23[1] = v6;
    v23[2] = v8;
    v19 = v18;
    OUTLINED_FUNCTION_37_3();
    v21 = v8 + v20;
    swift_bridgeObjectRetain();
    v23[0] = v19;
    v23[9] = v13;
    outlined init with copy of ConversationControlsAppLaunchButtonType(v21, v0, type metadata accessor for RecentsCallItem);
    outlined init with copy of ConversationControlsAppLaunchButtonType(v0, (uint64_t)v16, type metadata accessor for RecentsCallItemType);
    v22 = (char *)&loc_1BD2293D4 + *((int *)qword_1BD229700 + swift_getEnumCaseMultiPayload());
    __asm { BR              X9 }
  }
  v4(1);
  OUTLINED_FUNCTION_52_1();
}

BOOL specialized SetAlgebra.isEmpty.getter(uint64_t a1)
{
  return a1 == 0;
}

BOOL specialized SetAlgebra.isEmpty.getter(int a1)
{
  return a1 == 0;
}

uint64_t specialized OptionSet.symmetricDifference(_:)(unsigned int a1, int a2)
{
  return a2 ^ a1;
}

uint64_t specialized OptionSet<>.formSymmetricDifference(_:)(uint64_t result)
{
  _QWORD *v1;

  *v1 ^= result;
  return result;
}

{
  _DWORD *v1;

  *v1 ^= result;
  return result;
}

uint64_t specialized SetAlgebra.subtract(_:)(uint64_t result)
{
  _QWORD *v1;

  *v1 &= ~result;
  return result;
}

{
  _DWORD *v1;

  *v1 &= ~(_DWORD)result;
  return result;
}

uint64_t specialized Collection.firstIndex(where:)(uint64_t a1, void *a2)
{
  void *v2;
  uint64_t v3;
  uint64_t i;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  uint64_t v17;
  uint64_t v19;

  v2 = a2;
  v17 = *(_QWORD *)(a1 + 16);
  if (v17)
  {
    v3 = 0;
    for (i = a1 + 48; ; i += 24)
    {
      v19 = v3;
      v5 = *(id *)(i - 16);
      swift_bridgeObjectRetain();
      swift_retain();
      v6 = objc_msgSend(v5, sel_pseudonym);
      v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v9 = v8;

      v10 = objc_msgSend(v2, sel_pseudonym);
      v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v13 = v12;

      if (v7 == v11 && v9 == v13)
      {

        swift_release();
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease_n();
        return v19;
      }
      v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_release();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v15 & 1) != 0)
        break;
      v3 = v19 + 1;
      v2 = a2;
      if (v17 == v19 + 1)
      {

        return 0;
      }
    }

    return v19;
  }
  else
  {

    return 0;
  }
}

void *RecentsLinkControllerModel.UpdateState.fetchingLinks.unsafeMutableAddressor()
{
  return &static RecentsLinkControllerModel.UpdateState.fetchingLinks;
}

uint64_t static RecentsLinkControllerModel.UpdateState.fetchingLinks.getter()
{
  return 1;
}

void *RecentsLinkControllerModel.UpdateState.fetchingURLs.unsafeMutableAddressor()
{
  return &static RecentsLinkControllerModel.UpdateState.fetchingURLs;
}

uint64_t static RecentsLinkControllerModel.UpdateState.fetchingURLs.getter()
{
  return 2;
}

void *RecentsLinkControllerModel.UpdateState.itemsNeedUpdate.unsafeMutableAddressor()
{
  return &static RecentsLinkControllerModel.UpdateState.itemsNeedUpdate;
}

uint64_t static RecentsLinkControllerModel.UpdateState.itemsNeedUpdate.getter()
{
  return 4;
}

uint64_t RecentsLinkControllerModel.needsUpdateState.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

id RecentsLinkControllerModel.updateQueue.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 24);
}

uint64_t key path setter for RecentsLinkControllerModel.delegate : RecentsLinkControllerModel(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)a2 + 144);
  v4 = swift_unknownObjectRetain();
  return v3(v4, v2);
}

void RecentsLinkControllerModel.delegate.getter()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_26();
}

void sub_1BD2299E0()
{
  OUTLINED_FUNCTION_32();
}

void RecentsLinkControllerModel.delegate.modify()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = OUTLINED_FUNCTION_124_1();
  *v0 = v2;
  v2[5] = v1;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_26();
}

{
  void *v0;
  char v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_88_6();
  *(_QWORD *)(v2 + 40) = v3;
  swift_unknownObjectWeakAssign();
  if ((v1 & 1) != 0)
  {
    swift_unknownObjectRelease();
    OUTLINED_FUNCTION_248();
  }
  else
  {
    OUTLINED_FUNCTION_248();
    swift_unknownObjectRelease();
  }
  OUTLINED_FUNCTION_4_2(v0);
}

void sub_1BD229A24(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 40);
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = v3;
  OUTLINED_FUNCTION_18();
}

void RecentsLinkControllerModel.tuLinks.setter(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v1 + 48) = a1;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_32();
}

void RecentsLinkControllerModel.tuLinks.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void RecentsLinkControllerModel.updateState.setter(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v1 + 56) = a1;
  RecentsLinkControllerModel.updateState.didset();
  OUTLINED_FUNCTION_32();
}

uint64_t key path setter for RecentsLinkControllerModel.conversationLinks : RecentsLinkControllerModel(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))(**(_QWORD **)a2 + 240);
  v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t RecentsLinkControllerModel.conversationLinks.getter()
{
  return swift_bridgeObjectRetain();
}

void RecentsLinkControllerModel.conversationLinks.setter(uint64_t a1)
{
  _QWORD *v1;
  char v3;
  char v4;
  _QWORD *v5;
  void (*v6)(_BYTE *, _QWORD);
  _BYTE v7[32];

  OUTLINED_FUNCTION_8_8();
  specialized static Array<A>.== infix(_:_:)();
  v4 = v3;
  OUTLINED_FUNCTION_2_1();
  if ((v4 & 1) != 0)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v1[8] = a1;
    swift_bridgeObjectRelease();
    v6 = (void (*)(_BYTE *, _QWORD))(*(uint64_t (**)(_BYTE *))(*v1 + 200))(v7);
    if ((*v5 & 4) == 0)
      *v5 |= 4uLL;
    v6(v7, 0);
    OUTLINED_FUNCTION_9_0();
  }
}

void RecentsLinkControllerModel.conversationLinks.modify(_QWORD *a1)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 64);
  a1[1] = v1;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_0();
}

void RecentsLinkControllerModel.conversationLinks.modify(uint64_t *a1, char a2)
{
  uint64_t v2;

  if ((a2 & 1) != 0)
  {
    v2 = OUTLINED_FUNCTION_124();
    RecentsLinkControllerModel.conversationLinks.setter(v2);
    OUTLINED_FUNCTION_32_2();
  }
  else
  {
    RecentsLinkControllerModel.conversationLinks.setter(*a1);
    OUTLINED_FUNCTION_0();
  }
}

uint64_t key path setter for RecentsLinkControllerModel.suggestionsURLs : RecentsLinkControllerModel(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))(**(_QWORD **)a2 + 264);
  v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t RecentsLinkControllerModel.suggestionsURLs.didset()
{
  uint64_t v0;
  char v1;
  char v2;
  uint64_t result;
  _QWORD *v4;
  uint64_t (*v5)(_BYTE *, _QWORD);
  _BYTE v6[32];

  swift_beginAccess();
  swift_bridgeObjectRetain();
  specialized static Array<A>.== infix(_:_:)();
  v2 = v1;
  result = swift_bridgeObjectRelease();
  if ((v2 & 1) == 0)
  {
    v5 = (uint64_t (*)(_BYTE *, _QWORD))(*(uint64_t (**)(_BYTE *))(*(_QWORD *)v0 + 200))(v6);
    if ((*v4 & 4) == 0)
      *v4 |= 4uLL;
    return v5(v6, 0);
  }
  return result;
}

void RecentsLinkControllerModel.suggestionsURLs.setter(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v1 + 72) = a1;
  RecentsLinkControllerModel.suggestionsURLs.didset();
  OUTLINED_FUNCTION_2_1();
  OUTLINED_FUNCTION_9_0();
}

void RecentsLinkControllerModel.suggestionsURLs.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  OUTLINED_FUNCTION_2_0();
  v3[3] = *(_QWORD *)(v1 + 72);
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_18();
}

void RecentsLinkControllerModel.suggestionsURLs.modify(uint64_t a1, char a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(void **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  if ((a2 & 1) != 0)
  {
    v4 = swift_bridgeObjectRetain();
    RecentsLinkControllerModel.suggestionsURLs.setter(v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    RecentsLinkControllerModel.suggestionsURLs.setter(v3);
  }
  OUTLINED_FUNCTION_4_2(v2);
}

Swift::Void __swiftcall RecentsLinkControllerModel.updateCallItems()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  void (*v14)(_QWORD *, _QWORD);
  _QWORD *v15;
  void *v16;
  uint64_t v17;
  _QWORD v18[6];

  OUTLINED_FUNCTION_93();
  v3 = type metadata accessor for DispatchWorkItemFlags();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_2_20();
  v5 = type metadata accessor for DispatchQoS();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_11_2();
  v7 = (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
  if (v7)
  {
    v9 = v7;
    v10 = v8;
    v17 = v4;
    v11 = OUTLINED_FUNCTION_15();
    *(_QWORD *)(v11 + 16) = (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
    v12 = (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
    v14 = (void (*)(_QWORD *, _QWORD))(*(uint64_t (**)(_QWORD *))(*(_QWORD *)v0 + 200))(v18);
    if ((*v13 & 4) != 0)
      *v13 &= ~4uLL;
    v14(v18, 0);
    v15 = (_QWORD *)OUTLINED_FUNCTION_15();
    v15[2] = v0;
    v15[3] = v11;
    v15[4] = v12;
    v15[5] = v9;
    v15[6] = v10;
    v18[4] = partial apply for closure #1 in RecentsLinkControllerModel.updateCallItems();
    v18[5] = v15;
    v18[0] = MEMORY[0x1E0C809B0];
    v18[1] = 1107296256;
    v18[2] = thunk for @escaping @callee_guaranteed @Sendable () -> ();
    v18[3] = &block_descriptor_45;
    v16 = _Block_copy(v18);
    partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
    OUTLINED_FUNCTION_21_7();
    swift_unknownObjectRetain();
    static DispatchQoS.unspecified.getter();
    _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
    _sSay8Dispatch0A13WorkItemFlagsVGSayxGSTsWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    MEMORY[0x1C3B7361C](0, v2, v1, v16);
    _Block_release(v16);
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v1, v3);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v2, v5);
    OUTLINED_FUNCTION_74();
    OUTLINED_FUNCTION_19();
  }
  OUTLINED_FUNCTION_52_1();
}

uint64_t closure #1 in RecentsLinkControllerModel.updateCallItems()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  _QWORD v12[5];

  v7 = a2 + 16;
  swift_beginAccess();
  RecentsLinkControllerModel.generateCallItems(for:suggestionsURLs:)();
  v9 = v8;
  swift_endAccess();
  ObjectType = swift_getObjectType();
  v12[2] = a1;
  v12[3] = v7;
  (*(void (**)(uint64_t, uint64_t, uint64_t (*)(), _QWORD *, uint64_t, uint64_t))(a5 + 8))(a1, v9, partial apply for closure #1 in closure #1 in RecentsLinkControllerModel.updateCallItems(), v12, ObjectType, a5);
  return swift_bridgeObjectRelease();
}

uint64_t closure #1 in closure #1 in RecentsLinkControllerModel.updateCallItems()(uint64_t a1, _QWORD *a2)
{
  swift_beginAccess();
  *(_QWORD *)(a1 + 64) = *a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

void RecentsLinkControllerModel.generateCallItems(for:suggestionsURLs:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  unint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;

  OUTLINED_FUNCTION_93();
  v4 = v3;
  v6 = v5;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RecentsCallItem?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_77_1();
  v49 = OUTLINED_FUNCTION_29_39();
  v55 = *(_QWORD *)(v49 - 8);
  v8 = MEMORY[0x1E0C80A78](v49);
  v56 = (uint64_t)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v54 = (uint64_t)&v46 - v10;
  v11 = OUTLINED_FUNCTION_33();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_41();
  v53 = v13;
  v14 = type metadata accessor for DispatchPredicate();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_16_2();
  v16 = *(void **)(v0 + 24);
  *v1 = v16;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v15 + 104))(v1, *MEMORY[0x1E0DEF740], v14);
  v17 = v16;
  LOBYTE(v16) = _dispatchPreconditionTest(_:)();
  OUTLINED_FUNCTION_8(*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8));
  if ((v16 & 1) != 0)
  {
    v50 = v4;
    v51 = v12;
    v52 = v11;
    v18 = *v6;
    v19 = *(_QWORD *)(*v6 + 16);
    v20 = MEMORY[0x1E0DEE9D8];
    if (v19)
    {
      v47 = v6;
      v48 = v2;
      v57 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      OUTLINED_FUNCTION_124();
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, v19, 0);
      v21 = v57;
      v46 = v18;
      v22 = v18 + 48;
      do
      {
        v23 = *(id *)(v22 - 16);
        OUTLINED_FUNCTION_120_2();
        swift_retain_n();
        v24 = v23;
        v25 = MEMORY[0x1E0DEE9E8];
        if ((v20 & 0xC000000000000000) != 0 && _CocoaArrayWrapper.endIndex.getter())
        {
          specialized Set.init(_nonEmptyArrayLiteral:)(v20);
          v25 = v26;
        }
        if (one-time initialization token for faceTime != -1)
          swift_once();
        v27 = static ParticipantContactDetailsCache.faceTime;
        OUTLINED_FUNCTION_15_22();
        swift_release_n();
        OUTLINED_FUNCTION_19_1();

        v57 = v21;
        v29 = v21[2];
        v28 = v21[3];
        if (v29 >= v28 >> 1)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v28 > 1, v29 + 1, 1);
          v21 = v57;
        }
        v21[2] = v29 + 1;
        v30 = &v21[3 * v29];
        v30[4] = v24;
        v30[5] = v25;
        v30[6] = v27;
        v22 += 24;
        --v19;
      }
      while (v19);
      OUTLINED_FUNCTION_19_1();
      v6 = v47;
      v2 = v48;
    }
    else
    {
      swift_bridgeObjectRelease();
      v21 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    *v6 = (uint64_t)v21;
    v31 = v53;
    v32 = Date.init()();
    MEMORY[0x1E0C80A78](v32);
    *(&v46 - 2) = (uint64_t)v6;
    *(&v46 - 1) = v31;
    specialized Sequence.forEach(_:)(partial apply for closure #2 in RecentsLinkControllerModel.generateCallItems(for:suggestionsURLs:), (uint64_t)(&v46 - 4), v50);
    v60 = v20;
    v33 = *v6;
    v34 = *(_QWORD *)(*v6 + 16);
    if (v34)
    {
      OUTLINED_FUNCTION_120_2();
      v35 = (uint64_t *)(v33 + 48);
      v36 = MEMORY[0x1E0DEE9D8];
      v37 = v49;
      do
      {
        v38 = *(v35 - 1);
        v39 = *v35;
        v57 = (_QWORD *)*(v35 - 2);
        v58 = v38;
        v59 = v39;
        v40 = v57;
        swift_bridgeObjectRetain();
        swift_retain();
        RecentsCallItem.init(link:)();
        if (__swift_getEnumTagSinglePayload(v2, 1, v37) == 1)
        {
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v2, (uint64_t *)&demangling cache variable for type metadata for RecentsCallItem?);
        }
        else
        {
          v41 = v54;
          OUTLINED_FUNCTION_90_9(v2, v54);
          OUTLINED_FUNCTION_90_9(v41, v56);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v36 = OUTLINED_FUNCTION_94_4();
          v42 = *(_QWORD *)(v36 + 16);
          if (v42 >= *(_QWORD *)(v36 + 24) >> 1)
            v36 = OUTLINED_FUNCTION_94_4();
          *(_QWORD *)(v36 + 16) = v42 + 1;
          OUTLINED_FUNCTION_37_3();
          OUTLINED_FUNCTION_90_9(v45, v36 + v43 + *(_QWORD *)(v44 + 72) * v42);
        }
        v35 += 3;
        --v34;
      }
      while (v34);
      OUTLINED_FUNCTION_19_1();
    }
    specialized Array.append<A>(contentsOf:)();
    (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v53, v52);
    OUTLINED_FUNCTION_52_1();
  }
  else
  {
    __break(1u);
  }
}

void closure #2 in RecentsLinkControllerModel.generateCallItems(for:suggestionsURLs:)(void **a1, unint64_t *a2, uint64_t a3)
{
  unint64_t *v3;
  unint64_t *v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void *v18;
  id v19;
  NSURL *v20;
  void *v21;
  unint64_t *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v32;
  void *v33;
  char v34;
  char v35;
  char *v36;
  uint64_t inited;
  uint64_t v38;
  unint64_t *v39;
  id v40;
  unint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  unint64_t *v45;
  uint64_t v46;
  unint64_t v47;
  _QWORD *v48;
  unint64_t v49;
  unint64_t *v50;
  id v51;
  uint64_t v52;
  unint64_t *v53;
  unint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  uint64_t v63;
  unint64_t *v64;

  v4 = v3;
  v55 = a3;
  v7 = type metadata accessor for Calendar();
  v56 = *(_QWORD *)(v7 - 8);
  v57 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v58 = type metadata accessor for Date();
  v10 = *(_QWORD **)(v58 - 8);
  v11 = MEMORY[0x1E0C80A78](v58);
  v13 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v64 = (unint64_t *)((char *)&v52 - v14);
  v15 = type metadata accessor for URL();
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *a1;
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationLink);
  v19 = objc_msgSend(v18, sel_url);
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  @nonobjc TUConversationLink.init(url:)((uint64_t)v17, v20);
  if (!v21)
    return;
  v53 = a2;
  v22 = v21;
  v23 = swift_bridgeObjectRetain();
  v24 = specialized Collection.firstIndex(where:)(v23, v22);
  v26 = v25;
  v54 = v3;
  swift_bridgeObjectRelease();
  if ((v26 & 1) == 0)
  {
    if ((v24 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      v4 = v22;
      v22 = v53;
      if (v24 < *(_QWORD *)(*v53 + 16))
      {
        v27 = (_QWORD *)(*v53 + 24 * v24);
        v28 = v27[5];
        v29 = v27[6];
        v59 = (id)v27[4];
        v60 = v28;
        v61 = v29;
        v10 = v59;
        swift_bridgeObjectRetain();
        swift_retain();
        ConversationLink.updated(with:)(v18, &v62);
        swift_release();
        swift_bridgeObjectRelease();

        v58 = v62;
        v26 = v63;
        v30 = *v22;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *v22 = v30;
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
LABEL_6:
          if (v24 < *(_QWORD *)(v30 + 16))
          {
            v32 = v30 + 24 * v24;
            v33 = *(void **)(v32 + 32);
            *(_OWORD *)(v32 + 32) = v58;
            *(_QWORD *)(v32 + 48) = v26;

            swift_release();
            swift_bridgeObjectRelease();

            return;
          }
          __break(1u);
LABEL_24:
          v50 = v22;
          v51 = v18;
          swift_bridgeObjectRetain();
          v38 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          goto LABEL_14;
        }
LABEL_22:
        specialized _ArrayBuffer._consumeAndCreateNew()();
        v30 = v49;
        *v22 = v49;
        goto LABEL_6;
      }
    }
    __break(1u);
    goto LABEL_22;
  }
  v4 = v64;
  SGURL.recentsDate.getter((uint64_t)v64);
  v34 = static Date.< infix(_:_:)();
  static Calendar.current.getter();
  SGURL.recentsDate.getter((uint64_t)v13);
  v35 = Calendar.isDateInToday(_:)();
  v36 = (char *)v10[1];
  v10 = (_QWORD *)v58;
  ((void (*)(char *, _QWORD))v36)(v13, v58);
  (*(void (**)(char *, uint64_t))(v56 + 8))(v9, v57);
  if ((v35 & 1) == 0 && (v34 & 1) == 0)
  {
    ((void (*)(unint64_t *, _QWORD *))v36)(v4, v10);

    return;
  }
  v9 = v36;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BD6443F0;
  *(_QWORD *)(inited + 32) = v18;
  *(_QWORD *)&v62 = inited;
  specialized Array._endMutation()();
  v30 = v62;
  if ((unint64_t)v62 >> 62)
    goto LABEL_24;
  v38 = *(_QWORD *)((v62 & 0xFFFFFFFFFFFFF8) + 0x10);
  v39 = v22;
  v40 = v18;
LABEL_14:
  v41 = v53;
  if (v38)
  {
    specialized Set.init(_nonEmptyArrayLiteral:)(v30);
    v43 = v42;
  }
  else
  {
    swift_bridgeObjectRelease();
    v43 = MEMORY[0x1E0DEE9E8];
  }
  if (one-time initialization token for faceTime != -1)
    swift_once();
  v44 = static ParticipantContactDetailsCache.faceTime;
  swift_retain_n();
  v45 = v22;
  swift_bridgeObjectRetain();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  v46 = *(_QWORD *)(*v41 + 16);
  specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(v46);
  v47 = *v41;
  *(_QWORD *)(v47 + 16) = v46 + 1;
  v48 = (_QWORD *)(v47 + 24 * v46);
  v48[4] = v45;
  v48[5] = v43;
  v48[6] = v44;
  swift_release();
  swift_bridgeObjectRelease();

  ((void (*)(unint64_t *, _QWORD *))v9)(v4, v10);
}

uint64_t RecentsLinkControllerModel.deinit()
{
  uint64_t v0;

  outlined destroy of weak ConversationControlsCountdownJoinButtonDelegate?(v0 + 32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t RecentsLinkControllerModel.__deallocating_deinit()
{
  RecentsLinkControllerModel.deinit();
  return swift_deallocClassInstance();
}

void RecentsLinkControllerModel.__allocating_init()()
{
  OUTLINED_FUNCTION_15();
  RecentsLinkControllerModel.init()();
  OUTLINED_FUNCTION_0();
}

uint64_t key path setter for RecentLinkCallItems.callItems : RecentLinkCallItems(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))(**(_QWORD **)a2 + 96);
  v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

void RecentLinkCallItems.callItems.setter(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v1 + 16) = a1;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_32();
}

void RecentLinkCallItems.callItems.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t RecentLinkCallItems.deinit()
{
  uint64_t v0;

  OUTLINED_FUNCTION_92_7();
  return v0;
}

uint64_t RecentLinkCallItems.__deallocating_deinit()
{
  OUTLINED_FUNCTION_92_7();
  OUTLINED_FUNCTION_58();
  return swift_deallocClassInstance();
}

uint64_t RecentLinkCallItems.__allocating_init()()
{
  uint64_t result;

  result = OUTLINED_FUNCTION_15();
  *(_QWORD *)(result + 16) = MEMORY[0x1E0DEE9D8];
  return result;
}

uint64_t RecentLinkCallItems.init()()
{
  uint64_t v0;
  uint64_t result;

  result = v0;
  *(_QWORD *)(v0 + 16) = MEMORY[0x1E0DEE9D8];
  return result;
}

void one-time initialization function for deleteLink()
{
  id v0;
  Swift::String v1;
  Swift::String_optional v2;
  Swift::String v3;
  Swift::String v4;
  Swift::String v5;

  v0 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v5._object = (void *)0xE000000000000000;
  v1._countAndFlagsBits = 0x4C5F4554454C4544;
  v1._object = (void *)0xEB000000004B4E49;
  v2.value._countAndFlagsBits = 0x61737265766E6F43;
  v2.value._object = (void *)0xEF74694B6E6F6974;
  v3._countAndFlagsBits = 0;
  v3._object = (void *)0xE000000000000000;
  v5._countAndFlagsBits = 0;
  v4 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, v2, (NSBundle)v0, v3, v5);

  static RecentsLinkController.deleteLink = (__int128)v4;
}

void static RecentsLinkController.deleteLink.getter()
{
  if (one-time initialization token for deleteLink != -1)
    swift_once();
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_0();
}

void static RecentsLinkController.shouldTargetUpcomingSectionDate.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_93();
  v13 = v2;
  v3 = OUTLINED_FUNCTION_33();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_16_2();
  v5 = type metadata accessor for Calendar.Component();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_0_7();
  v7 = type metadata accessor for Calendar();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_77_1();
  static Calendar.current.getter();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v6 + 104))(v0, *MEMORY[0x1E0CB1130], v5);
  Date.init()();
  Calendar.date(byAdding:value:to:wrappingComponents:)();
  OUTLINED_FUNCTION_8(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  OUTLINED_FUNCTION_59_4(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  if (__swift_getEnumTagSinglePayload(v1, 1, v3) == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v13, v1, v3);
    OUTLINED_FUNCTION_52_1();
  }
}

id RecentsLinkController.conversationManager.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

uint64_t key path setter for RecentsLinkController.delegate : RecentsLinkController(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)a2 + 136);
  v4 = swift_unknownObjectRetain();
  return v3(v4, v2);
}

void RecentsLinkController.delegate.getter()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_26();
}

void sub_1BD22AE64()
{
  OUTLINED_FUNCTION_32();
}

void RecentsLinkController.delegate.modify()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = OUTLINED_FUNCTION_124_1();
  *v0 = v2;
  v2[5] = v1;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_26();
}

{
  void *v0;
  char v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_88_6();
  *(_QWORD *)(v2 + 32) = v3;
  swift_unknownObjectWeakAssign();
  if ((v1 & 1) != 0)
  {
    swift_unknownObjectRelease();
    OUTLINED_FUNCTION_248();
  }
  else
  {
    OUTLINED_FUNCTION_248();
    swift_unknownObjectRelease();
  }
  OUTLINED_FUNCTION_4_2(v0);
}

void sub_1BD22AEA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 32);
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = v3;
  OUTLINED_FUNCTION_18();
}

id *RecentsLinkController.deinit()
{
  id *v0;

  (*((void (**)(void))*v0 + 33))();
  OUTLINED_FUNCTION_115();
  outlined destroy of weak ConversationControlsCountdownJoinButtonDelegate?((uint64_t)(v0 + 3));

  swift_unknownObjectRelease();
  return v0;
}

uint64_t RecentsLinkController.__deallocating_deinit()
{
  RecentsLinkController.deinit();
  return swift_deallocClassInstance();
}

uint64_t closure #1 in closure #1 in RecentsLinkController.resume()()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)result + 352))(result);
    return swift_release();
  }
  return result;
}

Swift::Void __swiftcall RecentsLinkController.suspend()()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 44) & 1) == 0)
  {
    notify_cancel(*(_DWORD *)(v0 + 40));
    *(_DWORD *)(v0 + 40) = 0;
    *(_BYTE *)(v0 + 44) = 1;
  }
}

uint64_t RecentsLinkController.shouldConfirmDeleteAll.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v14 = MEMORY[0x1E0DEE9D8];
  RecentsLinkController.modelLocked.getter();
  v1 = v0;
  v2 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v2 + 16) = &v14;
  v3 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v3 + 16) = partial apply for closure #1 in RecentsLinkController.shouldConfirmDeleteAll.getter;
  *(_QWORD *)(v3 + 24) = v2;
  OUTLINED_FUNCTION_117((uint64_t)thunk for @escaping @callee_guaranteed (@guaranteed RecentLinkCallItems) -> (), v11, MEMORY[0x1E0C809B0], 1107296256, v12, v13);
  OUTLINED_FUNCTION_79_11();
  v4 = OUTLINED_FUNCTION_17_22();
  OUTLINED_FUNCTION_19_14(v4, sel_performWhileLocked_);

  OUTLINED_FUNCTION_58_6();
  OUTLINED_FUNCTION_15_64();
  result = OUTLINED_FUNCTION_114_0();
  if ((v1 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v6 = v14;
    v7 = *(char **)(v14 + 16);
    if (v7)
    {
      OUTLINED_FUNCTION_5_0();
      v8 = v7 - 1;
      v9 = 32;
      do
      {
        v10 = v8;
        v7 = (char *)objc_msgSend(*(id *)(v6 + v9), sel_isLocallyCreated);
        if ((v7 & 1) != 0)
          break;
        v8 = v10 - 1;
        v9 += 24;
      }
      while (v10);
      OUTLINED_FUNCTION_27();
    }
    OUTLINED_FUNCTION_19();
    OUTLINED_FUNCTION_27();
    return (uint64_t)v7;
  }
  return result;
}

uint64_t closure #1 in RecentsLinkController.shouldConfirmDeleteAll.getter(uint64_t a1, _QWORD *a2)
{
  *a2 = (*(uint64_t (**)(void))(*(_QWORD *)a1 + 232))();
  return swift_bridgeObjectRelease();
}

Swift::Void __swiftcall RecentsLinkController.deleteAll()()
{
  uint64_t v0;

  (*(void (**)(void))(*(_QWORD *)v0 + 272))();
  (*(void (**)(void))(*(_QWORD *)v0 + 296))();
  OUTLINED_FUNCTION_32_2();
}

Swift::Void __swiftcall RecentsLinkController.delete(callItems:)(Swift::OpaquePointer callItems)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, _QWORD);
  char v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;

  OUTLINED_FUNCTION_93();
  v4 = v3;
  v5 = OUTLINED_FUNCTION_29_39();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_16_2();
  v7 = *(_QWORD *)(v4 + 16);
  if (v7)
  {
    v8 = v4 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v9 = *(_QWORD *)(v6 + 72);
    outlined init with copy of ConversationControlsAppLaunchButtonType(v8 + v9 * (v7 - 1), v2, type metadata accessor for RecentsCallItem);
    v17 = 1;
    v10 = *(void (**)(uint64_t, _QWORD))(*(_QWORD *)v1 + 304);
    OUTLINED_FUNCTION_124();
    OUTLINED_FUNCTION_2_0();
    while (1)
    {
      static RecentsCallItem.== infix(_:_:)();
      v16 = v11;
      if (one-time initialization token for conversationKit != -1)
        swift_once();
      v12 = type metadata accessor for Logger();
      __swift_project_value_buffer(v12, (uint64_t)&static Logger.conversationKit);
      v13 = Logger.logObject.getter();
      v14 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v13, v14))
      {
        v15 = swift_slowAlloc();
        *(_DWORD *)v15 = 134217984;
        *(_QWORD *)(v15 + 4) = v17;
        _os_log_impl(&dword_1BD004000, v13, v14, "Deleting link #%ld", (uint8_t *)v15, 0xCu);
        OUTLINED_FUNCTION_60();
      }

      v10(v8, v16 & 1);
      if (__OFADD__(v17, 1))
        break;
      ++v17;
      v8 += v9;
      if (!--v7)
      {
        swift_bridgeObjectRelease();
        outlined destroy of AccountUpdateNotice(v2, type metadata accessor for RecentsCallItem);
        goto LABEL_10;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_10:
    OUTLINED_FUNCTION_52_1();
  }
}

void *RecentsLinkController.delete(callItem:refresh:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  char v8;
  void *result;
  void *v10;
  uint64_t v11;
  void *v12;

  v8 = a2;
  result = (void *)RecentsCallItem.conversationLink.getter(a1, a2, a3, a4, a5, a6, a7, a8, v11, (uint64_t)v12);
  v10 = v12;
  if (v12)
  {
    RecentsLinkController.delete(conversationLink:refresh:)((uint64_t)&v12, v8 & 1);
    return outlined consume of ConversationLink?(v10);
  }
  return result;
}

uint64_t RecentsLinkController.delete(conversationLink:refresh:)(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v19;
  uint64_t v20;

  v3 = v2;
  v5 = *(void **)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  RecentsLinkController.modelLocked.getter();
  v9 = v8;
  v10 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v10 + 16) = v5;
  *(_QWORD *)(v10 + 24) = v6;
  *(_QWORD *)(v10 + 32) = v7;
  *(_QWORD *)(v10 + 40) = v3;
  *(_BYTE *)(v10 + 48) = a2;
  v11 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v11 + 16) = partial apply for closure #1 in RecentsLinkController.delete(conversationLink:refresh:);
  *(_QWORD *)(v11 + 24) = v10;
  v12 = OUTLINED_FUNCTION_9_2((uint64_t)thunk for @escaping @callee_guaranteed (@guaranteed RecentLinkCallItems) -> (), MEMORY[0x1E0C809B0], 1107296256, v19, v20);
  v13 = v5;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_21_7();
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v9, sel_performWhileLocked_, v12);

  _Block_release(v12);
  LOBYTE(v9) = OUTLINED_FUNCTION_15_64();
  OUTLINED_FUNCTION_27_0();
  if ((v9 & 1) != 0)
  {
    __break(1u);
  }
  else if (one-time initialization token for conversationKit == -1)
  {
    goto LABEL_3;
  }
  swift_once();
LABEL_3:
  v14 = type metadata accessor for Logger();
  __swift_project_value_buffer(v14, (uint64_t)&static Logger.conversationKit);
  v15 = Logger.logObject.getter();
  v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v17 = 67109120;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl(&dword_1BD004000, v15, v16, "Deleting link, should refresh %{BOOL}d", v17, 8u);
    OUTLINED_FUNCTION_60();
  }

  (*(void (**)(id, _QWORD))(*(_QWORD *)v3 + 320))(v13, a2 & 1);
  return OUTLINED_FUNCTION_22();
}

void closure #1 in RecentsLinkController.delete(conversationLink:refresh:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  unint64_t v9;
  unint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void (*v21)(_BYTE *, _QWORD);
  void *v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  _BYTE v26[40];

  (*(void (**)(uint64_t))(*(_QWORD *)a1 + 232))(a1);
  specialized Collection<>.firstIndex(of:)();
  v10 = v9;
  v12 = v11;
  swift_bridgeObjectRelease();
  if ((v12 & 1) != 0)
    goto LABEL_6;
  v13 = (*(uint64_t (**)(_BYTE *))(*(_QWORD *)a1 + 248))(v26);
  v15 = v14;
  v16 = *v14;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v15 = v16;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    specialized _ArrayBuffer._consumeAndCreateNew()();
    v16 = v24;
    *v15 = v24;
  }
  v18 = *(_QWORD *)(v16 + 16);
  if (v10 < v18)
  {
    v19 = v18 - 1;
    v20 = v16 + 24 * v10;
    v25 = a6;
    v21 = (void (*)(_BYTE *, _QWORD))v13;
    v22 = *(void **)(v20 + 32);
    specialized UnsafeMutablePointer.moveInitialize(from:count:)((char *)(v20 + 56), v18 - 1 - v10, (char *)(v20 + 32));
    *(_QWORD *)(v16 + 16) = v19;
    *v15 = v16;
    swift_release();
    swift_bridgeObjectRelease();

    v21(v26, 0);
    a6 = v25;
LABEL_6:
    swift_retain();
    swift_retain();
    v23 = swift_bridgeObjectRetain();
    specialized Sequence.forEach(_:)(v23, a1, a5, a6 & 1);
    swift_bridgeObjectRelease();
    return;
  }
  __break(1u);
}

void RecentsLinkController.delete(tuLink:refresh:)(uint64_t a1, char a2)
{
  uint64_t v2;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void **)(v2 + 16);
  v6 = OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_89_0();
  v7 = OUTLINED_FUNCTION_15();
  *(_BYTE *)(v7 + 16) = a2;
  *(_QWORD *)(v7 + 24) = v6;
  v8 = OUTLINED_FUNCTION_9_2((uint64_t)thunk for @escaping @callee_guaranteed (@unowned Bool, @guaranteed Error?) -> (), MEMORY[0x1E0C809B0], 1107296256, v9, v10);
  OUTLINED_FUNCTION_55_20();
  objc_msgSend(v5, sel_invalidateLink_completionHandler_, a1, v8);
  _Block_release(v8);
  OUTLINED_FUNCTION_10_10();
}

void closure #1 in RecentsLinkController.delete(tuLink:refresh:)(uint64_t a1, void *a2, char a3)
{
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t Strong;

  if (a2)
  {
    swift_getErrorValue();
    v5 = a2;
    Error.localizedDescription.getter();
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_1BD6441D0;
    v7 = MEMORY[0x1E0DEA968];
    v8 = String.init<A>(reflecting:)();
    v10 = v9;
    *(_QWORD *)(v6 + 56) = v7;
    *(_QWORD *)(v6 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v6 + 32) = v8;
    *(_QWORD *)(v6 + 40) = v10;
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();

  }
  if ((a3 & 1) != 0)
  {
    swift_beginAccess();
    Strong = swift_weakLoadStrong();
    if (Strong)
    {
      (*(void (**)(uint64_t))(*(_QWORD *)Strong + 344))(Strong);
      swift_release();
    }
  }
}

void RecentsLinkController.engaged(with:)(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  _QWORD aBlock[6];

  v3 = OUTLINED_FUNCTION_32_3();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_11_2();
  RecentsLinkController.suggestionsService.getter();
  v6 = v5;
  v7 = objc_msgSend(a1, sel_url);
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  v8 = URL.absoluteString.getter();
  v10 = v9;
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v3);
  v11 = (void *)MEMORY[0x1C3B72E00](v8, v10);
  OUTLINED_FUNCTION_2_1();
  aBlock[4] = TPNumberPadCharacter.rawValue.getter;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed (@guaranteed Error?) -> ();
  aBlock[3] = &block_descriptor_43;
  v12 = _Block_copy(aBlock);
  objc_msgSend(v6, sel_registerURLFeedback_absoluteURL_withCompletion_, 1, v11, v12);
  _Block_release(v12);
  swift_unknownObjectRelease();

}

Swift::Void __swiftcall RecentsLinkController.refresh(links:)(Swift::OpaquePointer links)
{
  void *v2;
  void *v3;
  Swift::OpaquePointer *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;

  RecentsLinkController.modelLocked.getter();
  v3 = v2;
  v4 = (Swift::OpaquePointer *)OUTLINED_FUNCTION_15();
  v4[2]._rawValue = links._rawValue;
  v5 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v5 + 16) = partial apply for closure #1 in RecentsLinkController.refresh(links:);
  *(_QWORD *)(v5 + 24) = v4;
  v6 = OUTLINED_FUNCTION_9_2((uint64_t)thunk for @escaping @callee_guaranteed (@guaranteed RecentLinkCallItems) -> (), MEMORY[0x1E0C809B0], 1107296256, v7, v8);
  swift_bridgeObjectRetain();
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  OUTLINED_FUNCTION_27_0();
  objc_msgSend(v3, sel_performWhileLocked_, v6);

  _Block_release(v6);
  LOBYTE(v3) = OUTLINED_FUNCTION_15_64();
  OUTLINED_FUNCTION_19();
  swift_release();
  if ((v3 & 1) != 0)
    __break(1u);
  else
    OUTLINED_FUNCTION_10_10();
}

uint64_t closure #1 in RecentsLinkController.refresh(links:)(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  _QWORD *v5;
  void (*v6)(_QWORD *, _QWORD);
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  void *v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t (*v26)(_QWORD *, _QWORD);
  uint64_t v27;
  uint64_t (*v28)(_QWORD *);
  unint64_t v29;
  _QWORD v30[4];

  v3 = a1;
  result = (*(uint64_t (**)(void))(*(_QWORD *)a1 + 184))();
  if ((result & 1) == 0)
  {
    v28 = *(uint64_t (**)(_QWORD *))(*(_QWORD *)v3 + 200);
    v6 = (void (*)(_QWORD *, _QWORD))v28(v30);
    if ((*v5 & 1) == 0)
      *v5 |= 1uLL;
    v6(v30, 0);
    if (a2 >> 62)
    {
      swift_bridgeObjectRetain();
      v7 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      v7 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v8 = MEMORY[0x1E0DEE9D8];
    if (v7)
    {
      v30[0] = MEMORY[0x1E0DEE9D8];
      result = specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, v7 & ~(v7 >> 63), 0);
      if (v7 < 0)
      {
        __break(1u);
        return result;
      }
      v27 = v3;
      v9 = 0;
      v10 = v30[0];
      v29 = a2 & 0xC000000000000001;
      do
      {
        if (v29)
          v11 = (id)MEMORY[0x1C3B73D18](v9, a2);
        else
          v11 = *(id *)(a2 + 8 * v9 + 32);
        v12 = v11;
        v13 = MEMORY[0x1E0DEE9E8];
        if ((v8 & 0xC000000000000000) != 0 && _CocoaArrayWrapper.endIndex.getter())
        {
          specialized Set.init(_nonEmptyArrayLiteral:)(v8);
          v13 = v14;
        }
        v15 = v7;
        v16 = a2;
        if (one-time initialization token for faceTime != -1)
          swift_once();
        v17 = static ParticipantContactDetailsCache.faceTime;
        swift_retain();

        v30[0] = v10;
        v19 = *(_QWORD *)(v10 + 16);
        v18 = *(_QWORD *)(v10 + 24);
        if (v19 >= v18 >> 1)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v18 > 1, v19 + 1, 1);
          v10 = v30[0];
        }
        ++v9;
        *(_QWORD *)(v10 + 16) = v19 + 1;
        v20 = (_QWORD *)(v10 + 24 * v19);
        v20[4] = v12;
        v20[5] = v13;
        v20[6] = v17;
        v7 = v15;
        a2 = v16;
      }
      while (v15 != v9);
      v3 = v27;
    }
    else
    {
      v10 = MEMORY[0x1E0DEE9D8];
    }
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_1BD6441D0;
    v30[0] = *(_QWORD *)(v10 + 16);
    v22 = String.init<A>(reflecting:)();
    v24 = v23;
    *(_QWORD *)(v21 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v21 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v21 + 32) = v22;
    *(_QWORD *)(v21 + 40) = v24;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t))(*(_QWORD *)v3 + 240))(v10);
    v26 = (uint64_t (*)(_QWORD *, _QWORD))v28(v30);
    if ((*v25 & 1) != 0)
      *v25 &= ~1uLL;
    return v26(v30, 0);
  }
  return result;
}

void RecentsLinkController.rejectSuggestedURL(_:refresh:)(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  _QWORD aBlock[6];

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_11_2();
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v6 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v6 + 16) = xmmword_1BD6441D0;
  v7 = OUTLINED_FUNCTION_32_3();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v2, a1, v7);
  __swift_storeEnumTagSinglePayload(v2, 0, 1, v7);
  specialized >> prefix<A>(_:)(v2);
  v9 = v8;
  v11 = v10;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v2, &demangling cache variable for type metadata for URL?);
  *(_QWORD *)(v6 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v6 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v6 + 32) = v9;
  *(_QWORD *)(v6 + 40) = v11;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  OUTLINED_FUNCTION_30_4();
  RecentsLinkController.suggestionsService.getter();
  v13 = v12;
  v14 = URL.absoluteString.getter();
  v15 = (void *)MEMORY[0x1C3B72E00](v14);
  swift_bridgeObjectRelease();
  v16 = OUTLINED_FUNCTION_15();
  swift_weakInit();
  v17 = OUTLINED_FUNCTION_15();
  *(_BYTE *)(v17 + 16) = a2 & 1;
  *(_QWORD *)(v17 + 24) = v16;
  aBlock[4] = partial apply for closure #1 in RecentsLinkController.rejectSuggestedURL(_:refresh:);
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed (@guaranteed Error?) -> ();
  aBlock[3] = &block_descriptor_112;
  v18 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v13, sel_registerURLFeedback_absoluteURL_withCompletion_, 0, v15, v18);
  _Block_release(v18);
  swift_unknownObjectRelease();

}

uint64_t closure #1 in RecentsLinkController.rejectSuggestedURL(_:refresh:)(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  if (one-time initialization token for conversationKit != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1BD6441D0;
  v4 = String.init<A>(reflecting:)();
  v6 = v5;
  *(_QWORD *)(v3 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v3 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v3 + 32) = v4;
  *(_QWORD *)(v3 + 40) = v6;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  result = swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    swift_beginAccess();
    result = swift_weakLoadStrong();
    if (result)
    {
      (*(void (**)(uint64_t))(*(_QWORD *)result + 352))(result);
      return swift_release();
    }
  }
  return result;
}

uint64_t RecentsLinkController.recentsLinkControllerModel(_:updatedCallItems:handlerWithModelLocked:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t ObjectType;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  RecentsLinkController.callItemsLocked.getter();
  v9 = v8;
  v10 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v10 + 16) = a2;
  v11 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v11 + 16) = partial apply for closure #1 in RecentsLinkController.recentsLinkControllerModel(_:updatedCallItems:handlerWithModelLocked:);
  *(_QWORD *)(v11 + 24) = v10;
  v12 = MEMORY[0x1E0C809B0];
  v13 = OUTLINED_FUNCTION_9_2((uint64_t)thunk for @escaping @callee_guaranteed (@guaranteed RecentLinkCallItems) -> (), MEMORY[0x1E0C809B0], 1107296256, v28, v30);
  OUTLINED_FUNCTION_8_8();
  OUTLINED_FUNCTION_21_7();
  swift_release();
  objc_msgSend(v9, sel_performWhileLocked_, v13);

  _Block_release(v13);
  LOBYTE(v9) = OUTLINED_FUNCTION_115_0();
  OUTLINED_FUNCTION_74();
  if ((v9 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    RecentsLinkController.modelLocked.getter();
    v15 = v14;
    v16 = OUTLINED_FUNCTION_15();
    *(_QWORD *)(v16 + 16) = a3;
    *(_QWORD *)(v16 + 24) = a4;
    v17 = OUTLINED_FUNCTION_15();
    *(_QWORD *)(v17 + 16) = partial apply for thunk for @escaping @callee_guaranteed () -> (@owned String);
    *(_QWORD *)(v17 + 24) = v16;
    v18 = OUTLINED_FUNCTION_9_2((uint64_t)thunk for @escaping @callee_guaranteed (@guaranteed RecentLinkCallItems) -> (), v12, 1107296256, v29, v31);
    OUTLINED_FUNCTION_15_22();
    OUTLINED_FUNCTION_21_11();
    objc_msgSend(v15, sel_performWhileLocked_, v18);

    _Block_release(v18);
    LOBYTE(v18) = OUTLINED_FUNCTION_15_64();
    OUTLINED_FUNCTION_17_22();
    if ((v18 & 1) == 0)
    {
      if (one-time initialization token for conversationKit == -1)
        goto LABEL_4;
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_9:
  swift_once();
LABEL_4:
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v19 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v19 + 16) = xmmword_1BD6441D0;
  v20 = String.init<A>(reflecting:)();
  v22 = v21;
  *(_QWORD *)(v19 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v19 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v19 + 32) = v20;
  *(_QWORD *)(v19 + 40) = v22;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  v23 = OUTLINED_FUNCTION_30_4();
  if ((*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 128))(v23))
  {
    v25 = v24;
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 8))(v4, ObjectType, v25);
    OUTLINED_FUNCTION_22();
    OUTLINED_FUNCTION_19();
    return OUTLINED_FUNCTION_113();
  }
  else
  {
    OUTLINED_FUNCTION_22();
    return OUTLINED_FUNCTION_19();
  }
}

uint64_t closure #1 in RecentsLinkController.recentsLinkControllerModel(_:updatedCallItems:handlerWithModelLocked:)(uint64_t a1, uint64_t a2)
{
  uint64_t (*v3)(uint64_t);

  v3 = *(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 96);
  swift_bridgeObjectRetain();
  return v3(a2);
}

void RecentsLinkController.delete(callItem:from:completionHandler:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD v16[2];

  OUTLINED_FUNCTION_93();
  v1 = v0;
  v3 = v2;
  v16[0] = v5;
  v16[1] = v4;
  v7 = v6;
  v8 = OUTLINED_FUNCTION_29_39();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x1E0C80A78](v8);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<RecentsCallItem>);
  v11 = *(unsigned __int8 *)(v9 + 80);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1BD6441D0;
  outlined init with copy of ConversationControlsAppLaunchButtonType(v7, v12 + ((v11 + 32) & ~v11), type metadata accessor for RecentsCallItem);
  outlined init with copy of ConversationControlsAppLaunchButtonType(v7, (uint64_t)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for RecentsCallItem);
  v13 = (v11 + 24) & ~v11;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v1;
  outlined init with take of StagedCollaboration((uint64_t)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v14 + v13, type metadata accessor for RecentsCallItem);
  v15 = (_QWORD *)(v14 + ((v10 + v13 + 7) & 0xFFFFFFFFFFFFFFF8));
  *v15 = v16[0];
  v15[1] = v3;
  swift_retain();
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  RecentsLinkController.showDeleteConfirmationIfRequired(for:isRemovingAllRecents:from:completionHandler:)();
  OUTLINED_FUNCTION_74();
  OUTLINED_FUNCTION_30_4();
  OUTLINED_FUNCTION_52_1();
}

uint64_t sub_1BD22C758()
{
  swift_release();
  OUTLINED_FUNCTION_239();
  return swift_deallocObject();
}

void partial apply for closure #2 in RecentsLinkController.showDeleteConfirmationIfRequired(for:isRemovingAllRecents:from:completionHandler:)()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(v0 + 16))(1);
  OUTLINED_FUNCTION_0();
}

void partial apply for closure #3 in RecentsLinkController.showDeleteConfirmationIfRequired(for:isRemovingAllRecents:from:completionHandler:)()
{
  uint64_t v0;

  (*(void (**)(_QWORD))(v0 + 16))(0);
  OUTLINED_FUNCTION_0();
}

uint64_t sub_1BD22C7B4()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in RecentsLinkControllerModel.updateCallItems()()
{
  uint64_t *v0;

  return closure #1 in RecentsLinkControllerModel.updateCallItems()(v0[2], v0[3], v0[4], v0[5], v0[6]);
}

uint64_t SGURL.linkURL.getter@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  id v3;
  uint64_t v4;

  v3 = objc_msgSend(v1, sel_url);
  OUTLINED_FUNCTION_110_6();

  v4 = OUTLINED_FUNCTION_32_3();
  return OUTLINED_FUNCTION_34_5(a1, 0, 1, v4);
}

uint64_t protocol witness for RecentsURLProviding.linkURL.getter in conformance SGURL@<X0>(uint64_t a1@<X8>)
{
  return SGURL.linkURL.getter(a1);
}

uint64_t TUConversationLink.linkURL.getter@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;

  if (objc_msgSend(v1, sel_URL))
  {
    OUTLINED_FUNCTION_110_6();

    v3 = 0;
  }
  else
  {
    v3 = 1;
  }
  v4 = OUTLINED_FUNCTION_32_3();
  return OUTLINED_FUNCTION_34_5(a1, v3, 1, v4);
}

uint64_t protocol witness for RecentsURLProviding.linkURL.getter in conformance TUConversationLink@<X0>(uint64_t a1@<X8>)
{
  return TUConversationLink.linkURL.getter(a1);
}

uint64_t sub_1BD22C8E8()
{
  swift_weakDestroy();
  OUTLINED_FUNCTION_58();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in RecentsLinkController.resume()()
{
  return closure #1 in closure #1 in RecentsLinkController.resume()();
}

uint64_t sub_1BD22C90C()
{
  return OUTLINED_FUNCTION_23_4();
}

uint64_t sub_1BD22C91C()
{
  return OUTLINED_FUNCTION_23_4();
}

uint64_t partial apply for closure #1 in RecentsLinkController.shouldConfirmDeleteAll.getter(uint64_t a1)
{
  uint64_t v1;

  return closure #1 in RecentsLinkController.shouldConfirmDeleteAll.getter(a1, *(_QWORD **)(v1 + 16));
}

void partial apply for closure #1 in RecentsLinkController.delete(tuLink:refresh:)(uint64_t a1, void *a2)
{
  uint64_t v2;

  closure #1 in RecentsLinkController.delete(tuLink:refresh:)(a1, a2, *(_BYTE *)(v2 + 16));
}

uint64_t sub_1BD22C940()
{
  OUTLINED_FUNCTION_92_7();
  OUTLINED_FUNCTION_58();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in RecentsLinkController.refresh(links:)(uint64_t a1)
{
  uint64_t v1;

  return closure #1 in RecentsLinkController.refresh(links:)(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BD22C964()
{
  return objectdestroy_66Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30], (void (*)(_QWORD))MEMORY[0x1E0DEEEC0]);
}

uint64_t partial apply for closure #1 in RecentsLinkController.recentsLinkControllerModel(_:updatedCallItems:handlerWithModelLocked:)(uint64_t a1)
{
  uint64_t v1;

  return closure #1 in RecentsLinkController.recentsLinkControllerModel(_:updatedCallItems:handlerWithModelLocked:)(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BD22C98C()
{
  uint64_t v0;
  int *v1;
  unint64_t v2;
  id *v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id *v9;
  uint64_t v10;
  uint64_t v11;
  id *v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_93();
  v1 = (int *)OUTLINED_FUNCTION_29_39();
  v2 = (*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  swift_release();
  v3 = (id *)(v0 + v2);
  type metadata accessor for RecentsCallItemType(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 3u:
    case 4u:
      swift_bridgeObjectRelease();
      v4 = (int *)type metadata accessor for RecentCallRecentItemMetadata(0);
      v5 = (uint64_t)v3 + v4[5];
      v6 = OUTLINED_FUNCTION_33();
      if (!__swift_getEnumTagSinglePayload(v5, 1, v6))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
      OUTLINED_FUNCTION_18_10(v4[6]);
      OUTLINED_FUNCTION_68_3();
      v7 = (uint64_t)v3 + v4[10];
      v8 = type metadata accessor for UUID();
      if (!OUTLINED_FUNCTION_46_7(v7))
        OUTLINED_FUNCTION_59_4(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8));
      v9 = (id *)((char *)v3 + v4[11]);
      if (*v9)
      {

        swift_bridgeObjectRelease();
        swift_release();
      }
      if (!OUTLINED_FUNCTION_46_7((uint64_t)v3 + v4[12]))
        OUTLINED_FUNCTION_59_4(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8));
      OUTLINED_FUNCTION_18_10(v4[13]);
      break;
    case 1u:
      v10 = type metadata accessor for UUID();
      (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v0 + v2, v10);
      v11 = OUTLINED_FUNCTION_67_11();
      OUTLINED_FUNCTION_68_3();
      OUTLINED_FUNCTION_18_10(*(int *)(v11 + 24));
      v12 = (id *)((char *)v3 + *(int *)(v11 + 28));
      if (*v12)
      {

        swift_bridgeObjectRelease();
        goto LABEL_14;
      }
      break;
    case 2u:

      swift_bridgeObjectRelease();
LABEL_14:
      swift_release();
      break;
    default:
      break;
  }
  OUTLINED_FUNCTION_5_49();
  OUTLINED_FUNCTION_5_49();
  OUTLINED_FUNCTION_5_49();
  OUTLINED_FUNCTION_5_49();
  v13 = (uint64_t)v3 + v1[9];
  v14 = OUTLINED_FUNCTION_33();
  if (!OUTLINED_FUNCTION_46_7(v13))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  OUTLINED_FUNCTION_18_10(v1[10]);
  OUTLINED_FUNCTION_18_10(v1[11]);
  OUTLINED_FUNCTION_68_3();
  OUTLINED_FUNCTION_5_49();
  OUTLINED_FUNCTION_18_10(v1[14]);
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in RecentsLinkController.delete(callItem:from:completionHandler:)(char a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t (*v5)(_QWORD);

  v3 = *(_QWORD *)(OUTLINED_FUNCTION_29_39() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(uint64_t (**)(_QWORD))(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));
  if ((a1 & 1) != 0)
    (*(void (**)(unint64_t, uint64_t))(**(_QWORD **)(v1 + 16) + 304))(v1 + v4, 1);
  return v5(a1 & 1);
}

unint64_t lazy protocol witness table accessor for type RecentsLinkControllerModel.UpdateState and conformance RecentsLinkControllerModel.UpdateState()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type RecentsLinkControllerModel.UpdateState and conformance RecentsLinkControllerModel.UpdateState;
  if (!lazy protocol witness table cache variable for type RecentsLinkControllerModel.UpdateState and conformance RecentsLinkControllerModel.UpdateState)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for RecentsLinkControllerModel.UpdateState, &type metadata for RecentsLinkControllerModel.UpdateState);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RecentsLinkControllerModel.UpdateState and conformance RecentsLinkControllerModel.UpdateState);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type RecentsLinkControllerModel.UpdateState and conformance RecentsLinkControllerModel.UpdateState;
  if (!lazy protocol witness table cache variable for type RecentsLinkControllerModel.UpdateState and conformance RecentsLinkControllerModel.UpdateState)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for RecentsLinkControllerModel.UpdateState, &type metadata for RecentsLinkControllerModel.UpdateState);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RecentsLinkControllerModel.UpdateState and conformance RecentsLinkControllerModel.UpdateState);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type RecentsLinkControllerModel.UpdateState and conformance RecentsLinkControllerModel.UpdateState;
  if (!lazy protocol witness table cache variable for type RecentsLinkControllerModel.UpdateState and conformance RecentsLinkControllerModel.UpdateState)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for RecentsLinkControllerModel.UpdateState, &type metadata for RecentsLinkControllerModel.UpdateState);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RecentsLinkControllerModel.UpdateState and conformance RecentsLinkControllerModel.UpdateState);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type RecentsLinkControllerModel.UpdateState and conformance RecentsLinkControllerModel.UpdateState;
  if (!lazy protocol witness table cache variable for type RecentsLinkControllerModel.UpdateState and conformance RecentsLinkControllerModel.UpdateState)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for RecentsLinkControllerModel.UpdateState, &type metadata for RecentsLinkControllerModel.UpdateState);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RecentsLinkControllerModel.UpdateState and conformance RecentsLinkControllerModel.UpdateState);
  }
  return result;
}

void sub_1BD22CD80()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))(v1 + 136))();
  v0[1] = v2;
  OUTLINED_FUNCTION_0();
}

void sub_1BD22CDA8()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))(v1 + 160))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD22CDD0()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))(v1 + 184))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD22CDF4(_QWORD *a1, uint64_t a2)
{
  (*(void (**)(_QWORD))(**(_QWORD **)a2 + 192))(*a1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD22CE1C()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))(v1 + 232))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD22CE44()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))(v1 + 256))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD22CE6C()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))(v1 + 88))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD22CE94()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))(v1 + 128))();
  v0[1] = v2;
  OUTLINED_FUNCTION_0();
}

uint64_t dispatch thunk of RecentsLinkControllerDelegate.recentsLinkControllerRefreshedLinks(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of RecentsLinkControllerModelDelegate.recentsLinkControllerModel(_:updatedCallItems:handlerWithModelLocked:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

uint64_t method lookup function for RecentsLinkControllerModel()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RecentsLinkControllerModel.delegate.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of RecentsLinkControllerModel.delegate.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of RecentsLinkControllerModel.delegate.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of RecentsLinkControllerModel.tuLinks.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of RecentsLinkControllerModel.tuLinks.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of RecentsLinkControllerModel.tuLinks.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of RecentsLinkControllerModel.updateState.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of RecentsLinkControllerModel.updateState.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of RecentsLinkControllerModel.updateState.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of RecentsLinkControllerModel.conversationLinks.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of RecentsLinkControllerModel.conversationLinks.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of RecentsLinkControllerModel.conversationLinks.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of RecentsLinkControllerModel.suggestionsURLs.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of RecentsLinkControllerModel.suggestionsURLs.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t dispatch thunk of RecentsLinkControllerModel.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 296))();
}

ValueMetadata *type metadata accessor for RecentsLinkControllerModel.UpdateState()
{
  return &type metadata for RecentsLinkControllerModel.UpdateState;
}

uint64_t method lookup function for RecentLinkCallItems()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RecentLinkCallItems.callItems.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

uint64_t dispatch thunk of RecentLinkCallItems.callItems.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of RecentLinkCallItems.callItems.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of RecentLinkCallItems.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t method lookup function for RecentsLinkController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RecentsLinkController.delegate.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of RecentsLinkController.delegate.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of RecentsLinkController.delegate.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of RecentsLinkController.__allocating_init(conversationManager:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 248))();
}

uint64_t dispatch thunk of RecentsLinkController.suspend()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of RecentsLinkController.callItems.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t dispatch thunk of RecentsLinkController.deleteAll()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 288))();
}

uint64_t dispatch thunk of RecentsLinkController.delete(callItems:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 296))();
}

uint64_t dispatch thunk of RecentsLinkController.delete(callItem:refresh:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 304))();
}

uint64_t dispatch thunk of RecentsLinkController.delete(tuLink:refresh:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 320))();
}

uint64_t dispatch thunk of RecentsLinkController.engaged(with:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 328))();
}

uint64_t dispatch thunk of RecentsLinkController.refresh(links:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 336))();
}

uint64_t dispatch thunk of RecentsLinkController.refreshLinks()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 344))();
}

uint64_t dispatch thunk of RecentsLinkController.refreshSuggestionsURLs()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 352))();
}

uint64_t dispatch thunk of RecentsURLProviding.linkURL.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t partial apply for closure #1 in RecentsLinkController.rejectSuggestedURL(_:refresh:)(uint64_t a1)
{
  uint64_t v1;

  return closure #1 in RecentsLinkController.rejectSuggestedURL(_:refresh:)(a1, *(_BYTE *)(v1 + 16));
}

void partial apply for closure #2 in RecentsLinkControllerModel.generateCallItems(for:suggestionsURLs:)(void **a1)
{
  uint64_t v1;

  closure #2 in RecentsLinkControllerModel.generateCallItems(for:suggestionsURLs:)(a1, *(unint64_t **)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1BD22D0BC()
{
  OUTLINED_FUNCTION_115();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_239();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in RecentsListViewController.deleteAllRecents(_:)(uint64_t result)
{
  return closure #1 in RecentsListViewController.deleteAllRecents(_:)(result);
}

uint64_t sub_1BD22D0E4()
{
  return objectdestroy_66Tm((void (*)(_QWORD))MEMORY[0x1E0DEEB08], (void (*)(_QWORD))MEMORY[0x1E0DEEEC0]);
}

uint64_t sub_1BD22D0FC()
{
  return objectdestroy_66Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0], (void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_1BD22D114()
{
  OUTLINED_FUNCTION_115();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void partial apply for closure #1 in RecentsLinkController.delete(conversationLink:refresh:)(uint64_t a1)
{
  uint64_t v1;

  closure #1 in RecentsLinkController.delete(conversationLink:refresh:)(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_BYTE *)(v1 + 48));
}

uint64_t partial apply for closure #1 in closure #1 in RecentsLinkControllerModel.updateCallItems()()
{
  uint64_t v0;

  return closure #1 in closure #1 in RecentsLinkControllerModel.updateCallItems()(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24));
}

uint64_t sub_1BD22D168()
{
  uint64_t v0;

  OUTLINED_FUNCTION_115();
  if (*(_QWORD *)(v0 + 24))
    swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t partial apply for specialized closure #1 in RecentsListViewController.deleteRecentCalls(_:preparationHandler:)(uint64_t a1)
{
  uint64_t v1;

  return specialized closure #1 in RecentsListViewController.deleteRecentCalls(_:preparationHandler:)(a1, *(_QWORD *)(v1 + 16), *(uint64_t (**)(_QWORD))(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64));
}

void *OUTLINED_FUNCTION_93_5@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 128) = a1;
  *(_QWORD *)(v2 - 120) = v1;
  return _Block_copy((const void *)(v2 - 144));
}

void OUTLINED_FUNCTION_101_7()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);

  outlined destroy of AccountUpdateNotice(v0, v1);
}

void OUTLINED_FUNCTION_102_5()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);

  outlined destroy of AccountUpdateNotice(v0, v1);
}

id NSCache.__allocating_init()()
{
  return objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
}

id DefaultObjectCache.object(forKey:defaultObject:)(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v2;
  void *v5;
  id v6;

  v5 = *(void **)(v2 + 16);
  v6 = objc_msgSend(v5, sel_objectForKey_, a1);
  if (!v6)
  {
    v6 = (id)a2();
    objc_msgSend(v5, sel_setObject_forKey_, v6, a1);
  }
  return v6;
}

uint64_t DefaultObjectCache.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t DefaultObjectCache.__deallocating_deinit()
{
  DefaultObjectCache.deinit();
  return swift_deallocClassInstance();
}

uint64_t DefaultObjectCache.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  DefaultObjectCache.init()();
  return v0;
}

uint64_t DefaultObjectCache.init()()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSCache);
  *(_QWORD *)(v0 + 16) = NSCache.__allocating_init()();
  return v0;
}

double DefaultObjectCache<>.cgFloat(forKey:defaultValue:)(uint64_t a1, uint64_t a2, double a3)
{
  float v5;
  uint64_t v6;
  float v7;

  v5 = a3;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  swift_retain();
  v7 = DefaultObjectCache<>.float(forKey:defaultValue:)(v5);
  swift_release();
  return v7;
}

uint64_t sub_1BD22D468()
{
  swift_release();
  return swift_deallocObject();
}

float partial apply for implicit closure #1 in DefaultObjectCache<>.cgFloat(forKey:defaultValue:)()
{
  uint64_t v0;

  return (*(double (**)(void))(v0 + 16))();
}

float DefaultObjectCache<>.float(forKey:defaultValue:)(float a1)
{
  id v2;
  double v3;
  id v4;
  id v5;
  float v6;
  float v7;

  v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  *(float *)&v3 = a1;
  v4 = objc_msgSend(v2, sel_initWithFloat_, v3);
  v5 = DefaultObjectCache.object(forKey:defaultObject:)((uint64_t)v4, (uint64_t (*)(void))partial apply for implicit closure #1 in DefaultObjectCache<>.float(forKey:defaultValue:));

  objc_msgSend(v5, sel_floatValue);
  v7 = v6;

  return v7;
}

id implicit closure #1 in DefaultObjectCache<>.float(forKey:defaultValue:)(float (*a1)(void))
{
  float v1;
  id v2;
  double v3;

  v1 = a1();
  v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  *(float *)&v3 = v1;
  return objc_msgSend(v2, sel_initWithFloat_, v3);
}

id partial apply for implicit closure #1 in DefaultObjectCache<>.float(forKey:defaultValue:)()
{
  uint64_t v0;

  return implicit closure #1 in DefaultObjectCache<>.float(forKey:defaultValue:)(*(float (**)(void))(v0 + 32));
}

uint64_t type metadata completion function for DefaultObjectCache()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for DefaultObjectCache(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DefaultObjectCache);
}

uint64_t method lookup function for DefaultObjectCache()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DefaultObjectCache.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t VideoAttributeOrientation.deviceOrientation.getter(int a1)
{
  if ((a1 - 1) > 2)
    return 1;
  else
    return qword_1BD652890[a1 - 1];
}

void specialized Sequence.contains(where:)(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  BOOL v19;
  unint64_t v20;
  char v21;
  int64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  uint64_t (*v27)(char *);
  uint64_t v28;

  v27 = a1;
  v5 = type metadata accessor for Participant(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v24 - v10;
  v12 = *(_QWORD *)(a3 + 56);
  v25 = a3 + 56;
  v13 = 1 << *(_BYTE *)(a3 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & v12;
  v26 = (unint64_t)(v13 + 63) >> 6;
  v28 = a3;
  swift_bridgeObjectRetain();
  v16 = 0;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v16 << 6);
      goto LABEL_23;
    }
    v19 = __OFADD__(v16++, 1);
    if (v19)
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v16 >= v26)
      goto LABEL_30;
    v20 = *(_QWORD *)(v25 + 8 * v16);
    if (!v20)
      break;
LABEL_22:
    v15 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v16 << 6);
LABEL_23:
    outlined init with copy of RecentsCallItem(*(_QWORD *)(v28 + 48) + *(_QWORD *)(v6 + 72) * v18, (uint64_t)v11, (void (*)(_QWORD))type metadata accessor for Participant);
    outlined init with take of Participant((uint64_t)v11, (uint64_t)v9);
    v23 = v27(v9);
    outlined destroy of RemoteControlRequest((uint64_t)v9, type metadata accessor for Participant);
    if (v3 || (v23 & 1) != 0)
    {
LABEL_30:
      swift_release();
      OUTLINED_FUNCTION_1_29();
      return;
    }
  }
  OUTLINED_FUNCTION_55_21();
  if (v21 == v19)
    goto LABEL_30;
  OUTLINED_FUNCTION_54_25();
  if (v20)
    goto LABEL_21;
  OUTLINED_FUNCTION_55_21();
  if (v21 == v19)
    goto LABEL_30;
  OUTLINED_FUNCTION_54_25();
  if (v20)
    goto LABEL_21;
  OUTLINED_FUNCTION_55_21();
  if (v21 == v19)
    goto LABEL_30;
  OUTLINED_FUNCTION_54_25();
  if (v20)
    goto LABEL_21;
  OUTLINED_FUNCTION_55_21();
  if (v21 == v19)
    goto LABEL_30;
  OUTLINED_FUNCTION_54_25();
  if (v20)
  {
LABEL_21:
    v16 = v22;
    goto LABEL_22;
  }
  while (1)
  {
    v16 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v16 >= v26)
      goto LABEL_30;
    v20 = *(_QWORD *)(v25 + 8 * v16);
    ++v22;
    if (v20)
      goto LABEL_22;
  }
LABEL_32:
  __break(1u);
}

uint64_t specialized Sequence.contains(where:)(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  char v11;
  char v12;
  __int128 v14;
  char v15;

  v6 = v5;
  swift_bridgeObjectRetain();
  swift_retain();
  specialized LazyMapSequence.makeIterator()(a3, a4, a5, (uint64_t)&v14);
  while (1)
  {
    specialized LazyMapSequence.Iterator.next()();
    if (v11 == 2)
      break;
    v15 = v11 & 1;
    v12 = a1(&v15);
    if (v6 || (v12 & 1) != 0)
    {
      outlined consume of [String : Application].Iterator._Variant();
      swift_release();
      return 1;
    }
  }
  outlined consume of [String : Application].Iterator._Variant();
  swift_release();
  return 0;
}

void ReportSpamManager.__allocating_init(idsServiceType:)(_BYTE *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  _QWORD *v11;

  if (*a1)
    v1 = 0xD000000000000026;
  else
    v1 = 0xD00000000000002ALL;
  if (*a1)
    v2 = 0x80000001BD66C030;
  else
    v2 = 0x80000001BD66C000;
  v3 = objc_allocWithZone(MEMORY[0x1E0D34358]);
  v4 = @nonobjc IDSService.init(service:)(v1, v2);
  if (!v4)
  {
    __break(1u);
    goto LABEL_12;
  }
  v5 = v4;
  v6 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  if (!v6)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v7 = v6;
  v8 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  if (v8)
  {
    v9 = v8;
    v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DBD2F0]), sel_init);
    v11 = (_QWORD *)OUTLINED_FUNCTION_15();
    v11[2] = v5;
    v11[3] = v7;
    v11[4] = v9;
    v11[5] = v10;
    OUTLINED_FUNCTION_91();
    return;
  }
LABEL_13:
  __break(1u);
}

void ReportSpamManager.reportFaceTimeCallSpam<A>(call:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  NSObject *v3;
  NSObject *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  objc_class *v25;
  NSObject *v26;
  NSDictionary v27;
  unsigned __int8 v28;
  os_log_type_t v29;
  _BOOL4 v30;
  os_log_type_t v31;
  const char *v32;
  uint64_t __dst[22];
  uint64_t __src[23];

  v4 = v3;
  v7 = ReportSpamManager.fetchLocalFaceTimeHandles()();
  specialized Collection.first.getter(v7);
  if (v9)
  {
    v10 = v8;
    v11 = v9;
    OUTLINED_FUNCTION_2_1();
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 32))(__src, v10, v11, a2, a3);
    swift_bridgeObjectRelease();
    memcpy(__dst, __src, sizeof(__dst));
    v12 = ReportSpamManager.SpamDataModel.mapToDict.getter();
    outlined release of ReportSpamManager.SpamDataModel((uint64_t)__src);
    if (one-time initialization token for logger != -1)
      swift_once();
    v13 = OUTLINED_FUNCTION_17_2();
    __swift_project_value_buffer(v13, (uint64_t)static ReportSpamManager.logger);
    OUTLINED_FUNCTION_16_31();
    v14 = Logger.logObject.getter();
    v15 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)OUTLINED_FUNCTION_105();
      __dst[0] = OUTLINED_FUNCTION_105();
      *(_DWORD *)v16 = 136315138;
      if (v12)
      {
        OUTLINED_FUNCTION_8_8();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [AnyHashable : Any]);
        v17 = String.init<A>(reflecting:)();
        v19 = v18;
      }
      else
      {
        v19 = 0xE300000000000000;
        v17 = 7104878;
      }
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v17, v19, __dst);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_19_1();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_48(&dword_1BD004000, v14, v15, "ReportSpamManager: report spam, model.dictionary: %s", v16);
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_60();
    }

    OUTLINED_FUNCTION_19_1();
    v25 = v4[2].isa;
    v26 = v25;
    if (v12)
    {
      v27.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
      OUTLINED_FUNCTION_2_1();
    }
    else
    {
      v27.super.isa = 0;
    }
    v28 = -[NSObject reportSpamMessage:](v26, sel_reportSpamMessage_, v27.super.isa);

    Logger.logObject.getter();
    v29 = OUTLINED_FUNCTION_31_6();
    v30 = os_log_type_enabled(v26, v29);
    if ((v28 & 1) != 0)
    {
      if (v30)
      {
        *(_WORD *)OUTLINED_FUNCTION_105() = 0;
        v31 = v29;
        v32 = "ReportSpamManager: report spam was sent successfully";
        goto LABEL_23;
      }
    }
    else if (v30)
    {
      *(_WORD *)OUTLINED_FUNCTION_105() = 0;
      v31 = v29;
      v32 = "ReportSpamManager: report spam was rejected for some reason";
LABEL_23:
      OUTLINED_FUNCTION_22_50(&dword_1BD004000, v26, v31, v32);
      OUTLINED_FUNCTION_60();
    }

  }
  else
  {
    if (one-time initialization token for logger != -1)
      swift_once();
    v20 = OUTLINED_FUNCTION_17_2();
    __swift_project_value_buffer(v20, (uint64_t)static ReportSpamManager.logger);
    OUTLINED_FUNCTION_8_8();
    Logger.logObject.getter();
    v21 = OUTLINED_FUNCTION_31_6();
    if (os_log_type_enabled(v3, v21))
    {
      v22 = (uint8_t *)OUTLINED_FUNCTION_105();
      __src[0] = OUTLINED_FUNCTION_105();
      *(_DWORD *)v22 = 136315138;
      OUTLINED_FUNCTION_8_8();
      Set.description.getter();
      v23 = OUTLINED_FUNCTION_2_1();
      __dst[0] = OUTLINED_FUNCTION_56_23(v23, v24, __src);
      OUTLINED_FUNCTION_31_3();
      OUTLINED_FUNCTION_19_1();
      OUTLINED_FUNCTION_54_1();
      OUTLINED_FUNCTION_48(&dword_1BD004000, v4, v21, "Could not report video message spam for call due to zero registered facetime service IMAccount %s", v22);
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_60();
    }

    OUTLINED_FUNCTION_19_1();
  }
}

uint64_t *ReportSpamManager.faceTime.unsafeMutableAddressor()
{
  if (one-time initialization token for faceTime != -1)
    swift_once();
  return &static ReportSpamManager.faceTime;
}

uint64_t ReportSpamManager.reportVideoMessagingSpam(call:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  os_log_type_t v10;
  _WORD *v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[3];
  uint64_t v32;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for RecentsCallItem(0);
  outlined init with copy of Date?(a1 + *(int *)(v7 + 36), (uint64_t)v6);
  v8 = type metadata accessor for Date();
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, (uint64_t)v8) == 1)
  {
    outlined destroy of Date?((uint64_t)v6);
    if (one-time initialization token for logger != -1)
      swift_once();
    v9 = OUTLINED_FUNCTION_17_2();
    OUTLINED_FUNCTION_3(v9, (uint64_t)static ReportSpamManager.logger);
    v10 = OUTLINED_FUNCTION_31_6();
    if (OUTLINED_FUNCTION_13_0(v10))
    {
      v11 = (_WORD *)OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_124_3(v11);
      OUTLINED_FUNCTION_22_50(&dword_1BD004000, v8, (os_log_type_t)v6, "Could not report video message spam for call due to nil call date");
      OUTLINED_FUNCTION_60();
    }

  }
  else
  {
    Date.timeIntervalSince1970.getter();
    v14 = v13;
    (*((void (**)(char *, NSObject *))v8[-1].isa + 1))(v6, v8);
    v15 = ReportSpamManager.fetchLocalFaceTimeHandles()();
    specialized Collection.first.getter(v15);
    if (v17)
    {
      v18 = v16;
      v19 = v17;
      OUTLINED_FUNCTION_13_3();
      RecentsCallItem.tuHandles.getter();
      v21 = v20;
      v22 = (_QWORD *)OUTLINED_FUNCTION_15();
      v22[2] = v14;
      v22[3] = v18;
      v22[4] = v19;
      v23 = (_QWORD *)OUTLINED_FUNCTION_15();
      v23[2] = partial apply for closure #2 in ReportSpamManager.reportVideoMessagingSpam(call:);
      v23[3] = v2;
      v23[4] = v21;
      v23[5] = partial apply for closure #1 in ReportSpamManager.reportVideoMessagingSpam(call:);
      v23[6] = v22;
      LOBYTE(v32) = 1;
      MEMORY[0x1E0C80A78](v23);
      v31[-2] = &v32;
      swift_retain();
      OUTLINED_FUNCTION_124();
      v12 = specialized Sequence.contains(where:)((uint64_t (*)(char *))partial apply for specialized closure #1 in Sequence<>.contains(_:), (uint64_t)&v31[-4], v21, (uint64_t)partial apply for specialized closure #1 in LazyMapSequence<>.map<A>(_:), (uint64_t)v23);
      OUTLINED_FUNCTION_22();
      OUTLINED_FUNCTION_13_3();
      return v12 & 1;
    }
    if (one-time initialization token for logger != -1)
      swift_once();
    v25 = OUTLINED_FUNCTION_17_2();
    v26 = __swift_project_value_buffer(v25, (uint64_t)static ReportSpamManager.logger);
    OUTLINED_FUNCTION_124();
    Logger.logObject.getter();
    v27 = OUTLINED_FUNCTION_12_0();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)OUTLINED_FUNCTION_105();
      v32 = OUTLINED_FUNCTION_105();
      *(_DWORD *)v28 = 136315138;
      OUTLINED_FUNCTION_124();
      Set.description.getter();
      v29 = OUTLINED_FUNCTION_13_3();
      v31[2] = OUTLINED_FUNCTION_56_23(v29, v30, &v32);
      OUTLINED_FUNCTION_31_3();
      OUTLINED_FUNCTION_19_1();
      OUTLINED_FUNCTION_54_1();
      OUTLINED_FUNCTION_48(&dword_1BD004000, v26, v27, "Could not report video message spam for call due to zero registered facetime service IMAccount %s", v28);
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_60();
    }

    OUTLINED_FUNCTION_19_1();
  }
  v12 = 0;
  return v12 & 1;
}

uint64_t ReportSpamManager.presentReportAndBlockAlert(of:from:preparationHandler:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return ReportSpamManager.presentReportAndBlockAlert(of:from:preparationHandler:)(a1, a2, a3, a4, (uint64_t (*)(void))specialized ReportSpamManager.presentReportAndBlockAlert(of:from:preparationHandler:));
}

uint64_t ReportSpamManager.presentBlockAllParticipantsAlert(of:from:preparationHandler:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return ReportSpamManager.presentReportAndBlockAlert(of:from:preparationHandler:)(a1, a2, a3, a4, (uint64_t (*)(void))specialized ReportSpamManager.presentBlockAllParticipantsAlert(of:from:preparationHandler:));
}

void ReportSpamManager.spamAction(for:)(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  _BYTE v22[16];

  type metadata accessor for RecentsCallItem(0);
  OUTLINED_FUNCTION_1_1();
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = &v22[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v5);
  v9 = &v22[-v8];
  if ((ReportSpamManager.canShowReportActions(for:)() & 1) == 0)
    goto LABEL_9;
  RecentsCallItem.tuHandles.getter();
  specialized Sequence.compactMap<A>(_:)(v10);
  v12 = v11;
  OUTLINED_FUNCTION_27();
  v13 = *(_QWORD *)(v12 + 16);
  OUTLINED_FUNCTION_2_1();
  RecentsCallItem.isGroupFaceTimeCall.getter();
  if ((v14 & 1) == 0 || v13)
  {
    RecentsCallItem.allowsFaceTimeSpamReporting.getter();
    v17 = v16;
    outlined init with copy of RecentsCallItem(a1, (uint64_t)v9, (void (*)(_QWORD))type metadata accessor for RecentsCallItem);
    if ((v17 & 1) != 0)
    {
      RecentsCallItem.isTelephony.getter();
      v19 = v18;
      outlined init with copy of RecentsCallItem((uint64_t)v9, (uint64_t)v7, (void (*)(_QWORD))type metadata accessor for RecentsCallItem);
      if ((v19 & 1) == 0)
      {
        RecentsCallItem.isOneToOne.getter();
        v21 = v20;
        outlined destroy of RemoteControlRequest((uint64_t)v7, type metadata accessor for RecentsCallItem);
        outlined destroy of RemoteControlRequest((uint64_t)v9, type metadata accessor for RecentsCallItem);
        if ((v21 & 1) != 0)
        {
          v15 = 1;
          goto LABEL_10;
        }
        goto LABEL_9;
      }
      outlined destroy of RemoteControlRequest((uint64_t)v7, type metadata accessor for RecentsCallItem);
    }
    outlined destroy of RemoteControlRequest((uint64_t)v9, type metadata accessor for RecentsCallItem);
LABEL_9:
    v15 = 2;
    goto LABEL_10;
  }
  v15 = 0;
LABEL_10:
  *a2 = v15;
}

uint64_t ReportSpamManager.presentReportSingleParticipantAlert(of:from:preparationHandler:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return ReportSpamManager.presentReportAndBlockAlert(of:from:preparationHandler:)(a1, a2, a3, a4, (uint64_t (*)(void))specialized ReportSpamManager.presentReportSingleParticipantAlert(of:from:preparationHandler:));
}

uint64_t ReportSpamManager.presentReportAndBlockAlert(of:from:preparationHandler:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  OUTLINED_FUNCTION_61_16();
  return a5();
}

uint64_t static ReportSpamManager.faceTime.getter()
{
  if (one-time initialization token for faceTime != -1)
    swift_once();
  return swift_retain();
}

void one-time initialization function for logger()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = OUTLINED_FUNCTION_17_2();
  __swift_allocate_value_buffer(v0, static ReportSpamManager.logger);
  v1 = OUTLINED_FUNCTION_50();
  __swift_project_value_buffer(v1, v2);
  Logger.init(subsystem:category:)();
  OUTLINED_FUNCTION_0();
}

uint64_t ReportSpamManager.logger.unsafeMutableAddressor()
{
  uint64_t v0;

  if (one-time initialization token for logger != -1)
    swift_once();
  v0 = OUTLINED_FUNCTION_17_2();
  return __swift_project_value_buffer(v0, (uint64_t)static ReportSpamManager.logger);
}

uint64_t static ReportSpamManager.logger.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (one-time initialization token for logger != -1)
    swift_once();
  v2 = OUTLINED_FUNCTION_17_2();
  v3 = __swift_project_value_buffer(v2, (uint64_t)static ReportSpamManager.logger);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

ConversationKit::ReportSpamManager::IDSServiceType_optional __swiftcall ReportSpamManager.IDSServiceType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  void *object;
  Swift::String v3;
  char *v4;
  Swift::Int v5;
  ConversationKit::ReportSpamManager::IDSServiceType_optional result;
  char v7;

  object = rawValue._object;
  v3._countAndFlagsBits = rawValue._countAndFlagsBits;
  v4 = v1;
  v3._object = object;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of ReportSpamManager.IDSServiceType.init(rawValue:), v3);
  result.value = OUTLINED_FUNCTION_13_3();
  if (v5 == 1)
    v7 = 1;
  else
    v7 = 2;
  if (!v5)
    v7 = 0;
  *v4 = v7;
  return result;
}

unint64_t ReportSpamManager.IDSServiceType.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000026;
  else
    return 0xD00000000000002ALL;
}

void protocol witness for static Equatable.== infix(_:_:) in conformance ReportSpamManager.IDSServiceType(char *a1, char *a2)
{
  specialized == infix<A>(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance ReportSpamManager.IDSServiceType()
{
  specialized RawRepresentable<>.hashValue.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ReportSpamManager.IDSServiceType()
{
  return specialized RawRepresentable<>.hash(into:)();
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance ReportSpamManager.IDSServiceType()
{
  specialized RawRepresentable<>._rawHashValue(seed:)();
}

ConversationKit::ReportSpamManager::IDSServiceType_optional protocol witness for RawRepresentable.init(rawValue:) in conformance ReportSpamManager.IDSServiceType(Swift::String *a1)
{
  return ReportSpamManager.IDSServiceType.init(rawValue:)(*a1);
}

void protocol witness for RawRepresentable.rawValue.getter in conformance ReportSpamManager.IDSServiceType(unint64_t *a1@<X8>)
{
  unint64_t v2;

  *a1 = ReportSpamManager.IDSServiceType.rawValue.getter();
  a1[1] = v2;
  OUTLINED_FUNCTION_0();
}

uint64_t ReportSpamManager.SpamDataModel.invitedMembers.getter()
{
  return swift_bridgeObjectRetain();
}

void ReportSpamManager.SpamDataModel.callType.getter()
{
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

uint64_t ReportSpamManager.SpamDataModel.callLength.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t ReportSpamManager.SpamDataModel.hasLink.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 33);
}

void ReportSpamManager.SpamDataModel.recipientHandleValue.getter()
{
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

void ReportSpamManager.SpamDataModel.senderHandle.getter()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(v0 + 56);
  OUTLINED_FUNCTION_0();
}

void ReportSpamManager.SpamDataModel.messageId.getter()
{
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

uint64_t ReportSpamManager.SpamDataModel.spamTime.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 80);
}

void ReportSpamManager.SpamDataModel.messageKey.getter()
{
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

void ReportSpamManager.SpamDataModel.callStatus.getter()
{
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

void ReportSpamManager.SpamDataModel.linkName.getter()
{
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

void ReportSpamManager.SpamDataModel.snapFirstName.getter()
{
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

void ReportSpamManager.SpamDataModel.snapLastName.getter()
{
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

uint64_t ReportSpamManager.SpamDataModel.mapToDict.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  NSObject *v6;
  char v7;
  int v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  id v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  os_log_type_t v57;
  _WORD *v58;
  const char *v59;
  uint64_t v60;
  os_log_type_t v61;
  _WORD *v62;
  uint64_t v63;
  os_log_type_t v64;
  _WORD *v65;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unsigned int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unsigned int v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unsigned int v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  id v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  id v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  __int128 v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  __int128 v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  char v333;
  char v334;
  _QWORD v335[4];
  char v336;
  char v337;
  int v338;
  __int16 v339;
  uint64_t v340;
  uint64_t v341;
  void *v342;
  uint64_t v343;
  NSObject *v344;
  uint64_t v345;
  char v346;
  _BYTE v347[7];
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  __int128 v354;
  __int128 v355;
  __int128 v356;
  __int128 v357;
  uint64_t v358;
  __int128 v359;
  __int128 v360;
  _DWORD v361[2];
  int v362;
  __int16 v363;

  v1 = *v0;
  v2 = v0[1];
  v3 = v0[2];
  v4 = v0[3];
  LODWORD(v322) = *((unsigned __int8 *)v0 + 33);
  HIDWORD(v322) = *((unsigned __int8 *)v0 + 32);
  v362 = *(_DWORD *)((char *)v0 + 34);
  v363 = *((_WORD *)v0 + 19);
  v5 = (void *)v0[7];
  v298 = v0[6];
  v310 = v0[5];
  v6 = v0[9];
  v274 = v0[10];
  v286 = v0[8];
  v7 = *((_BYTE *)v0 + 88);
  v8 = *(_DWORD *)((char *)v0 + 89);
  *(_DWORD *)((char *)v361 + 3) = *((_DWORD *)v0 + 23);
  v361[0] = v8;
  v250 = v0[13];
  v262 = v0[12];
  v9 = v0[16];
  v227 = v0[14];
  v239 = v0[15];
  v216 = v0[17];
  v10 = *((_OWORD *)v0 + 10);
  v359 = *((_OWORD *)v0 + 9);
  v360 = v10;
  v358 = Dictionary.init(dictionaryLiteral:)();
  *((_QWORD *)&v356 + 1) = 0xEF737265626D656DLL;
  v11 = MEMORY[0x1E0DEA968];
  OUTLINED_FUNCTION_32_32();
  *((_QWORD *)&v357 + 1) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [String]);
  *(_QWORD *)&v356 = v1;
  v12 = OUTLINED_FUNCTION_8_8();
  OUTLINED_FUNCTION_18_54(v12, v13, v14, v15, v16, v17, v18, v19, v129, v140, v152, v163, v174, v185, v195, v205, v216, v227, v239,
    v250,
    v262,
    v274,
    v286,
    v298,
    v310,
    v322,
    v335[0]);
  if ((v7 & 1) != 0)
  {
    OUTLINED_FUNCTION_76_10();
    if (one-time initialization token for logger != -1)
      swift_once();
    v56 = OUTLINED_FUNCTION_17_2();
    OUTLINED_FUNCTION_3(v56, (uint64_t)static ReportSpamManager.logger);
    v57 = OUTLINED_FUNCTION_37_4();
    if (OUTLINED_FUNCTION_13_0(v57))
    {
      v58 = (_WORD *)OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_124_3(v58);
      v59 = "call date is nil, kIDSGeneralSpamReportTimeOfMessageKey is required to report spams";
      goto LABEL_20;
    }
    goto LABEL_21;
  }
  if (!v6)
  {
    OUTLINED_FUNCTION_76_10();
    if (one-time initialization token for logger != -1)
      swift_once();
    v60 = OUTLINED_FUNCTION_17_2();
    OUTLINED_FUNCTION_3(v60, (uint64_t)static ReportSpamManager.logger);
    v61 = OUTLINED_FUNCTION_37_4();
    if (OUTLINED_FUNCTION_13_0(v61))
    {
      v62 = (_WORD *)OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_124_3(v62);
      v59 = "message id is nil, kIDSGeneralSpamReportMessageIDKey is required to report spams";
      goto LABEL_20;
    }
LABEL_21:

    return 0;
  }
  if (!v5)
  {
LABEL_16:
    OUTLINED_FUNCTION_76_10();
    if (one-time initialization token for logger != -1)
      swift_once();
    v63 = OUTLINED_FUNCTION_17_2();
    OUTLINED_FUNCTION_3(v63, (uint64_t)static ReportSpamManager.logger);
    v64 = OUTLINED_FUNCTION_37_4();
    if (OUTLINED_FUNCTION_13_0(v64))
    {
      v65 = (_WORD *)OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_124_3(v65);
      v59 = "senderHandle is nil, kIDSGeneralSpamReportSenderURIKey is required to report spams";
LABEL_20:
      OUTLINED_FUNCTION_22_50(&dword_1BD004000, v6, (os_log_type_t)v0, v59);
      OUTLINED_FUNCTION_60();
    }
    goto LABEL_21;
  }
  v206 = v3;
  v20 = v5;
  OUTLINED_FUNCTION_124();
  v21 = (id)TUCopyIDSFromIDForHandle();
  if (!v21)
  {

    OUTLINED_FUNCTION_13_3();
    goto LABEL_16;
  }
  v22 = v21;
  v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v164 = v24;
  v175 = v23;

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  OUTLINED_FUNCTION_1_97();
  v25 = swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_18_54(v25, v26, v27, v28, v29, v30, v31, v32, v130, v141, (uint64_t)v20, v164, v175, v4, v2, v206, v217, v228, v240,
    v251,
    v263,
    v275,
    v287,
    v299,
    v311,
    v323,
    v335[0]);
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  v33 = OUTLINED_FUNCTION_1_97();
  *((_QWORD *)&v357 + 1) = MEMORY[0x1E0DEB070];
  OUTLINED_FUNCTION_4_83(v33, v34, v35, v36, v37, v38, v39, v40, v131, v142, v153, v165, v176, v186, v196, v207, v218, v229, v241,
    v252,
    v264,
    v276,
    v288,
    v300,
    v312,
    v324,
    v335[0]);
  v41 = (void *)MEMORY[0x1C3B72E00](v313, v301);
  v42 = (id)TUHandleForIDSCanonicalAddress();

  *(_QWORD *)&v356 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *((_QWORD *)&v356 + 1) = v43;
  OUTLINED_FUNCTION_1_97();
  v143 = (uint64_t)v42;
  v44 = (id)TUCopyIDSFromIDForHandle();
  if (v44)
  {
    v52 = v44;
    v53 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v55 = v54;

    *((_QWORD *)&v357 + 1) = v11;
    *(_QWORD *)&v356 = v53;
    *((_QWORD *)&v356 + 1) = v55;
  }
  else
  {
    v356 = 0u;
    v357 = 0u;
  }
  OUTLINED_FUNCTION_18_54((uint64_t)v44, v45, v46, v47, v48, v49, v50, v51, v132, v143, v154, v166, v177, v187, v197, v208, v219, v230, v242,
    v253,
    v265,
    v277,
    v289,
    v301,
    v313,
    v325,
    v335[0]);
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  v67 = OUTLINED_FUNCTION_1_97();
  *((_QWORD *)&v357 + 1) = v11;
  OUTLINED_FUNCTION_4_83(v67, v68, v69, v70, v71, v72, v73, v74, v133, v144, v155, v167, v178, v188, v198, v209, v220, v231, v243,
    v254,
    v266,
    v278,
    v290,
    v302,
    v314,
    v326,
    v335[0]);
  OUTLINED_FUNCTION_72_15();
  *(_QWORD *)&v356 = v75 | 0x7079742D00000000;
  *((_QWORD *)&v356 + 1) = 0xE900000000000065;
  OUTLINED_FUNCTION_1_97();
  if (*((_QWORD *)&v199 + 1))
  {
    *((_QWORD *)&v357 + 1) = v11;
    v356 = v199;
  }
  else
  {
    OUTLINED_FUNCTION_45_30();
  }
  v76 = swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_4_83(v76, v77, v78, v79, v80, v81, v82, v83, v134, v145, v156, v168, v179, v189, v199, *((uint64_t *)&v199 + 1), v221, v232, v244,
    v255,
    v267,
    v279,
    v291,
    v303,
    v315,
    v327,
    v335[0]);
  OUTLINED_FUNCTION_72_15();
  *(_QWORD *)&v356 = v84 | 0x6E656C2D00000000;
  *((_QWORD *)&v356 + 1) = 0xEB00000000687467;
  v85 = AnyHashable.init<A>(_:)();
  if ((v328 & 0x100000000) != 0)
  {
    v356 = 0u;
    v357 = 0u;
  }
  else
  {
    *((_QWORD *)&v357 + 1) = MEMORY[0x1E0DEB070];
    *(_QWORD *)&v356 = v190;
  }
  OUTLINED_FUNCTION_4_83(v85, v86, v87, v88, v89, v90, v91, v92, v135, v146, v157, v169, v180, v190, v200, v210, v222, v233, v245,
    v256,
    v268,
    v280,
    v292,
    v304,
    v316,
    v328,
    v335[0]);
  v93 = OUTLINED_FUNCTION_1_97();
  *((_QWORD *)&v357 + 1) = MEMORY[0x1E0DEAFA0];
  OUTLINED_FUNCTION_4_83(v93, v94, v95, v96, v97, v98, v99, v100, v136, v147, v158, v170, v181, v191, v201, v211, v223, v234, v246,
    v257,
    v269,
    v281,
    v293,
    v305,
    v317,
    v329,
    v335[0]);
  OUTLINED_FUNCTION_72_15();
  *(_QWORD *)&v356 = v101 | 0x6174732D00000000;
  *((_QWORD *)&v356 + 1) = 0xEB00000000737574;
  OUTLINED_FUNCTION_1_97();
  if (*((_QWORD *)&v235 + 1))
  {
    *((_QWORD *)&v357 + 1) = v11;
    v356 = v235;
  }
  else
  {
    OUTLINED_FUNCTION_45_30();
  }
  v102 = v202;
  v103 = swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_4_83(v103, v104, v105, v106, v107, v108, v109, v110, v137, v148, v159, v171, v182, v192, v202, v212, v224, v235, *((uint64_t *)&v235 + 1),
    v258,
    v270,
    v282,
    v294,
    v306,
    v318,
    v330,
    v335[0]);
  *(_QWORD *)&v356 = 0x6D616E2D6B6E696CLL;
  *((_QWORD *)&v356 + 1) = 0xE900000000000065;
  OUTLINED_FUNCTION_32_32();
  v111 = v225;
  if (v225)
  {
    *((_QWORD *)&v357 + 1) = v11;
    *(_QWORD *)&v356 = v9;
    *((_QWORD *)&v356 + 1) = v225;
  }
  else
  {
    OUTLINED_FUNCTION_45_30();
  }
  v112 = swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_4_83(v112, v113, v114, v115, v116, v117, v118, v119, v138, v149, v160, v172, v183, v193, v203, v213, v225, v236, v247,
    v259,
    v271,
    v283,
    v295,
    v307,
    v319,
    v331,
    v335[0]);
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  v120 = OUTLINED_FUNCTION_1_97();
  *((_QWORD *)&v357 + 1) = v11;
  *(_QWORD *)&v356 = v184;
  *((_QWORD *)&v356 + 1) = v173;
  OUTLINED_FUNCTION_4_83(v120, v121, v122, v123, v124, v125, v126, v127, v139, v150, v161, v173, v184, v194, v204, v214, v226, v237, v248,
    v260,
    v272,
    v284,
    v296,
    v308,
    v320,
    v332,
    v335[0]);
  AnyHashable.init<A>(_:)();
  v335[1] = v102;
  v335[2] = v215;
  v336 = v334;
  v337 = v333;
  v338 = v362;
  v339 = v363;
  v340 = v321;
  v341 = v309;
  v342 = v5;
  v343 = v297;
  v344 = v6;
  v345 = v285;
  v346 = v7;
  *(_DWORD *)&v347[3] = *(_DWORD *)((char *)v361 + 3);
  *(_DWORD *)v347 = v361[0];
  v348 = v273;
  v349 = v261;
  v350 = v238;
  v351 = v249;
  v352 = v9;
  v353 = v111;
  v354 = v359;
  v355 = v360;
  v128 = ReportSpamManager.SpamDataModel.snapSpamDictionary.getter();
  v335[3] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [AnyHashable : Any]);
  v335[0] = v128;
  specialized Dictionary.subscript.setter((uint64_t)v335, (uint64_t)&v356);

  return v358;
}

uint64_t ReportSpamManager.SpamDataModel.snapSpamDictionary.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  char v28;
  char v29;
  uint64_t v30;

  v2 = v0[18];
  v1 = v0[19];
  v4 = v0[20];
  v3 = v0[21];
  v30 = Dictionary.init(dictionaryLiteral:)();
  v5 = MEMORY[0x1E0DEA968];
  AnyHashable.init<A>(_:)();
  if (v1)
  {
    *((_QWORD *)&v26 + 1) = v5;
    *(_QWORD *)&v24 = v2;
    *((_QWORD *)&v24 + 1) = v1;
  }
  else
  {
    v24 = 0u;
    v26 = 0u;
  }
  v6 = OUTLINED_FUNCTION_25_2();
  OUTLINED_FUNCTION_46_26(v6, v7, v8, v9, v10, v11, v12, v13, v24, *((uint64_t *)&v24 + 1), v26, *((uint64_t *)&v26 + 1), v28);
  v14 = MEMORY[0x1E0DEA968];
  AnyHashable.init<A>(_:)();
  if (v3)
  {
    *((_QWORD *)&v27 + 1) = v14;
    *(_QWORD *)&v25 = v4;
    *((_QWORD *)&v25 + 1) = v3;
  }
  else
  {
    v25 = 0u;
    v27 = 0u;
  }
  v15 = OUTLINED_FUNCTION_124();
  OUTLINED_FUNCTION_46_26(v15, v16, v17, v18, v19, v20, v21, v22, v25, *((uint64_t *)&v25 + 1), v27, *((uint64_t *)&v27 + 1), v29);
  return v30;
}

__n128 ReportSpamManager.SpamDataModel.init(invitedMembers:callType:callLength:hasLink:recipientHandleValue:senderHandle:messageId:spamTime:messageKey:callStatus:linkName:snapFirstName:snapLastName:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __int128 a10, uint64_t a11, uint64_t a12, char a13, __int128 a14, __int128 a15, __int128 a16, __n128 a17, uint64_t a18, uint64_t a19)
{
  __n128 result;

  result = a17;
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_BYTE *)(a9 + 32) = a5 & 1;
  *(_BYTE *)(a9 + 33) = a6;
  *(_QWORD *)(a9 + 40) = a7;
  *(_QWORD *)(a9 + 48) = a8;
  *(_OWORD *)(a9 + 56) = a10;
  *(_QWORD *)(a9 + 72) = a11;
  *(_QWORD *)(a9 + 80) = a12;
  *(_BYTE *)(a9 + 88) = a13 & 1;
  *(_OWORD *)(a9 + 96) = a14;
  *(_OWORD *)(a9 + 112) = a15;
  *(_OWORD *)(a9 + 128) = a16;
  *(__n128 *)(a9 + 144) = a17;
  *(_QWORD *)(a9 + 160) = a18;
  *(_QWORD *)(a9 + 168) = a19;
  return result;
}

void ReportSpamManager.__allocating_init(idsService:imAccountController:imDaemonController:featureFlags:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  OUTLINED_FUNCTION_23_9();
  v4 = (_QWORD *)OUTLINED_FUNCTION_15();
  v4[2] = v3;
  v4[3] = v2;
  v4[4] = v1;
  v4[5] = v0;
  OUTLINED_FUNCTION_91();
}

_QWORD *ReportSpamManager.init(idsService:imAccountController:imDaemonController:featureFlags:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  OUTLINED_FUNCTION_23_9();
  swift_getObjectType();
  OUTLINED_FUNCTION_61_16();
  return specialized ReportSpamManager.init(idsService:imAccountController:imDaemonController:featureFlags:)(v0, v1, v2, v3, v4);
}

uint64_t ReportSpamManager.fetchLocalFaceTimeHandles()()
{
  unint64_t v0;
  unint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t i;
  id v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  Swift::String v26;
  unint64_t v27;
  uint64_t v28;

  v1 = v0;
  objc_msgSend(*(id *)(v0 + 32), sel_blockUntilConnected);
  v2 = *(void **)(v0 + 24);
  objc_opt_self();
  v3 = v2;
  v4 = OUTLINED_FUNCTION_62_18();
  v5 = objc_msgSend(v3, sel_accountsForService_, v4);

  if (!v5)
  {
    if (one-time initialization token for videoMessaging == -1)
    {
LABEL_15:
      v10 = OUTLINED_FUNCTION_17_2();
      __swift_project_value_buffer(v10, (uint64_t)&static Logger.videoMessaging);
      swift_retain_n();
      v11 = Logger.logObject.getter();
      v12 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v11, v12))
      {
        v13 = (uint8_t *)OUTLINED_FUNCTION_105();
        v28 = OUTLINED_FUNCTION_105();
        *(_DWORD *)v13 = 136315138;
        v14 = *(id *)(v1 + 24);
        v15 = OUTLINED_FUNCTION_62_18();
        v16 = objc_msgSend(v14, sel_accountsForService_, v15);

        if (v16)
        {
          type metadata accessor for NSObject(0, &lazy cache variable for type metadata for IMAccount);
          OUTLINED_FUNCTION_73_8();

        }
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [IMAccount]?);
        v17 = Optional.debugDescription.getter();
        v19 = v18;
        swift_bridgeObjectRelease();
        getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v17, v19, &v28);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        OUTLINED_FUNCTION_16_8();
        OUTLINED_FUNCTION_54_1();
        OUTLINED_FUNCTION_48(&dword_1BD004000, v11, v12, "Could not find any facetime service IMAccount in IMAccountController %s", v13);
        OUTLINED_FUNCTION_21();
        OUTLINED_FUNCTION_60();
      }

      OUTLINED_FUNCTION_16_8();
      return MEMORY[0x1E0DEE9E8];
    }
LABEL_40:
    swift_once();
    goto LABEL_15;
  }
  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for IMAccount);
  v1 = OUTLINED_FUNCTION_73_8();

  v6 = MEMORY[0x1E0DEE9D8];
  v28 = MEMORY[0x1E0DEE9D8];
  if (!(v1 >> 62))
  {
    v7 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v7)
      goto LABEL_4;
LABEL_21:
    OUTLINED_FUNCTION_13_3();
    v1 = MEMORY[0x1E0DEE9D8];
    if ((MEMORY[0x1E0DEE9D8] & 0x8000000000000000) != 0)
      goto LABEL_35;
    goto LABEL_22;
  }
  OUTLINED_FUNCTION_124();
  v7 = _CocoaArrayWrapper.endIndex.getter();
  OUTLINED_FUNCTION_13_3();
  if (!v7)
    goto LABEL_21;
LABEL_4:
  if (v7 < 1)
  {
    __break(1u);
    goto LABEL_39;
  }
  for (i = 0; i != v7; ++i)
  {
    if ((v1 & 0xC000000000000001) != 0)
      OUTLINED_FUNCTION_43_5();
    v9 = OUTLINED_FUNCTION_41_4();
    if (objc_msgSend(v9, sel_registrationStatus) == (id)5)
    {
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
    }
    else
    {

    }
  }
  OUTLINED_FUNCTION_13_3();
  v1 = v28;
  if (v28 < 0)
    goto LABEL_35;
LABEL_22:
  if ((v1 & 0x4000000000000000) == 0)
  {
    v21 = *(_QWORD *)(v1 + 16);
    if (!v21)
      goto LABEL_36;
    goto LABEL_24;
  }
LABEL_35:
  OUTLINED_FUNCTION_124();
  v21 = _CocoaArrayWrapper.endIndex.getter();
  OUTLINED_FUNCTION_19();
  if (!v21)
  {
LABEL_36:
    OUTLINED_FUNCTION_19();
    v23 = MEMORY[0x1E0DEE9D8];
    return specialized Set.init<A>(_:)(v23);
  }
LABEL_24:
  v28 = v6;
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  if (v21 < 0)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  v22 = 0;
  v23 = v28;
  while (1)
  {
    if (v21 == v22)
    {
      __break(1u);
      goto LABEL_35;
    }
    if ((v1 & 0xC000000000000001) != 0)
      OUTLINED_FUNCTION_43_5();
    v24 = OUTLINED_FUNCTION_41_4();
    result = outlined bridged method (pb) of @objc IMAccount.strippedLogin.getter(v24);
    if (!v25)
      break;
    v26 = String.lowercased()();

    swift_bridgeObjectRelease();
    v28 = v23;
    v27 = *(_QWORD *)(v23 + 16);
    v6 = v27 + 1;
    if (v27 >= *(_QWORD *)(v23 + 24) >> 1)
    {
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      v23 = v28;
    }
    ++v22;
    *(_QWORD *)(v23 + 16) = v6;
    *(Swift::String *)(v23 + 16 * v27 + 32) = v26;
    if (v21 == v22)
    {
      OUTLINED_FUNCTION_19();
      return specialized Set.init<A>(_:)(v23);
    }
  }
  __break(1u);
  return result;
}

uint64_t closure #1 in ReportSpamManager.reportVideoMessagingSpam(call:)@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v7 = *a1;
  v8 = Double.description.getter();
  v10 = v9;
  v11 = objc_msgSend(v7, sel_value);
  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v14 = v13;

  *a4 = v8;
  a4[1] = v10;
  a4[2] = v12;
  a4[3] = v14;
  a4[4] = a2;
  a4[5] = a3;
  return swift_bridgeObjectRetain();
}

uint64_t SpamMessageDataModel.init(timeStamp:messageType:callerHandle:recipientHandle:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  *a7 = result;
  a7[1] = a2;
  a7[2] = a3;
  a7[3] = a4;
  a7[4] = a5;
  a7[5] = a6;
  return result;
}

void closure #2 in ReportSpamManager.reportVideoMessagingSpam(call:)(uint64_t a1@<X1>, _BYTE *a2@<X8>)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(id *)(a1 + 16);
  SpamMessageDataModel.dictionary.getter();
  specialized _dictionaryUpCast<A, B, C, D>(_:)();
  v5 = v4;
  swift_bridgeObjectRelease();
  v6 = outlined bridged method (mbnn) of @objc IDSService.reportSpamMessage(_:)(v5, v3);

  *a2 = v6 & 1;
}

uint64_t SpamMessageDataModel.dictionary.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t inited;
  unsigned int v8;
  _QWORD *v9;

  v2 = *v0;
  v1 = v0[1];
  v4 = v0[2];
  v3 = v0[3];
  v6 = v0[4];
  v5 = v0[5];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, String?)>);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BD645390;
  *(_QWORD *)(inited + 32) = 0x6D617473656D6974;
  *(_QWORD *)(inited + 40) = 0xE900000000000070;
  *(_QWORD *)(inited + 48) = v2;
  *(_QWORD *)(inited + 56) = v1;
  *(_QWORD *)(inited + 64) = 0xD000000000000011;
  *(_QWORD *)(inited + 72) = 0x80000001BD67DD10;
  *(_QWORD *)(inited + 80) = 0xD000000000000018;
  *(_QWORD *)(inited + 88) = 0x80000001BD66C060;
  OUTLINED_FUNCTION_72_15();
  v9[12] = v8 | 0x6148726500000000;
  v9[13] = 0xEC000000656C646ELL;
  v9[14] = v4;
  v9[15] = v3;
  v9[16] = 0x6E65697069636572;
  v9[17] = 0xEF656C646E614874;
  v9[18] = v6;
  v9[19] = v5;
  OUTLINED_FUNCTION_124();
  OUTLINED_FUNCTION_8_8();
  OUTLINED_FUNCTION_5_0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for String?);
  return Dictionary.init(dictionaryLiteral:)();
}

unint64_t static ReportSpamManager.getContact(forHandle:)(void *a1)
{
  uint64_t inited;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BD6443F0;
  *(_QWORD *)(inited + 32) = a1;
  v24 = inited;
  specialized Array._endMutation()();
  v3 = a1;
  specialized Set.init<A>(_:)(v24, v4, v5, v6, v7, v8, v9, v10, v22, v23, v24, v26, v27, v28, v29, v30, v31, v32, v33,
    v34);
  v12 = v11;
  if (one-time initialization token for faceTime != -1)
    swift_once();
  swift_retain();
  specialized Sequence.compactMap<A>(_:)(v12);
  v14 = v13;
  OUTLINED_FUNCTION_27();
  v15 = MEMORY[0x1E0DEE9D8];
  v25 = MEMORY[0x1E0DEE9D8];
  v16 = *(_QWORD *)(v14 + 16);
  if (v16)
  {
    OUTLINED_FUNCTION_124();
    v17 = 32;
    do
    {
      v18 = *(void **)(v14 + v17);
      if (v18)
      {
        v19 = v18;
        MEMORY[0x1C3B7301C]();
        if (*(_QWORD *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      v17 += 56;
      --v16;
    }
    while (v16);
    OUTLINED_FUNCTION_13_3();
    v15 = v25;
  }
  OUTLINED_FUNCTION_13_3();
  if (v15 >> 62)
  {
    OUTLINED_FUNCTION_5_0();
    v21 = _CocoaArrayWrapper.endIndex.getter();
    OUTLINED_FUNCTION_27();
    if (v21)
      return v15;
    goto LABEL_13;
  }
  if (!*(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_13:
    OUTLINED_FUNCTION_27();
    return 0;
  }
  return v15;
}

id *ReportSpamManager.deinit()
{
  id *v0;

  swift_unknownObjectRelease();
  return v0;
}

uint64_t ReportSpamManager.__deallocating_deinit()
{
  ReportSpamManager.deinit();
  return swift_deallocClassInstance();
}

BOOL SpamMessageDataModel.SpamMessageType.init(rawValue:)(Swift::String string)
{
  void *object;
  Swift::String v2;
  Swift::Int v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of SpamMessageDataModel.SpamMessageType.init(rawValue:), v2);
  OUTLINED_FUNCTION_13_3();
  return v3 != 0;
}

unint64_t SpamMessageDataModel.SpamMessageType.rawValue.getter()
{
  return 0xD000000000000018;
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance SpamMessageDataModel.SpamMessageType@<W0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  _BOOL8 result;

  result = SpamMessageDataModel.SpamMessageType.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance SpamMessageDataModel.SpamMessageType(_QWORD *a1@<X8>)
{
  uint64_t v2;

  SpamMessageDataModel.SpamMessageType.rawValue.getter();
  *a1 = 0xD000000000000018;
  a1[1] = v2;
  OUTLINED_FUNCTION_0();
}

void SpamMessageDataModel.timeStamp.getter()
{
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

void SpamMessageDataModel.callerHandle.getter()
{
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

void SpamMessageDataModel.recipientHandle.getter()
{
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

uint64_t UInt32.stringValue.getter(int a1)
{
  uint64_t result;

  if (*MEMORY[0x1E0D0CEB0] == a1)
    return 0x6E776F6E6B6E75;
  result = 0xD000000000000011;
  if (*MEMORY[0x1E0D0CE88] != a1 && *MEMORY[0x1E0D0CE90] != a1 && *MEMORY[0x1E0D0CE78] != a1)
  {
    if (*MEMORY[0x1E0D0CEA0] == a1)
    {
      return 0x64657373696DLL;
    }
    else if (*MEMORY[0x1E0D0CE80] == a1)
    {
      return 0x656C6C65636E6163;
    }
    else
    {
      return 0;
    }
  }
  return result;
}

BOOL static ReportSpamManager.SpamAction.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

void ReportSpamManager.SpamAction.hash(into:)()
{
  unsigned __int8 *v0;

  Hasher._combine(_:)(*v0);
  OUTLINED_FUNCTION_0();
}

Swift::Int ReportSpamManager.SpamAction.hashValue.getter()
{
  unsigned __int8 *v0;
  Swift::UInt v1;

  v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

uint64_t ReportSpamManager.canShowReportActions(for:)()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t result;

  RecentsCallItem.allowsFaceTimeSpamReporting.getter();
  if ((v1 & 1) == 0)
    return 0;
  RecentsCallItem.tuHandles.getter();
  specialized Sequence.compactMap<A>(_:)(v2);
  v4 = v3;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(v4 + 16);
  OUTLINED_FUNCTION_2_1();
  RecentsCallItem.isGroupFaceTimeCall.getter();
  v7 = v6;
  result = 1;
  if ((v7 & 1) != 0 && !v5)
    return (uint64_t)objc_msgSend(*(id *)(v0 + 40), sel_groupFaceTimeBlockEnabled);
  return result;
}

void closure #1 in ReportSpamManager.presentReportSingleParticipantAlert(of:from:preparationHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  OUTLINED_FUNCTION_15_65(a1, a2, a3, a4, a5, a6, 64, 0x80000001BD67DE50, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23,
    a24,
    a25,
    a26);
}

{
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  void *v44;

  OUTLINED_FUNCTION_3_0();
  a25 = v27;
  a26 = v28;
  v30 = v29;
  v32 = v31;
  v34 = v33;
  v36 = v35 + 16;
  if (one-time initialization token for logger != -1)
    swift_once();
  v37 = OUTLINED_FUNCTION_17_2();
  v38 = __swift_project_value_buffer(v37, (uint64_t)static ReportSpamManager.logger);
  OUTLINED_FUNCTION_16_31();
  Logger.logObject.getter();
  v39 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_17_6(v39))
  {
    v40 = OUTLINED_FUNCTION_105();
    a12 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v40 = 136315394;
    v41 = OUTLINED_FUNCTION_52_23();
    OUTLINED_FUNCTION_51_25(v41, v42, &a12);
    OUTLINED_FUNCTION_19_51();
    OUTLINED_FUNCTION_11_11();
    *(_WORD *)(v40 + 12) = 2080;
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v32, v30, &a12);
    OUTLINED_FUNCTION_19_51();
    OUTLINED_FUNCTION_49_28(&dword_1BD004000, v38, v26, "%s: in %s, user did tap on cancel");
    OUTLINED_FUNCTION_25_6();
    OUTLINED_FUNCTION_60();
  }

  OUTLINED_FUNCTION_19_1();
  OUTLINED_FUNCTION_12_66();
  v43 = (void *)MEMORY[0x1C3B752C0](v36);
  if (v43)
  {
    v44 = v43;
    objc_msgSend(v43, sel_dismissViewControllerAnimated_completion_, 1, 0);

  }
  if (v34)
    OUTLINED_FUNCTION_74_9();
  OUTLINED_FUNCTION_0_20();
}

void closure #2 in ReportSpamManager.presentReportSingleParticipantAlert(of:from:preparationHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  os_log_type_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  OUTLINED_FUNCTION_3_0();
  a25 = v28;
  a26 = v29;
  OUTLINED_FUNCTION_44_29();
  if (one-time initialization token for logger != -1)
    swift_once();
  v30 = OUTLINED_FUNCTION_17_2();
  v31 = (void *)__swift_project_value_buffer(v30, (uint64_t)static ReportSpamManager.logger);
  OUTLINED_FUNCTION_16_31();
  Logger.logObject.getter();
  v32 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_4_11(v32))
  {
    v33 = OUTLINED_FUNCTION_105();
    a12 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v33 = 136315394;
    v34 = OUTLINED_FUNCTION_63_18();
    OUTLINED_FUNCTION_42_29(v34, v35, v36);
    OUTLINED_FUNCTION_16_59();
    OUTLINED_FUNCTION_11_11();
    *(_WORD *)(v33 + 12) = 2080;
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000040, 0x80000001BD67DE50, &a12);
    OUTLINED_FUNCTION_38_32();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_14_16(&dword_1BD004000, v37, v38, "%s: in %s, user did tap on report single participant");
    OUTLINED_FUNCTION_25_6();
    OUTLINED_FUNCTION_60();
  }

  OUTLINED_FUNCTION_19_1();
  __swift_project_boxed_opaque_existential_1(v27, v27[3]);
  OUTLINED_FUNCTION_12_66();
  if (swift_weakLoadStrong())
  {
    OUTLINED_FUNCTION_21_49();
    OUTLINED_FUNCTION_22();
  }
  if (v26)
    OUTLINED_FUNCTION_74_9();
  OUTLINED_FUNCTION_0_20();
}

void closure #1 in ReportSpamManager.presentReportAndBlockAlert(of:from:preparationHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  OUTLINED_FUNCTION_15_65(a1, a2, a3, a4, a5, a6, 55, 0x80000001BD67DE10, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23,
    a24,
    a25,
    a26);
}

#error "1BD2301E0: call analysis failed (funcsize=12)"

void closure #3 in ReportSpamManager.presentReportAndBlockAlert(of:from:preparationHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  void (*v26)(uint64_t);
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  os_log_type_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  OUTLINED_FUNCTION_3_0();
  a25 = v28;
  a26 = v29;
  OUTLINED_FUNCTION_44_29();
  if (one-time initialization token for logger != -1)
    swift_once();
  v30 = OUTLINED_FUNCTION_17_2();
  v31 = (void *)__swift_project_value_buffer(v30, (uint64_t)static ReportSpamManager.logger);
  OUTLINED_FUNCTION_16_31();
  Logger.logObject.getter();
  v32 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_4_11(v32))
  {
    v33 = OUTLINED_FUNCTION_105();
    a12 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v33 = 136315394;
    v34 = OUTLINED_FUNCTION_63_18();
    OUTLINED_FUNCTION_42_29(v34, v35, v36);
    OUTLINED_FUNCTION_16_59();
    OUTLINED_FUNCTION_11_11();
    *(_WORD *)(v33 + 12) = 2080;
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000037, 0x80000001BD67DE10, &a12);
    OUTLINED_FUNCTION_38_32();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_14_16(&dword_1BD004000, v37, v38, "%s: in %s, user did tap on block and report");
    OUTLINED_FUNCTION_25_6();
    OUTLINED_FUNCTION_60();
  }

  OUTLINED_FUNCTION_19_1();
  v39 = v27[3];
  v40 = v27[4];
  __swift_project_boxed_opaque_existential_1(v27, v39);
  (*(void (**)(uint64_t, uint64_t))(v40 + 40))(v39, v40);
  __swift_project_boxed_opaque_existential_1(v27, v27[3]);
  OUTLINED_FUNCTION_12_66();
  if (swift_weakLoadStrong())
  {
    OUTLINED_FUNCTION_21_49();
    OUTLINED_FUNCTION_22();
  }
  if (v26)
    v26(1);
  OUTLINED_FUNCTION_0_20();
}

#error "1BD2303B8: call analysis failed (funcsize=12)"

void closure #2 in ReportSpamManager.presentReportAndBlockAlert(of:from:preparationHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,const char *a27)
{
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t);
  void (*v35)(uint64_t);
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  const char *v46;

  OUTLINED_FUNCTION_3_0();
  a25 = v28;
  a26 = v29;
  v31 = v30;
  v33 = v32;
  v35 = v34;
  v37 = v36;
  if (one-time initialization token for logger != -1)
    swift_once();
  v38 = OUTLINED_FUNCTION_17_2();
  v39 = __swift_project_value_buffer(v38, (uint64_t)static ReportSpamManager.logger);
  OUTLINED_FUNCTION_16_31();
  Logger.logObject.getter();
  v40 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_17_6(v40))
  {
    v46 = a27;
    v41 = OUTLINED_FUNCTION_105();
    a14 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v41 = 136315394;
    v42 = OUTLINED_FUNCTION_52_23();
    OUTLINED_FUNCTION_51_25(v42, v43, &a14);
    OUTLINED_FUNCTION_19_51();
    OUTLINED_FUNCTION_11_11();
    *(_WORD *)(v41 + 12) = 2080;
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v33, v31, &a14);
    OUTLINED_FUNCTION_19_51();
    OUTLINED_FUNCTION_49_28(&dword_1BD004000, v39, v27, v46);
    OUTLINED_FUNCTION_25_6();
    OUTLINED_FUNCTION_60();
  }

  OUTLINED_FUNCTION_19_1();
  v44 = v37[3];
  v45 = v37[4];
  __swift_project_boxed_opaque_existential_1(v37, v44);
  (*(void (**)(uint64_t, uint64_t))(v45 + 40))(v44, v45);
  if (v35)
    v35(1);
  OUTLINED_FUNCTION_0_20();
}

void closure #2 in ReportSpamManager.presentBlockAllParticipantsAlert(of:from:preparationHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  OUTLINED_FUNCTION_15_65(a1, a2, a3, a4, a5, a6, 61, 0x80000001BD67D640, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23,
    a24,
    a25,
    a26);
}

id @nonobjc IDSService.init(service:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  id v4;

  if (a2)
  {
    v3 = (void *)MEMORY[0x1C3B72E00]();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = 0;
  }
  v4 = objc_msgSend(v2, sel_initWithService_, v3);

  return v4;
}

uint64_t outlined init with copy of Date?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BD2307E0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ReportSpamManager.reportVideoMessagingSpam(call:)@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return closure #1 in ReportSpamManager.reportVideoMessagingSpam(call:)(a1, *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), a2);
}

void partial apply for closure #2 in ReportSpamManager.reportVideoMessagingSpam(call:)(_BYTE *a1@<X8>)
{
  uint64_t v1;

  closure #2 in ReportSpamManager.reportVideoMessagingSpam(call:)(v1, a1);
}

uint64_t specialized closure #1 in LazyMapSequence<>.map<A>(_:)(uint64_t a1, void (*a2)(uint64_t *__return_ptr, uint64_t *), uint64_t a3, uint64_t a4, void (*a5)(uint64_t *__return_ptr, uint64_t *))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v8 = a1;
  a5(&v7, &v8);
  a2(&v9, &v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t outlined bridged method (pb) of @objc IMAccount.strippedLogin.getter(void *a1)
{
  id v1;
  void *v2;

  v1 = objc_msgSend(a1, sel_strippedLogin);
  if (v1)
  {
    v2 = v1;
    static String._unconditionallyBridgeFromObjectiveC(_:)();

  }
  return OUTLINED_FUNCTION_50();
}

id outlined bridged method (mbnn) of @objc IDSService.reportSpamMessage(_:)(uint64_t a1, void *a2)
{
  Class isa;
  id v4;

  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(a2, sel_reportSpamMessage_, isa);

  return v4;
}

uint64_t specialized LazyMapSequence.makeIterator()@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;

  if ((result & 0xC000000000000001) != 0)
  {
    __CocoaSet.makeIterator()();
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
    lazy protocol witness table accessor for type TUHandle and conformance NSObject();
    Set.Iterator.init(_cocoa:)();
    result = v14;
    v7 = v15;
    v8 = v16;
    v9 = v17;
  }
  else
  {
    v10 = -1;
    v11 = -1 << *(_BYTE *)(result + 32);
    v12 = ~v11;
    v7 = result + 56;
    v13 = -v11;
    if (v13 < 64)
      v10 = ~(-1 << v13);
    v9 = v10 & *(_QWORD *)(result + 56);
    v8 = (unint64_t)v12;
  }
  *(_QWORD *)a4 = result;
  *(_QWORD *)(a4 + 8) = v7;
  *(_OWORD *)(a4 + 16) = v8;
  *(_QWORD *)(a4 + 32) = v9;
  *(_QWORD *)(a4 + 40) = a2;
  *(_QWORD *)(a4 + 48) = a3;
  return result;
}

void specialized LazyMapSequence.Iterator.next()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  uint64_t v5;
  unint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  void (*v10)(uint64_t *__return_ptr, void **);
  int64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t v17;
  void *v18;

  v1 = v0;
  v2 = *v0;
  if ((*v0 & 0x8000000000000000) == 0)
  {
    v4 = v0[3];
    v3 = v1[4];
    if (v3)
    {
      v5 = (v3 - 1) & v3;
      v6 = __clz(__rbit64(v3)) | (v4 << 6);
LABEL_4:
      v7 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * v6);
      v8 = v7;
      goto LABEL_5;
    }
    v11 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      return;
    }
    v12 = (unint64_t)(v1[2] + 64) >> 6;
    if (v11 >= v12)
    {
      v7 = 0;
      v5 = 0;
      goto LABEL_5;
    }
    v13 = v1[1];
    v14 = *(_QWORD *)(v13 + 8 * v11);
    if (v14)
    {
LABEL_14:
      v5 = (v14 - 1) & v14;
      v6 = __clz(__rbit64(v14)) + (v11 << 6);
      v4 = v11;
      goto LABEL_4;
    }
    v15 = v4 + 2;
    if (v4 + 2 >= v12)
      goto LABEL_30;
    v14 = *(_QWORD *)(v13 + 8 * v15);
    if (v14)
    {
LABEL_18:
      v11 = v15;
      goto LABEL_14;
    }
    if (v4 + 3 < v12)
    {
      v14 = *(_QWORD *)(v13 + 8 * (v4 + 3));
      if (v14)
      {
        v11 = v4 + 3;
        goto LABEL_14;
      }
      v15 = v4 + 4;
      if (v4 + 4 >= v12)
      {
        v7 = 0;
        v5 = 0;
        v4 += 3;
LABEL_5:
        v1[3] = v4;
        v1[4] = v5;
        if (!v7)
          return;
LABEL_9:
        v10 = (void (*)(uint64_t *__return_ptr, void **))v1[5];
        v18 = v7;
        v10(&v17, &v18);

        return;
      }
      v14 = *(_QWORD *)(v13 + 8 * v15);
      if (v14)
        goto LABEL_18;
      v11 = v4 + 5;
      if (v4 + 5 < v12)
      {
        v14 = *(_QWORD *)(v13 + 8 * v11);
        if (v14)
          goto LABEL_14;
        v11 = v12 - 1;
        v16 = v4 + 6;
        while (v16 < v12)
        {
          v14 = *(_QWORD *)(v13 + 8 * v16++);
          if (v14)
          {
            v11 = v16 - 1;
            goto LABEL_14;
          }
        }
LABEL_30:
        v7 = 0;
        v5 = 0;
        v4 = v11;
        goto LABEL_5;
      }
    }
    v7 = 0;
    v5 = 0;
    v4 = v15;
    goto LABEL_5;
  }
  v9 = __CocoaSet.Iterator.next()();
  if (v9)
  {
    v17 = v9;
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v7 = v18;
    swift_unknownObjectRelease();
    if (v18)
      goto LABEL_9;
  }
}

_QWORD *specialized ReportSpamManager.init(idsService:imAccountController:imDaemonController:featureFlags:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  a5[2] = a1;
  a5[3] = a2;
  a5[4] = a3;
  a5[5] = a4;
  return a5;
}

BOOL specialized closure #1 in Sequence<>.contains(_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return specialized closure #1 in Sequence<>.contains(_:)(*a1, *a2);
}

uint64_t specialized closure #1 in LazyMapSequence<>.map<A>(_:)@<X0>(uint64_t *a1@<X0>, void (*a2)(uint64_t *__return_ptr, uint64_t *)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _BYTE *a5@<X8>)
{
  uint64_t result;

  result = specialized closure #1 in LazyMapSequence<>.map<A>(_:)(*a1, a2, a3, *(_QWORD *)a4, *(void (**)(uint64_t *__return_ptr, uint64_t *))(a4 + 8));
  *a5 = result & 1;
  return result;
}

uint64_t sub_1BD230CA4()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for specialized closure #1 in LazyMapSequence<>.map<A>(_:)@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  return specialized closure #1 in LazyMapSequence<>.map<A>(_:)(a1, *(void (**)(uint64_t *__return_ptr, uint64_t *))(v2 + 16), *(_QWORD *)(v2 + 24), v2 + 32, a2);
}

BOOL partial apply for specialized closure #1 in Sequence<>.contains(_:)(unsigned __int8 *a1)
{
  uint64_t v1;

  return specialized closure #1 in Sequence<>.contains(_:)(a1, *(unsigned __int8 **)(v1 + 16));
}

uint64_t specialized ReportSpamManager.presentReportAndBlockAlert(of:from:preparationHandler:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t *boxed_opaque_existential_1;
  void *v12;
  id v13;
  Swift::String v14;
  Swift::String_optional v15;
  Swift::String v16;
  Swift::String v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  Swift::String v24;
  Swift::String_optional v25;
  Swift::String v26;
  Swift::String v27;
  uint64_t v28;
  _QWORD *v29;
  id v30;
  Swift::String v31;
  Swift::String_optional v32;
  Swift::String v33;
  Swift::String v34;
  _QWORD *v35;
  id v36;
  id v37;
  Swift::String v38;
  Swift::String_optional v39;
  Swift::String v40;
  Swift::String v41;
  uint64_t v42;
  _QWORD *v43;
  id v44;
  uint64_t inited;
  unint64_t v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  uint64_t v52;
  id v53;
  id v54;
  id v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  id v59;
  void *v60;
  uint64_t v61;
  id v63;
  id v64;
  id v65;
  id v67;
  uint64_t v68;
  __int128 v69[2];
  uint64_t v70[6];
  Swift::String v71;
  Swift::String v72;
  Swift::String v73;
  Swift::String v74;

  v70[3] = a6;
  v70[4] = a7;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v70);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 16))(boxed_opaque_existential_1, a1, a6);
  v12 = (void *)objc_opt_self();
  v13 = objc_msgSend(v12, sel_conversationKit);
  v71._object = (void *)0xE000000000000000;
  v14._object = (void *)0x80000001BD67D6D0;
  v14._countAndFlagsBits = 0xD000000000000020;
  v15.value._countAndFlagsBits = 0x61737265766E6F43;
  v15.value._object = (void *)0xEF74694B6E6F6974;
  v16._countAndFlagsBits = 0;
  v16._object = (void *)0xE000000000000000;
  v71._countAndFlagsBits = 0;
  v17 = NSLocalizedString(_:tableName:bundle:value:comment:)(v14, v15, (NSBundle)v13, v16, v71);

  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIAlertController);
  v18 = @nonobjc UIAlertController.__allocating_init(title:message:preferredStyle:)(v17._countAndFlagsBits, (uint64_t)v17._object, 0, 0, 0);
  v64 = a2;
  *(_QWORD *)&v69[0] = swift_getObjectType();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UIViewController.Type);
  v68 = String.init<A>(describing:)();
  v20 = v19;
  v67 = (id)objc_opt_self();
  v21 = objc_msgSend(v67, sel_currentDevice);
  v22 = objc_msgSend(v21, sel_userInterfaceIdiom);

  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIAlertAction);
  v23 = objc_msgSend(v12, (SEL)&selRef_setCornerRadius_ + 6);
  v24._countAndFlagsBits = 0xD00000000000001BLL;
  v72._object = (void *)0xE000000000000000;
  v24._object = (void *)0x80000001BD67D6B0;
  v25.value._countAndFlagsBits = 0x61737265766E6F43;
  v25.value._object = (void *)0xEF74694B6E6F6974;
  v26._countAndFlagsBits = 0;
  v26._object = (void *)0xE000000000000000;
  v72._countAndFlagsBits = 0;
  v27 = NSLocalizedString(_:tableName:bundle:value:comment:)(v24, v25, (NSBundle)v23, v26, v72);

  v28 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v29 = (_QWORD *)swift_allocObject();
  v29[2] = v68;
  v29[3] = v20;
  v29[4] = v28;
  v29[5] = a3;
  v29[6] = a4;
  swift_bridgeObjectRetain();
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(a3);
  v65 = @nonobjc UIAlertAction.__allocating_init(title:style:handler:)(v27._countAndFlagsBits, (uint64_t)v27._object, v22 != (id)1, (uint64_t)_s15ConversationKit17ReportSpamManagerC07presentC13AndBlockAlert2of4from18preparationHandleryAA0D9Modelable_p_So16UIViewControllerCySbcSgtFySo13UIAlertActionCcfU_TA_0);
  v30 = objc_msgSend(v12, sel_conversationKit);
  v73._object = (void *)0xE000000000000000;
  v31._object = (void *)0x80000001BD67D700;
  v31._countAndFlagsBits = 0xD000000000000020;
  v32.value._countAndFlagsBits = 0x61737265766E6F43;
  v32.value._object = (void *)0xEF74694B6E6F6974;
  v33._countAndFlagsBits = 0;
  v33._object = (void *)0xE000000000000000;
  v73._countAndFlagsBits = 0;
  v34 = NSLocalizedString(_:tableName:bundle:value:comment:)(v31, v32, (NSBundle)v30, v33, v73);

  outlined init with copy of IDSLookupManager((uint64_t)v70, (uint64_t)v69);
  v35 = (_QWORD *)swift_allocObject();
  v35[2] = v68;
  v35[3] = v20;
  outlined init with take of Notice(v69, (uint64_t)(v35 + 4));
  v35[9] = a3;
  v35[10] = a4;
  swift_bridgeObjectRetain();
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(a3);
  v36 = @nonobjc UIAlertAction.__allocating_init(title:style:handler:)(v34._countAndFlagsBits, (uint64_t)v34._object, 2, (uint64_t)_s15ConversationKit17ReportSpamManagerC07presentC13AndBlockAlert2of4from18preparationHandleryAA0D9Modelable_p_So16UIViewControllerCySbcSgtFySo13UIAlertActionCcfU0_TA_0);
  v37 = objc_msgSend(v12, sel_conversationKit);
  v38._countAndFlagsBits = 0xD000000000000027;
  v74._object = (void *)0xE000000000000000;
  v38._object = (void *)0x80000001BD67D730;
  v39.value._countAndFlagsBits = 0x61737265766E6F43;
  v39.value._object = (void *)0xEF74694B6E6F6974;
  v40._countAndFlagsBits = 0;
  v40._object = (void *)0xE000000000000000;
  v74._countAndFlagsBits = 0;
  v41 = NSLocalizedString(_:tableName:bundle:value:comment:)(v38, v39, (NSBundle)v37, v40, v74);

  v42 = swift_allocObject();
  swift_weakInit();
  outlined init with copy of IDSLookupManager((uint64_t)v70, (uint64_t)v69);
  v43 = (_QWORD *)swift_allocObject();
  v43[2] = v68;
  v43[3] = v20;
  outlined init with take of Notice(v69, (uint64_t)(v43 + 4));
  v43[9] = v42;
  v43[10] = a3;
  v43[11] = a4;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(a3);
  v44 = @nonobjc UIAlertAction.__allocating_init(title:style:handler:)(v41._countAndFlagsBits, (uint64_t)v41._object, 2, (uint64_t)partial apply for closure #3 in ReportSpamManager.presentReportAndBlockAlert(of:from:preparationHandler:));
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BD644B60;
  *(_QWORD *)(inited + 32) = v65;
  *(_QWORD *)(inited + 40) = v36;
  *(_QWORD *)(inited + 48) = v44;
  *(_QWORD *)&v69[0] = inited;
  specialized Array._endMutation()();
  v46 = *(_QWORD *)&v69[0];
  v47 = v65;
  v48 = v36;
  v49 = v44;
  v50 = objc_msgSend(v67, sel_currentDevice);
  v51 = objc_msgSend(v50, sel_userInterfaceIdiom);

  if (v51 == (id)1)
  {
    swift_bridgeObjectRelease();
    v52 = swift_allocObject();
    *(_OWORD *)(v52 + 16) = xmmword_1BD644B60;
    *(_QWORD *)(v52 + 32) = v48;
    *(_QWORD *)(v52 + 40) = v49;
    *(_QWORD *)(v52 + 48) = v47;
    *(_QWORD *)&v69[0] = v52;
    specialized Array._endMutation()();
    v46 = *(_QWORD *)&v69[0];
    v53 = v47;
    v54 = v48;
    v55 = v49;
  }
  if (v46 >> 62)
    goto LABEL_13;
  v56 = *(_QWORD *)((v46 & 0xFFFFFFFFFFFFF8) + 0x10);
  v57 = v18;
  swift_bridgeObjectRetain();
  for (; v56; v56 = _CocoaArrayWrapper.endIndex.getter())
  {
    v58 = 4;
    while (1)
    {
      v59 = (v46 & 0xC000000000000001) != 0
          ? (id)MEMORY[0x1C3B73D18](v58 - 4, v46)
          : *(id *)(v46 + 8 * v58);
      v60 = v59;
      v61 = v58 - 3;
      if (__OFADD__(v58 - 4, 1))
        break;
      objc_msgSend(v18, sel_addAction_, v59);

      ++v58;
      if (v61 == v56)
        goto LABEL_11;
    }
    __break(1u);
LABEL_13:
    v63 = v18;
    swift_bridgeObjectRetain();
  }
LABEL_11:

  swift_bridgeObjectRelease_n();
  objc_msgSend(v64, sel_presentViewController_animated_completion_, v18, 1, 0);

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v70);
}

uint64_t specialized ReportSpamManager.presentBlockAllParticipantsAlert(of:from:preparationHandler:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t *boxed_opaque_existential_1;
  uint64_t v14;
  void *v15;
  id v16;
  Swift::String v17;
  Swift::String_optional v18;
  Swift::String v19;
  Swift::String v20;
  id v21;
  id v22;
  Swift::String v23;
  Swift::String_optional v24;
  Swift::String v25;
  Swift::String v26;
  _QWORD *v27;
  id v28;
  id v29;
  Swift::String v30;
  Swift::String_optional v31;
  Swift::String v32;
  Swift::String v33;
  uint64_t v34;
  _QWORD *v35;
  id v36;
  uint64_t inited;
  uint64_t v38;
  uint64_t v39;
  id v40;
  id v41;
  id v42;
  uint64_t v43;
  id v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  NSObject *v49;
  os_log_type_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  id v56;
  id v57;
  id v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62[2];
  uint64_t ObjectType;
  uint64_t v64[6];
  Swift::String v65;
  Swift::String v66;
  Swift::String v67;

  v64[3] = a6;
  v64[4] = a7;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v64);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 16))(boxed_opaque_existential_1, a1, a6);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(a7 + 8))(a6, a7) & 1) != 0)
  {
    v59 = a2;
    *(_QWORD *)&v62[0] = swift_getObjectType();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UIViewController.Type);
    v60 = String.init<A>(describing:)();
    v61 = v14;
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIAlertController);
    v15 = (void *)objc_opt_self();
    v16 = objc_msgSend(v15, sel_conversationKit);
    v17._countAndFlagsBits = 0xD000000000000022;
    v65._object = (void *)0xE000000000000000;
    v17._object = (void *)0x80000001BD67D680;
    v18.value._countAndFlagsBits = 0x61737265766E6F43;
    v18.value._object = (void *)0xEF74694B6E6F6974;
    v19._countAndFlagsBits = 0;
    v19._object = (void *)0xE000000000000000;
    v65._countAndFlagsBits = 0;
    v20 = NSLocalizedString(_:tableName:bundle:value:comment:)(v17, v18, (NSBundle)v16, v19, v65);

    v21 = @nonobjc UIAlertController.__allocating_init(title:message:preferredStyle:)(v20._countAndFlagsBits, (uint64_t)v20._object, 0, 0, 0);
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIAlertAction);
    v22 = objc_msgSend(v15, (SEL)&selRef_setCornerRadius_ + 6);
    v23._countAndFlagsBits = 0xD000000000000023;
    v66._object = (void *)0xE000000000000000;
    v23._object = (void *)0x80000001BD67A3E0;
    v24.value._countAndFlagsBits = 0x61737265766E6F43;
    v24.value._object = (void *)0xEF74694B6E6F6974;
    v25._countAndFlagsBits = 0;
    v25._object = (void *)0xE000000000000000;
    v66._countAndFlagsBits = 0;
    v26 = NSLocalizedString(_:tableName:bundle:value:comment:)(v23, v24, (NSBundle)v22, v25, v66);

    outlined init with copy of IDSLookupManager((uint64_t)v64, (uint64_t)v62);
    v27 = (_QWORD *)swift_allocObject();
    v27[2] = v60;
    v27[3] = v61;
    outlined init with take of Notice(v62, (uint64_t)(v27 + 4));
    v27[9] = a3;
    v27[10] = a4;
    swift_bridgeObjectRetain();
    _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(a3);
    v28 = @nonobjc UIAlertAction.__allocating_init(title:style:handler:)(v26._countAndFlagsBits, (uint64_t)v26._object, 2, (uint64_t)_s15ConversationKit17ReportSpamManagerC32presentBlockAllParticipantsAlert2of4from18preparationHandleryAA0D9Modelable_p_So16UIViewControllerCySbcSgtFySo13UIAlertActionCcfU_TA_0);
    v29 = objc_msgSend(v15, sel_conversationKit);
    v67._object = (void *)0xE000000000000000;
    v30._object = (void *)0x80000001BD67D6B0;
    v30._countAndFlagsBits = 0xD00000000000001BLL;
    v31.value._countAndFlagsBits = 0x61737265766E6F43;
    v31.value._object = (void *)0xEF74694B6E6F6974;
    v32._countAndFlagsBits = 0;
    v32._object = (void *)0xE000000000000000;
    v67._countAndFlagsBits = 0;
    v33 = NSLocalizedString(_:tableName:bundle:value:comment:)(v30, v31, (NSBundle)v29, v32, v67);

    v34 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v35 = (_QWORD *)swift_allocObject();
    v35[2] = v60;
    v35[3] = v61;
    v35[4] = v34;
    v35[5] = a3;
    v35[6] = a4;
    _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(a3);
    v36 = @nonobjc UIAlertAction.__allocating_init(title:style:handler:)(v33._countAndFlagsBits, (uint64_t)v33._object, 1, (uint64_t)_s15ConversationKit17ReportSpamManagerC32presentBlockAllParticipantsAlert2of4from18preparationHandleryAA0D9Modelable_p_So16UIViewControllerCySbcSgtFySo13UIAlertActionCcfU0_TA_0);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1BD6441C0;
    *(_QWORD *)(inited + 32) = v28;
    *(_QWORD *)(inited + 40) = v36;
    *(_QWORD *)&v62[0] = inited;
    specialized Array._endMutation()();
    v38 = *(_QWORD *)&v62[0];
    if (*(_QWORD *)&v62[0] >> 62)
      goto LABEL_18;
    v39 = *(_QWORD *)((*(_QWORD *)&v62[0] & 0xFFFFFFFFFFFFF8) + 0x10);
    v40 = v21;
    v41 = v28;
    v42 = v36;
    swift_bridgeObjectRetain();
    for (; v39; v39 = _CocoaArrayWrapper.endIndex.getter())
    {
      v43 = 4;
      while (1)
      {
        v44 = (v38 & 0xC000000000000001) != 0
            ? (id)MEMORY[0x1C3B73D18](v43 - 4, v38)
            : *(id *)(v38 + 8 * v43);
        v45 = v44;
        v46 = v43 - 3;
        if (__OFADD__(v43 - 4, 1))
          break;
        objc_msgSend(v21, sel_addAction_, v44);

        ++v43;
        if (v46 == v39)
          goto LABEL_10;
      }
      __break(1u);
LABEL_18:
      v56 = v21;
      v57 = v28;
      v58 = v36;
      swift_bridgeObjectRetain();
    }
LABEL_10:

    swift_bridgeObjectRelease_n();
    objc_msgSend(v59, sel_presentViewController_animated_completion_, v21, 1, 0);

  }
  else
  {
    if (one-time initialization token for logger != -1)
      swift_once();
    v47 = type metadata accessor for Logger();
    __swift_project_value_buffer(v47, (uint64_t)static ReportSpamManager.logger);
    v48 = a2;
    v49 = Logger.logObject.getter();
    v50 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v49, v50))
    {
      v51 = swift_slowAlloc();
      v52 = swift_slowAlloc();
      *(_QWORD *)&v62[0] = v52;
      *(_DWORD *)v51 = 136315394;
      ObjectType = swift_getObjectType();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UIViewController.Type);
      v53 = String.init<A>(describing:)();
      ObjectType = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v53, v54, (uint64_t *)v62);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v51 + 12) = 2080;
      ObjectType = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD00000000000003DLL, 0x80000001BD67D640, (uint64_t *)v62);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl(&dword_1BD004000, v49, v50, "%s: in %s, callItem is NOT a GFT with all unknown contacts. Cannot present block all participant alert.", (uint8_t *)v51, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v52, -1, -1);
      MEMORY[0x1C3B751B8](v51, -1, -1);

    }
    else
    {

    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v64);
}

uint64_t specialized ReportSpamManager.presentReportSingleParticipantAlert(of:from:preparationHandler:)(uint64_t a1, void *a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t *boxed_opaque_existential_1;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  Swift::String v18;
  Swift::String_optional v19;
  Swift::String v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  Swift::String v29;
  Swift::String_optional v30;
  Swift::String v31;
  Swift::String v32;
  uint64_t v33;
  _QWORD *v34;
  id v35;
  id v36;
  Swift::String v37;
  Swift::String_optional v38;
  Swift::String v39;
  Swift::String v40;
  uint64_t v41;
  _QWORD *v42;
  id v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  id v49;
  uint64_t v50;
  id v51;
  __int128 v53[2];
  uint64_t v54[5];
  Swift::String v55;
  Swift::String v56;
  Swift::String v57;

  v54[3] = a6;
  v54[4] = a7;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v54);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 16))(boxed_opaque_existential_1, a1, a6);
  v13 = (*(uint64_t (**)(uint64_t, uint64_t))(a7 + 24))(a6, a7);
  if (v14)
  {
    v15 = v13;
    v16 = v14;
    v49 = (id)objc_opt_self();
    v17 = objc_msgSend(v49, sel_conversationKit);
    v18._countAndFlagsBits = 0xD00000000000002DLL;
    v55._object = (void *)0xE000000000000000;
    v18._object = (void *)0x80000001BD67D760;
    v19.value._countAndFlagsBits = 0x61737265766E6F43;
    v19.value._object = (void *)0xEF74694B6E6F6974;
    v20._countAndFlagsBits = 0;
    v20._object = (void *)0xE000000000000000;
    v55._countAndFlagsBits = 0;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v18, v19, (NSBundle)v17, v20, v55);

    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_1BD6441D0;
    *(_QWORD *)(v21 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v21 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v21 + 32) = v15;
    *(_QWORD *)(v21 + 40) = v16;
    v22 = String.init(format:_:)();
    v24 = v23;
    swift_bridgeObjectRelease();
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIAlertController);
    v25 = @nonobjc UIAlertController.__allocating_init(title:message:preferredStyle:)(v22, v24, 0, 0, 0);
    *(_QWORD *)&v53[0] = swift_getObjectType();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UIViewController.Type);
    v50 = String.init<A>(describing:)();
    v27 = v26;
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIAlertAction);
    v28 = objc_msgSend(v49, sel_conversationKit);
    v56._object = (void *)0xE000000000000000;
    v29._object = (void *)0x80000001BD67D6B0;
    v29._countAndFlagsBits = 0xD00000000000001BLL;
    v30.value._countAndFlagsBits = 0x61737265766E6F43;
    v30.value._object = (void *)0xEF74694B6E6F6974;
    v31._countAndFlagsBits = 0;
    v31._object = (void *)0xE000000000000000;
    v56._countAndFlagsBits = 0;
    v32 = NSLocalizedString(_:tableName:bundle:value:comment:)(v29, v30, (NSBundle)v28, v31, v56);

    v33 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v34 = (_QWORD *)swift_allocObject();
    v51 = a2;
    v34[2] = v50;
    v34[3] = v27;
    v34[4] = v33;
    v34[5] = a3;
    v34[6] = a4;
    swift_bridgeObjectRetain();
    _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy((uint64_t)a3);
    v35 = @nonobjc UIAlertAction.__allocating_init(title:style:handler:)(v32._countAndFlagsBits, (uint64_t)v32._object, 1, (uint64_t)_s15ConversationKit17ReportSpamManagerC07presentC22SingleParticipantAlert2of4from18preparationHandleryAA0D9Modelable_p_So16UIViewControllerCySbcSgtFySo13UIAlertActionCcfU_TA_0);
    v36 = objc_msgSend(v49, sel_conversationKit);
    v37._countAndFlagsBits = 0xD000000000000034;
    v57._object = (void *)0xE000000000000000;
    v37._object = (void *)0x80000001BD67D790;
    v38.value._countAndFlagsBits = 0x61737265766E6F43;
    v38.value._object = (void *)0xEF74694B6E6F6974;
    v39._countAndFlagsBits = 0;
    v39._object = (void *)0xE000000000000000;
    v57._countAndFlagsBits = 0;
    v40 = NSLocalizedString(_:tableName:bundle:value:comment:)(v37, v38, (NSBundle)v36, v39, v57);

    v41 = swift_allocObject();
    swift_weakInit();
    outlined init with copy of IDSLookupManager((uint64_t)v54, (uint64_t)v53);
    v42 = (_QWORD *)swift_allocObject();
    v42[2] = v50;
    v42[3] = v27;
    outlined init with take of Notice(v53, (uint64_t)(v42 + 4));
    v42[9] = v41;
    v42[10] = a3;
    v42[11] = a4;
    _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy((uint64_t)a3);
    v43 = @nonobjc UIAlertAction.__allocating_init(title:style:handler:)(v40._countAndFlagsBits, (uint64_t)v40._object, 2, (uint64_t)partial apply for closure #2 in ReportSpamManager.presentReportSingleParticipantAlert(of:from:preparationHandler:));
    objc_msgSend(v25, sel_addAction_, v35);
    objc_msgSend(v25, sel_addAction_, v43);
    objc_msgSend(v51, sel_presentViewController_animated_completion_, v25, 1, 0);

  }
  else
  {
    if (one-time initialization token for logger != -1)
      swift_once();
    v44 = type metadata accessor for Logger();
    __swift_project_value_buffer(v44, (uint64_t)static ReportSpamManager.logger);
    v45 = Logger.logObject.getter();
    v46 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v45, v46))
    {
      v47 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v47 = 0;
      _os_log_impl(&dword_1BD004000, v45, v46, "initiator handle is nil so we could not report the call", v47, 2u);
      MEMORY[0x1C3B751B8](v47, -1, -1);
    }

    if (a3)
      a3(1);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
}

unint64_t lazy protocol witness table accessor for type ReportSpamManager.IDSServiceType and conformance ReportSpamManager.IDSServiceType()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ReportSpamManager.IDSServiceType and conformance ReportSpamManager.IDSServiceType;
  if (!lazy protocol witness table cache variable for type ReportSpamManager.IDSServiceType and conformance ReportSpamManager.IDSServiceType)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ReportSpamManager.IDSServiceType, &type metadata for ReportSpamManager.IDSServiceType);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ReportSpamManager.IDSServiceType and conformance ReportSpamManager.IDSServiceType);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type SpamMessageDataModel.SpamMessageType and conformance SpamMessageDataModel.SpamMessageType()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SpamMessageDataModel.SpamMessageType and conformance SpamMessageDataModel.SpamMessageType;
  if (!lazy protocol witness table cache variable for type SpamMessageDataModel.SpamMessageType and conformance SpamMessageDataModel.SpamMessageType)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for SpamMessageDataModel.SpamMessageType, &type metadata for SpamMessageDataModel.SpamMessageType);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SpamMessageDataModel.SpamMessageType and conformance SpamMessageDataModel.SpamMessageType);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ReportSpamManager.SpamAction and conformance ReportSpamManager.SpamAction()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ReportSpamManager.SpamAction and conformance ReportSpamManager.SpamAction;
  if (!lazy protocol witness table cache variable for type ReportSpamManager.SpamAction and conformance ReportSpamManager.SpamAction)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ReportSpamManager.SpamAction, &type metadata for ReportSpamManager.SpamAction);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ReportSpamManager.SpamAction and conformance ReportSpamManager.SpamAction);
  }
  return result;
}

uint64_t type metadata accessor for ReportSpamManager()
{
  return objc_opt_self();
}

uint64_t method lookup function for ReportSpamManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ReportSpamManager.__allocating_init(idsService:imAccountController:imDaemonController:featureFlags:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t storeEnumTagSinglePayload for ReportSpamManager.IDSServiceType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BD2320A4 + 4 * byte_1BD6528B5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BD2320D8 + 4 * byte_1BD6528B0[v4]))();
}

uint64_t sub_1BD2320D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD2320E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD2320E8);
  return result;
}

uint64_t sub_1BD2320F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD2320FCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BD232100(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD232108(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for ReportSpamManager.IDSServiceType()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t destroy for ReportSpamManager.SpamDataModel(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ReportSpamManager.SpamDataModel(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  v7 = *(void **)(a2 + 56);
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = v7;
  *(_QWORD *)(a1 + 64) = v6;
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  v8 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v8;
  v9 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v9;
  v10 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v10;
  v11 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v11;
  v12 = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v12;
  v13 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14 = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ReportSpamManager.SpamDataModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = *(void **)(a1 + 56);
  v6 = *(void **)(a2 + 56);
  *(_QWORD *)(a1 + 56) = v6;
  v7 = v6;

  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = v8;
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *__swift_memcpy176_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xB0uLL);
}

uint64_t assignWithTake for ReportSpamManager.SpamDataModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  v5 = *(void **)(a1 + 56);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);

  v6 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  v7 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v11;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ReportSpamManager.SpamDataModel(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 176))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ReportSpamManager.SpamDataModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 168) = 0;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 176) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 176) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for ReportSpamManager.SpamDataModel()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t destroy for SpamMessageDataModel()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for SpamMessageDataModel(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for SpamMessageDataModel(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for SpamMessageDataModel(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for SpamMessageDataModel()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t storeEnumTagSinglePayload for SpamMessageDataModel.SpamMessageType(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BD23274C + 4 * byte_1BD6528BA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BD23276C + 4 * byte_1BD6528BF[v4]))();
}

_BYTE *sub_1BD23274C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BD23276C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BD232774(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BD23277C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BD232784(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BD23278C(_DWORD *result)
{
  *result = 0;
  return result;
}

void type metadata accessor for SpamMessageDataModel.SpamMessageType()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t storeEnumTagSinglePayload for ReportSpamManager.SpamAction(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BD2327F0 + 4 * byte_1BD6528C9[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BD232824 + 4 * byte_1BD6528C4[v4]))();
}

uint64_t sub_1BD232824(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD23282C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD232834);
  return result;
}

uint64_t sub_1BD232840(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD232848);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BD23284C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD232854(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for ReportSpamManager.SpamAction()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t sub_1BD23286C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t _s15ConversationKit17ReportSpamManagerC07presentC22SingleParticipantAlert2of4from18preparationHandleryAA0D9Modelable_p_So16UIViewControllerCySbcSgtFySo13UIAlertActionCcfU_TA_0(uint64_t a1)
{
  return OUTLINED_FUNCTION_14_72(a1, 64);
}

uint64_t sub_1BD2328AC()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t _s15ConversationKit17ReportSpamManagerC32presentBlockAllParticipantsAlert2of4from18preparationHandleryAA0D9Modelable_p_So16UIViewControllerCySbcSgtFySo13UIAlertActionCcfU_TA_0(uint64_t a1)
{
  return OUTLINED_FUNCTION_24_45(a1, 61);
}

uint64_t _s15ConversationKit17ReportSpamManagerC32presentBlockAllParticipantsAlert2of4from18preparationHandleryAA0D9Modelable_p_So16UIViewControllerCySbcSgtFySo13UIAlertActionCcfU0_TA_0(uint64_t a1)
{
  return OUTLINED_FUNCTION_14_72(a1, 61);
}

#error "1BD232930: call analysis failed (funcsize=10)"

uint64_t _s15ConversationKit17ReportSpamManagerC07presentC13AndBlockAlert2of4from18preparationHandleryAA0D9Modelable_p_So16UIViewControllerCySbcSgtFySo13UIAlertActionCcfU_TA_0(uint64_t a1)
{
  return OUTLINED_FUNCTION_14_72(a1, 55);
}

uint64_t _s15ConversationKit17ReportSpamManagerC07presentC13AndBlockAlert2of4from18preparationHandleryAA0D9Modelable_p_So16UIViewControllerCySbcSgtFySo13UIAlertActionCcfU0_TA_0(uint64_t a1)
{
  return OUTLINED_FUNCTION_24_45(a1, 55);
}

#error "1BD2329A4: call analysis failed (funcsize=13)"

uint64_t OUTLINED_FUNCTION_76_10()
{
  return swift_bridgeObjectRelease();
}

id UIColor.init(white:)(double a1)
{
  return objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithWhite_alpha_, a1, 1.0);
}

BOOL static ColorStyle.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

id Array<A>.interpolatedColor(percent:)(double a1)
{
  uint64_t v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v17;
  void *v18;

  v2 = type metadata accessor for Array();
  MEMORY[0x1C3B750C8](MEMORY[0x1E0DEAF50], v2);
  OUTLINED_FUNCTION_5_82();
  Collection.first.getter();
  if (!v18)
    return objc_msgSend((id)objc_opt_self(), sel_clearColor);
  v3 = UIColor.hslaComponents.getter();
  v5 = v4;
  v7 = v6;
  v9 = v8;

  MEMORY[0x1C3B750C8](MEMORY[0x1E0DEAF20], v2);
  OUTLINED_FUNCTION_5_82();
  BidirectionalCollection.last.getter();
  v10 = UIColor.hslaComponents.getter();
  v12 = v11;
  v14 = v13;
  v17 = v15;

  return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithHue_saturation_brightness_alpha_, (1.0 - a1) * v3 + v10 * a1, (1.0 - a1) * v5 + v12 * a1, (1.0 - a1) * v7 + v14 * a1, (1.0 - a1) * v9 + v17 * a1);
}

id UIColor.screenBlendedColor.getter()
{
  double v0;
  double v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;

  v0 = UIColor.rgbaComponents.getter();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v7 = -(OUTLINED_FUNCTION_4_84(-(v0 + -1.0)) + -1.0);
  v8 = -(OUTLINED_FUNCTION_4_84(-(v2 + -1.0)) + -1.0);
  return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, v7, v8, -(OUTLINED_FUNCTION_4_84(-(v4 + -1.0)) + -1.0), v6);
}

void UIColor.HSLAComponents.hue.setter(double a1)
{
  double *v1;

  *v1 = a1;
}

uint64_t (*UIColor.HSLAComponents.hue.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double UIColor.HSLAComponents.saturation.getter(double a1, double a2)
{
  return a2;
}

void UIColor.HSLAComponents.saturation.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 8) = a1;
}

uint64_t (*UIColor.HSLAComponents.saturation.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double UIColor.HSLAComponents.lightness.getter(double a1, double a2, double a3)
{
  return a3;
}

void UIColor.HSLAComponents.lightness.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 16) = a1;
}

uint64_t (*UIColor.HSLAComponents.lightness.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double UIColor.HSLAComponents.alpha.getter(double a1, double a2, double a3, double a4)
{
  return a4;
}

void UIColor.HSLAComponents.alpha.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 24) = a1;
}

uint64_t (*UIColor.HSLAComponents.alpha.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void UIColor.RGBAComponents.red.setter(double a1)
{
  double *v1;

  *v1 = a1;
}

uint64_t (*UIColor.RGBAComponents.red.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double UIColor.RGBAComponents.green.getter(double a1, double a2)
{
  return a2;
}

uint64_t (*UIColor.RGBAComponents.green.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double UIColor.RGBAComponents.blue.getter(double a1, double a2, double a3)
{
  return a3;
}

uint64_t (*UIColor.RGBAComponents.blue.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double UIColor.RGBAComponents.alpha.getter(double a1, double a2, double a3, double a4)
{
  return a4;
}

uint64_t (*UIColor.RGBAComponents.alpha.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double UIColor.hslaComponents.getter()
{
  return OUTLINED_FUNCTION_2_87((SEL *)&selRef_getHue_saturation_brightness_alpha_);
}

double UIColor.rgbaComponents.getter()
{
  return OUTLINED_FUNCTION_2_87((SEL *)&selRef_getRed_green_blue_alpha_);
}

double UIColor.hslaComponents.getter(SEL *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[2];

  v6[1] = *MEMORY[0x1E0C80C00];
  v6[0] = 0;
  v4 = 0;
  v5 = 0;
  v3 = 0;
  objc_msgSend(v1, *a1, v6, &v5, &v4, &v3);
  return *(double *)v6;
}

id static UIColor.faceTimeDarkGreen.getter()
{
  return objc_msgSend((id)objc_opt_self(), sel_systemDarkGreenColor);
}

void ColorStyle.hash(into:)()
{
  unsigned __int8 *v0;

  Hasher._combine(_:)(*v0);
}

Swift::Int ColorStyle.hashValue.getter()
{
  unsigned __int8 *v0;
  Swift::UInt v1;

  v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

unint64_t lazy protocol witness table accessor for type ColorStyle and conformance ColorStyle()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ColorStyle and conformance ColorStyle;
  if (!lazy protocol witness table cache variable for type ColorStyle and conformance ColorStyle)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ColorStyle, &type metadata for ColorStyle);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ColorStyle and conformance ColorStyle);
  }
  return result;
}

void type metadata accessor for UIColor.HSLAComponents()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for UIColor.RGBAComponents()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t storeEnumTagSinglePayload for ColorStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BD232F84 + 4 * byte_1BD652B81[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BD232FB8 + 4 * byte_1BD652B7C[v4]))();
}

uint64_t sub_1BD232FB8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD232FC0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD232FC8);
  return result;
}

uint64_t sub_1BD232FD4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD232FDCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BD232FE0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD232FE8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for ColorStyle()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t ParticipantMediaProviderCreator.createParticipantVideoProvider(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(a3 + 8))(a1, 0, 0, a2, a3);
}

uint64_t key path getter for DefaultParticipantMediaProviderCreator.avcRemoteVideoClientDelegate : DefaultParticipantMediaProviderCreator@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  _BYTE v5[8];

  outlined init with copy of DefaultParticipantMediaProviderCreator(a1, (uint64_t)v5);
  v3 = MEMORY[0x1C3B752C0](v5);
  result = outlined destroy of DefaultParticipantMediaProviderCreator((uint64_t)v5);
  *a2 = v3;
  return result;
}

void DefaultParticipantMediaProviderCreator.avcRemoteVideoClientDelegate.getter()
{
  JUMPOUT(0x1C3B752C0);
}

uint64_t DefaultParticipantMediaProviderCreator.avcRemoteVideoClientDelegate.setter()
{
  swift_unknownObjectWeakAssign();
  return OUTLINED_FUNCTION_0_101();
}

uint64_t (*DefaultParticipantMediaProviderCreator.avcRemoteVideoClientDelegate.modify(_QWORD *a1))()
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = MEMORY[0x1C3B752C0](v1);
  return DefaultParticipantMediaProviderCreator.avcRemoteVideoClientDelegate.modify;
}

uint64_t DefaultParticipantMediaProviderCreator.avcRemoteVideoClientDelegate.modify()
{
  swift_unknownObjectWeakAssign();
  return OUTLINED_FUNCTION_0_101();
}

uint64_t DefaultParticipantMediaProviderCreator.createParticipantVideoProvider(with:oneToOneModeStateProvider:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  objc_class *v13;
  _BYTE v14[8];

  v5 = v4;
  outlined init with copy of DefaultParticipantMediaProviderCreator(v5, (uint64_t)v14);
  v10 = MEMORY[0x1C3B752C0](v14);
  outlined destroy of DefaultParticipantMediaProviderCreator((uint64_t)v14);
  result = swift_unknownObjectRelease();
  if (v10)
  {
    v12 = MEMORY[0x1C3B752C0](v5);
    v13 = (objc_class *)type metadata accessor for RemoteParticipantVideoProvider();
    objc_allocWithZone(v13);
    swift_unknownObjectRetain();
    result = (uint64_t)RemoteParticipantVideoProvider.init(streamToken:avcRemoteVideoClientDelegate:oneToOneModeStateProvider:)(a1, v12, a2, a3);
    a4[3] = (uint64_t)v13;
    a4[4] = (uint64_t)&protocol witness table for RemoteParticipantVideoProvider;
    *a4 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t DefaultParticipantMediaProviderCreator.init()()
{
  return swift_unknownObjectWeakInit();
}

uint64_t DefaultParticipantMediaProviderCreator.init(avcRemoteVideoClientDelegate:)()
{
  swift_unknownObjectWeakInit();
  return OUTLINED_FUNCTION_0_101();
}

uint64_t sub_1BD233204()
{
  return swift_unknownObjectWeakAssign();
}

uint64_t dispatch thunk of ParticipantMediaProviderCreator.createParticipantVideoProvider(with:oneToOneModeStateProvider:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

ValueMetadata *type metadata accessor for DefaultParticipantMediaProviderCreator()
{
  return &type metadata for DefaultParticipantMediaProviderCreator;
}

id Features.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void *static Features.shared.getter()
{
  if (one-time initialization token for shared != -1)
    swift_once();
  return static Features.shared;
}

uint64_t Features.isSystemApertureEnabled.getter()
{
  return SBUIIsSystemApertureEnabled();
}

void Features.isIncomingCallBannerEnabled.getter()
{
  uint64_t *v0;
  uint64_t v1;

  if ((OUTLINED_FUNCTION_12_67(*v0) & 1) == 0)
  {
    OUTLINED_FUNCTION_10_79();
    v1 = OUTLINED_FUNCTION_4_85();
    OUTLINED_FUNCTION_3_87(v1);
  }
  OUTLINED_FUNCTION_18_6();
}

unint64_t lazy protocol witness table accessor for type Features.CallUI and conformance Features.CallUI()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Features.CallUI and conformance Features.CallUI;
  if (!lazy protocol witness table cache variable for type Features.CallUI and conformance Features.CallUI)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for Features.CallUI, &unk_1E7626AE0);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Features.CallUI and conformance Features.CallUI);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Features.CallUI and conformance Features.CallUI;
  if (!lazy protocol witness table cache variable for type Features.CallUI and conformance Features.CallUI)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for Features.CallUI, &unk_1E7626AE0);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Features.CallUI and conformance Features.CallUI);
  }
  return result;
}

void Features.isHeroImageEnabled.getter()
{
  Features.isHeroImageEnabled.getter();
}

{
  id v0;
  uint64_t v1;

  v0 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
  objc_msgSend(v0, sel_userInterfaceIdiom);

  OUTLINED_FUNCTION_10_79();
  v1 = OUTLINED_FUNCTION_4_85();
  OUTLINED_FUNCTION_3_87(v1);
  OUTLINED_FUNCTION_14_1();
}

void Features.isHeroTitleEnabled.getter()
{
  OUTLINED_FUNCTION_8_74((uint64_t)&unk_1E7626AE0, (uint64_t (*)(void))lazy protocol witness table accessor for type Features.CallUI and conformance Features.CallUI);
}

void Features.isModernMePiPEnabled.getter()
{
  OUTLINED_FUNCTION_7_83((uint64_t)&unk_1E7626A50, (uint64_t (*)(void))lazy protocol witness table accessor for type Features.ConversationKit and conformance Features.ConversationKit);
}

void Features.isPoorConnectionLabelsEnabled.getter()
{
  OUTLINED_FUNCTION_8_74((uint64_t)&unk_1E7626A50, (uint64_t (*)(void))lazy protocol witness table accessor for type Features.ConversationKit and conformance Features.ConversationKit);
}

void Features.isEnhancedEmergencyEnabled.getter()
{
  OUTLINED_FUNCTION_6_68((uint64_t)&unk_1E7626A50, (uint64_t (*)(void))lazy protocol witness table accessor for type Features.ConversationKit and conformance Features.ConversationKit);
}

void Features.isDialPadEnabled.getter()
{
  Features.isHeroImageEnabled.getter();
}

void Features.isButtonLayoutEnabled.getter()
{
  Features.isHeroImageEnabled.getter();
}

void Features.isScreeningLiveActivityEnabled.getter()
{
  Features.isScreeningLiveActivityEnabled.getter((uint64_t)&unk_1E76269C0, (uint64_t (*)(void))lazy protocol witness table accessor for type Features.CallScreening and conformance Features.CallScreening);
}

void Features.shouldEmbedSwapBanner.getter()
{
  _QWORD *v0;
  uint64_t v1;

  if (((*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))() & 1) != 0)
  {
    OUTLINED_FUNCTION_10_79();
    v1 = OUTLINED_FUNCTION_4_85();
    OUTLINED_FUNCTION_3_87(v1);
  }
  OUTLINED_FUNCTION_18_6();
}

void Features.shouldShowFullScreenCallWaiting.getter()
{
  char v0;
  uint64_t *v1;
  _QWORD *v2;
  uint64_t (*v3)(void);
  uint64_t v4;
  uint64_t v5;

  v2 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v3 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x50);
  if (((v3() & 1) == 0 || (OUTLINED_FUNCTION_5_83(*v1) & 1) == 0)
    && (((*(uint64_t (**)(void))((*v2 & *v1) + 0x58))() & 1) == 0
     || ((*(uint64_t (**)(void))((*v2 & *v1) + 0xA0))() & 1) == 0))
  {
    OUTLINED_FUNCTION_10_79();
    v4 = OUTLINED_FUNCTION_4_85();
    v5 = OUTLINED_FUNCTION_3_87(v4);
    if ((v0 & 1) != 0 || (v5 = OUTLINED_FUNCTION_5_83(*v1), (v5 & 1) != 0))
      ((void (*)(uint64_t))v3)(v5);
  }
  OUTLINED_FUNCTION_14_1();
}

void Features.isDominoEnabled.getter()
{
  Features.isScreeningLiveActivityEnabled.getter((uint64_t)&unk_1E7626930, (uint64_t (*)(void))lazy protocol witness table accessor for type Features.SpringBoard and conformance Features.SpringBoard);
}

void Features.callManagerEnabled.getter()
{
  uint64_t *v0;
  __CFString *v1;
  __CFString *v2;
  CFPropertyListRef v3;
  void *v4;
  char v5;
  char v6[24];
  void *v7;
  unint64_t v8;

  v1 = (__CFString *)MEMORY[0x1C3B72E00](0xD000000000000012, 0x80000001BD67DEC0);
  v2 = (__CFString *)MEMORY[0x1C3B72E00](0xD000000000000017, 0x80000001BD67DEE0);
  v3 = CFPreferencesCopyValue(v1, v2, (CFStringRef)*MEMORY[0x1E0C9B260], (CFStringRef)*MEMORY[0x1E0C9B250]);

  if (v3)
  {
    objc_opt_self();
    v4 = (void *)swift_dynamicCastObjCClass();
    if (!v4)
      swift_unknownObjectRelease();
  }
  else
  {
    v4 = 0;
  }
  if ((OUTLINED_FUNCTION_12_67(*v0) & 1) != 0
    && (v7 = &unk_1E76268A0,
        v8 = lazy protocol witness table accessor for type Features.TelephonyUtilities and conformance Features.TelephonyUtilities(),
        v6[0] = 1,
        v5 = OUTLINED_FUNCTION_4_85(),
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v6),
        (v5 & 1) != 0))
  {
    if (v4)
    {
      objc_msgSend(v4, sel_BOOLValue);

    }
  }
  else
  {

  }
  OUTLINED_FUNCTION_14_1();
}

uint64_t Features.hudActivityManagerEnabled.getter()
{
  uint64_t *v0;
  _QWORD *v1;

  v1 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  if ((OUTLINED_FUNCTION_5_83(*v0) & 1) != 0 || ((*(uint64_t (**)(void))((*v1 & *v0) + 0xD0))() & 1) != 0)
    return 1;
  else
    return (*(uint64_t (**)(void))((*v1 & *v0) + 0xD8))();
}

void Features.requestToScreenShareEnabled.getter()
{
  OUTLINED_FUNCTION_6_68((uint64_t)&unk_1E76268A0, (uint64_t (*)(void))lazy protocol witness table accessor for type Features.TelephonyUtilities and conformance Features.TelephonyUtilities);
}

void Features.usesModernScreenSharingFromMessages.getter()
{
  Features.isScreeningLiveActivityEnabled.getter((uint64_t)&unk_1E7626810, (uint64_t (*)(void))lazy protocol witness table accessor for type Features.Messages and conformance Features.Messages);
}

void Features.isAppProtectionEnabled.getter()
{
  Features.isScreeningLiveActivityEnabled.getter((uint64_t)&unk_1E7626780, (uint64_t (*)(void))lazy protocol witness table accessor for type Features.AppProtection and conformance Features.AppProtection);
}

void Features.buttonRemoteControlEnabled.getter()
{
  Features.isScreeningLiveActivityEnabled.getter((uint64_t)&unk_1E76266F0, (uint64_t (*)(void))lazy protocol witness table accessor for type Features.DockKit and conformance Features.DockKit);
}

void Features.isUIFluidTransitionsEnabled.getter()
{
  Features.isScreeningLiveActivityEnabled.getter((uint64_t)&unk_1E7626660, (uint64_t (*)(void))lazy protocol witness table accessor for type Features.UIKit and conformance Features.UIKit);
}

void Features.isScreeningLiveActivityEnabled.getter(uint64_t a1, uint64_t (*a2)(void))
{
  _BYTE v2[24];
  uint64_t v3;
  uint64_t v4;

  v3 = a1;
  v4 = a2();
  OUTLINED_FUNCTION_4_85();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
  OUTLINED_FUNCTION_18_6();
}

void Features.callRecordingEnabled.getter()
{
  OUTLINED_FUNCTION_9_68((uint64_t)&unk_1E76268A0, (uint64_t (*)(void))lazy protocol witness table accessor for type Features.TelephonyUtilities and conformance Features.TelephonyUtilities);
}

void Features.callRecordingDominoEnabled.getter()
{
  OUTLINED_FUNCTION_9_68((uint64_t)&unk_1E7626A50, (uint64_t (*)(void))lazy protocol witness table accessor for type Features.ConversationKit and conformance Features.ConversationKit);
}

const char *Features.CallUI.domain.getter()
{
  return "ConversationKit";
}

uint64_t Features.CallUI.feature.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(const char *, uint64_t))((char *)sub_1BD233C38 + 4 * byte_1BD652CB0[a1]))("CallUI_HeroImage", 16);
}

const char *sub_1BD233C38()
{
  return "CallUI_HeroTitle";
}

const char *protocol witness for FeatureFlagsKey.domain.getter in conformance Features.CallUI()
{
  return Features.CallUI.domain.getter();
}

uint64_t protocol witness for FeatureFlagsKey.feature.getter in conformance Features.CallUI()
{
  unsigned __int8 *v0;

  return Features.CallUI.feature.getter(*v0);
}

const char *Features.CallScreening.feature.getter()
{
  return "Experimental_CallScreening_LiveActivity";
}

uint64_t Features.ConversationKit.feature.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(const char *, uint64_t))((char *)sub_1BD233CF0 + 4 * byte_1BD652CB7[a1]))("ModernMePiP", 11);
}

const char *sub_1BD233CF0()
{
  return "PoorConnectionLabels";
}

uint64_t protocol witness for FeatureFlagsKey.feature.getter in conformance Features.ConversationKit()
{
  unsigned __int8 *v0;

  return Features.ConversationKit.feature.getter(*v0);
}

const char *Features.SpringBoard.domain.getter()
{
  return "SpringBoard";
}

const char *Features.SpringBoard.feature.getter()
{
  return "Domino";
}

const char *Features.Messages.domain.getter()
{
  return "Messages";
}

const char *Features.Messages.feature.getter()
{
  return "usesModernScreenSharingFromMessages";
}

const char *Features.AppProtection.domain.getter()
{
  return "AppProtection";
}

const char *Features.AppProtection.feature.getter()
{
  return "protected_apps";
}

const char *Features.UIKit.domain.getter()
{
  return "UIKit";
}

const char *Features.UIKit.feature.getter()
{
  return "uip_fluid_transitions";
}

const char *Features.DockKit.domain.getter()
{
  return "DockKit";
}

const char *Features.DockKit.feature.getter()
{
  return "ButtonRemoteControl";
}

id Features.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Features();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t lazy protocol witness table accessor for type Features.ConversationKit and conformance Features.ConversationKit()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Features.ConversationKit and conformance Features.ConversationKit;
  if (!lazy protocol witness table cache variable for type Features.ConversationKit and conformance Features.ConversationKit)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for Features.ConversationKit, &unk_1E7626A50);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Features.ConversationKit and conformance Features.ConversationKit);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Features.ConversationKit and conformance Features.ConversationKit;
  if (!lazy protocol witness table cache variable for type Features.ConversationKit and conformance Features.ConversationKit)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for Features.ConversationKit, &unk_1E7626A50);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Features.ConversationKit and conformance Features.ConversationKit);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type Features.CallScreening and conformance Features.CallScreening()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Features.CallScreening and conformance Features.CallScreening;
  if (!lazy protocol witness table cache variable for type Features.CallScreening and conformance Features.CallScreening)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for Features.CallScreening, &unk_1E76269C0);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Features.CallScreening and conformance Features.CallScreening);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Features.CallScreening and conformance Features.CallScreening;
  if (!lazy protocol witness table cache variable for type Features.CallScreening and conformance Features.CallScreening)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for Features.CallScreening, &unk_1E76269C0);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Features.CallScreening and conformance Features.CallScreening);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type Features.SpringBoard and conformance Features.SpringBoard()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Features.SpringBoard and conformance Features.SpringBoard;
  if (!lazy protocol witness table cache variable for type Features.SpringBoard and conformance Features.SpringBoard)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for Features.SpringBoard, &unk_1E7626930);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Features.SpringBoard and conformance Features.SpringBoard);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Features.SpringBoard and conformance Features.SpringBoard;
  if (!lazy protocol witness table cache variable for type Features.SpringBoard and conformance Features.SpringBoard)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for Features.SpringBoard, &unk_1E7626930);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Features.SpringBoard and conformance Features.SpringBoard);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type Features.Messages and conformance Features.Messages()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Features.Messages and conformance Features.Messages;
  if (!lazy protocol witness table cache variable for type Features.Messages and conformance Features.Messages)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for Features.Messages, &unk_1E7626810);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Features.Messages and conformance Features.Messages);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Features.Messages and conformance Features.Messages;
  if (!lazy protocol witness table cache variable for type Features.Messages and conformance Features.Messages)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for Features.Messages, &unk_1E7626810);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Features.Messages and conformance Features.Messages);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type Features.AppProtection and conformance Features.AppProtection()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Features.AppProtection and conformance Features.AppProtection;
  if (!lazy protocol witness table cache variable for type Features.AppProtection and conformance Features.AppProtection)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for Features.AppProtection, &unk_1E7626780);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Features.AppProtection and conformance Features.AppProtection);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Features.AppProtection and conformance Features.AppProtection;
  if (!lazy protocol witness table cache variable for type Features.AppProtection and conformance Features.AppProtection)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for Features.AppProtection, &unk_1E7626780);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Features.AppProtection and conformance Features.AppProtection);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type Features.DockKit and conformance Features.DockKit()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Features.DockKit and conformance Features.DockKit;
  if (!lazy protocol witness table cache variable for type Features.DockKit and conformance Features.DockKit)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for Features.DockKit, &unk_1E76266F0);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Features.DockKit and conformance Features.DockKit);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Features.DockKit and conformance Features.DockKit;
  if (!lazy protocol witness table cache variable for type Features.DockKit and conformance Features.DockKit)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for Features.DockKit, &unk_1E76266F0);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Features.DockKit and conformance Features.DockKit);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type Features.UIKit and conformance Features.UIKit()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Features.UIKit and conformance Features.UIKit;
  if (!lazy protocol witness table cache variable for type Features.UIKit and conformance Features.UIKit)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for Features.UIKit, &unk_1E7626660);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Features.UIKit and conformance Features.UIKit);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Features.UIKit and conformance Features.UIKit;
  if (!lazy protocol witness table cache variable for type Features.UIKit and conformance Features.UIKit)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for Features.UIKit, &unk_1E7626660);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Features.UIKit and conformance Features.UIKit);
  }
  return result;
}

uint64_t method lookup function for Features()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Features.isSystemApertureEnabled.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x50))();
}

uint64_t dispatch thunk of Features.isIncomingCallBannerEnabled.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x58))();
}

uint64_t dispatch thunk of Features.isHeroImageEnabled.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of Features.isHeroTitleEnabled.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of Features.isModernMePiPEnabled.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of Features.isPoorConnectionLabelsEnabled.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of Features.isEnhancedEmergencyEnabled.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of Features.isDialPadEnabled.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of Features.isButtonLayoutEnabled.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of Features.isScreeningLiveActivityEnabled.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of Features.shouldEmbedSwapBanner.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of Features.shouldShowFullScreenCallWaiting.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of Features.isDominoEnabled.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of Features.isNameAndPhotoC3Enabled.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of Features.callManagerEnabled.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of Features.hudActivityManagerEnabled.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of Features.requestToScreenShareEnabled.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of Features.usesModernScreenSharingFromMessages.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of Features.isAppProtectionEnabled.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of Features.buttonRemoteControlEnabled.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of Features.isUIFluidTransitionsEnabled.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of Features.callRecordingEnabled.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of Features.callRecordingDominoEnabled.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x100))();
}

void *type metadata accessor for Features.UIKit()
{
  return &unk_1E7626660;
}

void *type metadata accessor for Features.DockKit()
{
  return &unk_1E76266F0;
}

void *type metadata accessor for Features.AppProtection()
{
  return &unk_1E7626780;
}

void *type metadata accessor for Features.Messages()
{
  return &unk_1E7626810;
}

void *type metadata accessor for Features.TelephonyUtilities()
{
  return &unk_1E76268A0;
}

void *type metadata accessor for Features.SpringBoard()
{
  return &unk_1E7626930;
}

uint64_t storeEnumTagSinglePayload for Features.UIKit(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BD234330 + 4 * byte_1BD652CBF[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BD234350 + 4 * byte_1BD652CC4[v4]))();
}

_BYTE *sub_1BD234330(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BD234350(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BD234358(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BD234360(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BD234368(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BD234370(_DWORD *result)
{
  *result = 0;
  return result;
}

void *type metadata accessor for Features.CallScreening()
{
  return &unk_1E76269C0;
}

uint64_t storeEnumTagSinglePayload for Features.TelephonyUtilities(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BD2343D8 + 4 * byte_1BD652CCE[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BD23440C + 4 * byte_1BD652CC9[v4]))();
}

uint64_t sub_1BD23440C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD234414(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD23441CLL);
  return result;
}

uint64_t sub_1BD234428(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD234430);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BD234434(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD23443C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void *type metadata accessor for Features.ConversationKit()
{
  return &unk_1E7626A50;
}

uint64_t storeEnumTagSinglePayload for Features.CallUI(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1BD2344A4 + 4 * byte_1BD652CD8[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1BD2344D8 + 4 * byte_1BD652CD3[v4]))();
}

uint64_t sub_1BD2344D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD2344E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD2344E8);
  return result;
}

uint64_t sub_1BD2344F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD2344FCLL);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1BD234500(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD234508(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void *type metadata accessor for Features.CallUI()
{
  return &unk_1E7626AE0;
}

uint64_t getEnumTagSinglePayload for AnsweringMachineError(uint64_t a1, unsigned int a2)
{
  unint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for AnsweringMachineError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

uint64_t getEnumTag for AnsweringMachineError(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *destructiveInjectEnumTag for AnsweringMachineError(_QWORD *result, int a2)
{
  if (a2 < 0)
  {
    *result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for AnsweringMachineError()
{
  return &type metadata for AnsweringMachineError;
}

id AudioVisualizationRingLayer.__allocating_init(opacityMultiple:)(float a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return AudioVisualizationRingLayer.init(opacityMultiple:)(a1);
}

id AudioVisualizationRingLayer.__allocating_init(layer:)()
{
  _QWORD *v0;
  id v1;
  id v2;

  v1 = OUTLINED_FUNCTION_16_1();
  __swift_project_boxed_opaque_existential_1(v0, v0[3]);
  v2 = objc_msgSend(v1, sel_initWithLayer_, _bridgeAnythingToObjectiveC<A>(_:)());
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v0);
  return v2;
}

float AudioVisualizationRingLayer.opacityMultiple.getter()
{
  uint64_t v0;

  return *(float *)(v0 + OBJC_IVAR____TtC15ConversationKit27AudioVisualizationRingLayer_opacityMultiple);
}

id AudioVisualizationRingLayer.init(opacityMultiple:)(float a1)
{
  char *v1;
  id v2;
  double v3;
  objc_super v5;

  *(float *)&v1[OBJC_IVAR____TtC15ConversationKit27AudioVisualizationRingLayer_opacityMultiple] = a1;
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for AudioVisualizationRingLayer();
  v2 = objc_msgSendSuper2(&v5, sel_init);
  objc_msgSend(v2, sel_setAllowsGroupBlending_, 1);
  LODWORD(v3) = 1.0;
  objc_msgSend(v2, sel_setOpacity_, v3);

  return v2;
}

uint64_t type metadata accessor for AudioVisualizationRingLayer()
{
  return objc_opt_self();
}

uint64_t AudioVisualizationRingLayer.init(layer:)(uint64_t a1)
{
  void *v1;
  objc_class *v3;
  char *v4;
  void *v5;
  id v6;
  uint64_t result;
  objc_super v8;
  char *v9;
  char v10[32];

  outlined init with copy of Any(a1, (uint64_t)v10);
  v3 = (objc_class *)type metadata accessor for AudioVisualizationRingLayer();
  v4 = v1;
  if (swift_dynamicCast())
  {
    v5 = v9;
    *(_DWORD *)&v4[OBJC_IVAR____TtC15ConversationKit27AudioVisualizationRingLayer_opacityMultiple] = *(_DWORD *)&v9[OBJC_IVAR____TtC15ConversationKit27AudioVisualizationRingLayer_opacityMultiple];

    v8.receiver = v4;
    v8.super_class = v3;
    v6 = objc_msgSendSuper2(&v8, sel_initWithLayer_, v5);

    __swift_destroy_boxed_opaque_existential_1(a1);
    return (uint64_t)v6;
  }
  else
  {
    result = OUTLINED_FUNCTION_1_98();
    __break(1u);
  }
  return result;
}

id AudioVisualizationRingLayer.__allocating_init(coder:)()
{
  void *v0;
  id v1;

  v1 = objc_msgSend(OUTLINED_FUNCTION_16_1(), sel_initWithCoder_, v0);

  return v1;
}

void AudioVisualizationRingLayer.init(coder:)()
{
  OUTLINED_FUNCTION_1_98();
  __break(1u);
}

float AudioVisualizationRingLayer.opacity.getter()
{
  char *v0;
  float v1;
  objc_super v3;

  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for AudioVisualizationRingLayer();
  objc_msgSendSuper2(&v3, sel_opacity);
  return v1 / *(float *)&v0[OBJC_IVAR____TtC15ConversationKit27AudioVisualizationRingLayer_opacityMultiple];
}

id AudioVisualizationRingLayer.opacity.setter(float a1)
{
  char *v1;
  float v2;
  double v3;
  objc_super v5;

  v2 = *(float *)&v1[OBJC_IVAR____TtC15ConversationKit27AudioVisualizationRingLayer_opacityMultiple] * a1;
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for AudioVisualizationRingLayer();
  *(float *)&v3 = v2;
  return objc_msgSendSuper2(&v5, sel_setOpacity_, v3);
}

id AudioVisualizationRingLayer.bounds.getter()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AudioVisualizationRingLayer();
  return objc_msgSendSuper2(&v2, sel_bounds);
}

id AudioVisualizationRingLayer.bounds.setter(double a1, double a2, double a3, double a4)
{
  void *v4;
  objc_super v10;

  v10.receiver = v4;
  v10.super_class = (Class)type metadata accessor for AudioVisualizationRingLayer();
  objc_msgSendSuper2(&v10, sel_setBounds_, a1, a2, a3, a4);
  return AudioVisualizationRingLayer.bounds.didset();
}

id AudioVisualizationRingLayer.bounds.didset()
{
  void *v0;
  double v1;
  double v2;
  double v3;
  double v4;
  double v5;

  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v0, sel_setCornerRadius_, v1 * 0.5);
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v0, sel_setBorderWidth_, v2 * 0.06);
  objc_msgSend(v0, sel_bounds);
  v4 = v3 * 0.5;
  objc_msgSend(v0, sel_bounds);
  return objc_msgSend(v0, sel_setPosition_, v4, v5 * 0.5);
}

Swift::Void __swiftcall AudioVisualizationRingLayer.addBoundsSizeAnimation(_:forKey:)(CABasicAnimation _, Swift::String forKey)
{
  void *v2;
  void *v3;
  uint64_t v4;
  void *attr;
  Class isa;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  Class v24;
  Class v25;
  void *v26;
  Class v27;
  Class v28;
  void *v29;
  Class v30;
  Class v31;
  uint64_t inited;
  id v33;
  id v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  unint64_t v42[5];

  v3 = v2;
  v4 = *(_QWORD *)&_.super.super._flags;
  attr = _.super.super._attr;
  isa = _.super.super.super.isa;
  -[objc_class setRemovedOnCompletion:](_.super.super.super.isa, sel_setRemovedOnCompletion_, 1, forKey._countAndFlagsBits, forKey._object);
  outlined bridged method (mnbgnn) of @objc CALayer.add(_:forKey:)((uint64_t)isa, (uint64_t)attr, v4, v3);
  v7 = -[objc_class fromValue](isa, sel_fromValue);
  if (v7)
  {
    _bridgeAnyObjectToAny(_:)();
    v7 = (id)swift_unknownObjectRelease();
  }
  OUTLINED_FUNCTION_2_88((uint64_t)v7, v8, v9, v10, v11, v12, v13, v14, v37, v39);
  if (v42[3])
  {
    type metadata accessor for NSValue();
    if ((OUTLINED_FUNCTION_0_102() & 1) != 0)
    {
      v15 = -[objc_class toValue](isa, sel_toValue);
      if (v15)
      {
        _bridgeAnyObjectToAny(_:)();
        v15 = (id)swift_unknownObjectRelease();
      }
      OUTLINED_FUNCTION_2_88((uint64_t)v15, v16, v17, v18, v19, v20, v21, v22, v38, v40);
      if ((OUTLINED_FUNCTION_0_102() & 1) != 0)
      {
        objc_msgSend(v41, sel_CGSizeValue);
        objc_msgSend(v41, sel_CGSizeValue);
        v23 = (void *)CABasicAnimation.animationCopy()();
        outlined bridged method (mbnn) of @objc CAPropertyAnimation.keyPath.setter(0x615272656E726F63, 0xEC00000073756964, v23);
        v24 = CGFloat._bridgeToObjectiveC()().super.super.isa;
        OUTLINED_FUNCTION_5_84((uint64_t)v24, sel_setFromValue_);

        v25 = CGFloat._bridgeToObjectiveC()().super.super.isa;
        OUTLINED_FUNCTION_5_84((uint64_t)v25, sel_setToValue_);

        v26 = (void *)CABasicAnimation.animationCopy()();
        outlined bridged method (mbnn) of @objc CAPropertyAnimation.keyPath.setter(0x6957726564726F62, 0xEB00000000687464, v26);
        v27 = CGFloat._bridgeToObjectiveC()().super.super.isa;
        OUTLINED_FUNCTION_4_86((uint64_t)v27, sel_setFromValue_);

        v28 = CGFloat._bridgeToObjectiveC()().super.super.isa;
        OUTLINED_FUNCTION_4_86((uint64_t)v28, sel_setToValue_);

        v29 = (void *)CABasicAnimation.animationCopy()();
        outlined bridged method (mbnn) of @objc CAPropertyAnimation.keyPath.setter(0x6E6F697469736F70, 0xE800000000000000, v29);
        v30 = CGPoint._bridgeToObjectiveC()().super.isa;
        OUTLINED_FUNCTION_6_69((uint64_t)v30, sel_setFromValue_);

        v31 = CGPoint._bridgeToObjectiveC()().super.isa;
        OUTLINED_FUNCTION_6_69((uint64_t)v31, sel_setToValue_);

        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
        inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1BD644B60;
        *(_QWORD *)(inited + 32) = v23;
        *(_QWORD *)(inited + 40) = v26;
        *(_QWORD *)(inited + 48) = v29;
        v42[0] = inited;
        specialized Array._endMutation()();
        v33 = v3;
        swift_bridgeObjectRetain();
        v34 = v23;
        v35 = v26;
        v36 = v29;
        specialized Sequence.forEach(_:)(v42[0], v33, (uint64_t)attr, v4);
        swift_bridgeObjectRelease();

      }
    }
  }
  else
  {
    outlined destroy of Any?((uint64_t)v42);
  }
}

id AudioVisualizationRingLayer.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void AudioVisualizationRingLayer.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id AudioVisualizationRingLayer.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AudioVisualizationRingLayer();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void outlined bridged method (mnbgnn) of @objc CALayer.add(_:forKey:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v6;

  v6 = (id)MEMORY[0x1C3B72E00](a2, a3);
  objc_msgSend(a4, sel_addAnimation_forKey_, a1, v6);

}

unint64_t type metadata accessor for NSValue()
{
  unint64_t result;

  result = lazy cache variable for type metadata for NSValue;
  if (!lazy cache variable for type metadata for NSValue)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for NSValue);
  }
  return result;
}

void outlined bridged method (mbnn) of @objc CAPropertyAnimation.keyPath.setter(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;

  v4 = (id)MEMORY[0x1C3B72E00]();
  swift_bridgeObjectRelease();
  objc_msgSend(a3, sel_setKeyPath_, v4);

}

uint64_t method lookup function for AudioVisualizationRingLayer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AudioVisualizationRingLayer.__allocating_init(opacityMultiple:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of AudioVisualizationRingLayer.addBoundsSizeAnimation(_:forKey:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60))();
}

uint64_t outlined bridged method (pb) of @objc CAPropertyAnimation.keyPath.getter(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_keyPath);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t _runTaskForBridgedAsyncMethod(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_77();
  v7 = v6 - v5;
  v8 = type metadata accessor for TaskPriority();
  __swift_storeEnumTagSinglePayload(v7, 1, 1, v8);
  v9 = (_QWORD *)OUTLINED_FUNCTION_13_13();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = a1;
  v9[5] = a2;
  v10 = (_QWORD *)OUTLINED_FUNCTION_13_13();
  v10[2] = 0;
  v10[3] = 0;
  v10[4] = &_sIeghH_IeAgH_TRTATu;
  v10[5] = v9;
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgmq5(v7, (uint64_t)&_sIeAgH_ytIeAgHr_TRTATu, (uint64_t)v10);
  return swift_release();
}

uint64_t CallScreening.MainAnsweringMachine.enabled.getter()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(uint64_t (**)(uint64_t))(v0
                                         + OBJC_IVAR____TtCO15ConversationKit13CallScreening20MainAnsweringMachine_isAnsweringMachineAvailable);
  v2 = partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  LOBYTE(v1) = v1(v2);
  swift_release();
  return v1 & 1;
}

uint64_t CallScreening.MainAnsweringMachine.logger.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtCO15ConversationKit13CallScreening20MainAnsweringMachine_logger;
  v4 = type metadata accessor for Logger();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t CallScreening.MainAnsweringMachine.stateMachine.getter()
{
  return swift_retain();
}

uint64_t CallScreening.MainAnsweringMachine.callServices.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return outlined init with copy of IDSLookupManager(v1 + OBJC_IVAR____TtCO15ConversationKit13CallScreening20MainAnsweringMachine_callServices, a1);
}

void CallScreening.MainAnsweringMachine.__allocating_init(logger:stateMachine:statusService:callServices:onCallStatusUpdate:isAnsweringMachineAvailable:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  CallScreening.MainAnsweringMachine.__allocating_init(logger:stateMachine:statusService:callServices:onCallStatusUpdate:isAnsweringMachineAvailable:)(a1, a2, a3, a4, a5, a6, a7, a8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))specialized CallScreening.MainAnsweringMachine.__allocating_init(logger:stateMachine:statusService:callServices:onCallStatusUpdate:isAnsweringMachineAvailable:));
}

void CallScreening.MainAnsweringMachine.init(logger:stateMachine:statusService:callServices:onCallStatusUpdate:isAnsweringMachineAvailable:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  CallScreening.MainAnsweringMachine.__allocating_init(logger:stateMachine:statusService:callServices:onCallStatusUpdate:isAnsweringMachineAvailable:)(a1, a2, a3, a4, a5, a6, a7, a8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))specialized CallScreening.MainAnsweringMachine.init(logger:stateMachine:statusService:callServices:onCallStatusUpdate:isAnsweringMachineAvailable:));
}

void CallScreening.MainAnsweringMachine.__allocating_init(logger:stateMachine:statusService:callServices:onCallStatusUpdate:isAnsweringMachineAvailable:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void (*a9)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v9;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v16 = *(_QWORD *)(a4 + 24);
  v15 = *(_QWORD *)(a4 + 32);
  v17 = __swift_mutable_project_boxed_opaque_existential_1(a4, v16);
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_77();
  v20 = v19 - v18;
  (*(void (**)(uint64_t))(v21 + 16))(v19 - v18);
  a9(a1, a2, a3, v20, a5, a6, a7, a8, v9, v16, v15);
  __swift_destroy_boxed_opaque_existential_1(a4);
  OUTLINED_FUNCTION_52_1();
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> CallScreening.MainAnsweringMachine.start()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_77();
  v4 = v3 - v2;
  static TaskPriority.userInitiated.getter();
  v5 = type metadata accessor for TaskPriority();
  __swift_storeEnumTagSinglePayload(v4, 0, 1, v5);
  v6 = one-time initialization token for shared;
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  if (v6 != -1)
    swift_once();
  v7 = static CKStateMachineActor.shared;
  v8 = lazy protocol witness table accessor for type TranscriptionViewModel and conformance TranscriptionViewModel((unint64_t *)&lazy protocol witness table cache variable for type CKStateMachineActor.ActorType and conformance CKStateMachineActor.ActorType, (uint64_t (*)(uint64_t))type metadata accessor for CKStateMachineActor.ActorType, (uint64_t)&protocol conformance descriptor for CKStateMachineActor.ActorType);
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = v7;
  v9[3] = v8;
  v9[4] = v0;
  OUTLINED_FUNCTION_15_22();
  _sScTss5Error_pRs_rlE8priority9operationScTyxsAA_pGScPSg_xyYaKYAcntcfCyt_Tgm5(v4, (uint64_t)&async function pointer to partial apply for closure #1 in CallScreening.MainAnsweringMachine.start(), (uint64_t)v9);
  swift_release();
}

uint64_t closure #1 in CallScreening.MainAnsweringMachine.start()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  if (one-time initialization token for shared != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t closure #1 in CallScreening.MainAnsweringMachine.start()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t, uint64_t, char, uint64_t, uint64_t, uint64_t, uint64_t);

  v3 = (uint64_t (*)(uint64_t, uint64_t, char, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&async function pointer to specialized CKStateMachine.transition(with:reason:validation:)
                                                                                          + async function pointer to specialized CKStateMachine.transition(with:reason:validation:));
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v1;
  *v1 = v0;
  v1[1] = closure #1 in CallScreening.MainAnsweringMachine.start();
  return v3(1, 0, 128, 0xD00000000000001ALL, 0x80000001BD67E5F0, (uint64_t)closure #1 in closure #1 in CallScreening.MainAnsweringMachine.start(), 0);
}

{
  uint64_t v0;

  OUTLINED_FUNCTION_18_55();
  OUTLINED_FUNCTION_1_6();
  return OUTLINED_FUNCTION_16(*(uint64_t (**)(void))(v0 + 8));
}

void closure #1 in closure #1 in CallScreening.MainAnsweringMachine.start()(uint64_t a1)
{
  unint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(a1 + 48);
  lazy protocol witness table accessor for type CKStateMachineError and conformance CKStateMachineError();
  v2 = (void *)swift_allocError();
  if (v1 >> 61)
    swift_willThrow();
  else

}

uint64_t CallScreening.MainAnsweringMachine.open(_:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[2] = a1;
  v2[3] = v1;
  v3 = OUTLINED_FUNCTION_32_3();
  v2[4] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[5] = v4;
  v2[6] = *(_QWORD *)(v4 + 64);
  v2[7] = OUTLINED_FUNCTION_30_41();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  v2[8] = OUTLINED_FUNCTION_30_41();
  OUTLINED_FUNCTION_48_2();
  v2[9] = OUTLINED_FUNCTION_70();
  v2[10] = OUTLINED_FUNCTION_34();
  v2[11] = v5;
  return OUTLINED_FUNCTION_0_6();
}

uint64_t CallScreening.MainAnsweringMachine.open(_:)()
{
  uint64_t v0;
  void *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char *v17;
  uint64_t v18;
  _QWORD *v19;

  v1 = (void *)type metadata accessor for OS_os_log();
  static OS_os_log.default.getter();
  OUTLINED_FUNCTION_12_0();
  OUTLINED_FUNCTION_255();

  v2 = CallScreening.MainAnsweringMachine.enabled.getter();
  *(_BYTE *)(v0 + 112) = v2 & 1;
  if ((v2 & 1) == 0)
  {
    swift_release();
    static OS_os_log.default.getter();
    OUTLINED_FUNCTION_12_0();
    OUTLINED_FUNCTION_255();

    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_5_85();
    __asm { BR              X1 }
  }
  v3 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 32);
  v6 = *(_QWORD *)(v0 + 40);
  v7 = *(_QWORD *)(v0 + 16);
  static TaskPriority.userInitiated.getter();
  v8 = type metadata accessor for TaskPriority();
  __swift_storeEnumTagSinglePayload(v4, 0, 1, v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v3, v7, v5);
  v9 = one-time initialization token for shared;
  OUTLINED_FUNCTION_15_22();
  if (v9 != -1)
    swift_once();
  v10 = *(_QWORD *)(v0 + 56);
  v11 = *(_QWORD *)(v0 + 40);
  v13 = *(_QWORD *)(v0 + 24);
  v12 = *(_QWORD *)(v0 + 32);
  v14 = static CallScreeningActor.shared;
  v15 = lazy protocol witness table accessor for type TranscriptionViewModel and conformance TranscriptionViewModel((unint64_t *)&lazy protocol witness table cache variable for type CallScreeningActor.ActorType and conformance CallScreeningActor.ActorType, (uint64_t (*)(uint64_t))type metadata accessor for CallScreeningActor.ActorType, (uint64_t)&protocol conformance descriptor for CallScreeningActor.ActorType);
  v16 = (*(unsigned __int8 *)(v11 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v17 = (char *)swift_allocObject();
  *((_QWORD *)v17 + 2) = v14;
  *((_QWORD *)v17 + 3) = v15;
  *((_QWORD *)v17 + 4) = v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 32))(&v17[v16], v10, v12);
  OUTLINED_FUNCTION_15_22();
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
  *(_QWORD *)(v0 + 96) = v18;
  v19 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 104) = v19;
  *v19 = v0;
  v19[1] = CallScreening.MainAnsweringMachine.open(_:);
  OUTLINED_FUNCTION_5_85();
  return Task<>.value.getter();
}

{
  swift_task_dealloc();
  swift_release();
  return OUTLINED_FUNCTION_0_6();
}

{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 112));
}

uint64_t closure #1 in CallScreening.MainAnsweringMachine.open(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[5] = a4;
  v5[6] = a5;
  v6 = type metadata accessor for URL();
  v5[7] = v6;
  v5[8] = *(_QWORD *)(v6 - 8);
  v5[9] = swift_task_alloc();
  if (one-time initialization token for shared != -1)
    swift_once();
  v5[10] = static CallScreeningActor.shared;
  return swift_task_switch();
}

uint64_t closure #1 in CallScreening.MainAnsweringMachine.open(_:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint8_t *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;

  v2 = v0[8];
  v1 = v0[9];
  v3 = v0[6];
  v4 = v0[7];
  v0[11] = OBJC_IVAR____TtCO15ConversationKit13CallScreening20MainAnsweringMachine_logger;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v3, v4);
  v5 = Logger.logObject.getter();
  v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = v0[9];
    v20 = v0[8];
    v8 = v0[7];
    v9 = (uint8_t *)OUTLINED_FUNCTION_105();
    v21 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v9 = 136315138;
    lazy protocol witness table accessor for type TranscriptionViewModel and conformance TranscriptionViewModel((unint64_t *)&lazy protocol witness table cache variable for type URL and conformance URL, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
    v10 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[4] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v10, v11, &v21);
    OUTLINED_FUNCTION_26_38();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v7, v8);
    OUTLINED_FUNCTION_48(&dword_1BD004000, v5, v6, "Openning url for Screening: %s", v9);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }
  v13 = v0[8];
  v12 = v0[9];
  v14 = v0[7];

  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  v15 = v0[5];
  v16 = OBJC_IVAR____TtCO15ConversationKit13CallScreening20MainAnsweringMachine_callServices;
  v0[12] = OBJC_IVAR____TtCO15ConversationKit13CallScreening20MainAnsweringMachine_callServices;
  v17 = *(_QWORD *)(v15 + v16 + 24);
  v0[13] = v17;
  v18 = *(_QWORD *)(v15 + v16 + 32);
  v0[14] = v18;
  v0[15] = __swift_project_boxed_opaque_existential_1((_QWORD *)(v15 + v16), v17);
  v0[16] = *(_QWORD *)(v18 + 72);
  v0[17] = OUTLINED_FUNCTION_48_2();
  v0[18] = OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_34();
  return swift_task_switch();
}

{
  _QWORD *v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = (uint64_t (*)(uint64_t, uint64_t))v0[16];
  v3 = v0[13];
  v2 = v0[14];
  swift_release();
  v0[19] = v1(v3, v2);
  return swift_task_switch();
}

{
  _QWORD *v0;
  void *v1;
  NSObject *v2;
  id v3;
  os_log_type_t v4;
  uint8_t *v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  os_log_type_t v9;
  uint8_t *v10;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v1 = (void *)v0[19];
  v2 = (v0[5] + v0[11]);
  if (!v1)
  {
    Logger.logObject.getter();
    v9 = OUTLINED_FUNCTION_12_0();
    if (os_log_type_enabled(v2, v9))
    {
      v10 = (uint8_t *)OUTLINED_FUNCTION_105();
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_1BD004000, v2, v9, "No call can be screened", v10, 2u);
      OUTLINED_FUNCTION_60();
    }

    swift_task_dealloc();
    OUTLINED_FUNCTION_5_85();
    __asm { BR              X0 }
  }
  v3 = v1;
  Logger.logObject.getter();
  v4 = OUTLINED_FUNCTION_12_0();
  if (os_log_type_enabled(v2, v4))
  {
    v5 = (uint8_t *)OUTLINED_FUNCTION_105();
    v16 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v5 = 136446210;
    v0[2] = v3;
    v6 = v3;
    v7 = String.init<A>(reflecting:)();
    v0[3] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v7, v8, &v16);
    OUTLINED_FUNCTION_26_38();
    swift_bridgeObjectRelease();

    OUTLINED_FUNCTION_48(&dword_1BD004000, v2, v4, "Attempting to screen request: %{public}s", v5);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

  v12 = (_QWORD *)(v0[5] + v0[12]);
  v13 = v12[3];
  v0[20] = v13;
  v14 = v12[4];
  v0[21] = v14;
  v0[22] = __swift_project_boxed_opaque_existential_1(v12, v13);
  v0[23] = *(_QWORD *)(v14 + 32);
  v0[24] = static MainActor.shared.getter();
  OUTLINED_FUNCTION_34();
  OUTLINED_FUNCTION_5_85();
  return swift_task_switch();
}

{
  _QWORD *v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = (void (*)(uint64_t, uint64_t, uint64_t))v0[23];
  v2 = v0[21];
  v4 = v0[19];
  v3 = v0[20];
  swift_release();
  v1(v4, v3, v2);
  return OUTLINED_FUNCTION_0_6();
}

{
  uint64_t v0;

  swift_task_dealloc();
  return OUTLINED_FUNCTION_16(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t @objc closure #1 in CallScreening.MainAnsweringMachine.open(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  v4 = type metadata accessor for URL();
  v3[5] = v4;
  v3[6] = *(_QWORD *)(v4 - 8);
  v3[7] = swift_task_alloc();
  type metadata accessor for MainActor();
  v3[8] = static MainActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  return swift_task_switch();
}

uint64_t @objc closure #1 in CallScreening.MainAnsweringMachine.open(_:)()
{
  _QWORD *v0;
  const void *v1;
  _QWORD *v2;

  v1 = (const void *)v0[3];
  swift_release();
  v0[9] = _Block_copy(v1);
  static URL._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  v2 = (_QWORD *)swift_task_alloc();
  v0[10] = v2;
  *v2 = v0;
  v2[1] = @objc closure #1 in CallScreening.MainAnsweringMachine.open(_:);
  return CallScreening.MainAnsweringMachine.open(_:)(v0[7]);
}

uint64_t @objc closure #1 in CallScreening.MainAnsweringMachine.open(_:)(char a1)
{
  uint64_t v1;
  _QWORD *v3;
  void (**v4)(_QWORD, _QWORD);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_18_55();
  v4 = (void (**)(_QWORD, _QWORD))v3[9];
  v6 = v3[6];
  v5 = v3[7];
  v7 = v3[5];
  OUTLINED_FUNCTION_1_6();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  v4[2](v4, a1 & 1);
  _Block_release(v4);
  swift_task_dealloc();
  return OUTLINED_FUNCTION_1_8(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t CallScreening.MainAnsweringMachine.screenCall(withUUID:manualScreening:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 + 32) = a2;
  *(_QWORD *)(v4 + 40) = v3;
  *(_BYTE *)(v4 + 56) = a3;
  *(_QWORD *)(v4 + 24) = a1;
  OUTLINED_FUNCTION_48_2();
  *(_QWORD *)(v4 + 48) = OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_34();
  return OUTLINED_FUNCTION_0_6();
}

uint64_t CallScreening.MainAnsweringMachine.screenCall(withUUID:manualScreening:)()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  _BOOL4 v11;
  unint64_t v12;
  uint8_t *v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22[2];

  v1 = (uint64_t *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v0 + 40);
  v4 = *(unsigned __int8 *)(v0 + 56);
  v5 = *(_QWORD *)(v0 + 32);
  swift_release();
  v6 = (_QWORD *)(v3 + OBJC_IVAR____TtCO15ConversationKit13CallScreening20MainAnsweringMachine_callServices);
  v7 = *(_QWORD *)(v3 + OBJC_IVAR____TtCO15ConversationKit13CallScreening20MainAnsweringMachine_callServices + 24);
  v8 = *(_QWORD *)(v3 + OBJC_IVAR____TtCO15ConversationKit13CallScreening20MainAnsweringMachine_callServices + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v3 + OBJC_IVAR____TtCO15ConversationKit13CallScreening20MainAnsweringMachine_callServices), v7);
  LOBYTE(v8) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 48))(v2, v5, v4, v7, v8);
  swift_bridgeObjectRetain_n();
  v9 = Logger.logObject.getter();
  v10 = static os_log_type_t.default.getter();
  v11 = os_log_type_enabled(v9, v10);
  v12 = *(_QWORD *)(v0 + 32);
  if ((v8 & 1) != 0)
  {
    if (v11)
    {
      v20 = *v1;
      v13 = (uint8_t *)OUTLINED_FUNCTION_105();
      v22[0] = OUTLINED_FUNCTION_105();
      *(_DWORD *)v13 = 136446210;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 16) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v20, v12, v22);
      OUTLINED_FUNCTION_26_38();
      OUTLINED_FUNCTION_11_11();
      OUTLINED_FUNCTION_48(&dword_1BD004000, v9, v10, "Attempting to screen call with uuid: %{public}s", v13);
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_60();
    }

    OUTLINED_FUNCTION_22_51();
    v16 = *(_QWORD *)(v0 + 24);
    v15 = *(_QWORD *)(v0 + 32);
    v17 = v6[3];
    v18 = v6[4];
    __swift_project_boxed_opaque_existential_1(v6, v17);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 24))(v16, v15, 1, v17, v18);
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(1);
  }
  else
  {
    if (v11)
    {
      v21 = *v1;
      v14 = (uint8_t *)OUTLINED_FUNCTION_105();
      v22[0] = OUTLINED_FUNCTION_105();
      *(_DWORD *)v14 = 136446210;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 16) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v21, v12, v22);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_11_11();
      OUTLINED_FUNCTION_48(&dword_1BD004000, v9, v10, "Cannot screen call with uuid as its not screenable: %{public}s", v14);
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_60();
    }

    OUTLINED_FUNCTION_22_51();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
}

uint64_t @objc closure #1 in CallScreening.MainAnsweringMachine.screenCall(withUUID:manualScreening:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 24) = a3;
  *(_QWORD *)(v4 + 32) = a4;
  *(_BYTE *)(v4 + 72) = a2;
  *(_QWORD *)(v4 + 16) = a1;
  type metadata accessor for MainActor();
  *(_QWORD *)(v4 + 40) = static MainActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  return swift_task_switch();
}

uint64_t @objc closure #1 in CallScreening.MainAnsweringMachine.screenCall(withUUID:manualScreening:)()
{
  uint64_t v0;
  const void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(const void **)(v0 + 24);
  swift_release();
  *(_QWORD *)(v0 + 48) = _Block_copy(v1);
  v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v4 = v3;
  *(_QWORD *)(v0 + 56) = v3;
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v5;
  *v5 = v0;
  v5[1] = @objc closure #1 in CallScreening.MainAnsweringMachine.screenCall(withUUID:manualScreening:);
  return CallScreening.MainAnsweringMachine.screenCall(withUUID:manualScreening:)(v2, v4, *(_BYTE *)(v0 + 72));
}

uint64_t @objc closure #1 in CallScreening.MainAnsweringMachine.screenCall(withUUID:manualScreening:)(char a1)
{
  uint64_t v1;
  uint64_t v3;
  void (**v4)(_QWORD, _QWORD);

  OUTLINED_FUNCTION_18_55();
  v4 = *(void (***)(_QWORD, _QWORD))(v3 + 48);
  OUTLINED_FUNCTION_1_6();
  swift_bridgeObjectRelease();
  swift_release();
  v4[2](v4, a1 & 1);
  _Block_release(v4);
  return OUTLINED_FUNCTION_1_8(*(uint64_t (**)(void))(v1 + 8));
}

void CallScreening.MainAnsweringMachine.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtCO15ConversationKit13CallScreening20MainAnsweringMachine_observers)
                 + 16);
  if (v1)
  {
    swift_bridgeObjectRetain();
    v2 = 0;
    v3 = MEMORY[0x1E0DEE9C0] + 8;
    v4 = MEMORY[0x1E0DEDCE8];
    v5 = MEMORY[0x1E0DEDD18];
    do
    {
      ++v2;
      v6 = swift_retain();
      MEMORY[0x1C3B73268](v6, v3, v4, v5);
      swift_release();
    }
    while (v1 != v2);
    swift_bridgeObjectRelease();
  }
  v7 = type metadata accessor for Logger();
  OUTLINED_FUNCTION_17_1(v7);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtCO15ConversationKit13CallScreening20MainAnsweringMachine_callServices);
  swift_bridgeObjectRelease();
  swift_release();
  OUTLINED_FUNCTION_52_1();
}

uint64_t CallScreening.MainAnsweringMachine.__deallocating_deinit()
{
  CallScreening.MainAnsweringMachine.deinit();
  return swift_deallocClassInstance();
}

void protocol witness for AnsweringMachine.start() in conformance CallScreening.MainAnsweringMachine()
{
  CallScreening.MainAnsweringMachine.start()();
}

uint64_t _sIeghH_IeAgH_TR(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v4;
  *v4 = v3;
  v4[1] = _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tgq5TATQ0_;
  return v6();
}

uint64_t _sIeAgH_ytIeAgHr_TR(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(void);

  v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v5;
  *v5 = v4;
  v5[1] = _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tgq5TATQ0_;
  return v7();
}

uint64_t _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgmq5(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for TaskPriority();
  if (__swift_getEnumTagSinglePayload(a1, 1, v6) == 1)
  {
    outlined destroy of TaskPriority?(a1);
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
  }
  if (*(_QWORD *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a2;
  *(_QWORD *)(v7 + 24) = a3;
  return swift_task_create();
}

uint64_t _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tgq5(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tgq5TQ0_;
  return v6(a1);
}

uint64_t _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tgq5TQ0_()
{
  uint64_t v0;

  OUTLINED_FUNCTION_1_6();
  return OUTLINED_FUNCTION_16(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t *specialized CallScreening.MainAnsweringMachine.__allocating_init(logger:stateMachine:statusService:callServices:onCallStatusUpdate:isAnsweringMachineAvailable:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v24 = a7;
  v25 = a8;
  v23 = a6;
  v16 = *(_QWORD *)(a10 - 8);
  MEMORY[0x1E0C80A78](a9);
  v18 = (char *)&v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = (uint64_t *)swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a4, a10);
  v20 = specialized CallScreening.MainAnsweringMachine.init(logger:stateMachine:statusService:callServices:onCallStatusUpdate:isAnsweringMachineAvailable:)(a1, a2, a3, (uint64_t)v18, a5, v23, v24, v25, v19, a10, a11);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(a4, a10);
  return v20;
}

uint64_t *specialized CallScreening.MainAnsweringMachine.init(logger:stateMachine:statusService:callServices:onCallStatusUpdate:isAnsweringMachineAvailable:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t *a9, uint64_t a10, uint64_t a11)
{
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t *boxed_opaque_existential_1;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  char *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52[5];

  v47 = a5;
  v48 = a7;
  v49 = a1;
  v43 = *a9;
  v44 = a6;
  v46 = type metadata accessor for CallScreening.MachineStateObserver(0);
  MEMORY[0x1E0C80A78](v46);
  v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for CallScreening.CallStateObserver();
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52[3] = a10;
  v52[4] = a11;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v52);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a10 - 8) + 32))(boxed_opaque_existential_1, a4, a10);
  v21 = (char *)a9 + OBJC_IVAR____TtCO15ConversationKit13CallScreening20MainAnsweringMachine_logger;
  v22 = type metadata accessor for Logger();
  v45 = *(_QWORD *)(v22 - 8);
  v23 = *(void (**)(char *, uint64_t, uint64_t))(v45 + 16);
  v24 = v21;
  v25 = v49;
  v23(v24, v49, v22);
  *(uint64_t *)((char *)a9 + OBJC_IVAR____TtCO15ConversationKit13CallScreening20MainAnsweringMachine_stateMachine) = a2;
  outlined init with copy of IDSLookupManager((uint64_t)v52, (uint64_t)a9 + OBJC_IVAR____TtCO15ConversationKit13CallScreening20MainAnsweringMachine_callServices);
  v26 = (uint64_t *)((char *)a9
                  + OBJC_IVAR____TtCO15ConversationKit13CallScreening20MainAnsweringMachine_isAnsweringMachineAvailable);
  *v26 = v48;
  v26[1] = a8;
  v23(v19, v25, v22);
  *(_QWORD *)&v19[*(int *)(v17 + 20)] = a2;
  *(_QWORD *)&v19[*(int *)(v17 + 24)] = a3;
  swift_retain_n();
  v48 = a8;
  v27 = v44;
  swift_retain();
  swift_retain();
  CallScreening.CallStateObserver.start(onCallStatusUpdate:)(v47, v27);
  v29 = v28;
  outlined destroy of CallScreening.CallStateObserver((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for CallScreening.CallStateObserver);
  v23(v16, v25, v22);
  v30 = v46;
  *(_QWORD *)&v16[*(int *)(v46 + 20)] = a2;
  *(_QWORD *)&v16[*(int *)(v30 + 24)] = a3;
  v46 = a2;
  swift_retain();
  v47 = a3;
  swift_retain();
  CallScreening.MachineStateObserver.start()();
  v32 = v31;
  outlined destroy of CallScreening.CallStateObserver((uint64_t)v16, type metadata accessor for CallScreening.MachineStateObserver);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Task<(), Never>>);
  v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_1BD645380;
  *(_QWORD *)(v33 + 32) = v29;
  *(_QWORD *)(v33 + 40) = v32;
  *(uint64_t *)((char *)a9 + OBJC_IVAR____TtCO15ConversationKit13CallScreening20MainAnsweringMachine_observers) = v33;
  swift_retain_n();
  swift_retain();
  swift_retain();
  v34 = Logger.logObject.getter();
  v35 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v34, v35))
  {
    v42 = v22;
    v36 = (uint8_t *)swift_slowAlloc();
    v37 = swift_slowAlloc();
    v50 = (uint64_t)a9;
    v51 = v37;
    v41 = v29;
    *(_DWORD *)v36 = 136446210;
    swift_retain();
    v38 = String.init<A>(reflecting:)();
    v50 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v38, v39, &v51);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v34, v35, "Created MainAnsweringMachine %{public}s", v36, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v37, -1, -1);
    MEMORY[0x1C3B751B8](v36, -1, -1);
    swift_release();
    swift_release();

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v49, v42);
  }
  else
  {
    swift_release();
    swift_release();
    swift_release_n();

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v49, v22);
  }
  return a9;
}

uint64_t sub_1BD237570()
{
  OUTLINED_FUNCTION_67_1();
  OUTLINED_FUNCTION_76();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in CallScreening.MainAnsweringMachine.start()(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = swift_task_alloc();
  v8 = (_QWORD *)OUTLINED_FUNCTION_61_5(v7);
  *v8 = v2;
  v8[1] = partial apply for closure #1 in MultiwayViewController.registerForSystemEventsIfNecessary();
  return closure #1 in CallScreening.MainAnsweringMachine.start()(a1, v4, v5, v6);
}

uint64_t sub_1BD2375FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = OUTLINED_FUNCTION_32_3();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  OUTLINED_FUNCTION_67_1();
  OUTLINED_FUNCTION_76();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in CallScreening.MainAnsweringMachine.open(_:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_32_3();
  v1 = swift_task_alloc();
  v2 = (_QWORD *)OUTLINED_FUNCTION_61_5(v1);
  *v2 = v0;
  v2[1] = _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tgq5TATQ0_;
  v3 = OUTLINED_FUNCTION_14_73();
  return closure #1 in CallScreening.MainAnsweringMachine.open(_:)(v3, v4, v5, v6, v7);
}

uint64_t ObjC metadata update function for CallScreening.MainAnsweringMachine()
{
  return type metadata accessor for CallScreening.MainAnsweringMachine();
}

uint64_t type metadata accessor for CallScreening.MainAnsweringMachine()
{
  uint64_t result;

  result = type metadata singleton initialization cache for CallScreening.MainAnsweringMachine;
  if (!type metadata singleton initialization cache for CallScreening.MainAnsweringMachine)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata completion function for CallScreening.MainAnsweringMachine()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Logger();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for CallScreening.MainAnsweringMachine()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CallScreening.MainAnsweringMachine.__allocating_init(logger:stateMachine:statusService:callServices:onCallStatusUpdate:isAnsweringMachineAvailable:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t sub_1BD2377D8()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 32));
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for @objc closure #1 in CallScreening.MainAnsweringMachine.screenCall(withUUID:manualScreening:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t, uint64_t);

  v2 = *(unsigned __int8 *)(v0 + 24);
  v4 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 40);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  v6 = OUTLINED_FUNCTION_15_66(v5, (uint64_t)partial apply for closure #1 in MultiwayViewController.registerForSystemEventsIfNecessary());
  return v7(v6, v2, v4, v3);
}

uint64_t _sIeghH_IeAgH_TRTA()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t, uint64_t);

  v2 = v0[3];
  v4 = v0[4];
  v3 = v0[5];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  v6 = OUTLINED_FUNCTION_15_66(v5, (uint64_t)_sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tgq5TATQ0_);
  return v7(v6, v2, v4, v3);
}

uint64_t objectdestroy_13Tm_1()
{
  OUTLINED_FUNCTION_67_1();
  swift_release();
  return swift_deallocObject();
}

uint64_t _sIeAgH_ytIeAgHr_TRTA()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);

  v1 = swift_task_alloc();
  v2 = (_QWORD *)OUTLINED_FUNCTION_61_5(v1);
  *v2 = v0;
  v2[1] = _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tgq5TATQ0_;
  v3 = OUTLINED_FUNCTION_14_73();
  return v4(v3);
}

uint64_t sub_1BD23797C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tgq5TA(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(int **)(v1 + 16);
  v5 = swift_task_alloc();
  v6 = (_QWORD *)OUTLINED_FUNCTION_61_5(v5);
  *v6 = v2;
  v6[1] = _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tgq5TATQ0_;
  return ((uint64_t (*)(uint64_t, int *))((char *)&_sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tgq5Tu
                                                 + _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tgq5Tu))(a1, v4);
}

uint64_t sub_1BD237A0C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 24));
  OUTLINED_FUNCTION_76();
  return swift_deallocObject();
}

uint64_t partial apply for @objc closure #1 in CallScreening.MainAnsweringMachine.open(_:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = v0[3];
  v4 = v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tgq5TATQ0_;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&async function pointer to @objc closure #1 in CallScreening.MainAnsweringMachine.open(_:)
                                                            + async function pointer to @objc closure #1 in CallScreening.MainAnsweringMachine.open(_:)))(v2, v3, v4);
}

uint64_t outlined destroy of CallScreening.CallStateObserver(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  OUTLINED_FUNCTION_17_1(v3);
  return a1;
}

uint64_t specialized _ArrayProtocol.filter(_:)(unint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  unint64_t v10;
  id v11;
  void *v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v17;
  void *v18;
  uint64_t v19;

  v5 = v4;
  v19 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_18;
  v9 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v9)
  {
    while (1)
    {
      v10 = 0;
      v17 = v9;
      while ((a1 & 0xC000000000000001) != 0)
      {
        v11 = (id)MEMORY[0x1C3B73D18](v10, a1);
LABEL_7:
        v12 = v11;
        v13 = v10 + 1;
        if (__OFADD__(v10, 1))
          goto LABEL_17;
        v18 = v11;
        v14 = closure #1 in ClarityUICallHistory.recentCalls.getter(&v18, a2);
        if (v5)
        {
          swift_bridgeObjectRelease();

          v15 = v19;
          swift_release();

          swift_release();
          return v15;
        }
        if ((v14 & 1) != 0)
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          v5 = 0;
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
          v9 = v17;
        }
        else
        {

        }
        ++v10;
        if (v13 == v9)
        {
          v15 = v19;
          goto LABEL_20;
        }
      }
      if (v10 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      v9 = _CocoaArrayWrapper.endIndex.getter();
      if (!v9)
        goto LABEL_19;
    }
    v11 = *(id *)(a1 + 8 * v10 + 32);
    goto LABEL_7;
  }
LABEL_19:
  v15 = MEMORY[0x1E0DEE9D8];
LABEL_20:
  swift_bridgeObjectRelease();

  swift_release();
  return v15;
}

uint64_t *ClarityUICallHistory.shared.unsafeMutableAddressor()
{
  if (one-time initialization token for shared != -1)
    swift_once();
  return &static ClarityUICallHistory.shared;
}

Swift::Int __swiftcall ClarityUICallHistory.badgeCount(for:)(ConversationKit::ClarityUIContact a1)
{
  uint64_t v1;
  Class isa;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  __int128 v14;

  isa = a1.cnContact.super.isa;
  v3 = *((_QWORD *)a1.cnContact.super.isa + 2);
  v4 = *((_QWORD *)a1.cnContact.super.isa + 3);
  swift_getKeyPath();
  lazy protocol witness table accessor for type ObservableNotificationHandler and conformance ObservableNotificationHandler();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  v5 = swift_release();
  v6 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit20ClarityUICallHistory_callHistoryManager);
  OUTLINED_FUNCTION_17_8(v5, (unint64_t *)&lazy cache variable for type metadata for NSCompoundPredicate);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1BD6441C0;
  v14 = *(_OWORD *)isa;
  ClarityUIContact.callHistoryPredicate.getter();
  *(_QWORD *)(v7 + 32) = v8;
  *(_QWORD *)(v7 + 40) = objc_msgSend((id)objc_opt_self(), sel_predicateForCallsWithStatusRead_, 0, v14, v3, v4);
  specialized Array._endMutation()();
  v9 = @nonobjc NSCompoundPredicate.__allocating_init(andPredicateWithSubpredicates:)();
  v10 = objc_msgSend(v6, sel_recentCallsWithPredicate_, v9, v7);

  if (v10)
  {
    OUTLINED_FUNCTION_17_8(v11, (unint64_t *)&lazy cache variable for type metadata for CHRecentCall);
    v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v12 >> 62)
    {
      swift_bridgeObjectRetain();
      v10 = (id)_CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      v10 = *(id *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
  }
  return (Swift::Int)v10;
}

uint64_t static ClarityUICallHistory.shared.getter()
{
  if (one-time initialization token for shared != -1)
    swift_once();
  return swift_retain();
}

id ClarityUICallHistory.contactStore.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC15ConversationKit20ClarityUICallHistory_contactStore);
}

uint64_t ClarityUICallHistory.().init()()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;

  v1 = OBJC_IVAR____TtC15ConversationKit20ClarityUICallHistory_contactStore;
  v2 = objc_allocWithZone(MEMORY[0x1E0C97298]);
  swift_retain();
  *(_QWORD *)(v0 + v1) = objc_msgSend(v2, sel_init);
  v3 = OBJC_IVAR____TtC15ConversationKit20ClarityUICallHistory_preferences;
  if (one-time initialization token for shared != -1)
    swift_once();
  *(_QWORD *)(v0 + v3) = static ClarityUIPreferences.shared;
  v4 = OBJC_IVAR____TtC15ConversationKit20ClarityUICallHistory_favoritesList;
  v5 = one-time initialization token for shared;
  swift_retain();
  if (v5 != -1)
    swift_once();
  *(_QWORD *)(v0 + v4) = static ClarityUIFavoritesList.shared;
  v6 = *(_QWORD *)(v0 + v1);
  v7 = objc_allocWithZone(MEMORY[0x1E0D0CE68]);
  swift_retain();
  v8 = objc_msgSend(v7, sel_initWithContactStore_, v6);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit20ClarityUICallHistory_callHistoryManager) = v8;
  swift_release();
  v9 = ObservableNotificationHandler.init(name:)((id)*MEMORY[0x1E0D0CF00]);
  v10 = *(void **)(v9 + OBJC_IVAR____TtC15ConversationKit20ClarityUICallHistory_callHistoryManager);
  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  outlined bridged method (mbnn) of @objc CHManager.coalescingStrategy.setter(v11, v12, v10);
  return v9;
}

uint64_t ClarityUICallHistory.recentCalls.getter()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;
  void *v4;
  unint64_t v5;
  id v6;

  v1 = v0;
  v2 = ClarityUIPreferences.outgoingCommunicationLimit.getter();
  swift_getKeyPath();
  lazy protocol witness table accessor for type ObservableNotificationHandler and conformance ObservableNotificationHandler();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  v3 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15ConversationKit20ClarityUICallHistory_callHistoryManager), sel_recentCalls);
  if (v3)
  {
    v4 = v3;
    OUTLINED_FUNCTION_17_8((uint64_t)v3, (unint64_t *)&lazy cache variable for type metadata for CHRecentCall);
    v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  }
  else
  {
    v5 = MEMORY[0x1E0DEE9D8];
  }
  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D0CE58]), sel_initWithDataSource_, *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit20ClarityUICallHistory_contactStore));
  swift_retain();
  return specialized _ArrayProtocol.filter(_:)(v5, v6, v1, v2);
}

uint64_t closure #1 in ClarityUICallHistory.recentCalls.getter(void **a1, void *a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v14;
  uint64_t v15;
  id v16;
  Class isa;
  Class v18;
  id v19;
  id v20;
  uint64_t v21;
  id v22;
  _QWORD *v23;
  unint64_t v24;
  unint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *i;
  void *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v41;
  id v42;
  void *v43;
  uint64_t v44;
  id v45;
  id v46;
  id v47;
  id v48;
  NSObject *v49;
  os_log_type_t v50;
  uint64_t v51;
  _QWORD *v52;
  id v53;
  id v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v63;
  uint64_t v64;
  NSObject *log;
  id v66[2];

  v66[1] = *(id *)MEMORY[0x1E0C80C00];
  v3 = *a1;
  v4 = outlined bridged method (pb) of @objc CHRecentCall.serviceProvider.getter(*a1);
  v6 = v5;
  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (v6)
  {
    if (v4 == v7 && v6 == v8)
    {
LABEL_16:
      swift_bridgeObjectRelease();
LABEL_17:
      swift_bridgeObjectRelease();
      goto LABEL_18;
    }
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v10 & 1) != 0)
      goto LABEL_17;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (!v6)
  {
LABEL_52:
    swift_bridgeObjectRelease();
    return v6 & 1;
  }
  if (v4 == v11 && v6 == v12)
    goto LABEL_16;
  v14 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v14 & 1) == 0)
  {
LABEL_42:
    LOBYTE(v6) = 0;
    return v6 & 1;
  }
LABEL_18:
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1BD6443F0;
  *(_QWORD *)(v15 + 32) = v3;
  specialized Array._endMutation()();
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for CHRecentCall);
  v16 = v3;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for CNKeyDescriptor);
  v18 = Array._bridgeToObjectiveC()().super.isa;
  v66[0] = 0;
  v19 = objc_msgSend(a2, sel_contactsByHandleForCalls_keyDescriptors_error_, isa, v18, v66);

  v20 = v66[0];
  if (!v19)
  {
    v42 = v66[0];
    v43 = (void *)_convertNSErrorToError(_:)();

    swift_willThrow();
    if (one-time initialization token for clarityUI != -1)
      swift_once();
    v44 = type metadata accessor for Logger();
    __swift_project_value_buffer(v44, (uint64_t)&static Log.clarityUI);
    v45 = v16;
    v46 = v43;
    v47 = v45;
    v48 = v43;
    v49 = Logger.logObject.getter();
    v50 = static os_log_type_t.error.getter();
    log = v49;
    if (os_log_type_enabled(v49, v50))
    {
      v51 = swift_slowAlloc();
      v52 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v51 = 138412546;
      v66[0] = v47;
      v53 = v47;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *v52 = v47;

      *(_WORD *)(v51 + 12) = 2112;
      v54 = v43;
      v55 = (void *)_swift_stdlib_bridgeErrorToNSError();
      v66[0] = v55;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v52[1] = v55;

      _os_log_impl(&dword_1BD004000, log, v50, "Unable to get contacts by handle for recent call: %@. Error: %@", (uint8_t *)v51, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v52, -1, -1);
      MEMORY[0x1C3B751B8](v51, -1, -1);

    }
    else
    {

    }
    goto LABEL_45;
  }
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for CHHandle);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [CNContact]);
  lazy protocol witness table accessor for type CHHandle and conformance NSObject();
  v21 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  v22 = v20;

  v23 = specialized Collection.first.getter(v21);
  v25 = v24;
  swift_bridgeObjectRelease();
  if (!v23)
  {
LABEL_45:
    v57 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v59 = v58;
    if (v57 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v59 == v60)
      LOBYTE(v6) = 1;
    else
      LOBYTE(v6) = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    goto LABEL_52;
  }

  if (!(v25 >> 62))
  {
    if (*(_QWORD *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_22;
    goto LABEL_44;
  }
  swift_bridgeObjectRetain();
  v56 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v56)
  {
LABEL_44:
    swift_bridgeObjectRelease();
    goto LABEL_45;
  }
LABEL_22:
  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v25 & 0xC000000000000001) == 0, v25);
  if ((v25 & 0xC000000000000001) != 0)
    v26 = (id)MEMORY[0x1C3B73D18](0, v25);
  else
    v26 = *(id *)(v25 + 32);
  v63 = v26;
  swift_bridgeObjectRelease();
  v27 = ClarityUIFavoritesList.favorites.getter();
  v28 = *(_QWORD *)(v27 + 16);
  if (v28)
  {
    swift_bridgeObjectRetain();
    for (i = (uint64_t *)(v27 + 80); ; i += 7)
    {
      v64 = v28;
      v31 = (void *)*(i - 3);
      v30 = (void *)*(i - 2);
      v33 = *(i - 1);
      v32 = *i;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v34 = v31;
      v35 = v30;
      swift_bridgeObjectRetain();
      v36 = objc_msgSend(v63, sel_identifier);
      v37 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v39 = v38;

      if (v33 == v37 && v32 == v39)
        break;
      v41 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v41 & 1) != 0)
        goto LABEL_41;
      v28 = v64 - 1;
      if (v64 == 1)
      {

        swift_bridgeObjectRelease_n();
        LOBYTE(v6) = 1;
        return v6 & 1;
      }
    }
    swift_bridgeObjectRelease_n();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_41:
    swift_bridgeObjectRelease_n();

    goto LABEL_42;
  }

  swift_bridgeObjectRelease();
  LOBYTE(v6) = 1;
  return v6 & 1;
}

id @nonobjc NSCompoundPredicate.__allocating_init(andPredicateWithSubpredicates:)()
{
  Class isa;
  id v1;

  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSPredicate);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v1 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_andPredicateWithSubpredicates_, isa);

  return v1;
}

Swift::Void __swiftcall ClarityUICallHistory.markRecentCallsAsRead(for:)(ConversationKit::ClarityUIContact a1)
{
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit20ClarityUICallHistory_callHistoryManager);
  ClarityUIContact.callHistoryPredicate.getter();
  v4 = v3;
  objc_msgSend(v2, sel_setRead_forCallsWithPredicate_, 1, v3);

}

void ClarityUICallHistory.__allocating_init(name:)()
{
  OUTLINED_FUNCTION_2_89();
  __break(1u);
}

void ClarityUICallHistory.init(name:)()
{
  OUTLINED_FUNCTION_2_89();
  __break(1u);
}

uint64_t ClarityUICallHistory.__ivar_destroyer()
{
  OUTLINED_FUNCTION_1_99(OBJC_IVAR____TtC15ConversationKit20ClarityUICallHistory_contactStore);
  OUTLINED_FUNCTION_1_99(OBJC_IVAR____TtC15ConversationKit20ClarityUICallHistory_callHistoryManager);
  OUTLINED_FUNCTION_3_88();
  return swift_release();
}

uint64_t ClarityUICallHistory.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  v1 = v0 + OBJC_IVAR____TtC15ConversationKit29ObservableNotificationHandler___observationRegistrar;
  v2 = type metadata accessor for ObservationRegistrar();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  OUTLINED_FUNCTION_1_99(OBJC_IVAR____TtC15ConversationKit20ClarityUICallHistory_contactStore);
  OUTLINED_FUNCTION_1_99(OBJC_IVAR____TtC15ConversationKit20ClarityUICallHistory_callHistoryManager);
  OUTLINED_FUNCTION_3_88();
  OUTLINED_FUNCTION_3_88();
  return v0;
}

uint64_t ClarityUICallHistory.__deallocating_deinit()
{
  ClarityUICallHistory.deinit();
  return swift_deallocClassInstance();
}

void key path getter for ObservableNotificationHandler.trackingProperty : ObservableNotificationHandler()
{
  _BYTE *v0;

  *v0 = OUTLINED_FUNCTION_6_70() & 1;
  OUTLINED_FUNCTION_0();
}

void sub_1BD238AF0()
{
  _BYTE *v0;

  *v0 = OUTLINED_FUNCTION_6_70() & 1;
  OUTLINED_FUNCTION_0();
}

void key path setter for ObservableNotificationHandler.trackingProperty : ObservableNotificationHandler()
{
  OUTLINED_FUNCTION_4_87();
  OUTLINED_FUNCTION_0();
}

void sub_1BD238B28()
{
  OUTLINED_FUNCTION_4_87();
  OUTLINED_FUNCTION_0();
}

uint64_t ObjC metadata update function for ClarityUICallHistory()
{
  return type metadata accessor for ClarityUICallHistory();
}

uint64_t type metadata accessor for ClarityUICallHistory()
{
  uint64_t result;

  result = type metadata singleton initialization cache for ClarityUICallHistory;
  if (!type metadata singleton initialization cache for ClarityUICallHistory)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata completion function for ClarityUICallHistory()
{
  return swift_updateClassMetadata2();
}

uint64_t method lookup function for ClarityUICallHistory()
{
  return swift_lookUpClassMethod();
}

void outlined bridged method (mbnn) of @objc CHManager.coalescingStrategy.setter(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;

  v4 = (id)MEMORY[0x1C3B72E00]();
  swift_bridgeObjectRelease();
  objc_msgSend(a3, sel_setCoalescingStrategy_, v4);

}

uint64_t outlined bridged method (pb) of @objc CHRecentCall.serviceProvider.getter(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_serviceProvider);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

unint64_t lazy protocol witness table accessor for type CHHandle and conformance NSObject()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type CHHandle and conformance NSObject;
  if (!lazy protocol witness table cache variable for type CHHandle and conformance NSObject)
  {
    v1 = _sSo8NSObjectCMaTm_0(255, (unint64_t *)&lazy cache variable for type metadata for CHHandle);
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type CHHandle and conformance NSObject);
  }
  return result;
}

BOOL static ControlShape.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t UIContextMenuConfiguration.init(provider:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t ObjectType;

  ObjectType = swift_getObjectType();
  return specialized UIContextMenuConfiguration.init(provider:)(a1, v2, ObjectType, a2);
}

uint64_t protocol witness for ControlMenuDataSource.attachmentPoint(for:configuration:) in conformance InCallControlsView()
{
  return specialized ControlMenuDataSource.attachmentPoint(for:configuration:)();
}

uint64_t specialized ControlMenuDataSource.attachmentPoint(for:configuration:)()
{
  return 0;
}

uint64_t ControlMenuDataSource.attachmentPoint(for:configuration:)()
{
  return 0;
}

void *specialized ControlMenuDataSource.menuStyle(for:existingStyle:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;

  v4 = a3;
  return a3;
}

void *ControlMenuDataSource.menuStyle(for:existingStyle:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;

  v4 = a3;
  return a3;
}

uint64_t ControlMenuDataSource.menu(for:)()
{
  return 0;
}

void ControlShape.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
  Hasher._combine(_:)(a2);
}

Swift::Int ControlShape.hashValue.getter(unsigned __int8 a1)
{
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1);
  return Hasher._finalize()();
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance ControlShape(char *a1, char *a2)
{
  return static ControlShape.== infix(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance ControlShape()
{
  unsigned __int8 *v0;

  return ControlShape.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance ControlShape(uint64_t a1)
{
  unsigned __int8 *v1;

  ControlShape.hash(into:)(a1, *v1);
}

uint64_t closure #1 in UIContextMenuConfiguration.init(provider:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = a2 + 16;
  OUTLINED_FUNCTION_1();
  if (!MEMORY[0x1C3B752C0](v5))
    return 0;
  v6 = *(_QWORD *)(a2 + 24);
  ObjectType = swift_getObjectType();
  v8 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 16))(ObjectType, v6);
  v10 = v9;
  swift_unknownObjectRelease();
  if (!v8)
    return 0;
  OUTLINED_FUNCTION_1();
  if (MEMORY[0x1C3B752C0](a3 + 16))
  {
    v11 = *(_QWORD *)(a3 + 24);
    v12 = swift_getObjectType();
    v13 = (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(v11 + 8))(v8, v10, v12, v11);
    swift_unknownObjectRelease();
  }
  else
  {
    v13 = 0;
  }

  return v13;
}

uint64_t specialized UIContextMenuConfiguration.init(provider:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if ((*(uint64_t (**)(uint64_t, uint64_t))(a4 + 8))(a3, a4))
  {
    v6 = v5;
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 24) = v6;
    swift_unknownObjectWeakInit();
    v8 = swift_allocObject();
    *(_QWORD *)(v8 + 24) = a4;
    swift_unknownObjectWeakInit();
    v9 = swift_allocObject();
    *(_QWORD *)(v9 + 16) = v8;
    *(_QWORD *)(v9 + 24) = v7;
    swift_retain();
    swift_retain();
    v10 = UIContextMenuConfiguration.init(identifier:previewProvider:actionProvider:)(0);
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_unknownObjectRelease();
    return 0;
  }
  return v10;
}

unint64_t lazy protocol witness table accessor for type ControlShape and conformance ControlShape()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ControlShape and conformance ControlShape;
  if (!lazy protocol witness table cache variable for type ControlShape and conformance ControlShape)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ControlShape, &type metadata for ControlShape);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ControlShape and conformance ControlShape);
  }
  return result;
}

uint64_t dispatch thunk of Control.cnkContentAlpha.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of Control.cnkContentAlpha.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of Control.shape.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of ControlMenuDataSource.menu(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of ControlMenuDataSource.attachmentPoint(for:configuration:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of ControlMenuDataSource.menuStyle(for:existingStyle:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

uint64_t dispatch thunk of ControlMenuPresenter.presentingControl.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t storeEnumTagSinglePayload for ControlShape(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BD239138 + 4 * byte_1BD653425[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BD23916C + 4 * byte_1BD653420[v4]))();
}

uint64_t sub_1BD23916C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD239174(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD23917CLL);
  return result;
}

uint64_t sub_1BD239188(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD239190);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BD239194(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD23919C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ControlShape()
{
  return &type metadata for ControlShape;
}

uint64_t sub_1BD2391B8()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BD2391DC()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t specialized Sequence.forEach(_:)(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t (*v7)(uint64_t *);
  uint64_t v8;

  if (a3 != a4)
  {
    v6 = a3;
    if (a4 >= a3)
    {
      v7 = (uint64_t (*)(uint64_t *))result;
      while (v6 < a4)
      {
        v8 = v6;
        result = v7(&v8);
        if (!v4 && a4 != ++v6)
          continue;
        return result;
      }
      __break(1u);
    }
    __break(1u);
  }
  return result;
}

void specialized Sequence.forEach(_:)(void (*a1)(id *), uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  id v11;

  if (a3 >> 62)
    goto LABEL_13;
  v6 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v6; v6 = _CocoaArrayWrapper.endIndex.getter())
  {
    v7 = 4;
    while (1)
    {
      v8 = (a3 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1C3B73D18](v7 - 4, a3) : *(id *)(a3 + 8 * v7);
      v9 = v8;
      v10 = v7 - 3;
      if (__OFADD__(v7 - 4, 1))
        break;
      v11 = v8;
      a1(&v11);
      if (v3)
      {
        swift_bridgeObjectRelease();

        return;
      }

      ++v7;
      if (v10 == v6)
        goto LABEL_10;
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
  }
LABEL_10:
  swift_bridgeObjectRelease();
}

void ShareCardViewModel.__allocating_init(didTapScreenShareButton:didTapAskToScreenShareButton:didTapCollaborateButton:didTapEndSharePlay:)()
{
  OUTLINED_FUNCTION_93();
  swift_allocObject();
  ShareCardViewModel.init(didTapScreenShareButton:didTapAskToScreenShareButton:didTapCollaborateButton:didTapEndSharePlay:)();
  OUTLINED_FUNCTION_52_1();
}

void ShareCardControlsView.init(shareCardViewModel:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  char *v6;

  *a3 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>.Content);
  swift_storeEnumTagMultiPayload();
  v6 = (char *)a3 + *(int *)(type metadata accessor for ShareCardControlsView(0) + 20);
  *(_QWORD *)v6 = a1;
  *((_QWORD *)v6 + 1) = a2;
  v6[16] = 0;
  OUTLINED_FUNCTION_18();
}

void ShareCardButton.title.getter()
{
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

void ShareCardButton.title.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_6_6();
  swift_bridgeObjectRelease();
  *v1 = v2;
  v1[1] = v0;
  OUTLINED_FUNCTION_18();
}

uint64_t (*ShareCardButton.title.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void ShareCardButton.subtitle.getter()
{
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

void ShareCardButton.subtitle.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_6_6();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)(v1 + 24) = v0;
  OUTLINED_FUNCTION_18();
}

uint64_t (*ShareCardButton.subtitle.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void ShareCardButton.systemImage.getter()
{
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

void ShareCardButton.systemImage.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_6_6();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 32) = v2;
  *(_QWORD *)(v1 + 40) = v0;
  OUTLINED_FUNCTION_18();
}

uint64_t (*ShareCardButton.systemImage.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ShareCardButton.tightLayout.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t ShareCardButton.tightLayout.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 48) = result;
  return result;
}

uint64_t (*ShareCardButton.tightLayout.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t key path getter for ShareCardButton.action : ShareCardButton@<X0>(uint64_t a1@<X0>, void (**a2)()@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(a1 + 64);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  *a2 = partial apply for thunk for @callee_guaranteed () -> ();
  a2[1] = (void (*)())v5;
  return swift_retain();
}

uint64_t key path setter for ShareCardButton.action : ShareCardButton(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  swift_retain();
  result = swift_release();
  *(_QWORD *)(a2 + 56) = partial apply for thunk for @callee_guaranteed () -> ();
  *(_QWORD *)(a2 + 64) = v5;
  return result;
}

void ShareCardButton.action.getter()
{
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

void ShareCardButton.action.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_6_6();
  swift_release();
  *(_QWORD *)(v1 + 56) = v2;
  *(_QWORD *)(v1 + 64) = v0;
  OUTLINED_FUNCTION_18();
}

uint64_t (*ShareCardButton.action.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void ShareCardButton.body.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t KeyPath;
  char v13;

  OUTLINED_FUNCTION_93();
  v1 = OUTLINED_FUNCTION_85_10();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 64);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<VStack<TupleView<(ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??, ModifiedContent<Text, _FixedSizeLayout>)>>, _FlexFrameLayout>, Text?)>>>);
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_78();
  outlined init with copy of ConversationControlsAppLaunchButtonType(v0, (uint64_t)v4, type metadata accessor for ShareCardButton);
  v6 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v7 = swift_allocObject();
  outlined init with take of StagedCollaboration((uint64_t)v4, v7 + v6, type metadata accessor for ShareCardButton);
  v11 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??, ModifiedContent<Text, _FixedSizeLayout>)>>, _FlexFrameLayout>, Text?)>>);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type VStack<TupleView<(ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??, ModifiedContent<Text, _FixedSizeLayout>)>>, _FlexFrameLayout>, Text?)>> and conformance VStack<A>, &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??, ModifiedContent<Text, _FixedSizeLayout>)>>, _FlexFrameLayout>, Text?)>>);
  Button.init(action:label:)();
  KeyPath = swift_getKeyPath();
  v13 = 0;
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Button<VStack<TupleView<(ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??, ModifiedContent<Text, _FixedSizeLayout>)>>, _FlexFrameLayout>, Text?)>>> and conformance Button<A>, &demangling cache variable for type metadata for Button<VStack<TupleView<(ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??, ModifiedContent<Text, _FixedSizeLayout>)>>, _FlexFrameLayout>, Text?)>>>);
  lazy protocol witness table accessor for type ShareCardButtonStyle and conformance ShareCardButtonStyle();
  View.buttonStyle<A>(_:)();
  swift_release();
  v8 = OUTLINED_FUNCTION_64();
  v9(v8);
  OUTLINED_FUNCTION_52_1();
}

void closure #2 in ShareCardButton.body.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = static HorizontalAlignment.center.getter();
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_VStackLayout, TupleView<(ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??, ModifiedContent<Text, _FixedSizeLayout>)>>, _FlexFrameLayout>, Text?)>>);
  closure #1 in closure #2 in ShareCardButton.body.getter();
}

void closure #1 in closure #1 in closure #2 in ShareCardButton.body.getter(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int *v30;
  uint64_t KeyPath;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v58 = a2;
  v52 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Image.Scale>);
  MEMORY[0x1E0C80A78](v52);
  v4 = (uint64_t *)((char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = type metadata accessor for Image.Scale();
  v53 = *(_QWORD *)(v5 - 8);
  v54 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>);
  v8 = MEMORY[0x1E0C80A78](v56);
  v51 = (uint64_t *)((char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v8);
  v50 = (uint64_t)&v49 - v10;
  v57 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>?);
  MEMORY[0x1E0C80A78](v57);
  v55 = (uint64_t)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DynamicTypeSize();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v49 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??);
  v20 = MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v49 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v24 = (char *)&v49 - v23;
  type metadata accessor for ShareCardButton(0);
  specialized Environment.wrappedValue.getter();
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v16, *MEMORY[0x1E0CD98E0], v12);
  v25 = static DynamicTypeSize.< infix(_:_:)();
  v26 = *(void (**)(char *, uint64_t))(v13 + 8);
  v26(v16, v12);
  v26(v18, v12);
  if ((v25 & 1) != 0)
  {
    if (a1[5])
    {
      swift_bridgeObjectRetain();
      v27 = Image.init(systemName:)();
      v29 = v53;
      v28 = v54;
      if (*((_BYTE *)a1 + 48))
        v30 = (unsigned int *)MEMORY[0x1E0CDF7D0];
      else
        v30 = (unsigned int *)MEMORY[0x1E0CDF7C0];
      (*(void (**)(char *, _QWORD, uint64_t))(v53 + 104))(v7, *v30, v54);
      KeyPath = swift_getKeyPath();
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))((char *)v4 + *(int *)(v52 + 28), v7, v28);
      *v4 = KeyPath;
      v32 = v56;
      v33 = v51;
      outlined init with copy of FeatureEligibility?((uint64_t)v4, (uint64_t)v51 + *(int *)(v56 + 36), &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Image.Scale>);
      *v33 = v27;
      swift_retain();
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v4, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Image.Scale>);
      (*(void (**)(char *, uint64_t))(v29 + 8))(v7, v28);
      swift_release();
      v34 = v50;
      outlined init with take of Any?((uint64_t)v33, v50, &demangling cache variable for type metadata for ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>);
      v35 = v34;
      v36 = v55;
      outlined init with take of Any?(v35, v55, &demangling cache variable for type metadata for ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>);
      v37 = 0;
    }
    else
    {
      v37 = 1;
      v36 = v55;
      v32 = v56;
    }
    __swift_storeEnumTagSinglePayload(v36, v37, 1, v32);
    outlined init with take of Any?(v36, (uint64_t)v24, &demangling cache variable for type metadata for ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>?);
    v38 = 0;
  }
  else
  {
    v38 = 1;
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v24, v38, 1, v57);
  v39 = a1[1];
  v59 = *a1;
  v60 = v39;
  lazy protocol witness table accessor for type String and conformance String();
  swift_bridgeObjectRetain();
  v40 = Text.init<A>(_:)();
  v42 = v41;
  v44 = v43;
  v46 = v45 & 1;
  outlined init with copy of FeatureEligibility?((uint64_t)v24, (uint64_t)v22, &demangling cache variable for type metadata for ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??);
  v47 = v58;
  outlined init with copy of FeatureEligibility?((uint64_t)v22, v58, &demangling cache variable for type metadata for ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??);
  v48 = v47
      + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??, ModifiedContent<Text, _FixedSizeLayout>))
               + 48);
  *(_QWORD *)v48 = v40;
  *(_QWORD *)(v48 + 8) = v42;
  *(_BYTE *)(v48 + 16) = v46;
  *(_QWORD *)(v48 + 24) = v44;
  *(_WORD *)(v48 + 32) = 257;
  outlined copy of Text.Storage(v40, v42, v46);
  swift_bridgeObjectRetain();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v24, &demangling cache variable for type metadata for ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??);
  outlined consume of Text.Storage(v40, v42, v46);
  swift_bridgeObjectRelease();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v22, &demangling cache variable for type metadata for ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??);
}

uint64_t static PrimitiveButtonStyle<>.shareCard.getter()
{
  return swift_getKeyPath();
}

uint64_t default argument 3 of ShareCardButton.init(title:subtitle:systemImage:tightLayout:action:)()
{
  return 0;
}

uint64_t ShareCardButton.init(title:subtitle:systemImage:tightLayout:action:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;

  OUTLINED_FUNCTION_114_7(a1, a2, a3, a4, a5, a6, a7);
  *(_QWORD *)(a8 + 56) = v9;
  *(_QWORD *)(a8 + 64) = v10;
  v11 = (uint64_t *)(a8 + *(int *)(OUTLINED_FUNCTION_85_10() + 36));
  *v11 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  return OUTLINED_FUNCTION_36_7();
}

uint64_t (*ShareCardMenuButton.title.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*ShareCardMenuButton.subtitle.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*ShareCardMenuButton.systemImage.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*ShareCardMenuButton.tightLayout.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ShareCardMenuButton.menuItems.getter()
{
  return swift_bridgeObjectRetain();
}

void ShareCardMenuButton.menuItems.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 56) = a1;
  OUTLINED_FUNCTION_0();
}

uint64_t (*ShareCardMenuButton.menuItems.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t key path getter for ShareCardMenuButton.action : ShareCardMenuButton@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a1 + 64);
  v3 = *(_QWORD *)(a1 + 72);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  *a2 = partial apply for thunk for @escaping @callee_guaranteed (@guaranteed UITapGestureRecognizer) -> ();
  a2[1] = v5;
  return swift_retain();
}

uint64_t key path setter for ShareCardMenuButton.action : ShareCardMenuButton(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  swift_retain();
  result = swift_release();
  *(_QWORD *)(a2 + 64) = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed CNComposeRecipient) -> (@out ());
  *(_QWORD *)(a2 + 72) = v5;
  return result;
}

void ShareCardMenuButton.action.getter()
{
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

void ShareCardMenuButton.action.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_6_6();
  swift_release();
  *(_QWORD *)(v1 + 64) = v2;
  *(_QWORD *)(v1 + 72) = v0;
  OUTLINED_FUNCTION_18();
}

uint64_t (*ShareCardMenuButton.action.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void ShareCardMenuButton.body.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  char v78;
  char v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  char v85;
  char v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t KeyPath;
  ValueMetadata *v134;
  uint64_t v135;
  unint64_t v136;

  OUTLINED_FUNCTION_93();
  a19 = v22;
  a20 = v23;
  v131 = v24;
  v132 = v20;
  v130 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Menu<VStack<TupleView<(ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??, ModifiedContent<Text, _FixedSizeLayout>)>>, _FlexFrameLayout>, Text?)>>, ForEach<[Participant], Participant, ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>>>);
  v123 = *(_QWORD *)(v130 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v25);
  OUTLINED_FUNCTION_41();
  v122 = v26;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.menuStyle<A>(_:)>>.0);
  v125 = *(_QWORD *)(v27 - 8);
  v126 = v27;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v28);
  OUTLINED_FUNCTION_79();
  v121 = v29 - v30;
  MEMORY[0x1E0C80A78](v31);
  v124 = (uint64_t)&v106 - v32;
  v128 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, <<opaque return type of View.menuStyle<A>(_:)>>.0>.Storage);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v33);
  OUTLINED_FUNCTION_41();
  v129 = v34;
  v35 = type metadata accessor for ShareCardMenuButton(0);
  v116 = *(_QWORD *)(v35 - 8);
  v36 = *(_QWORD *)(v116 + 64);
  MEMORY[0x1E0C80A78](v35);
  v117 = (char *)&v106 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<VStack<TupleView<(ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??, ModifiedContent<Text, _FixedSizeLayout>)>>, _FlexFrameLayout>, Text?)>>>);
  v119 = *(_QWORD *)(v37 - 8);
  v120 = v37;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v38);
  OUTLINED_FUNCTION_41();
  v118 = v39;
  v40 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.buttonStyle<A>(_:)>>.0);
  v41 = *(_QWORD *)(v40 - 8);
  MEMORY[0x1E0C80A78](v40);
  OUTLINED_FUNCTION_11_2();
  v127 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v42);
  OUTLINED_FUNCTION_79();
  v45 = v43 - v44;
  MEMORY[0x1E0C80A78](v46);
  v48 = (char *)&v106 - v47;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v49);
  v51 = (char *)&v106 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = OUTLINED_FUNCTION_14_2();
  v53 = MEMORY[0x1E0C80A78](v52);
  v54 = MEMORY[0x1E0C80A78](v53);
  v55 = MEMORY[0x1E0C80A78](v54);
  v56 = MEMORY[0x1E0C80A78](v55);
  v58 = (char *)&v106 - v57;
  MEMORY[0x1E0C80A78](v56);
  v64 = *(_QWORD *)(v132 + 56);
  if (*(_QWORD *)(v64 + 16) != 1)
    goto LABEL_4;
  v106 = v59;
  v107 = (char *)v63;
  v108 = v62;
  v109 = v61;
  v110 = (uint64_t)&v106 - v60;
  v111 = v45;
  v112 = v21;
  v113 = v41;
  v114 = v40;
  v115 = v48;
  specialized Collection.first.getter(v64, (uint64_t)v51);
  if (__swift_getEnumTagSinglePayload((uint64_t)v51, 1, v52) != 1)
  {
    v76 = v110;
    outlined init with take of StagedCollaboration((uint64_t)v51, v110, type metadata accessor for Participant);
    Participant.isRequestToScreenShareAvailable.getter();
    v78 = v77;
    outlined init with copy of ConversationControlsAppLaunchButtonType(v76, (uint64_t)v58, type metadata accessor for Participant);
    if ((v78 & 1) != 0)
    {
      Participant.screenState.getter();
      v80 = v79;
      v81 = v106;
      outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v58, v106, type metadata accessor for Participant);
      if (v80 == 2)
      {
        OUTLINED_FUNCTION_68_2(v81);
        OUTLINED_FUNCTION_68_2((uint64_t)v58);
        OUTLINED_FUNCTION_55_22(v76, (uint64_t)&a10);
        v82 = v116;
        v83 = (uint64_t)v117;
LABEL_11:
        Participant.screenState.getter();
        LODWORD(v125) = v86 != 2;
        goto LABEL_12;
      }
      Participant.isReceivingScreenFrames.getter();
      v85 = v84;
      outlined destroy of AccountUpdateNotice(v81, type metadata accessor for Participant);
      outlined destroy of AccountUpdateNotice((uint64_t)v58, type metadata accessor for Participant);
      v48 = v107;
      outlined init with copy of ConversationControlsAppLaunchButtonType(v76, (uint64_t)v107, type metadata accessor for Participant);
      v82 = v116;
      v83 = (uint64_t)v117;
      if ((v85 & 1) == 0)
        goto LABEL_11;
      LODWORD(v125) = 1;
    }
    else
    {
      OUTLINED_FUNCTION_68_2((uint64_t)v58);
      OUTLINED_FUNCTION_55_22(v76, (uint64_t)&a10);
      LODWORD(v125) = 1;
      v82 = v116;
      v83 = (uint64_t)v117;
    }
LABEL_12:
    OUTLINED_FUNCTION_68_2((uint64_t)v48);
    v87 = v132;
    outlined init with copy of ConversationControlsAppLaunchButtonType(v132, v83, type metadata accessor for ShareCardMenuButton);
    OUTLINED_FUNCTION_55_22(v76, (uint64_t)&a12);
    v88 = (*(unsigned __int8 *)(v82 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v82 + 80);
    v89 = (v36 + *(unsigned __int8 *)(v108 + 80) + v88) & ~(unint64_t)*(unsigned __int8 *)(v108 + 80);
    v90 = swift_allocObject();
    outlined init with take of StagedCollaboration(v83, v90 + v88, type metadata accessor for ShareCardMenuButton);
    outlined init with take of StagedCollaboration((uint64_t)v48, v90 + v89, type metadata accessor for Participant);
    MEMORY[0x1E0C80A78](v91);
    *(&v106 - 2) = v87;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??, ModifiedContent<Text, _FixedSizeLayout>)>>, _FlexFrameLayout>, Text?)>>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type VStack<TupleView<(ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??, ModifiedContent<Text, _FixedSizeLayout>)>>, _FlexFrameLayout>, Text?)>> and conformance VStack<A>, &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??, ModifiedContent<Text, _FixedSizeLayout>)>>, _FlexFrameLayout>, Text?)>>);
    v92 = v118;
    Button.init(action:label:)();
    KeyPath = swift_getKeyPath();
    LOBYTE(v134) = 0;
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Button<VStack<TupleView<(ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??, ModifiedContent<Text, _FixedSizeLayout>)>>, _FlexFrameLayout>, Text?)>>> and conformance Button<A>, &demangling cache variable for type metadata for Button<VStack<TupleView<(ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??, ModifiedContent<Text, _FixedSizeLayout>)>>, _FlexFrameLayout>, Text?)>>>);
    lazy protocol witness table accessor for type ShareCardButtonStyle and conformance ShareCardButtonStyle();
    v93 = v112;
    v94 = v120;
    View.buttonStyle<A>(_:)();
    OUTLINED_FUNCTION_11_0();
    (*(void (**)(uint64_t, uint64_t))(v119 + 8))(v92, v94);
    v95 = swift_getKeyPath();
    v96 = swift_allocObject();
    *(_BYTE *)(v96 + 16) = v125;
    v97 = v113;
    v98 = v111;
    v99 = v114;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v113 + 16))(v111, v93, v114);
    v100 = (uint64_t *)(v98 + *(int *)(v127 + 36));
    *v100 = v95;
    v100[1] = (uint64_t)partial apply for closure #1 in View.disabled(_:);
    v100[2] = v96;
    (*(void (**)(uint64_t, uint64_t))(v97 + 8))(v93, v99);
    v101 = v98;
    v102 = (uint64_t)v115;
    outlined init with take of Any?(v101, (uint64_t)v115, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>);
    outlined init with copy of FeatureEligibility?(v102, v129, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>);
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Menu<VStack<TupleView<(ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??, ModifiedContent<Text, _FixedSizeLayout>)>>, _FlexFrameLayout>, Text?)>>, ForEach<[Participant], Participant, ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>>> and conformance Menu<A, B>, &demangling cache variable for type metadata for Menu<VStack<TupleView<(ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??, ModifiedContent<Text, _FixedSizeLayout>)>>, _FlexFrameLayout>, Text?)>>, ForEach<[Participant], Participant, ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>>>);
    v104 = v103;
    v105 = lazy protocol witness table accessor for type ShareCardMenuStyle and conformance ShareCardMenuStyle();
    KeyPath = v130;
    v134 = &type metadata for ShareCardMenuStyle;
    v135 = v104;
    v136 = v105;
    OUTLINED_FUNCTION_111_4();
    _ConditionalContent<>.init(storage:)();
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v102, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>);
    OUTLINED_FUNCTION_68_2(v76);
    goto LABEL_13;
  }
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v51, &demangling cache variable for type metadata for Participant?);
LABEL_4:
  v65 = MEMORY[0x1E0C80A78](v64);
  *(&v106 - 2) = v66;
  MEMORY[0x1E0C80A78](v65);
  *(&v106 - 2) = v67;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??, ModifiedContent<Text, _FixedSizeLayout>)>>, _FlexFrameLayout>, Text?)>>);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ForEach<[Participant], Participant, ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>>);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type VStack<TupleView<(ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??, ModifiedContent<Text, _FixedSizeLayout>)>>, _FlexFrameLayout>, Text?)>> and conformance VStack<A>, &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??, ModifiedContent<Text, _FixedSizeLayout>)>>, _FlexFrameLayout>, Text?)>>);
  lazy protocol witness table accessor for type ForEach<[Participant], Participant, ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>> and conformance <> ForEach<A, B, C>((unint64_t *)&lazy protocol witness table cache variable for type ForEach<[Participant], Participant, ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>> and conformance <> ForEach<A, B, C>, &demangling cache variable for type metadata for ForEach<[Participant], Participant, ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>>, (uint64_t (*)(void))lazy protocol witness table accessor for type ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>, MEMORY[0x1E0CDFEE8]);
  Menu.init(content:label:)();
  KeyPath = swift_getKeyPath();
  LOBYTE(v134) = 0;
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Menu<VStack<TupleView<(ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??, ModifiedContent<Text, _FixedSizeLayout>)>>, _FlexFrameLayout>, Text?)>>, ForEach<[Participant], Participant, ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>>> and conformance Menu<A, B>, &demangling cache variable for type metadata for Menu<VStack<TupleView<(ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??, ModifiedContent<Text, _FixedSizeLayout>)>>, _FlexFrameLayout>, Text?)>>, ForEach<[Participant], Participant, ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>>>);
  v69 = v68;
  v70 = lazy protocol witness table accessor for type ShareCardMenuStyle and conformance ShareCardMenuStyle();
  v71 = v121;
  v72 = v130;
  View.menuStyle<A>(_:)();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_48_27(v123);
  v74 = v124;
  v73 = v125;
  v75 = v126;
  OUTLINED_FUNCTION_139(v124, v71, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v125 + 32));
  OUTLINED_FUNCTION_139(v129, v74, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v73 + 16));
  swift_storeEnumTagMultiPayload();
  lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>();
  KeyPath = v72;
  v134 = &type metadata for ShareCardMenuStyle;
  v135 = v69;
  v136 = v70;
  OUTLINED_FUNCTION_111_4();
  _ConditionalContent<>.init(storage:)();
  (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v74, v75);
LABEL_13:
  OUTLINED_FUNCTION_52_1();
}

uint64_t closure #3 in ShareCardMenuButton.body.getter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD v8[2];

  v2 = type metadata accessor for ShareCardMenuButton(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x1E0C80A78](v2);
  v8[1] = *(_QWORD *)(a1 + 56);
  swift_getKeyPath();
  outlined init with copy of ConversationControlsAppLaunchButtonType(a1, (uint64_t)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ShareCardMenuButton);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  outlined init with take of StagedCollaboration((uint64_t)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v6 + v5, type metadata accessor for ShareCardMenuButton);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [Participant]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type [Participant] and conformance [A], &demangling cache variable for type metadata for [Participant]);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type Participant and conformance Participant, (void (*)(uint64_t))type metadata accessor for Participant);
  lazy protocol witness table accessor for type ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>();
  return ForEach<>.init(_:id:content:)();
}

uint64_t closure #1 in closure #3 in ShareCardMenuButton.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char v22;
  char v23;
  char v24;
  char v25;
  uint64_t v26;
  int v27;
  _BOOL4 v28;
  char v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t KeyPath;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v45 = a2;
  v48 = a3;
  v4 = type metadata accessor for ShareCardMenuButton(0);
  v42 = *(_QWORD *)(v4 - 8);
  v5 = *(_QWORD *)(v42 + 64);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<Text>);
  v46 = *(_QWORD *)(v7 - 8);
  v47 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Participant(0);
  v44 = *(_QWORD *)(v10 - 8);
  v11 = *(_QWORD *)(v44 + 64);
  v12 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v41 - v15;
  v17 = MEMORY[0x1E0C80A78](v14);
  v19 = (char *)&v41 - v18;
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v41 - v20;
  Participant.isRequestToScreenShareAvailable.getter();
  v23 = v22;
  outlined init with copy of ConversationControlsAppLaunchButtonType(a1, (uint64_t)v21, type metadata accessor for Participant);
  if ((v23 & 1) != 0)
  {
    Participant.screenState.getter();
    v25 = v24;
    outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v21, (uint64_t)v19, type metadata accessor for Participant);
    if (v25 == 2)
    {
      outlined destroy of AccountUpdateNotice((uint64_t)v19, type metadata accessor for Participant);
      outlined destroy of AccountUpdateNotice((uint64_t)v21, type metadata accessor for Participant);
      outlined init with copy of ConversationControlsAppLaunchButtonType(a1, (uint64_t)v16, type metadata accessor for Participant);
      v26 = v42;
    }
    else
    {
      Participant.isReceivingScreenFrames.getter();
      v43 = v27;
      outlined destroy of AccountUpdateNotice((uint64_t)v19, type metadata accessor for Participant);
      outlined destroy of AccountUpdateNotice((uint64_t)v21, type metadata accessor for Participant);
      outlined init with copy of ConversationControlsAppLaunchButtonType(a1, (uint64_t)v16, type metadata accessor for Participant);
      v26 = v42;
      if ((v43 & 1) != 0)
      {
        v28 = 1;
LABEL_8:
        v43 = v28;
        goto LABEL_9;
      }
    }
    Participant.screenState.getter();
    v28 = v29 != 2;
    goto LABEL_8;
  }
  outlined destroy of AccountUpdateNotice((uint64_t)v21, type metadata accessor for Participant);
  outlined init with copy of ConversationControlsAppLaunchButtonType(a1, (uint64_t)v16, type metadata accessor for Participant);
  v43 = 1;
  v26 = v42;
LABEL_9:
  outlined destroy of AccountUpdateNotice((uint64_t)v16, type metadata accessor for Participant);
  outlined init with copy of ConversationControlsAppLaunchButtonType(v45, (uint64_t)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ShareCardMenuButton);
  outlined init with copy of ConversationControlsAppLaunchButtonType(a1, (uint64_t)v13, type metadata accessor for Participant);
  v30 = (*(unsigned __int8 *)(v26 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  v31 = (v5 + *(unsigned __int8 *)(v44 + 80) + v30) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
  v32 = swift_allocObject();
  outlined init with take of StagedCollaboration((uint64_t)v6, v32 + v30, type metadata accessor for ShareCardMenuButton);
  outlined init with take of StagedCollaboration((uint64_t)v13, v32 + v31, type metadata accessor for Participant);
  MEMORY[0x1E0C80A78](v33);
  *(&v41 - 2) = a1;
  Button.init(action:label:)();
  KeyPath = swift_getKeyPath();
  v35 = swift_allocObject();
  *(_BYTE *)(v35 + 16) = v43;
  v37 = v46;
  v36 = v47;
  v38 = v48;
  (*(void (**)(uint64_t, char *, uint64_t))(v46 + 16))(v48, v9, v47);
  v39 = (uint64_t *)(v38
                  + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>)
                           + 36));
  *v39 = KeyPath;
  v39[1] = (uint64_t)closure #1 in View.disabled(_:)partial apply;
  v39[2] = v35;
  return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v9, v36);
}

void closure #1 in ShareCardMenuButton.body.getter(uint64_t a1, uint64_t a2)
{
  void (*v2)(void *);
  void *v3;
  id v4;
  id v5;

  v2 = *(void (**)(void *))(a1 + 64);
  v3 = *(void **)(a2 + *(int *)(OUTLINED_FUNCTION_14_2() + 28));
  v5 = v3;
  if (v3)
  {
    v4 = v3;
    v3 = v5;
  }
  v2(v3);

}

uint64_t closure #2 in closure #1 in closure #3 in ShareCardMenuButton.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  char v4;
  uint64_t v5;
  void *v6;

  Participant.contactDetails.getter();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  Participant.name(_:)();
  swift_bridgeObjectRelease();
  lazy protocol witness table accessor for type String and conformance String();
  result = Text.init<A>(_:)();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4 & 1;
  *(_QWORD *)(a1 + 24) = v5;
  return result;
}

void closure #2 in ShareCardMenuButton.body.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = static HorizontalAlignment.center.getter();
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_VStackLayout, TupleView<(ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??, ModifiedContent<Text, _FixedSizeLayout>)>>, _FlexFrameLayout>, Text?)>>);
  closure #1 in closure #2 in ShareCardButton.body.getter();
  OUTLINED_FUNCTION_0();
}

void closure #1 in closure #2 in ShareCardButton.body.getter()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  void (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  _QWORD v42[4];

  OUTLINED_FUNCTION_93();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??, ModifiedContent<Text, _FixedSizeLayout>)>>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_78();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??, ModifiedContent<Text, _FixedSizeLayout>)>>, _FlexFrameLayout>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_79();
  v11 = v9 - v10;
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v42 - v14;
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)v42 - v16;
  if (*(_BYTE *)(v4 + 48))
    v18 = 0x4018000000000000;
  else
    v18 = 0x4022000000000000;
  *(_QWORD *)v0 = static VerticalAlignment.center.getter();
  *(_QWORD *)(v0 + 8) = v18;
  *(_BYTE *)(v0 + 16) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_HStackLayout, TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??, ModifiedContent<Text, _FixedSizeLayout>)>>);
  v2(v4);
  v19 = static Alignment.center.getter();
  specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(0, 1, 0, 1, 0x7FF0000000000000, 0, 0, 1, 0, 1, 0, 1, v19, v20);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v0, &demangling cache variable for type metadata for HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??, ModifiedContent<Text, _FixedSizeLayout>)>>);
  outlined init with take of Any?((uint64_t)v15, (uint64_t)v17, &demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??, ModifiedContent<Text, _FixedSizeLayout>)>>, _FlexFrameLayout>);
  v21 = *(_QWORD *)(v4 + 24);
  if (v21)
  {
    v42[2] = *(_QWORD *)(v4 + 16);
    v42[3] = v21;
    lazy protocol witness table accessor for type String and conformance String();
    OUTLINED_FUNCTION_5_0();
    v22 = Text.init<A>(_:)();
    v24 = v23;
    v42[0] = v11;
    v26 = v25 & 1;
    static Font.Weight.semibold.getter();
    v21 = Text.fontWeight(_:)();
    v28 = v27;
    v30 = v29;
    v32 = v31 & 1;
    outlined consume of Text.Storage(v22, v24, v26);
    v11 = v42[0];
    swift_bridgeObjectRelease();
  }
  else
  {
    v28 = 0;
    v32 = 0;
    v30 = 0;
  }
  OUTLINED_FUNCTION_61_10((uint64_t)v17, v11);
  OUTLINED_FUNCTION_61_10(v11, v6);
  v33 = (uint64_t *)(v6
                  + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??, ModifiedContent<Text, _FixedSizeLayout>)>>, _FlexFrameLayout>, Text?))
                           + 48));
  *v33 = v21;
  v33[1] = v28;
  v33[2] = v32;
  v33[3] = v30;
  v34 = OUTLINED_FUNCTION_118_7();
  outlined copy of Text?(v34, v35, v36, v37);
  OUTLINED_FUNCTION_25_0((uint64_t)v17);
  v38 = OUTLINED_FUNCTION_118_7();
  outlined consume of Text?(v38, v39, v40, v41);
  OUTLINED_FUNCTION_25_0(v11);
  OUTLINED_FUNCTION_52_1();
}

void closure #1 in closure #1 in ShareCardMenuButton.buttonLabel.getter(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int *v30;
  uint64_t KeyPath;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v58 = a2;
  v52 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Image.Scale>);
  MEMORY[0x1E0C80A78](v52);
  v4 = (uint64_t *)((char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = type metadata accessor for Image.Scale();
  v53 = *(_QWORD *)(v5 - 8);
  v54 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>);
  v8 = MEMORY[0x1E0C80A78](v56);
  v51 = (uint64_t *)((char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v8);
  v50 = (uint64_t)&v49 - v10;
  v57 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>?);
  MEMORY[0x1E0C80A78](v57);
  v55 = (uint64_t)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DynamicTypeSize();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v49 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??);
  v20 = MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v49 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v24 = (char *)&v49 - v23;
  type metadata accessor for ShareCardMenuButton(0);
  specialized Environment.wrappedValue.getter();
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v16, *MEMORY[0x1E0CD98E0], v12);
  v25 = static DynamicTypeSize.< infix(_:_:)();
  v26 = *(void (**)(char *, uint64_t))(v13 + 8);
  v26(v16, v12);
  v26(v18, v12);
  if ((v25 & 1) != 0)
  {
    if (a1[5])
    {
      swift_bridgeObjectRetain();
      v27 = Image.init(systemName:)();
      v29 = v53;
      v28 = v54;
      if (*((_BYTE *)a1 + 48))
        v30 = (unsigned int *)MEMORY[0x1E0CDF7D0];
      else
        v30 = (unsigned int *)MEMORY[0x1E0CDF7C0];
      (*(void (**)(char *, _QWORD, uint64_t))(v53 + 104))(v7, *v30, v54);
      KeyPath = swift_getKeyPath();
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))((char *)v4 + *(int *)(v52 + 28), v7, v28);
      *v4 = KeyPath;
      v32 = v56;
      v33 = v51;
      outlined init with copy of FeatureEligibility?((uint64_t)v4, (uint64_t)v51 + *(int *)(v56 + 36), &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Image.Scale>);
      *v33 = v27;
      swift_retain();
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v4, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Image.Scale>);
      (*(void (**)(char *, uint64_t))(v29 + 8))(v7, v28);
      swift_release();
      v34 = v50;
      outlined init with take of Any?((uint64_t)v33, v50, &demangling cache variable for type metadata for ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>);
      v35 = v34;
      v36 = v55;
      outlined init with take of Any?(v35, v55, &demangling cache variable for type metadata for ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>);
      v37 = 0;
    }
    else
    {
      v37 = 1;
      v36 = v55;
      v32 = v56;
    }
    __swift_storeEnumTagSinglePayload(v36, v37, 1, v32);
    outlined init with take of Any?(v36, (uint64_t)v24, &demangling cache variable for type metadata for ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>?);
    v38 = 0;
  }
  else
  {
    v38 = 1;
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v24, v38, 1, v57);
  v39 = a1[1];
  v59 = *a1;
  v60 = v39;
  lazy protocol witness table accessor for type String and conformance String();
  swift_bridgeObjectRetain();
  v40 = Text.init<A>(_:)();
  v42 = v41;
  v44 = v43;
  v46 = v45 & 1;
  outlined init with copy of FeatureEligibility?((uint64_t)v24, (uint64_t)v22, &demangling cache variable for type metadata for ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??);
  v47 = v58;
  outlined init with copy of FeatureEligibility?((uint64_t)v22, v58, &demangling cache variable for type metadata for ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??);
  v48 = v47
      + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??, ModifiedContent<Text, _FixedSizeLayout>))
               + 48);
  *(_QWORD *)v48 = v40;
  *(_QWORD *)(v48 + 8) = v42;
  *(_BYTE *)(v48 + 16) = v46;
  *(_QWORD *)(v48 + 24) = v44;
  *(_WORD *)(v48 + 32) = 257;
  outlined copy of Text.Storage(v40, v42, v46);
  swift_bridgeObjectRetain();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v24, &demangling cache variable for type metadata for ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??);
  outlined consume of Text.Storage(v40, v42, v46);
  swift_bridgeObjectRelease();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v22, &demangling cache variable for type metadata for ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??);
}

uint64_t default argument 3 of ShareCardMenuButton.init(title:subtitle:systemImage:tightLayout:menuItems:action:)()
{
  return 0;
}

uint64_t ShareCardMenuButton.init(title:subtitle:systemImage:tightLayout:menuItems:action:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, _QWORD *a8@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;

  OUTLINED_FUNCTION_114_7(a1, a2, a3, a4, a5, a6, a7);
  a8[7] = v9;
  a8[8] = v10;
  a8[9] = v11;
  v12 = (_QWORD *)((char *)a8 + *(int *)(OUTLINED_FUNCTION_107_6() + 40));
  *v12 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  return OUTLINED_FUNCTION_36_7();
}

void static NSNotificationCenter.Publisher.publisher<A>(name:updateFetcher:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(void);
  void (*v4)(void);
  void *v5;
  void *v6;
  uint64_t v7;
  void (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  _QWORD *v14;

  OUTLINED_FUNCTION_93();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v7 = type metadata accessor for NSNotificationCenter.Publisher();
  v8 = (void (*)(uint64_t))MEMORY[0x1E0CB1F30];
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_4_1();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_6_0();
  type metadata accessor for CurrentValueSubject();
  v4();
  v11 = CurrentValueSubject.__allocating_init(_:)();
  v12 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  v13 = v6;
  OUTLINED_FUNCTION_117_6();
  v14 = (_QWORD *)OUTLINED_FUNCTION_1_13();
  v14[2] = v11;
  v14[3] = v4;
  v14[4] = v2;
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type NSNotificationCenter.Publisher and conformance NSNotificationCenter.Publisher, v8);
  swift_retain();
  swift_retain();
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v0, v7);
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_52_1();
}

uint64_t specialized closure #1 in static NSNotificationCenter.Publisher.publisher<A>(name:updateFetcher:)(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr))
{
  uint64_t v4;

  a3(&v4);
  return CurrentValueSubject.send(_:)();
}

uint64_t closure #1 in static NSNotificationCenter.Publisher.publisher<A>(name:updateFetcher:)(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void (*v7)(uint64_t);
  uint64_t v9;

  v2 = *(_QWORD *)(*a2 + *MEMORY[0x1E0C95F98]);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](a1);
  v6 = (char *)&v9 - v5;
  v7(v4);
  CurrentValueSubject.send(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

void ShareCardViewModel.didTapScreenShareButton.getter()
{
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

void ShareCardViewModel.didTapAskToScreenShareButton.getter()
{
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

void ShareCardViewModel.didTapCollaborateButton.getter()
{
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

void ShareCardViewModel.didTapEndSharePlay.getter()
{
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

void ShareCardViewModel.collaborateButtonTitle.getter()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  OUTLINED_FUNCTION_6_8();
  OUTLINED_FUNCTION_7_13(0x524F42414C4C4F43, 0xEB00000000455441);
  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_64();
  OUTLINED_FUNCTION_45_0();
}

uint64_t ShareCardViewModel.collaborateButtonImage.getter()
{
  return 0x322E6E6F73726570;
}

void ShareCardViewModel.endSharePlayButtonTitle.getter()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  OUTLINED_FUNCTION_6_8();
  OUTLINED_FUNCTION_7_13(0x7261685320646E45, 0xED000079616C5065);
  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_64();
  OUTLINED_FUNCTION_45_0();
}

uint64_t ShareCardViewModel.endSharePlayButtonImage.getter()
{
  return 0x616C706572616873;
}

void ShareCardViewModel.shareScreenButtonTitle.getter()
{
  id v0;
  uint64_t v1;

  v0 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v1 = OUTLINED_FUNCTION_71_15();
  OUTLINED_FUNCTION_7_13(v1 & 0xFFFFFFFFFFFFLL | 0x794D000000000000, 0xEF6E656572635320);
  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_64();
  OUTLINED_FUNCTION_45_0();
}

void ShareCardViewModel.shareScreenButtonShortTitle.getter()
{
  id v0;
  uint64_t v1;

  v0 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v1 = OUTLINED_FUNCTION_71_15();
  OUTLINED_FUNCTION_7_13(v1 & 0xFFFFFFFFFFFFLL | 0x6353000000000000, 0xEC0000006E656572);
  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_64();
  OUTLINED_FUNCTION_45_0();
}

void ShareCardViewModel.shareScreenButtonImage.getter()
{
  if (one-time initialization token for shared != -1)
    swift_once();
  (*(void (**)(void))(*(_QWORD *)static Defaults.shared + 168))();
  OUTLINED_FUNCTION_0();
}

void ShareCardViewModel.requestScreenShareButtonTitle.getter()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  OUTLINED_FUNCTION_6_8();
  OUTLINED_FUNCTION_7_13(0xD000000000000013, 0x80000001BD67E690);
  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_64();
  OUTLINED_FUNCTION_45_0();
}

uint64_t ShareCardViewModel.collaborateSubtitle.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  char v21;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_16_2();
  v3 = type metadata accessor for ConversationControlsRecipe();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  v5 = OUTLINED_FUNCTION_77_9();
  v6 = MEMORY[0x1C3B752C0](v5);
  if (!v6)
    return 0;
  v7 = (void *)v6;
  if (one-time initialization token for shared != -1)
    swift_once();
  v18 = 11;
  v19 = 0u;
  v20 = 0u;
  v21 = 6;
  (*(void (**)(_QWORD, uint64_t *, void *))(*(_QWORD *)static ConversationControlsRecipeGenerator.shared + 96))(0, &v18, v7);
  outlined destroy of ConversationControlsType((uint64_t)&v18);
  if (__swift_getEnumTagSinglePayload(v1, 1, v3) == 1)
  {

    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v1, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
    return 0;
  }
  outlined init with take of StagedCollaboration(v1, v0, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
  v9 = *(_QWORD *)(v0 + 88);
  if (v9 >> 62)
  {
    OUTLINED_FUNCTION_5_0();
    if (_CocoaArrayWrapper.endIndex.getter())
      goto LABEL_9;
LABEL_13:

    swift_bridgeObjectRelease();
    outlined destroy of AccountUpdateNotice(v0, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
    return 0;
  }
  v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
  OUTLINED_FUNCTION_5_0();
  if (!v10)
    goto LABEL_13;
LABEL_9:
  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v9 & 0xC000000000000001) == 0, v9);
  if ((v9 & 0xC000000000000001) != 0)
    v11 = (id)MEMORY[0x1C3B73D18](0, v9);
  else
    v11 = *(id *)(v9 + 32);
  v12 = v11;
  swift_bridgeObjectRelease();
  v13 = objc_msgSend(v12, sel_string);

  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v16 = v15;

  v18 = v14;
  *(_QWORD *)&v19 = v16;
  lazy protocol witness table accessor for type String and conformance String();
  v8 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();

  outlined destroy of AccountUpdateNotice(v0, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t key path getter for ShareCardViewModel.shouldShowEndActivity : ShareCardViewModel@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 264))();
  *a2 = result & 1;
  return result;
}

uint64_t key path setter for ShareCardViewModel.shouldShowEndActivity : ShareCardViewModel(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 272))(*a1);
}

uint64_t ShareCardViewModel.shouldShowEndActivity.getter()
{
  return ShareCardViewModel.shouldShowEndActivity.getter();
}

{
  unsigned __int8 v1;

  swift_getKeyPath();
  swift_getKeyPath();
  OUTLINED_FUNCTION_64();
  static Published.subscript.getter();
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_11_0();
  return v1;
}

void ShareCardViewModel.shouldShowEndActivity.setter()
{
  ShareCardViewModel.shouldShowEndActivity.setter();
}

{
  swift_getKeyPath();
  swift_getKeyPath();
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  static Published.subscript.setter();
  OUTLINED_FUNCTION_45_0();
}

void ShareCardViewModel.shouldShowEndActivity.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t KeyPath;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_80((uint64_t)v1);
  KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_72_0(KeyPath);
  v3 = swift_getKeyPath();
  *(_QWORD *)(v0 + 48) = OUTLINED_FUNCTION_19_4(v3);
  OUTLINED_FUNCTION_18();
}

uint64_t key path setter for ShareCardViewModel.$shouldShowEndActivity : ShareCardViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  return (*(uint64_t (**)(char *))(**(_QWORD **)a2 + 296))(v6);
}

uint64_t ShareCardViewModel.$shouldShowEndActivity.getter()
{
  return ShareCardViewModel.$shouldShowEndActivity.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit18ShareCardViewModel__shouldShowEndActivity, (uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
}

uint64_t ShareCardViewModel.$shouldShowEndActivity.setter(uint64_t a1)
{
  return LinkDetailHeaderView.$invitedMemberHandles.setter(a1, &demangling cache variable for type metadata for Published<Bool>.Publisher, (uint64_t)&OBJC_IVAR____TtC15ConversationKit18ShareCardViewModel__shouldShowEndActivity, (uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
}

void ShareCardViewModel.$shouldShowEndActivity.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;

  v1 = OUTLINED_FUNCTION_46_17();
  OUTLINED_FUNCTION_35_11((uint64_t)v1);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  *(_QWORD *)(v0 + 48) = OUTLINED_FUNCTION_15_3(v2);
  v3 = OUTLINED_FUNCTION_21_50();
  OUTLINED_FUNCTION_70_13((uint64_t)v3);
  OUTLINED_FUNCTION_7_17();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_18();
}

void ShareCardViewModel.$shouldShowEndActivity.modify(uint64_t a1, char a2)
{
  ShareCardViewModel.$shouldShowEndActivity.modify(a1, a2, (void (*)(void *))ShareCardViewModel.$shouldShowEndActivity.setter);
}

uint64_t key path getter for ShareCardViewModel.shouldShowCollaboration : ShareCardViewModel@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 312))();
  *a2 = result & 1;
  return result;
}

uint64_t key path setter for ShareCardViewModel.shouldShowCollaboration : ShareCardViewModel(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 320))(*a1);
}

uint64_t ShareCardViewModel.shouldShowCollaboration.getter()
{
  return ShareCardViewModel.shouldShowEndActivity.getter();
}

void ShareCardViewModel.shouldShowCollaboration.setter()
{
  ShareCardViewModel.shouldShowEndActivity.setter();
}

void ShareCardViewModel.shouldShowCollaboration.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t KeyPath;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_80((uint64_t)v1);
  KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_72_0(KeyPath);
  v3 = swift_getKeyPath();
  *(_QWORD *)(v0 + 48) = OUTLINED_FUNCTION_19_4(v3);
  OUTLINED_FUNCTION_18();
}

uint64_t key path setter for ShareCardViewModel.$shouldShowCollaboration : ShareCardViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  return (*(uint64_t (**)(char *))(**(_QWORD **)a2 + 344))(v6);
}

uint64_t ShareCardViewModel.$shouldShowCollaboration.getter()
{
  return ShareCardViewModel.$shouldShowEndActivity.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit18ShareCardViewModel__shouldShowCollaboration, (uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
}

uint64_t ShareCardViewModel.$shouldShowCollaboration.setter(uint64_t a1)
{
  return LinkDetailHeaderView.$invitedMemberHandles.setter(a1, &demangling cache variable for type metadata for Published<Bool>.Publisher, (uint64_t)&OBJC_IVAR____TtC15ConversationKit18ShareCardViewModel__shouldShowCollaboration, (uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
}

void ShareCardViewModel.$shouldShowCollaboration.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;

  v1 = OUTLINED_FUNCTION_46_17();
  OUTLINED_FUNCTION_35_11((uint64_t)v1);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  *(_QWORD *)(v0 + 48) = OUTLINED_FUNCTION_15_3(v2);
  v3 = OUTLINED_FUNCTION_21_50();
  OUTLINED_FUNCTION_70_13((uint64_t)v3);
  OUTLINED_FUNCTION_7_17();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_18();
}

void ShareCardViewModel.$shouldShowCollaboration.modify(uint64_t a1, char a2)
{
  ShareCardViewModel.$shouldShowEndActivity.modify(a1, a2, (void (*)(void *))ShareCardViewModel.$shouldShowCollaboration.setter);
}

void ShareCardViewModel.$shouldShowEndActivity.modify(uint64_t a1, char a2, void (*a3)(void *))
{
  _QWORD *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD **)a1;
  v5 = *(void **)(*(_QWORD *)a1 + 48);
  v6 = *(void **)(*(_QWORD *)a1 + 56);
  if ((a2 & 1) != 0)
  {
    v7 = v4[4];
    v8 = v4[5];
    OUTLINED_FUNCTION_139(*(_QWORD *)(*(_QWORD *)a1 + 48), (uint64_t)v6, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 16));
    a3(v5);
    (*(void (**)(void *, uint64_t))(v8 + 8))(v6, v7);
  }
  else
  {
    a3(*(void **)(*(_QWORD *)a1 + 56));
  }
  free(v6);
  free(v5);
  free(v4);
}

uint64_t ShareCardViewModel.shareScreenEnabled.getter()
{
  uint64_t v0;

  if (((*(uint64_t (**)(void))(*(_QWORD *)v0 + 472))() & 1) != 0
    && ((*(uint64_t (**)(void))(*(_QWORD *)v0 + 520))() & 1) == 0)
  {
    return 1;
  }
  if (one-time initialization token for shared != -1)
    swift_once();
  return (*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 216))() & 1;
}

uint64_t key path getter for ShareCardViewModel.isAVLess : ShareCardViewModel@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 368))();
  *a2 = result & 1;
  return result;
}

uint64_t key path setter for ShareCardViewModel.isAVLess : ShareCardViewModel(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 376))(*a1);
}

uint64_t ShareCardViewModel.isAVLess.getter()
{
  return ShareCardViewModel.shouldShowEndActivity.getter();
}

void ShareCardViewModel.isAVLess.setter()
{
  ShareCardViewModel.shouldShowEndActivity.setter();
}

void ShareCardViewModel.isAVLess.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t KeyPath;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_80((uint64_t)v1);
  KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_72_0(KeyPath);
  v3 = swift_getKeyPath();
  *(_QWORD *)(v0 + 48) = OUTLINED_FUNCTION_19_4(v3);
  OUTLINED_FUNCTION_18();
}

uint64_t key path setter for ShareCardViewModel.$isAVLess : ShareCardViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  return (*(uint64_t (**)(char *))(**(_QWORD **)a2 + 400))(v6);
}

uint64_t ShareCardViewModel.$isAVLess.getter()
{
  return ShareCardViewModel.$shouldShowEndActivity.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit18ShareCardViewModel__isAVLess, (uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
}

uint64_t ShareCardViewModel.$isAVLess.setter(uint64_t a1)
{
  return LinkDetailHeaderView.$invitedMemberHandles.setter(a1, &demangling cache variable for type metadata for Published<Bool>.Publisher, (uint64_t)&OBJC_IVAR____TtC15ConversationKit18ShareCardViewModel__isAVLess, (uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
}

void ShareCardViewModel.$isAVLess.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;

  v1 = OUTLINED_FUNCTION_46_17();
  OUTLINED_FUNCTION_35_11((uint64_t)v1);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  *(_QWORD *)(v0 + 48) = OUTLINED_FUNCTION_15_3(v2);
  v3 = OUTLINED_FUNCTION_21_50();
  OUTLINED_FUNCTION_70_13((uint64_t)v3);
  OUTLINED_FUNCTION_7_17();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_18();
}

void ShareCardViewModel.$isAVLess.modify(uint64_t a1, char a2)
{
  ShareCardViewModel.$shouldShowEndActivity.modify(a1, a2, (void (*)(void *))ShareCardViewModel.$isAVLess.setter);
}

BOOL ShareCardViewModel.askToShareScreenEnabled.getter()
{
  uint64_t v0;

  return ((*(uint64_t (**)(void))(*(_QWORD *)v0 + 368))() & 1) == 0;
}

uint64_t key path getter for ShareCardViewModel.remoteParticipants : ShareCardViewModel@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 424))();
  *a2 = result;
  return result;
}

uint64_t key path setter for ShareCardViewModel.remoteParticipants : ShareCardViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))(**(_QWORD **)a2 + 432);
  v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

void ShareCardViewModel.remoteParticipants.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_45_0();
}

void ShareCardViewModel.remoteParticipants.setter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  static Published.subscript.setter();
  OUTLINED_FUNCTION_45_0();
}

void ShareCardViewModel.remoteParticipants.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t KeyPath;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_80((uint64_t)v1);
  KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_72_0(KeyPath);
  v3 = swift_getKeyPath();
  *(_QWORD *)(v0 + 48) = OUTLINED_FUNCTION_19_4(v3);
  OUTLINED_FUNCTION_18();
}

uint64_t key path setter for ShareCardViewModel.$remoteParticipants : ShareCardViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<[Participant]>.Publisher);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  return (*(uint64_t (**)(char *))(**(_QWORD **)a2 + 456))(v6);
}

uint64_t ShareCardViewModel.$remoteParticipants.getter()
{
  return ShareCardViewModel.$shouldShowEndActivity.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit18ShareCardViewModel__remoteParticipants, &demangling cache variable for type metadata for Published<[Participant]>);
}

uint64_t ShareCardViewModel.$remoteParticipants.setter(uint64_t a1)
{
  return LinkDetailHeaderView.$invitedMemberHandles.setter(a1, &demangling cache variable for type metadata for Published<[Participant]>.Publisher, (uint64_t)&OBJC_IVAR____TtC15ConversationKit18ShareCardViewModel__remoteParticipants, &demangling cache variable for type metadata for Published<[Participant]>);
}

void ShareCardViewModel.$remoteParticipants.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;

  v1 = OUTLINED_FUNCTION_46_17();
  OUTLINED_FUNCTION_35_11((uint64_t)v1);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<[Participant]>.Publisher);
  *(_QWORD *)(v0 + 48) = OUTLINED_FUNCTION_15_3(v2);
  v3 = OUTLINED_FUNCTION_21_50();
  OUTLINED_FUNCTION_70_13((uint64_t)v3);
  OUTLINED_FUNCTION_7_17();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<[Participant]>);
  OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_18();
}

void ShareCardViewModel.$remoteParticipants.modify(uint64_t a1, char a2)
{
  ShareCardViewModel.$shouldShowEndActivity.modify(a1, a2, (void (*)(void *))ShareCardViewModel.$remoteParticipants.setter);
}

uint64_t key path getter for ShareCardViewModel.screenSharingAvailable : ShareCardViewModel@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 472))();
  *a2 = result & 1;
  return result;
}

uint64_t key path setter for ShareCardViewModel.screenSharingAvailable : ShareCardViewModel(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 480))(*a1);
}

uint64_t ShareCardViewModel.screenSharingAvailable.getter()
{
  return ShareCardViewModel.shouldShowEndActivity.getter();
}

void ShareCardViewModel.screenSharingAvailable.setter()
{
  ShareCardViewModel.shouldShowEndActivity.setter();
}

void ShareCardViewModel.screenSharingAvailable.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t KeyPath;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_80((uint64_t)v1);
  KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_72_0(KeyPath);
  v3 = swift_getKeyPath();
  *(_QWORD *)(v0 + 48) = OUTLINED_FUNCTION_19_4(v3);
  OUTLINED_FUNCTION_18();
}

uint64_t key path setter for ShareCardViewModel.$screenSharingAvailable : ShareCardViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  return (*(uint64_t (**)(char *))(**(_QWORD **)a2 + 504))(v6);
}

uint64_t ShareCardViewModel.$screenSharingAvailable.getter()
{
  return ShareCardViewModel.$shouldShowEndActivity.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit18ShareCardViewModel__screenSharingAvailable, (uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
}

uint64_t ShareCardViewModel.$screenSharingAvailable.setter(uint64_t a1)
{
  return LinkDetailHeaderView.$invitedMemberHandles.setter(a1, &demangling cache variable for type metadata for Published<Bool>.Publisher, (uint64_t)&OBJC_IVAR____TtC15ConversationKit18ShareCardViewModel__screenSharingAvailable, (uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
}

void ShareCardViewModel.$screenSharingAvailable.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;

  v1 = OUTLINED_FUNCTION_46_17();
  OUTLINED_FUNCTION_35_11((uint64_t)v1);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  *(_QWORD *)(v0 + 48) = OUTLINED_FUNCTION_15_3(v2);
  v3 = OUTLINED_FUNCTION_21_50();
  OUTLINED_FUNCTION_70_13((uint64_t)v3);
  OUTLINED_FUNCTION_7_17();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_18();
}

void ShareCardViewModel.$screenSharingAvailable.modify(uint64_t a1, char a2)
{
  ShareCardViewModel.$shouldShowEndActivity.modify(a1, a2, (void (*)(void *))ShareCardViewModel.$screenSharingAvailable.setter);
}

uint64_t key path getter for ShareCardViewModel.screenCaptured : ShareCardViewModel@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 520))();
  *a2 = result & 1;
  return result;
}

uint64_t key path setter for ShareCardViewModel.screenCaptured : ShareCardViewModel(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 528))(*a1);
}

uint64_t ShareCardViewModel.screenCaptured.getter()
{
  return ShareCardViewModel.shouldShowEndActivity.getter();
}

void ShareCardViewModel.screenCaptured.setter()
{
  ShareCardViewModel.shouldShowEndActivity.setter();
}

void ShareCardViewModel.screenCaptured.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t KeyPath;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_80((uint64_t)v1);
  KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_72_0(KeyPath);
  v3 = swift_getKeyPath();
  *(_QWORD *)(v0 + 48) = OUTLINED_FUNCTION_19_4(v3);
  OUTLINED_FUNCTION_18();
}

uint64_t key path setter for ShareCardViewModel.$screenCaptured : ShareCardViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  return (*(uint64_t (**)(char *))(**(_QWORD **)a2 + 552))(v6);
}

uint64_t ShareCardViewModel.$screenCaptured.getter()
{
  return ShareCardViewModel.$shouldShowEndActivity.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit18ShareCardViewModel__screenCaptured, (uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
}

uint64_t ShareCardViewModel.$shouldShowEndActivity.getter(uint64_t a1, uint64_t *a2)
{
  OUTLINED_FUNCTION_60_0();
  __swift_instantiateConcreteTypeFromMangledName(a2);
  Published.projectedValue.getter();
  return swift_endAccess();
}

uint64_t ShareCardViewModel.$screenCaptured.setter(uint64_t a1)
{
  return LinkDetailHeaderView.$invitedMemberHandles.setter(a1, &demangling cache variable for type metadata for Published<Bool>.Publisher, (uint64_t)&OBJC_IVAR____TtC15ConversationKit18ShareCardViewModel__screenCaptured, (uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
}

void ShareCardViewModel.$screenCaptured.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;

  v1 = OUTLINED_FUNCTION_46_17();
  OUTLINED_FUNCTION_35_11((uint64_t)v1);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  *(_QWORD *)(v0 + 48) = OUTLINED_FUNCTION_15_3(v2);
  v3 = OUTLINED_FUNCTION_21_50();
  OUTLINED_FUNCTION_70_13((uint64_t)v3);
  OUTLINED_FUNCTION_7_17();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_18();
}

void ShareCardViewModel.$screenCaptured.modify(uint64_t a1, char a2)
{
  ShareCardViewModel.$shouldShowEndActivity.modify(a1, a2, (void (*)(void *))ShareCardViewModel.$screenCaptured.setter);
}

void ShareCardViewModel.init(didTapScreenShareButton:didTapAskToScreenShareButton:didTapCollaborateButton:didTapEndSharePlay:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  OUTLINED_FUNCTION_93();
  v25 = v2;
  v26 = v3;
  v23 = v4;
  v24 = v5;
  v21 = v6;
  v22 = v7;
  v20 = v8;
  v10 = v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<[Participant]>);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_16_2();
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_77_9();
  swift_unknownObjectWeakInit();
  v14 = (uint64_t)v0 + OBJC_IVAR____TtC15ConversationKit18ShareCardViewModel__shouldShowEndActivity;
  OUTLINED_FUNCTION_36_35();
  OUTLINED_FUNCTION_33_31(v14);
  v15 = (uint64_t)v0 + OBJC_IVAR____TtC15ConversationKit18ShareCardViewModel__shouldShowCollaboration;
  OUTLINED_FUNCTION_36_35();
  OUTLINED_FUNCTION_33_31(v15);
  v16 = (uint64_t)v0 + OBJC_IVAR____TtC15ConversationKit18ShareCardViewModel__isAVLess;
  OUTLINED_FUNCTION_36_35();
  OUTLINED_FUNCTION_33_31(v16);
  v17 = (char *)v0 + OBJC_IVAR____TtC15ConversationKit18ShareCardViewModel__remoteParticipants;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [Participant]);
  Published.init(initialValue:)();
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 32))(v17, v1, v11);
  v18 = (uint64_t)v0 + OBJC_IVAR____TtC15ConversationKit18ShareCardViewModel__screenSharingAvailable;
  OUTLINED_FUNCTION_36_35();
  OUTLINED_FUNCTION_33_31(v18);
  v19 = (uint64_t)v0 + OBJC_IVAR____TtC15ConversationKit18ShareCardViewModel__screenCaptured;
  OUTLINED_FUNCTION_36_35();
  OUTLINED_FUNCTION_33_31(v19);
  v0[3] = v10;
  v0[4] = v20;
  v0[5] = v21;
  v0[6] = v22;
  v0[7] = v23;
  v0[8] = v24;
  v0[9] = v25;
  v0[10] = v26;
  OUTLINED_FUNCTION_52_1();
}

void ShareCardViewModel.configure(with:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (**v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  char v10;
  void (*v11)(_DWORD *, _QWORD);
  void *v12;
  id v13;
  unsigned __int8 v14;
  uint64_t v15;
  id v16;
  id v17;
  _QWORD *v18;
  void (*v19)(_DWORD *, _QWORD);
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  _DWORD v24[8];
  uint64_t v25;

  OUTLINED_FUNCTION_93();
  v3 = v0;
  v4 = type metadata accessor for NSNotificationCenter.Publisher();
  v5 = (void (*)(uint64_t))MEMORY[0x1E0CB1F30];
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_16_2();
  OUTLINED_FUNCTION_15_67();
  v7 = OUTLINED_FUNCTION_13_11(v2[1]);
  OUTLINED_FUNCTION_79_12(v7, *(uint64_t (**)(_QWORD))(*(_QWORD *)v0 + 272));
  OUTLINED_FUNCTION_15_67();
  v8 = OUTLINED_FUNCTION_13_11(v2[2]);
  OUTLINED_FUNCTION_79_12(v8, *(uint64_t (**)(_QWORD))(*(_QWORD *)v0 + 320));
  OUTLINED_FUNCTION_15_67();
  v9 = OUTLINED_FUNCTION_13_11(v2[4]);
  (*(void (**)(uint64_t))(*(_QWORD *)v0 + 432))(v9);
  OUTLINED_FUNCTION_15_67();
  v10 = OUTLINED_FUNCTION_13_11(v2[5]);
  OUTLINED_FUNCTION_79_12(v10, *(uint64_t (**)(_QWORD))(*(_QWORD *)v0 + 376));
  OUTLINED_FUNCTION_15_67();
  v25 = OUTLINED_FUNCTION_13_11(v2[3]);
  v11 = (void (*)(_DWORD *, _QWORD))OUTLINED_FUNCTION_112_6(*(uint64_t (**)(uint64_t))(*(_QWORD *)v0 + 512));
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnyPublisher<Bool, Never>);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type AnyPublisher<Bool, Never> and conformance AnyPublisher<A, B>, &demangling cache variable for type metadata for AnyPublisher<Bool, Never>);
  Publisher<>.assign(to:)();
  swift_release();
  v11(v24, 0);
  v12 = (void *)*MEMORY[0x1E0DC5340];
  v13 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
  v14 = objc_msgSend(v13, sel_isCaptured);

  LOBYTE(v24[0]) = v14;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CurrentValueSubject<Bool, Never>);
  swift_allocObject();
  v15 = CurrentValueSubject.init(_:)();
  v16 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  v17 = v12;
  OUTLINED_FUNCTION_117_6();
  v18 = (_QWORD *)OUTLINED_FUNCTION_1_13();
  v18[2] = v15;
  v18[3] = closure #1 in ShareCardViewModel.configure(with:);
  v18[4] = 0;
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type NSNotificationCenter.Publisher and conformance NSNotificationCenter.Publisher, v5);
  swift_retain();
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v4);
  OUTLINED_FUNCTION_43();
  v25 = v15;
  v19 = (void (*)(_DWORD *, _QWORD))OUTLINED_FUNCTION_112_6(*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 560));
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(lazy protocol witness table cache variable for type CurrentValueSubject<Bool, Never> and conformance CurrentValueSubject<A, B>, &demangling cache variable for type metadata for CurrentValueSubject<Bool, Never>);
  Publisher<>.assign(to:)();
  swift_release();
  v19(v24, 0);
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v20 = type metadata accessor for Logger();
  __swift_project_value_buffer(v20, (uint64_t)&static Logger.conversationControls);
  swift_retain();
  v21 = Logger.logObject.getter();
  v22 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v23 = 67109120;
    LOBYTE(v24[0]) = (*(uint64_t (**)(void))(*(_QWORD *)v3 + 360))() & 1;
    v24[0] = LOBYTE(v24[0]);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_19();
    _os_log_impl(&dword_1BD004000, v21, v22, "ShareCardControlsView: shareScreenEnabled: %{BOOL}d", v23, 8u);
    MEMORY[0x1C3B751B8](v23, -1, -1);

  }
  else
  {

    OUTLINED_FUNCTION_19();
  }
  OUTLINED_FUNCTION_52_1();
}

void closure #1 in ShareCardViewModel.configure(with:)(unsigned __int8 *a1@<X8>)
{
  id v2;
  unsigned __int8 v3;

  v2 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
  v3 = objc_msgSend(v2, sel_isCaptured);

  *a1 = v3;
}

void ShareCardViewModel.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  swift_unknownObjectWeakDestroy();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v1 = v0 + OBJC_IVAR____TtC15ConversationKit18ShareCardViewModel__shouldShowEndActivity;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  OUTLINED_FUNCTION_52_24(OBJC_IVAR____TtC15ConversationKit18ShareCardViewModel__shouldShowCollaboration);
  OUTLINED_FUNCTION_52_24(OBJC_IVAR____TtC15ConversationKit18ShareCardViewModel__isAVLess);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<[Participant]>);
  OUTLINED_FUNCTION_17_1(v3);
  OUTLINED_FUNCTION_52_24(OBJC_IVAR____TtC15ConversationKit18ShareCardViewModel__screenSharingAvailable);
  OUTLINED_FUNCTION_52_24(OBJC_IVAR____TtC15ConversationKit18ShareCardViewModel__screenCaptured);
  OUTLINED_FUNCTION_18();
}

uint64_t ShareCardViewModel.__deallocating_deinit()
{
  ShareCardViewModel.deinit();
  return swift_deallocClassInstance();
}

uint64_t protocol witness for ObservableObject.objectWillChange.getter in conformance ShareCardViewModel@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for ShareCardViewModel(0);
  result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

id ConversationControlsManager.shouldShowEndActivity.getter()
{
  _QWORD *v0;
  id v1;
  uint64_t v2;
  void *v3;
  void *v4;
  _QWORD v6[3];
  void *v7;
  uint64_t v8;

  (*(void (**)(_QWORD *__return_ptr))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x8C8))(v6);
  v1 = v7;
  if (v7)
  {
    v2 = v8;
    __swift_project_boxed_opaque_existential_1(v6, (uint64_t)v7);
    v3 = (void *)(*(uint64_t (**)(id, uint64_t))(v2 + 104))(v1, v2);
    if (v3)
    {
      v4 = v3;
      v1 = objc_msgSend(v3, sel_shouldShowEndActivity);

      __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
      return 0;
    }
  }
  else
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v6, &demangling cache variable for type metadata for Activity?);
  }
  return v1;
}

uint64_t ConversationControlsManager.shouldShowCollaboration.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  char v10;
  char v11;
  uint64_t v13;

  type metadata accessor for ConversationControlsAppLaunchButtonType(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_79();
  v4 = v2 - v3;
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v13 - v7;
  (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x930))(v6);
  swift_storeEnumTagMultiPayload();
  static ConversationControlsAppLaunchButtonType.== infix(_:_:)((uint64_t)v8, v4);
  v10 = v9;
  outlined destroy of AccountUpdateNotice(v4, type metadata accessor for ConversationControlsAppLaunchButtonType);
  outlined destroy of AccountUpdateNotice((uint64_t)v8, type metadata accessor for ConversationControlsAppLaunchButtonType);
  if ((v10 & 1) != 0)
    v11 = ConversationControlsManager.shouldShowEndActivity.getter() ^ 1;
  else
    v11 = 0;
  return v11 & 1;
}

unint64_t protocol witness for ShareCardViewModelProviding.shouldShowEndActivity.getter in conformance ConversationControlsManager()
{
  return (unint64_t)ConversationControlsManager.shouldShowEndActivity.getter() & 1;
}

uint64_t protocol witness for ShareCardViewModelProviding.shouldShowCollaboration.getter in conformance ConversationControlsManager()
{
  return ConversationControlsManager.shouldShowCollaboration.getter() & 1;
}

BOOL @objc TUConversationActivitySession.shouldShowEndActivity.getter(void *a1)
{
  id v1;
  BOOL v2;

  v1 = a1;
  v2 = TUConversationActivitySession.shouldShowEndActivity.getter();

  return v2;
}

BOOL TUConversationActivitySession.shouldShowEndActivity.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_state) == (id)1
      && TUConversationActivitySession.generateType.getter() != 6;
}

uint64_t ShareCardControlsView.shareCardViewModel.getter()
{
  return ShareCardControlsView.shareCardViewModel.getter();
}

{
  uint64_t v0;
  uint64_t (*v2)(uint64_t);

  OUTLINED_FUNCTION_113_6();
  type metadata accessor for ShareCardViewModel(0);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type ShareCardViewModel and conformance ShareCardViewModel, (void (*)(uint64_t))type metadata accessor for ShareCardViewModel);
  v0 = OUTLINED_FUNCTION_50();
  return v2(v0);
}

uint64_t ShareCardControlsView.$shareCardViewModel.getter()
{
  return ShareCardControlsView.shareCardViewModel.getter();
}

void button #1 (title:) in ShareCardControlsView.shareScreenButton(tightLayout:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t KeyPath;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;

  v29 = a4;
  v23 = a3;
  v28 = a1;
  v30 = a5;
  v6 = type metadata accessor for ShareCardControlsView(0);
  v24 = *(_QWORD *)(v6 - 8);
  v7 = *(_QWORD *)(v24 + 64);
  MEMORY[0x1E0C80A78](v6);
  v27 = type metadata accessor for ShareCardButton(0);
  MEMORY[0x1E0C80A78](v27);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for ShareCardViewModel(0);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type ShareCardViewModel and conformance ShareCardViewModel, (void (*)(uint64_t))type metadata accessor for ShareCardViewModel);
  v25 = v10;
  swift_bridgeObjectRetain();
  v11 = StateObject.wrappedValue.getter();
  v12 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 240))(v11);
  v14 = v13;
  swift_release();
  outlined init with copy of ConversationControlsAppLaunchButtonType(v23, (uint64_t)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ShareCardControlsView);
  v15 = (*(unsigned __int8 *)(v24 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  v16 = swift_allocObject();
  outlined init with take of StagedCollaboration((uint64_t)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15, type metadata accessor for ShareCardControlsView);
  *(_QWORD *)v9 = v28;
  *((_QWORD *)v9 + 1) = a2;
  *((_QWORD *)v9 + 2) = 0;
  *((_QWORD *)v9 + 3) = 0;
  *((_QWORD *)v9 + 4) = v12;
  *((_QWORD *)v9 + 5) = v14;
  v9[48] = v29;
  *((_QWORD *)v9 + 7) = partial apply for closure #1 in button #1 (title:) in ShareCardControlsView.shareScreenButton(tightLayout:);
  *((_QWORD *)v9 + 8) = v16;
  v17 = (uint64_t *)&v9[*(int *)(v27 + 36)];
  *v17 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  swift_storeEnumTagMultiPayload();
  v18 = StateObject.wrappedValue.getter();
  LOBYTE(v17) = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v18 + 360))(v18);
  swift_release();
  KeyPath = swift_getKeyPath();
  v20 = swift_allocObject();
  *(_BYTE *)(v20 + 16) = (v17 & 1) == 0;
  v21 = v30;
  outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v9, v30, type metadata accessor for ShareCardButton);
  v22 = (uint64_t *)(v21
                  + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)
                           + 36));
  *v22 = KeyPath;
  v22[1] = (uint64_t)closure #1 in View.disabled(_:)partial apply;
  v22[2] = v20;
  outlined destroy of AccountUpdateNotice((uint64_t)v9, type metadata accessor for ShareCardButton);
}

uint64_t closure #1 in button #1 (title:) in ShareCardControlsView.shareScreenButton(tightLayout:)()
{
  void (*v0)(uint64_t);
  uint64_t v1;

  type metadata accessor for ShareCardControlsView(0);
  type metadata accessor for ShareCardViewModel(0);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type ShareCardViewModel and conformance ShareCardViewModel, (void (*)(uint64_t))type metadata accessor for ShareCardViewModel);
  v0 = *(void (**)(uint64_t))(StateObject.wrappedValue.getter() + 24);
  swift_retain();
  v1 = swift_release();
  v0(v1);
  return swift_release();
}

void closure #1 in ShareCardControlsView.shareScreenButton(tightLayout:)(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[2];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v39 = a3;
  v40 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>);
  MEMORY[0x1E0C80A78](v40);
  v34 = (uint64_t)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>.Storage);
  MEMORY[0x1E0C80A78](v36);
  v38 = (uint64_t)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>);
  v7 = MEMORY[0x1E0C80A78](v37);
  v32 = (uint64_t)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v31 = (uint64_t)v30 - v10;
  v11 = MEMORY[0x1E0C80A78](v9);
  v33 = (uint64_t)v30 - v12;
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v30 - v13;
  if (one-time initialization token for shared != -1)
    swift_once();
  v35 = (*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 168))();
  v15 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for ShareCardControlsView(0) + 20) + 8);
  type metadata accessor for ShareCardViewModel(0);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type ShareCardViewModel and conformance ShareCardViewModel, (void (*)(uint64_t))type metadata accessor for ShareCardViewModel);
  v30[1] = v15;
  v16 = StateObject.wrappedValue.getter();
  v17 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 224))(v16);
  v19 = v18;
  swift_release();
  v20 = a2 & 1;
  button #1 (title:) in ShareCardControlsView.shareScreenButton(tightLayout:)(v17, v19, a1, v20, (uint64_t)v14);
  swift_bridgeObjectRelease();
  if ((v35 & 1) != 0)
  {
    outlined init with copy of FeatureEligibility?((uint64_t)v14, v38, &demangling cache variable for type metadata for ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>);
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)> and conformance TupleView<A>, &demangling cache variable for type metadata for TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>);
    _ConditionalContent<>.init(storage:)();
  }
  else
  {
    v21 = StateObject.wrappedValue.getter();
    v22 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v21 + 232))(v21);
    v24 = v23;
    swift_release();
    v25 = v33;
    button #1 (title:) in ShareCardControlsView.shareScreenButton(tightLayout:)(v22, v24, a1, v20, v33);
    swift_bridgeObjectRelease();
    v26 = v31;
    outlined init with copy of FeatureEligibility?((uint64_t)v14, v31, &demangling cache variable for type metadata for ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>);
    v27 = v32;
    outlined init with copy of FeatureEligibility?(v25, v32, &demangling cache variable for type metadata for ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>);
    v28 = v34;
    outlined init with copy of FeatureEligibility?(v26, v34, &demangling cache variable for type metadata for ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>);
    v29 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>));
    outlined init with copy of FeatureEligibility?(v27, v28 + *(int *)(v29 + 48), &demangling cache variable for type metadata for ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v27, &demangling cache variable for type metadata for ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v26, &demangling cache variable for type metadata for ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>);
    outlined init with copy of FeatureEligibility?(v28, v38, &demangling cache variable for type metadata for TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>);
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)> and conformance TupleView<A>, &demangling cache variable for type metadata for TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>);
    _ConditionalContent<>.init(storage:)();
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v28, &demangling cache variable for type metadata for TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v25, &demangling cache variable for type metadata for ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>);
  }
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v14, &demangling cache variable for type metadata for ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>);
}

void ShareCardControlsView.askToShareScreenMenu(participants:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v21 = a2;
  v20 = type metadata accessor for ShareCardMenuButton(0);
  MEMORY[0x1E0C80A78](v20);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ShareCardControlsView(0);
  type metadata accessor for ShareCardViewModel(0);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type ShareCardViewModel and conformance ShareCardViewModel, (void (*)(uint64_t))type metadata accessor for ShareCardViewModel);
  v5 = StateObject.wrappedValue.getter();
  v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 248))(v5);
  v19 = v7;
  swift_release();
  swift_bridgeObjectRetain();
  v8 = StateObject.wrappedValue.getter();
  v10 = *(_QWORD *)(v8 + 40);
  v9 = *(_QWORD *)(v8 + 48);
  swift_retain();
  swift_release();
  v11 = v19;
  *(_QWORD *)v4 = v6;
  *((_QWORD *)v4 + 1) = v11;
  *((_OWORD *)v4 + 1) = 0u;
  *((_OWORD *)v4 + 2) = 0u;
  v4[48] = 1;
  *((_QWORD *)v4 + 7) = a1;
  *((_QWORD *)v4 + 8) = v10;
  *((_QWORD *)v4 + 9) = v9;
  v12 = (uint64_t *)&v4[*(int *)(v20 + 40)];
  *v12 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  swift_storeEnumTagMultiPayload();
  v13 = StateObject.wrappedValue.getter();
  LOBYTE(v12) = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v13 + 416))(v13);
  swift_release();
  KeyPath = swift_getKeyPath();
  v15 = swift_allocObject();
  *(_BYTE *)(v15 + 16) = (v12 & 1) == 0;
  v16 = v21;
  outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v4, v21, type metadata accessor for ShareCardMenuButton);
  v17 = (uint64_t *)(v16
                  + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)
                           + 36));
  *v17 = KeyPath;
  v17[1] = (uint64_t)closure #1 in View.disabled(_:)partial apply;
  v17[2] = v15;
  outlined destroy of AccountUpdateNotice((uint64_t)v4, type metadata accessor for ShareCardMenuButton);
}

void closure #1 in ShareCardControlsView.topShelfButtons(tightLayout:)(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t);
  char *v30;
  unsigned __int8 v31;
  unsigned __int8 v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned __int8 v43;
  unsigned __int8 v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _BYTE *v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;

  v57 = a2;
  v58 = a3;
  v61 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>.Storage);
  MEMORY[0x1E0C80A78](v61);
  v63 = (uint64_t)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>);
  MEMORY[0x1E0C80A78](v62);
  v54 = (uint64_t)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>);
  v7 = MEMORY[0x1E0C80A78](v6);
  v51 = (uint64_t)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v53 = (uint64_t)&v49 - v9;
  v60 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>);
  v10 = MEMORY[0x1E0C80A78](v60);
  v55 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v10);
  v56 = (uint64_t)&v49 - v13;
  v14 = MEMORY[0x1E0C80A78](v12);
  v50 = (uint64_t)&v49 - v15;
  v16 = MEMORY[0x1E0C80A78](v14);
  v49 = (char *)&v49 - v17;
  MEMORY[0x1E0C80A78](v16);
  v52 = (uint64_t)&v49 - v18;
  v65 = type metadata accessor for Participant.State(0);
  MEMORY[0x1E0C80A78](v65);
  v20 = (char *)&v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for Participant(0);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = MEMORY[0x1E0C80A78](v21);
  v66 = (char *)&v49 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v26 = (char *)&v49 - v25;
  type metadata accessor for ShareCardControlsView(0);
  v59 = a1;
  type metadata accessor for ShareCardViewModel(0);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type ShareCardViewModel and conformance ShareCardViewModel, (void (*)(uint64_t))type metadata accessor for ShareCardViewModel);
  v27 = StateObject.wrappedValue.getter();
  v28 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v27 + 424))(v27);
  swift_release();
  v29 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEE9D8];
  v67 = MEMORY[0x1E0DEE9D8];
  if (*(_QWORD *)(v28 + 16))
  {
    v29 = type metadata accessor for Participant;
    v64 = *(_QWORD *)(v28 + 16);
    if (*(_QWORD *)(v28 + 16))
    {
      outlined init with copy of ConversationControlsAppLaunchButtonType(v28 + ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80)), (uint64_t)v26, type metadata accessor for Participant);
      outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v26, (uint64_t)v20, type metadata accessor for Participant.State);
      v30 = (char *)&loc_1BD23E448 + *((int *)qword_1BD23E918 + swift_getEnumCaseMultiPayload());
      __asm { BR              X9 }
    }
    __break(1u);
    goto LABEL_19;
  }
  swift_bridgeObjectRelease();
  if (one-time initialization token for shared != -1)
LABEL_19:
    swift_once();
  if (((*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 168))() & 1) != 0 && *((_QWORD *)v29 + 2))
  {
    v31 = static Axis.Set.horizontal.getter();
    v32 = static Axis.Set.vertical.getter();
    v33 = Axis.Set.init(rawValue:)();
    Axis.Set.init(rawValue:)();
    if (Axis.Set.init(rawValue:)() != v31)
      v33 = Axis.Set.init(rawValue:)();
    Axis.Set.init(rawValue:)();
    if (Axis.Set.init(rawValue:)() != v32)
      v33 = Axis.Set.init(rawValue:)();
    v34 = (uint64_t)v49;
    *v49 = v33;
    v35 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_SizeFittingRoot, _ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>);
    closure #1 in ShareCardControlsView.shareScreenButton(tightLayout:)(v59, 0, v34 + *(int *)(v35 + 44));
    v36 = v52;
    outlined init with take of Any?(v34, v52, &demangling cache variable for type metadata for ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>);
    v37 = v53;
    ShareCardControlsView.askToShareScreenMenu(participants:)((uint64_t)v29, v53);
    swift_release();
    v38 = v50;
    outlined init with copy of FeatureEligibility?(v36, v50, &demangling cache variable for type metadata for ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>);
    v39 = v51;
    outlined init with copy of FeatureEligibility?(v37, v51, &demangling cache variable for type metadata for ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>);
    v40 = v54;
    outlined init with copy of FeatureEligibility?(v38, v54, &demangling cache variable for type metadata for ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>);
    v41 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>));
    outlined init with copy of FeatureEligibility?(v39, v40 + *(int *)(v41 + 48), &demangling cache variable for type metadata for ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v39, &demangling cache variable for type metadata for ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v38, &demangling cache variable for type metadata for ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>);
    outlined init with copy of FeatureEligibility?(v40, v63, &demangling cache variable for type metadata for TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>);
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)> and conformance TupleView<A>, &demangling cache variable for type metadata for TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>> and conformance ViewThatFits<A>, &demangling cache variable for type metadata for ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>);
    _ConditionalContent<>.init(storage:)();
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v40, &demangling cache variable for type metadata for TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v37, &demangling cache variable for type metadata for ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>);
    v42 = v36;
  }
  else
  {
    swift_release();
    v43 = static Axis.Set.horizontal.getter();
    v44 = static Axis.Set.vertical.getter();
    v45 = Axis.Set.init(rawValue:)();
    Axis.Set.init(rawValue:)();
    if (Axis.Set.init(rawValue:)() != v43)
      v45 = Axis.Set.init(rawValue:)();
    Axis.Set.init(rawValue:)();
    if (Axis.Set.init(rawValue:)() != v44)
      v45 = Axis.Set.init(rawValue:)();
    v46 = (uint64_t)v55;
    *v55 = v45;
    v47 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_SizeFittingRoot, _ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>);
    closure #1 in ShareCardControlsView.shareScreenButton(tightLayout:)(v59, v57 & 1, v46 + *(int *)(v47 + 44));
    v48 = v56;
    outlined init with take of Any?(v46, v56, &demangling cache variable for type metadata for ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>);
    outlined init with copy of FeatureEligibility?(v48, v63, &demangling cache variable for type metadata for ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>);
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)> and conformance TupleView<A>, &demangling cache variable for type metadata for TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>> and conformance ViewThatFits<A>, &demangling cache variable for type metadata for ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>);
    _ConditionalContent<>.init(storage:)();
    v42 = v48;
  }
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v42, &demangling cache variable for type metadata for ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>);
}

uint64_t closure #1 in ShareCardControlsView.collaborateButton.getter()
{
  void (*v0)(uint64_t);
  uint64_t v1;

  type metadata accessor for ShareCardControlsView(0);
  type metadata accessor for ShareCardViewModel(0);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type ShareCardViewModel and conformance ShareCardViewModel, (void (*)(uint64_t))type metadata accessor for ShareCardViewModel);
  v0 = *(void (**)(uint64_t))(StateObject.wrappedValue.getter() + 56);
  swift_retain();
  v1 = swift_release();
  v0(v1);
  return swift_release();
}

uint64_t closure #1 in ShareCardControlsView.endSharePlayButton.getter()
{
  void (*v0)(uint64_t);
  uint64_t v1;

  type metadata accessor for ShareCardControlsView(0);
  type metadata accessor for ShareCardViewModel(0);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type ShareCardViewModel and conformance ShareCardViewModel, (void (*)(uint64_t))type metadata accessor for ShareCardViewModel);
  v0 = *(void (**)(uint64_t))(StateObject.wrappedValue.getter() + 72);
  swift_retain();
  v1 = swift_release();
  v0(v1);
  return swift_release();
}

void closure #1 in ShareCardControlsView.buttons.getter(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;

  v73 = a2;
  v70 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<_ConditionalContent<TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>, ShareCardButton)>, TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, Modifi);
  MEMORY[0x1E0C80A78](v70);
  v72 = (uint64_t)&v56 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>, ShareCardButton)>, TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardB);
  MEMORY[0x1E0C80A78](v64);
  v67 = (uint64_t)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>, ShareCardButton)>);
  MEMORY[0x1E0C80A78](v65);
  v66 = (uint64_t)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>, ShareCardButton)>, TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardB);
  MEMORY[0x1E0C80A78](v71);
  v68 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ShareCardControlsView(0);
  v58 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v59 = v8;
  v60 = (uint64_t)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = type metadata accessor for ShareCardButton(0);
  v9 = MEMORY[0x1E0C80A78](v61);
  v63 = (uint64_t)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v56 - v11;
  v69 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>);
  v13 = MEMORY[0x1E0C80A78](v69);
  v62 = (uint64_t)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v56 - v15;
  type metadata accessor for ShareCardViewModel(0);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type ShareCardViewModel and conformance ShareCardViewModel, (void (*)(uint64_t))type metadata accessor for ShareCardViewModel);
  v17 = StateObject.wrappedValue.getter();
  v18 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v17 + 264))(v17);
  swift_release();
  if ((v18 & 1) != 0)
  {
    v57 = v16;
    closure #1 in ShareCardControlsView.topShelfButtons(tightLayout:)(a1, 1, (uint64_t)v16);
    v19 = StateObject.wrappedValue.getter();
    v20 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v19 + 208))(v19);
    v22 = v21;
    swift_release();
    v23 = StateObject.wrappedValue.getter();
    v24 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v23 + 216))(v23);
    v26 = v25;
    swift_release();
    v27 = v60;
    outlined init with copy of ConversationControlsAppLaunchButtonType(a1, v60, type metadata accessor for ShareCardControlsView);
    v28 = (*(unsigned __int8 *)(v58 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
    v29 = swift_allocObject();
    outlined init with take of StagedCollaboration(v27, v29 + v28, type metadata accessor for ShareCardControlsView);
    *(_QWORD *)v12 = v20;
    *((_QWORD *)v12 + 1) = v22;
    *((_QWORD *)v12 + 2) = 0;
    *((_QWORD *)v12 + 3) = 0;
    *((_QWORD *)v12 + 4) = v24;
    *((_QWORD *)v12 + 5) = v26;
    v12[48] = 1;
    *((_QWORD *)v12 + 7) = partial apply for closure #1 in ShareCardControlsView.endSharePlayButton.getter;
    *((_QWORD *)v12 + 8) = v29;
    v30 = (uint64_t *)&v12[*(int *)(v61 + 36)];
    *v30 = swift_getKeyPath();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    swift_storeEnumTagMultiPayload();
    v31 = (uint64_t)v57;
    v32 = v62;
    outlined init with copy of FeatureEligibility?((uint64_t)v57, v62, &demangling cache variable for type metadata for Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>);
    v33 = v63;
    outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v12, v63, type metadata accessor for ShareCardButton);
    v34 = v66;
    outlined init with copy of FeatureEligibility?(v32, v66, &demangling cache variable for type metadata for Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>);
    v35 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>, ShareCardButton));
    outlined init with copy of ConversationControlsAppLaunchButtonType(v33, v34 + *(int *)(v35 + 48), type metadata accessor for ShareCardButton);
    outlined destroy of AccountUpdateNotice(v33, type metadata accessor for ShareCardButton);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v32, &demangling cache variable for type metadata for Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>);
    outlined init with copy of FeatureEligibility?(v34, v67, &demangling cache variable for type metadata for TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>, ShareCardButton)>);
  }
  else
  {
    v36 = (uint64_t)v16;
    v37 = StateObject.wrappedValue.getter();
    v38 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v37 + 312))(v37);
    swift_release();
    if ((v38 & 1) == 0)
    {
      v31 = v36;
      closure #1 in ShareCardControlsView.topShelfButtons(tightLayout:)(a1, 0, v36);
      outlined init with copy of FeatureEligibility?(v36, v72, &demangling cache variable for type metadata for Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>);
      swift_storeEnumTagMultiPayload();
      lazy protocol witness table accessor for type _ConditionalContent<TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>, ShareCardButton)>, TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardBut();
      lazy protocol witness table accessor for type ForEach<[Participant], Participant, ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>> and conformance <> ForEach<A, B, C>(&lazy protocol witness table cache variable for type Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>> and conformance <A> Group<A>, &demangling cache variable for type metadata for Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>, (uint64_t (*)(void))lazy protocol witness table accessor for type _ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>> and conformance <> _ConditionalContent<A, B>, MEMORY[0x1E0CDF690]);
      _ConditionalContent<>.init(storage:)();
      goto LABEL_7;
    }
    v39 = v36;
    closure #1 in ShareCardControlsView.topShelfButtons(tightLayout:)(a1, 1, v36);
    v40 = StateObject.wrappedValue.getter();
    v56 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v40 + 192))(v40);
    v42 = v41;
    swift_release();
    v43 = StateObject.wrappedValue.getter();
    v44 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v43 + 200))(v43);
    v46 = v45;
    swift_release();
    v47 = v60;
    outlined init with copy of ConversationControlsAppLaunchButtonType(a1, v60, type metadata accessor for ShareCardControlsView);
    v48 = (*(unsigned __int8 *)(v58 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
    v49 = swift_allocObject();
    v50 = v49 + v48;
    v31 = v39;
    outlined init with take of StagedCollaboration(v47, v50, type metadata accessor for ShareCardControlsView);
    *(_QWORD *)v12 = v56;
    *((_QWORD *)v12 + 1) = v42;
    *((_QWORD *)v12 + 2) = 0;
    *((_QWORD *)v12 + 3) = 0;
    *((_QWORD *)v12 + 4) = v44;
    *((_QWORD *)v12 + 5) = v46;
    v12[48] = 1;
    *((_QWORD *)v12 + 7) = partial apply for closure #1 in ShareCardControlsView.collaborateButton.getter;
    *((_QWORD *)v12 + 8) = v49;
    v51 = (uint64_t *)&v12[*(int *)(v61 + 36)];
    *v51 = swift_getKeyPath();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    swift_storeEnumTagMultiPayload();
    v52 = v62;
    outlined init with copy of FeatureEligibility?(v39, v62, &demangling cache variable for type metadata for Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>);
    v53 = v63;
    outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v12, v63, type metadata accessor for ShareCardButton);
    v34 = v66;
    outlined init with copy of FeatureEligibility?(v52, v66, &demangling cache variable for type metadata for Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>);
    v54 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>, ShareCardButton));
    outlined init with copy of ConversationControlsAppLaunchButtonType(v53, v34 + *(int *)(v54 + 48), type metadata accessor for ShareCardButton);
    outlined destroy of AccountUpdateNotice(v53, type metadata accessor for ShareCardButton);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v52, &demangling cache variable for type metadata for Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>);
    outlined init with copy of FeatureEligibility?(v34, v67, &demangling cache variable for type metadata for TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>, ShareCardButton)>);
  }
  swift_storeEnumTagMultiPayload();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>, ShareCardButton)> and conformance TupleView<A>, &demangling cache variable for type metadata for TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>, ShareCardButton)>);
  v55 = (uint64_t)v68;
  _ConditionalContent<>.init(storage:)();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v34, &demangling cache variable for type metadata for TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>, ShareCardButton)>);
  outlined init with copy of FeatureEligibility?(v55, v72, &demangling cache variable for type metadata for _ConditionalContent<TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>, ShareCardButton)>, TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardB);
  swift_storeEnumTagMultiPayload();
  lazy protocol witness table accessor for type _ConditionalContent<TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>, ShareCardButton)>, TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardBut();
  lazy protocol witness table accessor for type ForEach<[Participant], Participant, ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>> and conformance <> ForEach<A, B, C>(&lazy protocol witness table cache variable for type Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>> and conformance <A> Group<A>, &demangling cache variable for type metadata for Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>, (uint64_t (*)(void))lazy protocol witness table accessor for type _ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>> and conformance <> _ConditionalContent<A, B>, MEMORY[0x1E0CDF690]);
  _ConditionalContent<>.init(storage:)();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v55, &demangling cache variable for type metadata for _ConditionalContent<TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>, ShareCardButton)>, TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardB);
  outlined destroy of AccountUpdateNotice((uint64_t)v12, type metadata accessor for ShareCardButton);
LABEL_7:
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v31, &demangling cache variable for type metadata for Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>);
}

void ShareCardControlsView.body.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  *(_QWORD *)a1 = static HorizontalAlignment.leading.getter();
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 0;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_VStackLayout, TupleView<(ViewThatFits<TupleView<(_VariadicView.Tree<_LayoutRoot<SplitHStack>, Group<_ConditionalContent<_ConditionalContent<TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>, ShareCardButton)>, TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _Environment);
  closure #1 in ShareCardControlsView.body.getter(v1, a1 + *(int *)(v3 + 44));
  OUTLINED_FUNCTION_0();
}

void closure #1 in ShareCardControlsView.body.getter(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unsigned __int8 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;

  v56 = a2;
  v58 = type metadata accessor for Font.Leading();
  v55 = *(_QWORD *)(v58 - 8);
  MEMORY[0x1E0C80A78](v58);
  v4 = (char *)&v54 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ViewThatFits<TupleView<(_VariadicView.Tree<_LayoutRoot<SplitHStack>, Group<_ConditionalContent<_ConditionalContent<TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>, ShareCardButton)>, TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(Modif);
  v6 = MEMORY[0x1E0C80A78](v5);
  v57 = (uint64_t)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v54 - v9;
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v54 - v11;
  *v10 = static Axis.Set.horizontal.getter();
  v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_SizeFittingRoot, TupleView<(_VariadicView.Tree<_LayoutRoot<SplitHStack>, Group<_ConditionalContent<_ConditionalContent<TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>, ShareCardButton)>, TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<);
  closure #1 in closure #1 in ShareCardControlsView.body.getter(a1, (uint64_t)&v10[*(int *)(v13 + 44)]);
  v59 = v12;
  outlined init with take of Any?((uint64_t)v10, (uint64_t)v12, &demangling cache variable for type metadata for ViewThatFits<TupleView<(_VariadicView.Tree<_LayoutRoot<SplitHStack>, Group<_ConditionalContent<_ConditionalContent<TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>, ShareCardButton)>, TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(Modif);
  type metadata accessor for ShareCardControlsView(0);
  type metadata accessor for ShareCardViewModel(0);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type ShareCardViewModel and conformance ShareCardViewModel, (void (*)(uint64_t))type metadata accessor for ShareCardViewModel);
  v14 = StateObject.wrappedValue.getter();
  v15 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v14 + 256))(v14);
  v17 = v16;
  swift_release();
  if (!v17)
  {
    v58 = 0;
    v34 = 0;
    v49 = 0;
    v48 = 0;
    v47 = 0;
LABEL_8:
    v43 = 0;
    v45 = 0;
    v55 = 0;
    goto LABEL_9;
  }
  v18 = StateObject.wrappedValue.getter();
  v19 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v18 + 312))(v18);
  swift_release();
  if ((v19 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    v58 = 0;
    v34 = 0;
    v49 = 0;
    v48 = 0;
    v47 = 0;
    v17 = 0;
    goto LABEL_8;
  }
  v60 = v15;
  v61 = v17;
  lazy protocol witness table accessor for type String and conformance String();
  v20 = Text.init<A>(_:)();
  v22 = v21;
  v24 = v23 & 1;
  static Font.caption.getter();
  v25 = v55;
  v26 = v58;
  (*(void (**)(char *, _QWORD, uint64_t))(v55 + 104))(v4, *MEMORY[0x1E0CDD6D8], v58);
  Font.leading(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v4, v26);
  v27 = Text.font(_:)();
  v29 = v28;
  v31 = v30;
  swift_release();
  v32 = v31 & 1;
  outlined consume of Text.Storage(v20, v22, v24);
  swift_bridgeObjectRelease();
  static Color.secondary.getter();
  v58 = Text.foregroundColor(_:)();
  v34 = v33;
  v36 = v35;
  v38 = v37;
  swift_release();
  v39 = v36 & 1;
  outlined consume of Text.Storage(v27, v29, v32);
  swift_bridgeObjectRelease();
  v40 = static Edge.Set.top.getter();
  if (one-time initialization token for collaborateSubtitleBuffer != -1)
    swift_once();
  EdgeInsets.init(_all:)();
  v17 = v41;
  v43 = v42;
  v45 = v44;
  v55 = v46;
  v47 = v40;
  v48 = v38;
  v49 = v39;
LABEL_9:
  v50 = v57;
  outlined init with copy of FeatureEligibility?((uint64_t)v59, v57, &demangling cache variable for type metadata for ViewThatFits<TupleView<(_VariadicView.Tree<_LayoutRoot<SplitHStack>, Group<_ConditionalContent<_ConditionalContent<TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>, ShareCardButton)>, TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(Modif);
  v51 = v56;
  outlined init with copy of FeatureEligibility?(v50, v56, &demangling cache variable for type metadata for ViewThatFits<TupleView<(_VariadicView.Tree<_LayoutRoot<SplitHStack>, Group<_ConditionalContent<_ConditionalContent<TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>, ShareCardButton)>, TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(Modif);
  v52 = v51
      + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ViewThatFits<TupleView<(_VariadicView.Tree<_LayoutRoot<SplitHStack>, Group<_ConditionalContent<_ConditionalContent<TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>, ShareCardButton)>, TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(Modi)
               + 48);
  v53 = v58;
  *(_QWORD *)v52 = v58;
  *(_QWORD *)(v52 + 8) = v34;
  *(_QWORD *)(v52 + 16) = v49;
  *(_QWORD *)(v52 + 24) = v48;
  *(_QWORD *)(v52 + 32) = v47;
  *(_QWORD *)(v52 + 40) = v17;
  *(_QWORD *)(v52 + 48) = v43;
  *(_QWORD *)(v52 + 56) = v45;
  *(_QWORD *)(v52 + 64) = v55;
  *(_BYTE *)(v52 + 72) = 0;
  outlined copy of Text?(v53, v34, v49, v48);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v59, &demangling cache variable for type metadata for ViewThatFits<TupleView<(_VariadicView.Tree<_LayoutRoot<SplitHStack>, Group<_ConditionalContent<_ConditionalContent<TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>, ShareCardButton)>, TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(Modif);
  outlined consume of Text?(v53, v34, v49, v48);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v50, &demangling cache variable for type metadata for ViewThatFits<TupleView<(_VariadicView.Tree<_LayoutRoot<SplitHStack>, Group<_ConditionalContent<_ConditionalContent<TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>, ShareCardButton)>, TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(Modif);
}

void closure #1 in closure #1 in ShareCardControlsView.body.getter(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VStack<Group<_ConditionalContent<_ConditionalContent<TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>, ShareCardButton)>, TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<B);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v18 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_LayoutRoot<SplitHStack>, Group<_ConditionalContent<_ConditionalContent<TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>, ShareCardButton)>, TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButt);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v18 - v14;
  closure #1 in ShareCardControlsView.buttons.getter(a1, (uint64_t)&v18 - v14);
  *(_QWORD *)v9 = static HorizontalAlignment.center.getter();
  *((_QWORD *)v9 + 1) = 0;
  v9[16] = 1;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_VStackLayout, Group<_ConditionalContent<_ConditionalContent<TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>, ShareCardButton)>, TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _Enviro);
  closure #1 in ShareCardControlsView.buttons.getter(a1, (uint64_t)&v9[*(int *)(v16 + 44)]);
  outlined init with copy of FeatureEligibility?((uint64_t)v15, (uint64_t)v13, &demangling cache variable for type metadata for _VariadicView.Tree<_LayoutRoot<SplitHStack>, Group<_ConditionalContent<_ConditionalContent<TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>, ShareCardButton)>, TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButt);
  outlined init with copy of FeatureEligibility?((uint64_t)v9, (uint64_t)v7, &demangling cache variable for type metadata for VStack<Group<_ConditionalContent<_ConditionalContent<TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>, ShareCardButton)>, TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<B);
  outlined init with copy of FeatureEligibility?((uint64_t)v13, a2, &demangling cache variable for type metadata for _VariadicView.Tree<_LayoutRoot<SplitHStack>, Group<_ConditionalContent<_ConditionalContent<TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>, ShareCardButton)>, TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButt);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (_VariadicView.Tree<_LayoutRoot<SplitHStack>, Group<_ConditionalContent<_ConditionalContent<TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>, ShareCardButton)>, TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardBut);
  outlined init with copy of FeatureEligibility?((uint64_t)v7, a2 + *(int *)(v17 + 48), &demangling cache variable for type metadata for VStack<Group<_ConditionalContent<_ConditionalContent<TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>, ShareCardButton)>, TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<B);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v9, &demangling cache variable for type metadata for VStack<Group<_ConditionalContent<_ConditionalContent<TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>, ShareCardButton)>, TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<B);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v15, &demangling cache variable for type metadata for _VariadicView.Tree<_LayoutRoot<SplitHStack>, Group<_ConditionalContent<_ConditionalContent<TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>, ShareCardButton)>, TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButt);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v7, &demangling cache variable for type metadata for VStack<Group<_ConditionalContent<_ConditionalContent<TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>, ShareCardButton)>, TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<B);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v13, &demangling cache variable for type metadata for _VariadicView.Tree<_LayoutRoot<SplitHStack>, Group<_ConditionalContent<_ConditionalContent<TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>, ShareCardButton)>, TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButt);
}

uint64_t type metadata accessor for ShareCardControlsView(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for ShareCardControlsView);
}

uint64_t type metadata accessor for ShareCardButton(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for ShareCardButton);
}

uint64_t sub_1BD23F950()
{
  uint64_t v0;

  OUTLINED_FUNCTION_85_10();
  OUTLINED_FUNCTION_34_25();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  if (OUTLINED_FUNCTION_109() == 1)
  {
    v0 = OUTLINED_FUNCTION_105_5();
    OUTLINED_FUNCTION_17_1(v0);
  }
  else
  {
    swift_release();
  }
  return OUTLINED_FUNCTION_6_10();
}

void partial apply for closure #1 in ShareCardButton.body.getter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_85_10();
  OUTLINED_FUNCTION_49_3();
  (*(void (**)(void))(v0 + v1 + 56))();
  OUTLINED_FUNCTION_0();
}

void partial apply for closure #2 in ShareCardButton.body.getter(uint64_t a1@<X8>)
{
  closure #2 in ShareCardButton.body.getter(a1);
}

unint64_t lazy protocol witness table accessor for type ShareCardButtonStyle and conformance ShareCardButtonStyle()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ShareCardButtonStyle and conformance ShareCardButtonStyle;
  if (!lazy protocol witness table cache variable for type ShareCardButtonStyle and conformance ShareCardButtonStyle)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ShareCardButtonStyle, &type metadata for ShareCardButtonStyle);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ShareCardButtonStyle and conformance ShareCardButtonStyle);
  }
  return result;
}

uint64_t type metadata accessor for ShareCardMenuButton(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for ShareCardMenuButton);
}

uint64_t partial apply for closure #3 in ShareCardMenuButton.body.getter()
{
  uint64_t v0;

  return closure #3 in ShareCardMenuButton.body.getter(*(_QWORD *)(v0 + 16));
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Button<Text> and conformance Button<A>, &demangling cache variable for type metadata for Button<Text>);
    v3 = v2;
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyTransformModifier<Bool> and conformance _EnvironmentKeyTransformModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyTransformModifier<Bool>);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v5);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

void ShareCardButtonStyle.makeBody(configuration:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t KeyPath;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  OUTLINED_FUNCTION_93();
  v43 = *(_QWORD *)(OUTLINED_FUNCTION_66_16(v3, v4, v5, v6) - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v7);
  v41 = *(_QWORD *)(OUTLINED_FUNCTION_43_34(v8, v35) - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_42_30(v10, v36);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_76_2();
  type metadata accessor for PrimitiveButtonStyleConfiguration();
  OUTLINED_FUNCTION_119_0();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_4_1();
  v39 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<PrimitiveButtonStyleConfiguration.Label>)
                  - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_78();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.buttonStyle<A>(_:)>>.0);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_81();
  v37 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_16_2();
  v40 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_6_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_78_11(v18, v37);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v19);
  OUTLINED_FUNCTION_11_2();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>>, _EnvironmentKeyWritingModifier<Color?>>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v20);
  OUTLINED_FUNCTION_27_36(v21, v38);
  Button<>.init(_:)();
  BorderedProminentButtonStyle.init()();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Button<PrimitiveButtonStyleConfiguration.Label> and conformance Button<A>, &demangling cache variable for type metadata for Button<PrimitiveButtonStyleConfiguration.Label>);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type BorderedProminentButtonStyle and conformance BorderedProminentButtonStyle, (void (*)(uint64_t))MEMORY[0x1E0CDCDC0]);
  OUTLINED_FUNCTION_40_30();
  OUTLINED_FUNCTION_73_9();
  OUTLINED_FUNCTION_48_27(v39);
  OUTLINED_FUNCTION_54_26(*MEMORY[0x1E0CD8740], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v41 + 104));
  swift_getKeyPath();
  OUTLINED_FUNCTION_92_8();
  v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<ControlSize>);
  OUTLINED_FUNCTION_59_19(v22);
  OUTLINED_FUNCTION_53_25();
  OUTLINED_FUNCTION_30_42();
  OUTLINED_FUNCTION_95_9();
  static Font.body.getter();
  OUTLINED_FUNCTION_54_26(*MEMORY[0x1E0CDD6D8], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v43 + 104));
  v23 = OUTLINED_FUNCTION_123_4();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_30_42();
  KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_61_10(v0, v2);
  v25 = (uint64_t *)(v2 + *(int *)(v40 + 36));
  *v25 = KeyPath;
  v25[1] = v23;
  OUTLINED_FUNCTION_25_0(v0);
  swift_getKeyPath();
  v26 = OUTLINED_FUNCTION_115_5();
  OUTLINED_FUNCTION_61_10(v26, v27);
  OUTLINED_FUNCTION_37_34();
  v28 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
  v29 = objc_msgSend(v28, sel_colorWithAlphaComponent_, 0.8);

  LOBYTE(v28) = MEMORY[0x1C3B7262C](v29);
  v30 = swift_getKeyPath();
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  v31 = AnyShapeStyle.init<A>(_:)();
  OUTLINED_FUNCTION_61_10(v43, v1);
  OUTLINED_FUNCTION_43();
  v32 = (uint64_t *)(v1 + *(int *)(v42 + 36));
  *v32 = v30;
  v32[1] = v31;
  OUTLINED_FUNCTION_25_0(v43);
  OUTLINED_FUNCTION_49_29();
  OUTLINED_FUNCTION_101_8();
  if ((v28 & 1) != 0)
    static Color.black.getter();
  else
    static Color.secondary.getter();
  swift_getKeyPath();
  OUTLINED_FUNCTION_75_9();
  OUTLINED_FUNCTION_56_24();
  OUTLINED_FUNCTION_124_5(v33, v34, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>>, _EnvironmentKeyWritingModifier<Color?>>);
  OUTLINED_FUNCTION_52_1();
}

void protocol witness for PrimitiveButtonStyle.makeBody(configuration:) in conformance ShareCardButtonStyle()
{
  ShareCardButtonStyle.makeBody(configuration:)();
}

uint64_t ShareCardMenuStyle.init()()
{
  return swift_getKeyPath();
}

unint64_t lazy protocol witness table accessor for type ShareCardMenuStyle and conformance ShareCardMenuStyle()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ShareCardMenuStyle and conformance ShareCardMenuStyle;
  if (!lazy protocol witness table cache variable for type ShareCardMenuStyle and conformance ShareCardMenuStyle)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ShareCardMenuStyle, &type metadata for ShareCardMenuStyle);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ShareCardMenuStyle and conformance ShareCardMenuStyle);
  }
  return result;
}

void ShareCardMenuStyle.makeBody(configuration:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t KeyPath;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  OUTLINED_FUNCTION_93();
  v43 = *(_QWORD *)(OUTLINED_FUNCTION_66_16(v3, v4, v5, v6) - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v7);
  v41 = *(_QWORD *)(OUTLINED_FUNCTION_43_34(v8, v35) - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_42_30(v10, v36);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_76_2();
  type metadata accessor for MenuStyleConfiguration();
  OUTLINED_FUNCTION_119_0();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_4_1();
  v39 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Menu<MenuStyleConfiguration.Label, MenuStyleConfiguration.Content>)
                  - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_78();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.buttonStyle<A>(_:)>>.0);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_81();
  v37 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_16_2();
  v40 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_6_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_78_11(v18, v37);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v19);
  OUTLINED_FUNCTION_11_2();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>>, _EnvironmentKeyWritingModifier<Color?>>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v20);
  OUTLINED_FUNCTION_27_36(v21, v38);
  Menu<>.init(_:)();
  BorderedProminentButtonStyle.init()();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Menu<MenuStyleConfiguration.Label, MenuStyleConfiguration.Content> and conformance Menu<A, B>, &demangling cache variable for type metadata for Menu<MenuStyleConfiguration.Label, MenuStyleConfiguration.Content>);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type BorderedProminentButtonStyle and conformance BorderedProminentButtonStyle, (void (*)(uint64_t))MEMORY[0x1E0CDCDC0]);
  OUTLINED_FUNCTION_40_30();
  OUTLINED_FUNCTION_73_9();
  OUTLINED_FUNCTION_48_27(v39);
  OUTLINED_FUNCTION_54_26(*MEMORY[0x1E0CD8740], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v41 + 104));
  swift_getKeyPath();
  OUTLINED_FUNCTION_92_8();
  v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<ControlSize>);
  OUTLINED_FUNCTION_59_19(v22);
  OUTLINED_FUNCTION_53_25();
  OUTLINED_FUNCTION_30_42();
  OUTLINED_FUNCTION_95_9();
  static Font.body.getter();
  OUTLINED_FUNCTION_54_26(*MEMORY[0x1E0CDD6D8], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v43 + 104));
  v23 = OUTLINED_FUNCTION_123_4();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_30_42();
  KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_61_10(v0, v2);
  v25 = (uint64_t *)(v2 + *(int *)(v40 + 36));
  *v25 = KeyPath;
  v25[1] = v23;
  OUTLINED_FUNCTION_25_0(v0);
  swift_getKeyPath();
  v26 = OUTLINED_FUNCTION_115_5();
  OUTLINED_FUNCTION_61_10(v26, v27);
  OUTLINED_FUNCTION_37_34();
  v28 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
  v29 = objc_msgSend(v28, sel_colorWithAlphaComponent_, 0.8);

  LOBYTE(v28) = MEMORY[0x1C3B7262C](v29);
  v30 = swift_getKeyPath();
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  v31 = AnyShapeStyle.init<A>(_:)();
  OUTLINED_FUNCTION_61_10(v43, v1);
  OUTLINED_FUNCTION_43();
  v32 = (uint64_t *)(v1 + *(int *)(v42 + 36));
  *v32 = v30;
  v32[1] = v31;
  OUTLINED_FUNCTION_25_0(v43);
  OUTLINED_FUNCTION_49_29();
  OUTLINED_FUNCTION_101_8();
  if ((v28 & 1) != 0)
    static Color.black.getter();
  else
    static Color.secondary.getter();
  swift_getKeyPath();
  OUTLINED_FUNCTION_75_9();
  OUTLINED_FUNCTION_56_24();
  OUTLINED_FUNCTION_124_5(v33, v34, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>>, _EnvironmentKeyWritingModifier<Color?>>);
  OUTLINED_FUNCTION_52_1();
}

void protocol witness for MenuStyle.makeBody(configuration:) in conformance ShareCardMenuStyle()
{
  ShareCardMenuStyle.makeBody(configuration:)();
}

void SplitHStack.SizeInfo.maxSize.setter(double a1, double a2)
{
  double *v2;

  *v2 = a1;
  v2[1] = a2;
}

uint64_t (*SplitHStack.SizeInfo.maxSize.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void SplitHStack.SizeInfo.spacing.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  OUTLINED_FUNCTION_0();
}

uint64_t (*SplitHStack.SizeInfo.spacing.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double SplitHStack.SizeInfo.totalSpacing.getter(uint64_t a1)
{
  uint64_t v1;
  double *v2;
  double result;
  double v4;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0.0;
  v2 = (double *)(a1 + 32);
  result = 0.0;
  do
  {
    v4 = *v2++;
    result = result + v4;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t SplitHStack.SizeInfo.init(subviews:proposal:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  double v15;
  double v16;
  double v17;
  uint64_t v18;
  _QWORD v20[4];

  v10 = specialized RandomAccessCollection<>.indices.getter();
  v20[2] = a1;
  _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSnySiG_12CoreGraphics7CGFloatVs5NeverOTg5((void (*)(uint64_t *__return_ptr, uint64_t *))partial apply for closure #1 in SplitHStack.SizeInfo.spacing(subviews:), (uint64_t)v20, v10, v11);
  v13 = v12;
  v14 = 10.0;
  if ((a3 & 1) != 0)
    v15 = 10.0;
  else
    v15 = *(double *)&a2;
  v16 = SplitHStack.SizeInfo.totalSpacing.getter(v12);
  if ((a5 & 1) == 0)
    v14 = *(double *)&a4;
  v17 = v15 - v16;
  swift_bridgeObjectRetain();
  SplitHStack.SizeInfo.maxSize(subviews:proposal:)(a1, v17, v14);
  swift_bridgeObjectRelease();
  v18 = OUTLINED_FUNCTION_106_4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(a1, v18);
  return v13;
}

uint64_t SplitHStack.SizeInfo.maxSize(subviews:proposal:)(uint64_t a1, double a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  void (*v16)(_BYTE *, _QWORD);
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  _QWORD v23[2];
  int v24;
  uint64_t v25;
  double v26;
  double v27;
  uint64_t v28;
  char v29;
  _BYTE v30[32];
  uint64_t v31;

  v6 = type metadata accessor for LayoutSubview();
  v25 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = a2;
  v27 = a3;
  v28 = a1;
  _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lF7SwiftUI14LayoutSubviewsV_12CoreGraphics7CGFloatVs5NeverOTg5();
  v10 = specialized Sequence<>.max()(v9);
  v24 = v11;
  swift_bridgeObjectRelease();
  type metadata accessor for LayoutSubviews();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type LayoutSubviews and conformance LayoutSubviews, (void (*)(uint64_t))MEMORY[0x1E0CD9370]);
  v12 = dispatch thunk of Collection.count.getter();
  v13 = MEMORY[0x1E0DEE9D8];
  if (!v12)
  {
LABEL_9:
    specialized Sequence<>.max()(v13);
    return swift_bridgeObjectRelease();
  }
  v14 = v12;
  v31 = MEMORY[0x1E0DEE9D8];
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  result = dispatch thunk of Collection.startIndex.getter();
  if ((v14 & 0x8000000000000000) == 0)
  {
    v23[1] = v10;
    do
    {
      v16 = (void (*)(_BYTE *, _QWORD))dispatch thunk of Collection.subscript.read();
      v17 = v25;
      (*(void (**)(char *))(v25 + 16))(v8);
      v16(v30, 0);
      static ProposedViewSize.unspecified.getter();
      v30[0] = v18 & 1;
      v29 = v19 & 1;
      LayoutSubview.sizeThatFits(_:)();
      v21 = v20;
      (*(void (**)(char *, uint64_t))(v17 + 8))(v8, v6);
      v13 = v31;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        v13 = v31;
      }
      v22 = *(_QWORD *)(v13 + 16);
      if (v22 >= *(_QWORD *)(v13 + 24) >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        v13 = v31;
      }
      *(_QWORD *)(v13 + 16) = v22 + 1;
      *(_QWORD *)(v13 + 8 * v22 + 32) = v21;
      dispatch thunk of Collection.formIndex(after:)();
      --v14;
    }
    while (v14);
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t closure #1 in SplitHStack.SizeInfo.maxSize(subviews:proposal:)@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  type metadata accessor for LayoutSubviews();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type LayoutSubviews and conformance LayoutSubviews, (void (*)(uint64_t))MEMORY[0x1E0CD9370]);
  dispatch thunk of Collection.startIndex.getter();
  dispatch thunk of Collection.endIndex.getter();
  dispatch thunk of Collection.distance(from:to:)();
  result = LayoutSubview.sizeThatFits(_:)();
  *a1 = v3;
  return result;
}

uint64_t specialized RandomAccessCollection<>.indices.getter()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;

  type metadata accessor for LayoutSubviews();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type LayoutSubviews and conformance LayoutSubviews, (void (*)(uint64_t))MEMORY[0x1E0CD9370]);
  dispatch thunk of Collection.startIndex.getter();
  dispatch thunk of Collection.endIndex.getter();
  result = v2;
  if (v1 < v2)
    __break(1u);
  return result;
}

uint64_t closure #1 in SplitHStack.SizeInfo.spacing(subviews:)@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  void (*v17)(char *, uint64_t);
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;

  v26 = a2;
  v3 = type metadata accessor for ViewSpacing();
  v24 = *(_QWORD *)(v3 - 8);
  v25 = v3;
  v4 = MEMORY[0x1E0C80A78](v3);
  v23 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v22 - v6;
  v8 = type metadata accessor for LayoutSubview();
  v22 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v22 - v12;
  v14 = *a1;
  type metadata accessor for LayoutSubviews();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type LayoutSubviews and conformance LayoutSubviews, (void (*)(uint64_t))MEMORY[0x1E0CD9370]);
  dispatch thunk of Collection.startIndex.getter();
  dispatch thunk of Collection.endIndex.getter();
  result = dispatch thunk of Collection.distance(from:to:)();
  if (__OFSUB__(result, 1))
  {
    __break(1u);
  }
  else
  {
    v16 = 0;
    if (v14 < result - 1)
    {
      LayoutSubviews.subscript.getter();
      LayoutSubview.spacing.getter();
      v17 = *(void (**)(char *, uint64_t))(v22 + 8);
      v17(v13, v8);
      LayoutSubviews.subscript.getter();
      v18 = v23;
      LayoutSubview.spacing.getter();
      v17(v11, v8);
      ViewSpacing.distance(to:along:)();
      v16 = v19;
      v20 = v25;
      v21 = *(void (**)(char *, uint64_t))(v24 + 8);
      v21(v18, v25);
      result = ((uint64_t (*)(char *, uint64_t))v21)(v7, v20);
    }
    *v26 = v16;
  }
  return result;
}

double SplitHStack.sizeThatFits(proposal:subviews:cache:)(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v10;
  void (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  double v16;
  double v17;
  uint64_t v18;
  _BYTE v20[16];

  v10 = OUTLINED_FUNCTION_106_4();
  v11 = (void (*)(uint64_t))MEMORY[0x1E0CD9370];
  OUTLINED_FUNCTION_20_7();
  MEMORY[0x1E0C80A78](v12);
  v14 = &v20[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v15 + 16))(v14, a5, v10);
  v20[8] = a2 & 1;
  v20[0] = a4 & 1;
  SplitHStack.SizeInfo.init(subviews:proposal:)((uint64_t)v14, a1, a2 & 1, a3, a4 & 1);
  v17 = v16;
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type LayoutSubviews and conformance LayoutSubviews, v11);
  dispatch thunk of Collection.startIndex.getter();
  dispatch thunk of Collection.endIndex.getter();
  v18 = dispatch thunk of Collection.distance(from:to:)();
  swift_bridgeObjectRelease();
  return v17 * (double)v18;
}

uint64_t SplitHStack.placeSubviews(in:proposal:subviews:cache:)(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, double a6, double a7, double a8, double a9)
{
  uint64_t v9;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v30[16];
  uint64_t v31;
  double *v32;
  double v33;
  double v34;
  double v35;
  double v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  double v45;
  char v46;

  OUTLINED_FUNCTION_106_4();
  OUTLINED_FUNCTION_20_7();
  MEMORY[0x1E0C80A78](v19);
  OUTLINED_FUNCTION_0_7();
  (*(void (**)(uint64_t, uint64_t))(v20 + 16))(v9, a5);
  v46 = a4 & 1;
  v21 = SplitHStack.SizeInfo.init(subviews:proposal:)(v9, a1, a2 & 1, a3, a4 & 1);
  v23 = v22;
  v25 = v24;
  v26 = v21;
  v45 = a6;
  v27 = specialized RandomAccessCollection<>.indices.getter();
  v31 = a5;
  v32 = &v45;
  v33 = a6;
  v34 = a7;
  v35 = a8;
  v36 = a9;
  v37 = v23;
  v38 = 0;
  v39 = v25;
  v40 = 0;
  v41 = v23;
  v42 = v23;
  v43 = v25;
  v44 = v26;
  specialized Sequence.forEach(_:)((uint64_t)partial apply for closure #1 in SplitHStack.placeSubviews(in:proposal:subviews:cache:), (uint64_t)v30, v27, v28);
  return swift_bridgeObjectRelease();
}

uint64_t closure #1 in SplitHStack.placeSubviews(in:proposal:subviews:cache:)(unint64_t *a1, double a2, double a3, double a4, double a5, double a6, uint64_t a7, double *a8, uint64_t a9, char a10, uint64_t a11, char a12, uint64_t a13)
{
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  unint64_t v23;
  uint64_t result;
  double v25;
  _QWORD v26[4];
  char v27;
  char v28;

  v26[2] = a9;
  v26[3] = a11;
  v19 = type metadata accessor for LayoutSubview();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)v26 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = *a1;
  LayoutSubviews.subscript.getter();
  static UnitPoint.topLeading.getter();
  v28 = a10 & 1;
  v27 = a12 & 1;
  result = LayoutSubview.place(at:anchor:proposal:)();
  if ((v23 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v23 < *(_QWORD *)(a13 + 16))
  {
    v25 = *(double *)(a13 + 8 * v23 + 32);
    result = (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v22, v19);
    *a8 = v25 + a6 + *a8;
    return result;
  }
  __break(1u);
  return result;
}

double protocol witness for Layout.sizeThatFits(proposal:subviews:cache:) in conformance SplitHStack(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5)
{
  return SplitHStack.sizeThatFits(proposal:subviews:cache:)(a1, a2 & 1, a3, a4 & 1, a5);
}

uint64_t protocol witness for Layout.placeSubviews(in:proposal:subviews:cache:) in conformance SplitHStack(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, double a6, double a7, double a8, double a9)
{
  return SplitHStack.placeSubviews(in:proposal:subviews:cache:)(a1, a2 & 1, a3, a4 & 1, a5, a6, a7, a8, a9);
}

void partial apply for closure #2 in ShareCardMenuButton.body.getter(uint64_t a1@<X8>)
{
  closure #2 in ShareCardMenuButton.body.getter(a1);
}

void key path getter for EnvironmentValues.controlSize : EnvironmentValues, serialized()
{
  EnvironmentValues.controlSize.getter();
  OUTLINED_FUNCTION_0();
}

void key path setter for EnvironmentValues.controlSize : EnvironmentValues, serialized(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  type metadata accessor for ControlSize();
  OUTLINED_FUNCTION_20_7();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_4_1();
  (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v1, a1);
  MEMORY[0x1C3B71870](v1);
  OUTLINED_FUNCTION_18();
}

uint64_t partial apply for closure #1 in static NSNotificationCenter.Publisher.publisher<A>(name:updateFetcher:)(uint64_t a1)
{
  uint64_t v1;

  return closure #1 in static NSNotificationCenter.Publisher.publisher<A>(name:updateFetcher:)(a1, *(_QWORD **)(v1 + 16));
}

void sub_1BD24101C()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  v1 = (*(uint64_t (**)(void))(v0 + 264))();
  OUTLINED_FUNCTION_68_0(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD241040(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_31_5(a1);
  (*(void (**)(uint64_t))(v2 + 272))(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD241060()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  v1 = (*(uint64_t (**)(void))(v0 + 312))();
  OUTLINED_FUNCTION_68_0(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD241084(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_31_5(a1);
  (*(void (**)(uint64_t))(v2 + 320))(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD2410A4()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  v1 = (*(uint64_t (**)(void))(v0 + 368))();
  OUTLINED_FUNCTION_68_0(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD2410C8(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_31_5(a1);
  (*(void (**)(uint64_t))(v2 + 376))(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD2410E8()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))(v1 + 424))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD241110()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  v1 = (*(uint64_t (**)(void))(v0 + 472))();
  OUTLINED_FUNCTION_68_0(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD241134(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_31_5(a1);
  (*(void (**)(uint64_t))(v2 + 480))(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD241154()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  v1 = (*(uint64_t (**)(void))(v0 + 520))();
  OUTLINED_FUNCTION_68_0(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD241178(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_31_5(a1);
  (*(void (**)(uint64_t))(v2 + 528))(v1);
  OUTLINED_FUNCTION_0();
}

uint64_t objectdestroy_19Tm_1()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for specialized closure #1 in static NSNotificationCenter.Publisher.publisher<A>(name:updateFetcher:)(uint64_t a1)
{
  uint64_t v1;

  return specialized closure #1 in static NSNotificationCenter.Publisher.publisher<A>(name:updateFetcher:)(a1, *(_QWORD *)(v1 + 16), *(void (**)(uint64_t *__return_ptr))(v1 + 24));
}

uint64_t type metadata accessor for ShareCardViewModel(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for ShareCardViewModel);
}

void sub_1BD2411E8()
{
  EnvironmentValues.controlSize.getter();
  OUTLINED_FUNCTION_0();
}

void key path getter for EnvironmentValues.tint : EnvironmentValues, serialized()
{
  uint64_t *v0;

  *v0 = OUTLINED_FUNCTION_122_1();
  OUTLINED_FUNCTION_0();
}

void sub_1BD241234()
{
  uint64_t *v0;

  *v0 = OUTLINED_FUNCTION_122_1();
  OUTLINED_FUNCTION_0();
}

void key path setter for EnvironmentValues.tint : EnvironmentValues, serialized()
{
  swift_retain();
  EnvironmentValues.tint.setter();
  OUTLINED_FUNCTION_0();
}

uint64_t partial apply for closure #1 in SplitHStack.SizeInfo.spacing(subviews:)@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return closure #1 in SplitHStack.SizeInfo.spacing(subviews:)(a1, a2);
}

uint64_t partial apply for closure #1 in SplitHStack.placeSubviews(in:proposal:subviews:cache:)(unint64_t *a1)
{
  uint64_t v1;

  return closure #1 in SplitHStack.placeSubviews(in:proposal:subviews:cache:)(a1, *(double *)(v1 + 32), *(double *)(v1 + 40), *(double *)(v1 + 48), *(double *)(v1 + 56), *(double *)(v1 + 96), *(_QWORD *)(v1 + 16), *(double **)(v1 + 24), *(_QWORD *)(v1 + 64), *(_BYTE *)(v1 + 72), *(_QWORD *)(v1 + 80), *(_BYTE *)(v1 + 88), *(_QWORD *)(v1 + 120));
}

uint64_t associated type witness table accessor for View.Body : View in ShareCardButton()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t associated type witness table accessor for View.Body : View in ShareCardMenuButton()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t associated type witness table accessor for View.Body : View in ShareCardControlsView()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t associated type witness table accessor for PrimitiveButtonStyle.Body : View in ShareCardButtonStyle()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t associated type witness table accessor for MenuStyle.Body : View in ShareCardMenuStyle()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t lazy protocol witness table accessor for type SplitHStack and conformance SplitHStack()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SplitHStack and conformance SplitHStack;
  if (!lazy protocol witness table cache variable for type SplitHStack and conformance SplitHStack)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for SplitHStack, &type metadata for SplitHStack);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SplitHStack and conformance SplitHStack);
  }
  return result;
}

void sub_1BD241388()
{
  uint64_t v0;

  OUTLINED_FUNCTION_83_1();
  (*(void (**)(void))(v0 + 288))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD2413AC()
{
  uint64_t v0;

  OUTLINED_FUNCTION_83_1();
  (*(void (**)(void))(v0 + 336))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD2413D0()
{
  uint64_t v0;

  OUTLINED_FUNCTION_83_1();
  (*(void (**)(void))(v0 + 392))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD2413F4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_83_1();
  (*(void (**)(void))(v0 + 448))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD241418()
{
  uint64_t v0;

  OUTLINED_FUNCTION_83_1();
  (*(void (**)(void))(v0 + 496))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD24143C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_83_1();
  (*(void (**)(void))(v0 + 544))();
  OUTLINED_FUNCTION_0();
}

uint64_t initializeBufferWithCopyOfBuffer for ShareCardButton(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v13 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v13 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    v6 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v6;
    v7 = a2[5];
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v7;
    *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
    v8 = a2[8];
    v9 = *(int *)(a3 + 36);
    v10 = (uint64_t *)((char *)a2 + v9);
    v11 = (_QWORD *)(a1 + v9);
    *(_QWORD *)(a1 + 56) = a2[7];
    *(_QWORD *)(a1 + 64) = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v11, v10, v12);
    }
    else
    {
      *v11 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for ShareCardButton(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  v4 = a1 + *(int *)(a2 + 36);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v5 = type metadata accessor for DynamicTypeSize();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t initializeWithCopy for ShareCardButton(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v7 = *(_QWORD *)(a2 + 64);
  v8 = *(int *)(a3 + 36);
  v9 = (_QWORD *)(a2 + v8);
  v10 = (_QWORD *)(a1 + v8);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v11 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v10, v9, v11);
  }
  else
  {
    *v10 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for ShareCardButton(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 36);
    v8 = (_QWORD *)(a1 + v7);
    v9 = (_QWORD *)(a2 + v7);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(a1 + v7, &demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithTake for ShareCardButton(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  void *v6;
  const void *v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v5 = *(int *)(a3 + 36);
  v6 = (void *)(a1 + v5);
  v7 = (const void *)(a2 + v5);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v9 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v6, v7, v9);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  return a1;
}

uint64_t assignWithTake for ShareCardButton(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release();
  if (a1 != a2)
  {
    v9 = *(int *)(a3 + 36);
    v10 = (void *)(a1 + v9);
    v11 = (const void *)(a2 + v9);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(a1 + v9, &demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v13 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v10, v11, v13);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for ShareCardButton()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1BD241A04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    OUTLINED_FUNCTION_102_6();
    OUTLINED_FUNCTION_18();
  }
  else
  {
    v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>);
    OUTLINED_FUNCTION_1_16(a1 + *(int *)(a3 + 36), a2, v6);
  }
}

uint64_t storeEnumTagSinglePayload for ShareCardButton()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1BD241A68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_15_13();
  if (v3)
  {
    *(_QWORD *)(v1 + 8) = (v0 - 1);
    OUTLINED_FUNCTION_18();
  }
  else
  {
    v4 = v2;
    v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>);
    OUTLINED_FUNCTION_0_29(v1 + *(int *)(v4 + 36), v0, v0, v5);
  }
}

void type metadata completion function for ShareCardButton()
{
  unint64_t v0;

  type metadata accessor for Environment<RedactionReasons>.Content(319, (unint64_t *)&lazy cache variable for type metadata for Environment<DynamicTypeSize>.Content, (void (*)(uint64_t))MEMORY[0x1E0CD9958]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t initializeBufferWithCopyOfBuffer for ShareCardMenuButton(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v13 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v13 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    v6 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v6;
    v7 = a2[5];
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v7;
    *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
    v8 = a2[9];
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 7);
    v9 = *(int *)(a3 + 40);
    v10 = (_QWORD *)(a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    *(_QWORD *)(a1 + 72) = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for ShareCardMenuButton(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  v4 = a1 + *(int *)(a2 + 40);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v5 = type metadata accessor for DynamicTypeSize();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t initializeWithCopy for ShareCardMenuButton(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v7 = *(_QWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v8 = *(int *)(a3 + 40);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  *(_QWORD *)(a1 + 72) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v11 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  else
  {
    *v9 = *v10;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for ShareCardMenuButton(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v6;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 40);
    v8 = (_QWORD *)(a1 + v7);
    v9 = (_QWORD *)(a2 + v7);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(a1 + v7, &demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithTake for ShareCardMenuButton(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  void *v6;
  const void *v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v5 = *(int *)(a3 + 40);
  v6 = (void *)(a1 + v5);
  v7 = (const void *)(a2 + v5);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v9 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v6, v7, v9);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  return a1;
}

uint64_t assignWithTake for ShareCardMenuButton(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release();
  if (a1 != a2)
  {
    v9 = *(int *)(a3 + 40);
    v10 = (void *)(a1 + v9);
    v11 = (const void *)(a2 + v9);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(a1 + v9, &demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v13 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v10, v11, v13);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for ShareCardMenuButton()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1BD242180(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    OUTLINED_FUNCTION_102_6();
    OUTLINED_FUNCTION_18();
  }
  else
  {
    v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>);
    OUTLINED_FUNCTION_1_16(a1 + *(int *)(a3 + 40), a2, v6);
  }
}

uint64_t storeEnumTagSinglePayload for ShareCardMenuButton()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1BD2421E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_15_13();
  if (v3)
  {
    *(_QWORD *)(v1 + 8) = (v0 - 1);
    OUTLINED_FUNCTION_18();
  }
  else
  {
    v4 = v2;
    v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>);
    OUTLINED_FUNCTION_0_29(v1 + *(int *)(v4 + 40), v0, v0, v5);
  }
}

void type metadata completion function for ShareCardMenuButton()
{
  unint64_t v0;

  type metadata accessor for Environment<RedactionReasons>.Content(319, (unint64_t *)&lazy cache variable for type metadata for Environment<DynamicTypeSize>.Content, (void (*)(uint64_t))MEMORY[0x1E0CD9958]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t dispatch thunk of ShareCardViewModelProviding.shouldShowEndActivity.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ShareCardViewModelProviding.shouldShowCollaboration.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ShareCardViewModelProviding.screenSharingAvailablePublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of ShareCardViewModelProviding.remoteParticipants.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of ShareCardViewModelProviding.conversationIsAVLess.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t ObjC metadata update function for ShareCardViewModel()
{
  return type metadata accessor for ShareCardViewModel(0);
}

void type metadata completion function for ShareCardViewModel()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for Published<Bool>();
  if (v0 <= 0x3F)
  {
    type metadata accessor for Published<[Participant]>();
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for ShareCardViewModel()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ShareCardViewModel.collaborateButtonTitle.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of ShareCardViewModel.collaborateButtonImage.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of ShareCardViewModel.endSharePlayButtonTitle.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of ShareCardViewModel.endSharePlayButtonImage.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of ShareCardViewModel.shareScreenButtonTitle.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of ShareCardViewModel.shareScreenButtonShortTitle.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of ShareCardViewModel.shareScreenButtonImage.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of ShareCardViewModel.requestScreenShareButtonTitle.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of ShareCardViewModel.collaborateSubtitle.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of ShareCardViewModel.shouldShowEndActivity.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of ShareCardViewModel.shouldShowEndActivity.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t dispatch thunk of ShareCardViewModel.shouldShowEndActivity.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 280))();
}

uint64_t dispatch thunk of ShareCardViewModel.$shouldShowEndActivity.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 288))();
}

uint64_t dispatch thunk of ShareCardViewModel.$shouldShowEndActivity.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 296))();
}

uint64_t dispatch thunk of ShareCardViewModel.$shouldShowEndActivity.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 304))();
}

uint64_t dispatch thunk of ShareCardViewModel.shouldShowCollaboration.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 312))();
}

uint64_t dispatch thunk of ShareCardViewModel.shouldShowCollaboration.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 320))();
}

uint64_t dispatch thunk of ShareCardViewModel.shouldShowCollaboration.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 328))();
}

uint64_t dispatch thunk of ShareCardViewModel.$shouldShowCollaboration.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 336))();
}

uint64_t dispatch thunk of ShareCardViewModel.$shouldShowCollaboration.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 344))();
}

uint64_t dispatch thunk of ShareCardViewModel.$shouldShowCollaboration.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 352))();
}

uint64_t dispatch thunk of ShareCardViewModel.shareScreenEnabled.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 360))();
}

uint64_t dispatch thunk of ShareCardViewModel.isAVLess.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 368))();
}

uint64_t dispatch thunk of ShareCardViewModel.isAVLess.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 376))();
}

uint64_t dispatch thunk of ShareCardViewModel.isAVLess.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 384))();
}

uint64_t dispatch thunk of ShareCardViewModel.$isAVLess.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 392))();
}

uint64_t dispatch thunk of ShareCardViewModel.$isAVLess.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 400))();
}

uint64_t dispatch thunk of ShareCardViewModel.$isAVLess.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 408))();
}

uint64_t dispatch thunk of ShareCardViewModel.askToShareScreenEnabled.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 416))();
}

uint64_t dispatch thunk of ShareCardViewModel.remoteParticipants.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 424))();
}

uint64_t dispatch thunk of ShareCardViewModel.remoteParticipants.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 432))();
}

uint64_t dispatch thunk of ShareCardViewModel.remoteParticipants.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 440))();
}

uint64_t dispatch thunk of ShareCardViewModel.$remoteParticipants.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 448))();
}

uint64_t dispatch thunk of ShareCardViewModel.$remoteParticipants.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 456))();
}

uint64_t dispatch thunk of ShareCardViewModel.$remoteParticipants.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 464))();
}

uint64_t dispatch thunk of ShareCardViewModel.screenSharingAvailable.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 472))();
}

uint64_t dispatch thunk of ShareCardViewModel.screenSharingAvailable.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 480))();
}

uint64_t dispatch thunk of ShareCardViewModel.screenSharingAvailable.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 488))();
}

uint64_t dispatch thunk of ShareCardViewModel.$screenSharingAvailable.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 496))();
}

uint64_t dispatch thunk of ShareCardViewModel.$screenSharingAvailable.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 504))();
}

uint64_t dispatch thunk of ShareCardViewModel.$screenSharingAvailable.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 512))();
}

uint64_t dispatch thunk of ShareCardViewModel.screenCaptured.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 520))();
}

uint64_t dispatch thunk of ShareCardViewModel.screenCaptured.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 528))();
}

uint64_t dispatch thunk of ShareCardViewModel.screenCaptured.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 536))();
}

uint64_t dispatch thunk of ShareCardViewModel.$screenCaptured.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 544))();
}

uint64_t dispatch thunk of ShareCardViewModel.$screenCaptured.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 552))();
}

uint64_t dispatch thunk of ShareCardViewModel.$screenCaptured.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 560))();
}

uint64_t dispatch thunk of ShareCardViewModel.__allocating_init(didTapScreenShareButton:didTapAskToScreenShareButton:didTapCollaborateButton:didTapEndSharePlay:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 568))();
}

uint64_t dispatch thunk of ShareCardViewModel.configure(with:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 576))();
}

void type metadata accessor for Published<[Participant]>()
{
  unint64_t v0;
  uint64_t v1;

  if (!lazy cache variable for type metadata for Published<[Participant]>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [Participant]);
    v0 = type metadata accessor for Published();
    if (!v1)
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for Published<[Participant]>);
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for ShareCardControlsView(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = type metadata accessor for DismissAction();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v9 = *(int *)(a3 + 20);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = *(_QWORD *)v11;
    v13 = *((_QWORD *)v11 + 1);
    v14 = v11[16];
    outlined copy of StateObject<SyncedScreeningAlphaGradientView<A>.AnimatedState>.Storage<A>();
    *(_QWORD *)v10 = v12;
    *((_QWORD *)v10 + 1) = v13;
    v10[16] = v14;
  }
  return a1;
}

uint64_t destroy for ShareCardControlsView(uint64_t a1)
{
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v2 = type metadata accessor for DismissAction();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  }
  else
  {
    swift_release();
  }
  return outlined consume of StateObject<SyncedScreeningAlphaGradientView<A>.AnimatedState>.Storage<A>();
}

_QWORD *initializeWithCopy for ShareCardControlsView(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = type metadata accessor for DismissAction();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = *(_QWORD *)v9;
  v11 = *((_QWORD *)v9 + 1);
  v12 = v9[16];
  outlined copy of StateObject<SyncedScreeningAlphaGradientView<A>.AnimatedState>.Storage<A>();
  *(_QWORD *)v8 = v10;
  *((_QWORD *)v8 + 1) = v11;
  v8[16] = v12;
  return a1;
}

_QWORD *assignWithCopy for ShareCardControlsView(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  if (a1 != a2)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)a1, &demangling cache variable for type metadata for Environment<DismissAction>.Content);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = type metadata accessor for DismissAction();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = *(_QWORD *)v9;
  v11 = *((_QWORD *)v9 + 1);
  v12 = v9[16];
  outlined copy of StateObject<SyncedScreeningAlphaGradientView<A>.AnimatedState>.Storage<A>();
  *(_QWORD *)v8 = v10;
  *((_QWORD *)v8 + 1) = v11;
  v8[16] = v12;
  outlined consume of StateObject<SyncedScreeningAlphaGradientView<A>.AnimatedState>.Storage<A>();
  return a1;
}

char *initializeWithTake for ShareCardControlsView(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = type metadata accessor for DismissAction();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  *(_OWORD *)v9 = *(_OWORD *)v10;
  v9[16] = v10[16];
  return a1;
}

char *assignWithTake for ShareCardControlsView(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  char v11;

  if (a1 != a2)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)a1, &demangling cache variable for type metadata for Environment<DismissAction>.Content);
    v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = type metadata accessor for DismissAction();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = v10[16];
  *(_OWORD *)v9 = *(_OWORD *)v10;
  v9[16] = v11;
  outlined consume of StateObject<SyncedScreeningAlphaGradientView<A>.AnimatedState>.Storage<A>();
  return a1;
}

uint64_t getEnumTagSinglePayload for ShareCardControlsView()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1BD242B5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>);
  if (*(_DWORD *)(*(_QWORD *)(v4 - 8) + 84) == (_DWORD)a2)
    OUTLINED_FUNCTION_1_16(a1, a2, v4);
  else
    OUTLINED_FUNCTION_18();
}

uint64_t storeEnumTagSinglePayload for ShareCardControlsView()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1BD242BD4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>);
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    OUTLINED_FUNCTION_0_29(a1, a2, a2, v8);
  }
  else
  {
    *(_BYTE *)(a1 + *(int *)(a4 + 20) + 16) = -(char)a2;
    OUTLINED_FUNCTION_18();
  }
}

void type metadata completion function for ShareCardControlsView()
{
  unint64_t v0;

  type metadata accessor for Environment<RedactionReasons>.Content(319, (unint64_t *)&lazy cache variable for type metadata for Environment<DismissAction>.Content, (void (*)(uint64_t))MEMORY[0x1E0CD8E80]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void type metadata accessor for ShareCardButtonStyle()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t initializeBufferWithCopyOfBuffer for ShareCardMenuStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(*(_QWORD *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

uint64_t destroy for ShareCardMenuStyle(uint64_t a1)
{
  return outlined consume of Environment<CGFloat>.Content(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

void assignWithCopy for ShareCardButtonStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(*(_QWORD *)a2, v4);
  v5 = *(_QWORD *)a1;
  v6 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  outlined consume of Environment<CGFloat>.Content(v5, v6);
  OUTLINED_FUNCTION_18();
}

uint64_t assignWithTake for ShareCardMenuStyle(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 8);
  v5 = *(_QWORD *)a1;
  v6 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  outlined consume of Environment<CGFloat>.Content(v5, v6);
  return a1;
}

void type metadata accessor for ShareCardMenuStyle()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for SplitHStack()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t initializeBufferWithCopyOfBuffer for SplitHStack.SizeInfo(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for SplitHStack.SizeInfo(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SplitHStack.SizeInfo(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SplitHStack.SizeInfo(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SplitHStack.SizeInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for SplitHStack.SizeInfo()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t sub_1BD242F00()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Button<VStack<TupleView<(ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??, ModifiedContent<Text, _FixedSizeLayout>)>>, _FlexFrameLayout>, Text?)>>>);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Button<VStack<TupleView<(ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??, ModifiedContent<Text, _FixedSizeLayout>)>>, _FlexFrameLayout>, Text?)>>> and conformance Button<A>, &demangling cache variable for type metadata for Button<VStack<TupleView<(ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??, ModifiedContent<Text, _FixedSizeLayout>)>>, _FlexFrameLayout>, Text?)>>>);
  lazy protocol witness table accessor for type ShareCardButtonStyle and conformance ShareCardButtonStyle();
  return swift_getOpaqueTypeConformance2();
}

unint64_t lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, <<opaque return type of View.menuStyle<A>(_:)>>.0> and conformance <> _ConditionalContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[6];

  result = lazy protocol witness table cache variable for type _ConditionalContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, <<opaque return type of View.menuStyle<A>(_:)>>.0> and conformance <> _ConditionalContent<A, B>;
  if (!lazy protocol witness table cache variable for type _ConditionalContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, <<opaque return type of View.menuStyle<A>(_:)>>.0> and conformance <> _ConditionalContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, <<opaque return type of View.menuStyle<A>(_:)>>.0>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>();
    v3 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Menu<VStack<TupleView<(ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??, ModifiedContent<Text, _FixedSizeLayout>)>>, _FlexFrameLayout>, Text?)>>, ForEach<[Participant], Participant, ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>>>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Menu<VStack<TupleView<(ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??, ModifiedContent<Text, _FixedSizeLayout>)>>, _FlexFrameLayout>, Text?)>>, ForEach<[Participant], Participant, ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>>> and conformance Menu<A, B>, &demangling cache variable for type metadata for Menu<VStack<TupleView<(ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??, ModifiedContent<Text, _FixedSizeLayout>)>>, _FlexFrameLayout>, Text?)>>, ForEach<[Participant], Participant, ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>>>);
    v5[2] = v3;
    v5[3] = &type metadata for ShareCardMenuStyle;
    v5[4] = v4;
    v5[5] = lazy protocol witness table accessor for type ShareCardMenuStyle and conformance ShareCardMenuStyle();
    v5[0] = v2;
    v5[1] = swift_getOpaqueTypeConformance2();
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDB8A0], v1, v5);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _ConditionalContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, <<opaque return type of View.menuStyle<A>(_:)>>.0> and conformance <> _ConditionalContent<A, B>);
  }
  return result;
}

void sub_1BD243044()
{
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type VStack<TupleView<(ViewThatFits<TupleView<(_VariadicView.Tree<_LayoutRoot<SplitHStack>, Group<_ConditionalContent<_ConditionalContent<TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>, ShareCardButton)>, TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bo, &demangling cache variable for type metadata for VStack<TupleView<(ViewThatFits<TupleView<(_VariadicView.Tree<_LayoutRoot<SplitHStack>, Group<_ConditionalContent<_ConditionalContent<TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>, ShareCardButton)>, TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>>, _EnvironmentKeyWritingModifier<Color?>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Color?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Color?>);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>>, _EnvironmentKeyWritingModifier<Color?>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Color?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Color?>);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<AnyShapeStyle?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<AnyShapeStyle?>);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<AnyShapeStyle?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<AnyShapeStyle?>);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Int?>);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Int?>);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Font?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Font?>);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Font?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Font?>);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t OpaqueTypeConformance2;
  uint64_t v9;
  _QWORD v10[6];

  result = lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Button<PrimitiveButtonStyleConfiguration.Label>);
    v3 = type metadata accessor for BorderedProminentButtonStyle();
    v4 = (void (*)(uint64_t))MEMORY[0x1E0CDCDC0];
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Button<PrimitiveButtonStyleConfiguration.Label> and conformance Button<A>, &demangling cache variable for type metadata for Button<PrimitiveButtonStyleConfiguration.Label>);
    v6 = v5;
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type BorderedProminentButtonStyle and conformance BorderedProminentButtonStyle, v4);
    v10[2] = v2;
    v10[3] = v3;
    v10[4] = v6;
    v10[5] = v7;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<ControlSize> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<ControlSize>);
    v10[0] = OpaqueTypeConformance2;
    v10[1] = v9;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v10);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t OpaqueTypeConformance2;
  uint64_t v9;
  _QWORD v10[6];

  result = lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Menu<MenuStyleConfiguration.Label, MenuStyleConfiguration.Content>);
    v3 = type metadata accessor for BorderedProminentButtonStyle();
    v4 = (void (*)(uint64_t))MEMORY[0x1E0CDCDC0];
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Menu<MenuStyleConfiguration.Label, MenuStyleConfiguration.Content> and conformance Menu<A, B>, &demangling cache variable for type metadata for Menu<MenuStyleConfiguration.Label, MenuStyleConfiguration.Content>);
    v6 = v5;
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type BorderedProminentButtonStyle and conformance BorderedProminentButtonStyle, v4);
    v10[2] = v2;
    v10[3] = v3;
    v10[4] = v6;
    v10[5] = v7;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<ControlSize> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<ControlSize>);
    v10[0] = OpaqueTypeConformance2;
    v10[1] = v9;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v10);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t sub_1BD2436A8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in SplitHStack.SizeInfo.maxSize(subviews:proposal:)@<X0>(_QWORD *a1@<X8>)
{
  return closure #1 in SplitHStack.SizeInfo.maxSize(subviews:proposal:)(a1);
}

void lazy protocol witness table accessor for type ForEach<[Participant], Participant, ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>> and conformance <> ForEach<A, B, C>(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;

  if (!*a1)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v8 = a3();
    atomic_store(MEMORY[0x1C3B750C8](a4, v7, &v8), a1);
  }
  OUTLINED_FUNCTION_45_0();
}

unint64_t lazy protocol witness table accessor for type _ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>> and conformance <> _ConditionalContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = lazy protocol witness table cache variable for type _ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>> and conformance <> _ConditionalContent<A, B>;
  if (!lazy protocol witness table cache variable for type _ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>> and conformance <> _ConditionalContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)> and conformance TupleView<A>, &demangling cache variable for type metadata for TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>);
    v3 = v2;
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>> and conformance ViewThatFits<A>, &demangling cache variable for type metadata for ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDB8A0], v1, v5);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>> and conformance <> _ConditionalContent<A, B>);
  }
  return result;
}

uint64_t partial apply for closure #1 in ShareCardControlsView.collaborateButton.getter()
{
  return partial apply for closure #1 in ShareCardControlsView.collaborateButton.getter();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v3)(uint64_t);

  OUTLINED_FUNCTION_113_6();
  OUTLINED_FUNCTION_49_3();
  return v3(v0 + v1);
}

uint64_t objectdestroy_118Tm()
{
  uint64_t v0;

  type metadata accessor for ShareCardControlsView(0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>.Content);
  if (OUTLINED_FUNCTION_121_0() == 1)
  {
    v0 = type metadata accessor for DismissAction();
    OUTLINED_FUNCTION_75(v0);
  }
  else
  {
    swift_release();
  }
  outlined consume of StateObject<SyncedScreeningAlphaGradientView<A>.AnimatedState>.Storage<A>();
  return OUTLINED_FUNCTION_6_10();
}

uint64_t partial apply for closure #1 in ShareCardControlsView.endSharePlayButton.getter()
{
  return partial apply for closure #1 in ShareCardControlsView.collaborateButton.getter();
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>);
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type ShareCardButton and conformance ShareCardButton, (void (*)(uint64_t))type metadata accessor for ShareCardButton);
    v3 = v2;
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyTransformModifier<Bool> and conformance _EnvironmentKeyTransformModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyTransformModifier<Bool>);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v5);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t partial apply for closure #1 in button #1 (title:) in ShareCardControlsView.shareScreenButton(tightLayout:)()
{
  return partial apply for closure #1 in ShareCardControlsView.collaborateButton.getter();
}

uint64_t sub_1BD2439F8()
{
  uint64_t v0;

  OUTLINED_FUNCTION_107_6();
  OUTLINED_FUNCTION_34_25();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  if (OUTLINED_FUNCTION_109() == 1)
  {
    v0 = OUTLINED_FUNCTION_105_5();
    OUTLINED_FUNCTION_17_1(v0);
  }
  else
  {
    swift_release();
  }
  return OUTLINED_FUNCTION_6_10();
}

uint64_t partial apply for closure #1 in closure #3 in ShareCardMenuButton.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  type metadata accessor for ShareCardMenuButton(0);
  OUTLINED_FUNCTION_49_3();
  return closure #1 in closure #3 in ShareCardMenuButton.body.getter(a1, v2 + v5, a2);
}

uint64_t objectdestroy_9Tm()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_93();
  v1 = *(_QWORD *)(OUTLINED_FUNCTION_107_6() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = (int *)OUTLINED_FUNCTION_14_2();
  v5 = *(unsigned __int8 *)(*((_QWORD *)v4 - 1) + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  if (OUTLINED_FUNCTION_121_0() == 1)
  {
    v6 = OUTLINED_FUNCTION_105_5();
    OUTLINED_FUNCTION_75(v6);
  }
  else
  {
    swift_release();
  }
  v7 = v0 + ((v2 + v3 + v5) & ~v5);
  type metadata accessor for Participant.State(0);
  switch(OUTLINED_FUNCTION_121_0())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 5u:
      v8 = OUTLINED_FUNCTION_33();
      OUTLINED_FUNCTION_75(v8);
      break;
    case 4u:
      v13 = OUTLINED_FUNCTION_33();
      OUTLINED_FUNCTION_75(v13);
      v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      v15 = v7 + *(int *)(v14 + 48);
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v15 + 120) >= 2uLL)
        __swift_destroy_boxed_opaque_existential_1(v15 + 96);
      if (*(_QWORD *)(v15 + 312))
      {
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
      }
      if (*(_QWORD *)(v7 + *(int *)(v14 + 64) + 8))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      break;
    default:
      break;
  }
  v9 = v7 + v4[5];
  v10 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = (id *)(v7 + v4[7]);
  if (*v11)
  {

    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  OUTLINED_FUNCTION_33();
  if (!OUTLINED_FUNCTION_7_23())
    OUTLINED_FUNCTION_5_62();
  type metadata accessor for Participant.CountdownInfo(0);
  if (!OUTLINED_FUNCTION_7_23())
    OUTLINED_FUNCTION_5_62();
  swift_release();
  return swift_deallocObject();
}

void partial apply for closure #1 in ShareCardMenuButton.body.getter()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(type metadata accessor for ShareCardMenuButton(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(OUTLINED_FUNCTION_14_2() - 8) + 80);
  closure #1 in ShareCardMenuButton.body.getter(v0 + v2, v0 + ((v2 + v3 + v4) & ~v4));
  OUTLINED_FUNCTION_18();
}

uint64_t partial apply for closure #2 in closure #1 in closure #3 in ShareCardMenuButton.body.getter@<X0>(uint64_t a1@<X8>)
{
  return closure #2 in closure #1 in closure #3 in ShareCardMenuButton.body.getter(a1);
}

void OUTLINED_FUNCTION_75_9()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  outlined init with copy of FeatureEligibility?(v1, *(_QWORD *)(v2 - 128), v0);
}

uint64_t OUTLINED_FUNCTION_85_10()
{
  return type metadata accessor for ShareCardButton(0);
}

uint64_t OUTLINED_FUNCTION_101_8()
{
  char v0;
  uint64_t v1;

  return outlined consume of Environment<CGFloat>.Content(v1, v0);
}

uint64_t OUTLINED_FUNCTION_102_6()
{
  uint64_t v0;
  unint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

uint64_t OUTLINED_FUNCTION_106_4()
{
  return type metadata accessor for LayoutSubviews();
}

uint64_t OUTLINED_FUNCTION_111_4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t OUTLINED_FUNCTION_112_6@<X0>(uint64_t (*a1)(uint64_t)@<X8>)
{
  uint64_t v1;

  return a1(v1 - 120);
}

uint64_t OUTLINED_FUNCTION_117_6()
{
  return NSNotificationCenter.Publisher.init(center:name:object:)();
}

uint64_t OUTLINED_FUNCTION_118_7()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_124_5(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  outlined init with take of Any?(v3, *(_QWORD *)(v4 - 104), a3);
}

uint64_t InCallControlsToggleCaptionsCell.ViewModel.isCaptioned.getter(char a1)
{
  return a1 & 1;
}

ConversationKit::InCallControlsToggleCaptionsCell::ViewModel __swiftcall InCallControlsToggleCaptionsCell.ViewModel.init(isCaptioned:)(Swift::Bool isCaptioned)
{
  return (ConversationKit::InCallControlsToggleCaptionsCell::ViewModel)isCaptioned;
}

uint64_t InCallControlsToggleCaptionsCell.delegate.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit32InCallControlsToggleCaptionsCell_delegate;
  OUTLINED_FUNCTION_2_0();
  return MEMORY[0x1C3B752C0](v1);
}

uint64_t InCallControlsToggleCaptionsCell.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + OBJC_IVAR____TtC15ConversationKit32InCallControlsToggleCaptionsCell_delegate;
  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*InCallControlsToggleCaptionsCell.delegate.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC15ConversationKit32InCallControlsToggleCaptionsCell_delegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  OUTLINED_FUNCTION_2_0();
  v6 = MEMORY[0x1C3B752C0](v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return InCallControlsBaseCell.delegate.modify;
}

id InCallControlsToggleCaptionsCell.toggleCaptionsSwitch.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC15ConversationKit32InCallControlsToggleCaptionsCell____lazy_storage___toggleCaptionsSwitch;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC15ConversationKit32InCallControlsToggleCaptionsCell____lazy_storage___toggleCaptionsSwitch);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC15ConversationKit32InCallControlsToggleCaptionsCell____lazy_storage___toggleCaptionsSwitch);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3D18]), sel_init);
    objc_msgSend(v4, sel_addTarget_action_forControlEvents_, v0, sel_didToggleCaptions, 4096);
    outlined bridged method (mbnn) of @objc NSObject.accessibilityIdentifier.setter(0xD00000000000001CLL, 0x80000001BD67E910, v4);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

uint64_t InCallControlsToggleCaptionsCell.accessoryView.getter@<X0>(uint64_t a1@<X8>)
{
  return InCallControlsIgnoreLMIRequestsCell.switchAccessory.getter(&demangling cache variable for type metadata for UICellAccessory?, &OBJC_IVAR____TtC15ConversationKit32InCallControlsToggleCaptionsCell____lazy_storage___accessoryView, (uint64_t (*)(_QWORD))MEMORY[0x1E0DC1D38], (void (*)(uint64_t))closure #1 in InCallControlsToggleCaptionsCell.accessoryView.getter, a1);
}

uint64_t closure #1 in InCallControlsToggleCaptionsCell.accessoryView.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t (**v13)();
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  _QWORD v19[2];

  v19[1] = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICellAccessory.LayoutDimension?);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for UICellAccessory.Placement();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UICellAccessory.CustomViewConfiguration();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = InCallControlsToggleCaptionsCell.toggleCaptionsSwitch.getter();
  v13 = (uint64_t (**)())&v7[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (displayed: UICellAccessory.DisplayedState, at: ()))
                                   + 48)];
  v14 = *MEMORY[0x1E0DC1C20];
  v15 = type metadata accessor for UICellAccessory.DisplayedState();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v7, v14, v15);
  *v13 = OUTLINED_FUNCTION_28_0;
  v13[1] = 0;
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DC1D18], v4);
  v16 = type metadata accessor for UICellAccessory.LayoutDimension();
  __swift_storeEnumTagSinglePayload((uint64_t)v3, 1, 1, v16);
  v17 = v12;
  UICellAccessory.CustomViewConfiguration.init(customView:placement:isHidden:reservedLayoutWidth:tintColor:maintainsFixedSize:)();
  static UICellAccessory.customView(configuration:)();

  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t InCallControlsToggleCaptionsCell.cellContentConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  return InCallControlsIgnoreLMIRequestsCell.switchAccessory.getter(&demangling cache variable for type metadata for UIListContentConfiguration?, &OBJC_IVAR____TtC15ConversationKit32InCallControlsToggleCaptionsCell____lazy_storage___cellContentConfiguration, (uint64_t (*)(_QWORD))MEMORY[0x1E0DC23A0], (void (*)(uint64_t))closure #1 in InCallControlsToggleCaptionsCell.cellContentConfiguration.getter, a1);
}

uint64_t closure #1 in InCallControlsToggleCaptionsCell.cellContentConfiguration.getter(void *a1)
{
  id v2;
  Swift::String v3;
  Swift::String_optional v4;
  Swift::String v5;
  id v6;
  void (*v7)(_BYTE *, _QWORD);
  void *v8;
  uint64_t v9;
  id v10;
  void (*v11)(_BYTE *, _QWORD);
  void (*v12)(_BYTE *, _QWORD);
  id v13;
  Class isa;
  _BYTE v16[32];
  Swift::String v17;

  MEMORY[0x1C3B73748]();
  v2 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v17._object = (void *)0xE000000000000000;
  v3._object = (void *)0x80000001BD67E8F0;
  v3._countAndFlagsBits = 0xD000000000000016;
  v4.value._countAndFlagsBits = 0x61737265766E6F43;
  v4.value._object = (void *)0xEF74694B6E6F6974;
  v5._countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  v17._countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v3, v4, (NSBundle)v2, v5, v17);

  UIListContentConfiguration.text.setter();
  if (one-time initialization token for tableViewCellTitleLabel != -1)
    swift_once();
  v6 = (id)static Colors.InCallControls.tableViewCellTitleLabel;
  v7 = (void (*)(_BYTE *, _QWORD))UIListContentConfiguration.textProperties.modify();
  UIListContentConfiguration.TextProperties.color.setter();
  v7(v16, 0);
  v8 = (void *)objc_opt_self();
  v9 = *MEMORY[0x1E0DC4A88];
  v10 = objc_msgSend(v8, sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A88]);
  UIFont.caseSensitive()();

  v11 = (void (*)(_BYTE *, _QWORD))UIListContentConfiguration.textProperties.modify();
  UIListContentConfiguration.TextProperties.font.setter();
  v11(v16, 0);
  objc_msgSend(a1, sel_effectiveUserInterfaceLayoutDirection);
  v12 = (void (*)(_BYTE *, _QWORD))UIListContentConfiguration.textProperties.modify();
  UIListContentConfiguration.TextProperties.adjustsFontForContentSizeCategory.setter();
  v12(v16, 0);
  v13 = objc_msgSend(v8, sel_preferredFontForTextStyle_, v9);
  isa = UIFont.caseSensitive()().super.isa;

  InCallControlsToggleCaptionsCell.verticalInset(_:scaledToFont:)(isa, 18.5);
  return UIListContentConfiguration.directionalLayoutMargins.setter();
}

id InCallControlsToggleCaptionsCell.__allocating_init(frame:)()
{
  Class v0;
  id v1;
  double v2;
  id v3;
  SEL v4;

  OUTLINED_FUNCTION_17_7();
  v1 = objc_allocWithZone(v0);
  v2 = OUTLINED_FUNCTION_15_0();
  return objc_msgSend(v3, v4, v2);
}

id InCallControlsToggleCaptionsCell.init(frame:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  objc_super *v4;
  SEL v5;
  id v6;
  uint64_t v8;

  OUTLINED_FUNCTION_17_7();
  OUTLINED_FUNCTION_18_1(OBJC_IVAR____TtC15ConversationKit32InCallControlsToggleCaptionsCell_delegate);
  *(_QWORD *)(v0
            + OBJC_IVAR____TtC15ConversationKit32InCallControlsToggleCaptionsCell____lazy_storage___toggleCaptionsSwitch) = 0;
  v1 = OUTLINED_FUNCTION_8_54();
  OUTLINED_FUNCTION_0_10(v1);
  v2 = OUTLINED_FUNCTION_9_49();
  OUTLINED_FUNCTION_0_10(v2);
  v8 = type metadata accessor for InCallControlsToggleCaptionsCell();
  v3 = OUTLINED_FUNCTION_15_0();
  v6 = objc_msgSendSuper2(v4, v5, v3, v0, v8);
  InCallControlsToggleCaptionsCell.configureContent()();

  return v6;
}

uint64_t type metadata accessor for InCallControlsToggleCaptionsCell()
{
  uint64_t result;

  result = type metadata singleton initialization cache for InCallControlsToggleCaptionsCell;
  if (!type metadata singleton initialization cache for InCallControlsToggleCaptionsCell)
    return swift_getSingletonMetadata();
  return result;
}

void InCallControlsToggleCaptionsCell.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;

  objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  OUTLINED_FUNCTION_0();
}

void InCallControlsToggleCaptionsCell.init(coder:)()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_18_1(OBJC_IVAR____TtC15ConversationKit32InCallControlsToggleCaptionsCell_delegate);
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit32InCallControlsToggleCaptionsCell____lazy_storage___toggleCaptionsSwitch] = 0;
  v1 = OUTLINED_FUNCTION_8_54();
  OUTLINED_FUNCTION_0_10(v1);
  v2 = OUTLINED_FUNCTION_9_49();
  OUTLINED_FUNCTION_0_10(v2);

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void InCallControlsToggleCaptionsCell.configureContent()()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  uint64_t v5;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11[5];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIBackgroundConfiguration?);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v11[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UIBackgroundConfiguration.listGroupedCell()();
  v4 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
  UIBackgroundConfiguration.backgroundColor.setter();
  type metadata accessor for UIVibrancyEffect();
  static UIVibrancyEffect.inCallControlsEffect.getter();
  UIBackgroundConfiguration.visualEffect.setter();
  v5 = type metadata accessor for UIBackgroundConfiguration();
  __swift_storeEnumTagSinglePayload((uint64_t)v3, 0, 1, v5);
  MEMORY[0x1C3B7370C](v3);
  objc_msgSend(v0, sel_setAutomaticallyUpdatesBackgroundConfiguration_, 0);
  v11[3] = type metadata accessor for UIListContentConfiguration();
  v11[4] = MEMORY[0x1E0DC2398];
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v11);
  InCallControlsToggleCaptionsCell.cellContentConfiguration.getter((uint64_t)boxed_opaque_existential_1);
  MEMORY[0x1C3B73700](v11);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UICellAccessory>);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for UICellAccessory() - 8) + 80);
  v8 = (v7 + 32) & ~v7;
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1BD6441D0;
  InCallControlsToggleCaptionsCell.accessoryView.getter(v9 + v8);
  UICollectionViewListCell.accessories.setter();
  OUTLINED_FUNCTION_18();
}

Swift::Void __swiftcall InCallControlsToggleCaptionsCell.configure(with:)(ConversationKit::InCallControlsToggleCaptionsCell::ViewModel with)
{
  id v2;

  v2 = InCallControlsToggleCaptionsCell.toggleCaptionsSwitch.getter();
  objc_msgSend(v2, sel_setOn_animated_, with.isCaptioned, 0);

}

double InCallControlsToggleCaptionsCell.verticalInset(_:scaledToFont:)(void *a1, double a2)
{
  id v3;
  id v4;
  id v5;
  double v6;
  void *v8;
  _OWORD v9[2];
  _BYTE v10[24];
  uint64_t v11;

  v3 = objc_msgSend(a1, sel_fontDescriptor);
  v4 = objc_msgSend(v3, sel_objectForKey_, *MEMORY[0x1E0DC13B8]);

  if (v4)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v9, 0, sizeof(v9));
  }
  outlined init with take of Any?((uint64_t)v9, (uint64_t)v10);
  if (v11)
  {
    type metadata accessor for UIFontTextStyle(0);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC37F8]), sel_initForTextStyle_, v8);
      objc_msgSend(v5, sel_scaledValueForValue_, a2);
      a2 = v6;

    }
  }
  else
  {
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v10, &demangling cache variable for type metadata for Any?);
  }
  return a2;
}

Swift::Void __swiftcall InCallControlsToggleCaptionsCell.didToggleCaptions()()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;

  if (OUTLINED_FUNCTION_19_15(*v0))
  {
    v2 = v1;
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v2 + 8))(v0, ObjectType, v2);
    swift_unknownObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_18();
  }
}

id InCallControlsToggleCaptionsCell.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InCallControlsToggleCaptionsCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BD244AC8@<X0>(uint64_t **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = OUTLINED_FUNCTION_19_15(**a1);
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t dispatch thunk of InCallControlsToggleCaptionsCellDelegate.inCallControlsDidToggleCaptionsCell(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t ObjC metadata update function for InCallControlsToggleCaptionsCell()
{
  return type metadata accessor for InCallControlsToggleCaptionsCell();
}

void type metadata completion function for InCallControlsToggleCaptionsCell()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for Participant?(319, &lazy cache variable for type metadata for UICellAccessory?, (void (*)(uint64_t))MEMORY[0x1E0DC1D38]);
  if (v0 <= 0x3F)
  {
    type metadata accessor for Participant?(319, (unint64_t *)&lazy cache variable for type metadata for UIListContentConfiguration?, (void (*)(uint64_t))MEMORY[0x1E0DC23A0]);
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for InCallControlsToggleCaptionsCell()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InCallControlsToggleCaptionsCell.delegate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of InCallControlsToggleCaptionsCell.delegate.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of InCallControlsToggleCaptionsCell.delegate.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of InCallControlsToggleCaptionsCell.configure(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of InCallControlsToggleCaptionsCell.didToggleCaptions()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE8))();
}

uint64_t storeEnumTagSinglePayload for InCallControlsToggleCaptionsCell.ViewModel(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BD244CB4 + 4 * byte_1BD653CE5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BD244CE8 + 4 * byte_1BD653CE0[v4]))();
}

uint64_t sub_1BD244CE8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD244CF0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD244CF8);
  return result;
}

uint64_t sub_1BD244D04(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD244D0CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BD244D10(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD244D18(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for InCallControlsToggleCaptionsCell.ViewModel()
{
  return &type metadata for InCallControlsToggleCaptionsCell.ViewModel;
}

uint64_t CollaborationInitiationManager.__allocating_init(conversationManager:)(uint64_t a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  return result;
}

uint64_t CollaborationInitiationManager.ensureInitiatorDisclosure(inConversationUUID:initiator:itemTitle:alertHostWindow:viewController:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;

  v7[20] = a6;
  v7[21] = v6;
  v7[18] = a4;
  v7[19] = a5;
  v7[16] = a2;
  v7[17] = a3;
  v7[15] = a1;
  v7[22] = type metadata accessor for MainActor();
  v7[23] = static MainActor.shared.getter();
  v7[24] = dispatch thunk of Actor.unownedExecutor.getter();
  v7[25] = v8;
  return OUTLINED_FUNCTION_0_6();
}

uint64_t CollaborationInitiationManager.ensureInitiatorDisclosure(inConversationUUID:initiator:itemTitle:alertHostWindow:viewController:)()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  Class isa;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0[16];
  v2 = *(void **)(v0[21] + 16);
  isa = UUID._bridgeToObjectiveC()().super.isa;
  v0[26] = isa;
  v0[7] = v0 + 31;
  v0[2] = v0;
  v0[3] = CollaborationInitiationManager.ensureInitiatorDisclosure(inConversationUUID:initiator:itemTitle:alertHostWindow:viewController:);
  v4 = swift_continuation_init();
  v0[10] = MEMORY[0x1E0C809B0];
  v5 = v0 + 10;
  v5[1] = 0x40000000;
  v5[2] = @objc completion handler block implementation for @escaping @callee_unowned @convention(block) (@unowned Bool, @unowned NSError?) -> () with result type Bool;
  v5[3] = &block_descriptor_46;
  v5[4] = v4;
  objc_msgSend(v2, sel_getNeedsDisclosureOfCollaborationInitiator_forConversationUUID_completionHandler_, v1, isa, v5);
  return swift_continuation_await();
}

{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 216) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  __int128 v6;
  __int128 v7;

  v1 = *(unsigned __int8 *)(v0 + 248);

  if (v1 == 1)
  {
    v2 = *(_QWORD *)(v0 + 144);
    v6 = *(_OWORD *)(v0 + 128);
    v7 = *(_OWORD *)(v0 + 152);
    *(_QWORD *)(v0 + 224) = static MainActor.shared.getter();
    v3 = swift_task_alloc();
    *(_QWORD *)(v0 + 232) = v3;
    *(_OWORD *)(v3 + 16) = v7;
    *(_OWORD *)(v3 + 32) = v6;
    *(_QWORD *)(v3 + 48) = v2;
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 240) = v4;
    *v4 = v0;
    v4[1] = CollaborationInitiationManager.ensureInitiatorDisclosure(inConversationUUID:initiator:itemTitle:alertHostWindow:viewController:);
    return withCheckedContinuation<A>(isolation:function:_:)();
  }
  else
  {
    OUTLINED_FUNCTION_4_88();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(1);
  }
}

{
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_1_3();
}

{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_4_88();
  v1 = *(unsigned __int8 *)(v0 + 249);
  if ((_DWORD)v1 == 1)
    CollaborationInitiationManager.addDisclosedInitiator(_:toConversationUUID:)(*(_QWORD *)(v0 + 128));
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 208);
  OUTLINED_FUNCTION_4_88();
  swift_willThrow();

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

id CollaborationInitiationManager.conversationManager.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

uint64_t CollaborationInitiationManager.init(conversationManager:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return v1;
}

uint64_t CollaborationInitiationManager.ensureInitiatorDisclosure(inConversationUUID:itemProvider:itemTitle:alertHostWindow:viewController:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;

  v7[6] = a6;
  v7[7] = v6;
  v7[4] = a4;
  v7[5] = a5;
  v7[2] = a1;
  v7[3] = a3;
  v7[8] = type metadata accessor for MainActor();
  v7[9] = static MainActor.shared.getter();
  v8 = (_QWORD *)swift_task_alloc();
  v7[10] = v8;
  *v8 = v7;
  v8[1] = CollaborationInitiationManager.ensureInitiatorDisclosure(inConversationUUID:itemProvider:itemTitle:alertHostWindow:viewController:);
  return NSItemProvider.collaborationInitiator.getter();
}

uint64_t CollaborationInitiationManager.ensureInitiatorDisclosure(inConversationUUID:itemProvider:itemTitle:alertHostWindow:viewController:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t **v2;
  uint64_t *v4;
  _QWORD *v6;

  v4 = *v2;
  v4[11] = a1;
  v4[12] = v1;
  swift_task_dealloc();
  if (v1)
  {
    dispatch thunk of Actor.unownedExecutor.getter();
    return OUTLINED_FUNCTION_1_3();
  }
  else
  {
    v6 = (_QWORD *)swift_task_alloc();
    v4[13] = (uint64_t)v6;
    *v6 = v4;
    v6[1] = CollaborationInitiationManager.ensureInitiatorDisclosure(inConversationUUID:itemProvider:itemTitle:alertHostWindow:viewController:);
    return CollaborationInitiationManager.ensureInitiatorDisclosure(inConversationUUID:initiator:itemTitle:alertHostWindow:viewController:)(v4[2], a1, v4[3], v4[4], v4[5], v4[6]);
  }
}

uint64_t CollaborationInitiationManager.ensureInitiatorDisclosure(inConversationUUID:itemProvider:itemTitle:alertHostWindow:viewController:)(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 112) = v1;
  swift_task_dealloc();
  if (!v1)
  {

    *(_BYTE *)(v4 + 120) = a1 & 1;
  }
  dispatch thunk of Actor.unownedExecutor.getter();
  return OUTLINED_FUNCTION_0_6();
}

uint64_t CollaborationInitiationManager.ensureInitiatorDisclosure(inConversationUUID:itemProvider:itemTitle:alertHostWindow:viewController:)()
{
  uint64_t v0;

  OUTLINED_FUNCTION_44_2();
  return OUTLINED_FUNCTION_10_5(*(unsigned __int8 *)(v0 + 120), *(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;

  OUTLINED_FUNCTION_44_2();
  return OUTLINED_FUNCTION_10_5(0, *(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;

  OUTLINED_FUNCTION_44_2();
  return OUTLINED_FUNCTION_10_5(0, *(uint64_t (**)(void))(v0 + 8));
}

uint64_t @objc completion handler block implementation for @escaping @callee_unowned @convention(block) (@unowned Bool, @unowned NSError?) -> () with result type Bool(uint64_t a1, char a2, void *a3)
{
  if (a3)
    return specialized _resumeUnsafeThrowingContinuationWithError<A>(_:_:)(*(_QWORD *)(a1 + 32), a3);
  else
    return specialized _resumeUnsafeThrowingContinuation<A>(_:_:)(*(_QWORD *)(a1 + 32), a2);
}

uint64_t closure #1 in CollaborationInitiationManager.ensureInitiatorDisclosure(inConversationUUID:initiator:itemTitle:alertHostWindow:viewController:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v16 = a5;
  v17 = a6;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<Bool, Never>);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x1E0C80A78](v10);
  type metadata accessor for PlatformAlert();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v10);
  v13 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v14 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v14 + v13, (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  static PlatformAlert.confirmStartCollaboration(in:from:initiator:itemTitle:_:)(a2, a3, a4, v16, v17, (uint64_t (*)(_QWORD))partial apply for closure #1 in closure #1 in CollaborationInitiationManager.ensureInitiatorDisclosure(inConversationUUID:initiator:itemTitle:alertHostWindow:viewController:), v14);
  return swift_release();
}

uint64_t partial apply for closure #1 in CollaborationInitiationManager.ensureInitiatorDisclosure(inConversationUUID:initiator:itemTitle:alertHostWindow:viewController:)(uint64_t a1)
{
  uint64_t *v1;

  return closure #1 in CollaborationInitiationManager.ensureInitiatorDisclosure(inConversationUUID:initiator:itemTitle:alertHostWindow:viewController:)(a1, v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t closure #1 in closure #1 in CollaborationInitiationManager.ensureInitiatorDisclosure(inConversationUUID:initiator:itemTitle:alertHostWindow:viewController:)()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<Bool, Never>);
  return CheckedContinuation.resume(returning:)();
}

void CollaborationInitiationManager.addDisclosedInitiator(_:toConversationUUID:)(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  Class isa;

  v3 = *(void **)(v1 + 16);
  isa = UUID._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v3, sel_addDisclosedCollaborationInitiator_toConversationUUID_, a1, isa);

}

uint64_t CollaborationInitiationManager.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t CollaborationInitiationManager.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CollaborationInitiationManager()
{
  return objc_opt_self();
}

uint64_t method lookup function for CollaborationInitiationManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CollaborationInitiationManager.__allocating_init(conversationManager:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_1BD2455E8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<Bool, Never>);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in CollaborationInitiationManager.ensureInitiatorDisclosure(inConversationUUID:initiator:itemTitle:alertHostWindow:viewController:)()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<Bool, Never>);
  return closure #1 in closure #1 in CollaborationInitiationManager.ensureInitiatorDisclosure(inConversationUUID:initiator:itemTitle:alertHostWindow:viewController:)();
}

ConversationKit::ImageNames::Drawer_optional __swiftcall ImageNames.Drawer.init(rawValue:)(Swift::String rawValue)
{
  uint64_t countAndFlagsBits;
  Swift::OpaquePointer v2;
  ConversationKit::ImageNames::Drawer_optional result;

  countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._rawValue = &outlined read-only object #0 of ImageNames.Drawer.init(rawValue:);
  OUTLINED_FUNCTION_4_89(v2, countAndFlagsBits);
  OUTLINED_FUNCTION_7_15();
  OUTLINED_FUNCTION_0();
  return result;
}

uint64_t ImageNames.Drawer.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BD245704 + 4 * byte_1BD653DF0[a1]))(0x685F726577617264, 0xED0000676F64746FLL);
}

uint64_t sub_1BD245704()
{
  return 0x655F726577617264;
}

unint64_t sub_1BD245754()
{
  return OUTLINED_FUNCTION_0_52(22);
}

uint64_t sub_1BD24576C()
{
  return 0x615F726577617264;
}

uint64_t sub_1BD24578C()
{
  return 0x675F726577617264;
}

uint64_t sub_1BD2457AC()
{
  return 0x6C6C61632D646E65;
}

void protocol witness for static Equatable.== infix(_:_:) in conformance ImageNames.Drawer()
{
  specialized == infix<A>(_:_:)();
}

void protocol witness for Hashable.hashValue.getter in conformance ImageNames.Drawer()
{
  unsigned __int8 *v0;

  specialized RawRepresentable<>.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance ImageNames.Drawer()
{
  specialized RawRepresentable<>.hash(into:)();
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance ImageNames.Drawer(uint64_t a1)
{
  unsigned __int8 *v1;

  specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

ConversationKit::ImageNames::Drawer_optional protocol witness for RawRepresentable.init(rawValue:) in conformance ImageNames.Drawer@<W0>(Swift::String *a1@<X0>, ConversationKit::ImageNames::Drawer_optional *a2@<X8>)
{
  ConversationKit::ImageNames::Drawer_optional result;

  result.value = ImageNames.Drawer.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance ImageNames.Drawer()
{
  uint64_t *v0;
  unsigned __int8 v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_8_75();
  *v0 = ImageNames.Drawer.rawValue.getter(v1);
  v0[1] = v2;
  OUTLINED_FUNCTION_0();
}

uint64_t protocol witness for ImageName.rawValue.getter in conformance ImageNames.Drawer()
{
  unsigned __int8 *v0;

  return ImageNames.Drawer.rawValue.getter(*v0);
}

ConversationKit::ImageNames::Staging_optional __swiftcall ImageNames.Staging.init(rawValue:)(Swift::String rawValue)
{
  uint64_t countAndFlagsBits;
  Swift::OpaquePointer v2;
  ConversationKit::ImageNames::Staging_optional result;

  countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._rawValue = &outlined read-only object #0 of ImageNames.Staging.init(rawValue:);
  OUTLINED_FUNCTION_4_89(v2, countAndFlagsBits);
  OUTLINED_FUNCTION_7_15();
  OUTLINED_FUNCTION_0();
  return result;
}

uint64_t ImageNames.Staging.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1BD2458B8 + 4 * byte_1BD653DF8[a1]))(0xD000000000000014, 0x80000001BD66C110);
}

unint64_t sub_1BD2458B8()
{
  return OUTLINED_FUNCTION_0_52(17);
}

uint64_t sub_1BD2458F0()
{
  uint64_t v0;

  return v0 + 3;
}

void sub_1BD245900()
{
  JUMPOUT(0x1BD24590CLL);
}

void protocol witness for static Equatable.== infix(_:_:) in conformance ImageNames.Staging(unsigned __int8 *a1, unsigned __int8 *a2)
{
  specialized == infix<A>(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance ImageNames.Staging()
{
  unsigned __int8 *v0;

  specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ImageNames.Staging(uint64_t a1)
{
  unsigned __int8 *v1;

  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance ImageNames.Staging(uint64_t a1)
{
  unsigned __int8 *v1;

  specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

ConversationKit::ImageNames::Staging_optional protocol witness for RawRepresentable.init(rawValue:) in conformance ImageNames.Staging@<W0>(Swift::String *a1@<X0>, ConversationKit::ImageNames::Staging_optional *a2@<X8>)
{
  ConversationKit::ImageNames::Staging_optional result;

  result.value = ImageNames.Staging.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance ImageNames.Staging()
{
  uint64_t *v0;
  unsigned __int8 v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_8_75();
  *v0 = ImageNames.Staging.rawValue.getter(v1);
  v0[1] = v2;
  OUTLINED_FUNCTION_0();
}

uint64_t protocol witness for ImageName.rawValue.getter in conformance ImageNames.Staging()
{
  unsigned __int8 *v0;

  return ImageNames.Staging.rawValue.getter(*v0);
}

ConversationKit::ImageNames::InCall_optional __swiftcall ImageNames.InCall.init(rawValue:)(Swift::String rawValue)
{
  Swift::OpaquePointer v1;
  ConversationKit::ImageNames::InCall_optional result;

  v1._rawValue = &outlined read-only object #0 of ImageNames.InCall.init(rawValue:);
  ImageNames.InCall.init(rawValue:)(rawValue._countAndFlagsBits, (uint64_t)rawValue._object, v1);
  return result;
}

uint64_t ImageNames.InCall.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1BD2459D4 + 4 * byte_1BD653DFF[a1]))(0xD000000000000011, 0x80000001BD66C130);
}

uint64_t sub_1BD2459D4(uint64_t a1)
{
  return a1 + 2;
}

void protocol witness for static Equatable.== infix(_:_:) in conformance ImageNames.InCall(char *a1)
{
  specialized == infix<A>(_:_:)(*a1);
}

void protocol witness for Hashable.hashValue.getter in conformance ImageNames.InCall()
{
  unsigned __int8 *v0;

  specialized RawRepresentable<>.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance ImageNames.InCall(uint64_t a1)
{
  char *v1;

  specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance ImageNames.InCall(uint64_t a1)
{
  unsigned __int8 *v1;

  specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

ConversationKit::ImageNames::InCall_optional protocol witness for RawRepresentable.init(rawValue:) in conformance ImageNames.InCall@<W0>(Swift::String *a1@<X0>, ConversationKit::ImageNames::InCall_optional *a2@<X8>)
{
  ConversationKit::ImageNames::InCall_optional result;

  result.value = ImageNames.InCall.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance ImageNames.InCall()
{
  uint64_t *v0;
  unsigned __int8 v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_8_75();
  *v0 = ImageNames.InCall.rawValue.getter(v1);
  v0[1] = v2;
  OUTLINED_FUNCTION_0();
}

uint64_t protocol witness for ImageName.rawValue.getter in conformance ImageNames.InCall()
{
  unsigned __int8 *v0;

  return ImageNames.InCall.rawValue.getter(*v0);
}

ConversationKit::ImageNames::ConversationControls_optional __swiftcall ImageNames.ConversationControls.init(rawValue:)(Swift::String rawValue)
{
  Swift::OpaquePointer v1;
  ConversationKit::ImageNames::ConversationControls_optional result;

  v1._rawValue = &outlined read-only object #0 of ImageNames.ConversationControls.init(rawValue:);
  ImageNames.InCall.init(rawValue:)(rawValue._countAndFlagsBits, (uint64_t)rawValue._object, v1);
  return result;
}

void ImageNames.InCall.init(rawValue:)(uint64_t a1, uint64_t a2, Swift::OpaquePointer a3)
{
  OUTLINED_FUNCTION_4_89(a3, a1);
  OUTLINED_FUNCTION_7_15();
  OUTLINED_FUNCTION_0();
}

uint64_t ImageNames.ConversationControls.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BD245AFC + 4 * byte_1BD653E04[a1]))(0x616C706572616873, 0xE900000000000079);
}

unint64_t sub_1BD245AFC()
{
  return OUTLINED_FUNCTION_0_52(21);
}

uint64_t sub_1BD245B14()
{
  return 0x68736E6565726373;
}

void protocol witness for static Equatable.== infix(_:_:) in conformance ImageNames.ConversationControls(char *a1)
{
  specialized == infix<A>(_:_:)(*a1);
}

void protocol witness for Hashable.hashValue.getter in conformance ImageNames.ConversationControls()
{
  unsigned __int8 *v0;

  specialized RawRepresentable<>.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance ImageNames.ConversationControls(uint64_t a1)
{
  char *v1;

  specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance ImageNames.ConversationControls(uint64_t a1)
{
  unsigned __int8 *v1;

  specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

ConversationKit::ImageNames::ConversationControls_optional protocol witness for RawRepresentable.init(rawValue:) in conformance ImageNames.ConversationControls@<W0>(Swift::String *a1@<X0>, ConversationKit::ImageNames::ConversationControls_optional *a2@<X8>)
{
  ConversationKit::ImageNames::ConversationControls_optional result;

  result.value = ImageNames.ConversationControls.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance ImageNames.ConversationControls()
{
  uint64_t *v0;
  unsigned __int8 v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_8_75();
  *v0 = ImageNames.ConversationControls.rawValue.getter(v1);
  v0[1] = v2;
  OUTLINED_FUNCTION_0();
}

uint64_t protocol witness for ImageName.rawValue.getter in conformance ImageNames.ConversationControls()
{
  unsigned __int8 *v0;

  return ImageNames.ConversationControls.rawValue.getter(*v0);
}

void ImageNames.Roster.init(rawValue:)(uint64_t a1, uint64_t a2)
{
  Swift::OpaquePointer v2;

  v2._rawValue = &outlined read-only object #0 of ImageNames.Roster.init(rawValue:);
  ImageNames.Roster.init(rawValue:)(a1, a2, v2);
}

unint64_t ImageNames.Roster.rawValue.getter()
{
  return OUTLINED_FUNCTION_0_52(16);
}

void protocol witness for RawRepresentable.init(rawValue:) in conformance ImageNames.Roster(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  char v3;

  ImageNames.Roster.init(rawValue:)(*a1, a1[1]);
  *a2 = v3 != 0;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance ImageNames.Roster(_QWORD *a1@<X8>)
{
  uint64_t v2;

  ImageNames.Roster.rawValue.getter();
  *a1 = 0xD000000000000010;
  a1[1] = v2;
  OUTLINED_FUNCTION_0();
}

unint64_t protocol witness for ImageName.rawValue.getter in conformance ImageNames.Roster()
{
  ImageNames.Roster.rawValue.getter();
  return 0xD000000000000010;
}

ConversationKit::ImageNames::ParticipantView_optional __swiftcall ImageNames.ParticipantView.init(rawValue:)(Swift::String rawValue)
{
  uint64_t countAndFlagsBits;
  Swift::OpaquePointer v2;
  ConversationKit::ImageNames::ParticipantView_optional result;

  countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._rawValue = &outlined read-only object #0 of ImageNames.ParticipantView.init(rawValue:);
  OUTLINED_FUNCTION_4_89(v2, countAndFlagsBits);
  OUTLINED_FUNCTION_7_15();
  OUTLINED_FUNCTION_0();
  return result;
}

uint64_t ImageNames.ParticipantView.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1BD245CF4 + 4 * byte_1BD653E09[a1]))(0xD000000000000013, 0x80000001BD66C250);
}

void sub_1BD245CF4()
{
  OUTLINED_FUNCTION_61();
}

uint64_t sub_1BD245D7C()
{
  return 0x735F646573756170;
}

unint64_t sub_1BD245D9C()
{
  return 0xD000000000000014;
}

uint64_t sub_1BD245DC4()
{
  return 0x6C5F646573756170;
}

void protocol witness for static Equatable.== infix(_:_:) in conformance ImageNames.ParticipantView(unsigned __int8 *a1, unsigned __int8 *a2)
{
  specialized == infix<A>(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance ImageNames.ParticipantView()
{
  unsigned __int8 *v0;

  specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ImageNames.ParticipantView(uint64_t a1)
{
  unsigned __int8 *v1;

  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance ImageNames.ParticipantView(uint64_t a1)
{
  unsigned __int8 *v1;

  specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

ConversationKit::ImageNames::ParticipantView_optional protocol witness for RawRepresentable.init(rawValue:) in conformance ImageNames.ParticipantView@<W0>(Swift::String *a1@<X0>, ConversationKit::ImageNames::ParticipantView_optional *a2@<X8>)
{
  ConversationKit::ImageNames::ParticipantView_optional result;

  result.value = ImageNames.ParticipantView.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance ImageNames.ParticipantView()
{
  uint64_t *v0;
  unsigned __int8 v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_8_75();
  *v0 = ImageNames.ParticipantView.rawValue.getter(v1);
  v0[1] = v2;
  OUTLINED_FUNCTION_0();
}

uint64_t protocol witness for ImageName.rawValue.getter in conformance ImageNames.ParticipantView()
{
  unsigned __int8 *v0;

  return ImageNames.ParticipantView.rawValue.getter(*v0);
}

void ImageNames.CallRecording.init(rawValue:)(uint64_t a1, uint64_t a2)
{
  Swift::OpaquePointer v2;

  v2._rawValue = &outlined read-only object #0 of ImageNames.CallRecording.init(rawValue:);
  ImageNames.Roster.init(rawValue:)(a1, a2, v2);
}

void ImageNames.Roster.init(rawValue:)(uint64_t a1, uint64_t a2, Swift::OpaquePointer a3)
{
  OUTLINED_FUNCTION_4_89(a3, a1);
  OUTLINED_FUNCTION_7_15();
  OUTLINED_FUNCTION_0();
}

unint64_t ImageNames.CallRecording.rawValue.getter()
{
  return OUTLINED_FUNCTION_0_52(31);
}

void protocol witness for RawRepresentable.init(rawValue:) in conformance ImageNames.CallRecording(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  char v3;

  ImageNames.CallRecording.init(rawValue:)(*a1, a1[1]);
  *a2 = v3 != 0;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance ImageNames.CallRecording(_QWORD *a1@<X8>)
{
  uint64_t v2;

  ImageNames.CallRecording.rawValue.getter();
  *a1 = 0xD00000000000001FLL;
  a1[1] = v2;
  OUTLINED_FUNCTION_0();
}

unint64_t protocol witness for ImageName.rawValue.getter in conformance ImageNames.CallRecording()
{
  ImageNames.CallRecording.rawValue.getter();
  return 0xD00000000000001FLL;
}

unint64_t lazy protocol witness table accessor for type ImageNames.Drawer and conformance ImageNames.Drawer()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ImageNames.Drawer and conformance ImageNames.Drawer;
  if (!lazy protocol witness table cache variable for type ImageNames.Drawer and conformance ImageNames.Drawer)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ImageNames.Drawer, &type metadata for ImageNames.Drawer);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ImageNames.Drawer and conformance ImageNames.Drawer);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ImageNames.Staging and conformance ImageNames.Staging()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ImageNames.Staging and conformance ImageNames.Staging;
  if (!lazy protocol witness table cache variable for type ImageNames.Staging and conformance ImageNames.Staging)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ImageNames.Staging, &type metadata for ImageNames.Staging);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ImageNames.Staging and conformance ImageNames.Staging);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ImageNames.InCall and conformance ImageNames.InCall()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ImageNames.InCall and conformance ImageNames.InCall;
  if (!lazy protocol witness table cache variable for type ImageNames.InCall and conformance ImageNames.InCall)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ImageNames.InCall, &type metadata for ImageNames.InCall);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ImageNames.InCall and conformance ImageNames.InCall);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ImageNames.ConversationControls and conformance ImageNames.ConversationControls()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ImageNames.ConversationControls and conformance ImageNames.ConversationControls;
  if (!lazy protocol witness table cache variable for type ImageNames.ConversationControls and conformance ImageNames.ConversationControls)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ImageNames.ConversationControls, &type metadata for ImageNames.ConversationControls);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ImageNames.ConversationControls and conformance ImageNames.ConversationControls);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ImageNames.Roster and conformance ImageNames.Roster()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ImageNames.Roster and conformance ImageNames.Roster;
  if (!lazy protocol witness table cache variable for type ImageNames.Roster and conformance ImageNames.Roster)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ImageNames.Roster, &type metadata for ImageNames.Roster);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ImageNames.Roster and conformance ImageNames.Roster);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ImageNames.ParticipantView and conformance ImageNames.ParticipantView()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ImageNames.ParticipantView and conformance ImageNames.ParticipantView;
  if (!lazy protocol witness table cache variable for type ImageNames.ParticipantView and conformance ImageNames.ParticipantView)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ImageNames.ParticipantView, &type metadata for ImageNames.ParticipantView);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ImageNames.ParticipantView and conformance ImageNames.ParticipantView);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ImageNames.CallRecording and conformance ImageNames.CallRecording()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ImageNames.CallRecording and conformance ImageNames.CallRecording;
  if (!lazy protocol witness table cache variable for type ImageNames.CallRecording and conformance ImageNames.CallRecording)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ImageNames.CallRecording, &type metadata for ImageNames.CallRecording);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ImageNames.CallRecording and conformance ImageNames.CallRecording);
  }
  return result;
}

uint64_t dispatch thunk of ImageName.rawValue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of static NamedImageProviding.image(named:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

void type metadata accessor for ImageNames()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t getEnumTagSinglePayload for ImageNames.Drawer(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF9)
  {
    if (a2 + 7 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 7) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 8;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v5 = v6 - 8;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ImageNames.Drawer(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1BD2461E8 + 4 * byte_1BD653E19[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1BD24621C + 4 * byte_1BD653E14[v4]))();
}

uint64_t sub_1BD24621C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD246224(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD24622CLL);
  return result;
}

uint64_t sub_1BD246238(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD246240);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1BD246244(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD24624C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for ImageNames.Drawer()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t storeEnumTagSinglePayload for ImageNames.Staging(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1BD2462B0 + 4 * byte_1BD653E23[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1BD2462E4 + 4 * byte_1BD653E1E[v4]))();
}

uint64_t sub_1BD2462E4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD2462EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD2462F4);
  return result;
}

uint64_t sub_1BD246300(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD246308);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1BD24630C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD246314(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for ImageNames.Staging()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for ImageNames.InCall()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t storeEnumTagSinglePayload for ImageNames.InCall(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1BD24638C + 4 * byte_1BD653E2D[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1BD2463C0 + 4 * byte_1BD653E28[v4]))();
}

uint64_t sub_1BD2463C0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD2463C8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD2463D0);
  return result;
}

uint64_t sub_1BD2463DC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD2463E4);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1BD2463E8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD2463F0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for ImageNames.ConversationControls()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for ImageNames.Roster()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t getEnumTagSinglePayload for ImageNames.ParticipantView(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF6)
  {
    if (a2 + 10 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 10) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 11;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xB;
  v5 = v6 - 11;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ImageNames.ParticipantView(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_1BD2464EC + 4 * byte_1BD653E37[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_1BD246520 + 4 * byte_1BD653E32[v4]))();
}

uint64_t sub_1BD246520(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD246528(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD246530);
  return result;
}

uint64_t sub_1BD24653C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD246544);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_1BD246548(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD246550(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for ImageNames.ParticipantView()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t storeEnumTagSinglePayload for ImageNames.Roster(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BD2465A8 + 4 * byte_1BD653E3C[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BD2465C8 + 4 * byte_1BD653E41[v4]))();
}

_BYTE *sub_1BD2465A8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BD2465C8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BD2465D0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BD2465D8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BD2465E0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BD2465E8(_DWORD *result)
{
  *result = 0;
  return result;
}

void type metadata accessor for ImageNames.CallRecording()
{
  OUTLINED_FUNCTION_34_0();
}

void EffectsControlsViewController.effectsBrowserViewController.didset(void *a1)
{
  uint64_t v1;
  id *v3;
  id v4;
  id v5;
  id v6;
  char v7;
  id v8;
  id v9;

  v3 = (id *)(v1 + OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_effectsBrowserViewController);
  swift_beginAccess();
  v4 = *v3;
  if (!*v3)
  {
    if (!a1)
      return;
    goto LABEL_6;
  }
  if (!a1
    || (_sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIViewController),
        v5 = v4,
        v6 = a1,
        v7 = static NSObject.== infix(_:_:)(),
        v5,
        v6,
        (v7 & 1) == 0))
  {
LABEL_6:
    EffectsControlsViewController.removeEmbeddedBrowserViewController(_:)(a1);
    v8 = *v3;
    v9 = *v3;
    EffectsControlsViewController.embedBrowserViewController(_:)(v8);

  }
}

void *EffectsControlsViewController.effectsBrowserViewController.getter()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;

  v1 = (void **)(v0 + OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_effectsBrowserViewController);
  OUTLINED_FUNCTION_2_0();
  v2 = *v1;
  v3 = v2;
  return v2;
}

void EffectsControlsViewController.effectsBrowserViewController.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  id v5;

  v3 = (void **)(v1 + OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_effectsBrowserViewController);
  OUTLINED_FUNCTION_2_0();
  v4 = *v3;
  *v3 = a1;
  v5 = a1;
  EffectsControlsViewController.effectsBrowserViewController.didset(v4);

  OUTLINED_FUNCTION_9_0();
}

void EffectsControlsViewController.effectsBrowserViewController.modify()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  void **v3;
  void *v4;
  id v5;

  v2 = OUTLINED_FUNCTION_38_1();
  *v0 = v2;
  v2[4] = v1;
  v3 = (void **)(v1 + OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_effectsBrowserViewController);
  OUTLINED_FUNCTION_2_0();
  v4 = *v3;
  v2[3] = *v3;
  v5 = v4;
  OUTLINED_FUNCTION_18();
}

void EffectsControlsViewController.effectsBrowserViewController.modify(uint64_t a1, char a2)
{
  void *v2;
  id v3;
  id *v4;
  id v5;

  v2 = *(void **)a1;
  v4 = (id *)(*(_QWORD *)a1 + 24);
  v3 = *v4;
  if ((a2 & 1) != 0)
  {
    v5 = v3;
    EffectsControlsViewController.effectsBrowserViewController.setter(v3);

  }
  else
  {
    EffectsControlsViewController.effectsBrowserViewController.setter(*(void **)(*(_QWORD *)a1 + 24));
  }
  free(v2);
}

id EffectsControlsViewController.effectsEnabled.didset()
{
  uint64_t v0;
  void *v1;
  unsigned __int8 *v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_effectsButton);
  v2 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_effectsEnabled);
  swift_beginAccess();
  return objc_msgSend(v1, sel_setSelected_, *v2);
}

void EffectsControlsViewController.effectsEnabled.getter()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_32();
}

void EffectsControlsViewController.effectsEnabled.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_effectsEnabled);
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  EffectsControlsViewController.effectsEnabled.didset();
  OUTLINED_FUNCTION_9_0();
}

void (*EffectsControlsViewController.effectsEnabled.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_2_0();
  return EffectsControlsViewController.effectsEnabled.modify;
}

void EffectsControlsViewController.effectsEnabled.modify(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    EffectsControlsViewController.effectsEnabled.didset();
  OUTLINED_FUNCTION_0();
}

void EffectsControlsViewController.effectsBrowserHeight.didset(double a1)
{
  uint64_t v1;
  double *v3;

  v3 = (double *)(v1 + OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_effectsBrowserHeight);
  swift_beginAccess();
  if (*v3 != a1)
    EffectsControlsViewController.updateViews()();
}

double EffectsControlsViewController.effectsBrowserHeight.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_effectsBrowserHeight;
  OUTLINED_FUNCTION_2_0();
  return *(double *)v1;
}

void EffectsControlsViewController.effectsBrowserHeight.setter(double a1)
{
  uint64_t v1;
  double *v3;
  double v4;

  v3 = (double *)(v1 + OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_effectsBrowserHeight);
  OUTLINED_FUNCTION_2_0();
  v4 = *v3;
  *v3 = a1;
  EffectsControlsViewController.effectsBrowserHeight.didset(v4);
}

void EffectsControlsViewController.effectsBrowserHeight.modify()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  v2 = OUTLINED_FUNCTION_38_1();
  *v0 = v2;
  v2[4] = v1;
  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_effectsBrowserHeight);
  OUTLINED_FUNCTION_2_0();
  v2[3] = *v3;
  OUTLINED_FUNCTION_18();
}

void EffectsControlsViewController.effectsBrowserHeight.modify(uint64_t a1)
{
  void *v1;

  v1 = *(void **)a1;
  EffectsControlsViewController.effectsBrowserHeight.setter(*(double *)(*(_QWORD *)a1 + 24));
  OUTLINED_FUNCTION_11(v1);
}

void EffectsControlsViewController.effectsButtonIsVisible.getter()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_32();
}

void EffectsControlsViewController.effectsButtonIsVisible.setter(char a1)
{
  uint64_t v1;
  char *v3;
  char v4;

  v3 = (char *)(v1 + OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_effectsButtonIsVisible);
  OUTLINED_FUNCTION_2_0();
  v4 = *v3;
  *v3 = a1;
  EffectsControlsViewController.effectsButtonIsVisible.didset(v4);
  OUTLINED_FUNCTION_9_0();
}

void EffectsControlsViewController.effectsButtonIsVisible.didset(char a1)
{
  uint64_t v1;
  int v2;
  _BYTE *v3;
  double v4;

  v2 = a1 & 1;
  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_effectsButtonIsVisible);
  swift_beginAccess();
  if (*v3 != v2)
  {
    v4 = 0.0;
    if (*v3)
      v4 = 1.0;
    objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_effectsButton), sel_setAlpha_, v4);
    EffectsControlsViewController.updateViews()();
  }
}

void EffectsControlsViewController.effectsButtonIsVisible.modify()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  _BYTE *v3;

  v2 = OUTLINED_FUNCTION_38_1();
  *v0 = v2;
  v2[3] = v1;
  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_effectsButtonIsVisible);
  OUTLINED_FUNCTION_2_0();
  *((_BYTE *)v2 + 32) = *v3;
  OUTLINED_FUNCTION_18();
}

void EffectsControlsViewController.effectsButtonIsVisible.modify(uint64_t a1)
{
  void *v1;

  v1 = *(void **)a1;
  EffectsControlsViewController.effectsButtonIsVisible.setter(*(_BYTE *)(*(_QWORD *)a1 + 32));
  OUTLINED_FUNCTION_11(v1);
}

uint64_t EffectsControlsViewController.constraintsToUpdate.setter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_constraintsToUpdate);
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  return swift_bridgeObjectRelease();
}

id EffectsControlsViewController.effectsButton.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_effectsButton);
}

Swift::Bool __swiftcall EffectsControlsViewController._canShowWhileLocked()()
{
  return 1;
}

char *EffectsControlsViewController.__allocating_init(delegate:)()
{
  objc_class *v0;
  id v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;

  v1 = objc_allocWithZone(v0);
  swift_getObjectType();
  v2 = OUTLINED_FUNCTION_14_8();
  return OUTLINED_FUNCTION_6_71(v2, v3, v4, v5);
}

char *EffectsControlsViewController.init(delegate:)()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;

  swift_getObjectType();
  v0 = OUTLINED_FUNCTION_14_8();
  return OUTLINED_FUNCTION_6_71(v0, v1, v2, v3);
}

id EffectsControlsViewController.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void EffectsControlsViewController.init(coder:)()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  uint64_t v6;

  v1 = v0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_effectsBrowserViewController] = 0;
  v0[OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_effectsEnabled] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_effectsBrowserHeight] = 0x404D000000000000;
  v0[OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_effectsButtonIsVisible] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_constraintsToUpdate] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v2 = OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_effectsButton;
  type metadata accessor for InCallControlButton();
  LOWORD(v6) = 1;
  *(_QWORD *)&v0[v2] = InCallControlButton.__allocating_init(style:symbolDescriber:text:discSize:imageSpacing:visualEffectGroupName:wantsPointerInteraction:isImageTrailing:)();
  v3 = OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_backgroundBlurView;
  v4 = objc_msgSend((id)objc_opt_self(), sel_effectWithStyle_, 8, v6);
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F58]), sel_initWithEffect_, v4);

  *(_QWORD *)&v1[v3] = v5;
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void EffectsControlsViewController.setupViews()()
{
  char *v0;
  uint64_t v1;
  char *v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  id v19;
  id v20;
  uint64_t v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  uint64_t v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  void *v45;
  void *v46;
  id v47;
  id v48;
  Class isa;

  v2 = v0;
  v3 = objc_msgSend(v0, sel_view);
  if (!v3)
  {
    __break(1u);
    goto LABEL_11;
  }
  v4 = v3;
  v5 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
  OUTLINED_FUNCTION_53_0(v4, sel_setBackgroundColor_);

  v6 = OUTLINED_FUNCTION_1_55();
  if (!v6)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v7 = v6;
  v8 = *(void **)&v2[OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_effectsButton];
  OUTLINED_FUNCTION_53_0(v6, sel_addSubview_);

  v9 = OUTLINED_FUNCTION_1_55();
  if (!v9)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v10 = v9;
  v11 = OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_backgroundBlurView;
  objc_msgSend(v9, sel_addSubview_, *(_QWORD *)&v2[OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_backgroundBlurView]);

  v12 = objc_msgSend(*(id *)&v2[v11], sel_layer);
  objc_msgSend(v12, sel_setCornerCurve_, *MEMORY[0x1E0CD2A68]);

  v13 = objc_msgSend(*(id *)&v2[v11], sel_layer);
  objc_msgSend(v13, sel_setCornerRadius_, 20.0);

  objc_msgSend(*(id *)&v2[v11], sel_setClipsToBounds_, 1);
  v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  UIControl.addAction(for:handler:)(64, (uint64_t)partial apply for closure #1 in EffectsControlsViewController.setupViews(), v14);
  swift_release_n();
  OUTLINED_FUNCTION_18_4(*(id *)&v2[v11], sel_setTranslatesAutoresizingMaskIntoConstraints_);
  OUTLINED_FUNCTION_18_4(v8, sel_setTranslatesAutoresizingMaskIntoConstraints_);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1BD64C5C0;
  v16 = OUTLINED_FUNCTION_9(v15, sel_widthAnchor);
  Layout.LocalParticipantViewCameraControls.init()();
  static Platform.current.getter();
  v17 = OUTLINED_FUNCTION_13_68();
  OUTLINED_FUNCTION_18_11();
  *(_QWORD *)(v15 + 32) = v1;
  v19 = OUTLINED_FUNCTION_9(v18, sel_heightAnchor);
  Layout.LocalParticipantViewCameraControls.init()();
  static Platform.current.getter();
  v20 = OUTLINED_FUNCTION_13_68();
  OUTLINED_FUNCTION_18_11();
  *(_QWORD *)(v15 + 40) = v1;
  v22 = OUTLINED_FUNCTION_9(v21, sel_leadingAnchor);
  v23 = OUTLINED_FUNCTION_1_55();
  if (!v23)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v24 = v23;
  v25 = objc_msgSend(v23, sel_leadingAnchor);

  v26 = objc_msgSend(v22, sel_constraintEqualToAnchor_, v25);
  OUTLINED_FUNCTION_18_11();

  *(_QWORD *)(v15 + 48) = v24;
  v28 = OUTLINED_FUNCTION_9(v27, sel_centerYAnchor);
  v29 = OUTLINED_FUNCTION_1_55();
  if (!v29)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v30 = v29;
  v31 = objc_msgSend(v29, sel_centerYAnchor);
  OUTLINED_FUNCTION_18_11();
  v32 = OUTLINED_FUNCTION_5_86();
  OUTLINED_FUNCTION_19_5();

  *(_QWORD *)(v15 + 56) = v30;
  v33 = objc_msgSend(*(id *)&v2[v11], sel_topAnchor);
  v34 = OUTLINED_FUNCTION_1_55();
  if (!v34)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v35 = v34;
  v36 = objc_msgSend(v34, sel_topAnchor);
  OUTLINED_FUNCTION_18_11();
  v37 = OUTLINED_FUNCTION_5_86();
  OUTLINED_FUNCTION_19_5();

  *(_QWORD *)(v15 + 64) = v35;
  v38 = objc_msgSend(*(id *)&v2[v11], sel_bottomAnchor);
  v39 = OUTLINED_FUNCTION_1_55();
  if (!v39)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v40 = v39;
  v41 = objc_msgSend(v39, sel_bottomAnchor);
  OUTLINED_FUNCTION_18_11();
  v42 = OUTLINED_FUNCTION_5_86();
  OUTLINED_FUNCTION_19_5();

  *(_QWORD *)(v15 + 72) = v40;
  v43 = objc_msgSend(*(id *)&v2[v11], sel_trailingAnchor);
  v44 = OUTLINED_FUNCTION_1_55();
  if (v44)
  {
    v45 = v44;
    v46 = (void *)objc_opt_self();
    v47 = objc_msgSend(v45, sel_trailingAnchor);

    v48 = objc_msgSend(v43, sel_constraintEqualToAnchor_, v47);
    *(_QWORD *)(v15 + 80) = v48;
    specialized Array._endMutation()();
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    objc_msgSend(v46, sel_activateConstraints_, isa);

    EffectsControlsViewController.updateViews()();
    return;
  }
LABEL_17:
  __break(1u);
}

void closure #1 in EffectsControlsViewController.setupViews()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x1C3B752C0](v2);
  if (v3)
  {
    v4 = (void *)v3;
    v5 = v3 + OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_delegate;
    v6 = MEMORY[0x1C3B752C0](v3 + OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_delegate);
    v7 = *(_QWORD *)(v5 + 8);

    if (v6)
    {
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(ObjectType, v7);
      swift_unknownObjectRelease();
    }
  }
}

void EffectsControlsViewController.updateViews()()
{
  uint64_t *v0;
  uint64_t *v1;
  void *v2;
  _QWORD *v3;
  Class isa;
  _QWORD *v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  char v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  _QWORD *v29;
  id v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  void *v35;
  Class v36;
  id v37;
  _QWORD *v38;

  v1 = v0;
  v2 = (void *)objc_opt_self();
  v3 = (uint64_t *)((char *)v0 + OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_constraintsToUpdate);
  OUTLINED_FUNCTION_2_0();
  v38 = v3;
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
  swift_bridgeObjectRetain();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_deactivateConstraints_, isa);

  EffectsControlsViewController.constraintsToUpdate.setter(MEMORY[0x1E0DEE9D8]);
  v5 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v6 = (void *)OUTLINED_FUNCTION_14_7(*v1);
  v7 = objc_msgSend(v6, sel_view);

  if (v7)
  {
    v8 = objc_msgSend(v7, sel_centerYAnchor);
    v9 = OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_backgroundBlurView;
    v10 = objc_retainAutoreleasedReturnValue(OUTLINED_FUNCTION_17_53(*(void **)((char *)v1
                                                                              + OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_backgroundBlurView)));
    v11 = objc_msgSend(v10, sel_centerYAnchor);

    v37 = objc_msgSend(v8, sel_constraintEqualToAnchor_, v11);
    v12 = objc_msgSend(v7, (SEL)&selRef_activeCall + 6);
    v13 = OUTLINED_FUNCTION_17_53(*(void **)((char *)v1 + v9));
    v14 = objc_msgSend(v13, (SEL)&selRef_activeCall + 6);

    v15 = objc_msgSend(v12, sel_constraintEqualToAnchor_, v14);
    v16 = objc_msgSend(v7, sel_trailingAnchor);
    v17 = OUTLINED_FUNCTION_17_53(*(void **)((char *)v1 + v9));
    v18 = objc_msgSend(v17, sel_trailingAnchor);

    v19 = objc_msgSend(v16, (SEL)&selRef_attemptToPlaySoundType_forCall_ + 6, v18);
    OUTLINED_FUNCTION_2_0();
    if (*v3 >> 62)
    {
      swift_bridgeObjectRetain();
      v20 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      v20 = *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    if (__OFADD__(v20, 3))
    {
      __break(1u);
      goto LABEL_13;
    }
    specialized Array._reserveCapacityImpl(minimumCapacity:growForAppend:)(v20 + 3, 1);
    specialized Array._endMutation()();
    v21 = v37;
    MEMORY[0x1C3B7301C]();
    OUTLINED_FUNCTION_2_90();
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    v22 = v15;
    MEMORY[0x1C3B7301C]();
    OUTLINED_FUNCTION_2_90();
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    v23 = v19;
    MEMORY[0x1C3B7301C]();
    OUTLINED_FUNCTION_2_90();
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_endAccess();

    v5 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  }
  v24 = (*(uint64_t (**)(void))((*v5 & *v1) + 0xD8))();
  v25 = objc_msgSend(*(id *)((char *)v1 + OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_backgroundBlurView), sel_leadingAnchor);
  v26 = v25;
  if ((v24 & 1) != 0)
  {
    v27 = objc_msgSend(*(id *)((char *)v1 + OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_effectsButton), sel_trailingAnchor);
    v28 = objc_msgSend(v26, sel_constraintEqualToAnchor_constant_, v27, 10.0);

    v29 = v38;
    OUTLINED_FUNCTION_2_0();
    v30 = v28;
LABEL_10:
    v35 = v30;
    MEMORY[0x1C3B7301C]();
    specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(*(_QWORD *)((*v29 & 0xFFFFFFFFFFFFF8) + 0x10));
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_endAccess();

    swift_bridgeObjectRetain();
    v36 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_53_0(v2, sel_activateConstraints_);

    return;
  }
  v31 = OUTLINED_FUNCTION_9((uint64_t)v25, sel_view);
  v29 = v38;
  if (v31)
  {
    v32 = v31;
    v33 = objc_msgSend(v31, sel_leadingAnchor);

    v34 = objc_msgSend(v26, sel_constraintEqualToAnchor_, v33);
    OUTLINED_FUNCTION_2_0();
    v30 = v34;
    goto LABEL_10;
  }
LABEL_13:
  __break(1u);
}

void EffectsControlsViewController.embedBrowserViewController(_:)(void *a1)
{
  char *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  id v6;

  if (a1)
  {
    v6 = a1;
    v2 = objc_msgSend(v6, sel_view);
    if (v2)
    {
      v3 = v2;
      objc_msgSend(v1, sel_addChildViewController_, v6);
      OUTLINED_FUNCTION_18_4(v3, sel_setTranslatesAutoresizingMaskIntoConstraints_);
      v4 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_backgroundBlurView], sel_contentView);
      objc_msgSend(v4, sel_addSubview_, v3);

      objc_msgSend(v6, sel_didMoveToParentViewController_, v1);
      EffectsControlsViewController.updateViews()();

      v5 = v3;
    }
    else
    {
      v5 = v6;
    }

  }
}

void EffectsControlsViewController.removeEmbeddedBrowserViewController(_:)(void *a1)
{
  id v1;
  void *v2;
  id v3;

  if (a1)
  {
    v3 = a1;
    objc_msgSend(v3, sel_willMoveToParentViewController_, 0);
    objc_msgSend(v3, sel_removeFromParentViewController);
    if (!objc_msgSend(v3, sel_isViewLoaded))
    {
LABEL_5:

      return;
    }
    v1 = objc_msgSend(v3, sel_view);
    if (v1)
    {
      v2 = v1;
      objc_msgSend(v1, sel_removeFromSuperview);

      goto LABEL_5;
    }
    __break(1u);
  }
}

id EffectsControlsViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;
  id v7;

  v4 = v3;
  if (a2)
  {
    v6 = (void *)MEMORY[0x1C3B72E00]();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void EffectsControlsViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id EffectsControlsViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EffectsControlsViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

char *specialized EffectsControlsViewController.init(delegate:)(uint64_t a1, _BYTE *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id v9;
  id v10;
  char *v11;
  char *v12;
  uint64_t v14;
  objc_super v15;
  char v16;
  ValueMetadata *v17;
  _UNKNOWN **v18;

  *(_QWORD *)&a2[OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_effectsBrowserViewController] = 0;
  a2[OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_effectsEnabled] = 0;
  *(_QWORD *)&a2[OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_effectsBrowserHeight] = 0x404D000000000000;
  a2[OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_effectsButtonIsVisible] = 0;
  *(_QWORD *)&a2[OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_constraintsToUpdate] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&a2[OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v6 = OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_effectsButton;
  type metadata accessor for InCallControlButton();
  v17 = &type metadata for SymbolImageDescribers.LocalParticipantView;
  v18 = &protocol witness table for SymbolImageDescribers.LocalParticipantView;
  v16 = 3;
  v7 = a2;
  LOWORD(v14) = 1;
  *(_QWORD *)&a2[v6] = InCallControlButton.__allocating_init(style:symbolDescriber:text:discSize:imageSpacing:visualEffectGroupName:wantsPointerInteraction:isImageTrailing:)();
  v8 = OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_backgroundBlurView;
  v9 = objc_msgSend((id)objc_opt_self(), sel_effectWithStyle_, 8, v14);
  v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F58]), sel_initWithEffect_, v9);

  *(_QWORD *)&v7[v8] = v10;
  v15.receiver = v7;
  v15.super_class = (Class)type metadata accessor for EffectsControlsViewController();
  v11 = (char *)objc_msgSendSuper2(&v15, sel_initWithNibName_bundle_, 0, 0);
  *(_QWORD *)&v11[OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_delegate + 8] = a4;
  swift_unknownObjectWeakAssign();
  v12 = v11;
  EffectsControlsViewController.setupViews()();

  swift_unknownObjectRelease();
  return v12;
}

uint64_t type metadata accessor for EffectsControlsViewController()
{
  return objc_opt_self();
}

void sub_1BD247F14()
{
  uint64_t *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = OUTLINED_FUNCTION_14_7(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD247F44()
{
  _BYTE *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0xA8))() & 1;
  OUTLINED_FUNCTION_0();
}

void sub_1BD247F7C(unsigned __int8 *a1, _QWORD **a2)
{
  (*(void (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & **a2) + 0xB0))(*a1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD247FB4()
{
  double *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(double (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0xC0))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD247FE8(double *a1, _QWORD **a2)
{
  (*(void (**)(double))((*MEMORY[0x1E0DEEDD8] & **a2) + 0xC8))(*a1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD248020()
{
  _BYTE *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0xD8))() & 1;
  OUTLINED_FUNCTION_0();
}

void sub_1BD248058(unsigned __int8 *a1, _QWORD **a2)
{
  (*(void (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & **a2) + 0xE0))(*a1);
  OUTLINED_FUNCTION_0();
}

uint64_t dispatch thunk of EffectsControlsViewControllerDelegate.didTapEffectsButton()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t method lookup function for EffectsControlsViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of EffectsControlsViewController.effectsBrowserViewController.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of EffectsControlsViewController.effectsBrowserViewController.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of EffectsControlsViewController.effectsBrowserViewController.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of EffectsControlsViewController.effectsEnabled.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of EffectsControlsViewController.effectsEnabled.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of EffectsControlsViewController.effectsEnabled.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of EffectsControlsViewController.effectsBrowserHeight.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of EffectsControlsViewController.effectsBrowserHeight.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of EffectsControlsViewController.effectsBrowserHeight.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of EffectsControlsViewController.effectsButtonIsVisible.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of EffectsControlsViewController.effectsButtonIsVisible.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of EffectsControlsViewController.effectsButtonIsVisible.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of EffectsControlsViewController.__allocating_init(delegate:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 320))();
}

uint64_t sub_1BD2481FC()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void partial apply for closure #1 in EffectsControlsViewController.setupViews()(uint64_t a1)
{
  uint64_t v1;

  closure #1 in EffectsControlsViewController.setupViews()(a1, v1);
}

uint64_t SmallMultiwayControllerLayoutFactory.init(containingView:participantListView:conversationBannerControlsAreaLayoutGuide:controlsView:gridView:localParticipantView:effectsControlsView:changeLayoutButton:changeLayoutButtonBackgroundView:captionsView:reactionsView:reactionPickerTipView:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  uint64_t v18;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [NSLayoutConstraint]);
  lazy protocol witness table accessor for type MultiwayViewConstraintsController.OverallLayoutState and conformance MultiwayViewConstraintsController.OverallLayoutState();
  v18 = Dictionary.init(dictionaryLiteral:)();
  *(_QWORD *)(v11 + 104) = a11;
  *(_QWORD *)(v11 + 112) = v18;
  *(_QWORD *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = a2;
  *(_QWORD *)(v11 + 32) = a3;
  *(_QWORD *)(v11 + 40) = a4;
  *(_QWORD *)(v11 + 48) = a5;
  *(_QWORD *)(v11 + 56) = a6;
  *(_QWORD *)(v11 + 64) = a7;
  *(_QWORD *)(v11 + 72) = a8;
  *(_OWORD *)(v11 + 80) = a9;
  *(_QWORD *)(v11 + 96) = a10;
  return v11;
}

char **SmallMultiwayControllerLayoutFactory.layoutConstraints(for:using:)(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  BOOL v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char **v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  char v39;
  char v40;
  char v41;
  NSObject *v42;
  char v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;
  char v51;
  char v52;
  char v53;
  uint64_t v54;
  unsigned int v55;
  char v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  char v62;
  char v63;
  char v64;
  char v65;
  char v66;
  char v67;

  v3 = *a1;
  v4 = *((_QWORD *)a1 + 1);
  v5 = a1[16];
  v6 = a1[17];
  v7 = a1[18];
  v8 = a1[19];
  v9 = a1[20];
  v10 = a1[21];
  v11 = a1[22];
  swift_beginAccess();
  v57 = v5;
  v51 = v7;
  v12 = v7 == 0;
  v13 = v9;
  v14 = 0x10000;
  if (v12)
    v14 = 0;
  v52 = v8;
  v15 = v5 | (v6 << 8) | v14 | (v8 << 24);
  v16 = 0x100000000;
  if (!v9)
    v16 = 0;
  v55 = v3;
  v56 = v10;
  v17 = 0x10000000000;
  if (!v10)
    v17 = 0;
  v18 = v11;
  v19 = 0x1000000000000;
  if (!v11)
    v19 = 0;
  v20 = v15 | v16 | v17 | v19;
  v54 = v4;
  v21 = specialized Dictionary.subscript.getter(v3, v4, v20, *(_QWORD *)(v2 + 112));
  v53 = v6;
  if (v21)
  {
    v22 = (char **)v21;
    swift_endAccess();
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    v23 = type metadata accessor for Logger();
    __swift_project_value_buffer(v23, (uint64_t)&static Logger.conversationKit);
    v24 = Logger.logObject.getter();
    v25 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = swift_slowAlloc();
      v27 = swift_slowAlloc();
      v58 = v27;
      *(_DWORD *)v26 = 136446466;
      v28 = _typeName(_:qualified:)();
      v59 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v28, v29, &v58);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v26 + 12) = 2080;
      LOBYTE(v59) = v3;
      v60 = v4;
      v61 = v57;
      v62 = v6;
      v63 = v51;
      v64 = v52;
      v65 = v13;
      v66 = v56;
      v67 = v18;
      v30 = String.init<A>(reflecting:)();
      v59 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v30, v31, &v58);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BD004000, v24, v25, "[%{public}s] using cached layout constraints for state: %s", (uint8_t *)v26, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v27, -1, -1);
      MEMORY[0x1C3B751B8](v26, -1, -1);
    }

  }
  else
  {
    swift_endAccess();
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    v49 = v20;
    v32 = type metadata accessor for Logger();
    __swift_project_value_buffer(v32, (uint64_t)&static Logger.conversationKit);
    v33 = Logger.logObject.getter();
    v34 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = swift_slowAlloc();
      v48 = swift_slowAlloc();
      v58 = v48;
      *(_DWORD *)v35 = 136446466;
      v36 = _typeName(_:qualified:)();
      v59 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v36, v37, &v58);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v35 + 12) = 2080;
      LOBYTE(v59) = v55;
      v38 = v6;
      v60 = v4;
      v61 = v57;
      v62 = v6;
      v39 = v51;
      v63 = v51;
      v40 = v52;
      v64 = v52;
      v41 = v13;
      v65 = v13;
      v66 = v56;
      v42 = v33;
      v43 = v11;
      v67 = v11;
      v44 = String.init<A>(reflecting:)();
      v59 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v44, v45, &v58);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BD004000, v42, v34, "[%{public}s] making layout constraints for state: %s", (uint8_t *)v35, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v48, -1, -1);
      MEMORY[0x1C3B751B8](v35, -1, -1);

    }
    else
    {

      v40 = v52;
      v38 = v53;
      v41 = v13;
      v43 = v11;
      v39 = v51;
    }
    LOBYTE(v59) = v55;
    v60 = v54;
    v61 = v57;
    v62 = v38;
    v63 = v39;
    v64 = v40;
    v65 = v41;
    v66 = v56;
    v67 = v43;
    v22 = SmallMultiwayControllerLayoutFactory.makeConstraints(for:using:)((unsigned __int8 *)&v59, a2);
    swift_beginAccess();
    v46 = swift_bridgeObjectRetain();
    specialized Dictionary._Variant.setValue(_:forKey:)(v46, v55, v54, v49);
    swift_endAccess();
  }
  return v22;
}

char **SmallMultiwayControllerLayoutFactory.makeConstraints(for:using:)(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  unsigned __int8 v5;
  int v6;
  id v7;
  double v8;
  id v9;
  char v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  SEL *v22;
  char **v23;
  int v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  char *v34;
  id v35;
  id v36;
  char *v37;
  SEL *v38;
  id v39;
  id v40;
  double v41;
  unint64_t v42;
  id v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  double v47;
  void *v48;
  void *v49;
  double v50;
  uint64_t v51;
  uint64_t v52;
  char **v53;
  char **v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  void *v60;
  id v61;
  void *v62;
  uint64_t v63;
  id v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  id v69;
  id v70;
  void *v71;
  void *v72;
  id v73;
  id v74;
  id v75;
  void *v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  uint64_t v83;
  id v84;
  void *v85;
  id v86;
  id v87;
  void *v88;
  id v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  id v95;
  id v96;
  id v97;
  id v98;
  void *v99;
  void *v100;
  id v101;
  id v102;
  id v103;
  id v104;
  uint64_t v105;
  void *v106;
  void *v107;
  uint64_t v108;
  BOOL v109;
  uint64_t v110;
  SEL *v111;
  int v112;
  char *v113;
  void *v114;
  void *v115;
  id v116;
  id v117;
  uint64_t v118;
  uint64_t v119;
  void *v120;
  void *v121;
  id v122;
  id v123;
  id v124;
  id v125;
  id v126;
  void *v127;
  uint64_t v128;
  id v129;
  id v130;
  unint64_t v131;
  id v132;
  char **v133;
  id v134;
  char *v135;
  id v136;
  id v137;
  id v138;
  id v139;
  id v140;
  id v141;
  id v142;
  id v143;
  id v144;
  id v145;
  id v146;
  id v147;
  uint64_t v148;
  id v149;
  id v150;
  id v151;
  id v152;
  id v153;
  id v154;
  id v155;
  void *v156;
  id v157;
  id v158;
  id v159;
  id v160;
  id v161;
  id v162;
  id v163;
  id v164;
  id v165;
  void *v166;
  void *v167;
  uint64_t v168;
  id v169;
  id v170;
  id v171;
  char **v172;
  id v173;
  char v174;
  id v175;
  id v176;
  id v177;
  id v178;
  id v179;
  id v180;
  void *v181;
  id v182;
  id v183;
  id v184;
  void *v185;
  void *v186;
  void *v187;
  id v188;
  id v189;
  id v190;
  id v191;
  id v192;
  id v193;
  id v194;
  id v195;
  id v196;
  uint64_t v197;
  id v198;
  id v199;
  id v201;
  id v202;
  id v203;
  id v204;
  id v205;
  id v206;
  uint64_t v207;
  void *v208;
  void *v209;
  id v210;
  unsigned int v211;
  uint64_t v212;
  id v213;
  char v215;
  unsigned __int8 v216;
  unsigned __int8 v217;
  int v218;
  unint64_t v219;
  int v220;
  int v221;
  id v222;
  void *v223;
  int v224;
  unsigned int v225;
  uint64_t v226;
  uint64_t v227;
  unint64_t v228;
  char v229;
  char v230;
  char v231;
  char v232;
  char v233;
  unsigned __int8 v234;
  unsigned __int8 v235;
  char **v236;

  v3 = v2;
  v221 = *a1;
  v219 = *((_QWORD *)a1 + 1);
  v4 = a1[16];
  v225 = a1[17];
  v5 = a1[18];
  v6 = a1[19];
  v217 = a1[21];
  v218 = a1[20];
  v216 = a1[22];
  v236 = (char **)MEMORY[0x1E0DEE9D8];
  v224 = v6;
  v220 = v4;
  if (v6 && v4)
  {
    v7 = objc_msgSend(*(id *)(v2 + 32), sel_bottomAnchor);
    if (one-time initialization token for margin != -1)
      swift_once();
    v222 = v7;
    v8 = *(double *)&static Layout.Captions.margin;
  }
  else
  {
    v9 = objc_msgSend(*(id *)(v2 + 16), sel_safeAreaLayoutGuide);
    v222 = objc_msgSend(v9, sel_topAnchor);

    v8 = 0.0;
  }
  v10 = v5;
  v11 = *(void **)(v2 + 88);
  v12 = objc_msgSend(v11, sel_leadingAnchor);
  v13 = *(void **)(v3 + 16);
  v14 = objc_msgSend(v13, sel_leadingAnchor);
  if (one-time initialization token for margin != -1)
    swift_once();
  v15 = objc_msgSend(v12, sel_constraintEqualToAnchor_constant_, v14, *(double *)&static Layout.Captions.margin);

  v213 = v11;
  v16 = objc_msgSend(v11, sel_trailingAnchor);
  v17 = objc_msgSend(v13, sel_trailingAnchor);
  v18 = objc_msgSend(v16, sel_constraintEqualToAnchor_constant_, v17, -*(double *)&static Layout.Captions.margin);

  v19 = MEMORY[0x1E0DEE9D8] >> 62;
  if (MEMORY[0x1E0DEE9D8] >> 62)
  {
    swift_bridgeObjectRetain();
    v20 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    v20 = *(_QWORD *)((MEMORY[0x1E0DEE9D8] & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (__OFADD__(v20, 2))
  {
    __break(1u);
  }
  else
  {
    specialized Array._reserveCapacityImpl(minimumCapacity:growForAppend:)(v20 + 2, 1);
    specialized Array._endMutation()();
    v15 = v15;
    MEMORY[0x1C3B7301C]();
    if (*(_QWORD *)(((unint64_t)v236 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(_QWORD *)(((unint64_t)v236 & 0xFFFFFFFFFFFFFF8)
                                                                                        + 0x18) >> 1)
      goto LABEL_13;
  }
  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
LABEL_13:
  v207 = v19;
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  v21 = v18;
  MEMORY[0x1C3B7301C]();
  if (*(_QWORD *)(((unint64_t)v236 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)(((unint64_t)v236 & 0xFFFFFFFFFFFFFF8)
                                                                                       + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();

  v22 = (SEL *)&selRef_associatedAppBundleIdentifier;
  v23 = &selRef_associatedAppBundleIdentifier;
  v215 = v10;
  if (!v224)
  {
    v30 = objc_msgSend(v213, sel_topAnchor);
    v29 = v222;
    v22 = (SEL *)objc_msgSend(v30, sel_constraintEqualToAnchor_constant_, v222, v8);

    v31 = objc_msgSend(v213, sel_heightAnchor);
    v32 = objc_msgSend(v31, (SEL)&selRef_setCameraZoomFactor_ + 2, 0.0);

    v23 = v236;
    if ((unint64_t)v236 >> 62)
    {
      swift_bridgeObjectRetain();
      v33 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      v33 = *(_QWORD *)(((unint64_t)v236 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v34 = (char *)(v33 + 2);
    if (!__OFADD__(v33, 2))
    {
LABEL_32:
      specialized Array._reserveCapacityImpl(minimumCapacity:growForAppend:)(v34, 1);
      specialized Array._endMutation()();
      v38 = v22;
      MEMORY[0x1C3B7301C]();
      if (*(_QWORD *)(((unint64_t)v236 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)(((unint64_t)v236 & 0xFFFFFFFFFFFFFF8)
                                                                                           + 0x18) >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      v39 = v32;
      MEMORY[0x1C3B7301C]();
      if (*(_QWORD *)(((unint64_t)v236 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)(((unint64_t)v236 & 0xFFFFFFFFFFFFFF8)
                                                                                           + 0x18) >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();

      goto LABEL_37;
    }
    __break(1u);
LABEL_27:
    v35 = objc_msgSend(v213, v23[208]);
    if (one-time initialization token for transcriptVerticalSize != -1)
      swift_once();
    v22 = (SEL *)objc_msgSend(v35, v22[251], *(double *)&static Layout.Captions.transcriptVerticalSize);

    v36 = objc_msgSend(v213, sel_topAnchor);
    v29 = v222;
    v32 = objc_msgSend(v36, sel_constraintEqualToAnchor_constant_, v222, v8);

    if ((unint64_t)v236 >> 62)
    {
      swift_bridgeObjectRetain();
      v37 = (char *)_CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      v37 = *(char **)(((unint64_t)v236 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v34 = v37 + 2;
    if (__OFADD__(v37, 2))
    {
      __break(1u);
      goto LABEL_208;
    }
    goto LABEL_32;
  }
  if (v224 != 1)
    goto LABEL_27;
  v24 = static Platform.current.getter();
  v25 = objc_msgSend(v213, sel_bottomAnchor);
  if (v24 == 2)
  {
    if ((v10 & 1) != 0)
    {
      v26 = objc_msgSend(v13, sel_safeAreaLayoutGuide);
      v27 = objc_msgSend(v26, sel_bottomAnchor);

      v28 = objc_msgSend(v25, sel_constraintEqualToAnchor_constant_, v27, -3.0);
      MEMORY[0x1C3B7301C]();
      v29 = v222;
      if (*(_QWORD *)(((unint64_t)v236 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)(((unint64_t)v236 & 0xFFFFFFFFFFFFFF8)
                                                                                           + 0x18) >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      goto LABEL_39;
    }
    v69 = objc_msgSend(*(id *)(v3 + 56), sel_topAnchor);
    v70 = objc_msgSend(v25, sel_constraintEqualToAnchor_constant_, v69, -static Layout.MediaPip.padding.getter());

    MEMORY[0x1C3B7301C]();
    v29 = v222;
    if (*(_QWORD *)(((unint64_t)v236 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)(((unint64_t)v236 & 0xFFFFFFFFFFFFFF8)
                                                                                         + 0x18) >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
LABEL_72:
    v223 = v29;
    v54 = &selRef_associatedAppBundleIdentifier;
    v40 = objc_msgSend(v13, sel_topAnchor);
    v53 = &selRef_associatedAppBundleIdentifier;
    v55 = objc_msgSend(v13, sel_bottomAnchor);
    v50 = 0.0;
    v47 = 0.0;
    v41 = 0.0;
    goto LABEL_73;
  }
  v56 = objc_msgSend(v13, sel_safeAreaLayoutGuide);
  v57 = objc_msgSend(v56, sel_bottomAnchor);

  v58 = objc_msgSend(v25, sel_constraintLessThanOrEqualToAnchor_, v57);
  MEMORY[0x1C3B7301C]();
  if (*(_QWORD *)(((unint64_t)v236 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)(((unint64_t)v236 & 0xFFFFFFFFFFFFFF8)
                                                                                       + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  v59 = objc_msgSend(v213, sel_topAnchor);
  v60 = v59;
  if ((v225 & 0x80) == 0)
  {
    v29 = v222;
    v61 = objc_msgSend(v59, sel_constraintGreaterThanOrEqualToAnchor_constant_, v222, v8);

    v62 = *(void **)(a2 + 88);
    if ((unint64_t)v236 >> 62)
    {
      v205 = v62;
      swift_bridgeObjectRetain();
      v63 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      v63 = *(_QWORD *)(((unint64_t)v236 & 0xFFFFFFFFFFFFF8) + 0x10);
      v64 = v62;
    }
    if (__OFADD__(v63, 2))
    {
      __break(1u);
    }
    else
    {
      specialized Array._reserveCapacityImpl(minimumCapacity:growForAppend:)(v63 + 2, 1);
      specialized Array._endMutation()();
      v61 = v61;
      MEMORY[0x1C3B7301C]();
      if (*(_QWORD *)(((unint64_t)v236 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(_QWORD *)(((unint64_t)v236 & 0xFFFFFFFFFFFFFF8)
                                                                                          + 0x18) >> 1)
      {
LABEL_59:
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        v65 = v62;
        MEMORY[0x1C3B7301C]();
        if (*(_QWORD *)(((unint64_t)v236 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)(((unint64_t)v236 & 0xFFFFFFFFFFFFFF8)
                                                                                             + 0x18) >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();

        goto LABEL_37;
      }
    }
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    goto LABEL_59;
  }
  v29 = v222;
  v201 = objc_msgSend(v59, sel_constraintEqualToAnchor_constant_, v222, v8);

  MEMORY[0x1C3B7301C]();
  if (*(_QWORD *)(((unint64_t)v236 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)(((unint64_t)v236 & 0xFFFFFFFFFFFFFF8)
                                                                                       + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
LABEL_37:
  if ((v10 & 1) == 0)
    goto LABEL_72;
  if (v224)
  {
LABEL_39:
    v40 = objc_msgSend(v213, sel_bottomAnchor);
    v41 = *(double *)&static Layout.Captions.margin;
LABEL_40:
    v42 = v219;
    goto LABEL_41;
  }
  if (!v220)
  {
    v202 = objc_msgSend(v13, sel_safeAreaLayoutGuide);
    v40 = objc_msgSend(v202, sel_topAnchor);

    v41 = 0.0;
    goto LABEL_40;
  }
  v40 = objc_msgSend(*(id *)(v3 + 32), sel_bottomAnchor);
  static Layout.MediaPip.padding.getter();
  v42 = v219;
  if (one-time initialization token for shared != -1)
    swift_once();
  v66 = static Defaults.shared;
  (*(void (**)(void))(*(_QWORD *)static Defaults.shared + 384))();
  v67 = static Platform.current.getter();
  (*(void (**)(uint64_t))(*(_QWORD *)v66 + 488))(v67);
  v41 = 16.0;
LABEL_41:
  if (v221)
  {
    v43 = objc_msgSend(*(id *)(v3 + 24), sel_topAnchor);
LABEL_43:
    v44 = v43;
    static Layout.MediaPip.padding.getter();
    if (one-time initialization token for shared != -1)
      swift_once();
    v45 = static Defaults.shared;
    (*(void (**)(void))(*(_QWORD *)static Defaults.shared + 384))();
    v46 = static Platform.current.getter();
    (*(void (**)(uint64_t))(*(_QWORD *)v45 + 488))(v46);
    v47 = 16.0;
    goto LABEL_49;
  }
  LOBYTE(v227) = 0;
  v228 = v42;
  v229 = v220;
  v230 = v225;
  v231 = 1;
  v232 = v224;
  v233 = v218;
  v234 = v217;
  v235 = v216;
  v48 = SmallMultiwayControllerLayoutFactory.safeReactionPickerTipView(for:)((uint64_t)&v227);
  if (v48)
  {
    v49 = v48;
    v44 = objc_msgSend(v48, sel_topAnchor);

LABEL_48:
    v47 = 10.0;
    goto LABEL_49;
  }
  if (v218)
  {
    v68 = *(void **)(v3 + 96);
    if (v68)
    {
      v44 = objc_msgSend(v68, sel_topAnchor);
      goto LABEL_48;
    }
  }
  if (v220)
  {
    v43 = objc_msgSend(*(id *)(v3 + 72), sel_topAnchor);
    goto LABEL_43;
  }
  v204 = objc_msgSend(v13, sel_safeAreaLayoutGuide);
  v44 = objc_msgSend(v204, sel_bottomAnchor);

  v47 = 0.0;
LABEL_49:
  v223 = v29;
  v50 = static Layout.MediaPip.padding.getter();
  if (one-time initialization token for shared != -1)
    swift_once();
  v51 = static Defaults.shared;
  (*(void (**)(void))(*(_QWORD *)static Defaults.shared + 384))();
  v52 = static Platform.current.getter();
  (*(void (**)(uint64_t))(*(_QWORD *)v51 + 488))(v52);
  v53 = &selRef_associatedAppBundleIdentifier;
  v54 = &selRef_associatedAppBundleIdentifier;
  v55 = v44;
LABEL_73:
  v71 = v13;
  v212 = v3;
  v72 = *(void **)(v3 + 48);
  v73 = objc_msgSend(v72, sel_leadingAnchor);
  v74 = objc_msgSend(v71, sel_leadingAnchor);
  v210 = objc_msgSend(v73, sel_constraintEqualToAnchor_constant_, v74, v50);

  v75 = objc_msgSend(v72, sel_trailingAnchor);
  v76 = v71;
  v77 = objc_msgSend(v71, sel_trailingAnchor);
  v78 = objc_msgSend(v75, sel_constraintEqualToAnchor_constant_, v77, -v50);

  v79 = objc_msgSend(v72, v54[145]);
  v208 = v40;
  v80 = objc_msgSend(v79, sel_constraintEqualToAnchor_constant_, v40, v41);

  v206 = v72;
  v81 = objc_msgSend(v72, v53[149]);
  v209 = v55;
  v82 = objc_msgSend(v81, sel_constraintEqualToAnchor_constant_, v55, -v47);

  if ((unint64_t)v236 >> 62)
  {
    swift_bridgeObjectRetain();
    v83 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    v83 = *(_QWORD *)(((unint64_t)v236 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (__OFADD__(v83, 4))
  {
    __break(1u);
  }
  else
  {
    specialized Array._reserveCapacityImpl(minimumCapacity:growForAppend:)(v83 + 4, 1);
    specialized Array._endMutation()();
    v40 = v210;
    MEMORY[0x1C3B7301C]();
    if (*(_QWORD *)(((unint64_t)v236 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(_QWORD *)(((unint64_t)v236 & 0xFFFFFFFFFFFFFF8)
                                                                                        + 0x18) >> 1)
      goto LABEL_77;
  }
  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
LABEL_77:
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  v84 = v78;
  MEMORY[0x1C3B7301C]();
  v85 = v76;
  if (*(_QWORD *)(((unint64_t)v236 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)(((unint64_t)v236 & 0xFFFFFFFFFFFFFF8)
                                                                                       + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  v86 = v80;
  MEMORY[0x1C3B7301C]();
  if (*(_QWORD *)(((unint64_t)v236 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)(((unint64_t)v236 & 0xFFFFFFFFFFFFFF8)
                                                                                       + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  v87 = v82;
  MEMORY[0x1C3B7301C]();
  if (*(_QWORD *)(((unint64_t)v236 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)(((unint64_t)v236 & 0xFFFFFFFFFFFFFF8)
                                                                                       + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();

  if ((v221 & 1) != 0)
  {
    LOBYTE(v227) = 1;
    v228 = v219;
    v229 = v220;
    v230 = v225;
    v231 = v215;
    v232 = v224;
    v233 = v218;
    v234 = v217;
    v235 = v216;
    v88 = SmallMultiwayControllerLayoutFactory.safeReactionPickerTipView(for:)((uint64_t)&v227);
    if (v88)
    {
      v89 = v88;
      v90 = objc_msgSend(*(id *)(v212 + 24), sel_bottomAnchor);
      v91 = objc_msgSend(v89, sel_topAnchor);
      v92 = objc_msgSend(v90, sel_constraintEqualToAnchor_constant_, v91, -10.0);
LABEL_86:
      v93 = v92;

      v94 = v93;
      MEMORY[0x1C3B7301C]();
      if (*(_QWORD *)(((unint64_t)v236 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)(((unint64_t)v236 & 0xFFFFFFFFFFFFFF8)
                                                                                           + 0x18) >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();

      goto LABEL_97;
    }
    v99 = *(void **)(v212 + 96);
    if (v99)
    {
      LOBYTE(v227) = 1;
      v228 = v219;
      v229 = v220;
      v230 = v225;
      v231 = v215;
      v232 = v224;
      v233 = v218;
      v234 = v217;
      v235 = v216;
      if (SmallMultiwayControllerLayout.shouldConstrainListViewToRecationsView(for:)((uint64_t)&v227))
      {
        v100 = *(void **)(v212 + 24);
        v89 = v99;
        v90 = objc_msgSend(v100, sel_bottomAnchor);
        v91 = objc_msgSend(v89, sel_topAnchor);
        v92 = objc_msgSend(v90, sel_constraintEqualToAnchor_constant_, v91, -10.0);
        goto LABEL_86;
      }
    }
    v101 = objc_msgSend(*(id *)(v212 + 24), sel_bottomAnchor);
    v102 = objc_msgSend(v76, sel_safeAreaLayoutGuide);
    v103 = objc_msgSend(v102, sel_bottomAnchor);

    v104 = objc_msgSend(v101, sel_constraintEqualToAnchor_, v103);
    v98 = v104;
  }
  else
  {
    v95 = objc_msgSend(*(id *)(v212 + 24), sel_topAnchor);
    v96 = objc_msgSend(v76, sel_bottomAnchor);
    v97 = objc_msgSend(v95, sel_constraintEqualToAnchor_, v96);

    v98 = v97;
  }
  v94 = v98;
  MEMORY[0x1C3B7301C]();
  if (*(_QWORD *)(((unint64_t)v236 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)(((unint64_t)v236 & 0xFFFFFFFFFFFFFF8)
                                                                                       + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
LABEL_97:
  v105 = MEMORY[0x1E0DEE9D8];

  v226 = v105;
  v211 = v225 >> 6;
  if (!(v225 >> 6))
  {
    v114 = *(void **)(a2 + 40);
    v115 = *(void **)(a2 + 80);
    v32 = *(id *)(a2 + 32);
    v116 = v114;
    v117 = v115;
    if ((v105 & 0xC000000000000000) != 0)
      v118 = _CocoaArrayWrapper.endIndex.getter();
    else
      v118 = 0;
    v109 = __OFADD__(v118, 3);
    v119 = v118 + 3;
    if (v109)
    {
      __break(1u);
    }
    else
    {
      specialized Array._reserveCapacityImpl(minimumCapacity:growForAppend:)(v119, 1);
      specialized Array._endMutation()();
      v32 = v32;
      MEMORY[0x1C3B7301C]();
      if (*(_QWORD *)((v105 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(_QWORD *)((v105 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      {
LABEL_112:
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        v111 = (SEL *)v116;
        MEMORY[0x1C3B7301C]();
        if (*(_QWORD *)((v105 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v105 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        v113 = (char *)v117;
        MEMORY[0x1C3B7301C]();
        if (*(_QWORD *)((v105 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v105 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        v112 = v225;
LABEL_117:
        specialized Array._endMutation()();

        __asm { BR              X10 }
      }
    }
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    goto LABEL_112;
  }
  if (v225 >> 6 == 1)
  {
    v106 = *(void **)(a2 + 56);
    v107 = *(void **)(a2 + 80);
    v32 = *(id *)(a2 + 48);
    v22 = v106;
    v37 = v107;
    if ((v105 & 0xC000000000000000) == 0)
    {
      v108 = 0;
      goto LABEL_101;
    }
LABEL_208:
    v108 = _CocoaArrayWrapper.endIndex.getter();
LABEL_101:
    v109 = __OFADD__(v108, 3);
    v110 = v108 + 3;
    if (v109)
    {
      __break(1u);
    }
    else
    {
      specialized Array._reserveCapacityImpl(minimumCapacity:growForAppend:)(v110, 1);
      specialized Array._endMutation()();
      v32 = v32;
      MEMORY[0x1C3B7301C]();
      if (*(_QWORD *)((v226 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(_QWORD *)((v226 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      {
LABEL_103:
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        v111 = v22;
        MEMORY[0x1C3B7301C]();
        if (*(_QWORD *)((v226 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v226 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        v112 = v225 & 0x3F;
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        v113 = v37;
        MEMORY[0x1C3B7301C]();
        if (*(_QWORD *)((v226 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v226 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        goto LABEL_117;
      }
    }
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    goto LABEL_103;
  }
  if (v225 == 128)
  {
    v120 = *(void **)(a2 + 72);
    v121 = *(void **)(v212 + 56);
    v122 = *(id *)(a2 + 64);
    v123 = v120;
    v124 = objc_msgSend(v121, sel_centerXAnchor);
    v125 = objc_msgSend(v206, sel_centerXAnchor);
    v126 = objc_msgSend(v124, (SEL)&selRef_attemptToPlaySoundType_forCall_ + 6, v125);

    v127 = v223;
    if (v207)
    {
      swift_bridgeObjectRetain();
      v128 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      v128 = *(_QWORD *)((MEMORY[0x1E0DEE9D8] & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    if (__OFADD__(v128, 3))
    {
      __break(1u);
    }
    else
    {
      specialized Array._reserveCapacityImpl(minimumCapacity:growForAppend:)(v128 + 3, 1);
      specialized Array._endMutation()();
      v122 = v122;
      MEMORY[0x1C3B7301C]();
      if (*(_QWORD *)((v226 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(_QWORD *)((v226 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      {
LABEL_123:
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        v129 = v123;
        MEMORY[0x1C3B7301C]();
        if (*(_QWORD *)((v226 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v226 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        v130 = v126;
        MEMORY[0x1C3B7301C]();
        if (*(_QWORD *)((v226 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v226 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();

        v131 = v219;
        if (v219 <= 6 && ((1 << v219) & 0x6C) != 0)
        {
          v132 = *(id *)(a2 + 80);
          MEMORY[0x1C3B7301C]();
          if (*(_QWORD *)((v226 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v226 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          v133 = &selRef_associatedAppBundleIdentifier;
LABEL_149:

          goto LABEL_150;
        }
        v152 = objc_msgSend(v121, sel_bottomAnchor);
        v203 = objc_msgSend(v76, sel_safeAreaLayoutGuide);
        v154 = objc_msgSend(v203, sel_bottomAnchor);

        v133 = &selRef_associatedAppBundleIdentifier;
        v155 = objc_msgSend(v152, sel_constraintEqualToAnchor_, v154);
LABEL_132:
        v134 = v155;

        v132 = v134;
        MEMORY[0x1C3B7301C]();
        if (*(_QWORD *)((v226 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v226 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        goto LABEL_149;
      }
    }
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    goto LABEL_123;
  }
  v135 = *(char **)(v212 + 56);
  v136 = objc_msgSend(v135, sel_leadingAnchor);
  v137 = objc_msgSend(v76, sel_leadingAnchor);
  v138 = objc_msgSend(v136, sel_constraintEqualToAnchor_, v137);

  v139 = objc_msgSend(v135, sel_trailingAnchor);
  v140 = objc_msgSend(v76, sel_trailingAnchor);
  v141 = objc_msgSend(v139, (SEL)&selRef_attemptToPlaySoundType_forCall_ + 6, v140);

  v142 = objc_msgSend(v135, sel_topAnchor);
  v143 = objc_msgSend(v76, sel_topAnchor);
  v144 = objc_msgSend(v142, (SEL)&selRef_attemptToPlaySoundType_forCall_ + 6, v143);

  v145 = objc_msgSend(v135, (SEL)&selRef_groupConversations + 5);
  v146 = objc_msgSend(v76, (SEL)&selRef_groupConversations + 5);
  v147 = objc_msgSend(v145, (SEL)&selRef_attemptToPlaySoundType_forCall_ + 6, v146);

  if (v207)
  {
    v146 = (id)MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    v148 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    v148 = *(_QWORD *)((MEMORY[0x1E0DEE9D8] & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (__OFADD__(v148, 4))
  {
    __break(1u);
  }
  else
  {
    specialized Array._reserveCapacityImpl(minimumCapacity:growForAppend:)(v148 + 4, 1);
    specialized Array._endMutation()();
    v146 = v138;
    MEMORY[0x1C3B7301C]();
    if (*(_QWORD *)((v105 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(_QWORD *)((v105 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_137;
  }
  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
LABEL_137:
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  v149 = v141;
  MEMORY[0x1C3B7301C]();
  if (*(_QWORD *)((v105 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v105 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  v150 = v144;
  MEMORY[0x1C3B7301C]();
  if (*(_QWORD *)((v226 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v226 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  v151 = v147;
  MEMORY[0x1C3B7301C]();
  v127 = v223;
  if (*(_QWORD *)((v226 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v226 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();

  v131 = v219;
  v133 = &selRef_associatedAppBundleIdentifier;
  if (v219 > 6 || ((1 << v219) & 0x6C) == 0)
  {
    v152 = objc_msgSend(*(id *)&v135[OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_controlsView], sel_bottomAnchor);
    v153 = objc_msgSend(v76, sel_safeAreaLayoutGuide);
    v154 = objc_msgSend(v153, sel_bottomAnchor);

    v155 = objc_msgSend(v152, sel_constraintEqualToAnchor_, v154);
    goto LABEL_132;
  }
LABEL_150:
  specialized Array.append<A>(contentsOf:)();
  v156 = *(void **)(v212 + 64);
  if (v156 && v131 <= 6 && ((1 << v131) & 0x6C) != 0)
  {
    v157 = v156;
    v158 = objc_msgSend(v76, sel_safeAreaLayoutGuide);
    v159 = objc_msgSend(v158, sel_bottomAnchor);

    v160 = objc_msgSend(v157, sel_bottomAnchor);
    v161 = objc_msgSend(v159, v133[146], v160);

    MEMORY[0x1C3B7301C]();
    if (*(_QWORD *)(((unint64_t)v236 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)(((unint64_t)v236 & 0xFFFFFFFFFFFFFF8)
                                                                                         + 0x18) >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    if (((1 << v131) & 0x6C) != 0)
    {
      v162 = objc_msgSend(v157, sel_bottomAnchor);
      v163 = objc_msgSend(v76, sel_safeAreaLayoutGuide);
      v164 = objc_msgSend(v163, sel_bottomAnchor);

      v165 = objc_msgSend(v162, v133[146], v164);
      MEMORY[0x1C3B7301C]();
      if (*(_QWORD *)(((unint64_t)v236 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)(((unint64_t)v236 & 0xFFFFFFFFFFFFFF8)
                                                                                           + 0x18) >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }

  }
  v166 = *(void **)(v212 + 96);
  if (v166)
  {
    v167 = v127;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    v168 = swift_allocObject();
    *(_OWORD *)(v168 + 16) = xmmword_1BD6443F0;
    v169 = v166;
    v170 = objc_msgSend(v169, sel_centerXAnchor);
    v171 = objc_msgSend(v76, sel_centerXAnchor);
    v172 = v133;
    v173 = objc_msgSend(v170, v133[146], v171);

    *(_QWORD *)(v168 + 32) = v173;
    v227 = v168;
    specialized Array._endMutation()();
    v174 = v225;
    if (v211)
    {
      v133 = v172;
      if (v211 != 1)
      {
LABEL_173:
        specialized Array.append<A>(contentsOf:)();

        v127 = v167;
        v131 = v219;
        goto LABEL_174;
      }
      v174 = v225 & 0x3F;
    }
    if ((v174 & 0xFE) == 2)
    {
      v175 = objc_msgSend(v169, sel_bottomAnchor);
      v176 = objc_msgSend(v76, sel_safeAreaLayoutGuide);
      v177 = objc_msgSend(v176, sel_bottomAnchor);

      v133 = v172;
      v178 = objc_msgSend(v175, (SEL)v172 + 3918, v177);

      v179 = v178;
    }
    else
    {
      v180 = objc_msgSend(v169, sel_topAnchor);
      v181 = *(void **)(v212 + 32);
      v133 = v172;
      if (v220)
      {
        v182 = objc_msgSend(v181, sel_bottomAnchor);
        v183 = objc_msgSend(v180, sel_constraintEqualToAnchor_constant_, v182, 13.0);
      }
      else
      {
        v182 = objc_msgSend(v181, sel_topAnchor);
        v183 = objc_msgSend(v180, (SEL)v172 + 3918, v182);
      }
      v184 = v183;

      v179 = v184;
    }
    v185 = v179;
    MEMORY[0x1C3B7301C]();
    if (*(_QWORD *)((v227 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v227 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();

    goto LABEL_173;
  }
LABEL_174:
  LOBYTE(v227) = v221;
  v228 = v131;
  v229 = v220;
  v230 = v225;
  v231 = v215;
  v232 = v224;
  v233 = v218;
  v234 = v217;
  v235 = v216;
  v186 = SmallMultiwayControllerLayoutFactory.safeReactionPickerTipView(for:)((uint64_t)&v227);
  if (!v186)
  {
    v190 = v208;
    v199 = v209;
    v198 = v127;
    goto LABEL_187;
  }
  v187 = v186;
  v188 = objc_msgSend(v186, sel_centerXAnchor);
  v189 = objc_msgSend(v76, sel_centerXAnchor);
  v190 = objc_msgSend(v188, v133[146], v189);

  v191 = objc_msgSend(v187, sel_bottomAnchor);
  v192 = objc_msgSend(v85, sel_safeAreaLayoutGuide);
  v193 = objc_msgSend(v192, sel_bottomAnchor);

  v194 = objc_msgSend(v191, v133[146], v193);
  v195 = objc_msgSend(v187, sel_widthAnchor);
  if (one-time initialization token for defaultTipWidth != -1)
    swift_once();
  v196 = objc_msgSend(v195, sel_constraintEqualToConstant_, *(double *)&static Layout.Reactions.defaultTipWidth);

  if ((unint64_t)v236 >> 62)
  {
    swift_bridgeObjectRetain();
    v197 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    v197 = *(_QWORD *)(((unint64_t)v236 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (__OFADD__(v197, 3))
  {
    __break(1u);
    goto LABEL_204;
  }
  specialized Array._reserveCapacityImpl(minimumCapacity:growForAppend:)(v197 + 3, 1);
  specialized Array._endMutation()();
  v190 = v190;
  MEMORY[0x1C3B7301C]();
  if (*(_QWORD *)(((unint64_t)v236 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)(((unint64_t)v236 & 0xFFFFFFFFFFFFFF8)
                                                                                       + 0x18) >> 1)
LABEL_204:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  v198 = v194;
  MEMORY[0x1C3B7301C]();
  if (*(_QWORD *)(((unint64_t)v236 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)(((unint64_t)v236 & 0xFFFFFFFFFFFFFF8)
                                                                                       + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  v199 = v196;
  MEMORY[0x1C3B7301C]();
  if (*(_QWORD *)(((unint64_t)v236 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)(((unint64_t)v236 & 0xFFFFFFFFFFFFFF8)
                                                                                       + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();

LABEL_187:
  return v236;
}

void *SmallMultiwayControllerLayoutFactory.safeReactionPickerTipView(for:)(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;

  if (*(_BYTE *)(a1 + 21) != 1)
    return 0;
  v2 = *(void **)(v1 + 104);
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend(v3, sel_superview);

    if (!v4)
    {
      if (one-time initialization token for conversationKit != -1)
        swift_once();
      v5 = type metadata accessor for Logger();
      __swift_project_value_buffer(v5, (uint64_t)&static Logger.conversationKit);
      v6 = Logger.logObject.getter();
      v7 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v6, v7))
      {
        v8 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v8 = 0;
        _os_log_impl(&dword_1BD004000, v6, v7, "ReactionPickerTip: UI State is out of sync. Can't create constraints.", v8, 2u);
        MEMORY[0x1C3B751B8](v8, -1, -1);
      }

      return 0;
    }
  }
  return v2;
}

BOOL SmallMultiwayControllerLayout.shouldConstrainListViewToRecationsView(for:)(uint64_t a1)
{
  char v1;
  char v2;
  char v3;
  char v4;
  __int16 v5;
  uint64_t v6;
  _BYTE v9[8];
  uint64_t v10;
  __int16 v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;

  if (*(_BYTE *)(a1 + 20) == 1)
  {
    v1 = *(_BYTE *)(a1 + 22);
    v2 = *(_BYTE *)(a1 + 21);
    v3 = *(_BYTE *)(a1 + 19);
    v4 = *(_BYTE *)(a1 + 18);
    v5 = *(_WORD *)(a1 + 16);
    v6 = *(_QWORD *)(a1 + 8);
    v9[0] = *(_BYTE *)a1;
    v10 = v6;
    v11 = v5;
    v12 = v4;
    v13 = v3;
    v14 = 1;
    v15 = v2;
    v16 = v1;
    return SmallMultiwayControllerLayout.localParticipantViewIsAtBottom(for:)((uint64_t)v9);
  }
  else
  {
    return 0;
  }
}

id *SmallMultiwayControllerLayoutFactory.deinit()
{
  id *v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t SmallMultiwayControllerLayoutFactory.__deallocating_deinit()
{
  SmallMultiwayControllerLayoutFactory.deinit();
  return swift_deallocClassInstance();
}

void SmallMultiwayControllerLayout.displayScale.getter()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = (void *)MEMORY[0x1C3B752C0](v0 + 192);
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, sel_displayScale);

  }
  else
  {
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIView);
    static UIView.screenScale.getter();
  }
}

void SmallMultiwayControllerLayout.__allocating_init(containingView:participantListView:participantListState:gridView:participantGridState:controlsViewController:inCallControlsState:inCallBannerHostViewController:callControlsViewController:inCallBannerControlsAreaLayoutGuide:inCallBannerDodgingLayoutGuide:inCallConversationBannerState:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsControlsView:effectsView:effectsBrowserViewController:participantLabelsView:bottomControlsView:oneToOneShutterButton:changeLayoutButton:changeLayoutButtonBackgroundView:captionsView:captionsState:reactionsView:reactionsState:reactionPickerTipView:reactionPickerTipState:)(void *a1, void *a2, char a3, uint64_t a4, char a5, char **a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned __int8 *a13, uint64_t a14, char a15, uint64_t a16, void *a17, uint64_t a18, void *a19, uint64_t a20,void *a21,void *a22,uint64_t a23,uint64_t a24,void *a25,unsigned __int8 *a26,uint64_t a27,unsigned __int8 *a28,void *a29,unsigned __int8 *a30)
{
  int v33;
  int v34;

  v33 = a3 & 1;
  v34 = a5 & 1;
  OUTLINED_FUNCTION_15();
  SmallMultiwayControllerLayout.init(containingView:participantListView:participantListState:gridView:participantGridState:controlsViewController:inCallControlsState:inCallBannerHostViewController:callControlsViewController:inCallBannerControlsAreaLayoutGuide:inCallBannerDodgingLayoutGuide:inCallConversationBannerState:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsControlsView:effectsView:effectsBrowserViewController:participantLabelsView:bottomControlsView:oneToOneShutterButton:changeLayoutButton:changeLayoutButtonBackgroundView:captionsView:captionsState:reactionsView:reactionsState:reactionPickerTipView:reactionPickerTipState:)(a1, a2, v33, a4, v34, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23,
    a24,
    a25,
    a26,
    a27,
    a28,
    a29,
    a30);
}

uint64_t sub_1BD24B72C()
{
  uint64_t v0;

  return v0;
}

void SmallMultiwayControllerLayout.init(containingView:participantListView:participantListState:gridView:participantGridState:controlsViewController:inCallControlsState:inCallBannerHostViewController:callControlsViewController:inCallBannerControlsAreaLayoutGuide:inCallBannerDodgingLayoutGuide:inCallConversationBannerState:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsControlsView:effectsView:effectsBrowserViewController:participantLabelsView:bottomControlsView:oneToOneShutterButton:changeLayoutButton:changeLayoutButtonBackgroundView:captionsView:captionsState:reactionsView:reactionsState:reactionPickerTipView:reactionPickerTipState:)(void *a1, void *a2, int a3, uint64_t a4, int a5, char **a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned __int8 *a13, uint64_t a14, char a15, uint64_t a16, void *a17, uint64_t a18, id a19, uint64_t a20,void *a21,void *a22,uint64_t a23,uint64_t a24,void *a25,unsigned __int8 *a26,uint64_t a27,unsigned __int8 *a28,void *a29,unsigned __int8 *a30)
{
  uint64_t *v30;
  double v31;
  uint64_t v35;
  uint64_t v36;
  double v37;
  double v38;
  char **v39;
  id v40;
  id v41;
  id v42;
  uint64_t inited;
  void *v44;
  uint64_t v45;
  _QWORD *v46;
  void *v47;
  id v48;
  id v49;
  id v50;
  id v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  void *v57;
  void *v58;
  double Width;
  double v60;
  id v61;
  uint64_t v62;
  id v63;
  id v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  id v68;
  id v69;
  id v70;
  uint64_t v71;
  id v72;
  id v73;
  id v74;
  unint64_t v75;
  uint64_t v76;
  id v77;
  id v78;
  id v79;
  uint64_t v80;
  id v81;
  id v82;
  id v83;
  uint64_t v84;
  char **v85;
  id v86;
  uint64_t v87;
  id v88;
  uint64_t v89;
  id v90;
  id v91;
  id v92;
  id v93;
  uint64_t v94;
  id v95;
  id v96;
  id v97;
  double v98;
  uint64_t *v99;
  void *v100;
  id v101;
  void *v102;
  id v103;
  id v104;
  id v105;
  id v106;
  id v107;
  id v108;
  uint64_t v109;
  id v110;
  id v111;
  id v112;
  uint64_t v113;
  id v114;
  id v115;
  id v116;
  id v117;
  uint64_t v118;
  id v119;
  id v120;
  uint64_t v121;
  id v122;
  uint64_t v123;
  id v124;
  double v125;
  id v126;
  uint64_t v127;
  id v128;
  _QWORD v129[18];
  __int128 v130;
  uint64_t v131;
  void *v132;
  char **v133;
  id v134;
  uint64_t *v135;
  uint64_t v136;
  char *v137;
  id v138;
  int v139;
  id v140;
  id v141;
  uint64_t v142;
  int v143;
  uint64_t v144;
  uint64_t *v145;
  uint64_t v146;
  void *v147;
  id v148;
  uint64_t v149;
  uint64_t v150;
  int v151;
  int v152;
  int v153;
  int v154;
  uint64_t *v155;
  uint64_t v156;
  id v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  void *v161;
  id v162;
  uint64_t *v163;
  id v164;
  unint64_t v165;
  _QWORD *v166;
  double v167;
  CGRect v168;

  v156 = a7;
  v143 = a5;
  v158 = a4;
  v139 = a3;
  v161 = a2;
  v160 = *v30;
  v142 = type metadata accessor for FloatingPointRoundingRule();
  v144 = *(_QWORD *)(v142 - 8);
  MEMORY[0x1E0C80A78](v142);
  v137 = (char *)v129 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v152 = *a13;
  v154 = *a26;
  v153 = *a28;
  v30[21] = 0;
  v151 = *a30;
  *((_OWORD *)v30 + 6) = 0u;
  *((_OWORD *)v30 + 7) = 0u;
  v30[22] = 0;
  v145 = v30 + 23;
  OUTLINED_FUNCTION_54();
  OUTLINED_FUNCTION_54();
  v36 = (uint64_t)(v30 + 25);
  OUTLINED_FUNCTION_54();
  v163 = v30;
  v164 = a1;
  v30[26] = MEMORY[0x1E0DEE9D8];
  *((_BYTE *)v30 + 216) = 1;
  v155 = v30 + 26;
  v30[28] = 0;
  objc_msgSend(a1, sel_displayScale);
  v38 = v37;
  v39 = &selRef_associatedAppBundleIdentifier;
  v40 = objc_msgSend(a6, sel_view);
  v162 = v40;
  if (!v40)
  {
    __break(1u);
    goto LABEL_46;
  }
  v129[0] = v30 + 28;
  v135 = v30 + 21;
  v136 = a8;
  v41 = OUTLINED_FUNCTION_20_4((uint64_t)v40, sel_view);
  if (!v41)
  {
LABEL_46:
    __break(1u);
    JUMPOUT(0x1BD24D188);
  }
  v42 = v41;
  v134 = a19;
  v140 = objc_msgSend(a19, sel_view);
  swift_unknownObjectWeakAssign();
  swift_unknownObjectWeakAssign();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UIView?>);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BD646750;
  v44 = v161;
  v45 = v158;
  *(_QWORD *)(inited + 32) = v161;
  *(_QWORD *)(inited + 40) = v45;
  *(_QWORD *)(inited + 48) = v162;
  *(_QWORD *)(inited + 56) = v42;
  v159 = a14;
  *(_QWORD *)(inited + 64) = a14;
  *(_QWORD *)(inited + 72) = a25;
  v157 = a25;
  v150 = a27;
  *(_QWORD *)(inited + 80) = a27;
  *(_QWORD *)(inited + 88) = a29;
  v166 = (_QWORD *)inited;
  specialized Array._endMutation()();
  v46 = v166;
  if (v166[2] < 8uLL)
  {
    __break(1u);
  }
  else
  {
    v133 = a6;
    v47 = (void *)v166[4];
    a6 = &selRef_associatedAppBundleIdentifier;
    v138 = v42;
    v48 = a29;
    v49 = v44;
    OUTLINED_FUNCTION_41_27();
    OUTLINED_FUNCTION_35_23();
    v50 = v42;
    OUTLINED_FUNCTION_40_31();
    v51 = v157;
    OUTLINED_FUNCTION_39_38();
    if (v47)
      objc_msgSend(v47, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v52 = (void *)v46[5];
    if (v52)
      OUTLINED_FUNCTION_6_72(v52);
    v53 = (void *)v46[6];
    if (v53)
      OUTLINED_FUNCTION_6_72(v53);
    v54 = (void *)v46[7];
    if (v54)
      OUTLINED_FUNCTION_6_72(v54);
    v55 = (void *)v46[8];
    if (v55)
      OUTLINED_FUNCTION_6_72(v55);
    v56 = (void *)v46[9];
    if (v56)
      OUTLINED_FUNCTION_6_72(v56);
    v57 = (void *)v46[10];
    if (v57)
      OUTLINED_FUNCTION_6_72(v57);
    v149 = a20;
    v58 = (void *)v46[11];
    v132 = a29;
    if (v58)
      OUTLINED_FUNCTION_6_72(v58);
    OUTLINED_FUNCTION_27();
    if (a17)
      objc_msgSend(a17, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v147 = a17;
    v148 = a21;
    type metadata accessor for MultiwayViewConstraintsController();
    objc_msgSend(v164, sel_bounds);
    Width = CGRectGetWidth(v168);
    static MultiwayViewConstraintsController.listItemWidth(for:displayScale:configurableRosterCellWidth:)(0, 1, Width, v38);
    v146 = a16;
    static SmallMultiwayControllerLayout.localParticipantWidth(for:aspectRatio:displayScale:)(v60, v38);
    v131 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    v36 = OUTLINED_FUNCTION_15();
    v130 = xmmword_1BD644140;
    *(_OWORD *)(v36 + 16) = xmmword_1BD644140;
    v39 = (char **)OUTLINED_FUNCTION_2_2(v36, sel_leadingAnchor);
    v42 = OUTLINED_FUNCTION_9((uint64_t)v39, sel_leadingAnchor);
    v31 = static Layout.MediaPip.padding.getter();
    if (one-time initialization token for shared == -1)
      goto LABEL_23;
  }
  swift_once();
LABEL_23:
  OUTLINED_FUNCTION_11_6();
  static Platform.current.getter();
  OUTLINED_FUNCTION_12_4();
  v61 = objc_msgSend(v39, sel_constraintEqualToAnchor_constant_, v42, v31);

  *(_QWORD *)(v36 + 32) = v61;
  v63 = OUTLINED_FUNCTION_2_2(v62, sel_trailingAnchor);
  v64 = OUTLINED_FUNCTION_9((uint64_t)v63, (const char *)&selRef_setDateFormat_);
  OUTLINED_FUNCTION_53_26();
  OUTLINED_FUNCTION_11_6();
  static Platform.current.getter();
  v65 = OUTLINED_FUNCTION_12_4();
  v66 = OUTLINED_FUNCTION_4_5(v65, sel_constraintEqualToAnchor_constant_);

  *(_QWORD *)(v36 + 40) = v66;
  v68 = OUTLINED_FUNCTION_2_2(v67, sel_leadingAnchor);
  v69 = OUTLINED_FUNCTION_9((uint64_t)v68, sel_leadingAnchor);
  v70 = OUTLINED_FUNCTION_30_0((uint64_t)v69, sel_constraintEqualToAnchor_);
  OUTLINED_FUNCTION_16_25();

  *(_QWORD *)(v36 + 48) = a6;
  v72 = OUTLINED_FUNCTION_2_2(v71, sel_trailingAnchor);
  v73 = OUTLINED_FUNCTION_9((uint64_t)v72, sel_trailingAnchor);
  v74 = OUTLINED_FUNCTION_30_0((uint64_t)v73, sel_constraintEqualToAnchor_);
  OUTLINED_FUNCTION_16_25();

  *(_QWORD *)(v36 + 56) = a6;
  v166 = (_QWORD *)v36;
  specialized Array._endMutation()();
  v75 = (unint64_t)v166;
  v165 = (unint64_t)v166;
  v76 = swift_unknownObjectWeakAssign();
  if (v148)
  {
    v77 = objc_msgSend(v148, sel_bottomAnchor);
    v78 = OUTLINED_FUNCTION_9((uint64_t)v77, sel_bottomAnchor);
    v79 = objc_msgSend(v77, sel_constraintEqualToAnchor_, v78);
    OUTLINED_FUNCTION_14_10();

    v81 = OUTLINED_FUNCTION_2_2(v80, sel_centerXAnchor);
    v82 = OUTLINED_FUNCTION_9((uint64_t)v81, sel_centerXAnchor);
    v83 = objc_msgSend(v81, sel_constraintEqualToAnchor_, v82);

    if (v75 >> 62)
    {
      OUTLINED_FUNCTION_14_19();
      v84 = OUTLINED_FUNCTION_62_16();
      OUTLINED_FUNCTION_27();
    }
    else
    {
      v84 = *(_QWORD *)((v75 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    if (!__OFADD__(v84, 2))
    {
      OUTLINED_FUNCTION_15_68(v84 + 2);
      OUTLINED_FUNCTION_3_89();
      v85 = &selRef_associatedAppBundleIdentifier;
      OUTLINED_FUNCTION_4_90();
    }
    __break(1u);
    JUMPOUT(0x1BD24D1D0);
  }
  v141 = a22;
  if (a22)
  {
    v86 = OUTLINED_FUNCTION_9((uint64_t)objc_msgSend(v141, sel_leadingAnchor), sel_leadingAnchor);
    OUTLINED_FUNCTION_53_26();
    OUTLINED_FUNCTION_11_6();
    static Platform.current.getter();
    v87 = OUTLINED_FUNCTION_12_4();
    v88 = OUTLINED_FUNCTION_4_5(v87, sel_constraintEqualToAnchor_constant_);
    OUTLINED_FUNCTION_14_10();

    v90 = OUTLINED_FUNCTION_2_2(v89, sel_bottomAnchor);
    v91 = OUTLINED_FUNCTION_9((uint64_t)v90, (const char *)&selRef_secondaryActionTitle + 3);
    v92 = objc_msgSend(v91, sel_bottomAnchor);

    v93 = objc_msgSend(v90, sel_constraintEqualToAnchor_, v92);
    OUTLINED_FUNCTION_10_20();

    v95 = OUTLINED_FUNCTION_2_2(v94, sel_bottomAnchor);
    v96 = objc_msgSend(v157, sel_topAnchor);
    OUTLINED_FUNCTION_53_26();
    OUTLINED_FUNCTION_11_6();
    static Platform.current.getter();
    OUTLINED_FUNCTION_12_4();
    v97 = objc_msgSend(v95, sel_constraintEqualToAnchor_constant_, v92, -20.0);

    LODWORD(v98) = 1.0;
    objc_msgSend(v97, sel_setPriority_, v98);
    v99 = v163;
    v100 = (void *)v163[14];
    v163[14] = v36;
    v101 = (id)v36;

    v102 = (void *)v99[12];
    v99[12] = (uint64_t)v91;
    v103 = v91;

    v99[13] = (uint64_t)v97;
    v104 = v97;
    OUTLINED_FUNCTION_7_52();
    v105 = v101;
    v106 = v103;
    v107 = OUTLINED_FUNCTION_2_2((uint64_t)v97, sel_widthAnchor);
    static Layout.MediaPip.padding.getter();
    OUTLINED_FUNCTION_11_6();
    static Platform.current.getter();
    OUTLINED_FUNCTION_12_4();
    v108 = objc_msgSend(v107, sel_constraintEqualToConstant_, 50.0);

    v110 = OUTLINED_FUNCTION_2_2(v109, sel_heightAnchor);
    v111 = OUTLINED_FUNCTION_2_2((uint64_t)v110, sel_widthAnchor);
    v112 = OUTLINED_FUNCTION_30_0((uint64_t)v111, sel_constraintEqualToAnchor_);

    if (v165 >> 62)
    {
      swift_bridgeObjectRetain();
      v113 = _CocoaArrayWrapper.endIndex.getter();
      OUTLINED_FUNCTION_27();
    }
    else
    {
      v113 = *(_QWORD *)((v165 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    if (!__OFADD__(v113, 5))
    {
      OUTLINED_FUNCTION_15_68(v113 + 5);
      OUTLINED_FUNCTION_3_89();
      v114 = v105;
      OUTLINED_FUNCTION_4_90();
    }
    __break(1u);
    JUMPOUT(0x1BD24D214);
  }
  v115 = OUTLINED_FUNCTION_257(v76, sel_leadingAnchor);
  v116 = OUTLINED_FUNCTION_9((uint64_t)v115, sel_leadingAnchor);
  static Layout.MediaPip.padding.getter();
  OUTLINED_FUNCTION_11_6();
  static Platform.current.getter();
  OUTLINED_FUNCTION_12_4();
  v117 = objc_msgSend(v115, sel_constraintEqualToAnchor_constant_, v116, 10.0);

  v119 = OUTLINED_FUNCTION_257(v118, sel_bottomAnchor);
  v120 = objc_msgSend(OUTLINED_FUNCTION_9((uint64_t)v119, sel_safeAreaLayoutGuide), sel_bottomAnchor);
  OUTLINED_FUNCTION_16_25();
  static Layout.MediaPip.padding.getter();
  OUTLINED_FUNCTION_11_6();
  static Platform.current.getter();
  v121 = OUTLINED_FUNCTION_12_4();
  v122 = OUTLINED_FUNCTION_4_5(v121, sel_constraintEqualToAnchor_constant_);
  OUTLINED_FUNCTION_14_10();

  v129[17] = a23;
  v124 = OUTLINED_FUNCTION_257(v123, sel_heightAnchor);
  Layout.LocalParticipantViewCameraControls.init()();
  v125 = v167;
  static Platform.current.getter();
  v126 = objc_msgSend(v124, sel_constraintEqualToConstant_, v125);
  OUTLINED_FUNCTION_10_20();
  if (v165 >> 62)
  {
    OUTLINED_FUNCTION_14_19();
    v127 = OUTLINED_FUNCTION_62_16();
    OUTLINED_FUNCTION_27();
  }
  else
  {
    v127 = *(_QWORD *)((v165 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (!__OFADD__(v127, 3))
  {
    OUTLINED_FUNCTION_15_68(v127 + 3);
    OUTLINED_FUNCTION_3_89();
    v128 = v117;
    OUTLINED_FUNCTION_4_90();
  }
  goto LABEL_46;
}

double static SmallMultiwayControllerLayout.localParticipantWidth(for:aspectRatio:displayScale:)(double a1, double a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  double v8;
  double v9;
  uint64_t v11;

  v4 = type metadata accessor for FloatingPointRoundingRule();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Platform.current.getter();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DED500], v4);
  v8 = CGFloat.rounded(_:toScale:)((uint64_t)v7, a2, (a1 + -3.0) * 0.5);
  v9 = v8 + v8;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v9;
}

double static SmallMultiwayControllerLayout.expandedLocalParticipantHeight(for:containingView:displayScale:)(uint64_t a1, void *a2, uint64_t a3, char a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  double v12;
  double v13;
  BOOL v14;
  BOOL v15;
  double Height;
  uint64_t v17;
  void (*v18)(void);
  uint64_t v19;
  void (*v20)(uint64_t);
  double v21;
  uint64_t v22;
  double v23;
  double Width;
  double v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  double v29;
  double v30;
  _BYTE v32[16];
  double v33;
  double v34;
  char v35;
  double v36;
  double v37;
  char v38;
  CGRect v39;
  CGRect v40;

  v8 = type metadata accessor for FloatingPointRoundingRule();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = &v32[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  outlined init with take of AspectRatio(a1, (uint64_t)&v36);
  if (((v38 & 1) != 0 || ((v12 = v36, v13 = v37, v36 == 1.0) ? (v14 = v37 == 1.0) : (v14 = 0), v14))
    && ((outlined init with take of AspectRatio(a1, (uint64_t)v32), (v35 & 1) != 0)
     || ((v12 = v33, v13 = v34, v33 == 1.0) ? (v15 = v34 == 1.0) : (v15 = 0), v15)))
  {
    objc_msgSend(a2, sel_frame);
    Width = CGRectGetWidth(v40);
    v25 = static Layout.MediaPip.padding.getter();
    if (one-time initialization token for shared != -1)
      swift_once();
    v26 = static Defaults.shared;
    (*(void (**)(void))(*(_QWORD *)static Defaults.shared + 384))();
    v27 = static Platform.current.getter();
    (*(void (**)(uint64_t))(*(_QWORD *)v26 + 488))(v27);
    v23 = Width - (v25 + v25);
  }
  else
  {
    objc_msgSend(a2, sel_safeAreaInsetFrame, v12, v13);
    Height = CGRectGetHeight(v39);
    static Layout.MediaPip.padding.getter();
    if (one-time initialization token for shared != -1)
      swift_once();
    v17 = static Defaults.shared;
    v18 = *(void (**)(void))(*(_QWORD *)static Defaults.shared + 384);
    v18();
    v19 = static Platform.current.getter();
    v20 = *(void (**)(uint64_t))(*(_QWORD *)v17 + 488);
    v20(v19);
    v21 = static Layout.MediaPip.padding.getter();
    ((void (*)(double))v18)(v21);
    v22 = static Platform.current.getter();
    v20(v22);
    v23 = Height + -157.0 + -100.0;
  }
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DED508], v8);
  if ((a4 & 1) != 0)
    objc_msgSend(a2, sel_displayScale);
  else
    v28 = *(double *)&a3;
  v29 = CGFloat.rounded(_:toScale:)((uint64_t)v11, v28, v23 * 0.5);
  v30 = v29 + v29;
  (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v11, v8);
  return v30;
}

uint64_t SmallMultiwayControllerLayout.handlesLocalParticipantConstraints.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 216);
}

uint64_t SmallMultiwayControllerLayout.bannerViewConstraintManager.getter()
{
  OUTLINED_FUNCTION_2_0();
  return swift_retain();
}

id SmallMultiwayControllerLayout.localParticipantViewRegularWidth.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 32), sel_constant);
}

void SmallMultiwayControllerLayout.update(for:with:deviceOrientation:)(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  uint64_t v4;
  uint64_t v5;
  double Width;
  double v11;
  double v12;
  double v13;
  void *v14;
  id v15;
  double v16;
  _BYTE v17[40];
  CGRect v18;

  v5 = v4;
  type metadata accessor for MultiwayViewConstraintsController();
  v18.origin.x = a1;
  v18.origin.y = a2;
  v18.size.width = a3;
  v18.size.height = a4;
  Width = CGRectGetWidth(v18);
  SmallMultiwayControllerLayout.displayScale.getter();
  static MultiwayViewConstraintsController.listItemWidth(for:displayScale:configurableRosterCellWidth:)(0, 1, Width, v11);
  v13 = v12;
  objc_msgSend(*(id *)(v4 + 24), sel_setConstant_);
  v14 = *(void **)(v4 + 32);
  outlined init with take of AspectRatio(v5 + 128, (uint64_t)v17);
  v15 = v14;
  SmallMultiwayControllerLayout.displayScale.getter();
  objc_msgSend(v15, sel_setConstant_, static SmallMultiwayControllerLayout.localParticipantWidth(for:aspectRatio:displayScale:)(v13, v16));

  SmallMultiwayControllerLayout.updateLocalParticipantHeightContraints()();
}

void SmallMultiwayControllerLayout.updateLocalParticipantHeightContraints()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  void *v11;
  id v12;
  double v13;
  double v14;
  double v15;
  double v16;
  _BYTE v18[40];

  v1 = type metadata accessor for FloatingPointRoundingRule();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = &v18[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  SmallMultiwayControllerLayout.displayScale.getter();
  v6 = v5;
  v7 = 1.0;
  v8 = 1.0;
  if ((*(_BYTE *)(v0 + 160) & 1) == 0)
  {
    v8 = *(double *)(v0 + 128);
    v7 = *(double *)(v0 + 136);
  }
  if (v8 > v7)
    v9 = v8;
  else
    v9 = v7;
  if (v7 >= v8)
    v7 = v8;
  v10 = v9 / v7;
  v11 = *(void **)(v0 + 32);
  v12 = *(id *)(v0 + 40);
  objc_msgSend(v11, sel_constant);
  v14 = v10 * v13;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DED500], v1);
  v15 = CGFloat.rounded(_:toScale:)((uint64_t)v4, v6, v14 * 0.5);
  v16 = v15 + v15;
  (*(void (**)(_BYTE *, uint64_t))(v2 + 8))(v4, v1);
  objc_msgSend(v12, sel_setConstant_, v16);

  outlined init with take of AspectRatio(v0 + 128, (uint64_t)v18);
  SmallMultiwayControllerLayout.updateEnlargedAndExpandedLocalParticipantConstraints(with:)((uint64_t)v18);
}

void SmallMultiwayControllerLayout.update(localParticipantAspectRatio:layoutState:)(uint64_t a1)
{
  uint64_t v1;

  outlined init with take of AspectRatio(a1, v1 + 128);
  SmallMultiwayControllerLayout.updateLocalParticipantHeightContraints()();
}

Swift::Void __swiftcall SmallMultiwayControllerLayout.update(isDisplayedInBanner:containingView:)(Swift::Bool isDisplayedInBanner, UIView *containingView)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  char v10;
  void *v11;
  void *v12;
  uint64_t v13;

  v3 = v2;
  v6 = type metadata accessor for DispatchPredicate();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (uint64_t *)((char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v9 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DEF740], v6);
  v10 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
  if ((v10 & 1) != 0)
  {
    v11 = (void *)MEMORY[0x1C3B752C0](v3 + 184);
    if (v11)
    {
      v12 = v11;
      objc_msgSend(v11, sel_setFrame_, static ViewControllerLayout.participantLabelsViewFrame(isDisplayedInBanner:isDisplayedInAmbient:containingView:participantLabelsView:)(isDisplayedInBanner, 0, containingView, v11));

    }
  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall SmallMultiwayControllerLayout.addEffectsConstraints(with:controlsView:localParticipantView:effectsView:effectsBrowserView:)(UIView *with, UIView *controlsView, UIView_optional *localParticipantView, UIView *effectsView, UIView *effectsBrowserView)
{
  uint64_t v5;
  char v6;

  v6 = 1;
  *(_QWORD *)(v5 + 176) = static ViewControllerLayout.effectsConstraintManagers(with:layoutIdiom:controlsView:localParticipantView:effectsView:effectsBrowserView:)(with, &v6, controlsView, localParticipantView, effectsView, effectsBrowserView);
  swift_bridgeObjectRelease();
}

void SmallMultiwayControllerLayout.updateLayoutWith(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 v3;
  uint64_t v4;
  char v5;
  char v6;
  Class isa;
  double v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  double v12;
  double v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  double v17;
  Class v18;
  char v19;
  char v20;
  char v21;
  char v22;
  void *v23;
  char v24;
  unsigned __int8 v25[8];
  uint64_t v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;
  char v33;

  v2 = v1;
  v3 = *(_BYTE *)a1;
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_BYTE *)(a1 + 16);
  v6 = *(_BYTE *)(a1 + 17);
  v24 = *(_BYTE *)(a1 + 19);
  v21 = *(_BYTE *)(a1 + 20);
  v22 = *(_BYTE *)(a1 + 18);
  v19 = *(_BYTE *)(a1 + 22);
  v20 = *(_BYTE *)(a1 + 21);
  v23 = (void *)objc_opt_self();
  OUTLINED_FUNCTION_2_0();
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
  swift_bridgeObjectRetain();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_48_1(v23, sel_deactivateConstraints_);

  v25[0] = v3;
  v26 = v4;
  v27 = v5;
  v28 = v6;
  v29 = v22;
  v30 = v24;
  v31 = v21;
  v32 = v20;
  v33 = v19;
  *(_QWORD *)(v2 + 208) = SmallMultiwayControllerLayoutFactory.layoutConstraints(for:using:)(v25, v2);
  swift_bridgeObjectRelease();
  v25[0] = v3;
  v26 = v4;
  v27 = v5;
  v28 = v6;
  v29 = v22;
  v30 = v24;
  OUTLINED_FUNCTION_26_39();
  v8 = OUTLINED_FUNCTION_21_51();
  static ViewControllerLayout.constraints(with:layoutState:size:deviceOrientation:)(v9, v10, v11, v8, v12);
  OUTLINED_FUNCTION_44_30();
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_49_30();
  swift_endAccess();
  v25[0] = v3;
  v26 = v4;
  v27 = v5;
  v28 = v6;
  v29 = v22;
  v30 = v24;
  OUTLINED_FUNCTION_26_39();
  v13 = OUTLINED_FUNCTION_21_51();
  static ViewControllerLayout.constraints(with:layoutState:size:deviceOrientation:)(v14, v15, v16, v13, v17);
  OUTLINED_FUNCTION_44_30();
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_49_30();
  swift_endAccess();
  swift_bridgeObjectRetain();
  v18 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_48_1(v23, sel_activateConstraints_);

}

Swift::Void __swiftcall SmallMultiwayControllerLayout.updateShutterButton(with:)(ConversationKit::MultiwayViewConstraintsController::ShutterButtonState with)
{
  uint64_t v1;
  void *v2;
  void *v3;
  double v4;
  uint64_t v5;
  void (*v6)(void);
  uint64_t v7;
  void (*v8)(uint64_t);
  double v9;
  uint64_t v10;
  id v11;
  CGRect v12;

  v2 = *(void **)(v1 + 112);
  if ((with & 1) != 0)
  {
    if (v2)
    {
      v3 = (void *)MEMORY[0x1C3B752C0](v1 + 192);
      v11 = v2;
      if (v3)
      {
        objc_msgSend(v3, sel_frame);
        OUTLINED_FUNCTION_89();

        v12.origin.x = OUTLINED_FUNCTION_66();
        v4 = CGRectGetWidth(v12) + -20.0 + -50.0;
      }
      else
      {
        v4 = -70.0;
      }
      static Layout.MediaPip.padding.getter();
      if (one-time initialization token for shared != -1)
        swift_once();
      v5 = static Defaults.shared;
      v6 = *(void (**)(void))(*(_QWORD *)static Defaults.shared + 384);
      v6();
      v7 = static Platform.current.getter();
      v8 = *(void (**)(uint64_t))(*(_QWORD *)v5 + 488);
      v8(v7);
      v9 = static Layout.MediaPip.padding.getter();
      ((void (*)(double))v6)(v9);
      v10 = static Platform.current.getter();
      v8(v10);
      objc_msgSend(v11, sel_setConstant_, v4);
      goto LABEL_14;
    }
  }
  else if (v2)
  {
    v11 = v2;
    static Layout.MediaPip.padding.getter();
    if (one-time initialization token for shared != -1)
      swift_once();
    OUTLINED_FUNCTION_11_6();
    static Platform.current.getter();
    OUTLINED_FUNCTION_12_4();
    objc_msgSend(v11, sel_setConstant_, 20.0);
LABEL_14:

  }
}

Swift::Void __swiftcall SmallMultiwayControllerLayout.updateCaptionsBubbleViewConstraints(forPosition:withSnapping:)(CGPoint forPosition, Swift::Bool withSnapping)
{
  uint64_t v2;
  void *v3;
  double y;
  unint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  double v14;
  CGFloat v15;
  double v16;
  id v17;
  id v18;
  id v19;
  int v20;
  id v21;
  id v22;
  void *v23;
  void *v24;
  id v25;
  id v26;
  double v27;
  float v28;
  double v29;
  CGRect v30;
  CGRect v31;

  y = forPosition.y;
  v7 = MEMORY[0x1C3B752C0](v2 + 192, (__n128)__PAIR128__(v6, *(unint64_t *)&forPosition.x));
  if (!v7)
    return;
  v8 = (void *)v7;
  if (!withSnapping)
  {
LABEL_9:
    v21 = *(id *)(v2 + 88);
    v22 = OUTLINED_FUNCTION_18_56();
    OUTLINED_FUNCTION_27_37(v22);
    OUTLINED_FUNCTION_31_42();
    objc_msgSend(v21, sel_setConstant_, y - OUTLINED_FUNCTION_24_46());

    goto LABEL_10;
  }
  v9 = OUTLINED_FUNCTION_18_56();
  objc_msgSend(v9, sel_layoutFrame);
  v11 = v10;
  v13 = v12;
  v15 = v14;

  v16 = OUTLINED_FUNCTION_24_46();
  if (one-time initialization token for bubbleSnapDistance != -1)
    swift_once();
  OUTLINED_FUNCTION_2_0();
  if (v16 + *(double *)&static Layout.Captions.bubbleSnapDistance <= y)
  {
    v17 = OUTLINED_FUNCTION_18_56();
    OUTLINED_FUNCTION_27_37(v17);
    OUTLINED_FUNCTION_31_42();
    v30.origin.x = v16;
    v30.origin.y = v11;
    v30.size.width = v13;
    v30.size.height = v15;
    if (CGRectGetMaxY(v30) - *(double *)&static Layout.Captions.bubbleSnapDistance < y)
    {
      v18 = *(id *)(v2 + 88);
      v19 = OUTLINED_FUNCTION_18_56();
      OUTLINED_FUNCTION_27_37(v19);
      OUTLINED_FUNCTION_89();

      v31.origin.x = OUTLINED_FUNCTION_66();
      objc_msgSend(v18, sel_setConstant_, CGRectGetMaxY(v31));

      v20 = 1;
      goto LABEL_11;
    }
    goto LABEL_9;
  }
  objc_msgSend(*(id *)(v2 + 88), sel_setConstant_, 0.0);
LABEL_10:
  v20 = 0;
LABEL_11:
  v23 = *(void **)(v2 + 96);
  if (v23)
  {
    v24 = *(void **)(v2 + 104);
    if (v24)
    {
      v25 = v23;
      v26 = v24;
      if (v20)
        *(float *)&v27 = 1.0;
      else
        *(float *)&v27 = 1000.0;
      if (v20)
        v28 = 1000.0;
      else
        v28 = 1.0;
      objc_msgSend(v25, sel_setPriority_, v27);
      *(float *)&v29 = v28;
      objc_msgSend(v26, sel_setPriority_, v29);

    }
  }

}

Swift::Void __swiftcall SmallMultiwayControllerLayout.resetCaptionsBubbleViewConstraints()()
{
  uint64_t v0;

  objc_msgSend(*(id *)(v0 + 88), sel_setConstant_, 0.0);
}

Swift::Void __swiftcall SmallMultiwayControllerLayout.removeEffectsConstraints()()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 176) = 0;
  swift_bridgeObjectRelease();
}

void SmallMultiwayControllerLayout.updateEnlargedAndExpandedLocalParticipantConstraints(with:)(uint64_t a1)
{
  uint64_t v1;
  id *v2;
  double v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  void *v18;
  id v19;
  double v20;
  double v21;
  void (*v22)(char *, _QWORD, uint64_t);
  double v23;
  void (*v24)(char *, uint64_t);
  id v25;
  uint64_t v26;
  void *v27;
  id v28;
  id v29;
  double v30;
  double v31;
  double v32;
  double v33;
  uint64_t v34;
  void *v35;
  char v36[8];
  double v37;
  double v38[4];
  char v39;
  double v40[4];
  char v41;

  v2 = (id *)v1;
  outlined init with take of AspectRatio(a1, (uint64_t)v36);
  v4 = v37;
  v5 = type metadata accessor for FloatingPointRoundingRule();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (void *)MEMORY[0x1C3B752C0](v1 + 192);
  if (v9)
  {
    v35 = v9;
    SmallMultiwayControllerLayout.displayScale.getter();
    v11 = v10;
    outlined init with take of AspectRatio(a1, (uint64_t)v40);
    v12 = v40[0];
    if (v41)
      v13 = 1.0;
    else
      v13 = v4;
    if (v41)
      v12 = 1.0;
    if (v12 > v13)
      v14 = v12;
    else
      v14 = v13;
    outlined init with take of AspectRatio(a1, (uint64_t)v38);
    v15 = v38[0];
    if (v39)
      v16 = 1.0;
    else
      v16 = v4;
    if (v39)
      v15 = 1.0;
    if (v16 < v15)
      v15 = v16;
    v17 = v14 / v15;
    v18 = *(void **)(v1 + 48);
    v19 = v2[7];
    objc_msgSend(v18, sel_constant);
    v21 = v17 * v20;
    v22 = *(void (**)(char *, _QWORD, uint64_t))(v6 + 104);
    v22(v8, *MEMORY[0x1E0DED4E8], v5);
    v23 = CGFloat.rounded(_:toScale:)((uint64_t)v8, *(double *)&v11, v21);
    v24 = *(void (**)(char *, uint64_t))(v6 + 8);
    v24(v8, v5);
    objc_msgSend(v19, sel_setConstant_, v23);

    v25 = v2[9];
    v26 = a1;
    v27 = v35;
    objc_msgSend(v25, sel_setConstant_, static SmallMultiwayControllerLayout.expandedLocalParticipantHeight(for:containingView:displayScale:)(v26, v35, v11, 0));

    v28 = v2[9];
    v29 = v2[8];
    objc_msgSend(v28, sel_constant);
    v31 = v30 / v17;
    v22(v8, *MEMORY[0x1E0DED508], v5);
    v32 = CGFloat.rounded(_:toScale:)((uint64_t)v8, *(double *)&v11, v31 * 0.5);
    v33 = v32 + v32;
    v24(v8, v5);
    objc_msgSend(v29, sel_setConstant_, v33);

  }
}

BOOL SmallMultiwayControllerLayout.localParticipantViewIsAtBottom(for:)(uint64_t a1)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(a1 + 17);
  if (!(v1 >> 6))
    return (v1 & 0xFE) == 2;
  if (v1 >> 6 == 1)
  {
    LOBYTE(v1) = v1 & 0x3F;
    return (v1 & 0xFE) == 2;
  }
  return 0;
}

id *SmallMultiwayControllerLayout.deinit()
{
  id *v0;

  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t SmallMultiwayControllerLayout.__deallocating_deinit()
{
  SmallMultiwayControllerLayout.deinit();
  return swift_deallocClassInstance();
}

void protocol witness for ViewControllerLayout.update(for:with:deviceOrientation:) in conformance SmallMultiwayControllerLayout(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  SmallMultiwayControllerLayout.update(for:with:deviceOrientation:)(a1, a2, a3, a4);
}

void protocol witness for ViewControllerLayout.update(localParticipantAspectRatio:layoutState:) in conformance SmallMultiwayControllerLayout(uint64_t a1)
{
  SmallMultiwayControllerLayout.update(localParticipantAspectRatio:layoutState:)(a1);
}

void protocol witness for ViewControllerLayout.update(isDisplayedInBanner:containingView:) in conformance SmallMultiwayControllerLayout(Swift::Bool a1, UIView *a2)
{
  SmallMultiwayControllerLayout.update(isDisplayedInBanner:containingView:)(a1, a2);
}

void protocol witness for ViewControllerLayout.addEffectsConstraints(with:controlsView:localParticipantView:effectsView:effectsBrowserView:) in conformance SmallMultiwayControllerLayout(UIView *a1, UIView *a2, UIView_optional *a3, UIView *a4, UIView *a5)
{
  SmallMultiwayControllerLayout.addEffectsConstraints(with:controlsView:localParticipantView:effectsView:effectsBrowserView:)(a1, a2, a3, a4, a5);
}

void protocol witness for ViewControllerLayout.updateLayoutWith(_:) in conformance SmallMultiwayControllerLayout(uint64_t a1)
{
  SmallMultiwayControllerLayout.updateLayoutWith(_:)(a1);
}

void protocol witness for ViewControllerLayout.updateShutterButton(with:) in conformance SmallMultiwayControllerLayout(char a1)
{
  SmallMultiwayControllerLayout.updateShutterButton(with:)((ConversationKit::MultiwayViewConstraintsController::ShutterButtonState)(a1 & 1));
}

void protocol witness for ViewControllerLayout.updateCaptionsBubbleViewConstraints(forPosition:withSnapping:) in conformance SmallMultiwayControllerLayout(Swift::Bool a1, double a2, double a3)
{
  SmallMultiwayControllerLayout.updateCaptionsBubbleViewConstraints(forPosition:withSnapping:)((CGPoint)__PAIR128__(*(unint64_t *)&a3, *(unint64_t *)&a2), a1);
}

void protocol witness for ViewControllerLayout.resetCaptionsBubbleViewConstraints() in conformance SmallMultiwayControllerLayout()
{
  SmallMultiwayControllerLayout.resetCaptionsBubbleViewConstraints()();
}

void protocol witness for ViewControllerLayout.removeEffectsConstraints() in conformance SmallMultiwayControllerLayout()
{
  SmallMultiwayControllerLayout.removeEffectsConstraints()();
}

uint64_t protocol witness for ViewControllerLayout.handlesLocalParticipantConstraints.getter in conformance SmallMultiwayControllerLayout()
{
  return SmallMultiwayControllerLayout.handlesLocalParticipantConstraints.getter() & 1;
}

uint64_t protocol witness for ViewControllerLayout.bannerViewConstraintManager.getter in conformance SmallMultiwayControllerLayout()
{
  return SmallMultiwayControllerLayout.bannerViewConstraintManager.getter();
}

id protocol witness for ViewControllerLayout.localParticipantViewRegularWidth.getter in conformance SmallMultiwayControllerLayout()
{
  return SmallMultiwayControllerLayout.localParticipantViewRegularWidth.getter();
}

uint64_t type metadata accessor for SmallMultiwayControllerLayoutFactory()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for SmallMultiwayControllerLayout()
{
  return objc_opt_self();
}

uint64_t method lookup function for SmallMultiwayControllerLayout()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SmallMultiwayControllerLayout.__allocating_init(containingView:participantListView:participantListState:gridView:participantGridState:controlsViewController:inCallControlsState:inCallBannerHostViewController:callControlsViewController:inCallBannerControlsAreaLayoutGuide:inCallBannerDodgingLayoutGuide:inCallConversationBannerState:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsControlsView:effectsView:effectsBrowserViewController:participantLabelsView:bottomControlsView:oneToOneShutterButton:changeLayoutButton:changeLayoutButtonBackgroundView:captionsView:captionsState:reactionsView:reactionsState:reactionPickerTipView:reactionPickerTipState:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5)
{
  uint64_t v5;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD, uint64_t, _QWORD))(v5 + 264))(a1, a2, a3 & 1, a4, a5 & 1);
}

unint64_t lazy protocol witness table accessor for type MultiwayViewConstraintsController.OverallLayoutState and conformance MultiwayViewConstraintsController.OverallLayoutState()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type MultiwayViewConstraintsController.OverallLayoutState and conformance MultiwayViewConstraintsController.OverallLayoutState;
  if (!lazy protocol witness table cache variable for type MultiwayViewConstraintsController.OverallLayoutState and conformance MultiwayViewConstraintsController.OverallLayoutState)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for MultiwayViewConstraintsController.OverallLayoutState, &type metadata for MultiwayViewConstraintsController.OverallLayoutState);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MultiwayViewConstraintsController.OverallLayoutState and conformance MultiwayViewConstraintsController.OverallLayoutState);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type MultiwayViewConstraintsController.OverallLayoutState and conformance MultiwayViewConstraintsController.OverallLayoutState;
  if (!lazy protocol witness table cache variable for type MultiwayViewConstraintsController.OverallLayoutState and conformance MultiwayViewConstraintsController.OverallLayoutState)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for MultiwayViewConstraintsController.OverallLayoutState, &type metadata for MultiwayViewConstraintsController.OverallLayoutState);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MultiwayViewConstraintsController.OverallLayoutState and conformance MultiwayViewConstraintsController.OverallLayoutState);
  }
  return result;
}

id OUTLINED_FUNCTION_39_38()
{
  uint64_t v0;

  return *(id *)(v0 + 312);
}

uint64_t AccessibilityVoiceOverModifier.toSpeak.getter(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t AccessibilityVoiceOverModifier.voiceOverEnabled.getter(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  char v5;
  char v6;
  char v7;

  v5 = a4 & 1;
  outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(a3, a4 & 1);
  specialized Environment.wrappedValue.getter();
  v7 = v6;
  outlined consume of Environment<CGFloat>.Content(a3, v5);
  return v7 & 1;
}

uint64_t AccessibilityVoiceOverModifier.body(content:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  void (**v13)();

  OUTLINED_FUNCTION_0_104();
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v6;
  *(_QWORD *)(v11 + 24) = v5;
  *(_QWORD *)(v11 + 32) = a4;
  a5 &= 1u;
  *(_BYTE *)(v11 + 40) = a5;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ViewModifier_Content<AccessibilityVoiceOverModifier>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v8, v7, v12);
  v13 = (void (**)())(v8
                    + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<_ViewModifier_Content<AccessibilityVoiceOverModifier>, _AppearanceActionModifier>)
                             + 36));
  *v13 = partial apply for closure #1 in AccessibilityVoiceOverModifier.body(content:);
  v13[1] = (void (*)())v11;
  v13[2] = 0;
  v13[3] = 0;
  swift_bridgeObjectRetain();
  return outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(a4, a5);
}

void closure #1 in AccessibilityVoiceOverModifier.body(content:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  char v7;
  char v8;
  char v9;
  UIAccessibilityNotifications v10;
  id v11;

  v7 = a4 & 1;
  outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(a3, a4 & 1);
  specialized Environment.wrappedValue.getter();
  v9 = v8;
  outlined consume of Environment<CGFloat>.Content(a3, v7);
  if ((v9 & 1) != 0)
  {
    v10 = *MEMORY[0x1E0DC44C8];
    v11 = (id)MEMORY[0x1C3B72E00](a1, a2);
    UIAccessibilityPostNotification(v10, v11);

  }
}

uint64_t sub_1BD24E7FC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  outlined consume of Environment<CGFloat>.Content(*(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
  return swift_deallocObject();
}

void partial apply for closure #1 in AccessibilityVoiceOverModifier.body(content:)()
{
  uint64_t v0;

  closure #1 in AccessibilityVoiceOverModifier.body(content:)(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
}

uint64_t default argument 1 of AccessibilityVoiceOverModifier.init(toSpeak:voiceOverEnabled:)()
{
  return swift_getKeyPath();
}

uint64_t protocol witness for ViewModifier.body(content:) in conformance AccessibilityVoiceOverModifier(uint64_t a1)
{
  uint64_t v1;

  return AccessibilityVoiceOverModifier.body(content:)(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24));
}

uint64_t View.voiceOver(toSpeak:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t KeyPath;
  char v12;

  OUTLINED_FUNCTION_0_104();
  v9 = v6;
  v10 = v5;
  KeyPath = swift_getKeyPath();
  v12 = 0;
  MEMORY[0x1C3B724A0](&v9, v4, &type metadata for AccessibilityVoiceOverModifier, a4);
  return swift_release();
}

uint64_t associated type witness table accessor for ViewModifier.Body : View in AccessibilityVoiceOverModifier()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for AccessibilityVoiceOverModifier(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return outlined consume of Environment<CGFloat>.Content(*(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t initializeWithCopy for AccessibilityVoiceOverModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_BYTE *)(a2 + 24);
  swift_bridgeObjectRetain();
  outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(v4, v5);
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = v5;
  return a1;
}

uint64_t assignWithCopy for AccessibilityVoiceOverModifier(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v2 = a2;
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = v2[2];
  LOBYTE(v2) = *((_BYTE *)v2 + 24);
  outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(v4, (char)v2);
  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = (_BYTE)v2;
  outlined consume of Environment<CGFloat>.Content(v5, v6);
  return a1;
}

uint64_t assignWithTake for AccessibilityVoiceOverModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_BYTE *)(a2 + 24);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = v5;
  outlined consume of Environment<CGFloat>.Content(v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for AccessibilityVoiceOverModifier(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 25))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AccessibilityVoiceOverModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 25) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverModifier()
{
  return &type metadata for AccessibilityVoiceOverModifier;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<_ViewModifier_Content<AccessibilityVoiceOverModifier>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<_ViewModifier_Content<AccessibilityVoiceOverModifier>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<_ViewModifier_Content<AccessibilityVoiceOverModifier>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<_ViewModifier_Content<AccessibilityVoiceOverModifier>, _AppearanceActionModifier>);
    v2[0] = lazy protocol witness table accessor for type _ViewModifier_Content<AccessibilityVoiceOverModifier> and conformance _ViewModifier_Content<A>();
    v2[1] = MEMORY[0x1E0CDC8B0];
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<_ViewModifier_Content<AccessibilityVoiceOverModifier>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type _ViewModifier_Content<AccessibilityVoiceOverModifier> and conformance _ViewModifier_Content<A>()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type _ViewModifier_Content<AccessibilityVoiceOverModifier> and conformance _ViewModifier_Content<A>;
  if (!lazy protocol witness table cache variable for type _ViewModifier_Content<AccessibilityVoiceOverModifier> and conformance _ViewModifier_Content<A>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _ViewModifier_Content<AccessibilityVoiceOverModifier>);
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDBF10], v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _ViewModifier_Content<AccessibilityVoiceOverModifier> and conformance _ViewModifier_Content<A>);
  }
  return result;
}

uint64_t sub_1BD24EB90(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  v2 = type metadata accessor for ModifiedContent();
  v4[0] = v1;
  v4[1] = lazy protocol witness table accessor for type AccessibilityVoiceOverModifier and conformance AccessibilityVoiceOverModifier();
  return MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v2, v4);
}

unint64_t lazy protocol witness table accessor for type AccessibilityVoiceOverModifier and conformance AccessibilityVoiceOverModifier()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type AccessibilityVoiceOverModifier and conformance AccessibilityVoiceOverModifier;
  if (!lazy protocol witness table cache variable for type AccessibilityVoiceOverModifier and conformance AccessibilityVoiceOverModifier)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for AccessibilityVoiceOverModifier, &type metadata for AccessibilityVoiceOverModifier);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AccessibilityVoiceOverModifier and conformance AccessibilityVoiceOverModifier);
  }
  return result;
}

uint64_t PreCallButtonsViewModel.currentPreCallContext.getter()
{
  PreCallButtonsViewModel.contextSubject.getter();
  CurrentValueSubject.value.getter();
  return swift_release();
}

uint64_t PreCallButtonsViewModel.preCallDelegate.getter()
{
  swift_getKeyPath();
  OUTLINED_FUNCTION_2_91();
  OUTLINED_FUNCTION_2_6();
  swift_release();
  swift_beginAccess();
  return swift_unknownObjectRetain();
}

uint64_t key path getter for PreCallButtonsViewModel.preCallDelegate : PreCallButtonsViewModel@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  result = PreCallButtonsViewModel.preCallDelegate.getter();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  return result;
}

uint64_t key path setter for PreCallButtonsViewModel.preCallDelegate : PreCallButtonsViewModel()
{
  swift_unknownObjectRetain();
  return PreCallButtonsViewModel.preCallDelegate.setter();
}

uint64_t PreCallButtonsViewModel.preCallDelegate.setter()
{
  swift_getKeyPath();
  specialized PreCallButtonsViewModel.withMutation<A, B>(keyPath:_:)();
  OUTLINED_FUNCTION_17_22();
  return swift_unknownObjectRelease();
}

void PreCallButtonsViewModel.access<A>(keyPath:)()
{
  lazy protocol witness table accessor for type PreCallButtonsViewModel and conformance PreCallButtonsViewModel();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  OUTLINED_FUNCTION_45_0();
}

uint64_t closure #1 in PreCallButtonsViewModel.preCallDelegate.setter(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  a1[2] = a2;
  a1[3] = a3;
  a1[4] = a4;
  swift_unknownObjectRetain();
  return swift_unknownObjectRelease();
}

uint64_t specialized PreCallButtonsViewModel.withMutation<A, B>(keyPath:_:)()
{
  lazy protocol witness table accessor for type PreCallButtonsViewModel and conformance PreCallButtonsViewModel();
  return ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
}

uint64_t PreCallButtonsViewModel.withMutation<A, B>(keyPath:_:)()
{
  lazy protocol witness table accessor for type PreCallButtonsViewModel and conformance PreCallButtonsViewModel();
  return ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
}

void (*PreCallButtonsViewModel.preCallDelegate.modify(_QWORD *a1))(_QWORD **a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = v1;
  v4 = malloc(0x30uLL);
  *a1 = v4;
  v4[3] = v2;
  swift_getKeyPath();
  v4[4] = OBJC_IVAR____TtC15ConversationKit23PreCallButtonsViewModel___observationRegistrar;
  *v4 = v2;
  v4[5] = lazy protocol witness table accessor for type PreCallButtonsViewModel and conformance PreCallButtonsViewModel();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  OUTLINED_FUNCTION_17_22();
  *v4 = v2;
  swift_getKeyPath();
  ObservationRegistrar.willSet<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  return PreCallButtonsViewModel.preCallDelegate.modify;
}

void PreCallButtonsViewModel.preCallDelegate.modify(_QWORD **a1)
{
  _QWORD *v1;

  v1 = *a1;
  swift_endAccess();
  *v1 = v1[3];
  swift_getKeyPath();
  ObservationRegistrar.didSet<A, B>(_:keyPath:)();
  swift_release();
  free(v1);
}

uint64_t PreCallButtonsViewModel.__allocating_init(preCallDelegate:)()
{
  uint64_t v0;

  v0 = swift_allocObject();
  PreCallButtonsViewModel.init(preCallDelegate:)();
  return v0;
}

_QWORD *PreCallButtonsViewModel.init(preCallDelegate:)()
{
  _QWORD *v0;

  v0[2] = 0;
  v0[3] = 0;
  v0[4] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CurrentValueSubject<PreCallControlsContext?, Never>);
  swift_allocObject();
  v0[5] = CurrentValueSubject.init(_:)();
  ObservationRegistrar.init()();
  PreCallButtonsViewModel.preCallDelegate.setter();
  return v0;
}

uint64_t PreCallButtonsViewModel.contextSubject.setter()
{
  swift_getKeyPath();
  specialized PreCallButtonsViewModel.withMutation<A, B>(keyPath:_:)();
  swift_release();
  return swift_release();
}

uint64_t PreCallButtonsViewModel.contextSubject.getter()
{
  swift_getKeyPath();
  OUTLINED_FUNCTION_2_91();
  OUTLINED_FUNCTION_2_6();
  swift_release();
  return swift_retain();
}

unint64_t lazy protocol witness table accessor for type PreCallButtonsViewModel and conformance PreCallButtonsViewModel()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type PreCallButtonsViewModel and conformance PreCallButtonsViewModel;
  if (!lazy protocol witness table cache variable for type PreCallButtonsViewModel and conformance PreCallButtonsViewModel)
  {
    v1 = type metadata accessor for PreCallButtonsViewModel();
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for PreCallButtonsViewModel, v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PreCallButtonsViewModel and conformance PreCallButtonsViewModel);
  }
  return result;
}

uint64_t type metadata accessor for PreCallButtonsViewModel()
{
  uint64_t result;

  result = type metadata singleton initialization cache for PreCallButtonsViewModel;
  if (!type metadata singleton initialization cache for PreCallButtonsViewModel)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t partial apply for closure #1 in PreCallButtonsViewModel.preCallDelegate.setter()
{
  uint64_t v0;

  return closure #1 in PreCallButtonsViewModel.preCallDelegate.setter(*(_QWORD **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t PreCallButtonsViewModel.preCallContexts.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  _QWORD v6[2];

  v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.RemoveDuplicates<CurrentValueSubject<PreCallControlsContext?, Never>>);
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6[1] = PreCallButtonsViewModel.contextSubject.getter();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CurrentValueSubject<PreCallControlsContext?, Never>);
  lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>, &demangling cache variable for type metadata for CurrentValueSubject<PreCallControlsContext?, Never>, MEMORY[0x1E0C95FB8]);
  lazy protocol witness table accessor for type PreCallControlsContext? and conformance <A> A?();
  Publisher<>.removeDuplicates()();
  OUTLINED_FUNCTION_17_22();
  lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(lazy protocol witness table cache variable for type Publishers.RemoveDuplicates<CurrentValueSubject<PreCallControlsContext?, Never>> and conformance Publishers.RemoveDuplicates<A>, &demangling cache variable for type metadata for Publishers.RemoveDuplicates<CurrentValueSubject<PreCallControlsContext?, Never>>, MEMORY[0x1E0C958E0]);
  v4 = Publisher.eraseToAnyPublisher()();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

void PreCallButtonsViewModel.setPreCallContext(_:)(void **a1)
{
  void *v1;

  v1 = *a1;
  PreCallButtonsViewModel.contextSubject.getter();
  outlined copy of PreCallControlsContext(v1);
  CurrentValueSubject.send(_:)();
  swift_release();
  outlined consume of PreCallControlsContext(v1);
  OUTLINED_FUNCTION_45_0();
}

Swift::Void __swiftcall PreCallButtonsViewModel.clearPreCallContext()()
{
  PreCallButtonsViewModel.contextSubject.getter();
  CurrentValueSubject.send(_:)();
  swift_release();
}

uint64_t key path setter for PreCallButtonsViewModel.contextSubject : PreCallButtonsViewModel()
{
  swift_retain();
  return PreCallButtonsViewModel.contextSubject.setter();
}

uint64_t closure #1 in PreCallButtonsViewModel.contextSubject.setter(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)(a1 + 40) = a2;
  swift_retain();
  return swift_release();
}

uint64_t PreCallButtonsViewModel.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_unknownObjectRelease();
  swift_release();
  v1 = v0 + OBJC_IVAR____TtC15ConversationKit23PreCallButtonsViewModel___observationRegistrar;
  v2 = type metadata accessor for ObservationRegistrar();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t PreCallButtonsViewModel.__deallocating_deinit()
{
  PreCallButtonsViewModel.deinit();
  return swift_deallocClassInstance();
}

uint64_t protocol witness for PreCallContextProviding.currentPreCallContext.getter in conformance PreCallButtonsViewModel()
{
  return PreCallButtonsViewModel.currentPreCallContext.getter();
}

uint64_t protocol witness for PreCallContextProviding.preCallContexts.getter in conformance PreCallButtonsViewModel()
{
  return PreCallButtonsViewModel.preCallContexts.getter();
}

void protocol witness for PreCallContextProviding.setPreCallContext(_:) in conformance PreCallButtonsViewModel(void **a1)
{
  PreCallButtonsViewModel.setPreCallContext(_:)(a1);
}

void protocol witness for PreCallContextProviding.clearPreCallContext() in conformance PreCallButtonsViewModel()
{
  PreCallButtonsViewModel.clearPreCallContext()();
}

uint64_t ObjC metadata update function for PreCallButtonsViewModel()
{
  return type metadata accessor for PreCallButtonsViewModel();
}

uint64_t type metadata completion function for PreCallButtonsViewModel()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ObservationRegistrar();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for PreCallButtonsViewModel()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PreCallButtonsViewModel.__allocating_init(preCallDelegate:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_1BD24F6C0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = PreCallButtonsViewModel.contextSubject.getter();
  *a1 = result;
  return result;
}

uint64_t partial apply for closure #1 in PreCallButtonsViewModel.contextSubject.setter()
{
  uint64_t v0;

  return closure #1 in PreCallButtonsViewModel.contextSubject.setter(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

Swift::Void __swiftcall UIActivityViewController.setHeader(_:)(UIViewController *a1)
{
  void *v1;

  objc_msgSend(v1, sel_setCustomViewController_, a1);
  objc_msgSend(v1, sel_setHideHeaderView_, 1);
}

uint64_t dispatch thunk of RecentCallDetailControllerFactoryProtocol.makeRecentCallDetailController(forRecentsCallItem:customInfoButtonAction:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of RecentCallDetailControllerFactoryProtocol.makeContactDetailController(forContact:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of RecentCallDetailControllerFactoryProtocol.makeUnknownContactDetailController(forContact:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of RecentCallDetailControllerFactoryProtocol.makeDetailControllerForRecentCall(_:customInfoButtonAction:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

id UIHostingAutoResizableController.__allocating_init(rootView:canShowWhileLocked:)(uint64_t a1, char a2)
{
  OUTLINED_FUNCTION_12_3();
  return UIHostingAutoResizableController.init(rootView:canShowWhileLocked:)(a1, a2);
}

uint64_t UIHostingAutoResizableController.lastViewSize.getter()
{
  _QWORD *v0;

  return *(_QWORD *)((char *)v0
                   + *(_QWORD *)(class metadata base offset for UIHostingAutoResizableController
                               + (*MEMORY[0x1E0DEEDD8] & *v0)
                               + 16));
}

uint64_t UIHostingAutoResizableController.lastViewSize.setter(uint64_t result, uint64_t a2, char a3)
{
  _QWORD *v3;
  char *v4;

  v4 = (char *)v3
     + *(_QWORD *)(class metadata base offset for UIHostingAutoResizableController + (*MEMORY[0x1E0DEEDD8] & *v3) + 16);
  *(_QWORD *)v4 = result;
  *((_QWORD *)v4 + 1) = a2;
  v4[16] = a3 & 1;
  return result;
}

id UIHostingAutoResizableController.init(rootView:canShowWhileLocked:)(uint64_t a1, char a2)
{
  _QWORD *v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  _QWORD v17[2];

  v4 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v5 = *MEMORY[0x1E0DEEDD8] & *v2;
  v6 = type metadata accessor for UIHostingControllerSizingOptions();
  v7 = MEMORY[0x1E0C80A78](v6);
  v8 = *(_QWORD *)(*(_QWORD *)(v5 + class metadata base offset for UIHostingAutoResizableController) - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v2 + *(_QWORD *)(v9 + 16);
  *(_QWORD *)v10 = 0;
  *((_QWORD *)v10 + 1) = 0;
  v10[16] = 1;
  *((_BYTE *)v2 + *(_QWORD *)(*(_QWORD *)(v11 + 3416) + (*v4 & *v2) + 24)) = a2;
  OUTLINED_FUNCTION_4_91((uint64_t)v17 - v12, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 16));
  v13 = (void *)UIHostingController.init(rootView:)();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UIHostingControllerSizingOptions>);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1BD645380;
  v15 = v13;
  static UIHostingControllerSizingOptions.intrinsicContentSize.getter();
  static UIHostingControllerSizingOptions.preferredContentSize.getter();
  v17[1] = v14;
  lazy protocol witness table accessor for type UIHostingControllerSizingOptions and conformance UIHostingControllerSizingOptions();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [UIHostingControllerSizingOptions]);
  lazy protocol witness table accessor for type [UIHostingControllerSizingOptions] and conformance [A]();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  dispatch thunk of UIHostingController.sizingOptions.setter();

  OUTLINED_FUNCTION_4_41(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
  return v15;
}

unint64_t lazy protocol witness table accessor for type UIHostingControllerSizingOptions and conformance UIHostingControllerSizingOptions()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type UIHostingControllerSizingOptions and conformance UIHostingControllerSizingOptions;
  if (!lazy protocol witness table cache variable for type UIHostingControllerSizingOptions and conformance UIHostingControllerSizingOptions)
  {
    v1 = type metadata accessor for UIHostingControllerSizingOptions();
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDD0C0], v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type UIHostingControllerSizingOptions and conformance UIHostingControllerSizingOptions);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type [UIHostingControllerSizingOptions] and conformance [A]()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type [UIHostingControllerSizingOptions] and conformance [A];
  if (!lazy protocol witness table cache variable for type [UIHostingControllerSizingOptions] and conformance [A])
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [UIHostingControllerSizingOptions]);
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type [UIHostingControllerSizingOptions] and conformance [A]);
  }
  return result;
}

void UIHostingAutoResizableController.init(coder:)()
{
  _QWORD *v0;
  char *v1;

  v1 = (char *)v0
     + *(_QWORD *)(class metadata base offset for UIHostingAutoResizableController + (*MEMORY[0x1E0DEEDD8] & *v0) + 16);
  *(_QWORD *)v1 = 0;
  *((_QWORD *)v1 + 1) = 0;
  v1[16] = 1;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void @objc UIHostingAutoResizableController.init(coder:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  UIHostingAutoResizableController.init(coder:)();
}

Swift::Void __swiftcall UIHostingAutoResizableController.viewDidLayoutSubviews()()
{
  uint64_t v0;
  _QWORD *v1;
  double v2;
  double v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  double v13;
  double v14;
  char v15;
  BOOL v16;
  id v17;
  double *v18;
  uint64_t v19;
  id v20;
  id v21;
  objc_super v22;

  v4 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v22.receiver = v1;
  v22.super_class = (Class)type metadata accessor for UIHostingAutoResizableController(0, *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1)+ class metadata base offset for UIHostingAutoResizableController), *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1)+ class metadata base offset for UIHostingAutoResizableController+ 8), v0);
  v11 = OUTLINED_FUNCTION_90_0((uint64_t)v22.super_class, sel_viewDidLayoutSubviews, v5, v6, v7, v8, v9, v10, v22);
  v12 = OUTLINED_FUNCTION_25_1((uint64_t)v11, sel_view);
  if (!v12)
  {
    __break(1u);
    goto LABEL_13;
  }
  objc_msgSend(v12, sel_frame);
  OUTLINED_FUNCTION_5_87();
  v13 = COERCE_DOUBLE(UIHostingAutoResizableController.lastViewSize.getter());
  if ((v15 & 1) != 0 || (v2 == v13 ? (v16 = v3 == v14) : (v16 = 0), !v16))
  {
    v17 = OUTLINED_FUNCTION_25_1(*(uint64_t *)&v13, sel_view);
    if (v17)
    {
      objc_msgSend(v17, sel_frame);
      OUTLINED_FUNCTION_5_87();
      v18 = (double *)((char *)v1
                     + *(_QWORD *)(class metadata base offset for UIHostingAutoResizableController + (*v4 & *v1) + 16));
      *v18 = v2;
      v18[1] = v3;
      *((_BYTE *)v18 + 16) = 0;
      v20 = OUTLINED_FUNCTION_25_1(v19, sel_parentViewController);
      if (!v20)
        return;
      v21 = objc_msgSend(v20, sel_view);
      OUTLINED_FUNCTION_49_5();
      if (v1)
      {
        objc_msgSend(v1, sel_setNeedsLayout);

        return;
      }
LABEL_14:
      __break(1u);
      return;
    }
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
}

uint64_t type metadata accessor for UIHostingAutoResizableController(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for UIHostingAutoResizableController);
}

void @objc UIHostingAutoResizableController.viewDidLayoutSubviews()(void *a1)
{
  id v1;

  v1 = a1;
  UIHostingAutoResizableController.viewDidLayoutSubviews()();

}

Swift::Bool __swiftcall UIHostingAutoResizableController._canShowWhileLocked()()
{
  _QWORD *v0;

  return *((_BYTE *)v0
         + *(_QWORD *)(class metadata base offset for UIHostingAutoResizableController
                     + (*MEMORY[0x1E0DEEDD8] & *v0)
                     + 24));
}

BOOL @objc UIHostingAutoResizableController._canShowWhileLocked()()
{
  return UIHostingAutoResizableController._canShowWhileLocked()();
}

void UIHostingAutoResizableController.__allocating_init(rootView:)()
{
  OUTLINED_FUNCTION_12_3();
  UIHostingAutoResizableController.init(rootView:)();
}

void UIHostingAutoResizableController.init(rootView:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void UIHostingAutoResizableController.__allocating_init(coder:rootView:)()
{
  OUTLINED_FUNCTION_12_3();
  UIHostingAutoResizableController.init(coder:rootView:)();
}

void UIHostingAutoResizableController.init(coder:rootView:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id UIHostingAutoResizableController.__deallocating_deinit()
{
  return UIHostingAutoResizableController.__deallocating_deinit(&class metadata base offset for UIHostingAutoResizableController, (uint64_t (*)(_QWORD, _QWORD, _QWORD))type metadata accessor for UIHostingAutoResizableController);
}

Swift::Void __swiftcall SelfSizingHostingView.layoutSubviews()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  objc_super v8;

  v8.receiver = v1;
  v8.super_class = (Class)type metadata accessor for SelfSizingHostingView(0, *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1)+ class metadata base offset for SelfSizingHostingView), *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1)+ class metadata base offset for SelfSizingHostingView+ 8), v0);
  OUTLINED_FUNCTION_90_0((uint64_t)v8.super_class, sel_layoutSubviews, v2, v3, v4, v5, v6, v7, v8);
  objc_msgSend(v1, sel_invalidateIntrinsicContentSize);
}

uint64_t type metadata accessor for SelfSizingHostingView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SelfSizingHostingView);
}

void @objc SelfSizingHostingView.layoutSubviews()(void *a1)
{
  id v1;

  v1 = a1;
  SelfSizingHostingView.layoutSubviews()();

}

uint64_t SelfSizingHostingView.__allocating_init(rootView:)(uint64_t a1)
{
  OUTLINED_FUNCTION_12_3();
  return SelfSizingHostingView.init(rootView:)(a1);
}

uint64_t SelfSizingHostingView.init(rootView:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v2 = *(_QWORD *)(*(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + class metadata base offset for SelfSizingHostingView) - 8);
  MEMORY[0x1E0C80A78](a1);
  OUTLINED_FUNCTION_4_91((uint64_t)&v6 - v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
  v4 = _UIHostingView.init(rootView:)();
  OUTLINED_FUNCTION_4_41(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  return v4;
}

uint64_t SelfSizingHostingView.__allocating_init(coder:)(uint64_t a1)
{
  uint64_t v1;

  objc_msgSend(OUTLINED_FUNCTION_12_3(), sel_initWithCoder_, a1);
  OUTLINED_FUNCTION_49_5();
  return v1;
}

_QWORD *SelfSizingHostingView.init(coder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v6;
  objc_super v8;

  v6 = (objc_class *)type metadata accessor for SelfSizingHostingView(0, *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4) + class metadata base offset for SelfSizingHostingView), *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4)+ class metadata base offset for SelfSizingHostingView+ 8), a4);
  v8.receiver = v4;
  v8.super_class = v6;
  objc_msgSendSuper2(&v8, sel_initWithCoder_, a1);
  OUTLINED_FUNCTION_49_5();
  return v4;
}

_QWORD *@objc SelfSizingHostingView.init(coder:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = a3;
  return SelfSizingHostingView.init(coder:)((uint64_t)v3, v4, v5, v6);
}

id SelfSizingHostingView.__deallocating_deinit()
{
  return UIHostingAutoResizableController.__deallocating_deinit(&class metadata base offset for SelfSizingHostingView, (uint64_t (*)(_QWORD, _QWORD, _QWORD))type metadata accessor for SelfSizingHostingView);
}

id UIHostingAutoResizableController.__deallocating_deinit(_QWORD *a1, uint64_t (*a2)(_QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  objc_super v11;

  v3 = (_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v2) + *a1);
  v11.receiver = v2;
  v11.super_class = (Class)a2(0, *v3, v3[1]);
  return OUTLINED_FUNCTION_90_0((uint64_t)v11.super_class, sel_dealloc, v4, v5, v6, v7, v8, v9, v11);
}

uint64_t type metadata completion function for UIHostingAutoResizableController()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for UIHostingAutoResizableController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of UIHostingAutoResizableController.__allocating_init(rootView:canShowWhileLocked:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(class metadata base offset for UIHostingAutoResizableController + v0 + 56))();
}

uint64_t type metadata completion function for SelfSizingHostingView()
{
  return swift_initClassMetadata2();
}

uint64_t specialized Sequence.compactMap<A>(_:)(_QWORD *a1, char *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  id v36[2];
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  void (*v42)(uint64_t, char *, uint64_t);
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Participant(0);
  v47 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x1E0C80A78](v8);
  v46 = (uint64_t)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v36 - v12;
  MEMORY[0x1E0C80A78](v11);
  v38 = (uint64_t)v36 - v14;
  v15 = type metadata accessor for UUID();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  MEMORY[0x1E0C80A78](v19);
  v49 = (char *)v36 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = a1[2];
  v36[1] = a1;
  v37 = v2;
  v36[0] = a2;
  if (v45)
  {
    v44 = (char *)a1 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
    v21 = &a2[OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participants];
    swift_bridgeObjectRetain();
    v40 = v21;
    swift_beginAccess();
    v22 = 0;
    v23 = *(_QWORD *)(v16 + 72);
    v42 = *(void (**)(uint64_t, char *, uint64_t))(v16 + 16);
    v43 = v23;
    v50 = MEMORY[0x1E0DEE9D8];
    v24 = (uint64_t)v49;
    v39 = v7;
    v41 = v15;
    v48 = v16;
    while (1)
    {
      v42(v24, &v44[v43 * v22], v15);
      __swift_storeEnumTagSinglePayload(v24, 0, 1, v15);
      if (__swift_getEnumTagSinglePayload(v24, 1, v15) == 1)
        break;
      (*(void (**)(char *, uint64_t, uint64_t))(v16 + 32))(v18, v24, v15);
      v25 = *(_QWORD *)(*(_QWORD *)v40 + 16);
      if (v25)
      {
        v26 = v47;
        v27 = *(_QWORD *)v40
            + ((*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80));
        swift_bridgeObjectRetain();
        v28 = *(_QWORD *)(v26 + 72);
        while (1)
        {
          outlined init with copy of ConversationControlsAppLaunchButtonType(v27, (uint64_t)v13, type metadata accessor for Participant);
          if ((static UUID.== infix(_:_:)() & 1) != 0)
            break;
          outlined destroy of AccountUpdateNotice((uint64_t)v13, type metadata accessor for Participant);
          v27 += v28;
          if (!--v25)
            goto LABEL_10;
        }
        v29 = (uint64_t)v39;
        outlined init with take of StagedCollaboration((uint64_t)v13, (uint64_t)v39, type metadata accessor for Participant);
        v30 = v29;
        v31 = 0;
      }
      else
      {
        swift_bridgeObjectRetain();
LABEL_10:
        v29 = (uint64_t)v39;
        v30 = (uint64_t)v39;
        v31 = 1;
      }
      __swift_storeEnumTagSinglePayload(v30, v31, 1, v8);
      v16 = v48;
      v24 = (uint64_t)v49;
      swift_bridgeObjectRelease();
      v15 = v41;
      (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v41);
      if (__swift_getEnumTagSinglePayload(v29, 1, v8) == 1)
      {
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v29, &demangling cache variable for type metadata for Participant?);
      }
      else
      {
        v32 = v38;
        outlined init with take of StagedCollaboration(v29, v38, type metadata accessor for Participant);
        outlined init with take of StagedCollaboration(v32, v46, type metadata accessor for Participant);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v50 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        v33 = *(_QWORD *)(v50 + 16);
        if (v33 >= *(_QWORD *)(v50 + 24) >> 1)
          v50 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        v34 = v50;
        *(_QWORD *)(v50 + 16) = v33 + 1;
        outlined init with take of StagedCollaboration(v46, v34+ ((*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80))+ *(_QWORD *)(v47 + 72) * v33, type metadata accessor for Participant);
        v16 = v48;
        v24 = (uint64_t)v49;
      }
      if (++v22 == v45)
        goto LABEL_22;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    v50 = MEMORY[0x1E0DEE9D8];
    v24 = (uint64_t)v49;
LABEL_22:
    __swift_storeEnumTagSinglePayload(v24, 1, 1, v15);
  }

  swift_bridgeObjectRelease();
  return v50;
}

uint64_t specialized _ArrayProtocol.filter(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t result;
  uint64_t v18;
  unint64_t v19;
  void (*v20)(char *, unint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  char *v39;
  void (*v40)(char *, char *, uint64_t);
  uint64_t v41;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v30 - v8;
  v10 = type metadata accessor for UUID();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v35 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v30 - v15;
  result = MEMORY[0x1E0C80A78](v14);
  v39 = (char *)&v30 - v18;
  v41 = MEMORY[0x1E0DEE9D8];
  v34 = *(_QWORD *)(a1 + 16);
  if (v34)
  {
    v19 = 0;
    v32 = a1;
    v33 = a2;
    v31 = v9;
    while (v19 < *(_QWORD *)(a1 + 16))
    {
      v37 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
      v38 = *(_QWORD *)(v11 + 72);
      v20 = *(void (**)(char *, unint64_t, uint64_t))(v11 + 16);
      v20(v9, a1 + v37 + v38 * v19, v10);
      __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v10);
      if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10) == 1)
        goto LABEL_21;
      v40 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
      v40(v39, v9, v10);
      v21 = a2;
      v22 = *(_QWORD *)(a2 + 16);
      v36 = v19;
      if (v22)
      {
        v23 = v21 + v37;
        swift_bridgeObjectRetain();
        while (1)
        {
          v20(v7, v23, v10);
          __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v10);
          if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v10) == 1)
            break;
          v40(v16, v7, v10);
          lazy protocol witness table accessor for type UUID and conformance UUID();
          v24 = dispatch thunk of static Equatable.== infix(_:_:)();
          v25 = v11;
          v26 = *(void (**)(char *, uint64_t))(v11 + 8);
          v26(v16, v10);
          if ((v24 & 1) != 0)
          {
            a2 = v33;
            swift_bridgeObjectRelease();
            result = ((uint64_t (*)(char *, uint64_t))v26)(v39, v10);
            v11 = v25;
            goto LABEL_19;
          }
          v23 += v38;
          --v22;
          v11 = v25;
          if (!v22)
            goto LABEL_12;
        }
      }
      else
      {
        swift_bridgeObjectRetain();
LABEL_12:
        __swift_storeEnumTagSinglePayload((uint64_t)v7, 1, 1, v10);
      }
      a2 = v33;
      swift_bridgeObjectRelease();
      v40(v35, v39, v10);
      v27 = v41;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(_QWORD *)(v27 + 16) + 1, 1);
        v27 = v41;
      }
      v29 = *(_QWORD *)(v27 + 16);
      v28 = *(_QWORD *)(v27 + 24);
      if (v29 >= v28 >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v28 > 1, v29 + 1, 1);
        v27 = v41;
      }
      *(_QWORD *)(v27 + 16) = v29 + 1;
      result = ((uint64_t (*)(unint64_t, char *, uint64_t))v40)(v27 + v37 + v29 * v38, v35, v10);
      v41 = v27;
LABEL_19:
      v19 = v36 + 1;
      v9 = v31;
      a1 = v32;
      if (v36 + 1 == v34)
        goto LABEL_20;
    }
    __break(1u);
  }
  else
  {
LABEL_20:
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 1, 1, v10);
LABEL_21:
    swift_bridgeObjectRelease();
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v9, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    swift_bridgeObjectRelease();
    return v41;
  }
  return result;
}

{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t result;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void (*v21)(char *, unint64_t, uint64_t);
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v29 - v8;
  v10 = type metadata accessor for UUID();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v30 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v29 - v15;
  result = MEMORY[0x1E0C80A78](v14);
  v38 = (char *)&v29 - v18;
  v39 = MEMORY[0x1E0DEE9D8];
  v33 = *(_QWORD *)(a1 + 16);
  if (v33)
  {
    v19 = 0;
    v34 = a2;
    v31 = a1;
    v32 = v9;
    v37 = v11;
    while (v19 < *(_QWORD *)(a1 + 16))
    {
      v35 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
      v36 = v19;
      v20 = *(_QWORD *)(v11 + 72);
      v21 = *(void (**)(char *, unint64_t, uint64_t))(v11 + 16);
      v21(v9, a1 + v35 + v20 * v19, v10);
      __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v10);
      if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10) == 1)
        goto LABEL_21;
      v22 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
      v22(v38, v9, v10);
      v23 = *(_QWORD *)(a2 + 16);
      if (v23)
      {
        v24 = a2 + v35;
        swift_bridgeObjectRetain();
        while (1)
        {
          v21(v7, v24, v10);
          __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v10);
          if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v10) == 1)
            break;
          v22(v16, v7, v10);
          lazy protocol witness table accessor for type UUID and conformance UUID();
          v25 = dispatch thunk of static Equatable.== infix(_:_:)();
          (*(void (**)(char *, uint64_t))(v37 + 8))(v16, v10);
          if ((v25 & 1) != 0)
          {
            swift_bridgeObjectRelease();
            v22(v30, v38, v10);
            v26 = v39;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(_QWORD *)(v26 + 16) + 1, 1);
              v26 = v39;
            }
            v9 = v32;
            v28 = *(_QWORD *)(v26 + 16);
            v27 = *(_QWORD *)(v26 + 24);
            if (v28 >= v27 >> 1)
            {
              specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v27 > 1, v28 + 1, 1);
              v26 = v39;
            }
            *(_QWORD *)(v26 + 16) = v28 + 1;
            result = ((uint64_t (*)(unint64_t, char *, uint64_t))v22)(v26 + v35 + v28 * v20, v30, v10);
            v39 = v26;
            a2 = v34;
            v11 = v37;
            goto LABEL_19;
          }
          v24 += v20;
          if (!--v23)
            goto LABEL_12;
        }
      }
      else
      {
        swift_bridgeObjectRetain();
LABEL_12:
        __swift_storeEnumTagSinglePayload((uint64_t)v7, 1, 1, v10);
      }
      a2 = v34;
      swift_bridgeObjectRelease();
      v11 = v37;
      result = (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v38, v10);
      v9 = v32;
LABEL_19:
      v19 = v36 + 1;
      a1 = v31;
      if (v36 + 1 == v33)
        goto LABEL_20;
    }
    __break(1u);
  }
  else
  {
LABEL_20:
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 1, 1, v10);
LABEL_21:
    swift_bridgeObjectRelease();
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v9, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    swift_bridgeObjectRelease();
    return v39;
  }
  return result;
}

{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t result;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  void (*v22)(char *, unint64_t, uint64_t);
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  char v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, char *, uint64_t);
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;

  v42 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for NSDiffableDataSourceSnapshot<InCallControlsCollectionViewController.CollectionViewSection, UUID>);
  v40 = *(_QWORD *)(v3 - 8);
  v41 = v3;
  MEMORY[0x1E0C80A78](v3);
  v39 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v34 - v9;
  v11 = type metadata accessor for UUID();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v35 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v34 - v16;
  result = MEMORY[0x1E0C80A78](v15);
  v48 = (char *)&v34 - v19;
  v49 = MEMORY[0x1E0DEE9D8];
  v38 = *(_QWORD *)(a1 + 16);
  if (v38)
  {
    v20 = 0;
    v36 = v10;
    v37 = a1;
    v47 = v12;
    while (v20 < *(_QWORD *)(a1 + 16))
    {
      v44 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
      v21 = *(_QWORD *)(v12 + 72);
      v22 = *(void (**)(char *, unint64_t, uint64_t))(v12 + 16);
      v22(v10, a1 + v44 + v21 * v20, v11);
      __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v11);
      if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11) == 1)
        goto LABEL_21;
      v45 = v20;
      v43 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
      v43(v48, v10, v11);
      v23 = v39;
      v24 = v40;
      v25 = v41;
      (*(void (**)(char *, uint64_t, uint64_t))(v40 + 16))(v39, v42, v41);
      v26 = NSDiffableDataSourceSnapshot.itemIdentifiers.getter();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v23, v25);
      v27 = *(_QWORD *)(v26 + 16);
      v46 = v26;
      if (v27)
      {
        v28 = v26 + v44;
        swift_bridgeObjectRetain();
        v29 = v43;
        while (1)
        {
          v22(v8, v28, v11);
          __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v11);
          if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v11) == 1)
            break;
          v29(v17, v8, v11);
          _s10Foundation4UUIDVACSHAAWlTm_2(&lazy protocol witness table cache variable for type UUID and conformance UUID);
          v30 = dispatch thunk of static Equatable.== infix(_:_:)();
          (*(void (**)(char *, uint64_t))(v47 + 8))(v17, v11);
          if ((v30 & 1) != 0)
          {
            swift_bridgeObjectRelease_n();
            v29(v35, v48, v11);
            v31 = v49;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(_QWORD *)(v31 + 16) + 1, 1);
              v31 = v49;
            }
            v33 = *(_QWORD *)(v31 + 16);
            v32 = *(_QWORD *)(v31 + 24);
            if (v33 >= v32 >> 1)
            {
              specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v32 > 1, v33 + 1, 1);
              v31 = v49;
            }
            *(_QWORD *)(v31 + 16) = v33 + 1;
            result = ((uint64_t (*)(unint64_t, char *, uint64_t))v29)(v31 + v44 + v33 * v21, v35, v11);
            v49 = v31;
            v12 = v47;
            goto LABEL_19;
          }
          v28 += v21;
          if (!--v27)
            goto LABEL_12;
        }
      }
      else
      {
        swift_bridgeObjectRetain();
LABEL_12:
        __swift_storeEnumTagSinglePayload((uint64_t)v8, 1, 1, v11);
      }
      swift_bridgeObjectRelease_n();
      v12 = v47;
      result = (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v48, v11);
LABEL_19:
      v20 = v45 + 1;
      a1 = v37;
      v10 = v36;
      if (v45 + 1 == v38)
        goto LABEL_20;
    }
    __break(1u);
  }
  else
  {
LABEL_20:
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 1, 1, v11);
LABEL_21:
    swift_bridgeObjectRelease();
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v10, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    return v49;
  }
  return result;
}

{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t result;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void (*v21)(char *, unint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  char *v38;
  uint64_t v39;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v29 - v8;
  v10 = type metadata accessor for UUID();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v30 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v29 - v15;
  result = MEMORY[0x1E0C80A78](v14);
  v38 = (char *)&v29 - v18;
  v39 = MEMORY[0x1E0DEE9D8];
  v33 = *(_QWORD *)(a1 + 16);
  if (v33)
  {
    v19 = 0;
    v34 = a2;
    v31 = v9;
    v32 = a1;
    while (v19 < *(_QWORD *)(a1 + 16))
    {
      v35 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
      v36 = v19;
      v20 = *(_QWORD *)(v11 + 72);
      v21 = *(void (**)(char *, unint64_t, uint64_t))(v11 + 16);
      v21(v9, a1 + v35 + v20 * v19, v10);
      __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v10);
      if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10) == 1)
        goto LABEL_21;
      v22 = v11;
      v37 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
      v37(v38, v9, v10);
      v23 = *(_QWORD *)(a2 + 16);
      if (v23)
      {
        v24 = a2 + v35;
        swift_bridgeObjectRetain();
        while (1)
        {
          v21(v7, v24, v10);
          __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v10);
          if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v10) == 1)
            break;
          v37(v16, v7, v10);
          _s10Foundation4UUIDVACSHAAWlTm_2(&lazy protocol witness table cache variable for type UUID and conformance UUID);
          v25 = dispatch thunk of static Equatable.== infix(_:_:)();
          (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v10);
          if ((v25 & 1) != 0)
          {
            swift_bridgeObjectRelease();
            v37(v30, v38, v10);
            v26 = v39;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(_QWORD *)(v26 + 16) + 1, 1);
              v26 = v39;
            }
            v11 = v22;
            v28 = *(_QWORD *)(v26 + 16);
            v27 = *(_QWORD *)(v26 + 24);
            if (v28 >= v27 >> 1)
            {
              specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v27 > 1, v28 + 1, 1);
              v26 = v39;
            }
            *(_QWORD *)(v26 + 16) = v28 + 1;
            result = ((uint64_t (*)(unint64_t, char *, uint64_t))v37)(v26 + v35 + v28 * v20, v30, v10);
            v39 = v26;
            a2 = v34;
            goto LABEL_19;
          }
          v24 += v20;
          if (!--v23)
            goto LABEL_12;
        }
      }
      else
      {
        swift_bridgeObjectRetain();
LABEL_12:
        __swift_storeEnumTagSinglePayload((uint64_t)v7, 1, 1, v10);
      }
      a2 = v34;
      swift_bridgeObjectRelease();
      v11 = v22;
      result = (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v38, v10);
LABEL_19:
      v19 = v36 + 1;
      a1 = v32;
      v9 = v31;
      if (v36 + 1 == v33)
        goto LABEL_20;
    }
    __break(1u);
  }
  else
  {
LABEL_20:
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 1, 1, v10);
LABEL_21:
    swift_bridgeObjectRelease();
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v9, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    swift_bridgeObjectRelease();
    return v39;
  }
  return result;
}

uint64_t specialized Collection.prefix(_:)(uint64_t result, uint64_t a2)
{
  unint64_t v3;
  char v4;
  unint64_t v5;

  if (result < 0)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v3 = *(_QWORD *)(a2 + 16);
  result = specialized Array.index(_:offsetBy:limitedBy:)(0, result, v3);
  if ((v4 & 1) != 0)
    v5 = v3;
  else
    v5 = result;
  if ((v5 & 0x8000000000000000) != 0)
    goto LABEL_9;
  if (v3 >= v5)
  {
    type metadata accessor for Participant(0);
    return a2;
  }
LABEL_10:
  __break(1u);
  return result;
}

{
  uint64_t v2;
  unint64_t v3;
  char v4;
  unint64_t v5;

  if (result < 0)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  result = OUTLINED_FUNCTION_91_7(result, a2);
  if (v4)
    v5 = result;
  else
    v5 = v3;
  if ((v5 & 0x8000000000000000) != 0)
    goto LABEL_9;
  if (v3 >= v5)
    return v2;
LABEL_10:
  __break(1u);
  return result;
}

{
  uint64_t v2;
  unint64_t v3;
  char v4;
  unint64_t v5;

  if (result < 0)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  result = OUTLINED_FUNCTION_91_7(result, a2);
  if (v4)
    v5 = result;
  else
    v5 = v3;
  if ((v5 & 0x8000000000000000) != 0)
    goto LABEL_9;
  if (v3 >= v5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
    OUTLINED_FUNCTION_37_3();
    return v2;
  }
LABEL_10:
  __break(1u);
  return result;
}

void specialized Array.remove(at:)()
{
  specialized Array.remove(at:)();
}

{
  specialized Array.remove(at:)();
}

{
  uint64_t *v0;
  void (*v1)(_QWORD);
  void (*v2)(_QWORD);
  uint64_t (*v3)(uint64_t);
  uint64_t (*v4)(uint64_t);
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_96();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v7 = *v0;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v7 = v4(v7);
  v8 = *(_QWORD *)(v7 + 16);
  if (v8 <= v6)
  {
    __break(1u);
  }
  else
  {
    v9 = *(_QWORD *)(((uint64_t (*)(_QWORD))v2)(0) - 8);
    v10 = *(_QWORD *)(v9 + 72);
    v11 = v7 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)) + v10 * v6;
    v12 = OUTLINED_FUNCTION_153_1();
    OUTLINED_FUNCTION_64_5(v12, v13);
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(v11 + v10, v8 - 1 - v6, v11, v2);
    *(_QWORD *)(v7 + 16) = v8 - 1;
    *v0 = v7;
    OUTLINED_FUNCTION_65_1();
  }
}

{
  uint64_t *v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_96();
  v2 = v1;
  v4 = v3;
  v5 = *v0;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    specialized _ArrayBuffer._consumeAndCreateNew()();
    v5 = v8;
  }
  v6 = *(_QWORD *)(v5 + 16);
  if (v6 <= v2)
  {
    __break(1u);
  }
  else
  {
    v7 = v5 + 40 * v2;
    outlined init with take of Notice((__int128 *)(v7 + 32), v4);
    specialized UnsafeMutablePointer.moveInitialize(from:count:)((char *)(v7 + 72), v6 - 1 - v2, (char *)(v7 + 32));
    *(_QWORD *)(v5 + 16) = v6 - 1;
    *v0 = v5;
    OUTLINED_FUNCTION_65_1();
  }
}

void specialized Array.remove(at:)(unint64_t a1)
{
  specialized Array.remove(at:)(a1, (uint64_t (*)(uint64_t))specialized _ArrayBuffer._consumeAndCreateNew());
}

void specialized Array.remove(at:)(unint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t *v2;
  uint64_t v5;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v5 = *v2;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v2 = v5;
  if (!isUniquelyReferenced_nonNull_bridgeObject || v5 < 0 || (v5 & 0x4000000000000000) != 0)
  {
    v5 = a2(v5);
    *v2 = v5;
  }
  v7 = v5 & 0xFFFFFFFFFFFFFF8;
  v8 = *(_QWORD *)(v7 + 16);
  if (v8 <= a1)
  {
    __break(1u);
  }
  else
  {
    v9 = v8 - 1;
    specialized UnsafeMutablePointer.moveInitialize(from:count:)((char *)(v7 + 8 * a1 + 40), v8 - 1 - a1, (char *)(v7 + 8 * a1 + 32));
    *(_QWORD *)(v7 + 16) = v9;
    specialized Array._endMutation()();
    OUTLINED_FUNCTION_18();
  }
}

void ParticipantGridViewController.participants.getter()
{
  OUTLINED_FUNCTION_1();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_32();
}

BOOL ParticipantGridViewController.hasOtherInvitedParticipants.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD v18[5];

  v1 = type metadata accessor for Participant.State(0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Participant(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v18 - v9;
  v11 = (uint64_t *)(v0 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participants);
  swift_beginAccess();
  v12 = *v11;
  v13 = MEMORY[0x1E0DEE9D8];
  v18[4] = MEMORY[0x1E0DEE9D8];
  v14 = *(_QWORD *)(v12 + 16);
  swift_bridgeObjectRetain();
  v18[3] = v14;
  if (v14)
  {
    v18[1] = v8;
    v18[2] = v1;
    if (*(_QWORD *)(v12 + 16))
    {
      outlined init with copy of ConversationControlsAppLaunchButtonType(v12 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), (uint64_t)v10, type metadata accessor for Participant);
      outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v10, (uint64_t)v3, type metadata accessor for Participant.State);
      v15 = (char *)&loc_1BD251130 + *((int *)qword_1BD2512B0 + swift_getEnumCaseMultiPayload());
      __asm { BR              X9 }
    }
    __break(1u);
    JUMPOUT(0x1BD2512B0);
  }
  swift_bridgeObjectRelease();
  v16 = *(_QWORD *)(v13 + 16);
  swift_release();
  return v16 != 0;
}

void ParticipantGridViewController.gridView.getter()
{
  void *v0;
  id v1;
  id v2;
  void *v3;

  v1 = objc_msgSend(v0, sel_isViewLoaded);
  if ((_DWORD)v1)
  {
    v2 = OUTLINED_FUNCTION_25_1((uint64_t)v1, sel_view);
    if (v2)
    {
      v3 = v2;
      type metadata accessor for ParticipantGridView(0);
      if (!swift_dynamicCastClass())

    }
  }
  OUTLINED_FUNCTION_0();
}

uint64_t ParticipantGridViewController.participantViews.getter()
{
  void *v0;
  uint64_t v1;
  void *v2;
  id v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t i;
  id v8;
  void *v9;
  uint64_t v10;

  ParticipantGridViewController.gridView.getter();
  v1 = MEMORY[0x1E0DEE9D8];
  if (!v0)
    return v1;
  v2 = v0;
  v3 = objc_msgSend(v0, sel_subviews);
  OUTLINED_FUNCTION_17_8((uint64_t)v3, (unint64_t *)&lazy cache variable for type metadata for UIView);
  v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  v10 = v1;
  if (!(v4 >> 62))
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v5)
      goto LABEL_4;
LABEL_17:
    OUTLINED_FUNCTION_2_1();
    v1 = MEMORY[0x1E0DEE9D8];
LABEL_18:
    OUTLINED_FUNCTION_2_1();

    return v1;
  }
  swift_bridgeObjectRetain();
  result = _CocoaArrayWrapper.endIndex.getter();
  v5 = result;
  if (!result)
    goto LABEL_17;
LABEL_4:
  if (v5 >= 1)
  {
    for (i = 0; i != v5; ++i)
    {
      if ((v4 & 0xC000000000000001) != 0)
        v8 = (id)MEMORY[0x1C3B73D18](i, v4);
      else
        v8 = *(id *)(v4 + 8 * i + 32);
      v9 = v8;
      type metadata accessor for ParticipantView();
      if (swift_dynamicCastClass())
      {
        MEMORY[0x1C3B7301C]();
        if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      else
      {

      }
    }
    OUTLINED_FUNCTION_2_1();
    v1 = v10;
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

id ParticipantGridViewController.forceAudioPriorityButton.getter()
{
  uint64_t v0;

  return objc_retain(*(id *)(v0
                           + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_forceAudioPriorityButton));
}

void ParticipantGridViewController.focusedParticipant.getter()
{
  ParticipantGridViewController.focusedParticipant.getter(&OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_focusedParticipant);
}

void ParticipantGridViewController.focusedParticipant.didset(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  int EnumTagSinglePayload;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  _BYTE *v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE *v41;
  void (*v42)(_BYTE *, uint64_t);
  _BYTE *v43;
  void *v44;
  void *v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t ObjectType;
  uint64_t v50;
  _BYTE *v51;
  void *v52;
  void *v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _BYTE v58[12];
  int v59;
  _BYTE *v60;
  _BYTE *v61;
  _BYTE *v62;
  _BYTE *v63;
  _BYTE *v64;
  _BYTE *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  v2 = type metadata accessor for UUID();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v60 = &v58[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = MEMORY[0x1E0C80A78](v4);
  v61 = &v58[-v7];
  MEMORY[0x1E0C80A78](v6);
  v62 = &v58[-v8];
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
  MEMORY[0x1E0C80A78](v9);
  v11 = &v58[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  v13 = MEMORY[0x1E0C80A78](v12);
  v65 = &v58[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v13);
  v16 = &v58[-v15];
  v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  v18 = MEMORY[0x1E0C80A78](v17);
  v64 = &v58[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v20 = MEMORY[0x1E0C80A78](v18);
  v63 = &v58[-v21];
  v22 = MEMORY[0x1E0C80A78](v20);
  v24 = &v58[-v23];
  v25 = MEMORY[0x1E0C80A78](v22);
  v27 = &v58[-v26];
  MEMORY[0x1E0C80A78](v25);
  v29 = &v58[-v28];
  v66 = a1;
  outlined init with copy of FeatureEligibility?(a1, (uint64_t)v16, &demangling cache variable for type metadata for Participant?);
  v30 = type metadata accessor for Participant(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, v30);
  v68 = v3;
  if (EnumTagSinglePayload == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v16, &demangling cache variable for type metadata for Participant?);
    v32 = 1;
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v3 + 16))(v29, &v16[*(int *)(v30 + 20)], v2);
    outlined destroy of AccountUpdateNotice((uint64_t)v16, type metadata accessor for Participant);
    v32 = 0;
  }
  v33 = 1;
  __swift_storeEnumTagSinglePayload((uint64_t)v29, v32, 1, v2);
  v34 = v67 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_focusedParticipant;
  swift_beginAccess();
  if (!__swift_getEnumTagSinglePayload(v34, 1, v30))
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v68 + 16))(v27, v34 + *(int *)(v30 + 20), v2);
    v33 = 0;
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v27, v33, 1, v2);
  v35 = (uint64_t)&v11[*(int *)(v9 + 48)];
  outlined init with copy of FeatureEligibility?((uint64_t)v29, (uint64_t)v11, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  outlined init with copy of FeatureEligibility?((uint64_t)v27, v35, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v2) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v27, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v29, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    if (__swift_getEnumTagSinglePayload(v35, 1, v2) == 1)
    {
      v36 = (uint64_t)v11;
LABEL_26:
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v36, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      return;
    }
    goto LABEL_11;
  }
  outlined init with copy of FeatureEligibility?((uint64_t)v11, (uint64_t)v24, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  if (__swift_getEnumTagSinglePayload(v35, 1, v2) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v27, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v29, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    (*(void (**)(_BYTE *, uint64_t))(v68 + 8))(v24, v2);
LABEL_11:
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v11, (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
    goto LABEL_12;
  }
  v40 = v68;
  v41 = v62;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v68 + 32))(v62, v35, v2);
  lazy protocol witness table accessor for type UUID and conformance UUID();
  v59 = dispatch thunk of static Equatable.== infix(_:_:)();
  v42 = *(void (**)(_BYTE *, uint64_t))(v40 + 8);
  v42(v41, v2);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v27, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v29, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  v42(v24, v2);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v11, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  if ((v59 & 1) != 0)
    return;
LABEL_12:
  v37 = v65;
  outlined init with copy of FeatureEligibility?(v66, (uint64_t)v65, &demangling cache variable for type metadata for Participant?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v37, 1, v30) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v37, &demangling cache variable for type metadata for Participant?);
    v38 = v63;
    __swift_storeEnumTagSinglePayload((uint64_t)v63, 1, 1, v2);
    v39 = v68;
  }
  else
  {
    v39 = v68;
    v38 = v63;
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v68 + 16))(v63, &v37[*(int *)(v30 + 20)], v2);
    outlined destroy of AccountUpdateNotice((uint64_t)v37, type metadata accessor for Participant);
    __swift_storeEnumTagSinglePayload((uint64_t)v38, 0, 1, v2);
    if (__swift_getEnumTagSinglePayload((uint64_t)v38, 1, v2) != 1)
    {
      v43 = v61;
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v39 + 32))(v61, v38, v2);
      ParticipantGridViewController.gridView.getter();
      if (v44)
      {
        v45 = v44;
        type metadata accessor for ParticipantView();
        v46 = ParticipantGridView.tile(for:ofAClass:)();
        v48 = v47;

        if (v46)
        {
          ObjectType = swift_getObjectType();
          (*(void (**)(_QWORD, uint64_t, uint64_t))(v48 + 64))(0, ObjectType, v48);

        }
      }
      (*(void (**)(_BYTE *, uint64_t))(v39 + 8))(v43, v2);
      goto LABEL_22;
    }
  }
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v38, (uint64_t *)&demangling cache variable for type metadata for UUID?);
LABEL_22:
  v50 = (uint64_t)v64;
  if (__swift_getEnumTagSinglePayload(v34, 1, v30))
  {
    __swift_storeEnumTagSinglePayload(v50, 1, 1, v2);
LABEL_25:
    v36 = v50;
    goto LABEL_26;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 16))(v50, v34 + *(int *)(v30 + 20), v2);
  __swift_storeEnumTagSinglePayload(v50, 0, 1, v2);
  if (__swift_getEnumTagSinglePayload(v50, 1, v2) == 1)
    goto LABEL_25;
  v51 = v60;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v39 + 32))(v60, v50, v2);
  ParticipantGridViewController.gridView.getter();
  if (v52)
  {
    v53 = v52;
    type metadata accessor for ParticipantView();
    v54 = ParticipantGridView.tile(for:ofAClass:)();
    v56 = v55;

    if (v54)
    {
      v57 = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 64))(1, v57, v56);

    }
  }
  (*(void (**)(_BYTE *, uint64_t))(v39 + 8))(v51, v2);
}

void ParticipantGridViewController.sashedParticipant.getter()
{
  ParticipantGridViewController.focusedParticipant.getter(&OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_sashedParticipant);
}

void ParticipantGridViewController.focusedParticipant.getter(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v1 + *a1;
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_124_2(v2, v3, &demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_43_1();
}

void ParticipantGridViewController.fullScreenFocusedParticipant.getter()
{
  ParticipantGridViewController.focusedParticipant.getter(&OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_fullScreenFocusedParticipant);
}

void key path getter for ParticipantGridViewController.focusedParticipant : ParticipantGridViewController(_QWORD *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *a1 + *a4;
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_124_2(v4, v5, &demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_43_1();
}

void key path setter for ParticipantGridViewController.focusedParticipant : ParticipantGridViewController(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, void (*a6)(uint64_t))
{
  uint64_t v6;
  uint64_t v10;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_0_7();
  OUTLINED_FUNCTION_10_73(a1, v6);
  ParticipantGridViewController.focusedParticipant.setter(v6, a5, a6);
  OUTLINED_FUNCTION_91();
}

void ParticipantGridViewController.focusedParticipant.setter(uint64_t a1, _QWORD *a2, void (*a3)(uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_0_7();
  v9 = v3 + *a2;
  OUTLINED_FUNCTION_1();
  outlined init with copy of FeatureEligibility?(v9, v4, &demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_2_0();
  outlined assign with copy of Participant?(a1, v9);
  swift_endAccess();
  a3(v4);
  OUTLINED_FUNCTION_25_0(a1);
  OUTLINED_FUNCTION_25_0(v4);
  OUTLINED_FUNCTION_91();
}

void ParticipantGridViewController.fullScreenFocusedParticipant.didset(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t ObjectType;
  _BYTE v22[24];

  v3 = type metadata accessor for Participant(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = &v22[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = &v22[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v7);
  v11 = &v22[-v10];
  v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Participant?, Participant?));
  MEMORY[0x1E0C80A78](v12);
  v14 = &v22[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = v1 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_fullScreenFocusedParticipant;
  swift_beginAccess();
  v16 = (uint64_t)&v14[*(int *)(v12 + 48)];
  outlined init with copy of FeatureEligibility?(a1, (uint64_t)v14, &demangling cache variable for type metadata for Participant?);
  outlined init with copy of FeatureEligibility?(v15, v16, &demangling cache variable for type metadata for Participant?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v3) == 1)
  {
    if (__swift_getEnumTagSinglePayload(v16, 1, v3) == 1)
      goto LABEL_10;
  }
  else
  {
    outlined init with copy of FeatureEligibility?((uint64_t)v14, (uint64_t)v11, &demangling cache variable for type metadata for Participant?);
    if (__swift_getEnumTagSinglePayload(v16, 1, v3) != 1)
    {
      outlined init with take of StagedCollaboration(v16, (uint64_t)v5, type metadata accessor for Participant);
      static Participant.== infix(_:_:)();
      v18 = v17;
      outlined destroy of AccountUpdateNotice((uint64_t)v5, type metadata accessor for Participant);
      outlined destroy of AccountUpdateNotice((uint64_t)v11, type metadata accessor for Participant);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v14, &demangling cache variable for type metadata for Participant?);
      if ((v18 & 1) != 0)
        return;
      goto LABEL_8;
    }
    outlined destroy of AccountUpdateNotice((uint64_t)v11, type metadata accessor for Participant);
  }
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v14, &demangling cache variable for type metadata for (Participant?, Participant?));
LABEL_8:
  v19 = v1 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participantGridViewControllerDelegate;
  swift_beginAccess();
  if (!MEMORY[0x1C3B752C0](v19))
    return;
  v20 = *(_QWORD *)(v19 + 8);
  ObjectType = swift_getObjectType();
  outlined init with copy of FeatureEligibility?(v15, (uint64_t)v9, &demangling cache variable for type metadata for Participant?);
  (*(void (**)(uint64_t, uint64_t, _BYTE *, uint64_t, uint64_t))(v20 + 48))(v1, a1, v9, ObjectType, v20);
  swift_unknownObjectRelease();
  v14 = v9;
LABEL_10:
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v14, &demangling cache variable for type metadata for Participant?);
}

void ParticipantGridViewController.participantsViewControllerDelegate.getter()
{
  ParticipantGridViewController.participantsViewControllerDelegate.getter();
}

{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_26();
}

void ParticipantGridViewController.participantsViewControllerDelegate.setter(uint64_t a1, uint64_t a2)
{
  ParticipantGridViewController.participantsViewControllerDelegate.setter(a1, a2, &OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participantsViewControllerDelegate);
}

void ParticipantGridViewController.participantsViewControllerDelegate.modify()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2 = OUTLINED_FUNCTION_45();
  *v0 = v2;
  v3 = OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participantsViewControllerDelegate;
  v2[5] = v1;
  v2[6] = v3;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_26();
}

void sub_1BD2520CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 8);
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = v3;
  OUTLINED_FUNCTION_18();
}

void key path getter for ParticipantGridViewController.participantsViewControllerDelegate : ParticipantGridViewController(_QWORD *a1@<X0>, _QWORD *a2@<X3>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *a1 + *a2;
  OUTLINED_FUNCTION_1();
  v5 = MEMORY[0x1C3B752C0](v4);
  v6 = *(_QWORD *)(v4 + 8);
  *a3 = v5;
  a3[1] = v6;
  OUTLINED_FUNCTION_43_1();
}

void key path setter for ParticipantGridViewController.participantsViewControllerDelegate : ParticipantGridViewController(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  uint64_t v6;

  v5 = *(_QWORD *)(a1 + 8);
  v6 = *a2 + *a5;
  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v6 + 8) = v5;
  swift_unknownObjectWeakAssign();
  OUTLINED_FUNCTION_9_0();
}

void ParticipantGridViewController.participantGridViewControllerDelegate.getter()
{
  ParticipantGridViewController.participantsViewControllerDelegate.getter();
}

void ParticipantGridViewController.participantGridViewControllerDelegate.setter(uint64_t a1, uint64_t a2)
{
  ParticipantGridViewController.participantsViewControllerDelegate.setter(a1, a2, &OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participantGridViewControllerDelegate);
}

void ParticipantGridViewController.participantsViewControllerDelegate.setter(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v5;

  v5 = v3 + *a3;
  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v5 + 8) = a2;
  OUTLINED_FUNCTION_137_4();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_9_0();
}

void ParticipantGridViewController.participantGridViewControllerDelegate.modify()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2 = OUTLINED_FUNCTION_45();
  *v0 = v2;
  v3 = OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participantGridViewControllerDelegate;
  v2[5] = v1;
  v2[6] = v3;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_26();
}

void sub_1BD252260(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 8);
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = v3;
  OUTLINED_FUNCTION_18();
}

void ParticipantGridViewController.__allocating_init(participants:layoutStyle:isLocalMemberAuthorizedToChangeGroupMembership:captionsLayoutState:)()
{
  objc_class *v0;
  id v1;

  v1 = objc_allocWithZone(v0);
  ParticipantGridViewController.init(participants:layoutStyle:isLocalMemberAuthorizedToChangeGroupMembership:captionsLayoutState:)();
}

void ParticipantGridViewController.init(participants:layoutStyle:isLocalMemberAuthorizedToChangeGroupMembership:captionsLayoutState:)()
{
  char *v0;
  char *v1;
  unsigned __int8 *v2;
  unsigned __int8 *v3;
  char v4;
  char v5;
  unsigned __int8 *v6;
  unsigned __int8 *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int v16;
  uint64_t v17;
  void *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  objc_class *v31;
  char v32;
  char v33;
  Swift::Int v34;
  char *v35;
  int v36;
  int v37;
  uint64_t ObjectType;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  objc_super v42;
  char v43;
  uint64_t v44;

  OUTLINED_FUNCTION_93();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  ObjectType = swift_getObjectType();
  v10 = OUTLINED_FUNCTION_14_2();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_5_27();
  v41 = v12;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v35 - v14;
  v16 = *v7;
  v36 = *v3;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participantsBeforeFocus] = 0;
  v17 = OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_forceAudioPriorityButton;
  v18 = (void *)objc_opt_self();
  v19 = v1;
  *(_QWORD *)&v1[v17] = objc_msgSend(v18, sel_buttonWithType_, 1);
  v20 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v19[OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_nonFullScreenConstraints] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v19[OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_fullScreenConstraints] = v20;
  OUTLINED_FUNCTION_20_55((uint64_t)&v19[OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_focusedParticipant]);
  OUTLINED_FUNCTION_20_55((uint64_t)&v19[OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_sashedParticipant]);
  OUTLINED_FUNCTION_20_55((uint64_t)&v19[OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_selectedParticipant]);
  OUTLINED_FUNCTION_60_2();
  v40 = v10;
  __swift_storeEnumTagSinglePayload(v21, v22, v23, v10);
  OUTLINED_FUNCTION_40_4((uint64_t)&v19[OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participantsViewControllerDelegate]);
  OUTLINED_FUNCTION_40_4((uint64_t)&v19[OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participantGridViewControllerDelegate]);
  v37 = v16;
  v19[OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_layoutStyle] = v16;
  v19[OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_isLocalMemberAuthorizedToChangeGroupMembership] = v5;
  v44 = v20;
  v39 = *(_QWORD *)(v9 + 16);
  if (v39)
  {
    v35 = v19;
    v24 = 0;
    v25 = MEMORY[0x1E0DEE9D8];
    while (v24 < *(_QWORD *)(v9 + 16))
    {
      v26 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
      v27 = *(_QWORD *)(v11 + 72);
      outlined init with copy of ConversationControlsAppLaunchButtonType(v9 + v26 + v27 * v24, (uint64_t)v15, type metadata accessor for Participant);
      if (*(_QWORD *)&v15[*(int *)(v40 + 28)])
      {
        v28 = v9;
        OUTLINED_FUNCTION_144_2((uint64_t)v15, v41);
        if ((OUTLINED_FUNCTION_83_8() & 1) == 0)
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(_QWORD *)(v25 + 16) + 1, 1);
        v25 = v44;
        v30 = *(_QWORD *)(v44 + 16);
        v29 = *(_QWORD *)(v44 + 24);
        if (v30 >= v29 >> 1)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v29 > 1, v30 + 1, 1);
          v25 = v44;
        }
        *(_QWORD *)(v25 + 16) = v30 + 1;
        OUTLINED_FUNCTION_144_2(v41, v25 + v26 + v30 * v27);
        v9 = v28;
      }
      else
      {
        outlined destroy of AccountUpdateNotice((uint64_t)v15, type metadata accessor for Participant);
      }
      if (v39 == ++v24)
      {
        v20 = v44;
        v31 = (objc_class *)ObjectType;
        v19 = v35;
        goto LABEL_14;
      }
    }
    __break(1u);
  }
  else
  {
    v31 = (objc_class *)ObjectType;
LABEL_14:
    v33 = v36;
    v32 = v37;
    OUTLINED_FUNCTION_2_1();
    LOBYTE(v44) = v32;
    v43 = v33;
    v34 = MultiwayViewController.LayoutStyle.maximumParticipantCount(portraitAspect:mediaPipIsVisible:captionsLayoutState:)(0, 0, (ConversationKit::CaptionsLayoutState_optional)&v43);
    specialized Collection.prefix(_:)(v34, v20);
    *(_QWORD *)&v19[OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participants] = specialized Array.init<A>(_:)();

    v42.receiver = v19;
    v42.super_class = v31;
    objc_msgSendSuper2(&v42, sel_initWithNibName_bundle_, 0, 0);
    OUTLINED_FUNCTION_52_1();
  }
}

void ParticipantGridViewController.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;

  objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  OUTLINED_FUNCTION_0();
}

void ParticipantGridViewController.init(coder:)()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participantsBeforeFocus] = 0;
  v1 = OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_forceAudioPriorityButton;
  *(_QWORD *)&v0[v1] = objc_msgSend((id)objc_opt_self(), sel_buttonWithType_, 1);
  v2 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_nonFullScreenConstraints] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_fullScreenConstraints] = v2;
  v3 = (uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_focusedParticipant];
  OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_8_2(v3);
  OUTLINED_FUNCTION_8_2((uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_sashedParticipant]);
  OUTLINED_FUNCTION_8_2((uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_selectedParticipant]);
  OUTLINED_FUNCTION_8_2((uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_fullScreenFocusedParticipant]);
  OUTLINED_FUNCTION_40_4((uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participantsViewControllerDelegate]);
  OUTLINED_FUNCTION_40_4((uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participantGridViewControllerDelegate]);

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

Swift::Void __swiftcall ParticipantGridViewController.loadView()()
{
  void *v0;
  id v1;

  v1 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ParticipantGridView(0)), sel_init);
  objc_msgSend(v0, sel_setView_, v1);

}

Swift::Void __swiftcall ParticipantGridViewController.viewDidLoad()()
{
  _BYTE *v0;
  uint64_t v1;
  _BYTE *v2;
  objc_class *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  char v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  void *v19;
  id v20;
  id v21;
  void *v22;
  uint64_t v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  uint64_t v36;
  objc_super v37;

  OUTLINED_FUNCTION_96();
  v2 = v0;
  v3 = (objc_class *)OUTLINED_FUNCTION_15_6();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_11_2();
  v37.receiver = v0;
  v37.super_class = v3;
  objc_msgSendSuper2(&v37, sel_viewDidLoad);
  ParticipantGridViewController.gridView.getter();
  if (!v9)
    goto LABEL_15;
  v10 = v9;
  v11 = &v9[OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_delegate];
  OUTLINED_FUNCTION_2_0();
  *((_QWORD *)v11 + 1) = &protocol witness table for ParticipantGridViewController;
  OUTLINED_FUNCTION_137_4();
  v12 = v2[OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_isLocalMemberAuthorizedToChangeGroupMembership];
  v13 = &v10[OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_isLocalMemberAuthorizedToChangeGroupMembership];
  OUTLINED_FUNCTION_2_0();
  *v13 = v12;
  OUTLINED_FUNCTION_1();
  v14 = swift_bridgeObjectRetain();
  ParticipantGridView.setParticipants(_:)((Swift::OpaquePointer)v14);
  OUTLINED_FUNCTION_21_0();
  v15 = (uint64_t)&v2[OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_fullScreenFocusedParticipant];
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_70_6(v15, v16, &demangling cache variable for type metadata for Participant?);
  v17 = OUTLINED_FUNCTION_69_0((uint64_t)v6, 1, v7);
  if (v18)
  {
    OUTLINED_FUNCTION_30_7(v17, &demangling cache variable for type metadata for Participant?);
  }
  else
  {
    outlined init with take of StagedCollaboration((uint64_t)v6, v1, type metadata accessor for Participant);
    ParticipantGridViewController.fullScreenFocus(on:)();
    outlined destroy of AccountUpdateNotice(v1, type metadata accessor for Participant);
  }
  if (one-time initialization token for shared != -1)
    swift_once();
  if (((*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 128))() & 1) == 0)
  {
LABEL_14:

LABEL_15:
    OUTLINED_FUNCTION_65_1();
    return;
  }
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  static os_log_type_t.default.getter();
  OUTLINED_FUNCTION_132_3();
  os_log(_:dso:log:type:_:)();
  v19 = *(void **)&v2[OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_forceAudioPriorityButton];
  outlined bridged method (mbnnn) of @objc UIButton.setTitle(_:for:)(0x7561206563726F46, 0xEB000000006F6964, 0, v19);
  v20 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
  objc_msgSend(v19, sel_setTintColor_, v20);

  objc_msgSend(v19, sel_addTarget_action_forControlEvents_, v2, sel_forceBumpPriority, 64);
  objc_msgSend(v19, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v21 = OUTLINED_FUNCTION_4_16();
  if (!v21)
  {
    __break(1u);
    goto LABEL_17;
  }
  v22 = v21;
  objc_msgSend(v21, sel_addSubview_, v19);

  v24 = OUTLINED_FUNCTION_25_1(v23, sel_topAnchor);
  v25 = OUTLINED_FUNCTION_4_16();
  if (!v25)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v26 = v25;
  v27 = objc_msgSend(v25, sel_safeAreaLayoutGuide);

  v28 = objc_msgSend(v27, sel_topAnchor);
  v29 = objc_msgSend(v24, sel_constraintEqualToAnchor_constant_, v28, 16.0);

  objc_msgSend(v29, sel_setActive_, 1);
  v31 = OUTLINED_FUNCTION_25_1(v30, sel_trailingAnchor);
  v32 = OUTLINED_FUNCTION_4_16();
  if (v32)
  {
    v33 = v32;
    v34 = objc_msgSend(v32, sel_trailingAnchor);

    v35 = objc_msgSend(v31, sel_constraintEqualToAnchor_constant_, v34, -16.0);
    objc_msgSend(v35, sel_setActive_, 1);

    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
}

void ParticipantGridViewController.fullScreenFocus(on:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t (*v57)(uint64_t, uint64_t, uint64_t);
  uint64_t v58;
  int *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t (*v67)(_QWORD);
  uint64_t v68[3];
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  __int128 v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  _BYTE v78[40];
  _QWORD v79[14];
  char v80;

  OUTLINED_FUNCTION_93();
  v4 = v0;
  v6 = v5;
  v7 = OUTLINED_FUNCTION_33_0();
  v70 = *(_QWORD *)(v7 - 8);
  v71 = v7;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_41();
  v74 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParticipantGridView.FullScreenFocusedParticipantInfo?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_77_1();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v11);
  v73 = (uint64_t)v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v13);
  v76 = (uint64_t)v68 - v14;
  OUTLINED_FUNCTION_8_4();
  v16 = MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_154_0(v16, v17, v18, v19, v20, v21, v22, v23, v68[0]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v24);
  OUTLINED_FUNCTION_0_7();
  v25 = OUTLINED_FUNCTION_8_13();
  v26 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_17_8(v27, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v2 = OUTLINED_FUNCTION_7_22();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v26 + 104))(v2, *MEMORY[0x1E0DEF740], v25);
  v28 = OUTLINED_FUNCTION_132_2();
  (*(void (**)(uint64_t *, uint64_t))(v26 + 8))(v2, v25);
  if ((v28 & 1) != 0)
  {
    v69 = v3;
    if (one-time initialization token for conversationKit == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v29 = OUTLINED_FUNCTION_16_9();
  v72 = xmmword_1BD6441D0;
  *(_OWORD *)(v29 + 16) = xmmword_1BD6441D0;
  v30 = OUTLINED_FUNCTION_116_3();
  outlined init with copy of ConversationControlsAppLaunchButtonType(v30, v31, type metadata accessor for Participant);
  v32 = OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_51_26(v1);
  specialized >> prefix<A>(_:)(v1);
  v33 = v6;
  v35 = v34;
  v37 = v36;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v1, &demangling cache variable for type metadata for Participant?);
  *(_QWORD *)(v29 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v29 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v29 + 32) = v35;
  *(_QWORD *)(v29 + 40) = v37;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  OUTLINED_FUNCTION_53();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Participant>);
  v38 = OUTLINED_FUNCTION_62_19();
  *(_OWORD *)(v38 + 16) = v72;
  outlined init with copy of ConversationControlsAppLaunchButtonType(v33, v38 + v29, type metadata accessor for Participant);
  v39 = (uint64_t *)(v4 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participants);
  OUTLINED_FUNCTION_2_0();
  *v39 = v38;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_60_2();
  __swift_storeEnumTagSinglePayload(v40, v41, v42, v32);
  ParticipantGridViewController.select(_:forFocusing:)();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v1, &demangling cache variable for type metadata for Participant?);
  ParticipantGridViewController.gridView.getter();
  if (v43)
  {
    *(_QWORD *)&v72 = v43;
    v44 = *v39;
    v45 = 1;
    OUTLINED_FUNCTION_60_2();
    __swift_storeEnumTagSinglePayload(v46, v47, v48, v71);
    v49 = v4 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_focusedParticipant;
    OUTLINED_FUNCTION_1();
    v50 = OUTLINED_FUNCTION_77_2(v49);
    v51 = v70;
    if (!v50)
    {
      OUTLINED_FUNCTION_107_0(v76, v49 + *(int *)(v32 + 20), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v70 + 16));
      v45 = 0;
    }
    OUTLINED_FUNCTION_3_68(v76, v45);
    v52 = v4 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_selectedParticipant;
    OUTLINED_FUNCTION_1();
    if (OUTLINED_FUNCTION_77_2(v52))
    {
      OUTLINED_FUNCTION_3_68(v73, 1);
    }
    else
    {
      v53 = v73;
      OUTLINED_FUNCTION_148_0(v73, v52 + *(int *)(v32 + 20));
      OUTLINED_FUNCTION_3_68(v53, 0);
    }
    OUTLINED_FUNCTION_148_0(v74, v33 + *(int *)(v32 + 20));
    v68[2] = v44;
    swift_bridgeObjectRetain();
    ParticipantGridViewController.aspectRatio(for:in:)(0, (uint64_t)v78);
    v54 = ParticipantGridViewController.orientation(for:in:)(v33, 0);
    Participant.videoInfo.getter();
    OUTLINED_FUNCTION_103_3((uint64_t)v79, v55, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
    v68[1] = v33;
    if (v79[10])
    {
      v56 = v80;
      outlined release of LinearGradient((uint64_t)v79);
    }
    else
    {
      v56 = 0;
    }
    v57 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v51 + 32);
    v58 = v69;
    OUTLINED_FUNCTION_107_0(v69, v74, v57);
    v59 = (int *)OUTLINED_FUNCTION_89_10();
    outlined init with take of AspectRatio((uint64_t)v78, v58 + v59[5]);
    *(_QWORD *)(v58 + v59[6]) = v54;
    *(_BYTE *)(v58 + v59[7]) = v56;
    OUTLINED_FUNCTION_33_33(v58);
    v77 = *(_BYTE *)(v4 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_layoutStyle);
    v61 = v75;
    v60 = v76;
    v62 = v73;
    v63 = (void *)v72;
    ParticipantGridView.transition(to:mostProminentParticipantIdentifier:focusedParticipantIdentifier:selectedParticipantIdentifier:fullScreenFocusedParticipantInfo:layoutStyle:animationStyle:forced:)();

    v64 = swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_92_1(v64, &demangling cache variable for type metadata for ParticipantGridView.FullScreenFocusedParticipantInfo?);
    OUTLINED_FUNCTION_9_42(v62);
    OUTLINED_FUNCTION_9_42(v60);
    OUTLINED_FUNCTION_9_42(v61);
  }
  v65 = OUTLINED_FUNCTION_116_3();
  outlined init with copy of ConversationControlsAppLaunchButtonType(v65, v66, v67);
  OUTLINED_FUNCTION_51_26(v1);
  ParticipantGridViewController.focusedParticipant.setter(v1, &OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_fullScreenFocusedParticipant, ParticipantGridViewController.fullScreenFocusedParticipant.didset);
  OUTLINED_FUNCTION_52_1();
}

Swift::Bool __swiftcall ParticipantGridViewController._canShowWhileLocked()()
{
  return 1;
}

void ParticipantGridViewController.forceBumpPriority()()
{
  id v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;

  v0 = objc_allocWithZone(MEMORY[0x1E0C99EA0]);
  v1 = @nonobjc NSUserDefaults.init(suiteName:)(0xD000000000000019, 0x80000001BD67F410);
  if (v1)
  {
    v4 = v1;
    v2 = (void *)MEMORY[0x1C3B72E00](0xD000000000000019, 0x80000001BD67F480);
    objc_msgSend(v4, sel_setBool_forKey_, 1, v2);

    v3 = (void *)MEMORY[0x1C3B72E00](0xD000000000000017, 0x80000001BD67F4A0);
    objc_msgSend(v4, sel_setInteger_forKey_, 255, v3);

    objc_msgSend(v4, sel_synchronize);
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();

  }
  else
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.error.getter();
    os_log(_:dso:log:type:_:)();
  }
}

void ParticipantGridViewController.select(_:forFocusing:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  char v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  OUTLINED_FUNCTION_93();
  v59 = v1;
  v53 = v5;
  v56 = v6;
  v7 = OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v8);
  v55 = (uint64_t)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_18_0();
  v54 = v11;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_62();
  v52 = v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Participant?, Participant?));
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_30_6();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_5_27();
  v58 = v17;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v18);
  OUTLINED_FUNCTION_72_1();
  MEMORY[0x1E0C80A78](v19);
  OUTLINED_FUNCTION_18_0();
  v57 = v20;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v21);
  OUTLINED_FUNCTION_66_17();
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v52 - v23;
  v25 = OUTLINED_FUNCTION_8_13();
  v26 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_17_8(v27, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v2 = OUTLINED_FUNCTION_7_22();
  OUTLINED_FUNCTION_55_24(*MEMORY[0x1E0DEF740], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 104));
  v28 = OUTLINED_FUNCTION_83_12();
  OUTLINED_FUNCTION_54_27(*(uint64_t (**)(uint64_t, uint64_t))(v26 + 8));
  if ((v28 & 1) == 0)
  {
    __break(1u);
    return;
  }
  v29 = v59 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_selectedParticipant;
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_10_73(v29, (uint64_t)v24);
  v30 = v0 + *(int *)(v14 + 48);
  OUTLINED_FUNCTION_10_73((uint64_t)v24, v0);
  v31 = v56;
  OUTLINED_FUNCTION_10_73(v56, v30);
  OUTLINED_FUNCTION_69_0(v0, 1, v7);
  if (v35)
  {
    v33 = OUTLINED_FUNCTION_69_0(v30, 1, v7);
    if (v35)
    {
      OUTLINED_FUNCTION_96_3(v33, &demangling cache variable for type metadata for Participant?);
      goto LABEL_12;
    }
LABEL_10:
    OUTLINED_FUNCTION_96_3(v33, &demangling cache variable for type metadata for (Participant?, Participant?));
LABEL_14:
    v40 = v57;
    OUTLINED_FUNCTION_124_2(v31, v34, &demangling cache variable for type metadata for Participant?);
    goto LABEL_15;
  }
  OUTLINED_FUNCTION_129_2(v0, v32, &demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_69_0(v30, 1, v7);
  if (v35)
  {
    outlined destroy of AccountUpdateNotice(v3, type metadata accessor for Participant);
    goto LABEL_10;
  }
  v36 = v52;
  outlined init with take of StagedCollaboration(v30, v52, type metadata accessor for Participant);
  OUTLINED_FUNCTION_153_1();
  static Participant.== infix(_:_:)();
  v38 = v37;
  outlined destroy of AccountUpdateNotice(v36, type metadata accessor for Participant);
  outlined destroy of AccountUpdateNotice(v3, type metadata accessor for Participant);
  OUTLINED_FUNCTION_96_3(v39, &demangling cache variable for type metadata for Participant?);
  if ((v38 & 1) == 0)
    goto LABEL_14;
LABEL_12:
  if ((v53 & 1) != 0)
    goto LABEL_14;
  v40 = v57;
  OUTLINED_FUNCTION_60_2();
  __swift_storeEnumTagSinglePayload(v41, v42, v43, v7);
LABEL_15:
  OUTLINED_FUNCTION_2_0();
  outlined assign with take of Participant?(v40, v29);
  OUTLINED_FUNCTION_69_11();
  outlined init with copy of FeatureEligibility?((uint64_t)v24, v4, &demangling cache variable for type metadata for Participant?);
  v44 = OUTLINED_FUNCTION_69_0(v4, 1, v7);
  if (v35)
  {
    OUTLINED_FUNCTION_109_0(v44, &demangling cache variable for type metadata for Participant?);
  }
  else
  {
    v45 = v54;
    OUTLINED_FUNCTION_64_5(v4, v54);
    ParticipantGridViewController.update(participant:broadcastingState:)();
    outlined destroy of AccountUpdateNotice(v45, type metadata accessor for Participant);
  }
  v46 = v29;
  v47 = v58;
  outlined init with copy of FeatureEligibility?(v46, v58, &demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_69_0(v47, 1, v7);
  if (v35)
  {
    OUTLINED_FUNCTION_25_0((uint64_t)v24);
    OUTLINED_FUNCTION_25_0(v47);
  }
  else
  {
    v48 = v47;
    v49 = v55;
    OUTLINED_FUNCTION_64_5(v48, v55);
    ParticipantGridViewController.update(participant:broadcastingState:)();
    ParticipantGridViewController.gridView.getter();
    v51 = (void *)v50;
    OUTLINED_FUNCTION_96_6(v50, &demangling cache variable for type metadata for Participant?);

    outlined destroy of AccountUpdateNotice(v49, type metadata accessor for Participant);
  }
  OUTLINED_FUNCTION_52_1();
}

void ParticipantGridViewController.update(participant:broadcastingState:)()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (**v10)(uint64_t *, _QWORD, unint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (**v22)(uint64_t *, _QWORD, unint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  _BYTE *v28;
  unint64_t v29;
  void (**v30)(uint64_t *, _QWORD, unint64_t);
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  char v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  void (**v52)(uint64_t *, _QWORD, unint64_t);
  char v53;
  uint64_t v54;
  void (*v55)(void (**)(uint64_t *, _QWORD, unint64_t), uint64_t);
  char v56;
  char v57;
  uint64_t v58;
  char v59;
  int v60;
  uint64_t v61;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t (*v75)(uint64_t);
  uint64_t v76;
  uint64_t v77;
  void *v78;
  char v79;
  void (*v80)(void *, uint64_t);
  uint64_t v81;
  void *v82;
  void *v83;
  char v84;
  _BYTE v85[12];
  int v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void (**v93)(uint64_t *, _QWORD, unint64_t);
  void (**v94)(uint64_t *, _QWORD, unint64_t);
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;

  OUTLINED_FUNCTION_93();
  v2 = v0;
  v4 = v3;
  v5 = OUTLINED_FUNCTION_15_6();
  v103 = OUTLINED_FUNCTION_14_2();
  v95 = *(_QWORD *)(v103 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_41();
  v96 = v7;
  v8 = OUTLINED_FUNCTION_33_0();
  v101 = *(_QWORD *)(v8 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_41();
  v93 = v10;
  v100 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_5_27();
  v98 = v12;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_62();
  v102 = v14;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_5_27();
  v92 = v16;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_18_0();
  v97 = v18;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v19);
  OUTLINED_FUNCTION_18_0();
  v99 = v20;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v21);
  OUTLINED_FUNCTION_18_0();
  v94 = v22;
  OUTLINED_FUNCTION_8_4();
  v24 = MEMORY[0x1E0C80A78](v23);
  v26 = &v85[-v25];
  MEMORY[0x1E0C80A78](v24);
  v28 = &v85[-v27];
  v29 = OUTLINED_FUNCTION_8_13();
  v30 = *(void (***)(uint64_t *, _QWORD, unint64_t))(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_17_8(v31, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v1 = OUTLINED_FUNCTION_7_22();
  v30[13](v1, *MEMORY[0x1E0DEF740], v29);
  v32 = OUTLINED_FUNCTION_132_2();
  ((void (*)(uint64_t *, unint64_t))v30[1])(v1, v29);
  if ((v32 & 1) == 0)
  {
    __break(1u);
LABEL_43:
    v61 = specialized _ArrayBuffer._consumeAndCreateNew()();
    *v1 = v61;
    goto LABEL_22;
  }
  v91 = v5;
  v1 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participants);
  v33 = OUTLINED_FUNCTION_1();
  v34 = v2;
  v35 = *v1;
  MEMORY[0x1E0C80A78](v33);
  *(_QWORD *)&v85[-16] = v4;
  swift_bridgeObjectRetain();
  specialized Collection.firstIndex(where:)((uint64_t)partial apply for closure #1 in ParticipantGridViewController.update(participant:broadcastingState:), (uint64_t)&v85[-32], v35);
  v37 = v36;
  v39 = v38;
  swift_bridgeObjectRelease();
  if ((v39 & 1) != 0)
  {
LABEL_41:
    OUTLINED_FUNCTION_52_1();
    return;
  }
  v87 = v37;
  v40 = v103;
  v41 = *(int *)(v103 + 20);
  v89 = v4;
  v42 = v4 + v41;
  v43 = *(_QWORD *)(v101 + 16);
  v90 = v42;
  OUTLINED_FUNCTION_108_3((uint64_t)v28, v42);
  v44 = 1;
  OUTLINED_FUNCTION_101_9((uint64_t)v28);
  v45 = v34 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_selectedParticipant;
  OUTLINED_FUNCTION_1();
  if (!__swift_getEnumTagSinglePayload(v45, 1, v40))
  {
    OUTLINED_FUNCTION_108_3((uint64_t)v26, v45 + *(int *)(v103 + 20));
    v44 = 0;
  }
  v88 = v43;
  OUTLINED_FUNCTION_128_3((uint64_t)v26, v44);
  v46 = v102;
  v48 = v102 + v47;
  v30 = (void (**)(uint64_t *, _QWORD, unint64_t))&demangling cache variable for type metadata for UUID?;
  outlined init with copy of FeatureEligibility?((uint64_t)v28, v102, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  outlined init with copy of FeatureEligibility?((uint64_t)v26, v48, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_69_0(v46, 1, v8);
  v2 = v34;
  if (v53)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v26, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v28, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    OUTLINED_FUNCTION_69_0(v48, 1, v8);
    if (v53)
      v50 = -1;
    else
      v50 = 0;
    v86 = v50;
    OUTLINED_FUNCTION_162_1();
    v29 = v87;
  }
  else
  {
    v51 = v46;
    v52 = v94;
    OUTLINED_FUNCTION_70_6(v51, v49, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    OUTLINED_FUNCTION_69_0(v48, 1, v8);
    v29 = v87;
    if (v53)
    {
      OUTLINED_FUNCTION_9_42((uint64_t)v26);
      OUTLINED_FUNCTION_9_42((uint64_t)v28);
      (*(void (**)(void (**)(uint64_t *, _QWORD, unint64_t), uint64_t))(v101 + 8))(v52, v8);
      v86 = 0;
    }
    else
    {
      v54 = v101;
      v30 = v93;
      (*(void (**)(void *, uint64_t, uint64_t))(v101 + 32))(v93, v48, v8);
      lazy protocol witness table accessor for type UUID and conformance UUID();
      v86 = OUTLINED_FUNCTION_102_7();
      v55 = *(void (**)(void (**)(uint64_t *, _QWORD, unint64_t), uint64_t))(v54 + 8);
      v55(v30, v8);
      OUTLINED_FUNCTION_9_42((uint64_t)v26);
      OUTLINED_FUNCTION_9_42((uint64_t)v28);
      v55(v94, v8);
      v2 = v34;
    }
    OUTLINED_FUNCTION_162_1();
  }
  OUTLINED_FUNCTION_9_42(v102);
  v5 = v89;
  Participant.screenState.getter();
  v57 = v56;
  v58 = v96;
  outlined init with copy of ConversationControlsAppLaunchButtonType(v5, v96, type metadata accessor for Participant);
  if (v57 == 2)
  {
    LODWORD(v102) = 0;
  }
  else
  {
    Participant.isReceivingScreenFrames.getter();
    if ((v59 & 1) != 0)
      v60 = 256;
    else
      v60 = 0;
    LODWORD(v102) = v60;
  }
  outlined destroy of AccountUpdateNotice(v58, type metadata accessor for Participant);
  OUTLINED_FUNCTION_2_0();
  v61 = *v1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v1 = v61;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    goto LABEL_43;
LABEL_22:
  v63 = v98;
  if ((v29 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v29 < *(_QWORD *)(v61 + 16))
  {
    OUTLINED_FUNCTION_37_3();
    outlined assign with copy of Participant(v5, v61 + v64 + *(_QWORD *)(v65 + 72) * v29);
    swift_endAccess();
    v66 = v99;
    OUTLINED_FUNCTION_108_3(v99, v90);
    v67 = 1;
    OUTLINED_FUNCTION_101_9(v66);
    v68 = v2 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_fullScreenFocusedParticipant;
    OUTLINED_FUNCTION_1();
    v69 = v103;
    if (!__swift_getEnumTagSinglePayload(v68, 1, v103))
    {
      OUTLINED_FUNCTION_108_3((uint64_t)v30, v68 + *(int *)(v69 + 20));
      v67 = 0;
    }
    OUTLINED_FUNCTION_128_3((uint64_t)v30, v67);
    v71 = v63 + v70;
    OUTLINED_FUNCTION_114_8();
    outlined init with copy of FeatureEligibility?((uint64_t)v30, v71, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    OUTLINED_FUNCTION_69_0(v63, 1, v8);
    if (v53)
    {
      OUTLINED_FUNCTION_9_42((uint64_t)v30);
      OUTLINED_FUNCTION_9_42(v66);
      v72 = OUTLINED_FUNCTION_69_0(v71, 1, v8);
      if (v53)
      {
        OUTLINED_FUNCTION_96_6(v72, (uint64_t *)&demangling cache variable for type metadata for UUID?);
LABEL_36:
        ParticipantGridViewController.updateFullScreenInfo(with:)();
        goto LABEL_37;
      }
    }
    else
    {
      outlined init with copy of FeatureEligibility?(v63, v92, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      OUTLINED_FUNCTION_69_0(v71, 1, v8);
      if (!v73)
      {
        v76 = v101;
        v77 = (uint64_t)v30;
        v78 = v93;
        (*(void (**)(void *, uint64_t, uint64_t))(v101 + 32))(v93, v71, v8);
        lazy protocol witness table accessor for type UUID and conformance UUID();
        v79 = OUTLINED_FUNCTION_102_7();
        v80 = *(void (**)(void *, uint64_t))(v76 + 8);
        v80(v78, v8);
        OUTLINED_FUNCTION_9_42(v77);
        OUTLINED_FUNCTION_9_42(v99);
        v81 = OUTLINED_FUNCTION_116_3();
        ((void (*)(uint64_t))v80)(v81);
        OUTLINED_FUNCTION_9_42(v63);
        if ((v79 & 1) == 0)
          goto LABEL_37;
        goto LABEL_36;
      }
      OUTLINED_FUNCTION_25_0((uint64_t)v30);
      OUTLINED_FUNCTION_25_0(v66);
      v74 = OUTLINED_FUNCTION_116_3();
      v72 = v75(v74);
    }
    OUTLINED_FUNCTION_96_6(v72, (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
LABEL_37:
    ParticipantGridViewController.gridView.getter();
    if (v82)
    {
      v83 = v82;
      ParticipantGridViewController.hasOtherInvitedParticipants.getter();
      ParticipantGridView.updateParticipantView(for:with:hasOtherInvitedParticipants:)();

    }
    Participant.isReceivingVideoFrames.getter();
    if ((v84 & 1) != 0)
    {
      OUTLINED_FUNCTION_1();
      OUTLINED_FUNCTION_26();
    }
    goto LABEL_41;
  }
  __break(1u);
}

void ParticipantGridViewController.select(_:)()
{
  ParticipantGridViewController.select(_:forFocusing:)();
}

uint64_t ParticipantGridViewController.isSelected(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t);
  uint64_t v26[14];
  uint64_t v27;
  uint64_t v28;

  OUTLINED_FUNCTION_93();
  v27 = v3;
  v28 = v4;
  v26[0] = v5;
  v6 = OUTLINED_FUNCTION_33_0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_4_1();
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_30_6();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v26 - v14;
  v16 = v1 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_selectedParticipant;
  OUTLINED_FUNCTION_1();
  v17 = OUTLINED_FUNCTION_14_2();
  v18 = 1;
  if (!__swift_getEnumTagSinglePayload(v16, 1, v17))
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v15, v16 + *(int *)(v17 + 20), v6);
    v18 = 0;
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v15, v18, 1, v6);
  v19 = v0 + *(int *)(v8 + 48);
  OUTLINED_FUNCTION_145_1((uint64_t)v15, v0);
  OUTLINED_FUNCTION_145_1(v26[0], v19);
  OUTLINED_FUNCTION_69_0(v0, 1, v6);
  if (v22)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v15, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    OUTLINED_FUNCTION_69_0(v19, 1, v6);
    if (v22)
      v21 = -1;
    else
      v21 = 0;
  }
  else
  {
    OUTLINED_FUNCTION_70_6(v0, v20, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    v23 = OUTLINED_FUNCTION_69_0(v19, 1, v6);
    if (v22)
    {
      OUTLINED_FUNCTION_219(v23, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
      v21 = 0;
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v2, v19, v6);
      lazy protocol witness table accessor for type UUID and conformance UUID();
      v21 = dispatch thunk of static Equatable.== infix(_:_:)();
      v24 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
      v24(v2, v6);
      OUTLINED_FUNCTION_90_1((uint64_t)v15);
      v24((uint64_t)v12, v6);
    }
  }
  OUTLINED_FUNCTION_90_1(v0);
  return v21 & 1;
}

void ParticipantGridViewController.aspectRatio(for:in:)(void *a1@<X1>, uint64_t a2@<X8>)
{
  void *v4;
  void *v5;
  id v6;
  char v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  char v12;

  v4 = a1;
  if (a1 || (ParticipantGridViewController.gridView.getter(), (v4 = v5) != 0))
  {
    v6 = a1;
    ParticipantGridView.aspectRatio(for:default:)();
    v7 = v12;

    v9 = v11;
    v8 = v10;
  }
  else
  {
    v8 = 0uLL;
    v7 = 1;
    v9 = 0uLL;
  }
  *(_OWORD *)a2 = v8;
  *(_OWORD *)(a2 + 16) = v9;
  *(_BYTE *)(a2 + 32) = v7;
}

uint64_t ParticipantGridViewController.orientation(for:in:)(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;

  v3 = a2;
  if (!a2)
  {
    ParticipantGridViewController.gridView.getter();
    v3 = v4;
    if (!v4)
      return 1;
  }
  v5 = a2;
  ParticipantGridView.orientation(for:default:)();
  v7 = v6;

  return v7;
}

void ParticipantGridViewController.updateFullScreenInfo(with:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(_QWORD, _QWORD, _QWORD);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t (*v49)(uint64_t, uint64_t, uint64_t);
  char v50;
  void (*v51)(uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  int *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t (*v59)(uint64_t, uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t (*v79)(uint64_t);
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void (*v90)(_QWORD, _QWORD, _QWORD);
  int *v91;
  uint64_t v92;
  uint64_t v93;
  __int128 v94;
  char v95;
  _BYTE v96[40];
  _QWORD v97[14];
  char v98;

  OUTLINED_FUNCTION_93();
  v92 = v0;
  v93 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParticipantGridView.FullScreenFocusedParticipantInfo?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_73_10(v5, v80);
  v91 = (int *)OUTLINED_FUNCTION_89_10();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_41();
  v87 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_41();
  v84 = v9;
  v10 = OUTLINED_FUNCTION_33_0();
  *(_QWORD *)&v94 = *(_QWORD *)(v10 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_5_27();
  v85 = v12;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_62();
  v80 = v14;
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_11_2();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_5_27();
  v82 = v18;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v19);
  OUTLINED_FUNCTION_18_0();
  v81 = v20;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v21);
  OUTLINED_FUNCTION_18_0();
  v88 = v22;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v23);
  OUTLINED_FUNCTION_18_0();
  v89 = v24;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v25);
  OUTLINED_FUNCTION_72_1();
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)&v80 - v27;
  v29 = OUTLINED_FUNCTION_8_13();
  v30 = *(_QWORD *)(v29 - 8);
  v31 = MEMORY[0x1E0C80A78](v29);
  v33 = (uint64_t *)((char *)&v80 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  OUTLINED_FUNCTION_17_8(v31, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v33 = OUTLINED_FUNCTION_7_22();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v30 + 104))(v33, *MEMORY[0x1E0DEF740], v29);
  v34 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v30 + 8))(v33, v29);
  if ((v34 & 1) != 0)
  {
    v35 = v92 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_fullScreenFocusedParticipant;
    OUTLINED_FUNCTION_1();
    v36 = OUTLINED_FUNCTION_14_2();
    if (OUTLINED_FUNCTION_4_40(v35))
    {
      OUTLINED_FUNCTION_3_68((uint64_t)v28, 1);
      v37 = *(void (**)(_QWORD, _QWORD, _QWORD))(v94 + 16);
    }
    else
    {
      v38 = v35 + *(int *)(v36 + 20);
      v37 = *(void (**)(_QWORD, _QWORD, _QWORD))(v94 + 16);
      OUTLINED_FUNCTION_148_0((uint64_t)v28, v38);
      OUTLINED_FUNCTION_3_68((uint64_t)v28, 0);
    }
    v39 = v93 + *(int *)(v36 + 20);
    v90 = v37;
    v37(v2, v39, v10);
    OUTLINED_FUNCTION_3_68(v2, 0);
    v40 = v1 + *(int *)(v15 + 48);
    OUTLINED_FUNCTION_87_0((uint64_t)v28, v1);
    OUTLINED_FUNCTION_87_0(v2, v40);
    OUTLINED_FUNCTION_69_0(v1, 1, v10);
    if (v44)
    {
      v83 = v36;
      OUTLINED_FUNCTION_90_1(v2);
      OUTLINED_FUNCTION_90_1((uint64_t)v28);
      v42 = OUTLINED_FUNCTION_69_0(v40, 1, v10);
      if (v44)
      {
        OUTLINED_FUNCTION_219(v42, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        goto LABEL_15;
      }
    }
    else
    {
      v43 = v89;
      OUTLINED_FUNCTION_129_2(v1, v41, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      OUTLINED_FUNCTION_69_0(v40, 1, v10);
      if (!v44)
      {
        v83 = v36;
        v45 = v94;
        v46 = v80;
        v47 = OUTLINED_FUNCTION_134_1();
        OUTLINED_FUNCTION_107_0(v47, v48, v49);
        lazy protocol witness table accessor for type UUID and conformance UUID();
        v50 = dispatch thunk of static Equatable.== infix(_:_:)();
        v51 = *(void (**)(uint64_t, uint64_t))(v45 + 8);
        v51(v46, v10);
        OUTLINED_FUNCTION_18_18(v2);
        OUTLINED_FUNCTION_18_18((uint64_t)v28);
        v51(v43, v10);
        OUTLINED_FUNCTION_18_18(v1);
        if ((v50 & 1) == 0)
          goto LABEL_27;
LABEL_15:
        v52 = v84;
        outlined init with copy of ConversationControlsAppLaunchButtonType(v93, v84, type metadata accessor for Participant);
        __swift_storeEnumTagSinglePayload(v52, 0, 1, v83);
        v2 = v92;
        ParticipantGridViewController.focusedParticipant.setter(v52, &OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_fullScreenFocusedParticipant, ParticipantGridViewController.fullScreenFocusedParticipant.didset);
        OUTLINED_FUNCTION_84_7(v85, v39);
        ParticipantGridViewController.aspectRatio(for:in:)(0, (uint64_t)v96);
        v53 = OUTLINED_FUNCTION_79_13();
        Participant.videoInfo.getter();
        OUTLINED_FUNCTION_103_3((uint64_t)v97, v54, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
        if (v97[10])
        {
          v55 = v98;
          outlined release of LinearGradient((uint64_t)v97);
        }
        else
        {
          v55 = 0;
        }
        v29 = v86;
        v15 = v87;
        v56 = v91;
        v57 = OUTLINED_FUNCTION_153_1();
        OUTLINED_FUNCTION_107_0(v57, v58, v59);
        outlined init with take of AspectRatio((uint64_t)v96, v15 + v56[5]);
        *(_QWORD *)(v15 + v56[6]) = v53;
        *(_BYTE *)(v15 + v56[7]) = v55;
        if (one-time initialization token for conversationKit == -1)
          goto LABEL_19;
        goto LABEL_29;
      }
      OUTLINED_FUNCTION_9_42(v2);
      OUTLINED_FUNCTION_9_42((uint64_t)v28);
      v42 = (*(uint64_t (**)(uint64_t, uint64_t))(v94 + 8))(v43, v10);
    }
    OUTLINED_FUNCTION_219(v42, (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
    goto LABEL_27;
  }
  __break(1u);
LABEL_29:
  swift_once();
LABEL_19:
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v60 = OUTLINED_FUNCTION_16_9();
  v94 = xmmword_1BD6441D0;
  *(_OWORD *)(v60 + 16) = xmmword_1BD6441D0;
  OUTLINED_FUNCTION_140_4(v15, v61, type metadata accessor for ParticipantGridView.FullScreenFocusedParticipantInfo);
  OUTLINED_FUNCTION_31_43(v29, 0);
  specialized >> prefix<A>(_:)(v29);
  v63 = v62;
  v65 = v64;
  OUTLINED_FUNCTION_92_1(v62, &demangling cache variable for type metadata for ParticipantGridView.FullScreenFocusedParticipantInfo?);
  *(_QWORD *)(v60 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v60 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v60 + 32) = v63;
  *(_QWORD *)(v60 + 40) = v65;
  static os_log_type_t.default.getter();
  OUTLINED_FUNCTION_132_3();
  os_log(_:dso:log:type:_:)();
  OUTLINED_FUNCTION_2_1();
  ParticipantGridViewController.gridView.getter();
  if (v66)
  {
    v67 = v66;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Participant>);
    v68 = v83;
    v69 = OUTLINED_FUNCTION_62_19();
    *(_OWORD *)(v69 + 16) = v94;
    *(_QWORD *)&v94 = v69;
    outlined init with copy of ConversationControlsAppLaunchButtonType(v93, v69 + v63, type metadata accessor for Participant);
    v70 = 1;
    OUTLINED_FUNCTION_3_68(v88, 1);
    v71 = v2 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_focusedParticipant;
    OUTLINED_FUNCTION_1();
    if (!OUTLINED_FUNCTION_4_40(v71))
    {
      OUTLINED_FUNCTION_84_7(v81, v71 + *(int *)(v68 + 20));
      v70 = 0;
    }
    v72 = 1;
    v73 = v81;
    OUTLINED_FUNCTION_3_68(v81, v70);
    v74 = v2 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_selectedParticipant;
    OUTLINED_FUNCTION_1();
    if (!OUTLINED_FUNCTION_4_40(v74))
    {
      OUTLINED_FUNCTION_84_7(v82, v74 + *(int *)(v68 + 20));
      v72 = 0;
    }
    v75 = v82;
    OUTLINED_FUNCTION_3_68(v82, v72);
    outlined init with copy of ConversationControlsAppLaunchButtonType(v15, v29, type metadata accessor for ParticipantGridView.FullScreenFocusedParticipantInfo);
    __swift_storeEnumTagSinglePayload(v29, 0, 1, (uint64_t)v91);
    v95 = *(_BYTE *)(v2 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_layoutStyle);
    v76 = v88;
    OUTLINED_FUNCTION_139_2();

    v77 = OUTLINED_FUNCTION_2_1();
    OUTLINED_FUNCTION_92_1(v77, &demangling cache variable for type metadata for ParticipantGridView.FullScreenFocusedParticipantInfo?);
    OUTLINED_FUNCTION_9_42(v75);
    OUTLINED_FUNCTION_9_42(v73);
    OUTLINED_FUNCTION_9_42(v76);
    v78 = OUTLINED_FUNCTION_153_1();
  }
  else
  {
    v79 = type metadata accessor for ParticipantGridView.FullScreenFocusedParticipantInfo;
    v78 = v15;
  }
  outlined destroy of AccountUpdateNotice(v78, v79);
LABEL_27:
  OUTLINED_FUNCTION_52_1();
}

Swift::Void __swiftcall ParticipantGridViewController.fullScreenDefocus(to:animationStyle:)(Swift::OpaquePointer to, ConversationKit::ParticipantGridView::AnimationStyle animationStyle)
{
  uint64_t v2;
  uint64_t *v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  OUTLINED_FUNCTION_96();
  v5 = v4;
  v7 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_11_2();
  v9 = OUTLINED_FUNCTION_8_13();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_17_8(v11, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v3 = OUTLINED_FUNCTION_7_22();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v10 + 104))(v3, *MEMORY[0x1E0DEF740], v9);
  v12 = OUTLINED_FUNCTION_132_2();
  (*(void (**)(uint64_t *, uint64_t))(v10 + 8))(v3, v9);
  if ((v12 & 1) == 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  if (one-time initialization token for conversationKit != -1)
LABEL_5:
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v13 = OUTLINED_FUNCTION_16_9();
  *(_OWORD *)(v13 + 16) = xmmword_1BD6441D0;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [Participant]);
  v14 = String.init<A>(reflecting:)();
  v16 = v15;
  *(_QWORD *)(v13 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v13 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v13 + 32) = v14;
  *(_QWORD *)(v13 + 40) = v16;
  static os_log_type_t.default.getter();
  OUTLINED_FUNCTION_132_3();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  v17 = OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_77_0(v2, v18, v19, v17);
  ParticipantGridViewController.focusedParticipant.setter(v2, &OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_fullScreenFocusedParticipant, ParticipantGridViewController.fullScreenFocusedParticipant.didset);
  ParticipantGridViewController.update(with:animationStyle:forced:)(v7, v5, 0);
  OUTLINED_FUNCTION_65_1();
}

void ParticipantGridViewController.update(with:animationStyle:forced:)(uint64_t a1, int a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t (*v59)(uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  char v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  int EnumTagSinglePayload;
  char *v78;
  uint64_t v79;
  int v80;
  uint64_t *v81;
  uint64_t v82;
  id v83;
  void *v84;
  uint64_t v85;
  _QWORD *v86;
  unint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  unint64_t v107;
  unint64_t v108;
  uint64_t v109;
  void *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  unint64_t v121;
  unint64_t v122;
  unint64_t v123;
  uint64_t v124;
  char *v125;
  _QWORD *v126;
  uint64_t v127;
  unint64_t v128;
  unint64_t v129;
  uint64_t v130;
  uint64_t v131;
  const void *v132;
  uint64_t v133;
  unsigned __int8 v134;
  uint64_t v135;
  int v136;
  uint64_t v137;
  const void *v138;
  const void *v139;
  uint64_t v140;
  char v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  id v147;
  id v148;
  uint64_t v149;
  char v150;
  uint64_t v151;
  int *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  int v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  id v171;
  char *v172;
  uint64_t v173;
  uint64_t ObjectType;
  uint64_t v175;
  void (*v176)(char *, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v177;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  id v186;
  uint64_t *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  char *v191;
  uint64_t v192;
  char *v193;
  char *v194;
  uint64_t v195;
  char *v196;
  uint64_t v197;
  int v198;
  char *v199;
  char *v200;
  char *v201;
  int v202;
  char *v203;
  char *v204;
  char *v205;
  char *v206;
  uint64_t v207;
  uint64_t v208;
  char *v209;
  uint64_t v210;
  char *v211;
  uint64_t v212;
  char *v213;
  char *v214;
  _QWORD *v215;
  _QWORD *v216;
  char *v217;
  uint64_t v218;
  char *v219;
  char *v220;
  char *v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  _BYTE v229[209];
  char v230;
  _QWORD v231[42];
  _QWORD v232[28];
  uint64_t v233;
  uint64_t v234;

  v198 = a3;
  v202 = a2;
  v208 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  v4 = MEMORY[0x1E0C80A78](v3);
  v201 = (char *)&v182 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v4);
  v200 = (char *)&v182 - v7;
  MEMORY[0x1E0C80A78](v6);
  v199 = (char *)&v182 - v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParticipantGridView.FullScreenFocusedParticipantInfo?);
  v10 = MEMORY[0x1E0C80A78](v9);
  v193 = (char *)&v182 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v207 = (uint64_t)&v182 - v12;
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for CollectionOfOne<Participant>);
  MEMORY[0x1E0C80A78](v13);
  v189 = (uint64_t)&v182 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v226 = type metadata accessor for UUID();
  v224 = *(_QWORD *)(v226 - 8);
  v15 = MEMORY[0x1E0C80A78](v226);
  v196 = (char *)&v182 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v15);
  v214 = (char *)&v182 - v18;
  v19 = MEMORY[0x1E0C80A78](v17);
  v220 = (char *)&v182 - v20;
  MEMORY[0x1E0C80A78](v19);
  v191 = (char *)&v182 - v21;
  v227 = type metadata accessor for Participant.State(0);
  v22 = MEMORY[0x1E0C80A78](v227);
  v223 = (uint64_t)&v182 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x1E0C80A78](v22);
  v211 = (char *)&v182 - v25;
  v26 = MEMORY[0x1E0C80A78](v24);
  v221 = (char *)&v182 - v27;
  v28 = MEMORY[0x1E0C80A78](v26);
  v203 = (char *)&v182 - v29;
  v30 = MEMORY[0x1E0C80A78](v28);
  v204 = (char *)&v182 - v31;
  MEMORY[0x1E0C80A78](v30);
  v225 = (uint64_t)&v182 - v32;
  v228 = type metadata accessor for Participant(0);
  v212 = *(_QWORD *)(v228 - 8);
  v33 = MEMORY[0x1E0C80A78](v228);
  v217 = (char *)&v182 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = MEMORY[0x1E0C80A78](v33);
  v209 = (char *)&v182 - v36;
  v37 = MEMORY[0x1E0C80A78](v35);
  v192 = (uint64_t)&v182 - v38;
  v39 = MEMORY[0x1E0C80A78](v37);
  v188 = (uint64_t)&v182 - v40;
  v41 = MEMORY[0x1E0C80A78](v39);
  v218 = (uint64_t)&v182 - v42;
  v43 = MEMORY[0x1E0C80A78](v41);
  v219 = (char *)&v182 - v44;
  v45 = MEMORY[0x1E0C80A78](v43);
  v222 = (uint64_t)&v182 - v46;
  v47 = MEMORY[0x1E0C80A78](v45);
  v205 = (char *)&v182 - v48;
  v49 = MEMORY[0x1E0C80A78](v47);
  v50 = MEMORY[0x1E0C80A78](v49);
  v194 = (char *)&v182 - v51;
  v52 = MEMORY[0x1E0C80A78](v50);
  v206 = (char *)&v182 - v53;
  MEMORY[0x1E0C80A78](v52);
  v55 = (char *)&v182 - v54;
  v56 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  v57 = MEMORY[0x1E0C80A78](v56);
  v59 = (uint64_t (*)(uint64_t))((char *)&v182 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0));
  v60 = MEMORY[0x1E0C80A78](v57);
  v197 = (uint64_t)&v182 - v61;
  v62 = MEMORY[0x1E0C80A78](v60);
  v195 = (uint64_t)&v182 - v63;
  v64 = MEMORY[0x1E0C80A78](v62);
  v66 = (char *)&v182 - v65;
  MEMORY[0x1E0C80A78](v64);
  v68 = (char *)&v182 - v67;
  v69 = type metadata accessor for DispatchPredicate();
  v70 = *(_QWORD *)(v69 - 8);
  MEMORY[0x1E0C80A78](v69);
  v72 = (uint64_t *)((char *)&v182 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0));
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v72 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v70 + 104))(v72, *MEMORY[0x1E0DEF740], v69);
  v73 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v70 + 8))(v72, v69);
  if ((v73 & 1) == 0)
  {
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
  v74 = v213;
  v75 = (uint64_t)&v213[OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_focusedParticipant];
  swift_beginAccess();
  v210 = v75;
  outlined init with copy of FeatureEligibility?(v75, (uint64_t)v68, &demangling cache variable for type metadata for Participant?);
  v76 = v228;
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v68, 1, v228);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v68, &demangling cache variable for type metadata for Participant?);
  if (EnumTagSinglePayload != 1)
  {
    if (one-time initialization token for conversationKit == -1)
    {
LABEL_9:
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v89 = swift_allocObject();
      *(_OWORD *)(v89 + 16) = xmmword_1BD6441D0;
      outlined init with copy of FeatureEligibility?(v210, (uint64_t)v59, &demangling cache variable for type metadata for Participant?);
      specialized >> prefix<A>(_:)((uint64_t)v59);
      v91 = v90;
      v93 = v92;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v59, &demangling cache variable for type metadata for Participant?);
      *(_QWORD *)(v89 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v89 + 64) = lazy protocol witness table accessor for type String and conformance String();
      *(_QWORD *)(v89 + 32) = v91;
      *(_QWORD *)(v89 + 40) = v93;
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();
LABEL_10:
      swift_bridgeObjectRelease();
      return;
    }
LABEL_72:
    swift_once();
    goto LABEL_9;
  }
  v78 = v74;
  v79 = (uint64_t)&v74[OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_fullScreenFocusedParticipant];
  swift_beginAccess();
  outlined init with copy of FeatureEligibility?(v79, (uint64_t)v66, &demangling cache variable for type metadata for Participant?);
  v80 = __swift_getEnumTagSinglePayload((uint64_t)v66, 1, v76);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v66, &demangling cache variable for type metadata for Participant?);
  if (v80 == 1)
  {
    v81 = (uint64_t *)&v78[OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participants];
    swift_beginAccess();
    v82 = *v81;
    swift_bridgeObjectRetain();
    v83 = ParticipantGridViewController.filterAndTruncate(_:)(v208);
    v187 = v81;
    *v81 = (uint64_t)v83;
    swift_bridgeObjectRelease();
    ParticipantGridViewController.gridView.getter();
    v186 = v84;
    if (v84)
    {
      v183 = v79;
      v85 = *v187;
      v86 = *(_QWORD **)(*v187 + 16);
      v190 = v82;
      v216 = v86;
      if (v86)
      {
        v87 = (*(unsigned __int8 *)(v212 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v212 + 80);
        v215 = (_QWORD *)(v85 + v87);
        v185 = v82 + v87;
        swift_bridgeObjectRetain();
        v184 = MEMORY[0x1E0DEE9D8];
        v59 = type metadata accessor for Participant;
        if (*(_QWORD *)(v85 + 16))
        {
          outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v215, (uint64_t)v55, type metadata accessor for Participant);
          outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v55, v225, type metadata accessor for Participant.State);
          v88 = (char *)&loc_1BD25540C + *((int *)qword_1BD2565F8 + swift_getEnumCaseMultiPayload());
          __asm { BR              X9 }
        }
        __break(1u);
        goto LABEL_71;
      }
      v184 = MEMORY[0x1E0DEE9D8];
      v94 = (uint64_t)v221;
      ParticipantGridView.participantIdentifiers.getter();
      v96 = v95;
      v97 = *v187;
      v98 = *(_QWORD *)(*v187 + 16);
      v99 = MEMORY[0x1E0DEE9D8];
      v100 = v226;
      v101 = v220;
      if (v98)
      {
        v225 = v95;
        v231[0] = MEMORY[0x1E0DEE9D8];
        swift_bridgeObjectRetain();
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, v98, 0);
        v102 = v97 + ((*(unsigned __int8 *)(v212 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v212 + 80));
        v103 = *(_QWORD *)(v212 + 72);
        v104 = v224;
        do
        {
          v105 = v222;
          outlined init with copy of ConversationControlsAppLaunchButtonType(v102, v222, type metadata accessor for Participant);
          (*(void (**)(char *, uint64_t, uint64_t))(v104 + 16))(v101, v105 + *(int *)(v228 + 20), v100);
          outlined destroy of AccountUpdateNotice(v105, type metadata accessor for Participant);
          v99 = v231[0];
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(_QWORD *)(v99 + 16) + 1, 1);
            v99 = v231[0];
          }
          v107 = *(_QWORD *)(v99 + 16);
          v106 = *(_QWORD *)(v99 + 24);
          if (v107 >= v106 >> 1)
          {
            specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v106 > 1, v107 + 1, 1);
            v99 = v231[0];
          }
          *(_QWORD *)(v99 + 16) = v107 + 1;
          v104 = v224;
          v108 = v99
               + ((*(unsigned __int8 *)(v104 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v104 + 80))
               + *(_QWORD *)(v224 + 72) * v107;
          v101 = v220;
          v100 = v226;
          (*(void (**)(unint64_t, char *, uint64_t))(v224 + 32))(v108, v220, v226);
          v231[0] = v99;
          v102 += v103;
          --v98;
        }
        while (v98);
        swift_bridgeObjectRelease();
        v94 = (uint64_t)v221;
        v96 = v225;
      }
      v109 = specialized Array<A>.arrayCloselyMatching(_:)(v99, v96);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v234 = v109;
      v110 = v213;
      v111 = *(_QWORD *)&v213[OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participantsBeforeFocus];
      v112 = v224;
      v113 = (uint64_t)v211;
      if (v111)
      {
        v114 = *(_QWORD *)(v111 + 16);
        v115 = MEMORY[0x1E0DEE9D8];
        if (v114)
        {
          v231[0] = MEMORY[0x1E0DEE9D8];
          swift_bridgeObjectRetain();
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, v114, 0);
          v116 = v111 + ((*(unsigned __int8 *)(v212 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v212 + 80));
          v117 = *(_QWORD *)(v212 + 72);
          v118 = v226;
          v119 = v214;
          do
          {
            v120 = v222;
            outlined init with copy of ConversationControlsAppLaunchButtonType(v116, v222, type metadata accessor for Participant);
            (*(void (**)(char *, uint64_t, uint64_t))(v112 + 16))(v119, v120 + *(int *)(v228 + 20), v118);
            outlined destroy of AccountUpdateNotice(v120, type metadata accessor for Participant);
            v115 = v231[0];
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(_QWORD *)(v115 + 16) + 1, 1);
              v115 = v231[0];
            }
            v122 = *(_QWORD *)(v115 + 16);
            v121 = *(_QWORD *)(v115 + 24);
            if (v122 >= v121 >> 1)
            {
              specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v121 > 1, v122 + 1, 1);
              v115 = v231[0];
            }
            *(_QWORD *)(v115 + 16) = v122 + 1;
            v112 = v224;
            v123 = v115
                 + ((*(unsigned __int8 *)(v112 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v112 + 80))
                 + *(_QWORD *)(v224 + 72) * v122;
            v119 = v214;
            v118 = v226;
            (*(void (**)(unint64_t, char *, uint64_t))(v224 + 32))(v123, v214, v226);
            v231[0] = v115;
            v116 += v117;
            --v114;
          }
          while (v114);
          swift_bridgeObjectRelease();
          v113 = (uint64_t)v211;
          v94 = (uint64_t)v221;
          v110 = v213;
        }
        specialized Array<A>.sortToMatch(_:)(v115);
        swift_bridgeObjectRelease();
        v100 = v226;
      }
      v124 = (uint64_t)v219;
      v125 = v110;
      v126 = (_QWORD *)swift_bridgeObjectRetain();
      v206 = v125;
      v127 = specialized Sequence.compactMap<A>(_:)(v126, v125);
      swift_bridgeObjectRelease();
      v233 = v127;
      v225 = *(_QWORD *)(v127 + 16);
      if (v225)
      {
        v128 = (*(unsigned __int8 *)(v212 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v212 + 80);
        v220 = *(char **)(v212 + 72);
        v215 = &v232[4];
        v216 = &v231[12];
        v214 = &v229[32];
        swift_bridgeObjectRetain();
        v129 = 0;
        v222 = v127;
        while (1)
        {
          outlined init with copy of ConversationControlsAppLaunchButtonType(v127 + v128, v124, type metadata accessor for Participant);
          outlined init with copy of ConversationControlsAppLaunchButtonType(v124, v94, type metadata accessor for Participant.State);
          if (swift_getEnumCaseMultiPayload() == 4)
          {
            v130 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
            v131 = v94;
            v132 = (const void *)(v94 + *(int *)(v130 + 48));
            outlined consume of Participant.CopresenceInfo?(*(_QWORD *)(v131 + *(int *)(v130 + 64)), *(_QWORD *)(v131 + *(int *)(v130 + 64) + 8));
            memcpy(v231, v132, sizeof(v231));
            v133 = type metadata accessor for Date();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v133 - 8) + 8))(v131, v133);
            outlined init with copy of FeatureEligibility?((uint64_t)v216, (uint64_t)v232, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
            outlined destroy of Participant.MediaInfo((uint64_t)v231);
            if (v232[3] != 1)
            {
              memcpy(v231, v232, 0xD1uLL);
              v134 = v231[5];
              outlined destroy of Participant.ScreenInfo((uint64_t)v231);
              v100 = v226;
              v113 = (uint64_t)v211;
              goto LABEL_36;
            }
          }
          else
          {
            outlined destroy of AccountUpdateNotice(v94, type metadata accessor for Participant.State);
            memset(v232, 0, 24);
            v232[3] = 1;
            bzero(v215, 0xB1uLL);
          }
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v232, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
          v134 = 2;
LABEL_36:
          v135 = v218;
          outlined init with copy of ConversationControlsAppLaunchButtonType(v124, v218, type metadata accessor for Participant);
          v136 = v134;
          v94 = (uint64_t)v221;
          if (v136 == 2)
            goto LABEL_43;
          outlined init with copy of ConversationControlsAppLaunchButtonType(v135, v113, type metadata accessor for Participant.State);
          if (swift_getEnumCaseMultiPayload() != 4)
          {
            outlined destroy of AccountUpdateNotice(v113, type metadata accessor for Participant.State);
            memset(v229, 0, 24);
            *(_QWORD *)&v229[24] = 1;
            bzero(v214, 0xB1uLL);
LABEL_42:
            outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v229, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
LABEL_43:
            outlined destroy of AccountUpdateNotice(v135, type metadata accessor for Participant);
            outlined destroy of AccountUpdateNotice(v124, type metadata accessor for Participant);
            goto LABEL_44;
          }
          v137 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
          v138 = (const void *)(v113 + *(int *)(v137 + 48));
          outlined consume of Participant.CopresenceInfo?(*(_QWORD *)(v113 + *(int *)(v137 + 64)), *(_QWORD *)(v113 + *(int *)(v137 + 64) + 8));
          v139 = v138;
          v94 = (uint64_t)v221;
          memcpy(v231, v139, sizeof(v231));
          v140 = type metadata accessor for Date();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v140 - 8) + 8))(v113, v140);
          outlined init with copy of FeatureEligibility?((uint64_t)v216, (uint64_t)v229, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
          outlined destroy of Participant.MediaInfo((uint64_t)v231);
          if (*(_QWORD *)&v229[24] == 1)
            goto LABEL_42;
          memcpy(v232, v229, 0xD1uLL);
          v141 = v232[5];
          outlined destroy of Participant.ScreenInfo((uint64_t)v232);
          outlined destroy of AccountUpdateNotice(v135, type metadata accessor for Participant);
          outlined destroy of AccountUpdateNotice(v124, type metadata accessor for Participant);
          if ((v141 & 1) != 0)
          {
            swift_bridgeObjectRelease();
            v177 = v233;
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              v177 = specialized _ArrayBuffer._consumeAndCreateNew()();
            v179 = *(_QWORD *)(v177 + 16);
            if (v179 <= v129)
            {
              __break(1u);
              JUMPOUT(0x1BD2565F8);
            }
            v180 = v177 + v128;
            v181 = v188;
            outlined init with take of StagedCollaboration(v180, v188, type metadata accessor for Participant);
            specialized UnsafeMutablePointer.moveInitialize(from:count:)((uint64_t)&v220[v180], ~v129 + v179, v180, (void (*)(_QWORD))type metadata accessor for Participant);
            *(_QWORD *)(v177 + 16) = v179 - 1;
            v233 = v177;
            outlined init with copy of ConversationControlsAppLaunchButtonType(v181, v189, type metadata accessor for Participant);
            specialized Array.replaceSubrange<A>(_:with:)();
            outlined destroy of AccountUpdateNotice(v181, type metadata accessor for Participant);
            break;
          }
LABEL_44:
          ++v129;
          v124 = (uint64_t)v219;
          v128 += (unint64_t)v220;
          v127 = v222;
          if (v225 == v129)
          {
            swift_bridgeObjectRelease();
            break;
          }
        }
      }
      *v187 = v233;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v142 = v195;
      outlined init with copy of FeatureEligibility?(v183, v195, &demangling cache variable for type metadata for Participant?);
      v143 = v228;
      if (__swift_getEnumTagSinglePayload(v142, 1, v228) == 1)
      {
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v142, &demangling cache variable for type metadata for Participant?);
        v144 = type metadata accessor for ParticipantGridView.FullScreenFocusedParticipantInfo(0);
        __swift_storeEnumTagSinglePayload(v207, 1, 1, v144);
        v145 = v224;
      }
      else
      {
        v146 = v192;
        outlined init with take of StagedCollaboration(v142, v192, type metadata accessor for Participant);
        v145 = v224;
        (*(void (**)(char *, uint64_t, uint64_t))(v224 + 16))(v196, v146 + *(int *)(v143 + 20), v100);
        v147 = v186;
        v148 = v186;
        ParticipantGridViewController.aspectRatio(for:in:)(v147, (uint64_t)v229);
        v149 = ParticipantGridViewController.orientation(for:in:)(v146, v147);

        Participant.videoInfo.getter();
        outlined destroy of AccountUpdateNotice(v146, type metadata accessor for Participant);
        outlined init with take of Any?((uint64_t)v232, (uint64_t)v231, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
        if (v231[0])
        {
          v150 = v231[4];
          outlined release of LinearGradient((uint64_t)v232);
        }
        else
        {
          v150 = 0;
        }
        v151 = (uint64_t)v193;
        (*(void (**)(char *, char *, uint64_t))(v145 + 32))(v193, v196, v100);
        v152 = (int *)type metadata accessor for ParticipantGridView.FullScreenFocusedParticipantInfo(0);
        outlined init with take of AspectRatio((uint64_t)v229, v151 + v152[5]);
        *(_QWORD *)(v151 + v152[6]) = v149;
        *(_BYTE *)(v151 + v152[7]) = v150;
        __swift_storeEnumTagSinglePayload(v151, 0, 1, (uint64_t)v152);
        outlined init with take of Any?(v151, v207, &demangling cache variable for type metadata for ParticipantGridView.FullScreenFocusedParticipantInfo?);
      }
      v153 = (uint64_t)v209;
      v154 = *(_QWORD *)(v208 + 16);
      v225 = v233;
      if (v154)
      {
        v155 = v208 + ((*(unsigned __int8 *)(v212 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v212 + 80));
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        outlined init with copy of ConversationControlsAppLaunchButtonType(v155, v153, type metadata accessor for Participant);
        outlined init with copy of ConversationControlsAppLaunchButtonType(v153, v223, type metadata accessor for Participant.State);
        v156 = (char *)&loc_1BD256124 + dword_1BD25664C[swift_getEnumCaseMultiPayload()];
        __asm { BR              X9 }
      }
      swift_bridgeObjectRetain();
      v157 = v197;
      v158 = v228;
      __swift_storeEnumTagSinglePayload(v197, 1, 1, v228);
      v160 = (uint64_t)v200;
      v159 = (uint64_t)v201;
      v161 = (uint64_t)v199;
      v162 = v226;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (__swift_getEnumTagSinglePayload(v157, 1, v158) == 1)
      {
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v157, &demangling cache variable for type metadata for Participant?);
        v163 = 1;
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v145 + 16))(v161, v157 + *(int *)(v158 + 20), v162);
        outlined destroy of AccountUpdateNotice(v157, type metadata accessor for Participant);
        v163 = 0;
      }
      v164 = v210;
      v165 = 1;
      __swift_storeEnumTagSinglePayload(v161, v163, 1, v162);
      v166 = __swift_getEnumTagSinglePayload(v164, 1, v158);
      v167 = v206;
      if (!v166)
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v145 + 16))(v160, v164 + *(int *)(v158 + 20), v162);
        v165 = 0;
      }
      v168 = 1;
      __swift_storeEnumTagSinglePayload(v160, v165, 1, v162);
      v169 = (uint64_t)&v167[OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_selectedParticipant];
      swift_beginAccess();
      if (!__swift_getEnumTagSinglePayload(v169, 1, v158))
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v145 + 16))(v159, v169 + *(int *)(v158 + 20), v162);
        v168 = 0;
      }
      __swift_storeEnumTagSinglePayload(v159, v168, 1, v162);
      v230 = v167[OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_layoutStyle];
      v170 = v207;
      v171 = v186;
      ParticipantGridView.transition(to:mostProminentParticipantIdentifier:focusedParticipantIdentifier:selectedParticipantIdentifier:fullScreenFocusedParticipantInfo:layoutStyle:animationStyle:forced:)();

      swift_bridgeObjectRelease();
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v159, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v160, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v161, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v170, &demangling cache variable for type metadata for ParticipantGridView.FullScreenFocusedParticipantInfo?);
      v78 = v213;
      v82 = v190;
    }
    v172 = &v78[OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participantGridViewControllerDelegate];
    swift_beginAccess();
    if (!MEMORY[0x1C3B752C0](v172))
      goto LABEL_10;
    v173 = *((_QWORD *)v172 + 1);
    ObjectType = swift_getObjectType();
    v175 = *v187;
    v176 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(v173 + 32);
    swift_bridgeObjectRetain();
    v176(v78, v82, v175, ObjectType, v173);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
}

void ParticipantGridViewController.focus(on:)()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  int *v62;
  void *v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  __int128 v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  _BYTE v89[40];
  _QWORD v90[14];
  char v91;

  OUTLINED_FUNCTION_93();
  v82 = v0;
  v86 = v5;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_5_27();
  v79 = v7;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_66_17();
  v10 = MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_154_0(v10, v11, v12, v13, v14, v15, v16, v17, v75);
  v18 = OUTLINED_FUNCTION_33_0();
  v84 = *(_QWORD *)(v18 - 8);
  v85 = v18;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v19);
  OUTLINED_FUNCTION_41();
  v81 = v20;
  v21 = OUTLINED_FUNCTION_14_2();
  v77 = *(_QWORD *)(v21 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v22);
  OUTLINED_FUNCTION_41();
  v78 = v23;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParticipantGridView.FullScreenFocusedParticipantInfo?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v24);
  OUTLINED_FUNCTION_5_27();
  v76 = v25;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v26);
  OUTLINED_FUNCTION_62();
  v87 = v27;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v28);
  OUTLINED_FUNCTION_75_0();
  v30 = MEMORY[0x1E0C80A78](v29);
  v32 = (char *)&v75 - v31;
  MEMORY[0x1E0C80A78](v30);
  OUTLINED_FUNCTION_113_7();
  v33 = OUTLINED_FUNCTION_8_13();
  v34 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_17_8(v35, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v1 = OUTLINED_FUNCTION_7_22();
  OUTLINED_FUNCTION_55_24(*MEMORY[0x1E0DEF740], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v34 + 104));
  v36 = OUTLINED_FUNCTION_83_12();
  OUTLINED_FUNCTION_54_27(*(uint64_t (**)(uint64_t, uint64_t))(v34 + 8));
  if ((v36 & 1) != 0)
  {
    v80 = v2;
    if (one-time initialization token for conversationKit == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v37 = OUTLINED_FUNCTION_16_9();
  v75 = xmmword_1BD6441D0;
  *(_OWORD *)(v37 + 16) = xmmword_1BD6441D0;
  OUTLINED_FUNCTION_140_4(v86, v38, type metadata accessor for Participant);
  v39 = OUTLINED_FUNCTION_156_1();
  specialized >> prefix<A>(_:)(v39);
  v41 = v40;
  v43 = v42;
  OUTLINED_FUNCTION_90_1(v4);
  *(_QWORD *)(v37 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v37 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v37 + 32) = v41;
  *(_QWORD *)(v37 + 40) = v43;
  static os_log_type_t.default.getter();
  OUTLINED_FUNCTION_132_3();
  os_log(_:dso:log:type:_:)();
  OUTLINED_FUNCTION_133();
  v44 = v82;
  v45 = v82 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_focusedParticipant;
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_63_4(v45, (uint64_t)v32);
  v46 = OUTLINED_FUNCTION_77_2((uint64_t)v32);
  v47 = (uint64_t)v32;
  v48 = v44;
  OUTLINED_FUNCTION_90_1(v47);
  if (v46 == 1)
  {
    v49 = (_QWORD *)(v44 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participants);
    OUTLINED_FUNCTION_1();
    *(_QWORD *)(v44 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participantsBeforeFocus) = *v49;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_111_5();
  OUTLINED_FUNCTION_51_26(v4);
  ParticipantGridViewController.focusedParticipant.setter(v4, &OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_focusedParticipant, ParticipantGridViewController.focusedParticipant.didset);
  OUTLINED_FUNCTION_111_5();
  OUTLINED_FUNCTION_156_1();
  ParticipantGridViewController.select(_:forFocusing:)();
  OUTLINED_FUNCTION_9_42(v4);
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_114_8();
  v50 = OUTLINED_FUNCTION_69_0(v3, 1, v21);
  if (v51)
  {
    OUTLINED_FUNCTION_96_6(v50, &demangling cache variable for type metadata for Participant?);
    OUTLINED_FUNCTION_1();
    v52 = OUTLINED_FUNCTION_89_10();
    OUTLINED_FUNCTION_77_0(v87, v53, v54, v52);
    swift_bridgeObjectRetain();
    v55 = v80;
  }
  else
  {
    v56 = v78;
    OUTLINED_FUNCTION_144_2(v3, v78);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Participant>);
    v57 = OUTLINED_FUNCTION_64_14();
    *(_OWORD *)(v57 + 16) = v75;
    outlined init with copy of ConversationControlsAppLaunchButtonType(v56, (uint64_t)&demangling cache variable for type metadata for Participant? + v57, type metadata accessor for Participant);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v84 + 16))(v81, v56 + *(int *)(v21 + 20), v85);
    ParticipantGridViewController.aspectRatio(for:in:)(0, (uint64_t)v89);
    v58 = OUTLINED_FUNCTION_79_13();
    Participant.videoInfo.getter();
    outlined destroy of AccountUpdateNotice(v56, type metadata accessor for Participant);
    OUTLINED_FUNCTION_103_3((uint64_t)v90, v59, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
    v55 = v80;
    if (v90[10])
    {
      v60 = v91;
      outlined release of LinearGradient((uint64_t)v90);
    }
    else
    {
      v60 = 0;
    }
    v61 = v76;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v84 + 32))(v76, v81, v85);
    v62 = (int *)OUTLINED_FUNCTION_89_10();
    outlined init with take of AspectRatio((uint64_t)v89, v61 + v62[5]);
    *(_QWORD *)(v61 + v62[6]) = v58;
    *(_BYTE *)(v61 + v62[7]) = v60;
    OUTLINED_FUNCTION_33_33(v61);
    outlined init with take of Any?(v61, v87, &demangling cache variable for type metadata for ParticipantGridView.FullScreenFocusedParticipantInfo?);
  }
  ParticipantGridViewController.gridView.getter();
  if (v63)
  {
    v64 = v63;
    v65 = 1;
    OUTLINED_FUNCTION_60_2();
    __swift_storeEnumTagSinglePayload(v66, v67, v68, v85);
    if (!OUTLINED_FUNCTION_77_2(v45))
    {
      OUTLINED_FUNCTION_10_66(v55, v45 + *(int *)(v21 + 20), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v84 + 16));
      v65 = 0;
    }
    v69 = 1;
    OUTLINED_FUNCTION_38_33(v55, v65);
    v70 = v48 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_selectedParticipant;
    OUTLINED_FUNCTION_1();
    v71 = OUTLINED_FUNCTION_77_2(v70);
    v72 = v79;
    if (!v71)
    {
      OUTLINED_FUNCTION_10_66(v79, v70 + *(int *)(v21 + 20), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v84 + 16));
      v69 = 0;
    }
    OUTLINED_FUNCTION_38_33(v72, v69);
    v88 = *(_BYTE *)(v48 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_layoutStyle);
    v73 = v83;
    v74 = v87;
    OUTLINED_FUNCTION_139_2();
    OUTLINED_FUNCTION_21_0();

    OUTLINED_FUNCTION_9_42(v72);
    OUTLINED_FUNCTION_9_42(v55);
    OUTLINED_FUNCTION_9_42(v73);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v74, &demangling cache variable for type metadata for ParticipantGridView.FullScreenFocusedParticipantInfo?);
  }
  else
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v87, &demangling cache variable for type metadata for ParticipantGridView.FullScreenFocusedParticipantInfo?);
    OUTLINED_FUNCTION_21_0();
  }
  OUTLINED_FUNCTION_52_1();
}

Swift::Void __swiftcall ParticipantGridViewController.defocus(to:)(Swift::OpaquePointer to)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char *v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(uint64_t);
  char v70;
  void (*v71)(uint64_t, uint64_t);
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  int v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char v98;
  uint64_t v99;
  int *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  void *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  __int128 v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  unint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  void *v134;
  uint64_t v135;
  char v136;
  uint64_t v137;
  _BYTE v138[40];
  _BYTE v139[80];
  uint64_t v140;
  char v141;

  OUTLINED_FUNCTION_93();
  v5 = v1;
  v133 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParticipantGridView.FullScreenFocusedParticipantInfo?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_73_10(v8, v108);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_5_27();
  v122 = v10;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_18_0();
  v124 = v12;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_62();
  v123 = v14;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for CollectionOfOne<Participant>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_41();
  v109 = v16;
  v127 = OUTLINED_FUNCTION_14_2();
  v120 = *(_QWORD *)(v127 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_5_27();
  v114 = v18;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v19);
  OUTLINED_FUNCTION_18_0();
  v119 = v20;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v21);
  OUTLINED_FUNCTION_62();
  v110 = v22;
  v23 = OUTLINED_FUNCTION_33_0();
  v135 = *(_QWORD *)(v23 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v24);
  OUTLINED_FUNCTION_5_27();
  v116 = v25;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v26);
  OUTLINED_FUNCTION_62();
  v125 = v27;
  v132 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v28);
  OUTLINED_FUNCTION_11_2();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v29);
  v115 = (uint64_t)&v108 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v31);
  v118 = (uint64_t)&v108 - v32;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v33);
  OUTLINED_FUNCTION_18_0();
  v117 = v34;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v35);
  OUTLINED_FUNCTION_18_0();
  v131 = v36;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v37);
  OUTLINED_FUNCTION_18_0();
  v126 = v38;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v39);
  OUTLINED_FUNCTION_62();
  v134 = (void *)v40;
  v41 = OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_15_56();
  MEMORY[0x1E0C80A78](v42);
  OUTLINED_FUNCTION_77_1();
  OUTLINED_FUNCTION_17_8(v43, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v4 = OUTLINED_FUNCTION_7_22();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v3 + 104))(v4, *MEMORY[0x1E0DEF740], v41);
  v44 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v4, v41);
  if ((v44 & 1) == 0)
  {
    __break(1u);
    goto LABEL_44;
  }
  v44 = (uint64_t)&v140;
  if (one-time initialization token for conversationKit != -1)
LABEL_44:
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v45 = OUTLINED_FUNCTION_16_9();
  v112 = xmmword_1BD6441D0;
  *(_OWORD *)(v45 + 16) = xmmword_1BD6441D0;
  v46 = v133;
  *(_QWORD *)v44 = v133;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [Participant]);
  v47 = String.init<A>(reflecting:)();
  v49 = v48;
  *(_QWORD *)(v45 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v45 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v45 + 32) = v47;
  *(_QWORD *)(v45 + 40) = v49;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  OUTLINED_FUNCTION_21_0();
  v137 = v46;
  v130 = *(_QWORD *)(v46 + 16);
  v121 = v5;
  if (!v130)
  {
    swift_bridgeObjectRetain();
    goto LABEL_26;
  }
  v50 = v120;
  v51 = (*(unsigned __int8 *)(v120 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v120 + 80);
  v52 = &v5[OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_focusedParticipant];
  swift_bridgeObjectRetain();
  v111 = v5;
  OUTLINED_FUNCTION_1();
  v53 = 0;
  v128 = *(_QWORD *)(v50 + 72);
  v129 = v52;
  v54 = v126;
  v55 = v127;
  while (1)
  {
    v56 = OUTLINED_FUNCTION_99_5();
    if (__swift_getEnumTagSinglePayload(v56, v57, v55))
    {
      v58 = (uint64_t)v134;
      v59 = OUTLINED_FUNCTION_99_5();
      __swift_storeEnumTagSinglePayload(v59, v60, 1, v23);
    }
    else
    {
      v61 = (uint64_t)&v52[*(int *)(v55 + 20)];
      v58 = (uint64_t)v134;
      OUTLINED_FUNCTION_110_7((uint64_t)v134, v61);
      OUTLINED_FUNCTION_31_43(v58, 0);
    }
    OUTLINED_FUNCTION_110_7(v54, v133 + v51 + *(int *)(v55 + 20));
    OUTLINED_FUNCTION_31_43(v54, 0);
    v62 = v2 + *(int *)(v132 + 48);
    OUTLINED_FUNCTION_63_4(v58, v2);
    OUTLINED_FUNCTION_63_4(v54, v62);
    OUTLINED_FUNCTION_69_0(v2, 1, v23);
    if (v64)
      break;
    OUTLINED_FUNCTION_63_4(v2, v131);
    OUTLINED_FUNCTION_69_0(v62, 1, v23);
    if (v64)
    {
      OUTLINED_FUNCTION_90_1(v54);
      OUTLINED_FUNCTION_90_1((uint64_t)v134);
      (*(void (**)(uint64_t, uint64_t))(v135 + 8))(v131, v23);
      v52 = v129;
LABEL_16:
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v2, (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
      goto LABEL_18;
    }
    v65 = v135;
    v66 = v131;
    v67 = v125;
    v68 = OUTLINED_FUNCTION_134_1();
    v69(v68);
    lazy protocol witness table accessor for type UUID and conformance UUID();
    v70 = dispatch thunk of static Equatable.== infix(_:_:)();
    v71 = *(void (**)(uint64_t, uint64_t))(v65 + 8);
    v54 = v126;
    v71(v67, v23);
    OUTLINED_FUNCTION_18_18(v54);
    OUTLINED_FUNCTION_18_18((uint64_t)v134);
    v71(v66, v23);
    v55 = v127;
    OUTLINED_FUNCTION_18_18(v2);
    v52 = v129;
    if ((v70 & 1) != 0)
      goto LABEL_21;
LABEL_18:
    ++v53;
    v51 += v128;
    if (v130 == v53)
    {

      goto LABEL_26;
    }
  }
  OUTLINED_FUNCTION_90_1(v54);
  OUTLINED_FUNCTION_90_1(v58);
  v63 = OUTLINED_FUNCTION_69_0(v62, 1, v23);
  v52 = v129;
  if (!v64)
    goto LABEL_16;
  OUTLINED_FUNCTION_219(v63, (uint64_t *)&demangling cache variable for type metadata for UUID?);
LABEL_21:

  if (v53)
  {
    if (v53 >= v130)
    {
      __break(1u);
    }
    else
    {
      v55 = v110;
      OUTLINED_FUNCTION_140_4(v133 + v51, v72, type metadata accessor for Participant);
      v73 = v137;
      if ((OUTLINED_FUNCTION_83_8() & 1) != 0)
        goto LABEL_24;
    }
    v73 = specialized _ArrayBuffer._consumeAndCreateNew()();
    v137 = v73;
LABEL_24:
    v74 = *(_QWORD *)(v73 + 16);
    if (v74 > v53)
    {
      outlined destroy of AccountUpdateNotice(v73 + v51, type metadata accessor for Participant);
      specialized UnsafeMutablePointer.moveInitialize(from:count:)(v73 + v51 + v128, ~v53 + v74, v73 + v51, (void (*)(_QWORD))type metadata accessor for Participant);
      *(_QWORD *)(v73 + 16) = v74 - 1;
      v137 = v73;
      outlined init with copy of ConversationControlsAppLaunchButtonType(v55, v109, type metadata accessor for Participant);
      specialized Array.replaceSubrange<A>(_:with:)();
      outlined destroy of AccountUpdateNotice(v55, type metadata accessor for Participant);
      goto LABEL_26;
    }
    __break(1u);
  }
  else
  {
LABEL_26:
    v75 = v121;
    v76 = (uint64_t)&v121[OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_focusedParticipant];
    OUTLINED_FUNCTION_1();
    v77 = v76;
    v78 = v123;
    OUTLINED_FUNCTION_87_0(v77, v123);
    v79 = (uint64_t)&v75[OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_selectedParticipant];
    OUTLINED_FUNCTION_2_0();
    outlined assign with take of Participant?(v78, v79);
    swift_endAccess();
    OUTLINED_FUNCTION_60_2();
    v80 = v127;
    __swift_storeEnumTagSinglePayload(v81, v82, v83, v127);
    ParticipantGridViewController.focusedParticipant.setter(v78, &OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_focusedParticipant, ParticipantGridViewController.focusedParticipant.didset);
    v84 = (uint64_t)&v75[OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_fullScreenFocusedParticipant];
    OUTLINED_FUNCTION_1();
    v85 = v84;
    v86 = v124;
    OUTLINED_FUNCTION_87_0(v85, v124);
    OUTLINED_FUNCTION_69_0(v86, 1, v80);
    if (v64)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v86, &demangling cache variable for type metadata for Participant?);
      v87 = OUTLINED_FUNCTION_99_5();
      ParticipantGridViewController.update(with:animationStyle:forced:)(v87, v88, 0);
      OUTLINED_FUNCTION_53();
      v89 = v122;
    }
    else
    {
      swift_bridgeObjectRelease();
      v90 = v119;
      outlined init with take of StagedCollaboration(v86, v119, type metadata accessor for Participant);
      ParticipantGridViewController.gridView.getter();
      v89 = v122;
      if (v91)
      {
        v134 = (void *)v91;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Participant>);
        v92 = OUTLINED_FUNCTION_64_14();
        *(_OWORD *)(v92 + 16) = v112;
        outlined init with copy of ConversationControlsAppLaunchButtonType(v90, (uint64_t)&v75[v92], type metadata accessor for Participant);
        OUTLINED_FUNCTION_31_43(v117, 1);
        OUTLINED_FUNCTION_31_43(v118, 1);
        v93 = v127;
        if (__swift_getEnumTagSinglePayload(v79, 1, v127))
        {
          __swift_storeEnumTagSinglePayload(v115, 1, 1, v23);
        }
        else
        {
          v95 = v115;
          OUTLINED_FUNCTION_110_7(v115, v79 + *(int *)(v93 + 20));
          OUTLINED_FUNCTION_31_43(v95, 0);
        }
        OUTLINED_FUNCTION_110_7(v116, v90 + *(int *)(v93 + 20));
        ParticipantGridViewController.aspectRatio(for:in:)(0, (uint64_t)v138);
        v96 = OUTLINED_FUNCTION_79_13();
        Participant.videoInfo.getter();
        OUTLINED_FUNCTION_103_3((uint64_t)v139, v97, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
        if (v140)
        {
          v98 = v141;
          outlined release of LinearGradient((uint64_t)v139);
        }
        else
        {
          v98 = 0;
        }
        v99 = v113;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v135 + 32))(v113, v116, v23);
        v100 = (int *)OUTLINED_FUNCTION_89_10();
        outlined init with take of AspectRatio((uint64_t)v138, v99 + v100[5]);
        *(_QWORD *)(v99 + v100[6]) = v96;
        *(_BYTE *)(v99 + v100[7]) = v98;
        OUTLINED_FUNCTION_33_33(v99);
        v136 = v75[OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_layoutStyle];
        v102 = v117;
        v101 = v118;
        v103 = v115;
        v104 = v134;
        ParticipantGridView.transition(to:mostProminentParticipantIdentifier:focusedParticipantIdentifier:selectedParticipantIdentifier:fullScreenFocusedParticipantInfo:layoutStyle:animationStyle:forced:)();

        v105 = OUTLINED_FUNCTION_133();
        OUTLINED_FUNCTION_30_7(v105, &demangling cache variable for type metadata for ParticipantGridView.FullScreenFocusedParticipantInfo?);
        OUTLINED_FUNCTION_9_42(v103);
        OUTLINED_FUNCTION_9_42(v101);
        OUTLINED_FUNCTION_9_42(v102);
        v94 = v119;
      }
      else
      {
        v94 = v90;
      }
      outlined destroy of AccountUpdateNotice(v94, type metadata accessor for Participant);
    }
    *(_QWORD *)&v75[OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participantsBeforeFocus] = 0;
    swift_bridgeObjectRelease();
    outlined init with copy of FeatureEligibility?(v79, v89, &demangling cache variable for type metadata for Participant?);
    v106 = OUTLINED_FUNCTION_69_0(v89, 1, v127);
    if (v64)
    {
      OUTLINED_FUNCTION_109_0(v106, &demangling cache variable for type metadata for Participant?);
    }
    else
    {
      v107 = v114;
      outlined init with take of StagedCollaboration(v89, v114, type metadata accessor for Participant);
      ParticipantGridViewController.update(participant:broadcastingState:)();
      outlined destroy of AccountUpdateNotice(v107, type metadata accessor for Participant);
    }
    OUTLINED_FUNCTION_52_1();
  }
}

id ParticipantGridViewController.filterAndTruncate(_:)(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  id result;
  void *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v18 = type metadata accessor for Date();
  MEMORY[0x1E0C80A78](v18);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Participant(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (uint64_t)&v1[OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_fullScreenFocusedParticipant];
  swift_beginAccess();
  outlined init with copy of FeatureEligibility?(v12, (uint64_t)v7, &demangling cache variable for type metadata for Participant?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v8) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v7, &demangling cache variable for type metadata for Participant?);
    v13 = Date.init()();
    MEMORY[0x1E0C80A78](v13);
    *(&v18 - 2) = (uint64_t)v4;
    swift_bridgeObjectRetain();
    specialized _ArrayProtocol.filter(_:)((uint64_t (*)(char *))partial apply for closure #1 in ParticipantGridViewController.filterAndTruncate(_:), (uint64_t)(&v18 - 4), a1);
    v19 = v1[OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_layoutStyle];
    result = objc_msgSend(v1, sel_view, v18);
    if (result)
    {
      v15 = result;
      objc_msgSend(result, sel_frame);

      ParticipantGridViewController.mediaPipIsVisible.getter();
      ParticipantGridViewController.captionsLayoutState.getter();
    }
    __break(1u);
  }
  else
  {
    outlined init with take of StagedCollaboration((uint64_t)v7, (uint64_t)v11, type metadata accessor for Participant);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Participant>);
    v16 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_1BD6441D0;
    outlined init with take of StagedCollaboration((uint64_t)v11, v17 + v16, type metadata accessor for Participant);
    return (id)v17;
  }
  return result;
}

uint64_t closure #1 in ParticipantGridViewController.filterAndTruncate(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v11;

  v2 = type metadata accessor for Participant(0);
  MEMORY[0x1E0C80A78](v2);
  v11 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Participant.State(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Date();
  v8 = MEMORY[0x1E0C80A78](v7);
  MEMORY[0x1E0C80A78](v8);
  if (*(_QWORD *)(a1 + *(int *)(v2 + 28)))
  {
    outlined init with copy of ConversationControlsAppLaunchButtonType(a1, (uint64_t)v6, type metadata accessor for Participant.State);
    v9 = (char *)&loc_1BD257AEC + 4 * byte_1BD654800[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return 0;
}

void ParticipantGridViewController.mediaPipIsVisible.getter()
{
  uint64_t v0;

  ParticipantGridViewController.gridView.getter();
  if (v0)
    ParticipantGridView.mediaPipIsVisible.getter();
}

void ParticipantGridViewController.captionsLayoutState.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_5_72();
}

void sub_1BD257CA4(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;

  if (a1)
  {
    v3 = OUTLINED_FUNCTION_131_3();
    (*(void (**)(uint64_t, uint64_t))(v2 + 72))(v3, v2);
    OUTLINED_FUNCTION_10();
  }
  else
  {
    *v1 = 3;
  }
  OUTLINED_FUNCTION_9_0();
}

void ParticipantGridViewController.effectiveLayoutStyle.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  ParticipantGridViewController.gridView.getter();
  if (v3)
  {
    v4 = v1 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participants;
    OUTLINED_FUNCTION_1();
    ParticipantGridView.effectiveLayoutStyle(for:)(*(_QWORD *)(*(_QWORD *)v4 + 16));
  }
  *a1 = 2;
  OUTLINED_FUNCTION_9_0();
}

void ParticipantGridViewController.participantCount.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_32();
}

void ParticipantGridViewController.mediaPipInfo.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_26();
}

uint64_t sub_1BD257DA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 v3;

  if (!a1)
    return 5;
  v2 = OUTLINED_FUNCTION_27_38();
  v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v1);
  OUTLINED_FUNCTION_10();
  return v3;
}

void ParticipantGridViewController.overlappingInsets.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_26();
}

void sub_1BD257E30(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  if (a1)
  {
    v2 = OUTLINED_FUNCTION_27_38();
    (*(void (**)(uint64_t, uint64_t))(v1 + 16))(v2, v1);
    OUTLINED_FUNCTION_89();
    OUTLINED_FUNCTION_10();
  }
  OUTLINED_FUNCTION_66();
}

Swift::Void __swiftcall ParticipantGridViewController.dodgeMediaPip(with:)(Swift::OpaquePointer_optional with)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  void *rawValue;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  void *v16;
  void *v17;

  v4 = v1;
  rawValue = with.value._rawValue;
  v6 = OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_15_56();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_17_8(v8, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v2 = OUTLINED_FUNCTION_7_22();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v3 + 104))(v2, *MEMORY[0x1E0DEF740], v6);
  v9 = OUTLINED_FUNCTION_83_12();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v2, v6);
  if ((v9 & 1) != 0)
  {
    if (rawValue)
    {
      OUTLINED_FUNCTION_60_2();
      ParticipantGridViewController.update(with:animationStyle:forced:)(v10, v11, v12);
      v13 = v4 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participantGridViewControllerDelegate;
      OUTLINED_FUNCTION_1();
      if (MEMORY[0x1C3B752C0](v13))
      {
        v14 = *(_QWORD *)(v13 + 8);
        ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, void *, uint64_t, uint64_t))(v14 + 56))(v4, rawValue, ObjectType, v14);
        OUTLINED_FUNCTION_10();
      }
    }
    else
    {
      ParticipantGridViewController.gridView.getter();
      if (v16)
      {
        v17 = v16;
        ParticipantGridView.updateMediaPipDodgingFrame(withAnimationStyle:)(ConversationKit_ParticipantGridView_AnimationStyle_fast);

      }
    }
    OUTLINED_FUNCTION_91();
  }
  else
  {
    __break(1u);
  }
}

void ParticipantGridViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;

  v4 = v3;
  if (a2)
  {
    v6 = (void *)MEMORY[0x1C3B72E00]();
    OUTLINED_FUNCTION_53();
  }
  else
  {
    v6 = 0;
  }
  objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  OUTLINED_FUNCTION_18();
}

void ParticipantGridViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id ParticipantGridViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)OUTLINED_FUNCTION_15_6();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void ParticipantGridViewController.participantIdentifiers.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_93();
  v17 = OUTLINED_FUNCTION_14_2();
  v4 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_4_1();
  v5 = OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_15_56();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_11_2();
  v7 = (uint64_t *)(v0 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participants);
  OUTLINED_FUNCTION_1();
  v8 = *v7;
  v9 = *(_QWORD *)(*v7 + 16);
  if (v9)
  {
    v18 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, v9, 0);
    OUTLINED_FUNCTION_37_3();
    v11 = v8 + v10;
    v16 = *(_QWORD *)(v4 + 72);
    do
    {
      outlined init with copy of ConversationControlsAppLaunchButtonType(v11, v1, type metadata accessor for Participant);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v1 + *(int *)(v17 + 20), v5);
      outlined destroy of AccountUpdateNotice(v1, type metadata accessor for Participant);
      v12 = v18;
      if ((OUTLINED_FUNCTION_83_8() & 1) == 0)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(_QWORD *)(v18 + 16) + 1, 1);
        v12 = v18;
      }
      v14 = *(_QWORD *)(v12 + 16);
      v13 = *(_QWORD *)(v12 + 24);
      if (v14 >= v13 >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v13 > 1, v14 + 1, 1);
        v12 = v18;
      }
      *(_QWORD *)(v12 + 16) = v14 + 1;
      OUTLINED_FUNCTION_37_3();
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v12 + v15 + *(_QWORD *)(v3 + 72) * v14, v2, v5);
      v18 = v12;
      v11 += v16;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_52_1();
}

void ParticipantGridViewController.update(participant:localParticipantOrientation:)()
{
  char v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;

  OUTLINED_FUNCTION_96();
  v3 = v2;
  v5 = v4;
  OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_42_31();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_0_7();
  OUTLINED_FUNCTION_17_8(v7, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v8 = OUTLINED_FUNCTION_7_22();
  *v1 = v8;
  OUTLINED_FUNCTION_36_6(v8, *MEMORY[0x1E0DEF740]);
  OUTLINED_FUNCTION_112_7();
  OUTLINED_FUNCTION_28_44();
  if ((v0 & 1) != 0)
  {
    OUTLINED_FUNCTION_78_12();
    if (v9)
    {
      v10 = v9;
      ParticipantGridView.updateViews(for:localParticipantOrientation:)(v5, v3);

    }
    OUTLINED_FUNCTION_65_1();
  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall ParticipantGridViewController.updateLocalViews(for:isLocalMemberAuthorizedToChangeGroupMembership:)(Swift::OpaquePointer a1, Swift::Bool isLocalMemberAuthorizedToChangeGroupMembership)
{
  uint64_t v2;
  uint64_t *v3;
  char v4;
  char v5;
  void *v6;
  Swift::OpaquePointer v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Swift::Bool v11;
  void *v12;
  void *v13;

  OUTLINED_FUNCTION_96();
  v5 = v4;
  v7._rawValue = v6;
  OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_42_31();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_0_7();
  OUTLINED_FUNCTION_17_8(v9, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v10 = OUTLINED_FUNCTION_7_22();
  *v3 = v10;
  OUTLINED_FUNCTION_36_6(v10, *MEMORY[0x1E0DEF740]);
  OUTLINED_FUNCTION_112_7();
  OUTLINED_FUNCTION_28_44();
  if ((v2 & 1) != 0)
  {
    v11 = v5 & 1;
    *(_BYTE *)(v2
             + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_isLocalMemberAuthorizedToChangeGroupMembership) = v11;
    ParticipantGridViewController.gridView.getter();
    if (v12)
    {
      v13 = v12;
      ParticipantGridView.updateLocalViews(for:isLocalMemberAuthorizedToChangeGroupMembership:)(v7, v11);

    }
    OUTLINED_FUNCTION_65_1();
  }
  else
  {
    __break(1u);
  }
}

void ParticipantGridViewController.update(participant:isKickingAvailable:)()
{
  char v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;

  OUTLINED_FUNCTION_96();
  OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_42_31();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_0_7();
  OUTLINED_FUNCTION_17_8(v3, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v4 = OUTLINED_FUNCTION_7_22();
  *v1 = v4;
  OUTLINED_FUNCTION_36_6(v4, *MEMORY[0x1E0DEF740]);
  OUTLINED_FUNCTION_112_7();
  OUTLINED_FUNCTION_28_44();
  if ((v0 & 1) != 0)
  {
    OUTLINED_FUNCTION_78_12();
    if (v5)
    {
      v6 = v5;
      ParticipantGridView.updateKickingAvailable(for:isKickingAvailable:)();

    }
    OUTLINED_FUNCTION_65_1();
  }
  else
  {
    __break(1u);
  }
}

void ParticipantGridViewController.update(with:updateReason:)(Swift::OpaquePointer with, char *a2)
{
  uint64_t v2;
  char v4;
  unsigned int v5;

  if (a2[1])
  {
    v4 = *a2;
    if (a2[1] == 1)
    {
      *(_BYTE *)(v2 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_layoutStyle) = v4 & 1;
      v5 = 1;
    }
    else
    {
      v5 = 0x20301u >> (8 * v4);
    }
  }
  else
  {
    v5 = 3;
  }
  ParticipantGridViewController.updateSelectedParticipant(with:)(with);
  ParticipantGridViewController.update(with:animationStyle:forced:)((uint64_t)with._rawValue, v5, 0);
}

Swift::Void __swiftcall ParticipantGridViewController.updateSelectedParticipant(with:)(Swift::OpaquePointer with)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  OUTLINED_FUNCTION_93();
  v6 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = OUTLINED_FUNCTION_33_0();
  v59 = *(_QWORD *)(v10 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_41();
  v52 = v12;
  v57 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_0_7();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_75_0();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_72_1();
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v48 - v17;
  v58 = OUTLINED_FUNCTION_14_2();
  v19 = *(_QWORD *)(v58 - 8);
  MEMORY[0x1E0C80A78](v58);
  OUTLINED_FUNCTION_74_10();
  MEMORY[0x1E0C80A78](v20);
  OUTLINED_FUNCTION_122_2();
  MEMORY[0x1E0C80A78](v21);
  v25 = *(_QWORD *)(v23 + 16);
  if (!v25)
    goto LABEL_19;
  v48 = (char *)&v48 - v22;
  v49 = v24;
  v50 = v9;
  v51 = v23;
  OUTLINED_FUNCTION_37_3();
  v28 = v27 + v26;
  v56 = v3;
  v29 = v1 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_selectedParticipant;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_1();
  v54 = *(_QWORD *)(v19 + 72);
  v30 = v58;
  v55 = v29;
  while (1)
  {
    outlined init with copy of ConversationControlsAppLaunchButtonType(v28, v6, type metadata accessor for Participant);
    if (__swift_getEnumTagSinglePayload(v29, 1, v30))
    {
      OUTLINED_FUNCTION_38_33((uint64_t)v18, 1);
      v31 = v30;
      v32 = *(void (**)(char *, uint64_t, uint64_t))(v59 + 16);
    }
    else
    {
      v33 = v29 + *(int *)(v30 + 20);
      v31 = v30;
      v32 = *(void (**)(char *, uint64_t, uint64_t))(v59 + 16);
      v32(v18, v33, v10);
      OUTLINED_FUNCTION_38_33((uint64_t)v18, 0);
    }
    v32((char *)v4, v6 + *(int *)(v31 + 20), v10);
    OUTLINED_FUNCTION_38_33(v4, 0);
    v34 = v2 + *(int *)(v57 + 48);
    v35 = OUTLINED_FUNCTION_116_3();
    OUTLINED_FUNCTION_10_73(v35, v36);
    OUTLINED_FUNCTION_10_73(v4, v34);
    OUTLINED_FUNCTION_69_0(v2, 1, v10);
    if (v38)
      break;
    v37 = v56;
    OUTLINED_FUNCTION_10_73(v2, v56);
    OUTLINED_FUNCTION_69_0(v34, 1, v10);
    if (v38)
    {
      OUTLINED_FUNCTION_42_23(v4);
      OUTLINED_FUNCTION_42_23((uint64_t)v18);
      (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v37, v10);
LABEL_14:
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v2, (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
      v30 = v58;
      v29 = v55;
      goto LABEL_16;
    }
    v39 = v59;
    v40 = v52;
    OUTLINED_FUNCTION_10_66(v52, v34, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v59 + 32));
    lazy protocol witness table accessor for type UUID and conformance UUID();
    v53 = dispatch thunk of static Equatable.== infix(_:_:)();
    v41 = *(void (**)(uint64_t, uint64_t))(v39 + 8);
    v41(v40, v10);
    OUTLINED_FUNCTION_9_42(v4);
    OUTLINED_FUNCTION_9_42((uint64_t)v18);
    v41(v56, v10);
    OUTLINED_FUNCTION_9_42(v2);
    v30 = v58;
    v29 = v55;
    if ((v53 & 1) != 0)
      goto LABEL_18;
LABEL_16:
    outlined destroy of AccountUpdateNotice(v6, type metadata accessor for Participant);
    v28 += v54;
    if (!--v25)
    {
      swift_bridgeObjectRelease();
      goto LABEL_19;
    }
  }
  OUTLINED_FUNCTION_42_23(v4);
  OUTLINED_FUNCTION_42_23((uint64_t)v18);
  OUTLINED_FUNCTION_69_0(v34, 1, v10);
  if (!v38)
    goto LABEL_14;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v2, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  v30 = v58;
  v29 = v55;
LABEL_18:
  swift_bridgeObjectRelease();
  v42 = v6;
  v43 = v49;
  OUTLINED_FUNCTION_77_10(v42);
  v44 = v43;
  v45 = v48;
  OUTLINED_FUNCTION_77_10(v44);
  v46 = (uint64_t)v45;
  v47 = (uint64_t)v50;
  OUTLINED_FUNCTION_77_10(v46);
  __swift_storeEnumTagSinglePayload(v47, 0, 1, v30);
  OUTLINED_FUNCTION_2_0();
  outlined assign with take of Participant?(v47, v29);
  OUTLINED_FUNCTION_69_11();
LABEL_19:
  OUTLINED_FUNCTION_52_1();
}

uint64_t specialized Array<A>.arrayCloselyMatching(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t, uint64_t);
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v50;
  void (*v51)(char *, uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v59;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t result;
  _QWORD v66[2];
  char *v67;
  char *v68;
  char *v69;
  char *v70;
  char *v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  char *v77;
  void (*v78)(char *, unint64_t, uint64_t);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v69 = (char *)v66 - v7;
  v8 = type metadata accessor for UUID();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v68 = (char *)v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v10);
  v71 = (char *)v66 - v13;
  v14 = MEMORY[0x1E0C80A78](v12);
  v70 = (char *)v66 - v15;
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)v66 - v17;
  MEMORY[0x1E0C80A78](v16);
  v77 = (char *)v66 - v19;
  swift_bridgeObjectRetain();
  v20 = swift_bridgeObjectRetain();
  v21 = specialized _ArrayProtocol.filter(_:)(v20, a2);
  swift_bridgeObjectRetain();
  v22 = swift_bridgeObjectRetain();
  v23 = specialized _ArrayProtocol.filter(_:)(v22, a2);
  v81 = MEMORY[0x1E0DEE9D8];
  v73 = *(_QWORD *)(a2 + 16);
  if (!v73)
  {
LABEL_67:
    v80 = v23;
    specialized Array.append<A>(contentsOf:)();
    specialized Array.append<A>(contentsOf:)();
    return v81;
  }
  v74 = v21;
  v66[1] = a2;
  v67 = v6;
  v76 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v72 = a2 + v76;
  v24 = *(_QWORD *)(v9 + 72);
  v78 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
  swift_bridgeObjectRetain();
  v25 = 0;
  v26 = v77;
  while (1)
  {
    v27 = v9;
    v28 = v24;
    v75 = v25;
    v78(v26, v72 + v24 * v25, v8);
    v79 = v23;
    v29 = *(_QWORD *)(v23 + 16);
    if (!v29)
      break;
    v30 = 0;
    v31 = -1;
    v32 = v76;
    while (1)
    {
      v78(v18, v79 + v32, v8);
      lazy protocol witness table accessor for type UUID and conformance UUID();
      v33 = dispatch thunk of static Equatable.== infix(_:_:)();
      v34 = *(void (**)(char *, uint64_t))(v27 + 8);
      v34(v18, v8);
      if ((v33 & 1) != 0)
        break;
      ++v30;
      v32 += v28;
      --v31;
      v26 = v77;
      if (v29 == v30)
        goto LABEL_7;
    }
    v78(v70, (unint64_t)v77, v8);
    v43 = v81;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v43 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    v44 = *(_QWORD *)(v43 + 16);
    v45 = v44 + 1;
    if (v44 >= *(_QWORD *)(v43 + 24) >> 1)
    {
      v66[0] = v44 + 1;
      v64 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      v45 = v66[0];
      v43 = v64;
    }
    *(_QWORD *)(v43 + 16) = v45;
    (*(void (**)(unint64_t, char *, uint64_t))(v27 + 32))(v43 + v76 + v44 * v28, v70, v8);
    v81 = v43;
    v23 = v79;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v23 = specialized _ArrayBuffer._consumeAndCreateNew()();
    if (*(_QWORD *)(v23 + 16) <= v30)
      goto LABEL_69;
    v46 = v23 + v32;
    v79 = *(_QWORD *)(v23 + 16);
    v34((char *)(v23 + v32), v8);
    v47 = v79;
    if ((uint64_t)(~v30 + v79) < 0)
      goto LABEL_73;
    v48 = v23 + v28 + v32;
    v24 = v28;
    if (v28 > 0 || v46 >= v48 + v28 * (v79 + v31))
    {
      swift_arrayInitWithTakeFrontToBack();
      v47 = v79;
      v9 = v27;
    }
    else
    {
      v9 = v27;
      if (v28)
      {
        swift_arrayInitWithTakeBackToFront();
        v47 = v79;
      }
    }
    *(_QWORD *)(v23 + 16) = v47 - 1;
    v26 = v77;
LABEL_65:
    v25 = v75 + 1;
    v34(v26, v8);
    if (v25 == v73)
    {
      swift_bridgeObjectRelease();
      goto LABEL_67;
    }
  }
LABEL_7:
  v35 = v74;
  if (!*(_QWORD *)(v74 + 16))
  {
    v23 = v79;
    v9 = v27;
    v24 = v28;
    if (*(_QWORD *)(v79 + 16))
    {
      v50 = (uint64_t)v67;
      v78(v67, v79 + v76, v8);
      __swift_storeEnumTagSinglePayload(v50, 0, 1, v8);
      if (__swift_getEnumTagSinglePayload(v50, 1, v8) == 1)
        goto LABEL_72;
      v51 = *(void (**)(char *, uint64_t, uint64_t))(v27 + 32);
      v51(v68, v50, v8);
      v52 = *(_QWORD *)(v23 + 16);
      if (!v52)
        goto LABEL_70;
      if (!swift_isUniquelyReferenced_nonNull_native()
        || (unint64_t)(v52 - 1) > *(_QWORD *)(v23 + 24) >> 1)
      {
        v23 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      v53 = v23;
      v54 = v23 + v76;
      swift_arrayDestroy();
      v55 = *(_QWORD *)(v53 + 16);
      if (!v55)
        goto LABEL_73;
      v56 = v53;
      v57 = v54 + v28 + (v55 - 1) * v28;
      if (v28 > 0 || v54 >= v57)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (v28)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      --*(_QWORD *)(v53 + 16);
      v62 = v81;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v62 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      v63 = *(_QWORD *)(v62 + 16);
      if (v63 >= *(_QWORD *)(v62 + 24) >> 1)
        v62 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      *(_QWORD *)(v62 + 16) = v63 + 1;
      v51((char *)(v62 + v76 + v63 * v28), (uint64_t)v68, v8);
      v81 = v62;
      v34 = *(void (**)(char *, uint64_t))(v9 + 8);
      v26 = v77;
      v23 = v56;
    }
    else
    {
      v34 = *(void (**)(char *, uint64_t))(v27 + 8);
    }
    goto LABEL_65;
  }
  v36 = (uint64_t)v69;
  v78(v69, v74 + v76, v8);
  __swift_storeEnumTagSinglePayload(v36, 0, 1, v8);
  if (__swift_getEnumTagSinglePayload(v36, 1, v8) == 1)
    goto LABEL_71;
  v9 = v27;
  v24 = v28;
  v37 = *(void (**)(char *, uint64_t, uint64_t))(v27 + 32);
  v37(v71, v36, v8);
  v38 = *(_QWORD *)(v35 + 16);
  if (v38)
  {
    if (!swift_isUniquelyReferenced_nonNull_native()
      || (unint64_t)(v38 - 1) > *(_QWORD *)(v35 + 24) >> 1)
    {
      v35 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    v39 = v35 + v76;
    swift_arrayDestroy();
    v40 = *(_QWORD *)(v35 + 16);
    if (!v40)
      goto LABEL_73;
    v41 = v39 + v28 + (v40 - 1) * v28;
    if (v28 > 0 || v39 >= v41)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v28)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    --*(_QWORD *)(v35 + 16);
    v59 = v81;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v74 = v35;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v59 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    v61 = *(_QWORD *)(v59 + 16);
    if (v61 >= *(_QWORD *)(v59 + 24) >> 1)
      v59 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    *(_QWORD *)(v59 + 16) = v61 + 1;
    v37((char *)(v59 + v76 + v61 * v28), (uint64_t)v71, v8);
    v81 = v59;
    v34 = *(void (**)(char *, uint64_t))(v27 + 8);
    v26 = v77;
    v23 = v79;
    goto LABEL_65;
  }
  __break(1u);
LABEL_69:
  __break(1u);
LABEL_70:
  __break(1u);
LABEL_71:
  __break(1u);
LABEL_72:
  __break(1u);
LABEL_73:
  result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t specialized Array<A>.sortToMatch(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t result;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, unint64_t, uint64_t);
  char *v42;
  char v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  unint64_t v46;
  uint64_t v48;
  char *v49;
  unint64_t v50;
  uint64_t (*v51)(unint64_t, char *, uint64_t);
  char *v52;
  char *v53;
  char *v54;
  char *v55;
  uint64_t v56;
  _QWORD *v57;
  char *v58;
  uint64_t v59;
  _QWORD *v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t *v64;
  unint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (offset: Int, element: UUID));
  MEMORY[0x1E0C80A78](v2);
  v54 = (char *)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for UUID();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v52 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v55 = (char *)&v52 - v12;
  v13 = MEMORY[0x1E0C80A78](v11);
  v67 = (char *)&v52 - v14;
  v15 = MEMORY[0x1E0C80A78](v13);
  v69 = (char *)&v52 - v16;
  MEMORY[0x1E0C80A78](v15);
  v53 = (char *)&v52 - v17;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (offset: Int, element: UUID)?);
  v19 = MEMORY[0x1E0C80A78](v18);
  v21 = (char **)((char *)&v52 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v19);
  v23 = (char **)((char *)&v52 - v22);
  v24 = *(_QWORD *)(a1 + 16);
  v56 = a1;
  v25 = v24;
  result = swift_bridgeObjectRetain();
  v27 = 0;
  v28 = 0;
  v60 = v23;
  v61 = v25;
  v58 = v6;
  v59 = v2;
  v68 = v8;
  v57 = v21;
  while (1)
  {
    v66 = v27;
    if (v28 == v25)
    {
      __swift_storeEnumTagSinglePayload((uint64_t)v6, 1, 1, v7);
      v29 = v25;
LABEL_6:
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v6, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      __swift_storeEnumTagSinglePayload((uint64_t)v21, 1, 1, v2);
      goto LABEL_9;
    }
    if (v28 >= v25)
    {
      __break(1u);
LABEL_33:
      __break(1u);
LABEL_34:
      __break(1u);
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
    (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v6, v56+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v28, v7);
    v29 = v28 + 1;
    __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v7);
    if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7) == 1)
      goto LABEL_6;
    v30 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v31 = v53;
    v30(v53, v6, v7);
    v32 = &v54[*(int *)(v2 + 48)];
    result = ((uint64_t (*)(char *, char *, uint64_t))v30)(v32, v31, v7);
    v33 = v66 + 1;
    if (__OFADD__(v66, 1))
      goto LABEL_33;
    v34 = (char *)v21 + *(int *)(v2 + 48);
    *v21 = v66;
    v30(v34, v32, v7);
    __swift_storeEnumTagSinglePayload((uint64_t)v21, 0, 1, v2);
    v66 = v33;
    v25 = v61;
LABEL_9:
    outlined init with take of Any?((uint64_t)v21, (uint64_t)v23, &demangling cache variable for type metadata for (offset: Int, element: UUID)?);
    if (__swift_getEnumTagSinglePayload((uint64_t)v23, 1, v2) == 1)
      return swift_bridgeObjectRelease();
    v65 = v29;
    v63 = *v23;
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v69, (char *)v23 + *(int *)(v2 + 48), v7);
    v35 = *v64;
    v36 = *(_QWORD *)(*v64 + 16);
    if (v36)
      break;
    result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v69, v7);
LABEL_30:
    v28 = v65;
    v27 = v66;
  }
  v37 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  swift_bridgeObjectRetain();
  v38 = 0;
  v39 = v8;
  v40 = *(_QWORD *)(v8 + 72);
  v41 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 16);
  v62 = v37;
  while (1)
  {
    v42 = v67;
    v41(v67, v35 + v37, v7);
    lazy protocol witness table accessor for type UUID and conformance UUID();
    v43 = dispatch thunk of static Equatable.== infix(_:_:)();
    v44 = *(void (**)(char *, uint64_t))(v68 + 8);
    v44(v42, v7);
    if ((v43 & 1) != 0)
      break;
    ++v38;
    v37 += v40;
    if (v36 == v38)
    {
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
  }
  result = swift_bridgeObjectRelease();
  v45 = *v64;
  v46 = *(_QWORD *)(*v64 + 16);
  if ((uint64_t)v63 >= (uint64_t)v46 || v63 == v38)
  {
LABEL_21:
    v6 = v58;
    v2 = v59;
    v8 = v68;
    v21 = v57;
    v23 = v60;
LABEL_29:
    v25 = v61;
    result = ((uint64_t (*)(char *, uint64_t))v44)(v69, v7);
    goto LABEL_30;
  }
  v23 = v60;
  if ((v63 & 0x8000000000000000) != 0)
    goto LABEL_34;
  v48 = v40 * v63;
  result = ((uint64_t (*)(char *, unint64_t, uint64_t))v41)(v55, v45 + v62 + v40 * v63, v7);
  if (v38 >= v46)
    goto LABEL_35;
  v49 = v52;
  v41(v52, v45 + v37, v7);
  result = swift_isUniquelyReferenced_nonNull_native();
  *v64 = v45;
  if ((result & 1) == 0)
  {
    result = specialized _ArrayBuffer._consumeAndCreateNew()();
    v45 = result;
    *v64 = result;
  }
  v8 = v68;
  if (v63 < *(_QWORD *)(v45 + 16))
  {
    v50 = v45 + v62 + v48;
    v51 = *(uint64_t (**)(unint64_t, char *, uint64_t))(v68 + 40);
    result = v51(v50, v49, v7);
    if (v38 >= *(_QWORD *)(*v64 + 16))
      goto LABEL_37;
    v51(*v64 + v37, v55, v7);
    v6 = v58;
    v2 = v59;
    v21 = v57;
    goto LABEL_29;
  }
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
  return result;
}

void ParticipantGridViewController.update(participant:audioPower:)(Swift::Float a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  char v14;
  char v15;
  uint64_t v16;
  void *v17;
  void *v18;

  v4 = v1;
  v6 = OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_15_56();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_17_8(v8, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v2 = OUTLINED_FUNCTION_7_22();
  OUTLINED_FUNCTION_55_24(*MEMORY[0x1E0DEF740], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 104));
  v9 = OUTLINED_FUNCTION_83_12();
  OUTLINED_FUNCTION_54_27(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  if ((v9 & 1) != 0)
  {
    v9 = v4 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participants;
    v10 = OUTLINED_FUNCTION_1();
    v11 = *(_QWORD *)v9;
    MEMORY[0x1E0C80A78](v10);
    OUTLINED_FUNCTION_70_14();
    OUTLINED_FUNCTION_97_4((uint64_t)partial apply for closure #1 in ParticipantGridViewController.update(participant:broadcastingState:));
    v6 = v12;
    v14 = v13;
    OUTLINED_FUNCTION_133();
    if ((v14 & 1) != 0)
      return;
    OUTLINED_FUNCTION_2_0();
    v15 = OUTLINED_FUNCTION_141_2();
    *(_QWORD *)v9 = v11;
    if ((v15 & 1) != 0)
    {
      if ((v6 & 0x8000000000000000) == 0)
        goto LABEL_5;
LABEL_11:
      __break(1u);
      goto LABEL_12;
    }
  }
  else
  {
    __break(1u);
  }
  v11 = specialized _ArrayBuffer._consumeAndCreateNew()();
  *(_QWORD *)v9 = v11;
  if ((v6 & 0x8000000000000000) != 0)
    goto LABEL_11;
LABEL_5:
  if (v6 >= *(_QWORD *)(v11 + 16))
  {
LABEL_12:
    __break(1u);
    return;
  }
  v16 = OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_43_35(v16);
  swift_endAccess();
  OUTLINED_FUNCTION_78_12();
  if (v17)
  {
    v18 = v17;
    ParticipantGridView.updateAudioPower(for:audioPower:)(a1);

  }
}

void ParticipantGridViewController.update(participant:gradientOverlayAlpha:)()
{
  void *v0;
  void *v1;

  ParticipantGridViewController.gridView.getter();
  if (v0)
  {
    v1 = v0;
    ParticipantGridView.updateGradientOverlayView(for:isHidden:alpha:)();
    OUTLINED_FUNCTION_0_77(v1);
  }
  else
  {
    OUTLINED_FUNCTION_43_1();
  }
}

void ParticipantGridViewController.update(participant:visibleCameraPosition:)(void *a1, char a2)
{
  void *v4;
  void *v5;

  ParticipantGridViewController.gridView.getter();
  if (v4)
  {
    v5 = v4;
    ParticipantGridView.updateVisibleCameraPosition(for:visibleCameraPosition:animated:)(a1, a2, 0);
    OUTLINED_FUNCTION_0_77(v5);
  }
  else
  {
    OUTLINED_FUNCTION_43_1();
  }
}

Swift::Void __swiftcall ParticipantGridViewController.removeAllParticipants()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_93();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_74_10();
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v15 - v7;
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_66_17();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_113_7();
  v10 = v1 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_fullScreenFocusedParticipant;
  OUTLINED_FUNCTION_1();
  outlined init with copy of FeatureEligibility?(v10, v3, &demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_14_2();
  v11 = OUTLINED_FUNCTION_48_4(v3);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v3, &demangling cache variable for type metadata for Participant?);
  if (v11 == 1
    && (v12 = v1 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_focusedParticipant,
        OUTLINED_FUNCTION_1(),
        OUTLINED_FUNCTION_145_1(v12, v2),
        LODWORD(v12) = OUTLINED_FUNCTION_48_4(v2),
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v2, &demangling cache variable for type metadata for Participant?), (_DWORD)v12 == 1))
  {
    ParticipantGridViewController.update(with:animationStyle:forced:)(MEMORY[0x1E0DEE9D8], 1, 0);
  }
  else
  {
    outlined init with copy of FeatureEligibility?(v10, (uint64_t)v8, &demangling cache variable for type metadata for Participant?);
    v13 = OUTLINED_FUNCTION_48_4((uint64_t)v8);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v8, &demangling cache variable for type metadata for Participant?);
    if (v13 != 1)
      ParticipantGridViewController.fullScreenDefocus(to:animationStyle:)(MEMORY[0x1E0DEE9D8], ConversationKit_ParticipantGridView_AnimationStyle_fast);
    v14 = v1 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_focusedParticipant;
    OUTLINED_FUNCTION_1();
    OUTLINED_FUNCTION_10_73(v14, v0);
    LODWORD(v14) = OUTLINED_FUNCTION_48_4(v0);
    OUTLINED_FUNCTION_42_23(v0);
    if ((_DWORD)v14 != 1)
      ParticipantGridViewController.defocus(to:)(MEMORY[0x1E0DEE9D8]);
  }
  OUTLINED_FUNCTION_52_1();
}

void ParticipantGridViewController.spatialPosition(for:relativeTo:)(uint64_t a1, uint64_t a2)
{
  char v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;

  OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_42_31();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_0_7();
  OUTLINED_FUNCTION_17_8(v6, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v7 = OUTLINED_FUNCTION_7_22();
  *v3 = v7;
  OUTLINED_FUNCTION_36_6(v7, *MEMORY[0x1E0DEF740]);
  OUTLINED_FUNCTION_112_7();
  OUTLINED_FUNCTION_28_44();
  if ((v2 & 1) != 0)
  {
    OUTLINED_FUNCTION_78_12();
    if (v8)
    {
      v9 = v8;
      OUTLINED_FUNCTION_14_2();
      type metadata accessor for ParticipantView();
      v10 = ParticipantGridView.tile(for:ofAClass:)();
      if (v10)
      {
        v11 = v10;
        objc_msgSend(v10, sel_frame);
        objc_msgSend(v9, sel_convertRect_toCoordinateSpace_, a2);
        OUTLINED_FUNCTION_89();

      }
      else
      {

      }
    }
    OUTLINED_FUNCTION_66();
  }
  else
  {
    __break(1u);
  }
}

void protocol witness for ParticipantsViewController.participantsViewControllerDelegate.getter in conformance ParticipantGridViewController()
{
  ParticipantGridViewController.participantsViewControllerDelegate.getter();
}

void protocol witness for ParticipantsViewController.participantsViewControllerDelegate.setter in conformance ParticipantGridViewController(uint64_t a1, uint64_t a2)
{
  ParticipantGridViewController.participantsViewControllerDelegate.setter(a1, a2);
}

uint64_t (*protocol witness for ParticipantsViewController.participantsViewControllerDelegate.modify in conformance ParticipantGridViewController(_QWORD *a1))()
{
  uint64_t *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = *v1;
  v5 = OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participantsViewControllerDelegate;
  v3[5] = *v1;
  v3[6] = v5;
  v6 = v4 + v5;
  swift_beginAccess();
  v7 = MEMORY[0x1C3B752C0](v6);
  v8 = *(_QWORD *)(v6 + 8);
  v3[3] = v7;
  v3[4] = v8;
  return ParticipantGridViewController.participantsViewControllerDelegate.modify;
}

void protocol witness for ParticipantsViewController.participantIdentifiers.getter in conformance ParticipantGridViewController()
{
  ParticipantGridViewController.participantIdentifiers.getter();
}

void protocol witness for ParticipantsViewController.participantCount.getter in conformance ParticipantGridViewController()
{
  ParticipantGridViewController.participantCount.getter();
}

void protocol witness for ParticipantsViewController.update(participant:broadcastingState:) in conformance ParticipantGridViewController()
{
  ParticipantGridViewController.update(participant:broadcastingState:)();
}

void protocol witness for ParticipantsViewController.update(participant:localParticipantOrientation:) in conformance ParticipantGridViewController()
{
  ParticipantGridViewController.update(participant:localParticipantOrientation:)();
}

void protocol witness for ParticipantsViewController.update(participant:isKickingAvailable:) in conformance ParticipantGridViewController()
{
  ParticipantGridViewController.update(participant:isKickingAvailable:)();
}

void protocol witness for ParticipantsViewController.update(with:updateReason:) in conformance ParticipantGridViewController(Swift::OpaquePointer a1, char *a2)
{
  ParticipantGridViewController.update(with:updateReason:)(a1, a2);
}

void protocol witness for ParticipantsViewController.update(participant:audioPower:) in conformance ParticipantGridViewController(Swift::Float a1)
{
  ParticipantGridViewController.update(participant:audioPower:)(a1);
}

void protocol witness for ParticipantsViewController.update(participant:gradientOverlayAlpha:) in conformance ParticipantGridViewController()
{
  ParticipantGridViewController.update(participant:gradientOverlayAlpha:)();
}

void protocol witness for ParticipantsViewController.updateLocalViews(for:isLocalMemberAuthorizedToChangeGroupMembership:) in conformance ParticipantGridViewController(Swift::OpaquePointer a1, Swift::Bool a2)
{
  ParticipantGridViewController.updateLocalViews(for:isLocalMemberAuthorizedToChangeGroupMembership:)(a1, a2);
}

void protocol witness for ParticipantsViewController.removeAllParticipants() in conformance ParticipantGridViewController()
{
  ParticipantGridViewController.removeAllParticipants()();
}

void protocol witness for ParticipantsViewController.spatialPosition(for:relativeTo:) in conformance ParticipantGridViewController(uint64_t a1, uint64_t a2)
{
  ParticipantGridViewController.spatialPosition(for:relativeTo:)(a1, a2);
}

void ParticipantGridViewController.participantGridViewDelegateDidFinishAnimatingTiles(_:)()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_5_72();
}

void sub_1BD259E14(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;

  if (a1)
  {
    v3 = *(_QWORD *)(v2 + 8);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 24))(v1, ObjectType, v3);
    swift_unknownObjectRelease();
  }
  OUTLINED_FUNCTION_9_0();
}

void ParticipantGridViewController.participantGridViewDelegate(_:didTapToggleFocus:)()
{
  OUTLINED_FUNCTION_15_6();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_117_0();
}

#error "1BD259EAC: call analysis failed (funcsize=12)"

void ParticipantGridViewController.participantGridViewDelegate(_:didTapShutterButton:)()
{
  OUTLINED_FUNCTION_15_6();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_117_0();
}

#error "1BD259F20: call analysis failed (funcsize=12)"

void ParticipantGridViewController.participantGridViewDelegate(_:didTapRingButton:)()
{
  OUTLINED_FUNCTION_15_6();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_117_0();
}

#error "1BD259F94: call analysis failed (funcsize=12)"

void ParticipantGridViewController.participantGridViewDelegate(_:didTapKickMemberButton:)()
{
  OUTLINED_FUNCTION_15_6();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_117_0();
}

#error "1BD25A008: call analysis failed (funcsize=12)"

void ParticipantGridViewController.participantGridViewDelegate(_:didUpdateParticipantIdentifier:with:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  void (*v46)(uint64_t);
  uint64_t v47;
  uint64_t v48;
  char v49;
  void (*v50)(uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  void (*v79)(uint64_t, uint64_t);
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;

  OUTLINED_FUNCTION_93();
  v4 = v0;
  v6 = v5;
  v8 = v7;
  v9 = OUTLINED_FUNCTION_33_0();
  v94 = *(_QWORD *)(v9 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_41();
  v88 = v11;
  v93 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v12);
  v90 = (uint64_t)&v83 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_113_7();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_5_27();
  v87 = v16;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_72_1();
  MEMORY[0x1E0C80A78](v18);
  OUTLINED_FUNCTION_18_0();
  v91 = v19;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v83 - v21;
  v23 = OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_15_56();
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v83 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  v28 = MEMORY[0x1E0C80A78](v27);
  MEMORY[0x1E0C80A78](v28);
  OUTLINED_FUNCTION_122_2();
  MEMORY[0x1E0C80A78](v29);
  v89 = v8;
  v86 = v32;
  if ((v6 & 1) == 0)
  {
    v92 = (char *)v31;
    v54 = v4 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_selectedParticipant;
    OUTLINED_FUNCTION_1();
    v55 = 1;
    v56 = OUTLINED_FUNCTION_46_7(v54);
    v85 = v4;
    if (!v56)
    {
      OUTLINED_FUNCTION_33_28(v3, v54 + *(int *)(v23 + 20), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v94 + 16));
      v55 = 0;
    }
    __swift_storeEnumTagSinglePayload(v3, v55, 1, v9);
    v57 = v90;
    v58 = v90 + *(int *)(v93 + 48);
    OUTLINED_FUNCTION_63_4(v89, v90);
    OUTLINED_FUNCTION_63_4(v3, v58);
    v59 = OUTLINED_FUNCTION_99_5();
    v61 = OUTLINED_FUNCTION_69_0(v59, v60, v9);
    if (v44)
    {
      OUTLINED_FUNCTION_109_0(v61, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      v63 = OUTLINED_FUNCTION_69_0(v58, 1, v9);
      if (v44)
      {
        OUTLINED_FUNCTION_30_7(v63, (uint64_t *)&demangling cache variable for type metadata for UUID?);
LABEL_31:
        v80 = v86;
        OUTLINED_FUNCTION_20_55(v86);
        OUTLINED_FUNCTION_2_0();
        OUTLINED_FUNCTION_125_3(v80);
        OUTLINED_FUNCTION_69_11();
        OUTLINED_FUNCTION_20_55(v80);
        OUTLINED_FUNCTION_2_0();
        v71 = v80;
        v72 = v54;
        goto LABEL_32;
      }
    }
    else
    {
      v64 = v87;
      OUTLINED_FUNCTION_129_2(v57, v62, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      v66 = OUTLINED_FUNCTION_69_0(v58, 1, v9);
      if (!v65)
      {
        v75 = v94;
        v76 = v88;
        OUTLINED_FUNCTION_33_28(v88, v58, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v94 + 32));
        lazy protocol witness table accessor for type UUID and conformance UUID();
        v77 = dispatch thunk of static Equatable.== infix(_:_:)();
        v78 = v57;
        v79 = *(void (**)(uint64_t, uint64_t))(v75 + 8);
        v79(v76, v9);
        OUTLINED_FUNCTION_90_1(v3);
        v79(v64, v9);
        OUTLINED_FUNCTION_90_1(v78);
        if ((v77 & 1) != 0)
          goto LABEL_31;
LABEL_27:
        v67 = (uint64_t)v92;
        outlined init with copy of FeatureEligibility?(v54, (uint64_t)v92, &demangling cache variable for type metadata for Participant?);
        v68 = OUTLINED_FUNCTION_46_7(v67);
        OUTLINED_FUNCTION_25_0(v67);
        v69 = v86;
        if (v68 != 1)
          goto LABEL_36;
        OUTLINED_FUNCTION_20_55(v86);
        v70 = v85 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_sashedParticipant;
        OUTLINED_FUNCTION_2_0();
        v71 = v69;
        v72 = v70;
LABEL_32:
        outlined assign with take of Participant?(v71, v72);
        OUTLINED_FUNCTION_69_11();
        OUTLINED_FUNCTION_1();
        OUTLINED_FUNCTION_26();
      }
      OUTLINED_FUNCTION_109_0(v66, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      v63 = (*(uint64_t (**)(uint64_t, uint64_t))(v94 + 8))(v64, v9);
    }
    OUTLINED_FUNCTION_30_7(v63, (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
    goto LABEL_27;
  }
  v84 = (uint64_t)&v83 - v30;
  v87 = v23;
  v33 = v4;
  v34 = (uint64_t *)(v4 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participants);
  OUTLINED_FUNCTION_1();
  v35 = *v34;
  v36 = *(_QWORD *)(*v34 + 16);
  if (!v36)
  {
    swift_bridgeObjectRetain();
    v53 = 1;
    v73 = v33;
    v74 = v86;
    v41 = v87;
    goto LABEL_35;
  }
  v85 = v33;
  OUTLINED_FUNCTION_37_3();
  v37 = v35;
  v39 = v35 + v38;
  v40 = *(_QWORD *)(v1 + 72);
  v83 = v37;
  swift_bridgeObjectRetain();
  v41 = v87;
  v90 = v40;
  v92 = v26;
  while (1)
  {
    outlined init with copy of ConversationControlsAppLaunchButtonType(v39, (uint64_t)v26, type metadata accessor for Participant);
    OUTLINED_FUNCTION_33_28((uint64_t)v22, (uint64_t)&v26[*(int *)(v41 + 20)], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v94 + 16));
    OUTLINED_FUNCTION_33_33((uint64_t)v22);
    v42 = v2 + *(int *)(v93 + 48);
    OUTLINED_FUNCTION_152_1((uint64_t)v22, v2);
    OUTLINED_FUNCTION_152_1(v8, v42);
    OUTLINED_FUNCTION_69_0(v2, 1, v9);
    if (v44)
      break;
    OUTLINED_FUNCTION_152_1(v2, v91);
    OUTLINED_FUNCTION_69_0(v42, 1, v9);
    if (v44)
    {
      OUTLINED_FUNCTION_87_6();
      v45 = OUTLINED_FUNCTION_134_1();
      v46(v45);
      v40 = v90;
      v26 = v92;
LABEL_12:
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v2, (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
      goto LABEL_14;
    }
    v47 = v94;
    v48 = v88;
    OUTLINED_FUNCTION_33_28(v88, v42, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v94 + 32));
    lazy protocol witness table accessor for type UUID and conformance UUID();
    v49 = dispatch thunk of static Equatable.== infix(_:_:)();
    v50 = *(void (**)(uint64_t, uint64_t))(v47 + 8);
    v51 = v48;
    v8 = v89;
    v50(v51, v9);
    OUTLINED_FUNCTION_87_6();
    v52 = OUTLINED_FUNCTION_134_1();
    ((void (*)(uint64_t))v50)(v52);
    v41 = v87;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v2, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    v40 = v90;
    v26 = v92;
    if ((v49 & 1) != 0)
      goto LABEL_33;
LABEL_14:
    outlined destroy of AccountUpdateNotice((uint64_t)v26, type metadata accessor for Participant);
    v39 += v40;
    if (!--v36)
    {
      v53 = 1;
      goto LABEL_34;
    }
  }
  OUTLINED_FUNCTION_87_6();
  v43 = OUTLINED_FUNCTION_69_0(v42, 1, v9);
  v26 = v92;
  if (!v44)
    goto LABEL_12;
  OUTLINED_FUNCTION_92_1(v43, (uint64_t *)&demangling cache variable for type metadata for UUID?);
LABEL_33:
  outlined init with take of StagedCollaboration((uint64_t)v26, v84, type metadata accessor for Participant);
  v53 = 0;
LABEL_34:
  v73 = v85;
  v74 = v86;
LABEL_35:
  v81 = v84;
  __swift_storeEnumTagSinglePayload(v84, v53, 1, v41);
  swift_bridgeObjectRelease();
  v82 = v73 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_sashedParticipant;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_125_3(v81);
  OUTLINED_FUNCTION_69_11();
  outlined init with copy of FeatureEligibility?(v82, v74, &demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_125_3(v74);
  OUTLINED_FUNCTION_69_11();
LABEL_36:
  OUTLINED_FUNCTION_52_1();
}

void ParticipantGridViewController.isOneToOneModeEnabled.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_26();
}

void sub_1BD25A750(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  if (a1)
  {
    v2 = OUTLINED_FUNCTION_27_38();
    OUTLINED_FUNCTION_39_0(v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 80));
    OUTLINED_FUNCTION_10();
  }
  OUTLINED_FUNCTION_32();
}

void ParticipantGridViewController.hasConnectedToCall.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_26();
}

void sub_1BD25A7A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  if (a1)
  {
    v2 = OUTLINED_FUNCTION_27_38();
    OUTLINED_FUNCTION_39_0(v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 88));
    OUTLINED_FUNCTION_10();
  }
  OUTLINED_FUNCTION_32();
}

void ParticipantGridViewController.shouldShowLastFrameUI.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_26();
}

void sub_1BD25A800(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  if (a1)
  {
    v2 = OUTLINED_FUNCTION_27_38();
    OUTLINED_FUNCTION_39_0(v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 96));
    OUTLINED_FUNCTION_10();
  }
  OUTLINED_FUNCTION_32();
}

void ParticipantGridViewController.layoutIdiom.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_5_72();
}

void sub_1BD25A860(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, __int16 a10, char a11, char a12)
{
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;

  if (a1)
  {
    v14 = OUTLINED_FUNCTION_131_3();
    (*(void (**)(char *__return_ptr, uint64_t, uint64_t))(v13 + 24))(&a12, v14, v13);
    OUTLINED_FUNCTION_10();
    v15 = a12;
  }
  else
  {
    v15 = 2;
  }
  *v12 = v15;
  OUTLINED_FUNCTION_9_0();
}

void ParticipantGridViewController.supportedDeviceOrientations.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_26();
}

uint64_t sub_1BD25A8C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (!a1)
    return 0;
  v2 = *(_QWORD *)(v1 + 8);
  v3 = OUTLINED_FUNCTION_15_6();
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v3, v2);
  OUTLINED_FUNCTION_10();
  return v4;
}

void ParticipantGridViewController.participantGridViewDelegate(_:didSetOverlayHidden:)(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;

  v4 = v2 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participantGridViewControllerDelegate;
  OUTLINED_FUNCTION_1();
  if (MEMORY[0x1C3B752C0](v4))
  {
    v5 = *(_QWORD *)(v4 + 8);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 64))(v2, a2 & 1, ObjectType, v5);
    swift_unknownObjectRelease();
  }
  OUTLINED_FUNCTION_9_0();
}

void protocol witness for ParticipantGridViewDelegate.supportedDeviceOrientations.getter in conformance ParticipantGridViewController()
{
  ParticipantGridViewController.supportedDeviceOrientations.getter();
}

void ParticipantGridViewController.updateProminenceEMA(withParticipant:ema:audioPriority:videoPriority:)(uint64_t a1, float a2, float a3, float a4)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  char v20;
  char v21;
  uint64_t v22;
  void *v23;
  double v24;
  void *v25;

  v7 = v4;
  v12 = OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_15_56();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_17_8(v14, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v5 = OUTLINED_FUNCTION_7_22();
  OUTLINED_FUNCTION_55_24(*MEMORY[0x1E0DEF740], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 104));
  v15 = OUTLINED_FUNCTION_83_12();
  OUTLINED_FUNCTION_54_27(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
  if ((v15 & 1) != 0)
  {
    v15 = v7 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participants;
    v16 = OUTLINED_FUNCTION_1();
    v17 = *(_QWORD *)v15;
    MEMORY[0x1E0C80A78](v16);
    OUTLINED_FUNCTION_70_14();
    OUTLINED_FUNCTION_97_4((uint64_t)partial apply for closure #1 in ParticipantGridViewController.updateProminenceEMA(withParticipant:ema:audioPriority:videoPriority:));
    v12 = v18;
    v20 = v19;
    OUTLINED_FUNCTION_133();
    if ((v20 & 1) != 0)
      return;
    OUTLINED_FUNCTION_2_0();
    v21 = OUTLINED_FUNCTION_141_2();
    *(_QWORD *)v15 = v17;
    if ((v21 & 1) != 0)
    {
      if ((v12 & 0x8000000000000000) == 0)
        goto LABEL_5;
LABEL_11:
      __break(1u);
      goto LABEL_12;
    }
  }
  else
  {
    __break(1u);
  }
  v17 = specialized _ArrayBuffer._consumeAndCreateNew()();
  *(_QWORD *)v15 = v17;
  if ((v12 & 0x8000000000000000) != 0)
    goto LABEL_11;
LABEL_5:
  if (v12 >= *(_QWORD *)(v17 + 16))
  {
LABEL_12:
    __break(1u);
    return;
  }
  v22 = OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_43_35(v22);
  swift_endAccess();
  OUTLINED_FUNCTION_78_12();
  if (v23)
  {
    v25 = v23;
    *(float *)&v24 = a2;
    ParticipantGridView.updateEMA(for:ema:audioPriority:videoPriority:)(a1, v24, a3, a4);

  }
}

uint64_t closure #1 in ParticipantGridViewController.update(participant:broadcastingState:)()
{
  type metadata accessor for Participant(0);
  return static UUID.== infix(_:_:)() & 1;
}

unint64_t specialized UnsafeMutablePointer.moveInitialize(from:count:)(unint64_t result, uint64_t a2, unint64_t a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_2_92();
    result = OUTLINED_FUNCTION_0_105();
    __break(1u);
  }
  else if (a3 >= result && result + 16 * a2 > a3)
  {
    if (a3 != result)
      return swift_arrayInitWithTakeBackToFront();
  }
  else
  {
    return swift_arrayInitWithTakeFrontToBack();
  }
  return result;
}

void specialized UnsafeMutablePointer.moveInitialize(from:count:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_2_92();
    OUTLINED_FUNCTION_0_105();
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_143_4();
    if (v4
      && (__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails),
          OUTLINED_FUNCTION_159_0(),
          !v5 & v4))
    {
      if (v3 == v2)
      {
        OUTLINED_FUNCTION_9_0();
      }
      else
      {
        OUTLINED_FUNCTION_44_31();
        OUTLINED_FUNCTION_58_18();
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
      OUTLINED_FUNCTION_44_31();
      OUTLINED_FUNCTION_57_10();
    }
  }
}

char *specialized UnsafeMutablePointer.moveInitialize(from:count:)(char *result, size_t a2, char *a3)
{
  if ((a2 & 0x8000000000000000) != 0)
  {
    OUTLINED_FUNCTION_2_92();
    result = (char *)OUTLINED_FUNCTION_0_105();
    __break(1u);
  }
  else if (a3 != result || &result[a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_39_39(a3, result, a2);
  }
  return result;
}

uint64_t outlined assign with take of Participant?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t partial apply for closure #1 in ParticipantGridViewController.updateProminenceEMA(withParticipant:ema:audioPriority:videoPriority:)()
{
  return closure #1 in ParticipantGridViewController.update(participant:broadcastingState:)() & 1;
}

void sub_1BD25B14C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  key path getter for ParticipantGridViewController.focusedParticipant : ParticipantGridViewController(a1, a2, a3, &OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_focusedParticipant);
}

void sub_1BD25B168(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for ParticipantGridViewController.focusedParticipant : ParticipantGridViewController(a1, a2, a3, a4, &OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_focusedParticipant, ParticipantGridViewController.focusedParticipant.didset);
}

void sub_1BD25B18C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  key path getter for ParticipantGridViewController.focusedParticipant : ParticipantGridViewController(a1, a2, a3, &OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_fullScreenFocusedParticipant);
}

void sub_1BD25B1A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for ParticipantGridViewController.focusedParticipant : ParticipantGridViewController(a1, a2, a3, a4, &OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_fullScreenFocusedParticipant, ParticipantGridViewController.fullScreenFocusedParticipant.didset);
}

void sub_1BD25B1CC(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  key path getter for ParticipantGridViewController.participantsViewControllerDelegate : ParticipantGridViewController(a1, &OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participantsViewControllerDelegate, a2);
}

void sub_1BD25B1E8(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  key path setter for ParticipantGridViewController.participantsViewControllerDelegate : ParticipantGridViewController(a1, a2, a3, a4, &OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participantsViewControllerDelegate);
}

void sub_1BD25B204(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  key path getter for ParticipantGridViewController.participantsViewControllerDelegate : ParticipantGridViewController(a1, &OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participantGridViewControllerDelegate, a2);
}

void sub_1BD25B220(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  key path setter for ParticipantGridViewController.participantsViewControllerDelegate : ParticipantGridViewController(a1, a2, a3, a4, &OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participantGridViewControllerDelegate);
}

uint64_t dispatch thunk of ParticipantGridViewControllerDelegate.mediaPipInfo.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ParticipantGridViewControllerDelegate.overlappingInsets.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ParticipantGridViewControllerDelegate.participantGridViewControllerDidFinishAnimatingTiles(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of ParticipantGridViewControllerDelegate.participantGridViewController(_:didUpdateVisibleParticipantsFrom:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

uint64_t dispatch thunk of ParticipantGridViewControllerDelegate.participantGridViewController(_:participantDidHideSash:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of ParticipantGridViewControllerDelegate.participantGridViewController(_:didUpdateFullScreenFocusedParticipantFrom:newParticipant:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 48))();
}

uint64_t dispatch thunk of ParticipantGridViewControllerDelegate.participantGridViewController(_:didDodgeMediaPipWithActiveParticipants:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t dispatch thunk of ParticipantGridViewControllerDelegate.participantGridViewController(_:didSetOverlayHidden:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 64))();
}

uint64_t dispatch thunk of ParticipantGridViewControllerDelegate.captionsLayoutState.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of ParticipantGridViewControllerDelegate.isOneToOneModeEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of ParticipantGridViewControllerDelegate.hasConnectedToCall.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of ParticipantGridViewControllerDelegate.shouldShowLastFrameUI.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t ObjC metadata update function for ParticipantGridViewController()
{
  return type metadata accessor for ParticipantGridViewController();
}

uint64_t type metadata accessor for ParticipantGridViewController()
{
  uint64_t result;

  result = type metadata singleton initialization cache for ParticipantGridViewController;
  if (!type metadata singleton initialization cache for ParticipantGridViewController)
    return swift_getSingletonMetadata();
  return result;
}

void type metadata completion function for ParticipantGridViewController()
{
  unint64_t v0;

  type metadata accessor for Participant?();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for ParticipantGridViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ParticipantGridViewController.__allocating_init(participants:layoutStyle:isLocalMemberAuthorizedToChangeGroupMembership:captionsLayoutState:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t partial apply for closure #1 in ParticipantGridViewController.filterAndTruncate(_:)(uint64_t a1)
{
  return closure #1 in ParticipantGridViewController.filterAndTruncate(_:)(a1) & 1;
}

uint64_t specialized Array.index(_:offsetBy:limitedBy:)(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  BOOL v5;

  v3 = a3 - result;
  if (__OFSUB__(a3, result))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    return result;
  }
  if (a2 < 1)
  {
    if (v3 <= 0 && v3 > a2)
      return 0;
  }
  else if ((v3 & 0x8000000000000000) == 0 && v3 < (unint64_t)a2)
  {
    return 0;
  }
  v5 = __OFADD__(result, a2);
  result += a2;
  if (v5)
    goto LABEL_14;
  return result;
}

uint64_t partial apply for closure #1 in ParticipantGridViewController.update(participant:broadcastingState:)()
{
  return partial apply for closure #1 in ParticipantGridViewController.updateProminenceEMA(withParticipant:ema:audioPriority:videoPriority:)() & 1;
}

void *OUTLINED_FUNCTION_39_39@<X0>(void *a1@<X0>, const void *a2@<X1>, size_t a3@<X8>)
{
  return memmove(a1, a2, a3);
}

void OUTLINED_FUNCTION_87_6()
{
  uint64_t v0;
  uint64_t *v1;

  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v0, v1);
}

uint64_t OUTLINED_FUNCTION_89_10()
{
  return type metadata accessor for ParticipantGridView.FullScreenFocusedParticipantInfo(0);
}

uint64_t OUTLINED_FUNCTION_99_5()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_101_9(uint64_t a1)
{
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(a1, 0, 1, v1);
}

uint64_t OUTLINED_FUNCTION_102_7()
{
  return dispatch thunk of static Equatable.== infix(_:_:)();
}

void OUTLINED_FUNCTION_103_3(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  outlined init with take of Any?(a1, v3 - 168, a3);
}

void OUTLINED_FUNCTION_111_5()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;
  uint64_t v2;

  outlined init with copy of ConversationControlsAppLaunchButtonType(v1, v2, v0);
}

uint64_t OUTLINED_FUNCTION_112_7()
{
  return _dispatchPreconditionTest(_:)();
}

uint64_t OUTLINED_FUNCTION_116_3()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_128_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return __swift_storeEnumTagSinglePayload(a1, a2, 1, v2);
}

void OUTLINED_FUNCTION_129_2(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  outlined init with copy of FeatureEligibility?(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_131_3()
{
  return swift_getObjectType();
}

uint64_t OUTLINED_FUNCTION_134_1()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_139_2()
{
  ParticipantGridView.transition(to:mostProminentParticipantIdentifier:focusedParticipantIdentifier:selectedParticipantIdentifier:fullScreenFocusedParticipantInfo:layoutStyle:animationStyle:forced:)();
}

void OUTLINED_FUNCTION_140_4(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  outlined init with copy of ConversationControlsAppLaunchButtonType(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_141_2()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

void OUTLINED_FUNCTION_144_2(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  outlined init with take of StagedCollaboration(a1, a2, v2);
}

void OUTLINED_FUNCTION_145_1(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  outlined init with copy of FeatureEligibility?(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_148_0(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

void OUTLINED_FUNCTION_154_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v10 + 80) = (char *)&a9 - v9;
}

void specialized Sequence.forEach(_:)(uint64_t a1, void *a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  id v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  void *v24;

  v3 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for NSObject(0, &lazy cache variable for type metadata for TUScreenSharingRequest);
    lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop(&lazy protocol witness table cache variable for type TUScreenSharingRequest and conformance NSObject, &lazy cache variable for type metadata for TUScreenSharingRequest);
    Set.Iterator.init(_cocoa:)();
    v3 = v19;
    v18 = v20;
    v5 = v21;
    v4 = v22;
    v6 = v23;
  }
  else
  {
    v7 = -1 << *(_BYTE *)(a1 + 32);
    v18 = a1 + 56;
    v5 = ~v7;
    v8 = -v7;
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v6 = v9 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain();
    v4 = 0;
  }
  v17 = (unint64_t)(v5 + 64) >> 6;
  if (v3 < 0)
    goto LABEL_10;
  while (1)
  {
    if (v6)
    {
      v10 = (v6 - 1) & v6;
      v11 = __clz(__rbit64(v6)) | (v4 << 6);
      v12 = v4;
      goto LABEL_29;
    }
    v14 = v4 + 1;
    if (__OFADD__(v4, 1))
      break;
    if (v14 >= v17)
      goto LABEL_32;
    v15 = *(_QWORD *)(v18 + 8 * v14);
    v12 = v4 + 1;
    if (!v15)
    {
      v12 = v4 + 2;
      if (v4 + 2 >= v17)
        goto LABEL_32;
      v15 = *(_QWORD *)(v18 + 8 * v12);
      if (!v15)
      {
        v12 = v4 + 3;
        if (v4 + 3 >= v17)
          goto LABEL_32;
        v15 = *(_QWORD *)(v18 + 8 * v12);
        if (!v15)
        {
          v12 = v4 + 4;
          if (v4 + 4 >= v17)
            goto LABEL_32;
          v15 = *(_QWORD *)(v18 + 8 * v12);
          if (!v15)
          {
            v12 = v4 + 5;
            if (v4 + 5 >= v17)
              goto LABEL_32;
            v15 = *(_QWORD *)(v18 + 8 * v12);
            if (!v15)
            {
              v16 = v4 + 6;
              while (v16 < v17)
              {
                v15 = *(_QWORD *)(v18 + 8 * v16++);
                if (v15)
                {
                  v12 = v16 - 1;
                  goto LABEL_28;
                }
              }
LABEL_32:
              outlined consume of [String : Application].Iterator._Variant();

              return;
            }
          }
        }
      }
    }
LABEL_28:
    v10 = (v15 - 1) & v15;
    v11 = __clz(__rbit64(v15)) + (v12 << 6);
LABEL_29:
    v13 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v11);
    if (!v13)
      goto LABEL_32;
    while (1)
    {
      ConversationController.declineOrCancelScreenShareRequest(for:)();

      v4 = v12;
      v6 = v10;
      if ((v3 & 0x8000000000000000) == 0)
        break;
LABEL_10:
      if (__CocoaSet.Iterator.next()())
      {
        type metadata accessor for NSObject(0, &lazy cache variable for type metadata for TUScreenSharingRequest);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v13 = v24;
        swift_unknownObjectRelease();
        v12 = v4;
        v10 = v6;
        if (v24)
          continue;
      }
      goto LABEL_32;
    }
  }
  __break(1u);
}

void specialized Sequence.first(where:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  id v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  void *v23;

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for NSObject(0, &lazy cache variable for type metadata for TUScreenSharingRequest);
    lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop(&lazy protocol witness table cache variable for type TUScreenSharingRequest and conformance NSObject, &lazy cache variable for type metadata for TUScreenSharingRequest);
    Set.Iterator.init(_cocoa:)();
    v1 = v18;
    v17 = v19;
    v2 = v20;
    v3 = v21;
    v4 = v22;
  }
  else
  {
    v5 = -1 << *(_BYTE *)(a1 + 32);
    v17 = a1 + 56;
    v2 = ~v5;
    v6 = -v5;
    if (v6 < 64)
      v7 = ~(-1 << v6);
    else
      v7 = -1;
    v4 = v7 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain();
    v3 = 0;
  }
  v16 = v2;
  v8 = (unint64_t)(v2 + 64) >> 6;
  if (v1 < 0)
    goto LABEL_10;
LABEL_8:
  if (v4)
  {
    v9 = (v4 - 1) & v4;
    v10 = __clz(__rbit64(v4)) | (v3 << 6);
    v11 = v3;
    goto LABEL_29;
  }
  v13 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    if (v13 < v8)
    {
      v14 = *(_QWORD *)(v17 + 8 * v13);
      v11 = v3 + 1;
      if (v14)
        goto LABEL_28;
      v11 = v3 + 2;
      if (v3 + 2 >= v8)
        goto LABEL_33;
      v14 = *(_QWORD *)(v17 + 8 * v11);
      if (v14)
        goto LABEL_28;
      v11 = v3 + 3;
      if (v3 + 3 >= v8)
        goto LABEL_33;
      v14 = *(_QWORD *)(v17 + 8 * v11);
      if (v14)
        goto LABEL_28;
      v11 = v3 + 4;
      if (v3 + 4 >= v8)
        goto LABEL_33;
      v14 = *(_QWORD *)(v17 + 8 * v11);
      if (v14)
      {
LABEL_28:
        v9 = (v14 - 1) & v14;
        v10 = __clz(__rbit64(v14)) + (v11 << 6);
LABEL_29:
        v12 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v10);
        if (v12)
        {
          do
          {
            if (objc_msgSend(v12, sel_type, v16) == (id)4)
              break;

            v3 = v11;
            v4 = v9;
            if ((v1 & 0x8000000000000000) == 0)
              goto LABEL_8;
LABEL_10:
            if (!__CocoaSet.Iterator.next()())
              break;
            type metadata accessor for NSObject(0, &lazy cache variable for type metadata for TUScreenSharingRequest);
            swift_unknownObjectRetain();
            swift_dynamicCast();
            v12 = v23;
            swift_unknownObjectRelease();
            v11 = v3;
            v9 = v4;
          }
          while (v23);
        }
        goto LABEL_33;
      }
      v11 = v3 + 5;
      if (v3 + 5 < v8)
      {
        v14 = *(_QWORD *)(v17 + 8 * v11);
        if (!v14)
        {
          v15 = v3 + 6;
          while (v15 < v8)
          {
            v14 = *(_QWORD *)(v17 + 8 * v15++);
            if (v14)
            {
              v11 = v15 - 1;
              goto LABEL_28;
            }
          }
          goto LABEL_33;
        }
        goto LABEL_28;
      }
    }
LABEL_33:
    outlined consume of [String : Application].Iterator._Variant();
    return;
  }
  __break(1u);
}

Swift::Void __swiftcall ConversationControlsManager.stopScreenShare()()
{
  _QWORD *v0;
  void (*v1)(_BYTE *, _QWORD);
  uint64_t v2;
  _BYTE v3[32];

  ConversationController.stopScreenSharingSession()();
  ConversationControlsManager.screenShareCountdownTimer.setter(0);
  v1 = (void (*)(_BYTE *, _QWORD))(*(uint64_t (**)(_BYTE *))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x650))(v3);
  *(_BYTE *)(v2 + 1) = 0;
  v1(v3, 0);
  OUTLINED_FUNCTION_32();
}

Swift::Void __swiftcall ConversationControlsManager.declineIncomingScreenShareRequests()()
{
  void *v0;
  uint8_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  NSObject *v7;
  uint64_t v8;
  unint64_t *v9;
  _QWORD *v10;
  unint64_t *v11;
  uint64_t v12;
  unint64_t v13;
  Swift::Int v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char v20;
  unint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  os_log_type_t v25;
  _WORD *v26;
  uint64_t v27;
  os_log_type_t v28;
  _WORD *v29;
  NSObject *v30;
  NSObject *v31;
  uint64_t v32;

  OUTLINED_FUNCTION_206();
  v5 = (void *)OUTLINED_FUNCTION_133_0(v4);
  if (!v5)
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v24 = OUTLINED_FUNCTION_17_2();
    v30 = OUTLINED_FUNCTION_3(v24, (uint64_t)&static Logger.conversationControls);
    v25 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_108_4(v30))
    {
      v26 = (_WORD *)OUTLINED_FUNCTION_7_8();
      OUTLINED_FUNCTION_52_3(v26);
      OUTLINED_FUNCTION_130(&dword_1BD004000, v30, v25, "No incoming screen share requests to decline", v1);
      OUTLINED_FUNCTION_60();
    }

    return;
  }
  v6 = objc_msgSend(v5, sel_screenSharingRequests);
  OUTLINED_FUNCTION_4_39();
  v7 = &lazy cache variable for type metadata for TUScreenSharingRequest;
  OUTLINED_FUNCTION_656();
  type metadata accessor for NSObject(v8, v9);
  OUTLINED_FUNCTION_656();
  lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop(v10, v11);
  OUTLINED_FUNCTION_315_0();
  static Set._unconditionallyBridgeFromObjectiveC(_:)();
  OUTLINED_FUNCTION_26_2();
  if (((unint64_t)&lazy cache variable for type metadata for TUScreenSharingRequest & 0xC000000000000001) == 0)
  {
    v12 = specialized _NativeSet.filter(_:)((uint64_t)&lazy cache variable for type metadata for TUScreenSharingRequest);
LABEL_28:
    if (one-time initialization token for conversationControls != -1)
      goto LABEL_33;
    goto LABEL_29;
  }
  v12 = MEMORY[0x1E0DEE9E8];
  v32 = MEMORY[0x1E0DEE9E8];
  v2 = __CocoaSet.makeIterator()();
  v7 = v2;
  if (!__CocoaSet.Iterator.next()())
  {
LABEL_21:
    OUTLINED_FUNCTION_22();
    goto LABEL_28;
  }
  v12 = MEMORY[0x1E0DEE9B0] + 8;
  while (1)
  {
    swift_dynamicCast();
    if (-[NSObject type](v31, sel_type) == (id)4)
      break;

LABEL_19:
    v7 = v2;
    if (!__CocoaSet.Iterator.next()())
    {
      v12 = v32;
      goto LABEL_21;
    }
  }
  v3 = v32;
  v13 = *(_QWORD *)(v32 + 16);
  if (*(_QWORD *)(v32 + 24) <= v13)
  {
    specialized _NativeSet.resize(capacity:)(v13 + 1, (uint64_t *)&demangling cache variable for type metadata for _SetStorage<TUScreenSharingRequest>);
    v3 = v32;
  }
  v7 = v31;
  v14 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v3 + 40));
  v15 = v3 + 56;
  v16 = -1 << *(_BYTE *)(v3 + 32);
  v17 = v14 & ~v16;
  v18 = v17 >> 6;
  if (((-1 << v17) & ~*(_QWORD *)(v3 + 56 + 8 * (v17 >> 6))) != 0)
  {
    v19 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v3 + 56 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
LABEL_18:
    *(_QWORD *)(v15 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v19) = v31;
    ++*(_QWORD *)(v3 + 16);
    goto LABEL_19;
  }
  v20 = 0;
  v21 = (unint64_t)(63 - v16) >> 6;
  while (++v18 != v21 || (v20 & 1) == 0)
  {
    v22 = v18 == v21;
    if (v18 == v21)
      v18 = 0;
    v20 |= v22;
    v23 = *(_QWORD *)(v15 + 8 * v18);
    if (v23 != -1)
    {
      v19 = __clz(__rbit64(~v23)) + (v18 << 6);
      goto LABEL_18;
    }
  }
  __break(1u);
LABEL_33:
  swift_once();
LABEL_29:
  v27 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v27, (uint64_t)&static Logger.conversationControls);
  v28 = OUTLINED_FUNCTION_18_13();
  if (OUTLINED_FUNCTION_51_3(v28))
  {
    v29 = (_WORD *)OUTLINED_FUNCTION_7_8();
    OUTLINED_FUNCTION_480(v29);
    OUTLINED_FUNCTION_130(&dword_1BD004000, v7, (os_log_type_t)v2, "Declining all incoming screen share requests", (uint8_t *)v3);
    OUTLINED_FUNCTION_60();
  }

  specialized Sequence.forEach(_:)(v12, v0);
  OUTLINED_FUNCTION_17_22();
}

Swift::Void __swiftcall ConversationControlsManager.presentShareCard(source:)(UIView_optional *source)
{
  uint64_t *v1;
  uint8_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  _QWORD *v7;
  _QWORD *v8;
  char *v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  os_log_type_t v14;
  os_log_type_t v15;
  _WORD *v16;
  uint64_t (**v17)(uint64_t, uint64_t);
  id v18;
  NSObject *v19;
  id v20;
  uint64_t v21;
  uint64_t (**v22)(uint64_t, uint64_t);
  _QWORD *v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  char v35;
  id v36;
  uint64_t v37;
  void *v38;
  Class isa;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t (*v43)(void);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t (*v49)(void);
  uint64_t v50;
  char v51;
  uint64_t v52;
  os_log_type_t v53;
  uint8_t *v54;
  os_log_type_t v55;
  uint8_t *v56;
  uint64_t v57;
  objc_super v58;
  uint64_t v59;
  uint64_t v60;

  OUTLINED_FUNCTION_65_5();
  v59 = v4;
  v60 = v5;
  v6 = v1;
  v8 = v7;
  v9 = (char *)v1 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_defaults;
  v10 = *(NSObject **)((char *)v1 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_defaults);
  v11 = *((_QWORD *)v9 + 1);
  v12 = OUTLINED_FUNCTION_15_6();
  if ((OUTLINED_FUNCTION_6_9(v12, *(uint64_t (**)(uint64_t, uint64_t))(v11 + 672)) & 1) == 0
    || static Platform.current.getter() && static Platform.current.getter() != 1)
  {
    goto LABEL_38;
  }
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v13 = OUTLINED_FUNCTION_17_2();
  v14 = __swift_project_value_buffer(v13, (uint64_t)&static Logger.conversationControls);
  OUTLINED_FUNCTION_11_17();
  v15 = OUTLINED_FUNCTION_18_13();
  if (OUTLINED_FUNCTION_51_3(v15))
  {
    v16 = (_WORD *)OUTLINED_FUNCTION_7_8();
    OUTLINED_FUNCTION_480(v16);
    OUTLINED_FUNCTION_130(&dword_1BD004000, v10, (os_log_type_t)v11, "Presenting share card", v2);
    OUTLINED_FUNCTION_60();
  }

  if (static Platform.current.getter())
  {
    v17 = (uint64_t (**)(uint64_t, uint64_t))type metadata accessor for ConversationControlsShareCardViewController();
    v18 = objc_allocWithZone((Class)v17);
    v19 = OUTLINED_FUNCTION_64_7();
    v20 = ConversationControlsShareCardViewController.init(conversationControlsManager:)((uint64_t)v6);
    v58.receiver = v20;
    v58.super_class = (Class)v17;
    -[UIView_optional setModalPresentationStyle:](&v58, sel_setModalPresentationStyle_, 7);
    ConversationControlsShareCardViewController.modalPresentationStyle.didset();
    v22 = (uint64_t (**)(uint64_t, uint64_t))OUTLINED_FUNCTION_123(v21, sel_popoverPresentationController);
    v23 = (_QWORD *)MEMORY[0x1E0DEEDD8];
    if (v22)
    {
      v17 = v22;
      objc_msgSend(v22, sel_setSourceView_, v8);
      if (v8)
      {
        objc_msgSend(v8, sel_bounds);
        v25 = UIEdgeInsetsInsetRect_0(v24);
      }
      else
      {
        v27 = 0.0;
        v28 = 0.0;
        v25 = 0.0;
        v26 = 0.0;
      }
      objc_msgSend(v17, sel_setSourceRect_, v25, v26, v27, v28);
      objc_msgSend(v17, sel_setDelegate_, v19);
      OUTLINED_FUNCTION_153();
      if (OUTLINED_FUNCTION_81_7(*(uint64_t (**)(void))(v33 + 1048)))
      {
        v34 = OUTLINED_FUNCTION_274_0();
        v35 = OUTLINED_FUNCTION_584(v34, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
        OUTLINED_FUNCTION_10();
        if ((v35 & 1) != 0)
          objc_msgSend(v17, sel_setPermittedArrowDirections_, 4);
      }
      v36 = objc_msgSend(v17, sel_adaptiveSheetPresentationController);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
      v37 = OUTLINED_FUNCTION_15();
      *(_OWORD *)(v37 + 16) = xmmword_1BD6441C0;
      v38 = (void *)objc_opt_self();
      *(_QWORD *)(v37 + 32) = objc_msgSend(v38, sel_mediumDetent);
      *(_QWORD *)(v37 + 40) = objc_msgSend(v38, sel_largeDetent);
      specialized Array._endMutation()();
      type metadata accessor for NSObject(0, &lazy cache variable for type metadata for UISheetPresentationControllerDetent);
      isa = Array._bridgeToObjectiveC()().super.isa;
      OUTLINED_FUNCTION_27();
      objc_msgSend(v36, sel_setDetents_, isa);

      OUTLINED_FUNCTION_373(v40, sel_setPrefersGrabberVisible_);
      objc_msgSend(v36, sel_setLargestUndimmedDetentIdentifier_, *MEMORY[0x1E0DC5380]);
      v41 = OUTLINED_FUNCTION_373((uint64_t)objc_msgSend(v36, sel_setPrefersScrollingExpandsWhenScrolledToEdge_, 0), sel_setPrefersEdgeAttachedInCompactHeight_);
      OUTLINED_FUNCTION_373((uint64_t)v41, sel_setWidthFollowsPreferredContentSizeWhenEdgeAttached_);

    }
    OUTLINED_FUNCTION_153();
    v43 = *(uint64_t (**)(void))(v42 + 1048);
    if (v43()
      && (v44 = OUTLINED_FUNCTION_83_13(),
          v17 = (uint64_t (**)(uint64_t, uint64_t))OUTLINED_FUNCTION_371(v44, v17[1]),
          v45 = OUTLINED_FUNCTION_10(),
          (v17 & 1) != 0))
    {
      if (!((uint64_t (*)(uint64_t))v43)(v45))
      {
LABEL_37:

LABEL_38:
        OUTLINED_FUNCTION_8_0();
        return;
      }
      v46 = OUTLINED_FUNCTION_15_69();
      v47 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v8[2];
    }
    else
    {
      OUTLINED_FUNCTION_153();
      v49 = *(uint64_t (**)(void))(v48 + 1072);
      if (v49()
        && (v50 = OUTLINED_FUNCTION_83_13(),
            v51 = OUTLINED_FUNCTION_371(v50, v17[4]),
            v52 = OUTLINED_FUNCTION_10(),
            (v51 & 1) != 0))
      {
        if (!v8)
        {
          OUTLINED_FUNCTION_26_31();
          v53 = OUTLINED_FUNCTION_232();
          if (OUTLINED_FUNCTION_4_14(v53))
          {
            v54 = (uint8_t *)OUTLINED_FUNCTION_105();
            OUTLINED_FUNCTION_105();
            *(_DWORD *)v54 = 136315138;
            OUTLINED_FUNCTION_311_1((uint64_t)"presentShareCard(source:)", v57);
            OUTLINED_FUNCTION_253_0();
            OUTLINED_FUNCTION_48(&dword_1BD004000, v19, v14, "%s: button cannot be nil on iPad but is nil", v54);
            OUTLINED_FUNCTION_21();
            OUTLINED_FUNCTION_60();
          }

        }
        if (!((uint64_t (*)(uint64_t))v49)(v52))
          goto LABEL_37;
        v46 = OUTLINED_FUNCTION_15_69();
        v47 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v8[17];
      }
      else
      {
        if (!OUTLINED_FUNCTION_81_7(*(uint64_t (**)(void))((*v23 & (uint64_t)v19->isa) + 0x400)))
        {
          OUTLINED_FUNCTION_26_31();
          v55 = OUTLINED_FUNCTION_232();
          if (OUTLINED_FUNCTION_51_3(v55))
          {
            v56 = (uint8_t *)OUTLINED_FUNCTION_105();
            OUTLINED_FUNCTION_105();
            *(_DWORD *)v56 = 136315138;
            OUTLINED_FUNCTION_311_1((uint64_t)"presentShareCard(source:)", v57);
            OUTLINED_FUNCTION_32_4();
            OUTLINED_FUNCTION_450();
            OUTLINED_FUNCTION_48(&dword_1BD004000, v19, (os_log_type_t)v19, "%s: Failed to present share card becuase systemConversationControlsDelegate is nil", v56);
            OUTLINED_FUNCTION_21();
            OUTLINED_FUNCTION_60();
          }

          goto LABEL_37;
        }
        v46 = OUTLINED_FUNCTION_15_69();
        v47 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v8[13];
      }
    }
    OUTLINED_FUNCTION_609(v46, v47);
    OUTLINED_FUNCTION_10();
    goto LABEL_37;
  }
  type metadata accessor for ConversationControlsShareCardHandle();
  OUTLINED_FUNCTION_7_0();
  objc_msgSend(*(id *)(ConversationControlsShareCardHandle.init()() + 16), sel_activateWithOptions_, 0);
  v29 = OUTLINED_FUNCTION_11_1();
  ConversationControlsManager.activeShareCardHandle.setter(v29);
  if (OUTLINED_FUNCTION_131_4(*v6))
  {
    v30 = OUTLINED_FUNCTION_17_49();
    (*(void (**)(uint64_t, uint64_t))(v11 + 40))(v30, v11);
    OUTLINED_FUNCTION_10();
  }
  if (OUTLINED_FUNCTION_35_24(*v6))
  {
    OUTLINED_FUNCTION_15_6();
    OUTLINED_FUNCTION_257_0();
    OUTLINED_FUNCTION_104_6(0xD000000000000015, 0x80000001BD67F540, v31, v32);
    OUTLINED_FUNCTION_10();
  }
  swift_release();
}

void ConversationControlsManager.isShownAboveCoverSheet.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  if (OUTLINED_FUNCTION_109_9(*v1))
  {
    v2 = OUTLINED_FUNCTION_67_12();
    OUTLINED_FUNCTION_39_0(v2, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 64));
    OUTLINED_FUNCTION_10();
  }
  OUTLINED_FUNCTION_0();
}

void ConversationControlsManager.startScreenShareWithCountdown(completion:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  char *v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  os_log_type_t v12;
  _WORD *v13;
  NSObject *v14;

  v3 = v0;
  OUTLINED_FUNCTION_572();
  v4 = (char *)v0 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_defaults;
  v5 = *(uint8_t **)((char *)v0 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_defaults);
  v6 = *((_QWORD *)v4 + 1);
  v7 = OUTLINED_FUNCTION_15_6();
  if ((OUTLINED_FUNCTION_52(v7, *(uint64_t (**)(uint64_t, uint64_t))(v6 + 704)) & 1) != 0)
  {
    v8 = OUTLINED_FUNCTION_7_0();
    OUTLINED_FUNCTION_251();
    v9 = (_QWORD *)OUTLINED_FUNCTION_15();
    v9[2] = v8;
    v9[3] = v2;
    v9[4] = v1;
    swift_retain();
    v10 = OUTLINED_FUNCTION_315_0();
    _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v10);
    specialized ConversationControlsManager.promptForReplaceAlertIfNeeded(_:)(v3, (void (*)(void))partial apply for closure #1 in ConversationControlsManager.startScreenShareWithCountdown(completion:), (uint64_t)v9);
    swift_release();
  }
  else
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v11 = OUTLINED_FUNCTION_17_2();
    v14 = OUTLINED_FUNCTION_3(v11, (uint64_t)&static Logger.conversationControls);
    v12 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_108_4(v14))
    {
      v13 = (_WORD *)OUTLINED_FUNCTION_7_8();
      OUTLINED_FUNCTION_52_3(v13);
      OUTLINED_FUNCTION_130(&dword_1BD004000, v14, v12, "Ignoring starting screen sharing. Screen sharing is not allowed.", v5);
      OUTLINED_FUNCTION_60();
    }

  }
}

void ConversationControlsManager.requestScreenSharingPicker(with:)()
{
  NSObject *v0;
  os_log_type_t v1;
  uint8_t *v2;
  uint64_t v3;
  os_log_type_t v4;
  _WORD *v5;

  OUTLINED_FUNCTION_446();
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v3 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v3, (uint64_t)&static Logger.conversationControls);
  v4 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_51_3(v4))
  {
    v5 = (_WORD *)OUTLINED_FUNCTION_7_8();
    OUTLINED_FUNCTION_220_0(v5);
    OUTLINED_FUNCTION_130(&dword_1BD004000, v0, v1, "requesting screen share picker.", v2);
    OUTLINED_FUNCTION_60();
  }

  ConversationController.requestScreenSharingPicker(with:)();
  OUTLINED_FUNCTION_91();
}

void ConversationControlsManager.requestScreenSharingSession(for:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(_QWORD);
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;

  OUTLINED_FUNCTION_93();
  OUTLINED_FUNCTION_446();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  v5 = OUTLINED_FUNCTION_58_5();
  type metadata accessor for Participant(v5);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_16_2();
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v7 = OUTLINED_FUNCTION_17_2();
  v8 = __swift_project_value_buffer(v7, (uint64_t)&static Logger.conversationControls);
  outlined init with copy of ConversationControlsAppLaunchButtonType(v0, v1, type metadata accessor for Participant);
  Logger.logObject.getter();
  v9 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_4_11(v9))
  {
    v10 = (uint8_t *)OUTLINED_FUNCTION_105();
    v19 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v10 = 136315138;
    v11 = OUTLINED_FUNCTION_318();
    outlined init with copy of ConversationControlsAppLaunchButtonType(v11, v12, v13);
    OUTLINED_FUNCTION_83_7(v2, 0);
    specialized >> prefix<A>(_:)(v2);
    v15 = v14;
    v17 = v16;
    OUTLINED_FUNCTION_219(v14, &demangling cache variable for type metadata for Participant?);
    v18 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v15, v17, &v19);
    OUTLINED_FUNCTION_443(v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    outlined destroy of AccountUpdateNotice(v1, type metadata accessor for Participant);
    OUTLINED_FUNCTION_48(&dword_1BD004000, v8, v3, "requesting screen share for participant %s.", v10);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }
  outlined destroy of AccountUpdateNotice(v1, type metadata accessor for Participant);

  ConversationController.requestScreenSharingSession(for:)();
  OUTLINED_FUNCTION_52_1();
}

uint64_t ConversationControlsManager.heldCalls()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  uint64_t result;
  uint64_t v8;
  _QWORD v9[12];
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_442();
  v10 = v0;
  v11 = v1;
  v2 = OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_299();
  v3 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v3 + 16) = partial apply for closure #1 in ConversationControlsManager.heldCalls();
  *(_QWORD *)(v3 + 24) = v2;
  v9[4] = partial apply for thunk for @callee_guaranteed (@guaranteed TUCall) -> (@unowned Bool);
  v9[5] = v3;
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 1107296256;
  v9[2] = thunk for @escaping @callee_guaranteed (@guaranteed TUCall) -> (@unowned Bool);
  v9[3] = &block_descriptor_47;
  v4 = _Block_copy(v9);
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  v5 = OUTLINED_FUNCTION_17_22();
  v6 = OUTLINED_FUNCTION_50_11(v5, sel_callsPassingTest_);
  _Block_release(v4);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  result = OUTLINED_FUNCTION_43();
  if ((v4 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_59(result, (unint64_t *)&lazy cache variable for type metadata for TUCall);
    v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
    OUTLINED_FUNCTION_19();

    return v8;
  }
  return result;
}

void specialized RangeReplaceableCollection<>.removeLast()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  uint64_t v4;

  OUTLINED_FUNCTION_214_0();
  if (*(_QWORD *)(v0 + 16))
  {
    specialized Array._customRemoveLast()((uint64_t)&v3);
    if (v4)
    {
      OUTLINED_FUNCTION_567(&v3);
    }
    else
    {
      OUTLINED_FUNCTION_305(v1, (uint64_t *)&demangling cache variable for type metadata for Notice?, v2);
      specialized Array.remove(at:)();
    }
    OUTLINED_FUNCTION_8_15();
  }
  else
  {
    __break(1u);
  }
}

void ConversationControlsManager.participant(with:)()
{
  ConversationController.participant(with:)();
  OUTLINED_FUNCTION_0();
}

{
  ConversationController.participant(with:)();
  OUTLINED_FUNCTION_0();
}

uint64_t ConversationControlsManager.maximumLayoutMode.getter()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  OUTLINED_FUNCTION_206();
  OUTLINED_FUNCTION_410(v2);
  v3 = OUTLINED_FUNCTION_15_69();
  v4 = OUTLINED_FUNCTION_101(v3, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 208));
  OUTLINED_FUNCTION_10();
  if ((v4 & 1) != 0)
    return 3;
  OUTLINED_FUNCTION_10_21();
  if ((OUTLINED_FUNCTION_54_0(*(uint64_t (**)(void))(v5 + 640)) & 1) != 0 && (OUTLINED_FUNCTION_247_0() & 1) == 0)
    return 3;
  if ((OUTLINED_FUNCTION_247_0() & 1) == 0)
    return 4;
  OUTLINED_FUNCTION_74_5();
  v6 = OUTLINED_FUNCTION_15_69();
  v7 = OUTLINED_FUNCTION_101(v6, (uint64_t (*)(uint64_t, uint64_t))demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>>);
  OUTLINED_FUNCTION_10();
  if ((v7 & 1) == 0)
    return 4;
  OUTLINED_FUNCTION_59((uint64_t)objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_callCenter), sel_currentCallGroups), (unint64_t *)&lazy cache variable for type metadata for TUCallGroup);
  OUTLINED_FUNCTION_73_8();
  OUTLINED_FUNCTION_37_0();
  if (v0 >> 62)
  {
    OUTLINED_FUNCTION_124();
    v8 = _CocoaArrayWrapper.endIndex.getter();
    OUTLINED_FUNCTION_13_3();
  }
  else
  {
    v8 = *(_QWORD *)((v0 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  OUTLINED_FUNCTION_13_3();
  if (v8 == 1)
    return 3;
  else
    return 4;
}

void ConversationControlsManager.visibleParticipants.getter()
{
  ConversationController.visibleParticipants.getter();
  OUTLINED_FUNCTION_0();
}

void ConversationControlsManager.isOneToOneConversation.getter()
{
  uint64_t *v0;
  void *v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  v1 = (void *)OUTLINED_FUNCTION_133_0(*v0);
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v1, sel_mergedRemoteMembers);
    OUTLINED_FUNCTION_287();
    OUTLINED_FUNCTION_400(&lazy protocol witness table cache variable for type TUConversationMember and conformance NSObject);
    OUTLINED_FUNCTION_271_1();
    OUTLINED_FUNCTION_14_18();
    v4 = specialized Set.count.getter(&lazy cache variable for type metadata for TUConversationMember);
    v5 = OUTLINED_FUNCTION_2_1();
    if (v4 == 1)
    {
      v6 = OUTLINED_FUNCTION_123(v5, sel_mergedActiveRemoteParticipants);
      OUTLINED_FUNCTION_287();
      OUTLINED_FUNCTION_400(&lazy protocol witness table cache variable for type TUConversationParticipant and conformance NSObject);
      OUTLINED_FUNCTION_271_1();
      OUTLINED_FUNCTION_14_18();
      specialized Set.count.getter(&lazy cache variable for type metadata for TUConversationParticipant);
      OUTLINED_FUNCTION_2_1();
    }

  }
  OUTLINED_FUNCTION_91();
}

void thunk for @escaping @callee_guaranteed (@unowned Bool, @guaranteed Error?) -> ()(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v5)(uint64_t, void *);
  id v6;

  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  OUTLINED_FUNCTION_11_1();
  v6 = a3;
  v5(a2, a3);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_15_9(v6);
}

uint64_t specialized _resumeUnsafeContinuation<A>(_:_:)(uint64_t a1, uint64_t a2)
{
  **(_QWORD **)(*(_QWORD *)(a1 + 64) + 40) = a2;
  return swift_continuation_resume();
}

uint64_t specialized _resumeUnsafeContinuation<A>(_:_:)(uint64_t a1, char a2)
{
  **(_BYTE **)(*(_QWORD *)(a1 + 64) + 40) = a2;
  return swift_continuation_resume();
}

Swift::Void __swiftcall ConversationControlsManager.openPTTApp()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_206();
  OUTLINED_FUNCTION_410(v1);
  v2 = OUTLINED_FUNCTION_15_69();
  v3 = OUTLINED_FUNCTION_101(v2, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 216));
  OUTLINED_FUNCTION_10();
  if ((v3 & 1) != 0
    && (OUTLINED_FUNCTION_74_5(),
        v4 = OUTLINED_FUNCTION_15_69(),
        v5 = (void *)OUTLINED_FUNCTION_187(v4),
        OUTLINED_FUNCTION_10(),
        outlined bridged method (ob) of @objc TUConversationLink.displayName.getter(v5, (SEL *)&selRef_bundleIdentifier),
        v7))
  {
    ConversationControlsManager.openApp(withBundleIdentifier:)(*(Swift::String *)&v6);
    OUTLINED_FUNCTION_149_4();
  }
  else
  {
    OUTLINED_FUNCTION_18();
  }
}

void ConduitLagunaNoticeManager.pushSession(lightweightHandoff:selectedActivity:completion:)(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, os_log_t log, uint64_t a10, int a11, os_log_type_t type, uint64_t a13, uint64_t a14, id a15, uint64_t a16, uint64_t aBlock, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint8_t *v40;
  NSObject *v41;
  NSObject *v42;
  uint8_t *v43;
  uint8_t *v44;
  void *v45;
  void *v46;
  char v47;
  char v48;
  uint64_t *v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  os_log_type_t v54;
  _WORD *v55;
  uint64_t v56;
  os_log_type_t v57;
  _WORD *v58;
  void *v59;
  void *v60;
  id v61;
  uint64_t v62;
  id v63;
  NSObject *v64;
  id v65;
  NSObject *v66;
  os_log_type_t v67;
  uint64_t v68;
  id v69;
  id v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  NSObject *v76;
  id v77;
  void *v78;
  void *v79;
  id v80;
  id v81;
  uint64_t v82;
  void *v83;
  NSObject *v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  NSObject *v88;
  void *v89;
  uint64_t v90[19];
  uint64_t v91;
  uint64_t v92;

  OUTLINED_FUNCTION_438();
  v91 = v38;
  v92 = v39;
  v40 = v37;
  v42 = v41;
  v44 = v43;
  v46 = v45;
  v48 = v47;
  v49 = (uint64_t *)MEMORY[0x1C3B752C0](&v37[OBJC_IVAR____TtC15ConversationKit26ConduitLagunaNoticeManager_manager]);
  if (v49 && (v37 = (uint8_t *)v49, v50 = (void *)OUTLINED_FUNCTION_133_0(*v49), v37, v50))
  {

    v51 = (uint64_t)&v40[OBJC_IVAR____TtC15ConversationKit26ConduitLagunaNoticeManager_pushBannerInfo];
    OUTLINED_FUNCTION_2_0();
    v52 = OUTLINED_FUNCTION_672();
    if (__swift_getEnumTagSinglePayload(v51, 1, v52))
    {
      if (one-time initialization token for conversationControls != -1)
        swift_once();
      v53 = OUTLINED_FUNCTION_17_2();
      OUTLINED_FUNCTION_3(v53, (uint64_t)&static Logger.conversationControls);
      v54 = OUTLINED_FUNCTION_37_4();
      if (OUTLINED_FUNCTION_13_0(v54))
      {
        v55 = (_WORD *)OUTLINED_FUNCTION_7_8();
        OUTLINED_FUNCTION_124_3(v55);
        OUTLINED_FUNCTION_130(&dword_1BD004000, v42, (os_log_type_t)v51, "pushSession - no notice information available. Unsure where to push to.", v44);
        OUTLINED_FUNCTION_60();
      }

    }
    else
    {
      v59 = *(void **)(v51 + *(int *)(v52 + 20));
      v60 = (void *)one-time initialization token for conversationControls;
      v61 = v59;
      if (v60 != (void *)-1)
        swift_once();
      v62 = OUTLINED_FUNCTION_17_2();
      __swift_project_value_buffer(v62, (uint64_t)&static Logger.conversationControls);
      v63 = v46;
      v64 = OUTLINED_FUNCTION_582();
      v65 = v60;
      v66 = v64;
      OUTLINED_FUNCTION_56_17();
      v67 = OUTLINED_FUNCTION_12_0();
      if (OUTLINED_FUNCTION_41_3(v67))
      {
        v68 = OUTLINED_FUNCTION_105();
        v86 = (_QWORD *)OUTLINED_FUNCTION_105();
        v87 = OUTLINED_FUNCTION_105();
        v90[0] = v87;
        *(_DWORD *)v68 = 138412802;
        v89 = v65;
        v69 = OUTLINED_FUNCTION_123(v87, sel_deviceHandle);
        OUTLINED_FUNCTION_544();
        *v86 = v69;

        *(_WORD *)(v68 + 12) = 1024;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v68 + 18) = 2080;
        v70 = v89;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TUConversationActivity?);
        v71 = String.init<A>(describing:)();
        getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v71, v72, v90);
        OUTLINED_FUNCTION_544();

        OUTLINED_FUNCTION_27();
        _os_log_impl(&dword_1BD004000, v64, (os_log_type_t)v60, "pushSession - deviceHandle %@ - lightweightHandoff %{BOOL}d - selectedActivity %s", (uint8_t *)v68, 0x1Cu);
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
        OUTLINED_FUNCTION_21();
        OUTLINED_FUNCTION_60();
      }

      v74 = v48 & 1;
      if ((v48 & 1) != 0)
        v75 = 1;
      else
        v75 = 2;
      OUTLINED_FUNCTION_59(v73, &lazy cache variable for type metadata for TUNearbySuggestionResult);
      v76 = v66;
      v77 = v65;
      v78 = (void *)OUTLINED_FUNCTION_153_1();
      v80 = TUNearbySuggestionResult.__allocating_init(suggestion:selectedActivity:type:)(v78, v79, v75);
      v81 = objc_msgSend(*(id *)&v40[OBJC_IVAR____TtC15ConversationKit26ConduitLagunaNoticeManager_callCenter], sel_neighborhoodActivityConduit);
      v82 = OUTLINED_FUNCTION_15();
      *(_QWORD *)(v82 + 16) = v76;
      *(_BYTE *)(v82 + 24) = v74;
      *(_QWORD *)(v82 + 32) = v44;
      *(_QWORD *)(v82 + 40) = v42;
      v90[4] = (uint64_t)partial apply for closure #1 in ConduitLagunaNoticeManager.pushSession(lightweightHandoff:selectedActivity:completion:);
      v90[5] = v82;
      v90[0] = MEMORY[0x1E0C809B0];
      v90[1] = 1107296256;
      v90[2] = (uint64_t)thunk for @escaping @callee_guaranteed (@unowned Bool, @guaranteed Error?) -> ();
      v90[3] = (uint64_t)&block_descriptor_13_1;
      v83 = _Block_copy(v90);
      v84 = v76;
      v85 = OUTLINED_FUNCTION_124_0();
      _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v85);
      OUTLINED_FUNCTION_74();
      objc_msgSend(v81, sel_respondToSuggestionWithResult_completion_, v80, v83);
      _Block_release(v83);

    }
    OUTLINED_FUNCTION_243();
  }
  else
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v56 = OUTLINED_FUNCTION_17_2();
    v88 = OUTLINED_FUNCTION_3(v56, (uint64_t)&static Logger.conversationControls);
    v57 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_108_4(v88))
    {
      v58 = (_WORD *)OUTLINED_FUNCTION_7_8();
      OUTLINED_FUNCTION_52_3(v58);
      OUTLINED_FUNCTION_130(&dword_1BD004000, v88, v57, "pushSession - no conversation available .-.", v37);
      OUTLINED_FUNCTION_60();
    }

  }
}

void ConversationControlsManager.approveAuthorizationRequest(for:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t *v3;
  os_log_type_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  NSObject *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t (**v24)(uint64_t, uint64_t);
  char v25;
  uint64_t v26;
  _QWORD v27[4];

  OUTLINED_FUNCTION_93();
  v5 = v1;
  v7 = v6;
  v8 = OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_47_1();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_300_0();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_59(v14, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v3 = OUTLINED_FUNCTION_7_22();
  OUTLINED_FUNCTION_131_2(*MEMORY[0x1E0DEF740], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 104));
  v15 = OUTLINED_FUNCTION_132_2();
  OUTLINED_FUNCTION_29_2(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  if ((v15 & 1) != 0)
  {
    if (one-time initialization token for conversationControls == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  v16 = OUTLINED_FUNCTION_17_2();
  __swift_project_value_buffer(v16, (uint64_t)&static Logger.conversationControls);
  (*(void (**)(char *, uint64_t, uint64_t))(v0 + 16))(v11, v7, v8);
  Logger.logObject.getter();
  v17 = OUTLINED_FUNCTION_638();
  if (OUTLINED_FUNCTION_250(v17))
  {
    v18 = (uint8_t *)OUTLINED_FUNCTION_105();
    v19 = OUTLINED_FUNCTION_105();
    v27[1] = v5;
    v27[3] = v19;
    v27[0] = v7;
    *(_DWORD *)v18 = 136315138;
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
    v20 = dispatch thunk of CustomStringConvertible.description.getter();
    v22 = OUTLINED_FUNCTION_45_5(v20, v21);
    OUTLINED_FUNCTION_443(v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_27();
    OUTLINED_FUNCTION_40_0(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
    OUTLINED_FUNCTION_48(&dword_1BD004000, v12, v4, "approveLetMeInButtonTapped for participant with ID %s", v18);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }
  OUTLINED_FUNCTION_40_0(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));

  ConversationController.approve(_:)();
  v23 = (void *)specialized ControlMenuDataSource.attachmentPoint(for:configuration:)();
  v26 = ConversationControlsManager.notifyDelegates(about:forceUpdate:)(v23, v24, v25);
  (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v5) + 0x9B0))(v26);
  OUTLINED_FUNCTION_52_1();
}

void ConversationControlsManager.rejectAuthorizationRequest(for:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  NSObject *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t, uint64_t);
  os_log_type_t v19;
  uint64_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t (**v27)(uint64_t, uint64_t);
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[6];

  OUTLINED_FUNCTION_93();
  v4 = v1;
  v6 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_300_0();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_47_1();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_77_1();
  OUTLINED_FUNCTION_59(v15, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v3 = OUTLINED_FUNCTION_7_22();
  OUTLINED_FUNCTION_72_12(*MEMORY[0x1E0DEF740], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 104));
  v16 = _dispatchPreconditionTest(_:)();
  OUTLINED_FUNCTION_537(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  if ((v16 & 1) != 0)
  {
    if (one-time initialization token for conversationControls == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  v17 = OUTLINED_FUNCTION_17_2();
  __swift_project_value_buffer(v17, (uint64_t)&static Logger.conversationControls);
  OUTLINED_FUNCTION_660();
  v32[3] = v6;
  OUTLINED_FUNCTION_291((uint64_t)v12, v6, v18);
  Logger.logObject.getter();
  v19 = OUTLINED_FUNCTION_583();
  if (OUTLINED_FUNCTION_241(v19))
  {
    v20 = OUTLINED_FUNCTION_105();
    v32[2] = v4;
    v21 = (uint8_t *)v20;
    v22 = OUTLINED_FUNCTION_105();
    v32[1] = v9;
    v32[5] = v22;
    *(_DWORD *)v21 = 136315138;
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
    v23 = dispatch thunk of CustomStringConvertible.description.getter();
    v25 = OUTLINED_FUNCTION_45_5(v23, v24);
    OUTLINED_FUNCTION_61_0(v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_27();
    OUTLINED_FUNCTION_59_4(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    OUTLINED_FUNCTION_48(&dword_1BD004000, v13, (os_log_type_t)v6, "dismissLetMeInButtonTapped for participant with ID %s", v21);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }
  OUTLINED_FUNCTION_59_4(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));

  ConversationController.dismiss(_:)();
  v26 = (void *)specialized ControlMenuDataSource.attachmentPoint(for:configuration:)();
  ConversationControlsManager.notifyDelegates(about:forceUpdate:)(v26, v27, v28);
  v29 = OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_77_0((uint64_t)v9, v30, v31, v29);
  (*(void (**)(char *))((*MEMORY[0x1E0DEEDD8] & *v4) + 0x998))(v9);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v9, &demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_52_1();
}

char *ConversationControlsManager.__allocating_init(activeCall:)(void *a1)
{
  uint64_t v1;
  id v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  void *v8;
  char v9;
  char v10;
  char *v11;

  v3 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  if (one-time initialization token for shared != -1)
    swift_once();
  v4 = (void *)static PlaceholderCallCenter.shared;
  v5 = objc_allocWithZone((Class)type metadata accessor for CallCenter());
  v6 = v4;
  v7 = (void *)OUTLINED_FUNCTION_630();
  v11 = CallCenter.init(callCenter:placeholderCallCenter:shouldRegisterForMediaControllerChanges:shouldRegisterForReactionsControllerChanges:)(v7, v8, v9, v10);
  return specialized ConversationControlsManager.__allocating_init(activeCall:callCenter:)(a1, v11, v1);
}

void ConversationControlsManager.participantStateDidChange.getter()
{
  OUTLINED_FUNCTION_57_0();
  OUTLINED_FUNCTION_5_48(&lazy protocol witness table cache variable for type PassthroughSubject<(), Never> and conformance PassthroughSubject<A, B>);
  OUTLINED_FUNCTION_262_0();
  OUTLINED_FUNCTION_45_0();
}

void ConversationControlsManager.setLocalAudio(muted:bluetoothAudioFormat:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  OUTLINED_FUNCTION_93();
  OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_19_11();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_59(v3, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v0 = OUTLINED_FUNCTION_7_22();
  OUTLINED_FUNCTION_131_2(*MEMORY[0x1E0DEF740], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 104));
  v4 = OUTLINED_FUNCTION_132_2();
  OUTLINED_FUNCTION_29_2(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  if ((v4 & 1) != 0)
  {
    if (one-time initialization token for conversationControls == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  v5 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v5, (uint64_t)&static Logger.conversationControls);
  v6 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_41_3(v6))
  {
    v7 = OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_105();
    *(_DWORD *)v7 = 67109378;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v7 + 8) = 2080;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Int?);
    v8 = String.init<A>(describing:)();
    OUTLINED_FUNCTION_45_5(v8, v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_58_1();
    OUTLINED_FUNCTION_636(&dword_1BD004000, v4, (os_log_type_t)v0, "setLocalAudio, muted:%{BOOL}d, bluetoothAudioFormat:%s");
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

  ConversationController.setLocalAudio(muted:bluetoothAudioFormat:)();
  OUTLINED_FUNCTION_52_1();
}

#error "1BD25E128: call analysis failed (funcsize=78)"

void ConversationControlsManager.viewActivity(_:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;

  OUTLINED_FUNCTION_93();
  v4 = v0;
  v6 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Collaboration?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v7);
  v8 = OUTLINED_FUNCTION_101_0();
  type metadata accessor for Collaboration(v8);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_41_1();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_77_1();
  OUTLINED_FUNCTION_59(v14, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v2 = OUTLINED_FUNCTION_7_22();
  OUTLINED_FUNCTION_72_12(*MEMORY[0x1E0DEF740], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 104));
  v15 = _dispatchPreconditionTest(_:)();
  OUTLINED_FUNCTION_537(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  if ((v15 & 1) != 0)
  {
    if (one-time initialization token for conversationControls == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  v16 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v16, (uint64_t)&static Logger.conversationControls);
  v17 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_41_3(v17))
  {
    v18 = (uint8_t *)OUTLINED_FUNCTION_7_8();
    *(_WORD *)v18 = 0;
    OUTLINED_FUNCTION_130(&dword_1BD004000, v15, v12, "viewCurrentActivity", v18);
    OUTLINED_FUNCTION_60();
  }

  outlined init with copy of RadarReporting(v6, (uint64_t)&v29);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Activity);
  if (OUTLINED_FUNCTION_97())
  {
    OUTLINED_FUNCTION_83_7(v1, 0);
    v19 = OUTLINED_FUNCTION_318();
    outlined init with take of StagedCollaboration(v19, v20, type metadata accessor for Collaboration);
    ConversationControlsManager.presentCollaboration(_:completion:)((uint64_t)v11, 0, 0);
    OUTLINED_FUNCTION_94((uint64_t)v11);
  }
  else
  {
    v21 = OUTLINED_FUNCTION_83_7(v1, 1);
    OUTLINED_FUNCTION_30_7(v21, &demangling cache variable for type metadata for Collaboration?);
    v22 = OUTLINED_FUNCTION_7_0();
    OUTLINED_FUNCTION_251();
    v23 = *(_QWORD *)(v6 + 24);
    v24 = *(_QWORD *)(v6 + 32);
    v25 = (_QWORD *)OUTLINED_FUNCTION_38_21();
    v27 = __swift_project_boxed_opaque_existential_1(v25, v26);
    partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
    specialized ConversationControlsManager.presentActivity(activity:completion:)((uint64_t)v27, (uint64_t)partial apply for closure #1 in ConversationControlsManager.viewActivity(_:), v22, v4, v23, v24);
    OUTLINED_FUNCTION_23_0();
  }
  OUTLINED_FUNCTION_52_1();
}

void ConversationControlsManager.buzz(participantIdentifier:)()
{
  ConversationControlsManager.buzz(participantIdentifier:)();
}

{
  uint8_t *v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  void (*v3)(uint64_t);
  const char *v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  os_log_type_t v13;
  _WORD *v14;

  OUTLINED_FUNCTION_96();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v8 = OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_19_11();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_59(v10, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *(_QWORD *)v0 = OUTLINED_FUNCTION_7_22();
  OUTLINED_FUNCTION_131_2(*MEMORY[0x1E0DEF740], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 104));
  v11 = OUTLINED_FUNCTION_132_2();
  OUTLINED_FUNCTION_29_2(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  if ((v11 & 1) != 0)
  {
    if (one-time initialization token for conversationControls == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  v12 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v12, (uint64_t)&static Logger.conversationControls);
  v13 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_7_9(v13))
  {
    v14 = (_WORD *)OUTLINED_FUNCTION_7_8();
    OUTLINED_FUNCTION_581(v14);
    OUTLINED_FUNCTION_130(&dword_1BD004000, v11, v8, v5, v0);
    OUTLINED_FUNCTION_60();
  }

  v3(v7);
  OUTLINED_FUNCTION_65_1();
}

void ConversationControlsManager.approve(participantIdentifier:)()
{
  ConversationControlsManager.buzz(participantIdentifier:)();
}

void ConversationControlsManager.dismiss(participantIdentifier:)()
{
  ConversationControlsManager.buzz(participantIdentifier:)();
}

void ConversationControlsManager.canKick(participantIdentifier:)()
{
  NSObject *v0;
  os_log_type_t v1;
  uint8_t *v2;
  uint64_t v3;
  uint64_t v4;
  os_log_type_t v5;
  _WORD *v6;
  uint64_t v7;

  OUTLINED_FUNCTION_446();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_16_2();
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v4 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v4, (uint64_t)&static Logger.conversationControls);
  v5 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_4_14(v5))
  {
    v6 = (_WORD *)OUTLINED_FUNCTION_7_8();
    OUTLINED_FUNCTION_480(v6);
    OUTLINED_FUNCTION_130(&dword_1BD004000, v0, v1, "kickParticipant", v2);
    OUTLINED_FUNCTION_60();
  }

  ConversationController.participant(with:)();
  v7 = ConversationController.canKick(_:)();
  OUTLINED_FUNCTION_30_7(v7, &demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_91();
}

Swift::Void __swiftcall ConversationControlsManager.toggleMultiwayLayout()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  os_log_type_t v7;
  _WORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_5_53();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_16_2();
  OUTLINED_FUNCTION_59(v4, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v5 = OUTLINED_FUNCTION_7_22();
  *v2 = v5;
  OUTLINED_FUNCTION_4_57(v5, *MEMORY[0x1E0DEF740]);
  OUTLINED_FUNCTION_16_36();
  OUTLINED_FUNCTION_0_4();
  if ((v0 & 1) != 0)
  {
    if (one-time initialization token for conversationControls == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  v6 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v6, (uint64_t)&static Logger.conversationControls);
  v7 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_5_3(v7))
  {
    v8 = (_WORD *)OUTLINED_FUNCTION_7_8();
    OUTLINED_FUNCTION_47_2(v8);
    OUTLINED_FUNCTION_2_5(&dword_1BD004000, v9, v10, "toggleMultiwayLayout");
    OUTLINED_FUNCTION_60();
  }

  if (OUTLINED_FUNCTION_54_0(*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x430)))
  {
    v11 = OUTLINED_FUNCTION_15_69();
    (*(void (**)(uint64_t))(v1 + 96))(v11);
    OUTLINED_FUNCTION_10();
  }
  else
  {
    ConversationControlsManager.handleToggleLayoutAction()();
  }
  OUTLINED_FUNCTION_91();
}

Swift::Void __swiftcall ConversationControlsManager.toggleCaptionsButtonTapped()()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  os_log_type_t v6;
  _WORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_5_53();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_16_2();
  OUTLINED_FUNCTION_59(v3, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v4 = OUTLINED_FUNCTION_7_22();
  *v1 = v4;
  OUTLINED_FUNCTION_4_57(v4, *MEMORY[0x1E0DEF740]);
  OUTLINED_FUNCTION_16_36();
  OUTLINED_FUNCTION_0_4();
  if ((v0 & 1) != 0)
  {
    if (one-time initialization token for conversationControls == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  v5 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v5, (uint64_t)&static Logger.conversationControls);
  v6 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_5_3(v6))
  {
    v7 = (_WORD *)OUTLINED_FUNCTION_7_8();
    OUTLINED_FUNCTION_47_2(v7);
    OUTLINED_FUNCTION_2_5(&dword_1BD004000, v8, v9, "toggleCaptionsButtonTapped");
    OUTLINED_FUNCTION_60();
  }

  if (OUTLINED_FUNCTION_54_0(*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x430)))
  {
    v11 = v10;
    v12 = OUTLINED_FUNCTION_15_6();
    OUTLINED_FUNCTION_39_0(v12, *(uint64_t (**)(uint64_t, uint64_t))(v11 + 104));
    OUTLINED_FUNCTION_10();
  }
  OUTLINED_FUNCTION_91();
}

void ConversationControlsManager.kick(participant:)()
{
  NSObject *v0;
  os_log_type_t v1;
  uint8_t *v2;
  uint64_t v3;
  os_log_type_t v4;
  _WORD *v5;

  OUTLINED_FUNCTION_446();
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v3 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v3, (uint64_t)&static Logger.conversationControls);
  v4 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_51_3(v4))
  {
    v5 = (_WORD *)OUTLINED_FUNCTION_7_8();
    OUTLINED_FUNCTION_220_0(v5);
    OUTLINED_FUNCTION_130(&dword_1BD004000, v0, v1, "kickParticipant", v2);
    OUTLINED_FUNCTION_60();
  }

  ConversationController.kick(_:)();
  OUTLINED_FUNCTION_91();
}

void ConversationControlsManager.shareableLink(completionHandler:)(uint64_t a1, uint64_t a2)
{
  ConversationController.shareableLink(completionHandler:)(a1, a2);
  OUTLINED_FUNCTION_0();
}

void protocol witness for ShareCardViewModelProviding.screenSharingAvailablePublisher.getter in conformance ConversationControlsManager()
{
  _QWORD **v0;

  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & **v0) + 0x678))();
  OUTLINED_FUNCTION_0();
}

void protocol witness for ShareCardViewModelProviding.remoteParticipants.getter in conformance ConversationControlsManager()
{
  _QWORD **v0;

  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & **v0) + 0x908))();
  OUTLINED_FUNCTION_0();
}

void protocol witness for ShareCardViewModelProviding.conversationIsAVLess.getter in conformance ConversationControlsManager()
{
  uint64_t **v0;

  OUTLINED_FUNCTION_667(**v0);
  OUTLINED_FUNCTION_0();
}

uint64_t SystemBannerPresenter.presentBanner(as:type:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(a4 + 16))(a1, a2, 0, 0, a3, a4);
}

uint64_t InCallConversationControlsDelegate.updateInCallConversationControls(type:showControlsIfHidden:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return OUTLINED_FUNCTION_372(a1, a2, a3, a3, a4, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(a4 + 80));
}

uint64_t InCallConversationControlsDelegate.showInCallConversationControls(type:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return OUTLINED_FUNCTION_372(a1, 1, a3, a2, a3, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(a3 + 80));
}

uint64_t ControlsHUDUpdate.type.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return outlined init with copy of ConversationControlsType(v1, a1);
}

uint64_t ControlsHUDUpdate.replacingNotice.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 41);
}

uint64_t ControlsHUDUpdate.showControlsIfHidden.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 42);
}

uint64_t ControlsHUDUpdate.sizeClass.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 48);
}

void ControlsHUDUpdate.init(type:replacingNotice:showControlsIfHidden:)(__int128 *a1@<X0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X8>)
{
  outlined init with take of ConversationControlsType(a1, (_OWORD *)a4);
  *(_BYTE *)(a4 + 41) = a2;
  *(_BYTE *)(a4 + 42) = a3;
  *(_QWORD *)(a4 + 48) = 0;
  OUTLINED_FUNCTION_18();
}

uint64_t one-time initialization function for cnk_acceptCallButtonTapped()
{
  uint64_t result;

  result = MEMORY[0x1C3B72E00](0xD000000000000026, 0x80000001BD680750);
  static NSNotificationName.cnk_acceptCallButtonTapped = result;
  return result;
}

id static NSNotificationName.cnk_acceptCallButtonTapped.getter()
{
  if (one-time initialization token for cnk_acceptCallButtonTapped != -1)
    swift_once();
  return (id)static NSNotificationName.cnk_acceptCallButtonTapped;
}

void ConversationControlsManager.activeCall.getter()
{
  OUTLINED_FUNCTION_2_0();
  swift_unknownObjectRetain();
  OUTLINED_FUNCTION_32();
}

uint64_t ConversationControlsManager.callUUID.getter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_214_0();
  OUTLINED_FUNCTION_27_1(v0);
  v1 = OUTLINED_FUNCTION_15_69();
  OUTLINED_FUNCTION_401(v1);
  return OUTLINED_FUNCTION_9_8();
}

id ConversationControlsManager.callCenter.getter()
{
  return OUTLINED_FUNCTION_7(OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_callCenter);
}

void ConversationControlsManager.hasMultipleCalls.getter(uint64_t a1)
{
  if ((TUCallCenter.wantsCallWaiting.getter(a1) & 1) == 0)
    TUCallCenter.hasMultipleActiveCalls.getter();
  OUTLINED_FUNCTION_0();
}

void ConversationControlsManager.activeBannerIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_27_1(*v0);
  v1 = OUTLINED_FUNCTION_67_12();
  OUTLINED_FUNCTION_520(v1);
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_65_2();
  OUTLINED_FUNCTION_18();
}

void ConversationControlsManager.conversation.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_674();
  if (v3)
  {
    v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Conversation);
    OUTLINED_FUNCTION_59(v2, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
    OUTLINED_FUNCTION_97();
  }
  else
  {
    OUTLINED_FUNCTION_305(v0, &demangling cache variable for type metadata for Conversation?, v1);
  }
  OUTLINED_FUNCTION_8_15();
}

uint64_t key path setter for ConversationControlsManager.ignoredScreenSharingRequestUUIDs : ConversationControlsManager(uint64_t a1, _QWORD **a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x2A0);
  v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

void ConversationControlsManager.ignoredScreenSharingRequestUUIDs.getter()
{
  ConversationControlsManager.ignoredScreenSharingRequestUUIDs.getter();
}

{
  OUTLINED_FUNCTION_2_0();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_32();
}

void ConversationControlsManager.ignoredScreenSharingRequestUUIDs.setter(uint64_t a1)
{
  ConversationControlsManager.ignoredScreenSharingRequestUUIDs.setter(a1, &OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_ignoredScreenSharingRequestUUIDs, (void (*)(uint64_t))MEMORY[0x1E0DEEB08]);
}

void ConversationControlsManager.ignoredScreenSharingRequestUUIDs.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void ConversationControlsManager.mostRecentActiveConversation.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[5];

  v1 = (*(_QWORD *(**)(_QWORD *__return_ptr))((*MEMORY[0x1E0DEEDD8] & **(_QWORD **)(*(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_conversationController)
                                                                                             + OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageController))
                                                       + 0x120))(v4);
  if (v4[3])
  {
    v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Conversation);
    OUTLINED_FUNCTION_59(v3, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
    OUTLINED_FUNCTION_97();
  }
  else
  {
    OUTLINED_FUNCTION_305((uint64_t)v1, &demangling cache variable for type metadata for Conversation?, v2);
  }
  OUTLINED_FUNCTION_8_15();
}

void ConversationControlsManager.localParticipant.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_conversationController)
     + OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_447(v1, v2, type metadata accessor for Participant);
  OUTLINED_FUNCTION_32();
}

uint64_t key path setter for ConversationControlsManager.initiallyActiveParticipantIdentifiers : ConversationControlsManager(uint64_t a1, _QWORD **a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x2C8);
  v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

void ConversationControlsManager.initiallyActiveParticipantIdentifiers.getter()
{
  ConversationControlsManager.ignoredScreenSharingRequestUUIDs.getter();
}

void ConversationControlsManager.initiallyActiveParticipantIdentifiers.setter(uint64_t a1)
{
  ConversationControlsManager.ignoredScreenSharingRequestUUIDs.setter(a1, &OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_initiallyActiveParticipantIdentifiers, (void (*)(uint64_t))MEMORY[0x1E0DEEB08]);
}

void ConversationControlsManager.initiallyActiveParticipantIdentifiers.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

id ConversationControlsManager.noticeCoordinator.getter()
{
  return OUTLINED_FUNCTION_7(OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_noticeCoordinator);
}

uint64_t key path setter for ConversationControlsManager.countdownController : ConversationControlsManager(uint64_t a1, _QWORD **a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x2F8);
  v3 = swift_retain();
  return v2(v3);
}

void ConversationControlsManager.countdownController.getter()
{
  OUTLINED_FUNCTION_2_0();
  swift_retain();
  OUTLINED_FUNCTION_32();
}

void ConversationControlsManager.countdownController.setter(uint64_t a1)
{
  ConversationControlsManager.ignoredScreenSharingRequestUUIDs.setter(a1, &OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_countdownController, (void (*)(uint64_t))MEMORY[0x1E0DEEE30]);
}

void ConversationControlsManager.ignoredScreenSharingRequestUUIDs.setter(uint64_t a1, _QWORD *a2, void (*a3)(uint64_t))
{
  uint64_t v3;
  uint64_t *v6;
  uint64_t v7;

  v6 = (uint64_t *)(v3 + *a2);
  OUTLINED_FUNCTION_2_0();
  v7 = *v6;
  *v6 = a1;
  a3(v7);
  OUTLINED_FUNCTION_9_0();
}

void ConversationControlsManager.countdownController.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path setter for ConversationControlsManager.contentExtractor : ConversationControlsManager(id *a1, _QWORD **a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x310);
  v4 = *a1;
  return v3(v2);
}

void ConversationControlsManager.contentExtractor.getter()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_64_11();
  OUTLINED_FUNCTION_32();
}

void ConversationControlsManager.contentExtractor.setter()
{
  AudioPowerSpectrumViewModel.waveformColorRemote.setter();
}

void ConversationControlsManager.contentExtractor.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void ConversationControlsManager.conversationIsAVLess.getter()
{
  ConversationController.conversationIsAVLess.getter();
  OUTLINED_FUNCTION_0();
}

void ConversationControlsManager.shouldShowCallDetailsWhenReady.getter()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_32();
}

void ConversationControlsManager.shouldShowCallDetailsWhenReady.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_shouldShowCallDetailsWhenReady);
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  OUTLINED_FUNCTION_32();
}

void ConversationControlsManager.shouldShowCallDetailsWhenReady.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t ConversationControlsManager.isOnScreenSubscription.setter(uint64_t a1)
{
  return OUTLINED_FUNCTION_117_1(a1);
}

uint64_t ConversationControlsManager.activeShareCardHandle.setter(uint64_t a1)
{
  return OUTLINED_FUNCTION_117_1(a1);
}

void ConversationControlsManager.updateReactionNotice()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _BYTE v16[24];
  _QWORD v17[5];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ReactionNotice?);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (uint64_t *)&v16[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v3);
  v7 = &v16[-v6];
  v8 = swift_beginAccess();
  specialized NoticeQueueStore.peek()(v17, v8);
  swift_endAccess();
  if (v17[3])
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Notice);
    v9 = type metadata accessor for ReactionNotice(0);
    v10 = swift_dynamicCast() ^ 1;
    v11 = (uint64_t)v7;
  }
  else
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v17, (uint64_t *)&demangling cache variable for type metadata for Notice?);
    v9 = type metadata accessor for ReactionNotice(0);
    v11 = (uint64_t)v7;
    v10 = 1;
  }
  __swift_storeEnumTagSinglePayload(v11, v10, 1, v9);
  outlined init with copy of FeatureEligibility?((uint64_t)v7, (uint64_t)v5, (uint64_t *)&demangling cache variable for type metadata for ReactionNotice?);
  type metadata accessor for ReactionNotice(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v5, 1, v9) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v5, (uint64_t *)&demangling cache variable for type metadata for ReactionNotice?);
    v13 = 0;
  }
  else
  {
    v14 = *v5;
    swift_bridgeObjectRetain();
    outlined destroy of AccountUpdateNotice((uint64_t)v5, type metadata accessor for ReactionNotice);
    v13 = *(_QWORD *)(v14 + 16);
    v12 = swift_bridgeObjectRelease();
  }
  v15 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  if (v13 >= (*(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x370))(v12)
    && ((*(uint64_t (**)(void))((*v15 & *v1) + 0x388))() & 1) != 0)
  {
    ConversationControlsManager.postReactionNotice()();
  }
  else
  {
    ConversationControlsManager.dismissReactionNotice()();
  }
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v7, (uint64_t *)&demangling cache variable for type metadata for ReactionNotice?);
}

void ConversationControlsManager.minReactionCountForNotice.getter()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_32();
}

void ConversationControlsManager.minReactionCountForNotice.setter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_minReactionCountForNotice);
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  ConversationControlsManager.minReactionCountForNotice.didset();
  OUTLINED_FUNCTION_9_0();
}

void ConversationControlsManager.minReactionCountForNotice.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void ConversationControlsManager.minReactionCountForNotice.didset()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_reactionNoticeHistory);
  OUTLINED_FUNCTION_2_0();
  *v1 = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRelease();
  ConversationControlsManager.updateReactionNotice()();
  OUTLINED_FUNCTION_32();
}

void ConversationControlsManager.canPostReactionNotice.getter()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_32();
}

void ConversationControlsManager.canPostReactionNotice.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_canPostReactionNotice);
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  ConversationControlsManager.minReactionCountForNotice.didset();
  OUTLINED_FUNCTION_9_0();
}

void ConversationControlsManager.canPostReactionNotice.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void ConversationControlsManager.minReactionCountForNotice.modify()
{
  char v0;

  OUTLINED_FUNCTION_551();
  if ((v0 & 1) == 0)
    ConversationControlsManager.minReactionCountForNotice.didset();
  OUTLINED_FUNCTION_0();
}

uint64_t key path setter for ConversationControlsManager.videoTileConversationController : ConversationControlsManager(id *a1, _QWORD **a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x3A8);
  v4 = *a1;
  return v3(v2);
}

void ConversationControlsManager.videoTileConversationController.didset(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  char *v4;
  void *v5;
  void *v6;
  id v7;
  char v8;
  void *v9;
  _QWORD v10[5];

  v2 = v1;
  v4 = (char *)v2 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_videoTileConversationController;
  swift_beginAccess();
  v5 = (void *)MEMORY[0x1C3B752C0](v4);
  v6 = v5;
  if (a1)
  {
    if (v5)
    {
      type metadata accessor for ConversationController(0);
      v7 = a1;
      v8 = static NSObject.== infix(_:_:)();

      if ((v8 & 1) != 0)
        return;
    }
  }
  else
  {
    if (!v5)
      return;

  }
  if (*((_BYTE *)v2 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_hasInitializedCallControlsService) == 1)
  {
    (*(void (**)(_QWORD *__return_ptr))((*MEMORY[0x1E0DEEDD8] & *v2) + 0x3D0))(v10);
    if (v10[3])
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CallControlsService);
      type metadata accessor for InCallCallControlsService();
      if ((swift_dynamicCast() & 1) != 0)
      {
        v9 = (void *)MEMORY[0x1C3B752C0](v4);
        swift_beginAccess();
        swift_unknownObjectWeakAssign();
        swift_release();

      }
    }
    else
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v10, &demangling cache variable for type metadata for CallControlsService?);
    }
  }
}

void ConversationControlsManager.videoTileConversationController.getter()
{
  ConversationControlsManager.videoTileConversationController.getter();
}

{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_26();
}

void ConversationControlsManager.videoTileConversationController.setter(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;

  v3 = v1 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_videoTileConversationController;
  OUTLINED_FUNCTION_2_0();
  v4 = (void *)MEMORY[0x1C3B752C0](v3);
  OUTLINED_FUNCTION_124_0();
  swift_unknownObjectWeakAssign();
  ConversationControlsManager.videoTileConversationController.didset(v4);

  OUTLINED_FUNCTION_9_0();
}

void ConversationControlsManager.videoTileConversationController.modify()
{
  uint64_t v0;
  void *v1;

  v1 = malloc(0x28uLL);
  *(_QWORD *)(OUTLINED_FUNCTION_80((uint64_t)v1) + 32) = v0;
  OUTLINED_FUNCTION_65_2();
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_26();
}

void sub_1BD25F880(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = a1;
  OUTLINED_FUNCTION_18();
}

void ConversationControlsManager.videoTileConversationController.modify(uint64_t a1, char a2)
{
  void *v2;
  id v3;
  id *v4;
  id v5;

  v2 = *(void **)a1;
  v4 = (id *)(*(_QWORD *)a1 + 24);
  v3 = *v4;
  if ((a2 & 1) != 0)
  {
    v5 = v3;
    ConversationControlsManager.videoTileConversationController.setter(v3);

  }
  else
  {
    ConversationControlsManager.videoTileConversationController.setter(*(void **)(*(_QWORD *)a1 + 24));
  }
  OUTLINED_FUNCTION_4_2(v2);
}

void key path setter for ConversationControlsManager.callControlsService : ConversationControlsManager(uint64_t a1)
{
  _BYTE v1[40];

  outlined init with copy of FeatureEligibility?(a1, (uint64_t)v1, &demangling cache variable for type metadata for CallControlsService?);
  ConversationControlsManager.callControlsService.setter((uint64_t)v1);
}

void ConversationControlsManager.callControlsService.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v4[24];
  uint64_t v5;

  v3 = v1 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager____lazy_storage___callControlsService;
  OUTLINED_FUNCTION_2_0();
  outlined init with copy of FeatureEligibility?(v3, (uint64_t)v4, &demangling cache variable for type metadata for CallControlsService??);
  if (v5 == 1)
  {
    OUTLINED_FUNCTION_9_42((uint64_t)v4);
    *(_QWORD *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    outlined init with copy of FeatureEligibility?(a1, (uint64_t)v4, &demangling cache variable for type metadata for CallControlsService?);
    OUTLINED_FUNCTION_2_0();
    outlined assign with take of Participant?((uint64_t)v4, v3, &demangling cache variable for type metadata for CallControlsService??);
    OUTLINED_FUNCTION_25_29();
  }
  else
  {
    outlined init with take of Any?((uint64_t)v4, a1, &demangling cache variable for type metadata for CallControlsService?);
  }
}

void ConversationControlsManager.callControlsService.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v3[40];

  outlined init with take of Any?(a1, (uint64_t)v3, &demangling cache variable for type metadata for CallControlsService?);
  v2 = v1 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager____lazy_storage___callControlsService;
  OUTLINED_FUNCTION_2_0();
  outlined assign with take of Participant?((uint64_t)v3, v2, &demangling cache variable for type metadata for CallControlsService??);
  swift_endAccess();
  OUTLINED_FUNCTION_289_0();
}

uint64_t key path setter for ConversationControlsManager.systemBannerPresenter : ConversationControlsManager(uint64_t a1, _QWORD **a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(uint64_t (**)(uint64_t, uint64_t))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x3F0);
  v4 = swift_unknownObjectRetain();
  return v3(v4, v2);
}

void ConversationControlsManager.systemBannerPresenter.getter()
{
  ConversationControlsManager.systemBannerPresenter.getter();
}

{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_26();
}

void ConversationControlsManager.systemBannerPresenter.setter()
{
  ConversationControlsManager.systemBannerPresenter.setter();
}

{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_6_6();
  v3 = v1 + *v2;
  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v3 + 8) = v0;
  OUTLINED_FUNCTION_64();
  swift_unknownObjectWeakAssign();
  OUTLINED_FUNCTION_113();
  OUTLINED_FUNCTION_9_0();
}

void ConversationControlsManager.systemBannerPresenter.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_45();
  v2 = OUTLINED_FUNCTION_80((uint64_t)v1);
  v3 = OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_systemBannerPresenter;
  *(_QWORD *)(v2 + 40) = v0;
  *(_QWORD *)(v2 + 48) = v3;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_26();
}

{
  void *v0;
  char v1;

  OUTLINED_FUNCTION_331();
  OUTLINED_FUNCTION_676();
  swift_unknownObjectWeakAssign();
  if ((v1 & 1) != 0)
  {
    OUTLINED_FUNCTION_675();
    OUTLINED_FUNCTION_248();
  }
  else
  {
    OUTLINED_FUNCTION_248();
    OUTLINED_FUNCTION_10();
  }
  OUTLINED_FUNCTION_4_2(v0);
}

void sub_1BD25FB04(uint64_t a1)
{
  OUTLINED_FUNCTION_347(a1);
  OUTLINED_FUNCTION_18();
}

uint64_t key path setter for ConversationControlsManager.systemConversationControlsDelegate : ConversationControlsManager(uint64_t a1, _QWORD **a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(uint64_t (**)(uint64_t, uint64_t))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x408);
  v4 = swift_unknownObjectRetain();
  return v3(v4, v2);
}

void ConversationControlsManager.systemConversationControlsDelegate.getter()
{
  ConversationControlsManager.systemBannerPresenter.getter();
}

void ConversationControlsManager.systemConversationControlsDelegate.setter()
{
  ConversationControlsManager.systemBannerPresenter.setter();
}

void ConversationControlsManager.systemConversationControlsDelegate.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_45();
  v2 = OUTLINED_FUNCTION_80((uint64_t)v1);
  v3 = OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_systemConversationControlsDelegate;
  *(_QWORD *)(v2 + 40) = v0;
  *(_QWORD *)(v2 + 48) = v3;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_26();
}

void sub_1BD25FBC4(uint64_t a1)
{
  OUTLINED_FUNCTION_347(a1);
  OUTLINED_FUNCTION_18();
}

uint64_t key path setter for ConversationControlsManager.systemAudioConversationControlsDelegate : ConversationControlsManager(uint64_t a1, _QWORD **a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(uint64_t (**)(uint64_t, uint64_t))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x420);
  v4 = swift_unknownObjectRetain();
  return v3(v4, v2);
}

void ConversationControlsManager.systemAudioConversationControlsDelegate.getter()
{
  ConversationControlsManager.systemBannerPresenter.getter();
}

void ConversationControlsManager.systemAudioConversationControlsDelegate.setter()
{
  ConversationControlsManager.systemBannerPresenter.setter();
}

void ConversationControlsManager.systemAudioConversationControlsDelegate.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_45();
  v2 = OUTLINED_FUNCTION_80((uint64_t)v1);
  v3 = OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_systemAudioConversationControlsDelegate;
  *(_QWORD *)(v2 + 40) = v0;
  *(_QWORD *)(v2 + 48) = v3;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_26();
}

void sub_1BD25FC80(uint64_t a1)
{
  OUTLINED_FUNCTION_347(a1);
  OUTLINED_FUNCTION_18();
}

uint64_t key path setter for ConversationControlsManager.inCallConversationControlsDelegate : ConversationControlsManager(uint64_t a1, _QWORD **a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(uint64_t (**)(uint64_t, uint64_t))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x438);
  v4 = swift_unknownObjectRetain();
  return v3(v4, v2);
}

uint64_t ConversationControlsManager.inCallConversationControlsDelegate.didset()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_inCallConversationControlsDelegate;
  swift_beginAccess();
  if (!MEMORY[0x1C3B752C0](v1))
    return ConversationControlsManager.isOnScreenSubscription.setter(0);
  v2 = *(_QWORD *)(v1 + 8);
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v2 + 56))(ObjectType, v2);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnyPublisher<Bool, Never>);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type AnyPublisher<Bool, Never> and conformance AnyPublisher<A, B>, &demangling cache variable for type metadata for AnyPublisher<Bool, Never>);
  v4 = Publisher<>.sink(receiveValue:)();
  swift_release();
  swift_release();
  ConversationControlsManager.isOnScreenSubscription.setter(v4);
  return swift_unknownObjectRelease();
}

void closure #1 in ConversationControlsManager.inCallConversationControlsDelegate.didset(char *a1, uint64_t a2)
{
  char v2;
  uint64_t v3;
  char *v4;
  char *v5;
  char *v6;
  char *v7;
  id v8;

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess();
  v4 = (char *)MEMORY[0x1C3B752C0](v3);
  if (v4)
  {
    v5 = v4;
    v6 = (char *)(*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)v4) + 0x290))();
    if (v6)
    {
      v7 = v6;
      if ((v2 & 1) == 0 && objc_msgSend(v6, sel_letMeInRequestState) == (id)2)
      {
        v8 = *(id *)&v5[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_conversationController];
        ConversationController.cancelJoinCountdown()();

      }
      v5 = v7;
    }

  }
}

void ConversationControlsManager.inCallConversationControlsDelegate.getter()
{
  ConversationControlsManager.systemBannerPresenter.getter();
}

void ConversationControlsManager.inCallConversationControlsDelegate.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_6_6();
  v2 = v1 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_inCallConversationControlsDelegate;
  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v2 + 8) = v0;
  OUTLINED_FUNCTION_315_0();
  swift_unknownObjectWeakAssign();
  ConversationControlsManager.inCallConversationControlsDelegate.didset();
  OUTLINED_FUNCTION_113();
  OUTLINED_FUNCTION_9_0();
}

void ConversationControlsManager.inCallConversationControlsDelegate.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_45();
  v2 = OUTLINED_FUNCTION_80((uint64_t)v1);
  v3 = OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_inCallConversationControlsDelegate;
  *(_QWORD *)(v2 + 40) = v0;
  *(_QWORD *)(v2 + 48) = v3;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_26();
}

void sub_1BD25FF60(uint64_t a1)
{
  OUTLINED_FUNCTION_347(a1);
  OUTLINED_FUNCTION_18();
}

void ConversationControlsManager.inCallConversationControlsDelegate.modify(void **a1, char a2)
{
  void *v3;

  v3 = *a1;
  OUTLINED_FUNCTION_676();
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {
    OUTLINED_FUNCTION_675();
    OUTLINED_FUNCTION_248();
  }
  else
  {
    OUTLINED_FUNCTION_248();
    OUTLINED_FUNCTION_9_10();
    ConversationControlsManager.inCallConversationControlsDelegate.didset();
  }
  OUTLINED_FUNCTION_4_2(v3);
}

uint64_t key path setter for ConversationControlsManager.inCallDetailsViewControllerDelegate : ConversationControlsManager(uint64_t a1, _QWORD **a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(uint64_t (**)(uint64_t, uint64_t))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x450);
  v4 = swift_unknownObjectRetain();
  return v3(v4, v2);
}

void ConversationControlsManager.inCallDetailsViewControllerDelegate.getter()
{
  ConversationControlsManager.systemBannerPresenter.getter();
}

void ConversationControlsManager.inCallDetailsViewControllerDelegate.setter()
{
  ConversationControlsManager.systemBannerPresenter.setter();
}

void ConversationControlsManager.inCallDetailsViewControllerDelegate.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_45();
  v2 = OUTLINED_FUNCTION_80((uint64_t)v1);
  v3 = OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_inCallDetailsViewControllerDelegate;
  *(_QWORD *)(v2 + 40) = v0;
  *(_QWORD *)(v2 + 48) = v3;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_26();
}

void sub_1BD260074(uint64_t a1)
{
  OUTLINED_FUNCTION_347(a1);
  OUTLINED_FUNCTION_18();
}

uint64_t key path setter for ConversationControlsManager.audioRoutingDelegate : ConversationControlsManager(uint64_t a1, _QWORD **a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x468);
  v3 = swift_unknownObjectRetain();
  return v2(v3);
}

void ConversationControlsManager.audioRoutingDelegate.getter()
{
  ConversationControlsManager.videoTileConversationController.getter();
}

void ConversationControlsManager.audioRoutingDelegate.setter()
{
  ConversationControlsManager.audioRoutingDelegate.setter();
}

{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_448();
  OUTLINED_FUNCTION_19_0();
  OUTLINED_FUNCTION_32();
}

void ConversationControlsManager.audioRoutingDelegate.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_124_1();
  v2 = OUTLINED_FUNCTION_80((uint64_t)v1);
  v3 = OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_audioRoutingDelegate;
  *(_QWORD *)(v2 + 32) = v0;
  *(_QWORD *)(v2 + 40) = v3;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_26();
}

{
  void *v0;
  char v1;

  OUTLINED_FUNCTION_331();
  swift_unknownObjectWeakAssign();
  if ((v1 & 1) != 0)
  {
    OUTLINED_FUNCTION_675();
    OUTLINED_FUNCTION_248();
  }
  else
  {
    OUTLINED_FUNCTION_248();
    OUTLINED_FUNCTION_10();
  }
  OUTLINED_FUNCTION_4_2(v0);
}

void sub_1BD260120(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = a1;
  OUTLINED_FUNCTION_18();
}

uint64_t key path setter for ConversationControlsManager.localAudioTogglingDelegate : ConversationControlsManager(uint64_t a1, _QWORD **a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x480);
  v3 = swift_unknownObjectRetain();
  return v2(v3);
}

void ConversationControlsManager.localAudioTogglingDelegate.getter()
{
  ConversationControlsManager.videoTileConversationController.getter();
}

void sub_1BD2601B4()
{
  OUTLINED_FUNCTION_32();
}

void ConversationControlsManager.localAudioTogglingDelegate.setter()
{
  ConversationControlsManager.audioRoutingDelegate.setter();
}

void ConversationControlsManager.localAudioTogglingDelegate.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_124_1();
  v2 = OUTLINED_FUNCTION_80((uint64_t)v1);
  v3 = OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_localAudioTogglingDelegate;
  *(_QWORD *)(v2 + 32) = v0;
  *(_QWORD *)(v2 + 40) = v3;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_26();
}

void sub_1BD260244(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = a1;
  OUTLINED_FUNCTION_18();
}

uint64_t key path setter for ConversationControlsManager.handoffCompletedDelegate : ConversationControlsManager(uint64_t a1, _QWORD **a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(uint64_t (**)(uint64_t, uint64_t))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x498);
  v4 = swift_unknownObjectRetain();
  return v3(v4, v2);
}

void ConversationControlsManager.handoffCompletedDelegate.getter()
{
  ConversationControlsManager.systemBannerPresenter.getter();
}

void sub_1BD26032C()
{
  OUTLINED_FUNCTION_32();
}

void ConversationControlsManager.handoffCompletedDelegate.setter()
{
  ConversationControlsManager.systemBannerPresenter.setter();
}

void ConversationControlsManager.handoffCompletedDelegate.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_45();
  v2 = OUTLINED_FUNCTION_80((uint64_t)v1);
  v3 = OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_handoffCompletedDelegate;
  *(_QWORD *)(v2 + 40) = v0;
  *(_QWORD *)(v2 + 48) = v3;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_26();
}

void sub_1BD2603C8(uint64_t a1)
{
  OUTLINED_FUNCTION_347(a1);
  OUTLINED_FUNCTION_18();
}

void key path setter for ConversationControlsManager.conduitLagunaNoticeManager : ConversationControlsManager(id *a1)
{
  id v1;

  v1 = *a1;
  ConversationControlsManager.conduitLagunaNoticeManager.setter();
}

void ConversationControlsManager.conduitLagunaNoticeManager.getter()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_64_11();
  OUTLINED_FUNCTION_32();
}

void ConversationControlsManager.conduitLagunaNoticeManager.setter()
{
  AudioPowerSpectrumViewModel.waveformColorRemote.setter();
}

uint64_t ConversationControlsManager.conversationDidChangePublisher.getter()
{
  return swift_retain();
}

uint64_t key path getter for ConversationControlsManager.shouldOpenMessages : ConversationControlsManager@<X0>(_QWORD **a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x4D8))();
  *a2 = result & 1;
  return result;
}

void key path setter for ConversationControlsManager.shouldOpenMessages : ConversationControlsManager()
{
  ConversationControlsManager.shouldOpenMessages.setter();
}

void ConversationControlsManager.shouldOpenMessages.getter()
{
  ConversationControlsManager.shouldOpenMessages.getter();
}

{
  swift_getKeyPath();
  OUTLINED_FUNCTION_608();
  OUTLINED_FUNCTION_488();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_43_1();
}

void ConversationControlsManager.shouldOpenMessages.setter()
{
  ConversationControlsManager.shouldOpenMessages.setter();
}

{
  void *v0;
  id v1;

  swift_getKeyPath();
  OUTLINED_FUNCTION_608();
  v1 = v0;
  static Published.subscript.setter();
  OUTLINED_FUNCTION_45_0();
}

void ConversationControlsManager.$shouldOpenMessages.getter()
{
  ConversationControlsManager.$shouldOpenMessages.getter(&OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager__shouldOpenMessages);
}

void ConversationControlsManager.$shouldOpenMessages.setter()
{
  ConversationControlsManager.$shouldOpenMessages.setter();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);

  OUTLINED_FUNCTION_96();
  v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(v4);
  OUTLINED_FUNCTION_213();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_0_7();
  OUTLINED_FUNCTION_291(v0, v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 16));
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_57_0();
  Published.projectedValue.setter();
  swift_endAccess();
  v6 = OUTLINED_FUNCTION_318();
  v7(v6);
  OUTLINED_FUNCTION_65_1();
}

uint64_t key path getter for ConversationControlsManager.shouldEnableStartingStagedActivity : ConversationControlsManager@<X0>(_QWORD **a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x508))();
  *a2 = result & 1;
  return result;
}

void key path setter for ConversationControlsManager.shouldEnableStartingStagedActivity : ConversationControlsManager()
{
  ConversationControlsManager.shouldEnableStartingStagedActivity.setter();
}

void ConversationControlsManager.shouldEnableStartingStagedActivity.getter()
{
  ConversationControlsManager.shouldOpenMessages.getter();
}

void ConversationControlsManager.shouldEnableStartingStagedActivity.setter()
{
  ConversationControlsManager.shouldOpenMessages.setter();
}

void key path setter for ConversationControlsManager.$shouldOpenMessages : ConversationControlsManager(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, void (*a6)(uint64_t))
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;

  v8 = __swift_instantiateConcreteTypeFromMangledName(a5);
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_16_2();
  OUTLINED_FUNCTION_8(*(uint64_t (**)(uint64_t, uint64_t))(v9 + 16));
  a6(v6);
  OUTLINED_FUNCTION_18();
}

void ConversationControlsManager.$shouldEnableStartingStagedActivity.getter()
{
  ConversationControlsManager.$shouldOpenMessages.getter(&OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager__shouldEnableStartingStagedActivity);
}

void ConversationControlsManager.$shouldEnableStartingStagedActivity.setter()
{
  ConversationControlsManager.$shouldOpenMessages.setter();
}

uint64_t key path setter for ConversationControlsManager.activityManager : ConversationControlsManager(id *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x540))(*a1);
}

id ConversationControlsManager.activityManager.getter()
{
  uint64_t v0;
  id *v1;

  v1 = (id *)(v0 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_activityManager);
  OUTLINED_FUNCTION_2_0();
  return OUTLINED_FUNCTION_27_27(*v1);
}

void ConversationControlsManager.activityManager.setter()
{
  AudioPowerSpectrumViewModel.waveformColorRemote.setter();
}

void ConversationControlsManager.activityManager.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path setter for ConversationControlsManager.bannerActivityManager : ConversationControlsManager(id *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x558))(*a1);
}

id ConversationControlsManager.bannerActivityManager.getter()
{
  uint64_t v0;
  id *v1;

  v1 = (id *)(v0 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_bannerActivityManager);
  OUTLINED_FUNCTION_2_0();
  return OUTLINED_FUNCTION_27_27(*v1);
}

void ConversationControlsManager.bannerActivityManager.setter()
{
  AudioPowerSpectrumViewModel.waveformColorRemote.setter();
}

void ConversationControlsManager.bannerActivityManager.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path setter for ConversationControlsManager.incomingScreenSharingRequestActivity : ConversationControlsManager(uint64_t a1, _QWORD **a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x570);
  v3 = swift_retain();
  return v2(v3);
}

void ConversationControlsManager.incomingScreenSharingRequestActivity.getter()
{
  ConversationControlsManager.incomingScreenSharingRequestActivity.getter();
}

{
  OUTLINED_FUNCTION_2_0();
  swift_retain();
  OUTLINED_FUNCTION_32();
}

void ConversationControlsManager.incomingScreenSharingRequestActivity.setter(uint64_t a1)
{
  ConversationControlsManager.incomingScreenSharingRequestActivity.setter(a1, &OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_incomingScreenSharingRequestActivity);
}

void ConversationControlsManager.incomingScreenSharingRequestActivity.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for ConversationControlsManager.audioRoute : ConversationControlsManager@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x580))();
  *a2 = result;
  return result;
}

void key path setter for ConversationControlsManager.audioRoute : ConversationControlsManager(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  ConversationControlsManager.audioRoute.setter(v1);
}

void ConversationControlsManager.audioRoute.didset(void *a1)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t (*v4)(void);
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t v9;
  _QWORD *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  Swift::String v27;
  Swift::String_optional v28;
  Swift::String v29;
  id v30;
  id v31;
  uint64_t v32[4];
  __int16 v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  Swift::String v37;

  v3 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v4 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x580);
  v5 = (void *)v4();
  if (!v5)
    return;
  if (!a1)
  {
LABEL_11:

    return;
  }
  v31 = v5;
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TURoute);
  v30 = a1;
  if ((static NSObject.== infix(_:_:)() & 1) != 0
    || ((*(void (**)(void))((*v3 & *v1) + 0x270))(),
        v7 = v6,
        ObjectType = swift_getObjectType(),
        LOBYTE(v7) = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 88))(ObjectType, v7),
        swift_unknownObjectRelease(),
        (v7 & 1) == 0))
  {

    v5 = v30;
    goto LABEL_11;
  }
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v9 = type metadata accessor for Logger();
  __swift_project_value_buffer(v9, (uint64_t)&static Logger.conversationControls);
  v10 = v1;
  v11 = Logger.logObject.getter();
  v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    v14 = swift_slowAlloc();
    v32[0] = v14;
    *(_DWORD *)v13 = 136315138;
    if (v4())
    {
      v15 = String.init<A>(reflecting:)();
      v17 = v16;
    }
    else
    {
      v17 = 0xE300000000000000;
      v15 = 7104878;
    }
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v15, v17, v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v11, v12, "audioRoute: %s", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v14, -1, -1);
    MEMORY[0x1C3B751B8](v13, -1, -1);

  }
  else
  {

  }
  if (((*(uint64_t (**)(void))((*v3 & *v10) + 0x868))() & 1) == 0)
  {
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
    v21 = (void *)*MEMORY[0x1E0DC4AD0];
    v32[0] = 0xD000000000000013;
    v32[1] = 0x80000001BD6793B0;
    v32[2] = 1;
    v32[3] = (uint64_t)v21;
    v33 = 0;
    v34 = 4;
    v35 = 0;
    v36 = 0;
    v22 = v21;
    v23 = static UIImage.symbolImage(for:)((uint64_t)v32);

    swift_bridgeObjectRelease();
    if (v23)
    {
      v24 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
      v25 = objc_msgSend(v23, sel_imageWithTintColor_, v24);

    }
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSAttributedString);
    v26 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
    v37._object = (void *)0xE000000000000000;
    v27._countAndFlagsBits = 0x6F69647541;
    v27._object = (void *)0xE500000000000000;
    v28.value._countAndFlagsBits = 0x61737265766E6F43;
    v28.value._object = (void *)0xEF74694B6E6F6974;
    v29._countAndFlagsBits = 0;
    v29._object = (void *)0xE000000000000000;
    v37._countAndFlagsBits = 0;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v27, v28, (NSBundle)v26, v29, v37);

    static NSAttributedString.localizedString(_:prefixImage:imageBounds:)();
  }
  v18 = Logger.logObject.getter();
  v19 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v20 = 0;
    _os_log_impl(&dword_1BD004000, v18, v19, "Not posting alert for the local audio route state changing since we're showing the AVLess downgrade confirmation dialog", v20, 2u);
    MEMORY[0x1C3B751B8](v20, -1, -1);
  }

}

void ConversationControlsManager.audioRoute.getter()
{
  ConversationControlsManager.audioRoute.getter();
}

{
  swift_getKeyPath();
  OUTLINED_FUNCTION_608();
  OUTLINED_FUNCTION_488();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_45_0();
}

void ConversationControlsManager.audioRoute.setter(void *a1)
{
  void *v1;
  id v3;
  id v4;
  void *v5;

  OUTLINED_FUNCTION_81_5();
  OUTLINED_FUNCTION_324();
  OUTLINED_FUNCTION_265_0();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_27_0();
  OUTLINED_FUNCTION_81_5();
  OUTLINED_FUNCTION_324();
  v3 = a1;
  v4 = v1;
  OUTLINED_FUNCTION_496();
  ConversationControlsManager.audioRoute.didset(v5);

  OUTLINED_FUNCTION_8_15();
}

void ConversationControlsManager.$audioRoute.getter()
{
  ConversationControlsManager.$shouldOpenMessages.getter(&OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager__audioRoute);
}

void ConversationControlsManager.$audioRoute.setter()
{
  ConversationControlsManager.$shouldOpenMessages.setter();
}

uint64_t key path getter for ConversationControlsManager.bluetoothAudioFormat : ConversationControlsManager@<X0>(_QWORD **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  char v4;

  result = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x5B0))();
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

void key path setter for ConversationControlsManager.bluetoothAudioFormat : ConversationControlsManager()
{
  ConversationControlsManager.bluetoothAudioFormat.setter();
}

uint64_t ConversationControlsManager.bluetoothAudioFormat.didset(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t (*v5)(void);
  uint64_t result;
  char v7;
  uint64_t v8;
  _QWORD *v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  id v18;
  Swift::String v19;
  Swift::String_optional v20;
  Swift::String v21;
  uint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  Swift::String v31;
  uint64_t v32;
  Swift::String v33;

  v5 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v2) + 0x5B0);
  result = v5();
  if ((v7 & 1) == 0 && a2 & 1 | (result != a1) && result == 1)
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v8 = type metadata accessor for Logger();
    __swift_project_value_buffer(v8, (uint64_t)&static Logger.conversationControls);
    v9 = v2;
    v10 = Logger.logObject.getter();
    v11 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      v13 = swift_slowAlloc();
      v32 = v13;
      *(_DWORD *)v12 = 136315138;
      v5();
      if ((v14 & 1) != 0)
      {
        v17 = 0xE300000000000000;
        v15 = 7104878;
      }
      else
      {
        type metadata accessor for TUCallBluetoothAudioFormat(0);
        v15 = String.init<A>(reflecting:)();
        v17 = v16;
      }
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v15, v17, &v32);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BD004000, v10, v11, "bluetoothAudioFormat: %s", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v13, -1, -1);
      MEMORY[0x1C3B751B8](v12, -1, -1);

    }
    else
    {

    }
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSAttributedString);
    v18 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
    v33._object = (void *)0xE000000000000000;
    v19._countAndFlagsBits = 0x494D5F4B41455053;
    v19._object = (void *)0xEC00000040255F43;
    v20.value._countAndFlagsBits = 0x61737265766E6F43;
    v20.value._object = (void *)0xEF74694B6E6F6974;
    v21._countAndFlagsBits = 0;
    v21._object = (void *)0xE000000000000000;
    v33._countAndFlagsBits = 0;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v19, v20, (NSBundle)v18, v21, v33);

    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_1BD6441D0;
    v23 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
    v24 = objc_msgSend(v23, sel_model);

    v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v27 = v26;

    *(_QWORD *)(v22 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v22 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v22 + 32) = v25;
    *(_QWORD *)(v22 + 40) = v27;
    v28 = String.init(format:_:)();
    v30 = v29;
    swift_bridgeObjectRelease();
    v31._countAndFlagsBits = v28;
    v31._object = v30;
    NSMutableAttributedString.__allocating_init(string:)(v31);
  }
  return result;
}

uint64_t ConversationControlsManager.bluetoothAudioFormat.getter()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  OUTLINED_FUNCTION_29_3();
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_11_0();
  return v1;
}

void ConversationControlsManager.bluetoothAudioFormat.setter()
{
  void *v0;
  id v1;
  uint64_t v2;
  char v3;

  swift_getKeyPath();
  OUTLINED_FUNCTION_479();
  static Published.subscript.getter();
  OUTLINED_FUNCTION_17_22();
  OUTLINED_FUNCTION_74();
  swift_getKeyPath();
  OUTLINED_FUNCTION_479();
  v1 = v0;
  static Published.subscript.setter();
  ConversationControlsManager.bluetoothAudioFormat.didset(v2, v3);
  OUTLINED_FUNCTION_289_0();
}

void ConversationControlsManager.$bluetoothAudioFormat.getter()
{
  ConversationControlsManager.$shouldOpenMessages.getter(&OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager__bluetoothAudioFormat);
}

void ConversationControlsManager.$bluetoothAudioFormat.setter()
{
  ConversationControlsManager.$shouldOpenMessages.setter();
}

uint64_t key path getter for ConversationControlsManager.localAudioEnabled : ConversationControlsManager@<X0>(_QWORD **a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x5E0))();
  *a2 = result & 1;
  return result;
}

void key path setter for ConversationControlsManager.localAudioEnabled : ConversationControlsManager()
{
  ConversationControlsManager.localAudioEnabled.setter();
}

void ConversationControlsManager.localAudioEnabled.didset(char a1)
{
  _QWORD *v1;
  void (*v2)(void);
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  uint64_t v11;

  v2 = *(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x5E0);
  if ((((uint64_t (*)(void))v2)() & 1) != (a1 & 1))
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v3 = type metadata accessor for Logger();
    __swift_project_value_buffer(v3, (uint64_t)&static Logger.conversationControls);
    v10 = v1;
    v4 = Logger.logObject.getter();
    v5 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      v7 = swift_slowAlloc();
      v11 = v7;
      *(_DWORD *)v6 = 136315138;
      v2();
      v8 = String.init<A>(reflecting:)();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v8, v9, &v11);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BD004000, v4, v5, "localAudioEnabled: %s", v6, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v7, -1, -1);
      MEMORY[0x1C3B751B8](v6, -1, -1);

    }
    else
    {

    }
  }
}

void ConversationControlsManager.localAudioEnabled.getter()
{
  ConversationControlsManager.shouldOpenMessages.getter();
}

void ConversationControlsManager.localAudioEnabled.setter()
{
  void *v0;
  id v1;
  char v2;

  OUTLINED_FUNCTION_81_5();
  OUTLINED_FUNCTION_324();
  OUTLINED_FUNCTION_265_0();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_27_0();
  OUTLINED_FUNCTION_81_5();
  OUTLINED_FUNCTION_324();
  v1 = v0;
  OUTLINED_FUNCTION_496();
  ConversationControlsManager.localAudioEnabled.didset(v2);
  OUTLINED_FUNCTION_8_15();
}

void ConversationControlsManager.$localAudioEnabled.getter()
{
  ConversationControlsManager.$shouldOpenMessages.getter(&OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager__localAudioEnabled);
}

void ConversationControlsManager.$localAudioEnabled.setter()
{
  ConversationControlsManager.$shouldOpenMessages.setter();
}

uint64_t key path getter for ConversationControlsManager.localVideoButtonState : ConversationControlsManager@<X0>(_QWORD **a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x610))();
  *a2 = result & 1;
  a2[1] = BYTE1(result) & 1;
  return result;
}

void key path setter for ConversationControlsManager.localVideoButtonState : ConversationControlsManager()
{
  ConversationControlsManager.localVideoButtonState.setter();
}

void ConversationControlsManager.localVideoButtonState.didset(unsigned int a1)
{
  _QWORD *v1;
  _QWORD *v2;
  void (*v3)(void);
  uint64_t v4;
  _QWORD *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;

  v2 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v3 = *(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x610);
  if (((a1 >> 8) & 1) != (((unsigned int (*)(void))v3)() & 0x100) >> 8)
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v4 = type metadata accessor for Logger();
    __swift_project_value_buffer(v4, (uint64_t)&static Logger.conversationControls);
    v5 = v1;
    v6 = Logger.logObject.getter();
    v7 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      v9 = swift_slowAlloc();
      v18 = v9;
      *(_DWORD *)v8 = 136315138;
      v3();
      v10 = String.init<A>(reflecting:)();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v10, v11, &v18);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BD004000, v6, v7, "localVideoButtonState: %s", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v9, -1, -1);
      v12 = v8;
      v2 = (_QWORD *)MEMORY[0x1E0DEEDD8];
      MEMORY[0x1C3B751B8](v12, -1, -1);

    }
    else
    {

    }
    v14 = (*(uint64_t (**)(uint64_t))((*v2 & *v5) + 0x320))(v13);
    if ((v14 & 1) == 0 && ((*(uint64_t (**)(uint64_t))((*v2 & *v5) + 0x868))(v14) & 1) == 0)
      ConversationControlsManager.localVideoStateChangedAlert.getter();
    v15 = Logger.logObject.getter();
    v16 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v17 = 0;
      _os_log_impl(&dword_1BD004000, v15, v16, "Not posting alert for the local video state changing since we're in an AVLess conversation", v17, 2u);
      MEMORY[0x1C3B751B8](v17, -1, -1);
    }

  }
}

void ConversationControlsManager.localVideoStateChangedAlert.getter()
{
  _QWORD *v0;
  char v1;

  if (((*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x610))() & 0x100) == 0)
  {
    ConversationController.cameraStartPolicy.getter();
    if ((v1 & 1) == 0)
      ConversationControlsManager.videoCameraOffForScreenSharingAlert.getter();
  }
  ConversationControlsManager.videoCameraOnOrOffAlert.getter();
}

void ConversationControlsManager.localVideoButtonState.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  OUTLINED_FUNCTION_29_3();
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_43_1();
}

void ConversationControlsManager.localVideoButtonState.setter()
{
  void *v0;
  id v1;
  int v2;
  unsigned __int8 v3;
  char v4;

  OUTLINED_FUNCTION_81_5();
  OUTLINED_FUNCTION_324();
  OUTLINED_FUNCTION_265_0();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_27_0();
  OUTLINED_FUNCTION_81_5();
  OUTLINED_FUNCTION_324();
  v1 = v0;
  OUTLINED_FUNCTION_181();
  if (v4)
    v2 = 256;
  else
    v2 = 0;
  ConversationControlsManager.localVideoButtonState.didset(v2 | v3);
  OUTLINED_FUNCTION_289_0();
}

void ConversationControlsManager.$localVideoButtonState.getter()
{
  ConversationControlsManager.$shouldOpenMessages.getter(&OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager__localVideoButtonState);
}

void ConversationControlsManager.$localVideoButtonState.setter()
{
  ConversationControlsManager.$shouldOpenMessages.setter();
}

void *one-time initialization function for screenSharingControlStateManager()
{
  void *result;

  type metadata accessor for ScreenSharingControlStateManager();
  swift_allocObject();
  result = (void *)ScreenSharingControlStateManager.init()();
  static ConversationControlsManager.screenSharingControlStateManager = result;
  return result;
}

uint64_t key path getter for ConversationControlsManager.shareMenuButtonState : ConversationControlsManager@<X0>(_QWORD **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  char v5;
  char v6;

  result = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x640))();
  *(_BYTE *)a2 = result & 1;
  *(_BYTE *)(a2 + 1) = BYTE1(result) & 1;
  *(_QWORD *)(a2 + 8) = v4;
  *(_BYTE *)(a2 + 16) = v5 & 1;
  *(_BYTE *)(a2 + 17) = v6 & 1;
  return result;
}

uint64_t key path setter for ConversationControlsManager.shareMenuButtonState : ConversationControlsManager(unsigned __int8 *a1, _QWORD **a2)
{
  uint64_t v2;
  unsigned int v3;
  int v4;
  int v5;
  uint64_t v6;
  int v7;

  v2 = *((_QWORD *)a1 + 1);
  v3 = a1[16];
  v4 = a1[17];
  if (a1[1])
    v5 = 256;
  else
    v5 = 0;
  v6 = v5 | *a1;
  if (v4)
    v7 = 256;
  else
    v7 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x648))(v6, v2, v7 | v3);
}

uint64_t ConversationControlsManager.shareMenuButtonState.getter()
{
  int v0;
  unsigned __int8 v2;
  char v3;

  if (one-time initialization token for screenSharingControlStateManager != -1)
    swift_once();
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  CurrentValueSubject.value.getter();
  OUTLINED_FUNCTION_43();
  if (v3)
    v0 = 256;
  else
    v0 = 0;
  return v0 | v2;
}

void ConversationControlsManager.shareMenuButtonState.setter()
{
  if (one-time initialization token for screenSharingControlStateManager != -1)
    swift_once();
  swift_retain();
  CurrentValueSubject.send(_:)();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_9_0();
}

void ConversationControlsManager.shareMenuButtonState.modify(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;

  *(_QWORD *)(a1 + 24) = v1;
  v3 = ConversationControlsManager.shareMenuButtonState.getter();
  *(_BYTE *)(a1 + 1) = ((unsigned __int16)OUTLINED_FUNCTION_68_0(v3) >> 8) & 1;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5 & 1;
  *(_BYTE *)(a1 + 17) = v6 & 1;
  OUTLINED_FUNCTION_0();
}

void ConversationControlsManager.shareMenuButtonState.modify()
{
  ConversationControlsManager.shareMenuButtonState.setter();
}

uint64_t ConversationControlsManager.screenSharingAvailable.getter()
{
  unsigned __int8 v1;

  if (one-time initialization token for screenSharingControlStateManager != -1)
    swift_once();
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  CurrentValueSubject.value.getter();
  OUTLINED_FUNCTION_43();
  return v1;
}

void ConversationControlsManager.screenSharingAvailable.setter()
{
  if (one-time initialization token for screenSharingControlStateManager != -1)
    swift_once();
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  CurrentValueSubject.send(_:)();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_36();
}

void ConversationControlsManager.screenSharingAvailable.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = ConversationControlsManager.screenSharingAvailable.getter() & 1;
  OUTLINED_FUNCTION_0();
}

void ConversationControlsManager.screenSharingAvailable.modify()
{
  ConversationControlsManager.screenSharingAvailable.setter();
}

void ConversationControlsManager.shareMenuButtonStatePublisher.getter()
{
  if (one-time initialization token for screenSharingControlStateManager != -1)
    swift_once();
  OUTLINED_FUNCTION_57_0();
  OUTLINED_FUNCTION_5_48(lazy protocol witness table cache variable for type CurrentValueSubject<ShareMenuActionState, Never> and conformance CurrentValueSubject<A, B>);
  OUTLINED_FUNCTION_262_0();
  OUTLINED_FUNCTION_45_0();
}

void ConversationControlsManager.screenSharingAvailablePublisher.getter()
{
  if (one-time initialization token for screenSharingControlStateManager != -1)
    swift_once();
  OUTLINED_FUNCTION_57_0();
  OUTLINED_FUNCTION_5_48(lazy protocol witness table cache variable for type CurrentValueSubject<Bool, Never> and conformance CurrentValueSubject<A, B>);
  OUTLINED_FUNCTION_262_0();
  OUTLINED_FUNCTION_45_0();
}

BOOL static ConversationControlsManager.PushToTalkChannelState.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

void ConversationControlsManager.PushToTalkChannelState.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
  Hasher._combine(_:)(a2);
  OUTLINED_FUNCTION_0();
}

Swift::Int ConversationControlsManager.PushToTalkChannelState.hashValue.getter(unsigned __int8 a1)
{
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1);
  return OUTLINED_FUNCTION_4_6();
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance ConversationControlsManager.PushToTalkChannelState(char *a1, char *a2)
{
  return static ConversationControlsManager.PushToTalkChannelState.== infix(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance ConversationControlsManager.PushToTalkChannelState()
{
  unsigned __int8 *v0;

  return ConversationControlsManager.PushToTalkChannelState.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance ConversationControlsManager.PushToTalkChannelState(uint64_t a1)
{
  unsigned __int8 *v1;

  ConversationControlsManager.PushToTalkChannelState.hash(into:)(a1, *v1);
}

uint64_t key path getter for ConversationControlsManager.pttChannelState : ConversationControlsManager@<X0>(_QWORD **a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x698))();
  *a2 = result;
  return result;
}

void key path setter for ConversationControlsManager.pttChannelState : ConversationControlsManager()
{
  ConversationControlsManager.pttChannelState.setter();
}

void ConversationControlsManager.pttChannelState.didset()
{
  void *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v1 = type metadata accessor for Logger();
  __swift_project_value_buffer(v1, (uint64_t)&static Logger.conversationControls);
  v8 = v0;
  v2 = Logger.logObject.getter();
  v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v9 = v5;
    *(_DWORD *)v4 = 136315138;
    (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v8) + 0x698))();
    v6 = String.init<A>(reflecting:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v6, v7, &v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v2, v3, "pttChannelState: %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v5, -1, -1);
    MEMORY[0x1C3B751B8](v4, -1, -1);

  }
  else
  {

  }
}

void ConversationControlsManager.pttChannelState.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  OUTLINED_FUNCTION_29_3();
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_43_1();
}

void ConversationControlsManager.pttChannelState.setter()
{
  void *v0;
  id v1;

  swift_getKeyPath();
  swift_getKeyPath();
  v1 = v0;
  OUTLINED_FUNCTION_181();
  ConversationControlsManager.pttChannelState.didset();
  OUTLINED_FUNCTION_45_0();
}

void ConversationControlsManager.$pttChannelState.getter()
{
  ConversationControlsManager.$shouldOpenMessages.getter(&OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager__pttChannelState);
}

void ConversationControlsManager.$pttChannelState.setter()
{
  ConversationControlsManager.$shouldOpenMessages.setter();
}

uint64_t key path getter for ConversationControlsManager.pttChannelTransmissionMode : ConversationControlsManager@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x6C8))();
  *a2 = result;
  return result;
}

void key path setter for ConversationControlsManager.pttChannelTransmissionMode : ConversationControlsManager()
{
  ConversationControlsManager.pttChannelTransmissionMode.setter();
}

void ConversationControlsManager.pttChannelTransmissionMode.didset()
{
  void *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v1 = type metadata accessor for Logger();
  __swift_project_value_buffer(v1, (uint64_t)&static Logger.conversationControls);
  v8 = v0;
  v2 = Logger.logObject.getter();
  v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v9 = v5;
    *(_DWORD *)v4 = 136315138;
    (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v8) + 0x6C8))();
    type metadata accessor for TUCallTransmissionMode(0);
    v6 = String.init<A>(reflecting:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v6, v7, &v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v2, v3, "pttChannelTransmissionMode: %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v5, -1, -1);
    MEMORY[0x1C3B751B8](v4, -1, -1);

  }
  else
  {

  }
}

void ConversationControlsManager.pttChannelTransmissionMode.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  OUTLINED_FUNCTION_29_3();
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_45_0();
}

void ConversationControlsManager.pttChannelTransmissionMode.setter()
{
  void *v0;
  id v1;

  swift_getKeyPath();
  swift_getKeyPath();
  v1 = v0;
  OUTLINED_FUNCTION_181();
  ConversationControlsManager.pttChannelTransmissionMode.didset();
  OUTLINED_FUNCTION_45_0();
}

void ConversationControlsManager.$pttChannelTransmissionMode.getter()
{
  ConversationControlsManager.$shouldOpenMessages.getter(&OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager__pttChannelTransmissionMode);
}

void ConversationControlsManager.$pttChannelTransmissionMode.setter()
{
  ConversationControlsManager.$shouldOpenMessages.setter();
}

uint64_t key path setter for ConversationControlsManager.pttViewModel : ConversationControlsManager()
{
  uint64_t v0;

  v0 = swift_retain();
  return ConversationControlsManager.pttViewModel.setter(v0);
}

void ConversationControlsManager.pttViewModel.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  if (!*(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager____lazy_storage___pttViewModel))
  {
    type metadata accessor for PushToTalkViewModel();
    OUTLINED_FUNCTION_14_0();
    v1 = OUTLINED_FUNCTION_64_7();
    v2 = PushToTalkViewModel.init(conversationControlsManager:)(v1);
    OUTLINED_FUNCTION_501(v2);
    OUTLINED_FUNCTION_11_0();
  }
  swift_retain();
  OUTLINED_FUNCTION_18();
}

uint64_t ConversationControlsManager.pttViewModel.setter(uint64_t a1)
{
  return OUTLINED_FUNCTION_117_1(a1);
}

void ConversationControlsManager.pttCallUpdateSubject.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if (!*(_QWORD *)(v0
                  + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager____lazy_storage___pttCallUpdateSubject))
  {
    OUTLINED_FUNCTION_206();
    OUTLINED_FUNCTION_27_1(v1);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CurrentValueSubject<Call, Never>);
    OUTLINED_FUNCTION_14_0();
    v2 = CurrentValueSubject.init(_:)();
    OUTLINED_FUNCTION_501(v2);
    OUTLINED_FUNCTION_11_0();
  }
  swift_retain();
  OUTLINED_FUNCTION_45_0();
}

uint64_t ConversationControlsManager.pttCallStatusUpdateCancellable.setter(uint64_t a1)
{
  return OUTLINED_FUNCTION_117_1(a1);
}

uint64_t ConversationControlsManager.confirmLeavePTTChannelAlert.setter(uint64_t a1)
{
  return OUTLINED_FUNCTION_117_1(a1);
}

BOOL ConversationControlsManager.isConfirmLeavePTTChannelAlertPresented.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_confirmLeavePTTChannelAlert) != 0;
}

uint64_t key path getter for ConversationControlsManager.foregroundApp : ConversationControlsManager@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x778))();
  *a2 = result;
  return result;
}

uint64_t key path setter for ConversationControlsManager.foregroundApp : ConversationControlsManager(id *a1, _QWORD **a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x780);
  v4 = *a1;
  return v3(v2);
}

void ConversationControlsManager.foregroundApp.didset()
{
  void *v0;
  int *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  NSObject *v7;
  os_log_type_t v8;
  _BOOL4 v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void);
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  char v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  uint64_t (*v27)(void);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  char *v33;
  char *v34;
  void *v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v42;
  void *v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  char v49;
  char *v50;
  id v51;
  double v52;
  char *v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  id v60;
  char *v61;
  char *v62;
  NSObject *v63;
  os_log_type_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  char *v73;
  id v74;
  os_log_type_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  int *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89[9];

  v1 = (int *)type metadata accessor for AppLaunchNotice(0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v84 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v4 = type metadata accessor for Logger();
  v5 = __swift_project_value_buffer(v4, (uint64_t)&static Logger.conversationControls);
  v6 = v0;
  v86 = v5;
  v7 = Logger.logObject.getter();
  v8 = static os_log_type_t.default.getter();
  v9 = os_log_type_enabled(v7, v8);
  v10 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  if (v9)
  {
    v84 = v1;
    v85 = v3;
    v11 = swift_slowAlloc();
    v12 = swift_slowAlloc();
    v89[0] = v12;
    *(_DWORD *)v11 = 136315394;
    v13 = *(uint64_t (**)(void))((*v10 & *v6) + 0x778);
    v14 = v13();
    if (v14)
    {
      v15 = (void *)v14;
      v17 = *(_QWORD *)(v14 + OBJC_IVAR____TtC15ConversationKit13ForegroundApp_bundleIdentifier);
      v16 = *(_QWORD *)(v14 + OBJC_IVAR____TtC15ConversationKit13ForegroundApp_bundleIdentifier + 8);
      swift_bridgeObjectRetain();

    }
    else
    {
      v17 = 0;
      v16 = 0;
    }
    v87 = v17;
    v88 = v16;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for String?);
    v18 = String.init<A>(describing:)();
    v87 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v18, v19, v89);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    v20 = swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2080;
    v21 = (_BYTE *)((uint64_t (*)(uint64_t))v13)(v20);
    if (v21)
    {
      v22 = v21[OBJC_IVAR____TtC15ConversationKit13ForegroundApp_type];

      LOBYTE(v87) = v22;
      v23 = String.init<A>(reflecting:)();
      v25 = v24;
    }
    else
    {
      v25 = 0xE300000000000000;
      v23 = 7104878;
    }
    v3 = v85;
    v87 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v23, v25, v89);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v7, v8, "Foregrounded app:%s, type:%s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v12, -1, -1);
    MEMORY[0x1C3B751B8](v11, -1, -1);

    v1 = v84;
    v10 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  }
  else
  {

  }
  if (one-time initialization token for shared != -1)
    swift_once();
  v26 = (_QWORD *)static SharePlayDiscoverabilityAppsController.shared;
  v27 = *(uint64_t (**)(void))((*v10 & *v6) + 0x778);
  v28 = v27();
  v29 = (*(uint64_t (**)(uint64_t))((*v10 & *v26) + 0xA0))(v28);
  v30 = (*(uint64_t (**)(uint64_t))((*v10 & *v6) + 0x9F0))(v29);
  v31 = (void *)(*(uint64_t (**)(uint64_t))((*v10 & *v6) + 0x290))(v30);
  if (v31)
  {
    v32 = v31;
    if (!objc_msgSend(v31, sel_isBackedByGroupSession))
      goto LABEL_40;
    v33 = (char *)v27();
    if (!v33)
      goto LABEL_40;
    v34 = v33;
    if (((*(uint64_t (**)(void))((*v10 & *(_QWORD *)v33) + 0x80))() & 1) == 0)
    {

LABEL_40:
      return;
    }
    v35 = (void *)(*(uint64_t (**)(void))((*v10 & *v6) + 0x8D0))();
    if (!v35)
      goto LABEL_28;
    v36 = v35;
    if (objc_msgSend(v35, sel_state) == (id)1 || !objc_msgSend(v36, sel_state))
    {
      outlined bridged method (ob) of @objc TUConversationActivity.bundleIdentifier.getter(objc_msgSend(v36, sel_activity));
      if (v38)
      {
        v39 = *(_QWORD *)&v34[OBJC_IVAR____TtC15ConversationKit13ForegroundApp_bundleIdentifier];
        v40 = *(_QWORD *)&v34[OBJC_IVAR____TtC15ConversationKit13ForegroundApp_bundleIdentifier + 8];
        v85 = &v34[OBJC_IVAR____TtC15ConversationKit13ForegroundApp_bundleIdentifier];
        if (v37 == v39 && v38 == v40)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          v42 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if ((v42 & 1) == 0)
            goto LABEL_27;
        }
        v73 = v34;
        v74 = v36;
        v62 = v73;
        v61 = (char *)v74;
        v63 = Logger.logObject.getter();
        v75 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v63, v75))
        {
          v76 = swift_slowAlloc();
          v77 = swift_slowAlloc();
          v89[0] = v77;
          *(_DWORD *)v76 = 136315394;
          v78 = *(_QWORD *)v85;
          v79 = *((_QWORD *)v85 + 1);
          swift_bridgeObjectRetain();
          v87 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v78, v79, v89);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          *(_WORD *)(v76 + 12) = 2080;
          outlined bridged method (ob) of @objc TUConversationActivity.bundleIdentifier.getter(objc_msgSend(v61, sel_activity));
          v87 = v80;
          v88 = v81;
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for String?);
          v82 = String.init<A>(describing:)();
          v87 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v82, v83, v89);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1BD004000, v63, v75, "Foreground app bundleIdentifier (%s) is same as currentActivity (%s)", (uint8_t *)v76, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x1C3B751B8](v77, -1, -1);
          MEMORY[0x1C3B751B8](v76, -1, -1);

          goto LABEL_48;
        }
        goto LABEL_49;
      }
    }
LABEL_27:

LABEL_28:
    v43 = (void *)(*(uint64_t (**)(void))((*v10 & *v6) + 0x8D8))();
    if (!v43)
    {
LABEL_36:
      v50 = v34;
      v51 = v32;
      UUID.init()();
      Date.init()();
      if (one-time initialization token for shared != -1)
        swift_once();
      v52 = (*(double (**)(void))(*(_QWORD *)static Defaults.shared + 976))();
      v3[v1[6]] = 4;
      *(_QWORD *)&v3[v1[7]] = v50;
      *(_QWORD *)&v3[v1[8]] = v51;
      v3[v1[9]] = 0;
      *(double *)&v3[v1[10]] = v52;
      v3[v1[11]] = 1;
      v3[v1[12]] = 1;
      v53 = &v3[v1[13]];
      *(_QWORD *)v53 = 0;
      *((_QWORD *)v53 + 1) = 0;
      v54 = &v3[v1[14]];
      *(_QWORD *)v54 = 0;
      *((_QWORD *)v54 + 1) = 0;
      v3[v1[15]] = 0;
      v55 = &v3[v1[16]];
      *(_QWORD *)v55 = 0;
      *((_QWORD *)v55 + 1) = 0;
      specialized ConversationControlsManager.post(notice:)((uint64_t)v3, (uint64_t)v6, (uint64_t)type metadata accessor for AppLaunchNotice, (uint64_t)&protocol witness table for AppLaunchNotice, (uint64_t)specialized ConversationControlsNoticeCoordinator.post(notice:), v56, v57, v58, (uint64_t)v84, (uint64_t)v85, v86, v87, v88, v89[0], v89[1], v89[2], v89[3], v89[4], v89[5],
        v89[6],
        v89[7],
        v89[8]);

      outlined destroy of AccountUpdateNotice((uint64_t)v3, type metadata accessor for AppLaunchNotice);
      return;
    }
    v44 = v43;
    outlined bridged method (ob) of @objc TUConversationActivity.bundleIdentifier.getter(objc_msgSend(v43, sel_activity));
    if (!v46)
    {
LABEL_35:

      goto LABEL_36;
    }
    v47 = (uint64_t *)&v34[OBJC_IVAR____TtC15ConversationKit13ForegroundApp_bundleIdentifier];
    if (v45 == *(_QWORD *)&v34[OBJC_IVAR____TtC15ConversationKit13ForegroundApp_bundleIdentifier]
      && v46 == *(_QWORD *)&v34[OBJC_IVAR____TtC15ConversationKit13ForegroundApp_bundleIdentifier + 8])
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v49 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v49 & 1) == 0)
        goto LABEL_35;
    }
    v59 = v34;
    v60 = v44;
    v61 = v59;
    v62 = (char *)v60;
    v63 = Logger.logObject.getter();
    v64 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v63, v64))
    {
      v65 = swift_slowAlloc();
      v66 = swift_slowAlloc();
      v89[0] = v66;
      *(_DWORD *)v65 = 136315394;
      v67 = *v47;
      v68 = v47[1];
      swift_bridgeObjectRetain();
      v87 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v67, v68, v89);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v65 + 12) = 2080;
      outlined bridged method (ob) of @objc TUConversationActivity.bundleIdentifier.getter(objc_msgSend(v62, sel_activity));
      v87 = v69;
      v88 = v70;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for String?);
      v71 = String.init<A>(describing:)();
      v87 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v71, v72, v89);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BD004000, v63, v64, "Foreground app bundleIdentifier (%s) is same as stagedActivity (%s)", (uint8_t *)v65, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v66, -1, -1);
      MEMORY[0x1C3B751B8](v65, -1, -1);

LABEL_48:
      return;
    }
LABEL_49:

    goto LABEL_40;
  }
}

void ConversationControlsManager.foregroundApp.getter()
{
  ConversationControlsManager.audioRoute.getter();
}

void ConversationControlsManager.foregroundApp.setter(void *a1)
{
  void *v1;
  id v3;
  id v4;

  swift_getKeyPath();
  swift_getKeyPath();
  v3 = a1;
  v4 = v1;
  OUTLINED_FUNCTION_181();
  ConversationControlsManager.foregroundApp.didset();

  OUTLINED_FUNCTION_45_0();
}

void ConversationControlsManager.foregroundApp.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  a1[1] = v1;
  ConversationControlsManager.foregroundApp.getter();
  *a1 = v3;
  OUTLINED_FUNCTION_0();
}

void ConversationControlsManager.foregroundApp.modify(void **a1, char a2)
{
  void *v2;
  id v3;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    v3 = v2;
    ConversationControlsManager.foregroundApp.setter(v2);
    OUTLINED_FUNCTION_7_1(v3);
  }
  else
  {
    ConversationControlsManager.foregroundApp.setter(*a1);
    OUTLINED_FUNCTION_36();
  }
}

uint64_t key path setter for ConversationControlsManager.$foregroundApp : ConversationControlsManager(uint64_t a1, _QWORD **a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<ForegroundApp?>.Publisher);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  return (*(uint64_t (**)(char *))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x798))(v6);
}

void ConversationControlsManager.$foregroundApp.getter()
{
  ConversationControlsManager.$shouldOpenMessages.getter(&OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager__foregroundApp);
}

void ConversationControlsManager.$foregroundApp.setter()
{
  ConversationControlsManager.$shouldOpenMessages.setter();
}

void ConversationControlsManager.$foregroundApp.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_46_17();
  OUTLINED_FUNCTION_35_11((uint64_t)v1);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<ForegroundApp?>.Publisher);
  *(_QWORD *)(v0 + 48) = OUTLINED_FUNCTION_15_3(v2);
  *(_QWORD *)(v0 + 56) = OUTLINED_FUNCTION_21_50();
  OUTLINED_FUNCTION_2_0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<ForegroundApp?>);
  OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_18();
}

{
  ConversationControlsManager.$foregroundApp.modify();
}

{
  uint64_t v0;
  void (*v1)(uint64_t);
  void (*v2)(uint64_t);
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t);

  OUTLINED_FUNCTION_96();
  v2 = v1;
  v3 = *(_QWORD **)v0;
  v4 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  v5 = *(void **)(*(_QWORD *)v0 + 56);
  if ((v6 & 1) != 0)
  {
    v7 = v3[4];
    v8 = v3[5];
    v9 = OUTLINED_FUNCTION_38_21();
    v10(v9);
    v2(v4);
    (*(void (**)(void *, uint64_t))(v8 + 8))(v5, v7);
  }
  else
  {
    v1(*(_QWORD *)(*(_QWORD *)v0 + 56));
  }
  free(v5);
  OUTLINED_FUNCTION_595();
  free(v3);
}

Swift::Void __swiftcall ConversationControlsManager.refreshShareableContentWithBundleIdentifier(_:)(Swift::String_optional a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  char v23;
  uint64_t v24;
  uint64_t v25[11];
  uint64_t v26;
  uint64_t v27;

  OUTLINED_FUNCTION_65_5();
  v26 = v4;
  v27 = v5;
  OUTLINED_FUNCTION_6_6();
  if (one-time initialization token for shareableContent != -1)
    swift_once();
  v6 = OUTLINED_FUNCTION_17_2();
  __swift_project_value_buffer(v6, (uint64_t)&static Logger.shareableContent);
  swift_bridgeObjectRetain_n();
  v7 = v2;
  v8 = OUTLINED_FUNCTION_26_31();
  v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = 7104878;
    v11 = OUTLINED_FUNCTION_105();
    v25[0] = OUTLINED_FUNCTION_105();
    *(_DWORD *)v11 = 136315394;
    if (v1)
    {
      OUTLINED_FUNCTION_124();
      v13 = String.init<A>(reflecting:)();
    }
    else
    {
      v13 = 7104878;
    }
    OUTLINED_FUNCTION_657(v13, v12, v25);
    OUTLINED_FUNCTION_440();
    OUTLINED_FUNCTION_19_1();
    OUTLINED_FUNCTION_27();
    *(_WORD *)(v11 + 12) = 2080;
    v14 = OUTLINED_FUNCTION_622(*MEMORY[0x1E0DEEDD8] & *v7);
    if (v14)
    {
      v16 = (void *)v14;
      OUTLINED_FUNCTION_8_8();

      v10 = String.init<A>(reflecting:)();
    }
    OUTLINED_FUNCTION_657(v10, v15, v25);
    OUTLINED_FUNCTION_440();

    OUTLINED_FUNCTION_27();
    OUTLINED_FUNCTION_26_6(&dword_1BD004000, v8, v9, "refreshShareableContent (bundleIdentifier: %s, foregroundAppBundleIdentifier: %s)", (uint8_t *)v11);
    OUTLINED_FUNCTION_25_6();
    OUTLINED_FUNCTION_60();
  }

  OUTLINED_FUNCTION_19_1();
  if (v1)
  {
    OUTLINED_FUNCTION_9_28();
    v18 = OUTLINED_FUNCTION_622(v17);
    if (v18)
    {
      v19 = (void *)v18;
      v21 = *(_QWORD *)(v18 + OBJC_IVAR____TtC15ConversationKit13ForegroundApp_bundleIdentifier);
      v20 = *(_QWORD *)(v18 + OBJC_IVAR____TtC15ConversationKit13ForegroundApp_bundleIdentifier + 8);
      swift_bridgeObjectRetain();

      if (v21 == v3 && v20 == v1)
      {
        OUTLINED_FUNCTION_27();
      }
      else
      {
        OUTLINED_FUNCTION_124_0();
        v23 = OUTLINED_FUNCTION_13();
        OUTLINED_FUNCTION_27();
        if ((v23 & 1) == 0)
          goto LABEL_21;
      }
      OUTLINED_FUNCTION_9_28();
      (*(void (**)(void))(v24 + 2544))();
    }
  }
LABEL_21:
  OUTLINED_FUNCTION_8_0();
}

Swift::Bool __swiftcall ConversationControlsManager.isAppUnsupportedOnSharePlayPlatform(_:)(Swift::String a1)
{
  void *object;
  uint64_t countAndFlagsBits;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  char v9;
  _OWORD v11[2];
  __int128 v12;
  __int128 v13;

  object = a1._object;
  countAndFlagsBits = a1._countAndFlagsBits;
  v3 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  if (!v3)
  {
    v12 = 0u;
    v13 = 0u;
LABEL_9:
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v12, &demangling cache variable for type metadata for Any?);
    goto LABEL_10;
  }
  v4 = v3;
  OUTLINED_FUNCTION_61();
  outlined bridged method (mbnn) of @objc FTServerBag.object(forKey:)(0xD00000000000001ELL, v5, v4);
  v7 = v6;

  if (v7)
  {
    _bridgeAnyObjectToAny(_:)();
    OUTLINED_FUNCTION_9_10();
  }
  else
  {
    memset(v11, 0, sizeof(v11));
  }
  outlined init with take of Any?((uint64_t)v11, (uint64_t)&v12, &demangling cache variable for type metadata for Any?);
  if (!*((_QWORD *)&v13 + 1))
    goto LABEL_9;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [String]);
  if (!OUTLINED_FUNCTION_97())
  {
LABEL_10:
    v8 = &outlined read-only object #0 of ConversationControlsManager.isAppUnsupportedOnSharePlayPlatform(_:);
    goto LABEL_11;
  }
  v8 = *(_QWORD **)&v11[0];
LABEL_11:
  v9 = specialized Sequence<>.contains(_:)(countAndFlagsBits, (uint64_t)object, v8);
  OUTLINED_FUNCTION_2_1();
  return v9 & 1;
}

void ConversationControlsManager.CollaborationPrompt.hash(into:)(uint64_t a1, Swift::UInt a2, __int16 a3)
{
  char v4;
  Swift::UInt v5;

  if ((a3 & 0x100) != 0)
  {
    v5 = 0;
    goto LABEL_5;
  }
  v4 = a3;
  Hasher._combine(_:)(1uLL);
  if ((v4 & 1) == 0)
  {
    Hasher._combine(_:)(1u);
    v5 = a2;
LABEL_5:
    Hasher._combine(_:)(v5);
    return;
  }
  Hasher._combine(_:)(0);
}

uint64_t static ConversationControlsManager.CollaborationPrompt.== infix(_:_:)(uint64_t a1, __int16 a2, uint64_t a3, __int16 a4)
{
  if (a2 & 0x100 | a4 & 0x100)
    return (unsigned __int16)(a2 & 0x100 & a4 & 0x100) >> 8;
  if ((a2 & 1) != 0)
  {
    if ((a4 & 1) != 0)
      return 1;
  }
  else if ((a4 & 1) == 0 && a1 == a3)
  {
    return 1;
  }
  return 0;
}

Swift::Int ConversationControlsManager.CollaborationPrompt.hashValue.getter(Swift::UInt a1, __int16 a2)
{
  _BYTE v5[72];

  Hasher.init(_seed:)();
  ConversationControlsManager.CollaborationPrompt.hash(into:)((uint64_t)v5, a1, a2 & 0x1FF);
  return Hasher._finalize()();
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance ConversationControlsManager.CollaborationPrompt()
{
  uint64_t v0;

  return ConversationControlsManager.CollaborationPrompt.hashValue.getter(*(_QWORD *)v0, *(unsigned __int8 *)(v0 + 8) | (unsigned __int16)(*(unsigned __int8 *)(v0 + 9) << 8));
}

void protocol witness for Hashable.hash(into:) in conformance ConversationControlsManager.CollaborationPrompt(uint64_t a1)
{
  uint64_t v1;

  ConversationControlsManager.CollaborationPrompt.hash(into:)(a1, *(_QWORD *)v1, *(unsigned __int8 *)(v1 + 8) | (*(unsigned __int8 *)(v1 + 9) << 8));
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance ConversationControlsManager.CollaborationPrompt()
{
  uint64_t v0;
  Swift::UInt v1;
  __int16 v2;
  __int16 v3;
  _BYTE v5[72];

  v1 = *(_QWORD *)v0;
  v2 = *(unsigned __int8 *)(v0 + 8);
  v3 = *(unsigned __int8 *)(v0 + 9);
  Hasher.init(_seed:)();
  ConversationControlsManager.CollaborationPrompt.hash(into:)((uint64_t)v5, v1, v2 | (v3 << 8));
  return Hasher._finalize()();
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance ConversationControlsManager.CollaborationPrompt(uint64_t a1, uint64_t a2)
{
  return static ConversationControlsManager.CollaborationPrompt.== infix(_:_:)(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8) | (unsigned __int16)(*(unsigned __int8 *)(a1 + 9) << 8), *(_QWORD *)a2, *(unsigned __int8 *)(a2 + 8) | (unsigned __int16)(*(unsigned __int8 *)(a2 + 9) << 8));
}

void ConversationControlsManager.shouldPost(collaborationPrompt:forBundleIdentifier:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int16 v3;
  __int16 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_93();
  v4 = v3;
  v6 = v5;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Cache<String, [ConversationControlsManager.CollaborationPrompt]>);
  OUTLINED_FUNCTION_41_1();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_77_1();
  v8 = v0 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_postedCollaborationPrompts;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_533(v1, v8, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
  Cache.subscript.getter();
  OUTLINED_FUNCTION_39_0(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  if (v14)
    v9 = v14;
  else
    v9 = MEMORY[0x1E0DEE9D8];
  if ((specialized Sequence<>.contains(_:)(v6, v4 & 0x1FF, v9) & 1) != 0)
  {
    OUTLINED_FUNCTION_27();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      OUTLINED_FUNCTION_589();
      v9 = v12;
    }
    v10 = *(_QWORD *)(v9 + 16);
    if (v10 >= *(_QWORD *)(v9 + 24) >> 1)
    {
      OUTLINED_FUNCTION_589();
      v9 = v13;
    }
    *(_QWORD *)(v9 + 16) = v10 + 1;
    v11 = v9 + 16 * v10;
    *(_QWORD *)(v11 + 32) = v6;
    *(_BYTE *)(v11 + 40) = v4;
    *(_BYTE *)(v11 + 41) = HIBYTE(v4) & 1;
    OUTLINED_FUNCTION_8_8();
    specialized Sequence.suffix(_:)(100, v9);
    OUTLINED_FUNCTION_2_0();
    Cache.subscript.setter();
    swift_endAccess();
  }
  OUTLINED_FUNCTION_52_1();
}

void specialized Sequence.suffix(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  if (a1 < 0)
  {
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  if (!a1)
    goto LABEL_17;
  v31 = MEMORY[0x1E0DEE9D8];
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  v8 = *(_QWORD *)(a2 + 16);
  if (!v8)
    goto LABEL_17;
  swift_bridgeObjectRetain();
  v2 = 0;
  v9 = 0;
  v4 = -v8;
  v10 = a2 + 41;
  while (2)
  {
    v11 = (char *)(v10 + 16 * v9++);
    while (1)
    {
      if ((unint64_t)(v9 - 1) >= *(_QWORD *)(a2 + 16))
      {
        __break(1u);
LABEL_42:
        __break(1u);
        goto LABEL_43;
      }
      v3 = *(_QWORD *)(v11 - 9);
      v5 = *(v11 - 1);
      v12 = *v11;
      v13 = *(_QWORD *)(v31 + 16);
      if ((uint64_t)v13 < a1)
        break;
      if (v2 >= v13)
        goto LABEL_42;
      v14 = v31 + 32 + 16 * v2;
      *(_QWORD *)v14 = v3;
      *(_BYTE *)(v14 + 8) = v5;
      *(_BYTE *)(v14 + 9) = v12;
      if (++v2 < a1)
        goto LABEL_15;
      v2 = 0;
      ++v9;
      v11 += 16;
      if (v4 + v9 == 1)
      {
        swift_bridgeObjectRelease();
        goto LABEL_17;
      }
    }
    v15 = v13 + 1;
    if (v13 >= *(_QWORD *)(v31 + 24) >> 1)
    {
      v29 = v10;
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      v10 = v29;
      v15 = v13 + 1;
    }
    *(_QWORD *)(v31 + 16) = v15;
    v16 = v31 + 16 * v13;
    *(_QWORD *)(v16 + 32) = v3;
    *(_BYTE *)(v16 + 40) = v5;
    *(_BYTE *)(v16 + 41) = v12;
LABEL_15:
    if (v4 + v9)
      continue;
    break;
  }
  swift_bridgeObjectRelease();
  if (!v2)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    return;
  }
  v5 = v31;
  v4 = *(_QWORD *)(v31 + 16);
  v30 = MEMORY[0x1E0DEE9D8];
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  v3 = v4 - v2;
  if ((uint64_t)v4 < v2)
    goto LABEL_44;
  if (v2 < 0)
    goto LABEL_45;
  v17 = *(_QWORD *)(v31 + 16);
  if (v17 < v2 || v17 < v4)
  {
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
LABEL_48:
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    v19 = v30;
    v20 = *(_QWORD *)(v30 + 16);
    v21 = *(_QWORD *)(v30 + 24) >> 1;
    goto LABEL_29;
  }
  v19 = v30;
  v20 = *(_QWORD *)(v30 + 16);
  if (__OFADD__(v20, v3))
    goto LABEL_47;
  v21 = *(_QWORD *)(v30 + 24) >> 1;
  swift_retain();
  if (v21 < v20 + v3)
    goto LABEL_48;
LABEL_29:
  if (v4 == v2)
  {
    if (v3 <= 0)
      goto LABEL_36;
    __break(1u);
  }
  if (v21 - v20 < v3)
  {
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  specialized UnsafeMutablePointer.initialize(from:count:)(v5 + 32 + 16 * v2, v3);
  if (v3 < 1)
  {
LABEL_36:
    swift_release();
    swift_bridgeObjectRelease();
    v25 = *(_QWORD *)(v19 + 16);
    if (__OFADD__(v25, v2))
    {
      __break(1u);
    }
    else
    {
      v30 = v19;
      v26 = *(_QWORD *)(v19 + 24) >> 1;
      swift_retain();
      if (v26 >= v25 + v2)
      {
LABEL_38:
        if (v26 - v25 < v2)
        {
          __break(1u);
        }
        else
        {
          specialized UnsafeMutablePointer.initialize(from:count:)(v5 + 32, v2);
          v27 = *(_QWORD *)(v19 + 16);
          v23 = __OFADD__(v27, v2);
          v28 = v27 + v2;
          if (!v23)
          {
            *(_QWORD *)(v19 + 16) = v28;
            swift_release_n();
            return;
          }
        }
        __break(1u);
        goto LABEL_53;
      }
    }
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    v19 = v30;
    v25 = *(_QWORD *)(v30 + 16);
    v26 = *(_QWORD *)(v30 + 24) >> 1;
    goto LABEL_38;
  }
  v22 = *(_QWORD *)(v19 + 16);
  v23 = __OFADD__(v22, v3);
  v24 = v22 + v3;
  if (!v23)
  {
    *(_QWORD *)(v19 + 16) = v24;
    goto LABEL_36;
  }
LABEL_54:
  __break(1u);
}

void specialized Sequence.suffix(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  OUTLINED_FUNCTION_93();
  v2 = v1;
  v4 = v3;
  type metadata accessor for TranscriptionViewModel.Caption(0);
  OUTLINED_FUNCTION_47_1();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v4 < 0)
  {
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  if (!v4)
  {
    OUTLINED_FUNCTION_54_1();
LABEL_32:
    OUTLINED_FUNCTION_52_1();
    return;
  }
  if (*(_QWORD *)(v2 + 16) >= v4)
    v8 = v4;
  else
    v8 = *(_QWORD *)(v2 + 16);
  v28 = MEMORY[0x1E0DEE9D8];
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, v8, 0);
  v9 = v28;
  v10 = *(_QWORD *)(v2 + 16);
  if (!v10)
  {
LABEL_30:
    swift_bridgeObjectRelease();
    goto LABEL_32;
  }
  v25 = (*(unsigned __int8 *)(v0 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 80);
  v11 = v2 + v25;
  v26 = *(_QWORD *)(v0 + 72);
  swift_bridgeObjectRetain();
  v12 = 0;
  v13 = 0;
  v24 = v10 - 1;
  while (1)
  {
    v14 = (uint64_t)v7;
    outlined init with copy of ConversationControlsAppLaunchButtonType(v11, (uint64_t)v7, type metadata accessor for TranscriptionViewModel.Caption);
    v15 = *(_QWORD *)(v9 + 16);
    v28 = v9;
    if ((uint64_t)v15 >= v4)
    {
      if (v13 >= v15)
        goto LABEL_33;
      v7 = (char *)v14;
      outlined assign with take of TranscriptionViewModel.Caption(v14, v9 + v25 + v26 * v13);
      v9 = v28;
      if ((uint64_t)++v13 >= v4)
      {
        if (v24 == v12)
        {
          OUTLINED_FUNCTION_19_1();
          goto LABEL_32;
        }
        v13 = 0;
        goto LABEL_18;
      }
    }
    else
    {
      v16 = *(_QWORD *)(v9 + 24);
      if (v15 >= v16 >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v16 > 1, v15 + 1, 1);
        v9 = v28;
      }
      *(_QWORD *)(v9 + 16) = v15 + 1;
      v17 = v9 + v25 + v15 * v26;
      v7 = (char *)v14;
      outlined init with take of StagedCollaboration(v14, v17, type metadata accessor for TranscriptionViewModel.Caption);
    }
    if (v24 == v12)
      break;
LABEL_18:
    ++v12;
    v11 += v26;
    if (v12 >= *(_QWORD *)(v2 + 16))
    {
      __break(1u);
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
  }
  OUTLINED_FUNCTION_27();
  if (!v13)
    goto LABEL_30;
  v18 = *(_QWORD *)(v9 + 16);
  v27 = MEMORY[0x1E0DEE9D8];
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, v18, 0);
  if (v18 < (uint64_t)v13)
    goto LABEL_35;
  if ((v13 & 0x8000000000000000) != 0)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v19 = *(_QWORD *)(v9 + 16);
  if (v19 >= v13 && v19 >= v18)
  {
    v21 = v9 + v25;
    v22 = OUTLINED_FUNCTION_11_1();
    specialized ContiguousArray.append<A>(contentsOf:)(v22, v21, v13, (2 * v18) | 1);
    OUTLINED_FUNCTION_21_0();
    specialized ContiguousArray.append<A>(contentsOf:)(v9, v21, 0, (2 * v13) | 1);
    goto LABEL_32;
  }
LABEL_37:
  __break(1u);
}

uint64_t key path setter for ConversationControlsManager.foregroundCollaborationState : ConversationControlsManager(uint64_t a1, _QWORD **a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v9;

  v4 = type metadata accessor for ForegroundCollaborationState(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of ConversationControlsAppLaunchButtonType(a1, (uint64_t)v6, v7);
  return (*(uint64_t (**)(char *))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x7E0))(v6);
}

void ConversationControlsManager.foregroundCollaborationState.didset()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  NSObject *v20;
  os_log_type_t v21;
  int v22;
  _BOOL4 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  os_log_t v32;
  uint64_t v33;
  char *v34;
  _QWORD v35[3];
  os_log_t v36;
  int v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v1 = v0;
  v2 = type metadata accessor for StagedCollaboration(0);
  MEMORY[0x1E0C80A78](v2);
  v45 = (char *)v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = type metadata accessor for AppLaunchNotice(0);
  MEMORY[0x1E0C80A78](v43);
  v44 = (char *)v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ForegroundCollaborationState?);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = type metadata accessor for ForegroundCollaborationState(0);
  v8 = MEMORY[0x1E0C80A78](v46);
  v10 = (char *)v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)v35 - v11;
  v13 = *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_defaults + 8];
  swift_getObjectType();
  if (((*(uint64_t (**)(void))(v13 + 672))() & 1) != 0)
  {
    v14 = (uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_foregroundCollaborationState];
    swift_beginAccess();
    v42 = v14;
    outlined init with copy of ConversationControlsAppLaunchButtonType(v14, (uint64_t)v12, type metadata accessor for ForegroundCollaborationState);
    static ForegroundCollaborationState.== infix(_:_:)();
    v16 = v15;
    outlined destroy of AccountUpdateNotice((uint64_t)v12, type metadata accessor for ForegroundCollaborationState);
    if ((v16 & 1) == 0)
    {
      if (one-time initialization token for shareableContent != -1)
        swift_once();
      v17 = type metadata accessor for Logger();
      v18 = __swift_project_value_buffer(v17, (uint64_t)&static Logger.shareableContent);
      v19 = v1;
      v40 = v18;
      v20 = Logger.logObject.getter();
      v21 = static os_log_type_t.default.getter();
      v22 = v21;
      v23 = os_log_type_enabled(v20, v21);
      v41 = v7;
      if (v23)
      {
        v24 = swift_slowAlloc();
        v38 = swift_slowAlloc();
        v47 = v38;
        *(_DWORD *)v24 = 136315394;
        v37 = v22;
        v48 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD00000000000001CLL, 0x80000001BD6800F0, &v47);
        v39 = v19;
        v35[2] = &v49;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v24 + 12) = 2080;
        v35[1] = v24 + 14;
        v36 = v20;
        v25 = v42;
        outlined init with copy of ConversationControlsAppLaunchButtonType(v42, (uint64_t)v7, type metadata accessor for ForegroundCollaborationState);
        __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v46);
        specialized >> prefix<A>(_:)((uint64_t)v7);
        v27 = v26;
        v29 = v28;
        v19 = v39;
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v7, &demangling cache variable for type metadata for ForegroundCollaborationState?);
        v30 = v27;
        v31 = v25;
        v48 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v30, v29, &v47);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        v32 = v36;
        _os_log_impl(&dword_1BD004000, v36, (os_log_type_t)v37, "%s changed: %s", (uint8_t *)v24, 0x16u);
        v33 = v38;
        swift_arrayDestroy();
        MEMORY[0x1C3B751B8](v33, -1, -1);
        MEMORY[0x1C3B751B8](v24, -1, -1);

      }
      else
      {

        v31 = v42;
      }
      (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v19) + 0x960))();
      outlined init with copy of ConversationControlsAppLaunchButtonType(v31, (uint64_t)v10, type metadata accessor for ForegroundCollaborationState);
      v34 = (char *)&loc_1BD26492C + 4 * byte_1BD654910[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
  }
}

void ConversationControlsManager.foregroundCollaborationState.getter()
{
  ConduitLagunaNoticeManager.pushBannerInfo.getter(&OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_foregroundCollaborationState, (uint64_t)type metadata accessor for ForegroundCollaborationState, (void (*)(uint64_t))outlined init with copy of ConversationControlsAppLaunchButtonType);
}

void ConduitLagunaNoticeManager.pushBannerInfo.getter(_QWORD *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v4;

  OUTLINED_FUNCTION_546(a1);
  OUTLINED_FUNCTION_2_0();
  v4 = OUTLINED_FUNCTION_178();
  a3(v4);
  OUTLINED_FUNCTION_9_0();
}

void ConversationControlsManager.foregroundCollaborationState.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_414();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_16_2();
  v5 = v1 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_foregroundCollaborationState;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_467(v5, v2);
  OUTLINED_FUNCTION_2_0();
  outlined assign with copy of ForegroundCollaborationState(a1, v5);
  swift_endAccess();
  ConversationControlsManager.foregroundCollaborationState.didset();
  OUTLINED_FUNCTION_94(a1);
  OUTLINED_FUNCTION_94(v2);
  OUTLINED_FUNCTION_91();
}

void ConversationControlsManager.foregroundCollaborationState.modify()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  size_t v3;
  void *v4;
  uint64_t v5;

  v2 = OUTLINED_FUNCTION_124_1();
  OUTLINED_FUNCTION_35_11((uint64_t)v2);
  v3 = *(_QWORD *)(*(_QWORD *)(OUTLINED_FUNCTION_414() - 8) + 64);
  *(_QWORD *)(v1 + 32) = malloc(v3);
  v4 = malloc(v3);
  *(_QWORD *)(v1 + 40) = v4;
  v5 = v0 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_foregroundCollaborationState;
  OUTLINED_FUNCTION_64();
  OUTLINED_FUNCTION_2_0();
  outlined init with copy of ConversationControlsAppLaunchButtonType(v5, (uint64_t)v4, type metadata accessor for ForegroundCollaborationState);
  OUTLINED_FUNCTION_18();
}

void ConversationControlsManager.foregroundCollaborationState.modify(uint64_t a1, char a2)
{
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD);

  v2 = *(void **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v4 = *(void **)(*(_QWORD *)a1 + 40);
  if ((a2 & 1) != 0)
  {
    v5 = OUTLINED_FUNCTION_315_0();
    outlined init with copy of ConversationControlsAppLaunchButtonType(v5, v6, type metadata accessor for ForegroundCollaborationState);
    ConversationControlsManager.foregroundCollaborationState.setter(v3);
    v7 = OUTLINED_FUNCTION_318();
    outlined destroy of AccountUpdateNotice(v7, v8);
  }
  else
  {
    ConversationControlsManager.foregroundCollaborationState.setter(*(_QWORD *)(*(_QWORD *)a1 + 40));
  }
  free(v4);
  OUTLINED_FUNCTION_595();
  free(v2);
}

uint64_t key path getter for ConversationControlsManager.ephemeralAlert : ConversationControlsManager@<X0>(_QWORD **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  char v5;

  result = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x7F0))();
  *(_QWORD *)a2 = result;
  *(_QWORD *)(a2 + 8) = v4;
  *(_BYTE *)(a2 + 16) = v5;
  return result;
}

uint64_t key path setter for ConversationControlsManager.ephemeralAlert : ConversationControlsManager(uint64_t a1, _QWORD **a2)
{
  id v2;
  void *v3;
  uint64_t (*v4)(id, void *, uint64_t);
  uint64_t v5;

  v2 = *(id *)a1;
  v3 = *(void **)(a1 + 8);
  v4 = *(uint64_t (**)(id, void *, uint64_t))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x7F8);
  v5 = *(unsigned __int8 *)(a1 + 16);
  outlined copy of ConversationControlsRecipe.View?(*(id *)a1, v3);
  return v4(v2, v3, v5);
}

void ConversationControlsManager.ephemeralAlert.didset()
{
  void *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;

  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v1 = type metadata accessor for Logger();
  __swift_project_value_buffer(v1, (uint64_t)&static Logger.conversationControls);
  v16 = v0;
  v2 = Logger.logObject.getter();
  v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v17 = v5;
    *(_DWORD *)v4 = 136315138;
    v6 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v16) + 0x7F0))();
    if (v6)
    {
      v8 = (void *)v6;
      v9 = v7;
      v10 = v7;
      v11 = v8;
      outlined consume of ConversationControlsRecipe.View?(v8, v9);
      EphemeralAlert.description.getter(v11, v9);
      v13 = v12;
      v15 = v14;

    }
    else
    {
      v15 = 0xE400000000000000;
      v13 = 1701736302;
    }
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v13, v15, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v2, v3, "⇢ EphemeralAlert: %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v5, -1, -1);
    MEMORY[0x1C3B751B8](v4, -1, -1);

  }
  else
  {

  }
}

uint64_t ConversationControlsManager.ephemeralAlert.getter()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  OUTLINED_FUNCTION_29_3();
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_11_0();
  return v1;
}

void ConversationControlsManager.ephemeralAlert.setter()
{
  void *v0;
  void *v1;
  void *v2;
  id v3;

  OUTLINED_FUNCTION_572();
  swift_getKeyPath();
  swift_getKeyPath();
  v3 = v0;
  outlined copy of ConversationControlsRecipe.View?(v2, v1);
  OUTLINED_FUNCTION_656();
  static Published.subscript.setter();
  ConversationControlsManager.ephemeralAlert.didset();
  outlined consume of ConversationControlsRecipe.View?(v2, v1);
  OUTLINED_FUNCTION_289_0();
}

void ConversationControlsManager.ephemeralAlert.modify(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  char v4;

  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)a1 = ConversationControlsManager.ephemeralAlert.getter();
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4;
  OUTLINED_FUNCTION_0();
}

void ConversationControlsManager.ephemeralAlert.modify(uint64_t a1, char a2)
{
  id v2;
  void *v3;

  v2 = *(id *)a1;
  v3 = *(void **)(a1 + 8);
  if ((a2 & 1) != 0)
  {
    outlined copy of ConversationControlsRecipe.View?(*(id *)a1, v3);
    OUTLINED_FUNCTION_473();
    outlined consume of ConversationControlsRecipe.View?(v2, v3);
  }
  else
  {
    OUTLINED_FUNCTION_473();
    OUTLINED_FUNCTION_18();
  }
}

uint64_t key path setter for ConversationControlsManager.$ephemeralAlert : ConversationControlsManager(uint64_t a1, _QWORD **a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<EphemeralAlert?>.Publisher);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  return (*(uint64_t (**)(char *))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x810))(v6);
}

void ConversationControlsManager.$ephemeralAlert.getter()
{
  ConversationControlsManager.$shouldOpenMessages.getter(&OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager__ephemeralAlert);
}

void ConversationControlsManager.$ephemeralAlert.setter()
{
  ConversationControlsManager.$shouldOpenMessages.setter();
}

void ConversationControlsManager.$ephemeralAlert.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_46_17();
  OUTLINED_FUNCTION_35_11((uint64_t)v1);
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<EphemeralAlert?>.Publisher);
  *(_QWORD *)(v0 + 48) = OUTLINED_FUNCTION_15_3(v2);
  *(_QWORD *)(v0 + 56) = OUTLINED_FUNCTION_21_50();
  OUTLINED_FUNCTION_2_0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<EphemeralAlert?>);
  OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_18();
}

{
  ConversationControlsManager.$foregroundApp.modify();
}

void ConversationControlsManager.shouldShowDelayedLMIBanner.getter()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_32();
}

void ConversationControlsManager.shouldShowDelayedLMIBanner.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_shouldShowDelayedLMIBanner);
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  OUTLINED_FUNCTION_32();
}

void ConversationControlsManager.shouldShowDelayedLMIBanner.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void ConversationControlsManager.gridLayoutStyle.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_214_0();
  if (OUTLINED_FUNCTION_109_9(v2))
  {
    v3 = OUTLINED_FUNCTION_106_5();
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v1 + 24))(&v7, v3, v1);
    OUTLINED_FUNCTION_113();
    v4 = v7;
  }
  else
  {
    v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_defaults + 8);
    v6 = OUTLINED_FUNCTION_15_6();
    v4 = OUTLINED_FUNCTION_101(v6, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 248));
  }
  OUTLINED_FUNCTION_68_0(v4);
  OUTLINED_FUNCTION_45_0();
}

uint64_t ConversationControlsManager.controlsMode.getter()
{
  NSObject *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  void *v6;
  NSObject *v7;
  uint64_t (**v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  os_log_type_t v13;
  _WORD *v14;
  uint64_t result;
  uint64_t v16;
  uint64_t (**v17)(uint64_t, uint64_t);
  uint64_t v18;
  int v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  os_log_type_t v31;
  _BOOL4 v32;
  uint8_t *v33;
  uint8_t *v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  void *v38;
  void *v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  void *v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  void *v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  void *v63;
  id v64;
  uint64_t v65;
  NSObject *v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  os_log_type_t v71;
  uint64_t v72;
  uint64_t v73;
  Swift::String v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;

  OUTLINED_FUNCTION_438();
  v77 = v2;
  v78 = v3;
  OUTLINED_FUNCTION_206();
  OUTLINED_FUNCTION_154();
  v5 = *(uint64_t (**)(void))(v4 + 656);
  v6 = (void *)v5();
  if (v6)
  {
    objc_msgSend(v6, sel_state);
    OUTLINED_FUNCTION_4_39();
  }
  else
  {
    v1 = 0;
  }
  v7 = *(NSObject **)((char *)&v0->isa + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_defaults);
  v8 = *(uint64_t (***)(uint64_t, uint64_t))((char *)&v0[1].isa
                                                   + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_defaults);
  v9 = OUTLINED_FUNCTION_15_6();
  if ((OUTLINED_FUNCTION_101(v9, v8[86]) & 1) != 0)
  {
    OUTLINED_FUNCTION_10_21();
    OUTLINED_FUNCTION_54_0(*(uint64_t (**)(void))(v10 + 624));
    v11 = OUTLINED_FUNCTION_15_69();
    v8 = (uint64_t (**)(uint64_t, uint64_t))OUTLINED_FUNCTION_101(v11, v8[14]);
    OUTLINED_FUNCTION_10();
    if ((v8 & 1) != 0 && !v1)
    {
      v7 = OUTLINED_FUNCTION_21_9();
      v8 = (uint64_t (**)(uint64_t, uint64_t))-[NSObject handoffEligibility](v7, sel_handoffEligibility);

      if (v8)
      {
        if (one-time initialization token for conversationControls != -1)
          swift_once();
        v12 = OUTLINED_FUNCTION_17_2();
        OUTLINED_FUNCTION_3(v12, (uint64_t)&static Logger.conversationControls);
        v13 = OUTLINED_FUNCTION_31_6();
        if (OUTLINED_FUNCTION_13_0(v13))
        {
          v14 = (_WORD *)OUTLINED_FUNCTION_7_8();
          OUTLINED_FUNCTION_124_3(v14);
          OUTLINED_FUNCTION_130(&dword_1BD004000, v0, (os_log_type_t)v7, "ConversationControlsManager: handoffEligible", (uint8_t *)v8);
          OUTLINED_FUNCTION_60();
        }

        return 97;
      }
    }
  }
  OUTLINED_FUNCTION_10_21();
  OUTLINED_FUNCTION_12_2();
  v16 = OUTLINED_FUNCTION_15_69();
  v17 = (uint64_t (**)(uint64_t, uint64_t))OUTLINED_FUNCTION_101(v16, v8[14]);
  OUTLINED_FUNCTION_10();
  if ((v17 & 1) != 0)
  {
    v7 = OUTLINED_FUNCTION_21_9();
    v17 = (uint64_t (**)(uint64_t, uint64_t))-[NSObject link](v7, sel_link);

    if (v17)
    {
      v7 = (*(char **)((char *)&v0->isa
                                 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_conversationController)
                      + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationLetMeInRequestState);
      OUTLINED_FUNCTION_2_0();
      if ((unint64_t)v7->isa - 1 <= 1)
        return (v7->isa == (Class)2) | 0x40u;
    }
  }
  OUTLINED_FUNCTION_12_2();
  v18 = OUTLINED_FUNCTION_15_69();
  v19 = OUTLINED_FUNCTION_101(v18, v17[23]);
  OUTLINED_FUNCTION_10();
  if (v19 == 4 && v1 == 3)
    return 33;
  v21 = OUTLINED_FUNCTION_12_2();
  ConversationControlsManager.shouldShowCallAgainHUD(forCall:)(v21, v22);
  v24 = v23;
  OUTLINED_FUNCTION_113();
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v25 = OUTLINED_FUNCTION_17_2();
  v26 = __swift_project_value_buffer(v25, (uint64_t)&static Logger.conversationControls);
  OUTLINED_FUNCTION_11_17();
  v27 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_7_9(v27))
  {
    v28 = (uint8_t *)OUTLINED_FUNCTION_105();
    *(_DWORD *)v28 = 67109120;
    LODWORD(v76) = v24 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl(&dword_1BD004000, v7, (os_log_type_t)&demangling cache variable for type metadata for Participant.CountdownInfo?, "Should we show call again hud? %{BOOL}d", v28, 8u);
    OUTLINED_FUNCTION_60();
  }

  if ((v24 & 1) != 0)
    return 129;
  OUTLINED_FUNCTION_12_2();
  v29 = OUTLINED_FUNCTION_146();
  v30 = OUTLINED_FUNCTION_52(v29, *(uint64_t (**)(uint64_t, uint64_t))(v24 + 136));
  OUTLINED_FUNCTION_10();
  Logger.logObject.getter();
  v31 = OUTLINED_FUNCTION_12_0();
  v32 = OUTLINED_FUNCTION_21_12(v31);
  if ((v30 & 1) != 0)
  {
    if (v32)
    {
      v33 = (uint8_t *)OUTLINED_FUNCTION_7_8();
      *(_WORD *)v33 = 0;
      OUTLINED_FUNCTION_130(&dword_1BD004000, v26, v31, "Showing controls for Live Voicemail", v33);
      OUTLINED_FUNCTION_60();
    }

    return 160;
  }
  if (v32)
  {
    v34 = (uint8_t *)OUTLINED_FUNCTION_105();
    v76 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v34 = 136315138;
    OUTLINED_FUNCTION_561();
    v35 = OUTLINED_FUNCTION_628();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v35, v36, &v76);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_58_1();
    OUTLINED_FUNCTION_48(&dword_1BD004000, v26, v31, "ConversationControlsManager: controlsMode, conversationState: %s", v34);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

  v37 = MEMORY[0x1E0DEEDD8];
  if (v1 - 2 >= 3)
  {
    if (v1 > 1)
    {
      _StringGuts.grow(_:)(33);
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_561();
      v74._countAndFlagsBits = OUTLINED_FUNCTION_628();
      String.append(_:)(v74);
      OUTLINED_FUNCTION_13_3();
      result = _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
      return result;
    }
    v41 = *(uint64_t *)((char *)&v0->isa
                     + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_conversationController);
    if ((ConversationController.shouldShowJoinCountdown.getter() & 1) != 0)
    {
      OUTLINED_FUNCTION_10_21();
      if (OUTLINED_FUNCTION_54_0(*(uint64_t (**)(void))(v42 + 1072)))
      {
        v43 = OUTLINED_FUNCTION_146();
        v37 = OUTLINED_FUNCTION_52(v43, *(uint64_t (**)(uint64_t, uint64_t))(v37 + 40));
        OUTLINED_FUNCTION_10();
        if ((v37 & 1) != 0)
          return 96;
      }
    }
    OUTLINED_FUNCTION_12_2();
    v44 = OUTLINED_FUNCTION_146();
    v45 = OUTLINED_FUNCTION_52(v44, *(uint64_t (**)(uint64_t, uint64_t))(v37 + 184));
    OUTLINED_FUNCTION_10();
    if ((_DWORD)v45 != 3)
    {
      OUTLINED_FUNCTION_12_2();
      v46 = OUTLINED_FUNCTION_146();
      v45 = OUTLINED_FUNCTION_52(v46, *(uint64_t (**)(uint64_t, uint64_t))(v45 + 184));
      OUTLINED_FUNCTION_10();
      if ((_DWORD)v45 != 4)
        return 32;
    }
    OUTLINED_FUNCTION_12_2();
    v47 = OUTLINED_FUNCTION_146();
    v48 = (*(uint64_t (**)(uint64_t, uint64_t))(v45 + 168))(v47, v45);
    OUTLINED_FUNCTION_10();
    v49 = specialized Set.count.getter(v48);
    OUTLINED_FUNCTION_133();
    if (v49 == 1)
    {
      OUTLINED_FUNCTION_12_2();
      v50 = OUTLINED_FUNCTION_146();
      v48 = OUTLINED_FUNCTION_52(v50, *(uint64_t (**)(uint64_t, uint64_t))(v48 + 184));
      OUTLINED_FUNCTION_10();
      if ((_DWORD)v48 == 3)
      {
        v51 = (_QWORD *)(v41 + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationLetMeInRequestState);
        OUTLINED_FUNCTION_2_0();
        if (!*v51)
        {
          v52 = (void *)OUTLINED_FUNCTION_21_9();
          OUTLINED_FUNCTION_639(objc_msgSend(v52, sel_link));

          if (!v48)
          {
            v53 = (void *)OUTLINED_FUNCTION_21_9();
            OUTLINED_FUNCTION_639(objc_msgSend(v53, sel_localParticipantAssociation));

            return 32;
          }
        }
      }
    }
    OUTLINED_FUNCTION_12_2();
    v54 = OUTLINED_FUNCTION_146();
    OUTLINED_FUNCTION_52(v54, *(uint64_t (**)(uint64_t, uint64_t))(v48 + 184));
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_12_2();
    v55 = OUTLINED_FUNCTION_83_13();
    v56 = (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 168))(v55, v30);
    OUTLINED_FUNCTION_10();
    specialized Set.count.getter(v56);
    OUTLINED_FUNCTION_21_0();
    v57 = (void *)OUTLINED_FUNCTION_21_9();
    if (v57)
    {
      v58 = v57;
      v59 = objc_msgSend(v57, sel_mergedActiveRemoteParticipants);

      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
      lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop(&lazy protocol witness table cache variable for type TUConversationParticipant and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
      v60 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

      specialized Set.count.getter(v60);
      OUTLINED_FUNCTION_27();
    }
    v62 = (void *)(v41 + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationLetMeInRequestState);
    OUTLINED_FUNCTION_2_0();
    v63 = (void *)OUTLINED_FUNCTION_21_9();
    if (v63)
    {
      v62 = v63;
      v64 = objc_msgSend(v63, sel_localParticipantAssociation);
      OUTLINED_FUNCTION_6_16();
      if (v5)
      {
        OUTLINED_FUNCTION_20_4(v65, sel_identifier);

      }
    }
    v66 = OUTLINED_FUNCTION_21_9();
    if (v66
      && (v0 = v66,
          v67 = -[NSObject link](v66, sel_link),
          OUTLINED_FUNCTION_49_5(),
          v62)
      && (outlined bridged method (ob) of @objc TUConversationLink.displayName.getter(v62, (SEL *)&selRef_displayName),
          v69))
    {
      v70 = v68;
    }
    else
    {
      swift_bridgeObjectRelease();
      v70 = 7104878;
    }
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_26_31();
    v71 = OUTLINED_FUNCTION_31_6();
    if (os_log_type_enabled(v0, v71))
    {
      v72 = OUTLINED_FUNCTION_105();
      v75 = OUTLINED_FUNCTION_105();
      *(_DWORD *)v72 = 67241474;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v72 + 8) = 2050;
      OUTLINED_FUNCTION_248_0();
      *(_WORD *)(v72 + 18) = 2050;
      OUTLINED_FUNCTION_248_0();
      *(_WORD *)(v72 + 28) = 2050;
      OUTLINED_FUNCTION_248_0();
      *(_WORD *)(v72 + 38) = 2080;
      swift_bridgeObjectRetain();
      OUTLINED_FUNCTION_304(v70, v73, &v75);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_11_11();
      *(_WORD *)(v72 + 48) = 2048;
      OUTLINED_FUNCTION_248_0();
      _os_log_impl(&dword_1BD004000, v0, v71, "ConversationControlsManager: status = %{public}d, remoteParticipantHandles: %{public}ld,  mergedActiveRemoteParticipants %{public}ld, conversationLetMeInRequestState: %{public}ld, link: %s, localParticipantAssociation: %llu", (uint8_t *)v72, 0x3Au);
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_60();
    }

    OUTLINED_FUNCTION_19_1();
    return 33;
  }
  if (one-time initialization token for shared != -1)
    swift_once();
  if ((OUTLINED_FUNCTION_661() & 1) != 0)
  {
    v38 = (void *)OUTLINED_FUNCTION_21_9();
    if (v38)
    {
      v39 = v38;
      v40 = objc_msgSend(v38, sel_isContinuitySession);
      if ((_DWORD)v40)
      {
        OUTLINED_FUNCTION_25_1((uint64_t)v40, sel_avMode);
        OUTLINED_FUNCTION_14_18();
        if (!v21)
          return 161;
      }
      else
      {

      }
    }
  }
  OUTLINED_FUNCTION_10_21();
  return OUTLINED_FUNCTION_54_0(*(uint64_t (**)(void))(v61 + 800)) & 1;
}

