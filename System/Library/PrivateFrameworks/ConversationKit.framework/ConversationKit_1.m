uint64_t sub_1BD04F2B0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD04F2B8);
  return result;
}

uint64_t sub_1BD04F2C4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD04F2CCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BD04F2D0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD04F2D8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *destructiveInjectEnumTag for CallRecordingServiceError(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for CallRecordingServiceError()
{
  return &type metadata for CallRecordingServiceError;
}

uint64_t dispatch thunk of CallRecordingRequestProtocol.startRecording(call:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of CallRecordingRequestProtocol.stopRecording(call:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of CallRecordingRequestProtocol.url(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t type metadata accessor for CallRecordingService()
{
  return objc_opt_self();
}

uint64_t method lookup function for CallRecordingService()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CallRecordingService.__allocating_init(callCenter:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of CallRecordingService.startRecording(call:completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of CallRecordingService.stopRecording(call:completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of CallRecordingService.updateConversationControlsRecipe()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of CallRecordingService.url(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of CallRecordingService.postStartRecordingStateNotification(success:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

void CNMutableContact.init(conversationMember:)(void *a1)
{
  CNMutableContact.init(conversationMember:)(a1, (SEL *)&selRef__initWithConversationMember_);
}

{
  void *v1;
  id v3;

  v3 = objc_msgSend(a1, sel_handle);
  objc_msgSend(v1, sel__initWithHandle_, v3);

  OUTLINED_FUNCTION_18();
}

void @objc CNMutableContact.init(conversationMember:)(uint64_t a1, uint64_t a2, void *a3)
{
  CNMutableContact.init(conversationMember:)(a3);
}

void CNMutableContact.init(handle:)(void *a1)
{
  CNMutableContact.init(conversationMember:)(a1, (SEL *)&selRef__initWithHandle_);
}

void CNMutableContact.init(conversationMember:)(void *a1, SEL *a2)
{
  objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), *a2, a1);

  OUTLINED_FUNCTION_18();
}

id CNMutableContact.init(handle:)(id a1)
{
  void *v1;
  uint64_t v2;
  void *v3;
  id v5;
  id v6;
  id result;
  _OWORD *v8;
  id v9;
  id v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;

  v5 = objc_msgSend(v1, sel_init);
  v6 = OUTLINED_FUNCTION_9((uint64_t)v5, sel_type);
  if (v6 == (id)1)
  {
    v12 = OUTLINED_FUNCTION_9(1, sel_value);
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    OUTLINED_FUNCTION_14_27();
    v13 = objc_allocWithZone(MEMORY[0x1E0C973E8]);
    OUTLINED_FUNCTION_3_16();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    v8 = (_OWORD *)OUTLINED_FUNCTION_1_13();
    v8[1] = xmmword_1BD6443F0;
    v14 = objc_allocWithZone(MEMORY[0x1E0C97338]);
    v15 = OUTLINED_FUNCTION_12_13();
    OUTLINED_FUNCTION_2_31(v15);
    OUTLINED_FUNCTION_6_20(v16);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for CNLabeledValue);
    OUTLINED_FUNCTION_4_10();
    OUTLINED_FUNCTION_7_3();
    objc_msgSend(v5, sel_setSocialProfiles_, v8);
    goto LABEL_8;
  }
  if (v6 == (id)2)
  {
    v17 = type metadata accessor for CNPhoneNumber();
    v18 = OUTLINED_FUNCTION_9(v17, sel_value);
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    OUTLINED_FUNCTION_11_12();
    v19 = outlined bridged method (pb) of @objc TUHandle.isoCountryCode.getter(a1);
    @nonobjc CNPhoneNumber.init(digits:countryCode:)(v2, (uint64_t)v3, v19, v20);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    v8 = (_OWORD *)OUTLINED_FUNCTION_1_13();
    v8[1] = xmmword_1BD6443F0;
    v21 = objc_allocWithZone(MEMORY[0x1E0C97338]);
    v22 = OUTLINED_FUNCTION_12_13();
    OUTLINED_FUNCTION_2_31(v22);
    OUTLINED_FUNCTION_6_20(v23);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for CNLabeledValue);
    OUTLINED_FUNCTION_4_10();
    OUTLINED_FUNCTION_7_3();
    objc_msgSend(v5, sel_setPhoneNumbers_, v8);
    goto LABEL_8;
  }
  if (v6 != (id)3)
  {

    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v24 = type metadata accessor for Logger();
    __swift_project_value_buffer(v24, (uint64_t)&static Logger.conversationControls);
    a1 = a1;
    v25 = Logger.logObject.getter();
    v26 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc();
      v28 = swift_slowAlloc();
      v31 = v28;
      *(_DWORD *)v27 = 136446210;
      OUTLINED_FUNCTION_9(v28, sel_type);
      type metadata accessor for TUHandleType(0);
      v29 = String.init<A>(reflecting:)();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v29, v30, &v31);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BD004000, v25, v26, "Unknown default: handle type %{public}s", v27, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_60();
    }

    goto LABEL_9;
  }
  result = OUTLINED_FUNCTION_9(3, sel_value);
  if (result)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    v8 = (_OWORD *)OUTLINED_FUNCTION_1_13();
    v8[1] = xmmword_1BD6443F0;
    v9 = objc_allocWithZone(MEMORY[0x1E0C97338]);
    v10 = OUTLINED_FUNCTION_12_13();
    OUTLINED_FUNCTION_2_31(v10);
    OUTLINED_FUNCTION_6_20(v11);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for CNLabeledValue);
    OUTLINED_FUNCTION_4_10();
    OUTLINED_FUNCTION_7_3();
    objc_msgSend(v5, sel_setEmailAddresses_, v8);
LABEL_8:

LABEL_9:
    return v5;
  }
  __break(1u);
  return result;
}

id @nonobjc CNPhoneNumber.init(digits:countryCode:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v6;
  void *v7;
  id v8;

  v6 = (void *)MEMORY[0x1C3B72E00]();
  swift_bridgeObjectRelease();
  if (a4)
  {
    v7 = (void *)MEMORY[0x1C3B72E00](a3, a4);
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = 0;
  }
  v8 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_phoneNumberWithDigits_countryCode_, v6, v7);

  return v8;
}

id @objc CNMutableContact.init(handle:)(uint64_t a1, uint64_t a2, void *a3)
{
  return CNMutableContact.init(handle:)(a3);
}

id CNMutableContact.init(handle:)(void *a1)
{
  uint64_t v1;
  void *v2;
  id v4;
  char **v5;
  id v6;
  unint64_t v7;
  Swift::String v8;
  id v9;
  id v10;
  uint64_t v11;
  char **v12;
  id v13;
  id v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  Class isa;
  Swift::String v23;
  uint64_t v24;

  v4 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  v5 = &selRef_associatedAppBundleIdentifier;
  v6 = OUTLINED_FUNCTION_123((uint64_t)v4, sel_type);
  switch((unint64_t)v6)
  {
    case 0uLL:

      return 0;
    case 1uLL:
      v16 = OUTLINED_FUNCTION_123((uint64_t)v6, sel_value);
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      OUTLINED_FUNCTION_14_27();
      v17 = objc_allocWithZone(MEMORY[0x1E0C973E8]);
      OUTLINED_FUNCTION_3_16();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
      *(_OWORD *)(OUTLINED_FUNCTION_1_13() + 16) = xmmword_1BD6443F0;
      v18 = objc_allocWithZone(MEMORY[0x1E0C97338]);
      v19 = OUTLINED_FUNCTION_15_14();
      OUTLINED_FUNCTION_0_25(v19);
      OUTLINED_FUNCTION_5_5(v20);
      v12 = &selRef_setSocialProfiles_;
      goto LABEL_7;
    case 2uLL:
      v7 = type metadata accessor for CNPhoneNumber();
      v5 = (char **)OUTLINED_FUNCTION_123(v7, sel_value);
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      OUTLINED_FUNCTION_11_12();
      v8._countAndFlagsBits = v1;
      v8._object = v2;
      CNPhoneNumber.__allocating_init(stringValue:)(v8);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
      *(_OWORD *)(OUTLINED_FUNCTION_1_13() + 16) = xmmword_1BD6443F0;
      v9 = objc_allocWithZone(MEMORY[0x1E0C97338]);
      v10 = OUTLINED_FUNCTION_15_14();
      OUTLINED_FUNCTION_0_25(v10);
      OUTLINED_FUNCTION_5_5(v11);
      v12 = &selRef_setPhoneNumbers_;
      goto LABEL_7;
    case 3uLL:
      if (!OUTLINED_FUNCTION_123((uint64_t)v6, sel_value))
      {
        __break(1u);
LABEL_10:
        _StringGuts.grow(_:)(23);
        v23._object = (void *)0x80000001BD66DC50;
        v23._countAndFlagsBits = 0xD000000000000015;
        String.append(_:)(v23);
        OUTLINED_FUNCTION_123(v24, sel_type);
        type metadata accessor for CHHandleType(0);
        _print_unlocked<A, B>(_:_:)();
        _assertionFailure(_:_:file:line:flags:)();
        __break(1u);
        JUMPOUT(0x1BD04FBC0);
      }
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
      *(_OWORD *)(OUTLINED_FUNCTION_1_13() + 16) = xmmword_1BD6443F0;
      v13 = objc_allocWithZone(MEMORY[0x1E0C97338]);
      v14 = OUTLINED_FUNCTION_15_14();
      OUTLINED_FUNCTION_0_25(v14);
      OUTLINED_FUNCTION_5_5(v15);
      v12 = &selRef_setEmailAddresses_;
LABEL_7:
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for CNLabeledValue);
      isa = OUTLINED_FUNCTION_4_10().super.isa;
      swift_bridgeObjectRelease();
      objc_msgSend(v4, *v12, isa);

      return v4;
    default:
      goto LABEL_10;
  }
}

CNPhoneNumber __swiftcall CNPhoneNumber.__allocating_init(stringValue:)(Swift::String stringValue)
{
  void *object;
  uint64_t countAndFlagsBits;
  id v3;
  void *v4;
  id v5;

  object = stringValue._object;
  countAndFlagsBits = stringValue._countAndFlagsBits;
  v3 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v4 = (void *)MEMORY[0x1C3B72E00](countAndFlagsBits, object);
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(v3, sel_initWithStringValue_, v4);

  return (CNPhoneNumber)v5;
}

void specialized @nonobjc CNLabeledValue.init(label:value:)(uint64_t a1, uint64_t a2, void *a3)
{
  void *v3;
  void *v5;

  if (a2)
  {
    v5 = (void *)MEMORY[0x1C3B72E00]();
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = 0;
  }
  objc_msgSend(v3, sel_initWithLabel_value_, v5, a3);

  OUTLINED_FUNCTION_18();
}

id @nonobjc CNSocialProfile.init(urlString:username:userIdentifier:service:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  void *v8;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;

  if (a2)
  {
    v15 = (void *)MEMORY[0x1C3B72E00]();
    swift_bridgeObjectRelease();
    if (a4)
      goto LABEL_3;
  }
  else
  {
    v15 = 0;
    if (a4)
    {
LABEL_3:
      v16 = (void *)MEMORY[0x1C3B72E00](a3, a4);
      swift_bridgeObjectRelease();
      if (a6)
        goto LABEL_4;
LABEL_8:
      v17 = 0;
      if (a8)
        goto LABEL_5;
LABEL_9:
      v18 = 0;
      goto LABEL_10;
    }
  }
  v16 = 0;
  if (!a6)
    goto LABEL_8;
LABEL_4:
  v17 = (void *)MEMORY[0x1C3B72E00](a5, a6);
  swift_bridgeObjectRelease();
  if (!a8)
    goto LABEL_9;
LABEL_5:
  v18 = (void *)MEMORY[0x1C3B72E00](a7, a8);
  swift_bridgeObjectRelease();
LABEL_10:
  v19 = objc_msgSend(v8, sel_initWithUrlString_username_userIdentifier_service_, v15, v16, v17, v18);

  return v19;
}

unint64_t type metadata accessor for CNPhoneNumber()
{
  unint64_t result;

  result = lazy cache variable for type metadata for CNPhoneNumber;
  if (!lazy cache variable for type metadata for CNPhoneNumber)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for CNPhoneNumber);
  }
  return result;
}

uint64_t outlined bridged method (pb) of @objc TUHandle.isoCountryCode.getter(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_isoCountryCode);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t TapInteractionHandler.handleTapInteractionOverrideView(_:)()
{
  return 0;
}

uint64_t TapInteraction.view.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit14TapInteraction_view;
  OUTLINED_FUNCTION_2_0();
  return MEMORY[0x1C3B752C0](v1);
}

void TapInteraction.view.setter(void *a1)
{
  OUTLINED_FUNCTION_2_0();
  swift_unknownObjectWeakAssign();

}

uint64_t key path getter for TapInteraction.view : TapInteraction@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1 + OBJC_IVAR____TtC15ConversationKit14TapInteraction_view;
  swift_beginAccess();
  result = MEMORY[0x1C3B752C0](v3);
  *a2 = result;
  return result;
}

uint64_t key path setter for TapInteraction.view : TapInteraction()
{
  swift_beginAccess();
  return swift_unknownObjectWeakAssign();
}

void (*TapInteraction.view.modify(_QWORD *a1))(id **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC15ConversationKit14TapInteraction_view;
  v3[4] = v1;
  v3[5] = v4;
  v5 = v1 + v4;
  OUTLINED_FUNCTION_2_0();
  v3[3] = MEMORY[0x1C3B752C0](v5);
  return TapInteraction.view.modify;
}

void TapInteraction.view.modify(id **a1, char a2)
{
  id *v3;
  id v4;

  v3 = *a1;
  v4 = (*a1)[3];
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {

    swift_endAccess();
  }
  else
  {
    swift_endAccess();

  }
  free(v3);
}

id TapInteraction.numberOfTapsRequired.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15ConversationKit14TapInteraction_tapGestureRecognizer), sel_numberOfTapsRequired);
}

id TapInteraction.numberOfTapsRequired.setter(uint64_t a1)
{
  uint64_t v1;

  return objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC15ConversationKit14TapInteraction_tapGestureRecognizer), sel_setNumberOfTapsRequired_, a1);
}

id (*TapInteraction.numberOfTapsRequired.modify(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit14TapInteraction_tapGestureRecognizer);
  a1[1] = v3;
  *a1 = objc_msgSend(v3, sel_numberOfTapsRequired);
  return TapInteraction.numberOfTapsRequired.modify;
}

id TapInteraction.numberOfTapsRequired.modify(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 8), sel_setNumberOfTapsRequired_, *(_QWORD *)a1);
}

char *TapInteraction.__allocating_init(tapCount:)(uint64_t a1)
{
  objc_class *v1;
  char *v3;

  v3 = (char *)objc_msgSend(objc_allocWithZone(v1), sel_init);
  objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC15ConversationKit14TapInteraction_tapGestureRecognizer], sel_setNumberOfTapsRequired_, a1);
  return v3;
}

id TapInteraction.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

char *TapInteraction.init()()
{
  char *v0;
  objc_class *ObjectType;
  uint64_t v2;
  id v3;
  char *v4;
  char *v5;
  void *v6;
  char *v7;
  id v8;
  objc_super v10;

  ObjectType = (objc_class *)swift_getObjectType();
  swift_unknownObjectWeakInit();
  v2 = OBJC_IVAR____TtC15ConversationKit14TapInteraction_tapGestureRecognizer;
  v3 = objc_allocWithZone(MEMORY[0x1E0DC3D80]);
  v4 = v0;
  *(_QWORD *)&v0[v2] = objc_msgSend(v3, sel_init);

  v10.receiver = v4;
  v10.super_class = ObjectType;
  v5 = (char *)objc_msgSendSuper2(&v10, sel_init);
  v6 = *(void **)&v5[OBJC_IVAR____TtC15ConversationKit14TapInteraction_tapGestureRecognizer];
  v7 = v5;
  objc_msgSend(v6, sel_setDelegate_, v7);
  v8 = v6;
  objc_msgSend(v8, sel_addTarget_action_, v7, sel_handleRecognizer_);

  return v7;
}

Swift::Void __swiftcall TapInteraction.willMove(to:)(UIView_optional *to)
{
  uint64_t v1;

  if (to)
    -[UIView_optional removeGestureRecognizer:](to, sel_removeGestureRecognizer_, *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit14TapInteraction_tapGestureRecognizer));
}

Swift::Void __swiftcall TapInteraction.didMove(to:)(UIView_optional *to)
{
  uint64_t v1;

  OUTLINED_FUNCTION_2_0();
  swift_unknownObjectWeakAssign();
  if (to)
    -[UIView_optional addGestureRecognizer:](to, sel_addGestureRecognizer_, *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit14TapInteraction_tapGestureRecognizer));
}

id TapInteraction.handleRecognizer(_:)(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id result;
  uint64_t v5;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, id, uint64_t, uint64_t, uint64_t, uint64_t);
  id v19;
  void *v20;
  __int128 v21;
  uint64_t v22;
  _QWORD v23[3];
  void *v24;
  uint64_t v25;
  _OWORD v26[2];
  uint64_t v27;

  v2 = v1;
  result = objc_msgSend(a1, sel_state);
  if (result == (id)3)
  {
    v5 = v1 + OBJC_IVAR____TtC15ConversationKit14TapInteraction_view;
    swift_beginAccess();
    result = (id)MEMORY[0x1C3B752C0](v5);
    if (result)
    {
      v6 = result;
      v23[0] = result;
      _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIView);
      v7 = v6;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TapInteractionHandler);
      if ((swift_dynamicCast() & 1) == 0)
      {
        v27 = 0;
        memset(v26, 0, sizeof(v26));
      }
      outlined init with copy of TapInteractionHandler?((uint64_t)v26, (uint64_t)v23);
      v8 = v24;
      if (v24)
      {
        v9 = v25;
        __swift_project_boxed_opaque_existential_1(v23, (uint64_t)v24);
        v8 = (void *)(*(uint64_t (**)(uint64_t, void *, uint64_t))(v9 + 24))(v2, v8, v9);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
        if (v8)
          v10 = v8;
        else
          v10 = v7;
      }
      else
      {
        outlined destroy of TapInteractionHandler?((uint64_t)v23);
        v10 = v7;
      }
      v11 = v10;
      objc_msgSend(a1, sel_locationInView_, v11);
      v13 = v12;
      v15 = v14;
      TapInteraction.findHandler()((uint64_t)&v21);
      if (v22)
      {
        outlined init with take of Notice(&v21, (uint64_t)v23);
        v16 = (uint64_t)v24;
        v17 = v25;
        __swift_project_boxed_opaque_existential_1(v23, (uint64_t)v24);
        v20 = v7;
        v18 = *(void (**)(uint64_t, id, uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 16);
        v19 = v11;
        v18(v2, v11, v13, v15, v16, v17);

        __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
      }
      else
      {

        outlined destroy of TapInteractionHandler?((uint64_t)&v21);
      }
      return (id)outlined destroy of TapInteractionHandler?((uint64_t)v26);
    }
  }
  return result;
}

void TapInteraction.findHandler()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  _OWORD v16[2];
  uint64_t v17;

  v2 = v1;
  v17 = 0;
  memset(v16, 0, sizeof(v16));
  v4 = v1 + OBJC_IVAR____TtC15ConversationKit14TapInteraction_view;
  swift_beginAccess();
  v5 = (id)MEMORY[0x1C3B752C0](v4);
  outlined init with copy of TapInteractionHandler?((uint64_t)v16, (uint64_t)&v13);
  if (*((_QWORD *)&v14 + 1))
  {
LABEL_10:
    outlined destroy of TapInteractionHandler?((uint64_t)&v13);
  }
  else
  {
    while (1)
    {
      outlined destroy of TapInteractionHandler?((uint64_t)&v13);
      if (!v5)
        break;
      v10[0] = v5;
      _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIResponder);
      v6 = v5;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TapInteractionHandler);
      if ((swift_dynamicCast() & 1) == 0)
      {
        v15 = 0;
        v13 = 0u;
        v14 = 0u;
      }
      outlined init with copy of TapInteractionHandler?((uint64_t)&v13, (uint64_t)v10);
      v7 = v11;
      if (v11)
      {
        v8 = v12;
        __swift_project_boxed_opaque_existential_1(v10, v11);
        v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 8))(v2, v7, v8);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
        if ((v9 & 1) != 0)
        {
          outlined destroy of TapInteractionHandler?((uint64_t)v16);
          outlined init with copy of TapInteractionHandler?((uint64_t)&v13, (uint64_t)v16);
        }
      }
      else
      {
        outlined destroy of TapInteractionHandler?((uint64_t)v10);
      }
      v5 = objc_msgSend(v6, sel_nextResponder);

      outlined destroy of TapInteractionHandler?((uint64_t)&v13);
      outlined init with copy of TapInteractionHandler?((uint64_t)v16, (uint64_t)&v13);
      if (*((_QWORD *)&v14 + 1))
        goto LABEL_10;
    }
  }
  outlined init with take of TapInteractionHandler?((uint64_t)v16, a1);

}

Swift::Void __swiftcall TapInteraction.triggerInteraction()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  uint64_t v4;
  _QWORD v5[3];
  uint64_t v6;
  uint64_t v7;

  TapInteraction.findHandler()((uint64_t)&v3);
  if (v4)
  {
    outlined init with take of Notice(&v3, (uint64_t)v5);
    v1 = v6;
    v2 = v7;
    __swift_project_boxed_opaque_existential_1(v5, v6);
    (*(void (**)(uint64_t, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v2 + 16))(v0, 0, 0, 0, v1, v2);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  }
  else
  {
    outlined destroy of TapInteractionHandler?((uint64_t)&v3);
  }
}

uint64_t outlined destroy of TapInteractionHandler?(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TapInteractionHandler?);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t TapInteraction.findSiblingTapInterations()()
{
  char *v0;
  char *v1;
  void *v2;
  void *v3;
  id v4;
  unint64_t v5;
  uint64_t v6;

  v1 = &v0[OBJC_IVAR____TtC15ConversationKit14TapInteraction_view];
  swift_beginAccess();
  v2 = (void *)MEMORY[0x1C3B752C0](v1);
  if (!v2)
    return MEMORY[0x1E0DEE9D8];
  v3 = v2;
  v4 = objc_msgSend(v2, sel_interactions);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIInteraction);
  v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  v6 = specialized Sequence.compactMap<A>(_:)(v5, v0);
  swift_bridgeObjectRelease();

  return v6;
}

uint64_t specialized Sequence.compactMap<A>(_:)(unint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v11;

  swift_getObjectType();
  v11 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_17;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; v3 = _CocoaArrayWrapper.endIndex.getter())
  {
    v4 = 4;
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0)
        MEMORY[0x1C3B73D18](v4 - 4, a1);
      else
        swift_unknownObjectRetain();
      v5 = v4 - 3;
      if (__OFADD__(v4 - 4, 1))
        break;
      if (swift_dynamicCastClass()
        && (swift_unknownObjectRetain(),
            v6 = static NSObject.== infix(_:_:)(),
            v7 = swift_unknownObjectRelease(),
            (v6 & 1) == 0))
      {
        MEMORY[0x1C3B7301C](v7);
        if (*(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      else
      {
        swift_unknownObjectRelease();
      }
      ++v4;
      if (v5 == v3)
      {
        swift_bridgeObjectRelease();
        v8 = v11;
        goto LABEL_19;
      }
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  v8 = MEMORY[0x1E0DEE9D8];
LABEL_19:

  return v8;
}

{
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v13 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_15;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; v4 = _CocoaArrayWrapper.endIndex.getter())
  {
    v5 = 4;
    while (1)
    {
      v6 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1C3B73D18](v5 - 4, a1) : *(id *)(a1 + 8 * v5);
      v7 = v6;
      v8 = v5 - 3;
      if (__OFADD__(v5 - 4, 1))
        break;
      PeoplePickerViewController.pickablePerson(for:)(v6);
      v10 = v9;

      if (v10)
      {
        MEMORY[0x1C3B7301C]();
        if (*(_QWORD *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      ++v5;
      if (v8 == v4)
      {
        swift_bridgeObjectRelease();
        v11 = v13;
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  v11 = MEMORY[0x1E0DEE9D8];
LABEL_17:

  return v11;
}

{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v21;
  unint64_t v22;

  v3 = a1;
  if (a1 >> 62)
    goto LABEL_17;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; v4 = _CocoaArrayWrapper.endIndex.getter())
  {
    v22 = v3 & 0xC000000000000001;
    v5 = MEMORY[0x1E0DEE9D8];
    v6 = 4;
    v21 = v3;
    while (1)
    {
      v7 = v22 ? (id)MEMORY[0x1C3B73D18](v6 - 4, v3) : *(id *)(v3 + 8 * v6);
      v8 = v7;
      v9 = v6 - 3;
      if (__OFADD__(v6 - 4, 1))
        break;
      v10 = v4;
      outlined bridged method (ob) of @objc TUConversationLink.displayName.getter(objc_msgSend(v7, sel_provider), (SEL *)&selRef_bundleIdentifier);
      v13 = ConversationControlsManager.phoneToICSBundleID(_:)(v11, v12);
      v15 = v14;

      swift_bridgeObjectRelease();
      if (v15)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          v5 = v18;
        }
        v16 = *(_QWORD *)(v5 + 16);
        if (v16 >= *(_QWORD *)(v5 + 24) >> 1)
        {
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          v5 = v19;
        }
        *(_QWORD *)(v5 + 16) = v16 + 1;
        v17 = v5 + 16 * v16;
        *(_QWORD *)(v17 + 32) = v13;
        *(_QWORD *)(v17 + 40) = v15;
      }
      v4 = v10;
      v3 = v21;
      ++v6;
      if (v9 == v4)
        goto LABEL_19;
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
  }
  v5 = MEMORY[0x1E0DEE9D8];
LABEL_19:

  swift_bridgeObjectRelease();
  return v5;
}

id TapInteraction.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

Swift::Bool __swiftcall TapInteraction.gestureRecognizer(_:shouldRequireFailureOf:)(UIGestureRecognizer *_, UIGestureRecognizer *shouldRequireFailureOf)
{
  uint64_t v2;
  void *v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t i;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  char v16;
  uint64_t v18;
  unint64_t v19;

  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSObject);
  v4 = *(void **)(v2 + OBJC_IVAR____TtC15ConversationKit14TapInteraction_tapGestureRecognizer);
  if ((static NSObject.== infix(_:_:)() & 1) != 0 && objc_msgSend(v4, sel_numberOfTapsRequired) == (id)1)
  {
    v5 = TapInteraction.findSiblingTapInterations()();
    v6 = v5;
    v7 = MEMORY[0x1E0DEE9D8];
    v18 = MEMORY[0x1E0DEE9D8];
    if (v5 >> 62)
    {
      v5 = _CocoaArrayWrapper.endIndex.getter();
      v8 = v5;
      if (v5)
      {
LABEL_5:
        if (v8 < 1)
        {
          __break(1u);
          goto LABEL_30;
        }
        for (i = 0; i != v8; ++i)
        {
          if ((v6 & 0xC000000000000001) != 0)
            OUTLINED_FUNCTION_1_14();
          v10 = OUTLINED_FUNCTION_5_6(v6 + 8 * i);
          if ((uint64_t)OUTLINED_FUNCTION_6_21((uint64_t)v10, OBJC_IVAR____TtC15ConversationKit14TapInteraction_tapGestureRecognizer) < 2)
          {

          }
          else
          {
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
            OUTLINED_FUNCTION_0_26();
            OUTLINED_FUNCTION_3_17();
            specialized ContiguousArray._endMutation()();
          }
        }
        OUTLINED_FUNCTION_2_1();
        v11 = v18;
        v7 = MEMORY[0x1E0DEE9D8];
        if (v18 < 0)
          goto LABEL_27;
LABEL_18:
        if ((v11 & 0x4000000000000000) == 0)
        {
          v12 = *(_QWORD *)(v11 + 16);
          if (!v12)
          {
LABEL_26:
            swift_release();
            v16 = specialized Sequence<>.contains(_:)((uint64_t)shouldRequireFailureOf, v7);
            swift_bridgeObjectRelease();
            LOBYTE(v5) = v16 & 1;
            return v5;
          }
          goto LABEL_20;
        }
LABEL_27:
        OUTLINED_FUNCTION_8_8();
        v12 = _CocoaArrayWrapper.endIndex.getter();
        swift_release();
        if (!v12)
          goto LABEL_26;
LABEL_20:
        v19 = v7;
        LOBYTE(v5) = specialized ContiguousArray.reserveCapacity(_:)();
        if ((v12 & 0x8000000000000000) == 0)
        {
          v13 = 0;
          do
          {
            if ((v11 & 0xC000000000000001) != 0)
              OUTLINED_FUNCTION_1_14();
            v14 = (char *)OUTLINED_FUNCTION_5_6(v11 + 8 * v13++);
            v15 = *(id *)&v14[OBJC_IVAR____TtC15ConversationKit14TapInteraction_tapGestureRecognizer];

            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
            OUTLINED_FUNCTION_0_26();
            OUTLINED_FUNCTION_3_17();
            specialized ContiguousArray._endMutation()();
          }
          while (v12 != v13);
          v7 = v19;
          goto LABEL_26;
        }
LABEL_30:
        __break(1u);
        return v5;
      }
    }
    else
    {
      v8 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v8)
        goto LABEL_5;
    }
    OUTLINED_FUNCTION_2_1();
    v11 = MEMORY[0x1E0DEE9D8];
    if ((MEMORY[0x1E0DEE9D8] & 0x8000000000000000) != 0)
      goto LABEL_27;
    goto LABEL_18;
  }
  LOBYTE(v5) = 0;
  return v5;
}

Swift::Bool __swiftcall TapInteraction.gestureRecognizer(_:shouldReceive:)(UIGestureRecognizer *_, UITouch shouldReceive)
{
  id v2;
  void *v3;
  Swift::Bool v4;

  v2 = -[objc_class view](shouldReceive.super.isa, sel_view);
  if (v2)
  {
    v3 = v2;
    objc_opt_self();
    v2 = (id)swift_dynamicCastObjCClass();
    if (!v2)
    {

      v2 = 0;
    }
  }
  v4 = v2 == 0;

  return v4;
}

uint64_t UIView.tapInteractions(withTapCount:)(id a1)
{
  void *v1;
  id v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t i;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = objc_msgSend(v1, sel_interactions);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIInteraction);
  v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  v10 = MEMORY[0x1E0DEE9D8];
  if (!(v4 >> 62))
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = OUTLINED_FUNCTION_8_8();
    if (v5)
      goto LABEL_3;
LABEL_16:
    OUTLINED_FUNCTION_2_1();
    v9 = MEMORY[0x1E0DEE9D8];
LABEL_17:
    OUTLINED_FUNCTION_2_1();
    return v9;
  }
  OUTLINED_FUNCTION_8_8();
  result = _CocoaArrayWrapper.endIndex.getter();
  v5 = result;
  if (!result)
    goto LABEL_16;
LABEL_3:
  if (v5 >= 1)
  {
    for (i = 0; i != v5; ++i)
    {
      if ((v4 & 0xC000000000000001) != 0)
        OUTLINED_FUNCTION_1_14();
      swift_unknownObjectRetain();
      type metadata accessor for TapInteraction();
      v8 = swift_dynamicCastClass();
      if (v8
        && OUTLINED_FUNCTION_6_21(v8, OBJC_IVAR____TtC15ConversationKit14TapInteraction_tapGestureRecognizer) == a1)
      {
        MEMORY[0x1C3B7301C]();
        if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
    OUTLINED_FUNCTION_2_1();
    v9 = v10;
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for TapInteraction()
{
  return objc_opt_self();
}

Swift::Void __swiftcall UIView.removeTapInteractions(withTapCount:)(Swift::Int withTapCount)
{
  void *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t i;
  id v5;
  void *v6;

  v2 = UIView.tapInteractions(withTapCount:)((id)withTapCount);
  if (!(v2 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v3)
      goto LABEL_3;
LABEL_9:
    swift_bridgeObjectRelease();
    return;
  }
  v3 = _CocoaArrayWrapper.endIndex.getter();
  if (!v3)
    goto LABEL_9;
LABEL_3:
  if (v3 >= 1)
  {
    for (i = 0; i != v3; ++i)
    {
      if ((v2 & 0xC000000000000001) != 0)
        v5 = (id)MEMORY[0x1C3B73D18](i, v2);
      else
        v5 = OUTLINED_FUNCTION_5_6(v2 + 8 * i);
      v6 = v5;
      objc_msgSend(v1, sel_removeInteraction_, v5);

    }
    goto LABEL_9;
  }
  __break(1u);
}

Swift::Void __swiftcall UIView.addTapInteraction(withTapCount:)(Swift::Int withTapCount)
{
  void *v1;
  void *v2;
  unint64_t v4;
  uint64_t v5;
  char *v6;

  v2 = v1;
  v4 = UIView.tapInteractions(withTapCount:)((id)withTapCount);
  if (v4 >> 62)
    v5 = _CocoaArrayWrapper.endIndex.getter();
  else
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRelease();
  if (!v5)
  {
    type metadata accessor for TapInteraction();
    v6 = TapInteraction.__allocating_init(tapCount:)(withTapCount);
    objc_msgSend(v2, sel_addInteraction_, v6);

  }
}

id sub_1BD051340@<X0>(_QWORD *a1@<X8>)
{
  id result;

  result = TapInteraction.numberOfTapsRequired.getter();
  *a1 = result;
  return result;
}

id sub_1BD051368(uint64_t *a1)
{
  return TapInteraction.numberOfTapsRequired.setter(*a1);
}

uint64_t dispatch thunk of TapInteractionHandler.handleTapInteractionEnabled(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of TapInteractionHandler.handleTapInteraction(_:eventType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 16))();
}

uint64_t dispatch thunk of TapInteractionHandler.handleTapInteractionOverrideView(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t initializeBufferWithCopyOfBuffer for TapInteraction.EventType(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v4 = v3;
  return a1;
}

void destroy for TapInteraction.EventType(id *a1)
{

}

uint64_t assignWithCopy for TapInteraction.EventType(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for TapInteraction.EventType(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for TapInteraction.EventType(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 24))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for TapInteraction.EventType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

uint64_t getEnumTag for TapInteraction.EventType(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *destructiveInjectEnumTag for TapInteraction.EventType(_QWORD *result, int a2)
{
  uint64_t v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
    result[1] = 0;
    result[2] = 0;
  }
  else
  {
    if (!a2)
      return result;
    v2 = (a2 - 1);
  }
  *result = v2;
  return result;
}

ValueMetadata *type metadata accessor for TapInteraction.EventType()
{
  return &type metadata for TapInteraction.EventType;
}

uint64_t protocol witness for TapInteractionHandler.handleTapInteractionOverrideView(_:) in conformance MultiwayViewController()
{
  return OUTLINED_FUNCTION_28_0();
}

uint64_t outlined init with copy of TapInteractionHandler?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TapInteractionHandler?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined init with take of TapInteractionHandler?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TapInteractionHandler?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t ViewModelCallStatusUpdateService.updateViewModel(with:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  v2[2] = a1;
  v2[3] = a2;
  type metadata accessor for MainActor();
  v2[4] = static MainActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  return swift_task_switch();
}

uint64_t ViewModelCallStatusUpdateService.updateViewModel(with:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v6;

  v1 = *(_QWORD *)(v0 + 16);
  swift_release();
  v3 = *(_QWORD *)(v1 + 16);
  v2 = *(_QWORD *)(v1 + 24);
  if (v3 == TranscriptionViewModel.callUUID.getter() && v2 == v4)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v6 & 1) == 0)
      return (*(uint64_t (**)(void))(v0 + 8))();
  }
  TranscriptionViewModel.state.setter();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

ValueMetadata *type metadata accessor for ViewModelCallStatusUpdateService()
{
  return &type metadata for ViewModelCallStatusUpdateService;
}

id one-time initialization function for faceTimeTodayFormatter()
{
  id result;

  result = closure #1 in variable initialization expression of static Date.faceTimeTodayFormatter();
  static Date.faceTimeTodayFormatter = (uint64_t)result;
  return result;
}

id closure #1 in variable initialization expression of static Date.faceTimeTodayFormatter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  void *v5;
  void *v6;
  Class isa;
  id v8;
  uint64_t v10;

  v0 = type metadata accessor for Locale();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3578]), sel_init);
  v5 = (void *)objc_opt_self();
  v6 = (void *)MEMORY[0x1C3B72E00](7158378, 0xE300000000000000);
  static Locale.current.getter();
  isa = Locale._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v8 = objc_msgSend(v5, sel_dateFormatFromTemplate_options_locale_, v6, 0, isa);

  objc_msgSend(v4, sel_setDateFormat_, v8);
  return v4;
}

uint64_t *Date.faceTimeTodayFormatter.unsafeMutableAddressor()
{
  if (one-time initialization token for faceTimeTodayFormatter != -1)
    swift_once();
  return &static Date.faceTimeTodayFormatter;
}

id static Date.faceTimeTodayFormatter.getter()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for faceTimeTodayFormatter, (id *)&static Date.faceTimeTodayFormatter);
}

id one-time initialization function for faceTimeOlderFormatter()
{
  id v0;
  id result;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3578]), sel_init);
  objc_msgSend(v0, sel_setTimeStyle_, 0);
  result = objc_msgSend(v0, sel_setDateStyle_, 1);
  static Date.faceTimeOlderFormatter = (uint64_t)v0;
  return result;
}

uint64_t *Date.faceTimeOlderFormatter.unsafeMutableAddressor()
{
  if (one-time initialization token for faceTimeOlderFormatter != -1)
    swift_once();
  return &static Date.faceTimeOlderFormatter;
}

id static Date.faceTimeOlderFormatter.getter()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for faceTimeOlderFormatter, (id *)&static Date.faceTimeOlderFormatter);
}

Swift::String __swiftcall Date.faceTimeDateString()()
{
  uint64_t v0;
  void *v1;
  Swift::String result;

  v0 = static Date.faceTimeDateString(from:)();
  result._object = v1;
  result._countAndFlagsBits = v0;
  return result;
}

uint64_t static Date.faceTimeDateString(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  id v8;
  Swift::String v9;
  Swift::String_optional v10;
  Swift::String v11;
  uint64_t countAndFlagsBits;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  Class isa;
  uint64_t v22;
  uint64_t v23;
  Swift::String v24;

  v1 = type metadata accessor for Calendar.Component();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v3 = type metadata accessor for Date();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Calendar();
  v23 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_0_27();
  static Calendar.current.getter();
  if ((Calendar.isDateInToday(_:)() & 1) != 0)
  {
    if (one-time initialization token for faceTimeTodayFormatter == -1)
      goto LABEL_12;
    goto LABEL_19;
  }
  if ((Calendar.isDateInYesterday(_:)() & 1) != 0)
  {
    v8 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
    v24._object = (void *)0xE000000000000000;
    v9._countAndFlagsBits = 0x6164726574736559;
    v9._object = (void *)0xE900000000000079;
    v10.value._countAndFlagsBits = 0x61737265766E6F43;
    v10.value._object = (void *)0xEF74694B6E6F6974;
    v11._countAndFlagsBits = 0;
    v11._object = (void *)0xE000000000000000;
    v24._countAndFlagsBits = 0;
    countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, v10, (NSBundle)v8, v11, v24)._countAndFlagsBits;
LABEL_13:
    v19 = countAndFlagsBits;

    goto LABEL_14;
  }
  v22 = v7;
  v13 = Date.init()();
  v7 = *(_QWORD *)(v2 + 104);
  OUTLINED_FUNCTION_2_32(v13, *MEMORY[0x1E0CB10F8]);
  v14 = Calendar.isDate(_:equalTo:toGranularity:)();
  OUTLINED_FUNCTION_3_18();
  v15 = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  if ((v14 & 1) == 0)
  {
    v7 = v22;
    if (one-time initialization token for faceTimeOlderFormatter == -1)
    {
LABEL_12:
      isa = Date._bridgeToObjectiveC()().super.isa;
      v8 = OUTLINED_FUNCTION_1_15((uint64_t)isa, sel_stringFromDate_);

      countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)();
      goto LABEL_13;
    }
LABEL_19:
    swift_once();
    goto LABEL_12;
  }
  OUTLINED_FUNCTION_2_32(v15, *MEMORY[0x1E0CB1198]);
  v16 = Calendar.component(_:from:)();
  OUTLINED_FUNCTION_3_18();
  v17 = v16 - 1;
  if (__OFSUB__(v16, 1))
  {
    __break(1u);
    goto LABEL_17;
  }
  v18 = Calendar.weekdaySymbols.getter();
  v7 = v22;
  if ((v17 & 0x8000000000000000) != 0)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v17 >= *(_QWORD *)(v18 + 16))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v19 = *(_QWORD *)(v18 + 16 * v17 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_14:
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v0, v7);
  return v19;
}

id @objc NSDate.faceTimeDateString.getter(void *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v1 = a1;
  v2 = NSDate.faceTimeDateString.getter();
  v4 = v3;

  v5 = (void *)MEMORY[0x1C3B72E00](v2, v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t NSDate.faceTimeDateString.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = type metadata accessor for Date();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_0_27();
  static Date._unconditionallyBridgeFromObjectiveC(_:)();
  v3 = static Date.faceTimeDateString(from:)();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
  return v3;
}

BOOL static PresentationContext.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

void PresentationContext.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
  Hasher._combine(_:)(a2);
  OUTLINED_FUNCTION_0();
}

Swift::Int PresentationContext.hashValue.getter(unsigned __int8 a1)
{
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1);
  return Hasher._finalize()();
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance PresentationContext(char *a1, char *a2)
{
  return static PresentationContext.== infix(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance PresentationContext()
{
  unsigned __int8 *v0;

  return PresentationContext.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance PresentationContext(uint64_t a1)
{
  unsigned __int8 *v1;

  PresentationContext.hash(into:)(a1, *v1);
}

void *ButtonStyle.Configuration.backgroundStyle.getter(void *a1, void *a2, char a3)
{
  outlined copy of ButtonBackgroundStyle(a1, a2, a3);
  return a1;
}

void ButtonStyle.Configuration.backgroundStyle.setter()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_15_11();
  OUTLINED_FUNCTION_20_14();
  *(_QWORD *)v1 = v3;
  *(_QWORD *)(v1 + 8) = v2;
  *(_BYTE *)(v1 + 16) = v0;
}

void outlined consume of ButtonBackgroundStyle(void *a1, void *a2, char a3)
{
  if (a3 >> 6 == 1)
  {

  }
  else if (!(a3 >> 6))
  {
    outlined consume of ButtonBackgroundBlurStyle(a1, a2, a3);
  }
}

void outlined consume of ButtonBackgroundBlurStyle(void *a1, void *a2, char a3)
{
  if (a3 && a3 != 2)
  {
    if (a3 != 1)
      return;

    a1 = a2;
  }

}

uint64_t (*ButtonStyle.Configuration.backgroundStyle.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void ButtonStyle.Configuration.foregroundColor.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = a1;
  OUTLINED_FUNCTION_0();
}

uint64_t (*ButtonStyle.Configuration.foregroundColor.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void ButtonStyle.regular.getter()
{
  OUTLINED_FUNCTION_28_9();
  OUTLINED_FUNCTION_29_7();
  OUTLINED_FUNCTION_18();
}

void ButtonStyle.regular.setter()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_23_9();
  OUTLINED_FUNCTION_20_14();

  *(_QWORD *)v1 = v4;
  *(_QWORD *)(v1 + 8) = v3;
  *(_BYTE *)(v1 + 16) = v2;
  *(_QWORD *)(v1 + 24) = v0;
  OUTLINED_FUNCTION_91();
}

uint64_t (*ButtonStyle.regular.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void ButtonStyle.flat.getter()
{
  OUTLINED_FUNCTION_28_9();
  OUTLINED_FUNCTION_29_7();
  OUTLINED_FUNCTION_18();
}

void ButtonStyle.flat.setter()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_23_9();
  outlined consume of ButtonBackgroundStyle(*(void **)(v1 + 32), *(void **)(v1 + 40), *(_BYTE *)(v1 + 48));

  *(_QWORD *)(v1 + 32) = v4;
  *(_QWORD *)(v1 + 40) = v3;
  *(_BYTE *)(v1 + 48) = v2;
  *(_QWORD *)(v1 + 56) = v0;
  OUTLINED_FUNCTION_91();
}

uint64_t (*ButtonStyle.flat.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void ButtonStyle.current.getter()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;

  v1 = v0;
  if (one-time initialization token for shared != -1)
    swift_once();
  v2 = (*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 320))();
  v3 = v0 + 32;
  v4 = 32;
  if ((v2 & 1) == 0)
  {
    v4 = 0;
    v3 = v0;
  }
  v5 = *(void **)(v3 + 24);
  outlined copy of ButtonBackgroundStyle(*(id *)(v1 + v4), *(void **)(v3 + 8), *(_BYTE *)(v3 + 16));
  v6 = v5;
  OUTLINED_FUNCTION_18();
}

uint64_t ButtonStyle.init(regular:flat:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  *(_QWORD *)a9 = result;
  *(_QWORD *)(a9 + 8) = a2;
  *(_BYTE *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  *(_BYTE *)(a9 + 48) = a7;
  *(_QWORD *)(a9 + 56) = a8;
  return result;
}

uint64_t key path setter for BaseButton.callbackCancellable : BaseButton(uint64_t a1, _QWORD **a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x90);
  v3 = swift_retain();
  return v2(v3);
}

uint64_t BaseButton.callbackCancellable.getter()
{
  OUTLINED_FUNCTION_2_0();
  return swift_retain();
}

uint64_t BaseButton.callbackCancellable.setter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit10BaseButton_callbackCancellable);
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  return swift_release();
}

uint64_t (*BaseButton.callbackCancellable.modify())()
{
  OUTLINED_FUNCTION_2_0();
  return CallRecordingPillViewController.cancellable.modify;
}

uint64_t BaseButton.shape.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC15ConversationKit10BaseButton_shape);
}

double BaseButton.cnkContentAlpha.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit10BaseButton_cnkContentAlpha;
  OUTLINED_FUNCTION_2_0();
  return *(double *)v1;
}

void BaseButton.cnkContentAlpha.setter(double a1)
{
  uint64_t v1;
  double *v3;

  v3 = (double *)(v1 + OBJC_IVAR____TtC15ConversationKit10BaseButton_cnkContentAlpha);
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  UIButton.updateContentAlpha(_:)(a1);
}

void (*BaseButton.cnkContentAlpha.modify(_QWORD *a1))(_QWORD **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC15ConversationKit10BaseButton_cnkContentAlpha;
  v3[3] = v1;
  v3[4] = v4;
  OUTLINED_FUNCTION_2_0();
  return BaseButton.cnkContentAlpha.modify;
}

void BaseButton.cnkContentAlpha.modify(_QWORD **a1, char a2)
{
  _QWORD *v3;

  v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
    UIButton.updateContentAlpha(_:)(*(double *)(v3[3] + v3[4]));
  OUTLINED_FUNCTION_11(v3);
}

void BaseButton.__allocating_init(title:symbol:shape:stateConfiguration:context:)(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_14_28(a1, a2, a3, a4);
  OUTLINED_FUNCTION_65_1();
}

void BaseButton.init(title:symbol:shape:stateConfiguration:context:)(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6)
{
  _BYTE *v6;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t *v16;
  objc_class *v17;
  _QWORD *v18;
  uint64_t (*v19)(void);
  _QWORD *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  objc_super v25;
  _QWORD v26[8];

  v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIButton.Configuration?);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v6[OBJC_IVAR____TtC15ConversationKit10BaseButton_callbackCancellable] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15ConversationKit10BaseButton_cnkContentAlpha] = 0x3FF0000000000000;
  v16 = (uint64_t *)&v6[OBJC_IVAR____TtC15ConversationKit10BaseButton__title];
  *v16 = a1;
  v16[1] = a2;
  outlined init with copy of SymbolImageDescribing?(a3, (uint64_t)&v6[OBJC_IVAR____TtC15ConversationKit10BaseButton_symbol]);
  v6[OBJC_IVAR____TtC15ConversationKit10BaseButton_shape] = a4;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15ConversationKit10BaseButton_stateConfiguration] = a5;
  v6[OBJC_IVAR____TtC15ConversationKit10BaseButton_context] = a6;
  v17 = (objc_class *)type metadata accessor for BaseButton();
  v25.receiver = v6;
  v25.super_class = v17;
  swift_bridgeObjectRetain();
  v18 = objc_msgSendSuper2(&v25, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v19 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v18) + 0xC8);
  v20 = v18;
  v21 = v19();
  BaseButton.style(for:)(v21, v26);
  static UIButton.Configuration.base(title:symbol:shape:style:context:)(a1, a2, a3, a4, (uint64_t)v26, a6, (uint64_t)v15);
  swift_bridgeObjectRelease();
  outlined release of ButtonStyle?((uint64_t)v26);
  v22 = type metadata accessor for UIButton.Configuration();
  OUTLINED_FUNCTION_27_4((uint64_t)v15, v23, v24, v22);
  UIButton.configuration.setter();

  outlined destroy of SymbolImageDescribing?(a3);
  OUTLINED_FUNCTION_65_1();
}

void BaseButton.__allocating_init(coder:)(void *a1)
{
  objc_msgSend(OUTLINED_FUNCTION_12_3(), sel_initWithCoder_, a1);

  OUTLINED_FUNCTION_0();
}

void BaseButton.init(coder:)()
{
  char *v0;

  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit10BaseButton_callbackCancellable] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit10BaseButton_cnkContentAlpha] = 0x3FF0000000000000;

  OUTLINED_FUNCTION_0_28();
  __break(1u);
}

unint64_t BaseButton.style(for:)@<X0>(unint64_t result@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  char v5;
  unint64_t v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  unsigned __int8 v14;
  uint64_t v15;
  id v16;

  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC15ConversationKit10BaseButton_stateConfiguration);
  if (*(_QWORD *)(v4 + 16) && (result = specialized __RawDictionaryStorage.find<A>(_:)(result), (v5 & 1) != 0))
  {
    v6 = *(_QWORD *)(v4 + 56) + (result << 6);
    v7 = *(id *)v6;
    v8 = *(void **)(v6 + 8);
    v10 = *(void **)(v6 + 24);
    v9 = *(void **)(v6 + 32);
    v11 = *(void **)(v6 + 40);
    v12 = *(void **)(v6 + 56);
    v13 = *(unsigned __int8 *)(v6 + 16);
    v14 = *(_BYTE *)(v6 + 48);
    v15 = v14;
    outlined copy of ButtonBackgroundStyle(*(id *)v6, v8, *(_BYTE *)(v6 + 16));
    v16 = v10;
    outlined copy of ButtonBackgroundStyle(v9, v11, v14);
    result = v12;
  }
  else
  {
    v7 = 0;
    v8 = 0;
    v13 = 0;
    v10 = 0;
    v9 = 0;
    v11 = 0;
    v15 = 0;
    v12 = 0;
  }
  *a2 = v7;
  a2[1] = v8;
  a2[2] = v13;
  a2[3] = v10;
  a2[4] = v9;
  a2[5] = v11;
  a2[6] = v15;
  a2[7] = v12;
  return result;
}

Swift::Void __swiftcall BaseButton.updateConfiguration()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[8];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIButton.Configuration?);
  v2 = MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC15ConversationKit10BaseButton__title);
  v6 = *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC15ConversationKit10BaseButton__title + 8);
  v7 = (uint64_t)v0 + OBJC_IVAR____TtC15ConversationKit10BaseButton_symbol;
  v8 = *((unsigned __int8 *)v0 + OBJC_IVAR____TtC15ConversationKit10BaseButton_shape);
  v9 = (*(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))(v2);
  BaseButton.style(for:)(v9, v13);
  static UIButton.Configuration.base(title:symbol:shape:style:context:)(v5, v6, v7, v8, (uint64_t)v13, *((unsigned __int8 *)v0 + OBJC_IVAR____TtC15ConversationKit10BaseButton_context), (uint64_t)v4);
  outlined release of ButtonStyle?((uint64_t)v13);
  v10 = type metadata accessor for UIButton.Configuration();
  OUTLINED_FUNCTION_27_4((uint64_t)v4, v11, v12, v10);
  UIButton.configuration.setter();
  OUTLINED_FUNCTION_91();
}

void BaseButton.computedState.getter(uint64_t a1)
{
  id v1;
  id v2;

  v1 = OUTLINED_FUNCTION_25_1(a1, sel_isEnabled);
  if ((_DWORD)v1)
  {
    v2 = OUTLINED_FUNCTION_25_1((uint64_t)v1, sel_isHighlighted);
    OUTLINED_FUNCTION_25_1((uint64_t)v2, sel_isSelected);
  }
  OUTLINED_FUNCTION_0();
}

id BaseButton.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

void BaseButton.init(frame:)()
{
  OUTLINED_FUNCTION_18_12();
  __break(1u);
}

id BaseButton.__deallocating_deinit()
{
  return BaseButton.__deallocating_deinit(type metadata accessor for BaseButton);
}

uint64_t protocol witness for Control.cnkContentAlpha.getter in conformance BaseButton()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t protocol witness for Control.cnkContentAlpha.setter in conformance BaseButton()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

void (*protocol witness for Control.cnkContentAlpha.modify in conformance BaseButton(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v3;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v1) + 0xB0))();
  return protocol witness for Control.cnkContentAlpha.modify in conformance BaseButton;
}

void protocol witness for Control.cnkContentAlpha.modify in conformance BaseButton(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  OUTLINED_FUNCTION_11(v1);
}

void BrickButton.__allocating_init(title:symbol:stateConfiguration:context:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_5_7();
  v0 = OUTLINED_FUNCTION_13_16();
  BrickButton.init(title:symbol:stateConfiguration:context:)(v0, v1, v2);
  OUTLINED_FUNCTION_91();
}

uint64_t BrickButton.init(title:symbol:stateConfiguration:context:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[40];

  outlined init with copy of SymbolImageDescribing?(a3, (uint64_t)v9);
  OUTLINED_FUNCTION_14_28(a1, a2, (uint64_t)v9, 0);
  v7 = v6;
  outlined destroy of SymbolImageDescribing?(a3);
  return v7;
}

void BrickButton.init(coder:)()
{
  OUTLINED_FUNCTION_0_28();
  __break(1u);
}

void BrickButton.__allocating_init(title:symbol:shape:stateConfiguration:context:)()
{
  BrickButton.__allocating_init(title:symbol:shape:stateConfiguration:context:)();
}

{
  OUTLINED_FUNCTION_18_12();
  __break(1u);
}

void BrickButton.init(title:symbol:shape:stateConfiguration:context:)()
{
  BrickButton.__allocating_init(title:symbol:shape:stateConfiguration:context:)();
}

id BrickButton.__deallocating_deinit()
{
  return BaseButton.__deallocating_deinit(type metadata accessor for BrickButton);
}

void PillButton.__allocating_init(title:symbol:stateConfiguration:context:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;

  OUTLINED_FUNCTION_5_7();
  v0 = OUTLINED_FUNCTION_13_16();
  PillButton.init(title:symbol:stateConfiguration:context:)(v0, v1, v2, v3, v4);
  OUTLINED_FUNCTION_91();
}

id PillButton.init(title:symbol:stateConfiguration:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  _BYTE *v5;
  uint64_t v11;
  _BYTE *v12;
  id v13;
  id v14;
  _BYTE v16[40];

  v11 = (uint64_t)&v5[OBJC_IVAR____TtC15ConversationKit10PillButton_symbol];
  *(_OWORD *)v11 = 0u;
  *(_OWORD *)(v11 + 16) = 0u;
  *(_QWORD *)(v11 + 32) = 0;
  v5[OBJC_IVAR____TtC15ConversationKit10PillButton_context] = a5;
  OUTLINED_FUNCTION_2_0();
  v12 = v5;
  outlined assign with copy of SymbolImageDescribing?(a3, v11);
  swift_endAccess();

  outlined init with copy of SymbolImageDescribing?(a3, (uint64_t)v16);
  BaseButton.init(title:symbol:shape:stateConfiguration:context:)(a1, a2, (uint64_t)v16, 2, a4, a5);
  v14 = v13;
  PillButton.setupConstraints()();

  outlined destroy of SymbolImageDescribing?(a3);
  return v14;
}

void PillButton.init(coder:)()
{
  char *v0;
  char *v1;

  v1 = &v0[OBJC_IVAR____TtC15ConversationKit10PillButton_symbol];
  *(_OWORD *)v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((_QWORD *)v1 + 4) = 0;

  OUTLINED_FUNCTION_0_28();
  __break(1u);
}

void PillButton.setupConstraints()()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  double v6;
  id v7;
  id v8;
  id v9;
  double v10;
  id v11;
  id v12;
  id v13;
  double v14;
  uint64_t v15;
  id v16;
  id v17;
  void *v18;
  Class isa;
  uint64_t v20;
  _BYTE v21[24];
  double v22;

  v1 = MEMORY[0x1E0DEE9D8];
  v20 = MEMORY[0x1E0DEE9D8];
  v2 = v0 + OBJC_IVAR____TtC15ConversationKit10PillButton_symbol;
  OUTLINED_FUNCTION_2_0();
  outlined init with copy of SymbolImageDescribing?(v2, (uint64_t)v21);
  v3 = outlined destroy of SymbolImageDescribing?((uint64_t)v21);
  if (!*(_BYTE *)(v0 + OBJC_IVAR____TtC15ConversationKit10PillButton_context))
  {
    v8 = OUTLINED_FUNCTION_25_1(v3, sel_widthAnchor);
    v9 = objc_msgSend(v8, sel_constraintGreaterThanOrEqualToConstant_, 72.0);

    v11 = OUTLINED_FUNCTION_22_11(v9, sel_setPriority_, v10);
    v12 = OUTLINED_FUNCTION_25_1((uint64_t)v11, sel_heightAnchor);
    v13 = objc_msgSend(v12, sel_constraintGreaterThanOrEqualToConstant_, 42.0);

    OUTLINED_FUNCTION_22_11(v13, sel_setPriority_, v14);
    if (v1 >> 62)
    {
      swift_bridgeObjectRetain();
      v15 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      v15 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    if (__OFADD__(v15, 2))
    {
      __break(1u);
    }
    else
    {
      specialized Array._reserveCapacityImpl(minimumCapacity:growForAppend:)(v15 + 2, 1);
      OUTLINED_FUNCTION_17_4();
      v16 = v9;
      MEMORY[0x1C3B7301C]();
      if (*(_QWORD *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(_QWORD *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        goto LABEL_8;
    }
    OUTLINED_FUNCTION_1_2();
LABEL_8:
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    OUTLINED_FUNCTION_17_4();
    v17 = v13;
    OUTLINED_FUNCTION_19_19();
  }
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC15ConversationKit10PillButton_context) == 1)
  {
    v4 = OUTLINED_FUNCTION_25_1(v3, sel_heightAnchor);
    static Layout.ConversationControls.values.getter((uint64_t)v21);
    v5 = objc_msgSend(v4, sel_constraintGreaterThanOrEqualToConstant_, v22);

    OUTLINED_FUNCTION_22_11(v5, sel_setPriority_, v6);
    v7 = v5;
    OUTLINED_FUNCTION_19_19();
  }
  v18 = (void *)objc_opt_self();
  type metadata accessor for NSLayoutConstraint();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v18, sel_activateConstraints_, isa);

}

void PillButton.__allocating_init(title:symbol:shape:stateConfiguration:context:)()
{
  BrickButton.__allocating_init(title:symbol:shape:stateConfiguration:context:)();
}

void PillButton.init(title:symbol:shape:stateConfiguration:context:)()
{
  BrickButton.__allocating_init(title:symbol:shape:stateConfiguration:context:)();
}

uint64_t PillButton.__ivar_destroyer()
{
  uint64_t v0;

  return outlined destroy of SymbolImageDescribing?(v0 + OBJC_IVAR____TtC15ConversationKit10PillButton_symbol);
}

id PillButton.__deallocating_deinit()
{
  return BaseButton.__deallocating_deinit(type metadata accessor for PillButton);
}

void CircularButton.squareConstraint.getter()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  id v6;

  v1 = OBJC_IVAR____TtC15ConversationKit14CircularButton____lazy_storage___squareConstraint;
  v2 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit14CircularButton____lazy_storage___squareConstraint];
  if (!v2)
  {
    v3 = closure #1 in CircularButton.squareConstraint.getter(v0);
    v4 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v3;
    v5 = v3;

    v2 = 0;
  }
  v6 = v2;
  OUTLINED_FUNCTION_18();
}

id closure #1 in CircularButton.squareConstraint.getter(void *a1)
{
  id v2;
  id v3;
  id v4;
  double v5;

  v2 = objc_msgSend(a1, sel_widthAnchor);
  v3 = objc_msgSend(a1, sel_heightAnchor);
  v4 = objc_msgSend(v2, sel_constraintEqualToAnchor_, v3);

  LODWORD(v5) = 1148846080;
  objc_msgSend(v4, sel_setPriority_, v5);
  return v4;
}

void CircularButton.__allocating_init(symbol:stateConfiguration:context:)()
{
  OUTLINED_FUNCTION_15_11();
  OUTLINED_FUNCTION_12_3();
  CircularButton.init(symbol:stateConfiguration:context:)();
  OUTLINED_FUNCTION_18();
}

id CircularButton.init(symbol:stateConfiguration:context:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  id v4;
  void *v5;
  void *v6;
  _BYTE v8[40];

  OUTLINED_FUNCTION_15_11();
  *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit14CircularButton____lazy_storage___squareConstraint) = 0;
  outlined init with copy of SymbolImageDescribing?(v2, (uint64_t)v8);
  OUTLINED_FUNCTION_14_28(0, 0, (uint64_t)v8, 1);
  v4 = v3;
  CircularButton.squareConstraint.getter();
  v6 = v5;
  objc_msgSend(v5, sel_setActive_, 1);

  outlined destroy of SymbolImageDescribing?(v1);
  return v4;
}

void CircularButton.init(coder:)()
{
  char *v0;

  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit14CircularButton____lazy_storage___squareConstraint] = 0;

  OUTLINED_FUNCTION_0_28();
  __break(1u);
}

void CircularButton.__allocating_init(title:symbol:shape:stateConfiguration:context:)()
{
  BrickButton.__allocating_init(title:symbol:shape:stateConfiguration:context:)();
}

void CircularButton.init(title:symbol:shape:stateConfiguration:context:)()
{
  BrickButton.__allocating_init(title:symbol:shape:stateConfiguration:context:)();
}

void CircularButton.__ivar_destroyer()
{
  uint64_t v0;

}

id CircularButton.__deallocating_deinit()
{
  return BaseButton.__deallocating_deinit(type metadata accessor for CircularButton);
}

id BaseButton.__deallocating_deinit(uint64_t (*a1)(void))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t specialized OptionSet<>.formUnion(_:)(uint64_t result)
{
  _QWORD *v1;

  *v1 |= result;
  return result;
}

{
  _DWORD *v1;

  *v1 |= result;
  return result;
}

uint64_t outlined init with copy of SymbolImageDescribing?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for SymbolImageDescribing?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for BaseButton()
{
  return objc_opt_self();
}

uint64_t outlined release of ButtonStyle?(uint64_t a1)
{
  outlined consume of ButtonStyle?(*(void **)a1, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16), *(void **)(a1 + 24), *(void **)(a1 + 32), *(void **)(a1 + 40), *(_QWORD *)(a1 + 48), *(void **)(a1 + 56));
  return a1;
}

void outlined consume of ButtonStyle?(void *a1, void *a2, char a3, void *a4, void *a5, void *a6, char a7, void *a8)
{
  if (a4)
  {
    outlined consume of ButtonBackgroundStyle(a1, a2, a3);

    outlined consume of ButtonBackgroundStyle(a5, a6, a7);
  }
}

uint64_t outlined destroy of SymbolImageDescribing?(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for SymbolImageDescribing?);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for BrickButton()
{
  return objc_opt_self();
}

uint64_t outlined assign with copy of SymbolImageDescribing?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for SymbolImageDescribing?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for PillButton()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for CircularButton()
{
  return objc_opt_self();
}

unint64_t lazy protocol witness table accessor for type PresentationContext and conformance PresentationContext()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PresentationContext and conformance PresentationContext;
  if (!lazy protocol witness table cache variable for type PresentationContext and conformance PresentationContext)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for PresentationContext, &type metadata for PresentationContext);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PresentationContext and conformance PresentationContext);
  }
  return result;
}

void sub_1BD0534F4(_QWORD **a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x88))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD053534(_QWORD **a1@<X0>, double *a2@<X8>)
{
  *a2 = (*(double (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0xA0))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD053570(double *a1, _QWORD **a2)
{
  (*(void (**)(double))((*MEMORY[0x1E0DEEDD8] & **a2) + 0xA8))(*a1);
  OUTLINED_FUNCTION_0();
}

void initializeBufferWithCopyOfBuffer for ButtonBackgroundBlurStyle(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  initializeBufferWithCopyOfBuffer for ButtonBackgroundBlurStyle(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t))outlined copy of ButtonBackgroundBlurStyle);
}

void destroy for ButtonBackgroundBlurStyle(uint64_t a1)
{
  outlined consume of ButtonBackgroundBlurStyle(*(void **)a1, *(void **)(a1 + 8), *(_BYTE *)(a1 + 16));
}

void assignWithCopy for ButtonBackgroundBlurStyle(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  assignWithCopy for ButtonBackgroundBlurStyle(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t))outlined copy of ButtonBackgroundBlurStyle, (void (*)(uint64_t, uint64_t, uint64_t))outlined consume of ButtonBackgroundBlurStyle);
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

void assignWithTake for ButtonBackgroundBlurStyle(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  assignWithTake for ButtonBackgroundBlurStyle(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))outlined consume of ButtonBackgroundBlurStyle);
}

uint64_t getEnumTagSinglePayload for ButtonBackgroundBlurStyle(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFD && *(_BYTE *)(a1 + 17))
    {
      v2 = *(_DWORD *)a1 + 252;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 3)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ButtonBackgroundBlurStyle(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 253;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t getEnumTag for ButtonBackgroundBlurStyle(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 2u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 3);
}

uint64_t destructiveInjectEnumTag for ButtonBackgroundBlurStyle(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(_QWORD *)result = a2 - 3;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 3;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

void type metadata accessor for ButtonBackgroundBlurStyle()
{
  OUTLINED_FUNCTION_34_0();
}

void initializeBufferWithCopyOfBuffer for ButtonBackgroundStyle(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  initializeBufferWithCopyOfBuffer for ButtonBackgroundBlurStyle(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t))outlined copy of ButtonBackgroundStyle);
}

void destroy for ButtonBackgroundStyle(uint64_t a1)
{
  outlined consume of ButtonBackgroundStyle(*(void **)a1, *(void **)(a1 + 8), *(_BYTE *)(a1 + 16));
}

void initializeBufferWithCopyOfBuffer for ButtonBackgroundBlurStyle(uint64_t a1, uint64_t *a2, uint64_t a3, void (*a4)(_QWORD, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *a2;
  v6 = a2[1];
  v7 = *((unsigned __int8 *)a2 + 16);
  a4(*a2, v6, v7);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = v7;
  OUTLINED_FUNCTION_18();
}

void assignWithCopy for ButtonBackgroundStyle(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  assignWithCopy for ButtonBackgroundBlurStyle(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t))outlined copy of ButtonBackgroundStyle, (void (*)(uint64_t, uint64_t, uint64_t))outlined consume of ButtonBackgroundStyle);
}

void assignWithCopy for ButtonBackgroundBlurStyle(uint64_t *a1, uint64_t *a2, uint64_t a3, void (*a4)(_QWORD, uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v7 = *a2;
  v8 = a2[1];
  v9 = *((unsigned __int8 *)a2 + 16);
  a4(*a2, v8, v9);
  v10 = *a1;
  v11 = a1[1];
  *a1 = v7;
  a1[1] = v8;
  v12 = *((unsigned __int8 *)a1 + 16);
  *((_BYTE *)a1 + 16) = v9;
  a5(v10, v11, v12);
  OUTLINED_FUNCTION_91();
}

void assignWithTake for ButtonBackgroundStyle(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  assignWithTake for ButtonBackgroundBlurStyle(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))outlined consume of ButtonBackgroundStyle);
}

void assignWithTake for ButtonBackgroundBlurStyle(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t))
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_BYTE *)(a2 + 16);
  v6 = *a1;
  v7 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v8 = *((unsigned __int8 *)a1 + 16);
  *((_BYTE *)a1 + 16) = v5;
  a4(v6, v7, v8);
  OUTLINED_FUNCTION_0();
}

uint64_t getEnumTagSinglePayload for ButtonBackgroundStyle(uint64_t a1, unsigned int a2)
{
  unsigned int v2;

  if (a2)
  {
    if (a2 >= 0x3E && *(_BYTE *)(a1 + 17))
    {
      v2 = *(_DWORD *)a1 + 61;
    }
    else
    {
      v2 = (*(_BYTE *)(a1 + 16) & 0x3C | (*(unsigned __int8 *)(a1 + 16) >> 6)) ^ 0x3F;
      if (v2 >= 0x3D)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for ButtonBackgroundStyle(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3D)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 62;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x3E)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0x3E)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 0;
      *(_BYTE *)(result + 16) = 4 * (((-a2 >> 2) & 0xF) - 16 * a2);
    }
  }
  return result;
}

uint64_t getEnumTag for ButtonBackgroundStyle(uint64_t a1)
{
  unsigned int v1;
  int v2;
  unsigned int v3;

  v1 = *(unsigned __int8 *)(a1 + 16);
  v2 = (char)v1;
  v3 = v1 >> 6;
  if (v2 >= 0)
    return v3;
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t destructiveProjectEnumData for ButtonBackgroundStyle(uint64_t result)
{
  *(_BYTE *)(result + 16) &= 0x3Fu;
  return result;
}

uint64_t destructiveInjectEnumTag for ButtonBackgroundStyle(uint64_t result, unsigned int a2)
{
  char v2;

  if (a2 < 2)
  {
    v2 = *(_BYTE *)(result + 16) & 3 | ((_BYTE)a2 << 6);
  }
  else
  {
    *(_QWORD *)result = a2 - 2;
    *(_QWORD *)(result + 8) = 0;
    v2 = 0x80;
  }
  *(_BYTE *)(result + 16) = v2;
  return result;
}

void type metadata accessor for ButtonBackgroundStyle()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t storeEnumTagSinglePayload for PresentationContext(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BD053914 + 4 * byte_1BD6444C5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BD053948 + 4 * byte_1BD6444C0[v4]))();
}

uint64_t sub_1BD053948(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD053950(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD053958);
  return result;
}

uint64_t sub_1BD053964(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD05396CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BD053970(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD053978(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for PresentationContext()
{
  OUTLINED_FUNCTION_34_0();
}

void destroy for ButtonStyle(uint64_t a1)
{
  outlined consume of ButtonBackgroundStyle(*(void **)a1, *(void **)(a1 + 8), *(_BYTE *)(a1 + 16));

  outlined consume of ButtonBackgroundStyle(*(void **)(a1 + 32), *(void **)(a1 + 40), *(_BYTE *)(a1 + 48));
}

uint64_t initializeWithCopy for ButtonStyle(uint64_t a1, uint64_t a2)
{
  id v4;
  void *v5;
  char v6;
  void *v7;
  void *v8;
  void *v9;
  char v10;
  id v11;
  void *v12;
  id v13;

  v4 = *(id *)a2;
  v5 = *(void **)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 16);
  outlined copy of ButtonBackgroundStyle(*(id *)a2, v5, v6);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  v7 = *(void **)(a2 + 24);
  v8 = *(void **)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v7;
  v9 = *(void **)(a2 + 40);
  v10 = *(_BYTE *)(a2 + 48);
  v11 = v7;
  outlined copy of ButtonBackgroundStyle(v8, v9, v10);
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = v10;
  v12 = *(void **)(a2 + 56);
  *(_QWORD *)(a1 + 56) = v12;
  v13 = v12;
  return a1;
}

uint64_t assignWithCopy for ButtonStyle(uint64_t a1, uint64_t a2)
{
  id v4;
  void *v5;
  char v6;
  void *v7;
  void *v8;
  char v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  char v15;
  void *v16;
  void *v17;
  char v18;
  void *v19;
  void *v20;
  id v21;

  v4 = *(id *)a2;
  v5 = *(void **)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 16);
  outlined copy of ButtonBackgroundStyle(*(id *)a2, v5, v6);
  v7 = *(void **)a1;
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  v9 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v6;
  outlined consume of ButtonBackgroundStyle(v7, v8, v9);
  v10 = *(void **)(a2 + 24);
  v11 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v10;
  v12 = v10;

  v13 = *(void **)(a2 + 32);
  v14 = *(void **)(a2 + 40);
  v15 = *(_BYTE *)(a2 + 48);
  outlined copy of ButtonBackgroundStyle(v13, v14, v15);
  v16 = *(void **)(a1 + 32);
  v17 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v13;
  *(_QWORD *)(a1 + 40) = v14;
  v18 = *(_BYTE *)(a1 + 48);
  *(_BYTE *)(a1 + 48) = v15;
  outlined consume of ButtonBackgroundStyle(v16, v17, v18);
  v19 = *(void **)(a2 + 56);
  v20 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = v19;
  v21 = v19;

  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ButtonStyle(uint64_t a1, uint64_t a2)
{
  char v4;
  void *v5;
  void *v6;
  char v7;
  void *v8;
  char v9;
  void *v10;
  void *v11;
  char v12;
  void *v13;

  v4 = *(_BYTE *)(a2 + 16);
  v5 = *(void **)a1;
  v6 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v7 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v4;
  outlined consume of ButtonBackgroundStyle(v5, v6, v7);
  v8 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);

  v9 = *(_BYTE *)(a2 + 48);
  v10 = *(void **)(a1 + 32);
  v11 = *(void **)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v12 = *(_BYTE *)(a1 + 48);
  *(_BYTE *)(a1 + 48) = v9;
  outlined consume of ButtonBackgroundStyle(v10, v11, v12);
  v13 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);

  return a1;
}

uint64_t getEnumTagSinglePayload for ButtonStyle(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 64))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ButtonStyle(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for ButtonStyle()
{
  OUTLINED_FUNCTION_34_0();
}

void destroy for ButtonStyle.Configuration(uint64_t a1)
{
  outlined consume of ButtonBackgroundStyle(*(void **)a1, *(void **)(a1 + 8), *(_BYTE *)(a1 + 16));

}

uint64_t initializeWithCopy for ButtonStyle.Configuration(uint64_t a1, uint64_t a2)
{
  id v4;
  void *v5;
  char v6;
  void *v7;
  id v8;

  v4 = *(id *)a2;
  v5 = *(void **)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 16);
  outlined copy of ButtonBackgroundStyle(*(id *)a2, v5, v6);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  v7 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v7;
  v8 = v7;
  return a1;
}

uint64_t assignWithCopy for ButtonStyle.Configuration(uint64_t a1, uint64_t a2)
{
  id v4;
  void *v5;
  char v6;
  void *v7;
  void *v8;
  char v9;
  void *v10;
  void *v11;
  id v12;

  v4 = *(id *)a2;
  v5 = *(void **)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 16);
  outlined copy of ButtonBackgroundStyle(*(id *)a2, v5, v6);
  v7 = *(void **)a1;
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  v9 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v6;
  outlined consume of ButtonBackgroundStyle(v7, v8, v9);
  v10 = *(void **)(a2 + 24);
  v11 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v10;
  v12 = v10;

  return a1;
}

uint64_t assignWithTake for ButtonStyle.Configuration(uint64_t a1, uint64_t a2)
{
  char v4;
  void *v5;
  void *v6;
  char v7;
  void *v8;

  v4 = *(_BYTE *)(a2 + 16);
  v5 = *(void **)a1;
  v6 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v7 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v4;
  outlined consume of ButtonBackgroundStyle(v5, v6, v7);
  v8 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);

  return a1;
}

uint64_t getEnumTagSinglePayload for ButtonStyle.Configuration(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ButtonStyle.Configuration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for ButtonStyle.Configuration()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t dispatch thunk of ButtonLifecycleDelegate.didLayoutSubviews(button:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of ButtonLifecycleDelegate.movedToWindow(button:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of ButtonLifecycleDelegate.startedContextMenu(button:animator:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of ButtonLifecycleDelegate.endedContextMenu(button:animator:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t method lookup function for BaseButton()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BaseButton.callbackCancellable.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of BaseButton.callbackCancellable.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of BaseButton.callbackCancellable.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of BaseButton.cnkContentAlpha.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of BaseButton.cnkContentAlpha.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of BaseButton.cnkContentAlpha.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of BaseButton.__allocating_init(title:symbol:shape:stateConfiguration:context:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t dispatch thunk of BaseButton.computedState.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t method lookup function for BrickButton()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BrickButton.__allocating_init(title:symbol:stateConfiguration:context:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t method lookup function for PillButton()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PillButton.__allocating_init(title:symbol:stateConfiguration:context:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 272))();
}

uint64_t method lookup function for CircularButton()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CircularButton.__allocating_init(symbol:stateConfiguration:context:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 240))();
}

id static NSItemProvider.unknownError.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;

  v0 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v2 = v1;
  v3 = objc_allocWithZone(MEMORY[0x1E0CB35C8]);
  return @nonobjc NSError.init(domain:code:userInfo:)(v0, v2, -1, 0);
}

uint64_t specialized NSItemProvider.loadObject<A>(ofClass:)()
{
  uint64_t v0;
  _QWORD *v1;

  v1[3] = v0;
  v1[4] = swift_getObjectType();
  v1[5] = _sSo8NSObjectCMaTm_0(0, &lazy cache variable for type metadata for CKContainerSetupInfo);
  return swift_task_switch();
}

{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = OUTLINED_FUNCTION_21_5();
  OUTLINED_FUNCTION_20_15(v1);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v2;
  *v2 = v0;
  v2[1] = specialized NSItemProvider.loadObject<A>(ofClass:);
  OUTLINED_FUNCTION_3_19();
  return OUTLINED_FUNCTION_13_17();
}

{
  uint64_t v0;

  OUTLINED_FUNCTION_9_16();
  if (!v0)
    swift_task_dealloc();
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_0_6();
}

{
  uint64_t v0;

  swift_task_dealloc();
  return OUTLINED_FUNCTION_16(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  _QWORD *v1;

  v1[3] = v0;
  v1[4] = swift_getObjectType();
  v1[5] = _sSo8NSObjectCMaTm_0(0, &lazy cache variable for type metadata for _SWPendingCollaboration);
  return swift_task_switch();
}

{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = OUTLINED_FUNCTION_21_5();
  OUTLINED_FUNCTION_20_15(v1);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v2;
  *v2 = v0;
  v2[1] = specialized NSItemProvider.loadObject<A>(ofClass:);
  OUTLINED_FUNCTION_3_19();
  return OUTLINED_FUNCTION_13_17();
}

{
  uint64_t v0;

  OUTLINED_FUNCTION_9_16();
  if (!v0)
    swift_task_dealloc();
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_0_6();
}

uint64_t NSItemProvider.loadObject<A>(ofClass:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  v3[6] = swift_getObjectType();
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_4_4();
}

uint64_t NSItemProvider.loadObject<A>(ofClass:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = OUTLINED_FUNCTION_21_5();
  *(_QWORD *)(v0 + 56) = v3;
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v3 + 32) = v2;
  *(_QWORD *)(v3 + 40) = v1;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v4;
  *v4 = v0;
  v4[1] = NSItemProvider.loadObject<A>(ofClass:);
  OUTLINED_FUNCTION_3_19();
  return withCheckedThrowingContinuation<A>(isolation:function:_:)();
}

{
  uint64_t v0;

  OUTLINED_FUNCTION_10_27();
  if (!v0)
    swift_task_dealloc();
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_0_6();
}

{
  uint64_t v0;

  swift_task_dealloc();
  return OUTLINED_FUNCTION_16(*(uint64_t (**)(void))(v0 + 8));
}

void specialized closure #1 in NSItemProvider.loadObject<A>(ofClass:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjCClassFromMetadata;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;
  id v21;
  _QWORD aBlock[6];

  v21 = a2;
  v12 = __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x1E0C80A78](v12);
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v12);
  v16 = (*(unsigned __int8 *)(v13 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v17 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v17 + v16, (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
  *(_QWORD *)(v17 + ((v14 + v16 + 7) & 0xFFFFFFFFFFFFFFF8)) = a4;
  aBlock[4] = a7;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed @Sendable (@guaranteed NSItemProviderReading?, @guaranteed Error?) -> ();
  aBlock[3] = a8;
  v18 = _Block_copy(aBlock);
  swift_release();
  v19 = objc_msgSend(v21, sel_loadObjectOfClass_completionHandler_, ObjCClassFromMetadata, v18);
  _Block_release(v18);

}

void closure #1 in NSItemProvider.loadObject<A>(ofClass:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t ObjCClassFromMetadata;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  _QWORD aBlock[6];

  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&demangling cache variable for type metadata for Error);
  v9 = type metadata accessor for CheckedContinuation();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)aBlock - v12;
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, a1, v9);
  v15 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a5;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v16 + v15, v13, v9);
  *(_QWORD *)(v16 + ((v11 + v15 + 7) & 0xFFFFFFFFFFFFFFF8)) = a4;
  aBlock[4] = partial apply for closure #1 in closure #1 in NSItemProvider.loadObject<A>(ofClass:);
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed @Sendable (@guaranteed NSItemProviderReading?, @guaranteed Error?) -> ();
  aBlock[3] = &block_descriptor_32;
  v17 = _Block_copy(aBlock);
  swift_release();
  v18 = objc_msgSend(a2, sel_loadObjectOfClass_completionHandler_, ObjCClassFromMetadata, v17);
  _Block_release(v17);

}

uint64_t specialized closure #1 in closure #1 in NSItemProvider.loadObject<A>(ofClass:)(uint64_t a1, id a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6)
{
  id v9;

  if (a1 && (objc_opt_self(), swift_dynamicCastObjCClass()))
  {
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(a6);
    return CheckedContinuation.resume(returning:)();
  }
  else
  {
    if (!a2)
      static NSItemProvider.unknownError.getter();
    v9 = a2;
    __swift_instantiateConcreteTypeFromMangledName(a6);
    return CheckedContinuation.resume(throwing:)();
  }
}

uint64_t closure #1 in closure #1 in NSItemProvider.loadObject<A>(ofClass:)(uint64_t a1, id a2)
{
  id v4;

  if (a1
    && (swift_unknownObjectRetain(),
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSItemProviderReading),
        (swift_dynamicCast() & 1) != 0))
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&demangling cache variable for type metadata for Error);
    type metadata accessor for CheckedContinuation();
    return CheckedContinuation.resume(returning:)();
  }
  else
  {
    if (!a2)
      static NSItemProvider.unknownError.getter();
    v4 = a2;
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&demangling cache variable for type metadata for Error);
    type metadata accessor for CheckedContinuation();
    return CheckedContinuation.resume(throwing:)();
  }
}

uint64_t thunk for @escaping @callee_guaranteed @Sendable (@guaranteed NSItemProviderReading?, @guaranteed Error?) -> ()(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v5)(uint64_t, void *);
  id v6;

  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  swift_unknownObjectRetain();
  v6 = a3;
  v5(a2, a3);
  swift_release();

  return swift_unknownObjectRelease();
}

uint64_t NSItemProvider.loadInPlaceFileRepresentation(forTypeIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  v4[6] = swift_getObjectType();
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_4_4();
}

uint64_t NSItemProvider.loadInPlaceFileRepresentation(forTypeIdentifier:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  __int128 v6;

  v2 = *(_QWORD *)(v0 + 40);
  v1 = *(_QWORD *)(v0 + 48);
  v6 = *(_OWORD *)(v0 + 24);
  v3 = OUTLINED_FUNCTION_21_5();
  *(_QWORD *)(v0 + 56) = v3;
  *(_QWORD *)(v3 + 16) = v2;
  *(_OWORD *)(v3 + 24) = v6;
  *(_QWORD *)(v3 + 40) = v1;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v4;
  type metadata accessor for URL();
  *v4 = v0;
  v4[1] = NSItemProvider.loadInPlaceFileRepresentation(forTypeIdentifier:);
  OUTLINED_FUNCTION_2_14();
  return withCheckedThrowingContinuation<A>(isolation:function:_:)();
}

{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_10_27();
  if (v0)
  {
    OUTLINED_FUNCTION_2_14();
    return OUTLINED_FUNCTION_0_6();
  }
  else
  {
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void closure #1 in NSItemProvider.loadInPlaceFileRepresentation(forTypeIdentifier:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  _QWORD aBlock[6];

  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<URL, Error>);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x1E0C80A78](v10);
  v13 = (void *)MEMORY[0x1C3B72E00](a3, a4);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)aBlock - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v10);
  v14 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v15 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v15 + v14, (char *)aBlock - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  *(_QWORD *)(v15 + ((v12 + v14 + 7) & 0xFFFFFFFFFFFFFFF8)) = a5;
  aBlock[4] = partial apply for closure #1 in closure #1 in NSItemProvider.loadInPlaceFileRepresentation(forTypeIdentifier:);
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed @Sendable (@in_guaranteed URL?, @unowned Bool, @guaranteed Error?) -> ();
  aBlock[3] = &block_descriptor_26;
  v16 = _Block_copy(aBlock);
  swift_release();
  v17 = objc_msgSend(a2, sel_loadInPlaceFileRepresentationForTypeIdentifier_completionHandler_, v13, v16);
  _Block_release(v16);

}

uint64_t closure #1 in closure #1 in NSItemProvider.loadInPlaceFileRepresentation(forTypeIdentifier:)(uint64_t a1, char a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  id v16;
  id v18;
  _QWORD v19[2];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for URL();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)v19 - v14;
  outlined init with copy of URL?(a1, (uint64_t)v8);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v8, v9);
    if ((URL.isFileURL.getter() & 1) != 0 && (a2 & 1) != 0)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<URL, Error>);
      CheckedContinuation.resume(returning:)();
      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v9);
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
    if (a3)
      goto LABEL_3;
LABEL_8:
    v16 = static NSItemProvider.unknownError.getter();
    goto LABEL_9;
  }
  outlined destroy of URL?((uint64_t)v8);
  if (!a3)
    goto LABEL_8;
LABEL_3:
  v16 = a3;
LABEL_9:
  v19[1] = v16;
  v18 = a3;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<URL, Error>);
  return CheckedContinuation.resume(throwing:)();
}

uint64_t thunk for @escaping @callee_guaranteed @Sendable (@in_guaranteed URL?, @unowned Bool, @guaranteed Error?) -> ()(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, uint64_t, void *);
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v16;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(void (**)(char *, uint64_t, void *))(a1 + 32);
  if (a2)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)();
    v12 = type metadata accessor for URL();
    v13 = 0;
  }
  else
  {
    v12 = type metadata accessor for URL();
    v13 = 1;
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v10, v13, 1, v12);
  swift_retain();
  v14 = a4;
  v11(v10, a3, a4);
  swift_release();

  return outlined destroy of URL?((uint64_t)v10);
}

uint64_t NSItemProvider.collaborationInitiator.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[2] = v0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PersonNameComponents?);
  v1[3] = OUTLINED_FUNCTION_23_3();
  v2 = type metadata accessor for URL();
  v1[4] = v2;
  v1[5] = *(_QWORD *)(v2 - 8);
  v1[6] = OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_4_4();
}

{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v2)(uint64_t);
  id v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t);
  uint64_t (*v17)(void);

  _sSo8NSObjectCMaTm_0(0, &lazy cache variable for type metadata for CKContainerSetupInfo);
  swift_getObjCClassFromMetadata();
  if (OUTLINED_FUNCTION_25_11())
  {
    v1 = (_QWORD *)OUTLINED_FUNCTION_19_13();
    *(_QWORD *)(v0 + 56) = v1;
    v2 = NSItemProvider.collaborationInitiator.getter;
LABEL_5:
    *v1 = v0;
    v1[1] = v2;
    return v17();
  }
  _sSo8NSObjectCMaTm_0(0, &lazy cache variable for type metadata for _SWPendingCollaboration);
  swift_getObjCClassFromMetadata();
  if (OUTLINED_FUNCTION_25_11())
  {
    v1 = (_QWORD *)OUTLINED_FUNCTION_19_13();
    *(_QWORD *)(v0 + 96) = v1;
    v2 = NSItemProvider.collaborationInitiator.getter;
    goto LABEL_5;
  }
  v4 = objc_msgSend(*(id *)(v0 + 16), sel_registeredTypeIdentifiersWithFileOptions_, 1);
  v5 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v5[2])
  {
    v6 = v5[4];
    v7 = v5[5];
    *(_QWORD *)(v0 + 112) = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v8 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 120) = v8;
    *v8 = v0;
    v8[1] = NSItemProvider.collaborationInitiator.getter;
    return NSItemProvider.loadInPlaceFileRepresentation(forTypeIdentifier:)(*(_QWORD *)(v0 + 48), v6, v7);
  }
  else
  {
    v9 = *(_QWORD *)(v0 + 24);
    swift_bridgeObjectRelease();
    v10 = type metadata accessor for PersonNameComponents();
    __swift_storeEnumTagSinglePayload(v9, 1, 1, v10);
    v11 = objc_allocWithZone(MEMORY[0x1E0DBD220]);
    OUTLINED_FUNCTION_2_14();
    @nonobjc TUCollaborationInitiator.init(nameComponents:handle:)(v12, v13, v14);
    OUTLINED_FUNCTION_5_8();
    OUTLINED_FUNCTION_12();
    v15 = OUTLINED_FUNCTION_22_12();
    return v16(v15);
  }
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  OUTLINED_FUNCTION_5_8();
  OUTLINED_FUNCTION_12();
  v1 = OUTLINED_FUNCTION_22_12();
  return OUTLINED_FUNCTION_8_25(v1, v2);
}

{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 104);
  v2 = _SWPendingCollaboration.collaborationInitiator.getter();

  swift_task_dealloc();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_8_25((uint64_t)v2, *(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v5;

  OUTLINED_FUNCTION_15_15();
  OUTLINED_FUNCTION_24_4(v3);
  *(_QWORD *)(v1 + 128) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0)
  {
    OUTLINED_FUNCTION_2_14();
    return OUTLINED_FUNCTION_1_3();
  }
  else
  {
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v1 + 136) = v5;
    *v5 = v2;
    v5[1] = NSItemProvider.collaborationInitiator.getter;
    return URL.userNameAndEmail.getter();
  }
}

{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t (*v9)(void);

  v1 = v0[19];
  v2 = v0[20];
  v4 = v0[5];
  v3 = v0[6];
  v6 = v0[3];
  v5 = v0[4];
  PersonNameComponents.init(formattedName:)(v0[22], v0[21], v6);
  v7 = objc_allocWithZone(MEMORY[0x1E0DBD220]);
  @nonobjc TUCollaborationInitiator.init(nameComponents:handle:)(v6, v2, v1);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  OUTLINED_FUNCTION_5_8();
  OUTLINED_FUNCTION_12();
  v8 = OUTLINED_FUNCTION_22_12();
  return OUTLINED_FUNCTION_8_25(v8, v9);
}

{
  uint64_t v0;

  OUTLINED_FUNCTION_5_8();
  OUTLINED_FUNCTION_12();
  return OUTLINED_FUNCTION_6(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;

  OUTLINED_FUNCTION_5_8();
  OUTLINED_FUNCTION_12();
  return OUTLINED_FUNCTION_6(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;

  OUTLINED_FUNCTION_5_8();
  OUTLINED_FUNCTION_12();
  return OUTLINED_FUNCTION_6(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t NSItemProvider.collaborationInitiator.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;
  _QWORD *v7;

  OUTLINED_FUNCTION_15_15();
  OUTLINED_FUNCTION_24_4(v5);
  *(_QWORD *)(v2 + 64) = a1;
  swift_task_dealloc();
  if (v1)
  {
    OUTLINED_FUNCTION_26_5();
    OUTLINED_FUNCTION_12();
    return OUTLINED_FUNCTION_14_3(*(uint64_t (**)(void))(v3 + 8));
  }
  else
  {
    v7 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v2 + 72) = v7;
    *v7 = v3;
    v7[1] = NSItemProvider.collaborationInitiator.getter;
    return CKContainerSetupInfo.collaborationInitiator.getter();
  }
}

{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  OUTLINED_FUNCTION_15_15();
  OUTLINED_FUNCTION_24_4(v4);
  *(_QWORD *)(v2 + 80) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v2 + 88) = a1;
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_1_3();
}

{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;

  OUTLINED_FUNCTION_15_15();
  OUTLINED_FUNCTION_24_4(v5);
  swift_task_dealloc();
  if (v1)
  {
    OUTLINED_FUNCTION_26_5();
    OUTLINED_FUNCTION_12();
    return OUTLINED_FUNCTION_14_3(*(uint64_t (**)(void))(v3 + 8));
  }
  else
  {
    *(_QWORD *)(v2 + 104) = a1;
    OUTLINED_FUNCTION_2_14();
    return OUTLINED_FUNCTION_1_3();
  }
}

uint64_t NSItemProvider.collaborationInitiator.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v10;
  _QWORD *v12;

  v12 = (_QWORD *)*v5;
  v10 = v12;
  OUTLINED_FUNCTION_24_4(&v12);
  v10[18] = v4;
  swift_task_dealloc();
  if (v4)
  {
    (*(void (**)(_QWORD, _QWORD))(v10[5] + 8))(v10[6], v10[4]);
  }
  else
  {
    v10[19] = a4;
    v10[20] = a3;
    v10[21] = a2;
    v10[22] = a1;
  }
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_0_6();
}

id @nonobjc NSError.init(domain:code:userInfo:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v7;
  NSDictionary v8;
  id v9;

  v7 = (void *)MEMORY[0x1C3B72E00]();
  swift_bridgeObjectRelease();
  if (a4)
  {
    v8.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v8.super.isa = 0;
  }
  v9 = objc_msgSend(v4, sel_initWithDomain_code_userInfo_, v7, a3, v8.super.isa);

  return v9;
}

void partial apply for closure #1 in NSItemProvider.loadObject<A>(ofClass:)(uint64_t a1)
{
  uint64_t v1;

  closure #1 in NSItemProvider.loadObject<A>(ofClass:)(a1, *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 16));
}

void partial apply for closure #1 in NSItemProvider.loadInPlaceFileRepresentation(forTypeIdentifier:)(uint64_t a1)
{
  uint64_t v1;

  closure #1 in NSItemProvider.loadInPlaceFileRepresentation(forTypeIdentifier:)(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

id @nonobjc TUCollaborationInitiator.init(nameComponents:handle:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  uint64_t v8;
  Class isa;
  void *v10;
  id v11;

  v4 = v3;
  v8 = type metadata accessor for PersonNameComponents();
  isa = 0;
  if (__swift_getEnumTagSinglePayload(a1, 1, v8) != 1)
  {
    isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(a1, v8);
  }
  if (a3)
  {
    v10 = (void *)MEMORY[0x1C3B72E00](a2, a3);
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = 0;
  }
  v11 = objc_msgSend(v4, sel_initWithNameComponents_handle_, isa, v10);

  return v11;
}

void partial apply for specialized closure #1 in NSItemProvider.loadObject<A>(ofClass:)(uint64_t a1)
{
  uint64_t v1;

  specialized closure #1 in NSItemProvider.loadObject<A>(ofClass:)(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), &demangling cache variable for type metadata for CheckedContinuation<CKContainerSetupInfo, Error>, (uint64_t)&unk_1E7615E98, (uint64_t)partial apply for specialized closure #1 in closure #1 in NSItemProvider.loadObject<A>(ofClass:), (uint64_t)&block_descriptor_1);
}

{
  uint64_t v1;

  specialized closure #1 in NSItemProvider.loadObject<A>(ofClass:)(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), &demangling cache variable for type metadata for CheckedContinuation<_SWPendingCollaboration, Error>, (uint64_t)&unk_1E7615EE8, (uint64_t)partial apply for specialized closure #1 in closure #1 in NSItemProvider.loadObject<A>(ofClass:), (uint64_t)&block_descriptor_20);
}

uint64_t sub_1BD0555F0()
{
  return objectdestroyTm(&demangling cache variable for type metadata for CheckedContinuation<CKContainerSetupInfo, Error>);
}

uint64_t partial apply for specialized closure #1 in closure #1 in NSItemProvider.loadObject<A>(ofClass:)(uint64_t a1, void *a2)
{
  return partial apply for specialized closure #1 in closure #1 in NSItemProvider.loadObject<A>(ofClass:)(a1, a2, &demangling cache variable for type metadata for CheckedContinuation<CKContainerSetupInfo, Error>, 0x1E0C94C58);
}

{
  return partial apply for specialized closure #1 in closure #1 in NSItemProvider.loadObject<A>(ofClass:)(a1, a2, &demangling cache variable for type metadata for CheckedContinuation<_SWPendingCollaboration, Error>, 0x1E0CD7428);
}

uint64_t sub_1BD05564C()
{
  return objectdestroyTm(&demangling cache variable for type metadata for CheckedContinuation<_SWPendingCollaboration, Error>);
}

uint64_t partial apply for specialized closure #1 in closure #1 in NSItemProvider.loadObject<A>(ofClass:)(uint64_t a1, void *a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;

  __swift_instantiateConcreteTypeFromMangledName(a3);
  OUTLINED_FUNCTION_11_19();
  return specialized closure #1 in closure #1 in NSItemProvider.loadObject<A>(ofClass:)(a1, a2, v4 + v9, *(_QWORD *)(v4 + v10), a4, a3);
}

uint64_t sub_1BD0556D8()
{
  return objectdestroyTm(&demangling cache variable for type metadata for CheckedContinuation<URL, Error>);
}

uint64_t objectdestroyTm(uint64_t *a1)
{
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(a1);
  OUTLINED_FUNCTION_7_29(*(_QWORD *)(v1 - 8));
  return OUTLINED_FUNCTION_18_19();
}

uint64_t partial apply for closure #1 in closure #1 in NSItemProvider.loadInPlaceFileRepresentation(forTypeIdentifier:)(uint64_t a1, char a2, void *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<URL, Error>);
  OUTLINED_FUNCTION_11_19();
  return closure #1 in closure #1 in NSItemProvider.loadInPlaceFileRepresentation(forTypeIdentifier:)(a1, a2, a3);
}

uint64_t outlined destroy of URL?(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t outlined init with copy of URL?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BD055804()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&demangling cache variable for type metadata for Error);
  v0 = type metadata accessor for CheckedContinuation();
  OUTLINED_FUNCTION_7_29(*(_QWORD *)(v0 - 8));
  return OUTLINED_FUNCTION_18_19();
}

uint64_t partial apply for closure #1 in closure #1 in NSItemProvider.loadObject<A>(ofClass:)(uint64_t a1, void *a2)
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&demangling cache variable for type metadata for Error);
  type metadata accessor for CheckedContinuation();
  OUTLINED_FUNCTION_11_19();
  return closure #1 in closure #1 in NSItemProvider.loadObject<A>(ofClass:)(a1, a2);
}

id one-time initialization function for systemApertureDurationTextColor()
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.22745098, 1.0, 0.42745098, 1.0);
  static UIColor.systemApertureDurationTextColor = (uint64_t)result;
  return result;
}

uint64_t *UIColor.systemApertureDurationTextColor.unsafeMutableAddressor()
{
  if (one-time initialization token for systemApertureDurationTextColor != -1)
    swift_once();
  return &static UIColor.systemApertureDurationTextColor;
}

id static UIColor.systemApertureDurationTextColor.getter()
{
  if (one-time initialization token for systemApertureDurationTextColor != -1)
    swift_once();
  return (id)static UIColor.systemApertureDurationTextColor;
}

void one-time initialization function for sensorRegionHeight()
{
  static SystemApertureConstants.sensorRegionHeight = 0x4043000000000000;
}

uint64_t *SystemApertureConstants.sensorRegionHeight.unsafeMutableAddressor()
{
  if (one-time initialization token for sensorRegionHeight != -1)
    swift_once();
  return &static SystemApertureConstants.sensorRegionHeight;
}

double static SystemApertureConstants.sensorRegionHeight.getter()
{
  return static SystemApertureConstants.sensorRegionHeight.getter(&one-time initialization token for sensorRegionHeight, (uint64_t)&static SystemApertureConstants.sensorRegionHeight);
}

void one-time initialization function for avatarDiameter()
{
  static SystemApertureOngoingTelephonyControlsView.Constants.avatarDiameter = 0x4049000000000000;
}

{
  static OngoingTelephonyControlsView.Constants.avatarDiameter = 0x4049000000000000;
}

uint64_t *SystemApertureOngoingTelephonyControlsView.Constants.avatarDiameter.unsafeMutableAddressor()
{
  if (one-time initialization token for avatarDiameter != -1)
    swift_once();
  return &static SystemApertureOngoingTelephonyControlsView.Constants.avatarDiameter;
}

double static SystemApertureOngoingTelephonyControlsView.Constants.avatarDiameter.getter()
{
  return static SystemApertureConstants.sensorRegionHeight.getter(&one-time initialization token for avatarDiameter, (uint64_t)&static SystemApertureOngoingTelephonyControlsView.Constants.avatarDiameter);
}

int64x2_t one-time initialization function for leadingViewSize()
{
  int64x2_t result;

  result = vdupq_n_s64(0x4049000000000000uLL);
  static SystemApertureOngoingTelephonyControlsView.Constants.leadingViewSize = (__int128)result;
  return result;
}

{
  int64x2_t result;

  result = vdupq_n_s64(0x4049000000000000uLL);
  static SystemApertureIncomingCallControlsView.Constants.leadingViewSize = (__int128)result;
  return result;
}

__int128 *SystemApertureOngoingTelephonyControlsView.Constants.leadingViewSize.unsafeMutableAddressor()
{
  if (one-time initialization token for leadingViewSize != -1)
    swift_once();
  return &static SystemApertureOngoingTelephonyControlsView.Constants.leadingViewSize;
}

double static SystemApertureOngoingTelephonyControlsView.Constants.leadingViewSize.getter()
{
  if (one-time initialization token for leadingViewSize != -1)
    swift_once();
  return *(double *)&static SystemApertureOngoingTelephonyControlsView.Constants.leadingViewSize;
}

double one-time initialization function for avatarMargins()
{
  double result;

  result = 14.0;
  static SystemApertureOngoingTelephonyControlsView.Constants.avatarMargins = xmmword_1BD6446B0;
  xmmword_1EF4FC690 = xmmword_1BD6446C0;
  return result;
}

{
  double result;

  result = 14.0;
  static OngoingTelephonyControlsView.Constants.avatarMargins = xmmword_1BD6446B0;
  *(_OWORD *)&qword_1EF4FCC10 = xmmword_1BD6446C0;
  return result;
}

{
  double result;

  result = 14.0;
  static SystemApertureIncomingCallControlsView.Constants.avatarMargins = xmmword_1BD6446B0;
  xmmword_1EF4FD4A0 = xmmword_1BD6446C0;
  return result;
}

__int128 *SystemApertureOngoingTelephonyControlsView.Constants.avatarMargins.unsafeMutableAddressor()
{
  if (one-time initialization token for avatarMargins != -1)
    swift_once();
  return &static SystemApertureOngoingTelephonyControlsView.Constants.avatarMargins;
}

double static SystemApertureOngoingTelephonyControlsView.Constants.avatarMargins.getter()
{
  if (one-time initialization token for avatarMargins != -1)
    swift_once();
  return *(double *)&static SystemApertureOngoingTelephonyControlsView.Constants.avatarMargins;
}

double one-time initialization function for brandedCallMargins()
{
  double result;

  if (one-time initialization token for avatarMargins != -1)
    swift_once();
  static SystemApertureOngoingTelephonyControlsView.Constants.brandedCallMargins = static SystemApertureOngoingTelephonyControlsView.Constants.avatarMargins;
  qword_1EF4FC6A8 = 0x4037000000000000;
  result = *(double *)&xmmword_1EF4FC690;
  xmmword_1EF4FC6B0 = xmmword_1EF4FC690;
  return result;
}

{
  double result;

  if (one-time initialization token for avatarMargins != -1)
    swift_once();
  static SystemApertureIncomingCallControlsView.Constants.brandedCallMargins = static SystemApertureIncomingCallControlsView.Constants.avatarMargins;
  qword_1EF4FD4B8 = 0x4037000000000000;
  result = *(double *)&xmmword_1EF4FD4A0;
  xmmword_1EF4FD4C0 = xmmword_1EF4FD4A0;
  return result;
}

uint64_t *SystemApertureOngoingTelephonyControlsView.Constants.brandedCallMargins.unsafeMutableAddressor()
{
  if (one-time initialization token for brandedCallMargins != -1)
    swift_once();
  return &static SystemApertureOngoingTelephonyControlsView.Constants.brandedCallMargins;
}

double static SystemApertureOngoingTelephonyControlsView.Constants.brandedCallMargins.getter()
{
  if (one-time initialization token for brandedCallMargins != -1)
    swift_once();
  return *(double *)&static SystemApertureOngoingTelephonyControlsView.Constants.brandedCallMargins;
}

void one-time initialization function for brandedIconTrailingSpacer()
{
  static SystemApertureOngoingTelephonyControlsView.Constants.brandedIconTrailingSpacer = 0x4010000000000000;
}

{
  static OngoingTelephonyControlsView.Constants.brandedIconTrailingSpacer = 0x4010000000000000;
}

uint64_t *SystemApertureOngoingTelephonyControlsView.Constants.brandedIconTrailingSpacer.unsafeMutableAddressor()
{
  if (one-time initialization token for brandedIconTrailingSpacer != -1)
    swift_once();
  return &static SystemApertureOngoingTelephonyControlsView.Constants.brandedIconTrailingSpacer;
}

double static SystemApertureOngoingTelephonyControlsView.Constants.brandedIconTrailingSpacer.getter()
{
  return static SystemApertureConstants.sensorRegionHeight.getter(&one-time initialization token for brandedIconTrailingSpacer, (uint64_t)&static SystemApertureOngoingTelephonyControlsView.Constants.brandedIconTrailingSpacer);
}

void *SystemApertureOngoingTelephonyControlsView.Constants.brandedCallImageCornerRadius.unsafeMutableAddressor()
{
  return &static SystemApertureOngoingTelephonyControlsView.Constants.brandedCallImageCornerRadius;
}

double static SystemApertureOngoingTelephonyControlsView.Constants.brandedCallImageCornerRadius.getter()
{
  return 12.0;
}

double one-time initialization function for textTopInset()
{
  double result;

  if (one-time initialization token for sensorRegionHeight != -1)
    swift_once();
  result = *(double *)&static SystemApertureConstants.sensorRegionHeight;
  static SystemApertureOngoingTelephonyControlsView.Constants.textTopInset = static SystemApertureConstants.sensorRegionHeight;
  return result;
}

uint64_t *SystemApertureOngoingTelephonyControlsView.Constants.textTopInset.unsafeMutableAddressor()
{
  if (one-time initialization token for textTopInset != -1)
    swift_once();
  return &static SystemApertureOngoingTelephonyControlsView.Constants.textTopInset;
}

double static SystemApertureOngoingTelephonyControlsView.Constants.textTopInset.getter()
{
  return static SystemApertureConstants.sensorRegionHeight.getter(&one-time initialization token for textTopInset, (uint64_t)&static SystemApertureOngoingTelephonyControlsView.Constants.textTopInset);
}

void one-time initialization function for textBottomInset()
{
  static SystemApertureOngoingTelephonyControlsView.Constants.textBottomInset = 0x4031000000000000;
}

{
  static OngoingTelephonyControlsView.Constants.textBottomInset = 0x4031000000000000;
}

uint64_t *SystemApertureOngoingTelephonyControlsView.Constants.textBottomInset.unsafeMutableAddressor()
{
  if (one-time initialization token for textBottomInset != -1)
    swift_once();
  return &static SystemApertureOngoingTelephonyControlsView.Constants.textBottomInset;
}

double static SystemApertureOngoingTelephonyControlsView.Constants.textBottomInset.getter()
{
  return static SystemApertureConstants.sensorRegionHeight.getter(&one-time initialization token for textBottomInset, (uint64_t)&static SystemApertureOngoingTelephonyControlsView.Constants.textBottomInset);
}

void one-time initialization function for minimumTextWidth()
{
  static SystemApertureOngoingTelephonyControlsView.Constants.minimumTextWidth = 0x4063800000000000;
}

{
  static OngoingTelephonyControlsView.Constants.minimumTextWidth = 0x4063800000000000;
}

{
  static SystemApertureIncomingCallControlsView.Constants.minimumTextWidth = 0x4063800000000000;
}

uint64_t *SystemApertureOngoingTelephonyControlsView.Constants.minimumTextWidth.unsafeMutableAddressor()
{
  if (one-time initialization token for minimumTextWidth != -1)
    swift_once();
  return &static SystemApertureOngoingTelephonyControlsView.Constants.minimumTextWidth;
}

double static SystemApertureOngoingTelephonyControlsView.Constants.minimumTextWidth.getter()
{
  return static SystemApertureConstants.sensorRegionHeight.getter(&one-time initialization token for minimumTextWidth, (uint64_t)&static SystemApertureOngoingTelephonyControlsView.Constants.minimumTextWidth);
}

void one-time initialization function for secondaryShortTextWidthThreshold()
{
  static SystemApertureOngoingTelephonyControlsView.Constants.secondaryShortTextWidthThreshold = 0x404C000000000000;
}

{
  static SystemApertureIncomingCallControlsView.Constants.secondaryShortTextWidthThreshold = 0x404A800000000000;
}

uint64_t *SystemApertureOngoingTelephonyControlsView.Constants.secondaryShortTextWidthThreshold.unsafeMutableAddressor()
{
  if (one-time initialization token for secondaryShortTextWidthThreshold != -1)
    swift_once();
  return &static SystemApertureOngoingTelephonyControlsView.Constants.secondaryShortTextWidthThreshold;
}

double static SystemApertureOngoingTelephonyControlsView.Constants.secondaryShortTextWidthThreshold.getter()
{
  return static SystemApertureConstants.sensorRegionHeight.getter(&one-time initialization token for secondaryShortTextWidthThreshold, (uint64_t)&static SystemApertureOngoingTelephonyControlsView.Constants.secondaryShortTextWidthThreshold);
}

id one-time initialization function for statusTextColor()
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithWhite_alpha_, 1.0, 0.4);
  static SystemApertureOngoingTelephonyControlsView.Constants.statusTextColor = (uint64_t)result;
  return result;
}

{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithWhite_alpha_, 1.0, 0.4);
  static OngoingTelephonyControlsView.Constants.statusTextColor = (uint64_t)result;
  return result;
}

uint64_t *SystemApertureOngoingTelephonyControlsView.Constants.statusTextColor.unsafeMutableAddressor()
{
  if (one-time initialization token for statusTextColor != -1)
    swift_once();
  return &static SystemApertureOngoingTelephonyControlsView.Constants.statusTextColor;
}

id static SystemApertureOngoingTelephonyControlsView.Constants.statusTextColor.getter()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for statusTextColor, (id *)&static SystemApertureOngoingTelephonyControlsView.Constants.statusTextColor);
}

id one-time initialization function for durationTextColor()
{
  if (one-time initialization token for systemApertureDurationTextColor != -1)
    swift_once();
  static SystemApertureOngoingTelephonyControlsView.Constants.durationTextColor = static UIColor.systemApertureDurationTextColor;
  return (id)static UIColor.systemApertureDurationTextColor;
}

{
  id result;

  result = objc_msgSend((id)objc_opt_self(), sel_systemGreenColor);
  static OngoingTelephonyControlsView.Constants.durationTextColor = (uint64_t)result;
  return result;
}

uint64_t *SystemApertureOngoingTelephonyControlsView.Constants.durationTextColor.unsafeMutableAddressor()
{
  if (one-time initialization token for durationTextColor != -1)
    swift_once();
  return &static SystemApertureOngoingTelephonyControlsView.Constants.durationTextColor;
}

id static SystemApertureOngoingTelephonyControlsView.Constants.durationTextColor.getter()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for durationTextColor, (id *)&static SystemApertureOngoingTelephonyControlsView.Constants.durationTextColor);
}

void one-time initialization function for actionDiameter()
{
  static SystemApertureOngoingTelephonyControlsView.Constants.actionDiameter = 0x4049000000000000;
}

{
  static OngoingTelephonyControlsView.Constants.actionDiameter = 0x4049000000000000;
}

{
  static SystemApertureIncomingCallControlsView.Constants.actionDiameter = 0x4049000000000000;
}

uint64_t *SystemApertureOngoingTelephonyControlsView.Constants.actionDiameter.unsafeMutableAddressor()
{
  if (one-time initialization token for actionDiameter != -1)
    swift_once();
  return &static SystemApertureOngoingTelephonyControlsView.Constants.actionDiameter;
}

double static SystemApertureOngoingTelephonyControlsView.Constants.actionDiameter.getter()
{
  return static SystemApertureConstants.sensorRegionHeight.getter(&one-time initialization token for actionDiameter, (uint64_t)&static SystemApertureOngoingTelephonyControlsView.Constants.actionDiameter);
}

double one-time initialization function for actionMargins()
{
  double result;

  result = 17.0;
  static SystemApertureOngoingTelephonyControlsView.Constants.actionMargins = xmmword_1BD6446D0;
  *(_OWORD *)&qword_1EF4FC710 = xmmword_1BD6446E0;
  return result;
}

{
  double result;

  result = 17.0;
  static OngoingTelephonyControlsView.Constants.actionMargins = xmmword_1BD6446D0;
  *(_OWORD *)&qword_1EF4FCC70 = xmmword_1BD6446E0;
  return result;
}

{
  double result;

  result = 17.0;
  static SystemApertureIncomingCallControlsView.Constants.actionMargins = xmmword_1BD6446D0;
  *(_OWORD *)&qword_1EF4FD530 = xmmword_1BD6446E0;
  return result;
}

__int128 *SystemApertureOngoingTelephonyControlsView.Constants.actionMargins.unsafeMutableAddressor()
{
  if (one-time initialization token for actionMargins != -1)
    swift_once();
  return &static SystemApertureOngoingTelephonyControlsView.Constants.actionMargins;
}

double static SystemApertureOngoingTelephonyControlsView.Constants.actionMargins.getter()
{
  if (one-time initialization token for actionMargins != -1)
    swift_once();
  return *(double *)&static SystemApertureOngoingTelephonyControlsView.Constants.actionMargins;
}

void one-time initialization function for interActionPadding()
{
  static SystemApertureOngoingTelephonyControlsView.Constants.interActionPadding = 0x4024000000000000;
}

{
  static OngoingTelephonyControlsView.Constants.interActionPadding = 0x4024000000000000;
}

{
  static SystemApertureIncomingCallControlsView.Constants.interActionPadding = 0x4024000000000000;
}

uint64_t *SystemApertureOngoingTelephonyControlsView.Constants.interActionPadding.unsafeMutableAddressor()
{
  if (one-time initialization token for interActionPadding != -1)
    swift_once();
  return &static SystemApertureOngoingTelephonyControlsView.Constants.interActionPadding;
}

double static SystemApertureOngoingTelephonyControlsView.Constants.interActionPadding.getter()
{
  return static SystemApertureConstants.sensorRegionHeight.getter(&one-time initialization token for interActionPadding, (uint64_t)&static SystemApertureOngoingTelephonyControlsView.Constants.interActionPadding);
}

double static SystemApertureConstants.sensorRegionHeight.getter(_QWORD *a1, uint64_t a2)
{
  if (*a1 != -1)
    swift_once();
  return *(double *)a2;
}

void SystemApertureOngoingTelephonyControlsView.leadingView.setter(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit42SystemApertureOngoingTelephonyControlsView_leadingView);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit42SystemApertureOngoingTelephonyControlsView_leadingView) = a1;

}

char *SystemApertureOngoingTelephonyControlsView.__allocating_init(recipe:controlsManager:menuHostViewController:)(uint64_t a1, void *a2, void *a3)
{
  objc_class *v3;
  id v7;

  v7 = objc_allocWithZone(v3);
  return SystemApertureOngoingTelephonyControlsView.init(recipe:controlsManager:menuHostViewController:)(a1, a2, a3);
}

char *SystemApertureOngoingTelephonyControlsView.init(recipe:controlsManager:menuHostViewController:)(uint64_t a1, void *a2, void *a3)
{
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  void *v11;
  double v12;
  char *v13;
  id v14;
  UILabel *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  objc_class *v19;
  id v20;
  UILabel *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  objc_class *v27;
  NSBundle v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  objc_class *v36;
  NSBundle v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t ObjectType;
  uint64_t v48;
  uint64_t v49;
  id v50;
  void *v51;
  id v52;
  uint64_t v53;
  void (*v54)(uint64_t);
  uint64_t v55;
  char *v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  id v60;
  void *v61;
  void *v62;
  void *v63;
  char *v64;
  id v65;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  objc_super v72;
  uint64_t v73;
  _QWORD v74[5];
  UIColor_optional v75;
  UIColor_optional v76;

  type metadata accessor for ConversationControlsAction();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_77();
  v9 = (_BYTE *)(v8 - v7);
  *(_QWORD *)&v3[OBJC_IVAR____TtC15ConversationKit42SystemApertureOngoingTelephonyControlsView_leadingView] = 0;
  v10 = OBJC_IVAR____TtC15ConversationKit42SystemApertureOngoingTelephonyControlsView_primaryLabel;
  type metadata accessor for UILabel();
  v11 = (void *)objc_opt_self();
  v12 = *MEMORY[0x1E0DC1438];
  v13 = v3;
  v14 = objc_msgSend(v11, sel_systemFontOfSize_weight_, 16.67, v12);
  v75.value.super.isa = (Class)objc_msgSend((id)objc_opt_self(), sel_whiteColor);
  UILabel.init(font:textColor:)(v15, (UIFont)v14, v75);
  v69 = v10;
  v70 = v3;
  *(_QWORD *)&v3[v10] = v16;
  v17 = OBJC_IVAR____TtC15ConversationKit42SystemApertureOngoingTelephonyControlsView_secondaryLabel;
  v18 = objc_msgSend(v11, sel_monospacedDigitSystemFontOfSize_weight_, 14.0, *MEMORY[0x1E0DC1448]);
  if (one-time initialization token for statusTextColor != -1)
    swift_once();
  v19 = (objc_class *)static SystemApertureOngoingTelephonyControlsView.Constants.statusTextColor;
  v20 = (id)static SystemApertureOngoingTelephonyControlsView.Constants.statusTextColor;
  v76.value.super.isa = v19;
  UILabel.init(font:textColor:)(v21, (UIFont)v18, v76);
  *(_QWORD *)&v13[v17] = v22;
  v13[OBJC_IVAR____TtC15ConversationKit42SystemApertureOngoingTelephonyControlsView_context] = 0;
  *(_QWORD *)&v13[OBJC_IVAR____TtC15ConversationKit42SystemApertureOngoingTelephonyControlsView_cnkContentAlpha] = 0x3FF0000000000000;
  outlined init with copy of ConversationControlsRecipe(a1, (uint64_t)&v13[OBJC_IVAR____TtC15ConversationKit42SystemApertureOngoingTelephonyControlsView_recipe]);
  *(_QWORD *)&v13[OBJC_IVAR____TtC15ConversationKit42SystemApertureOngoingTelephonyControlsView_controlsManager] = a2;
  swift_storeEnumTagMultiPayload();
  v68 = a1;
  v23 = one-time initialization token for conversationKit;
  v24 = a2;
  v67 = v17;
  if (v23 != -1)
    swift_once();
  v25 = unk_1EF4FCB30;
  v26 = qword_1EF4FCB38;
  v27 = (objc_class *)(id)static LocalizationSource.conversationKit;
  swift_bridgeObjectRetain();
  v28.super.isa = v27;
  v29 = OUTLINED_FUNCTION_49_2(0xD000000000000015, 0x80000001BD66E060, v25, v26, v28);
  v31 = v30;
  swift_bridgeObjectRelease();

  OUTLINED_FUNCTION_63_2();
  v33 = v32;
  outlined bridged method (mbgnn) of @objc NSObject.accessibilityLabel.setter(v29, v31, v33);
  swift_bridgeObjectRelease();

  outlined destroy of ConversationControlsAction((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsAction);
  *(_QWORD *)&v13[OBJC_IVAR____TtC15ConversationKit42SystemApertureOngoingTelephonyControlsView_changeRouteButton] = v33;
  static ConversationControlsAction.rejectCall(controlsManager:)(v24, v9);
  v34 = unk_1EF4FCB30;
  v35 = qword_1EF4FCB38;
  v36 = (objc_class *)(id)static LocalizationSource.conversationKit;
  swift_bridgeObjectRetain();
  v37.super.isa = v36;
  v38 = OUTLINED_FUNCTION_49_2(0x5F474E41485F5841, 0xEA00000000005055, v34, v35, v37);
  v40 = v39;
  swift_bridgeObjectRelease();

  OUTLINED_FUNCTION_63_2();
  v42 = v41;
  outlined bridged method (mbgnn) of @objc NSObject.accessibilityLabel.setter(v38, v40, v42);
  swift_bridgeObjectRelease();

  outlined destroy of ConversationControlsAction((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsAction);
  *(_QWORD *)&v13[OBJC_IVAR____TtC15ConversationKit42SystemApertureOngoingTelephonyControlsView_hangUpButton] = v42;
  objc_msgSend(*(id *)&v70[v69], sel_setAttributedText_, *(_QWORD *)(v68 + 80));
  *(_QWORD *)&v13[OBJC_IVAR____TtC15ConversationKit42SystemApertureOngoingTelephonyControlsView_brandedIconView] = 0;
  v43 = type metadata accessor for DurationLabelController();
  v44 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v24) + 0x270))();
  v46 = v45;
  ObjectType = swift_getObjectType();
  v74[3] = ObjectType;
  v48 = *(_QWORD *)(v46 + 8);
  v74[4] = v48;
  v74[0] = v44;
  v49 = one-time initialization token for durationTextColor;
  v50 = *(id *)&v13[v67];
  if (v49 != -1)
    swift_once();
  v51 = (void *)static SystemApertureOngoingTelephonyControlsView.Constants.durationTextColor;
  v73 = v44;
  swift_unknownObjectRetain();
  v52 = v51;
  v53 = specialized DurationLabelController.__allocating_init(durationProvider:label:textColor:voiceOverUpdateHandler:prefixAttributedString:)(&v73, v50, v51, 0, 0, 0, v43, ObjectType, v48);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v74);
  *(_QWORD *)&v13[OBJC_IVAR____TtC15ConversationKit42SystemApertureOngoingTelephonyControlsView_durationController] = v53;
  v54 = *(void (**)(uint64_t))(*(_QWORD *)v53 + 248);
  v55 = swift_retain();
  v54(v55);
  swift_release();

  v72.receiver = v13;
  v72.super_class = (Class)ObjC metadata update function for SystemApertureOngoingTelephonyControlsView();
  v56 = (char *)objc_msgSendSuper2(&v72, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  SystemApertureOngoingTelephonyControlsView.updateLeadingView()();
  v57 = OBJC_IVAR____TtC15ConversationKit42SystemApertureOngoingTelephonyControlsView_secondaryLabel;
  v58 = objc_msgSend(*(id *)&v56[OBJC_IVAR____TtC15ConversationKit42SystemApertureOngoingTelephonyControlsView_secondaryLabel], sel_layer);
  OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_53_0(v58, sel_setAllowsHitTesting_);

  v59 = OBJC_IVAR____TtC15ConversationKit42SystemApertureOngoingTelephonyControlsView_primaryLabel;
  v60 = objc_msgSend(*(id *)&v56[OBJC_IVAR____TtC15ConversationKit42SystemApertureOngoingTelephonyControlsView_primaryLabel], sel_layer);
  OUTLINED_FUNCTION_53_0(v60, sel_setAllowsHitTesting_);

  v61 = *(void **)&v56[v57];
  OUTLINED_FUNCTION_53_0(v61, sel_setUserInteractionEnabled_);
  v62 = *(void **)&v56[v59];
  OUTLINED_FUNCTION_53_0(v62, sel_setUserInteractionEnabled_);
  objc_msgSend(v56, sel_addSubview_, v61);
  objc_msgSend(v56, sel_addSubview_, v62);
  OUTLINED_FUNCTION_52_7(OBJC_IVAR____TtC15ConversationKit42SystemApertureOngoingTelephonyControlsView_changeRouteButton);
  OUTLINED_FUNCTION_52_7(OBJC_IVAR____TtC15ConversationKit42SystemApertureOngoingTelephonyControlsView_hangUpButton);
  v63 = *(void **)&v56[OBJC_IVAR____TtC15ConversationKit42SystemApertureOngoingTelephonyControlsView_brandedIconView];
  if (v63)
  {
    v64 = v56;
    v65 = v63;
    objc_msgSend(v64, sel_addSubview_, v65);

  }
  outlined destroy of ConversationControlsAction(v68, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
  return v56;
}

unint64_t type metadata accessor for UILabel()
{
  unint64_t result;

  result = lazy cache variable for type metadata for UILabel;
  if (!lazy cache variable for type metadata for UILabel)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for UILabel);
  }
  return result;
}

uint64_t outlined init with copy of ConversationControlsRecipe(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ConversationControlsRecipe();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id SystemApertureOngoingTelephonyControlsView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void SystemApertureOngoingTelephonyControlsView.init(coder:)()
{
  _BYTE *v0;
  uint64_t v1;
  void *v2;
  id v3;
  UILabel *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  objc_class *v8;
  id v9;
  UILabel *v10;
  uint64_t v11;
  UIColor_optional v12;
  UIColor_optional v13;

  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit42SystemApertureOngoingTelephonyControlsView_leadingView] = 0;
  v1 = OBJC_IVAR____TtC15ConversationKit42SystemApertureOngoingTelephonyControlsView_primaryLabel;
  type metadata accessor for UILabel();
  v2 = (void *)objc_opt_self();
  v3 = objc_msgSend(v2, sel_systemFontOfSize_weight_, 16.67, *MEMORY[0x1E0DC1438]);
  v12.value.super.isa = (Class)objc_msgSend((id)objc_opt_self(), sel_whiteColor);
  UILabel.init(font:textColor:)(v4, (UIFont)v3, v12);
  *(_QWORD *)&v0[v1] = v5;
  v6 = OBJC_IVAR____TtC15ConversationKit42SystemApertureOngoingTelephonyControlsView_secondaryLabel;
  v7 = objc_msgSend(v2, sel_monospacedDigitSystemFontOfSize_weight_, 14.0, *MEMORY[0x1E0DC1448]);
  if (one-time initialization token for statusTextColor != -1)
    swift_once();
  v8 = (objc_class *)static SystemApertureOngoingTelephonyControlsView.Constants.statusTextColor;
  v9 = (id)static SystemApertureOngoingTelephonyControlsView.Constants.statusTextColor;
  v13.value.super.isa = v8;
  UILabel.init(font:textColor:)(v10, (UIFont)v7, v13);
  *(_QWORD *)&v0[v6] = v11;
  v0[OBJC_IVAR____TtC15ConversationKit42SystemApertureOngoingTelephonyControlsView_context] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit42SystemApertureOngoingTelephonyControlsView_cnkContentAlpha] = 0x3FF0000000000000;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

id SystemApertureOngoingTelephonyControlsView.controlsManager.getter()
{
  uint64_t v0;

  return objc_retain(*(id *)(v0
                           + OBJC_IVAR____TtC15ConversationKit42SystemApertureOngoingTelephonyControlsView_controlsManager));
}

uint64_t SystemApertureOngoingTelephonyControlsView.context.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC15ConversationKit42SystemApertureOngoingTelephonyControlsView_context);
}

id SystemApertureOngoingTelephonyControlsView.cnkContentAlpha.didset()
{
  char *v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  v1 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit42SystemApertureOngoingTelephonyControlsView_leadingView];
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v0, sel_alpha);
    objc_msgSend(v2, sel_setAlpha_);

  }
  v3 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit42SystemApertureOngoingTelephonyControlsView_secondaryLabel];
  objc_msgSend(v0, sel_alpha);
  objc_msgSend(v3, sel_setAlpha_);
  v4 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit42SystemApertureOngoingTelephonyControlsView_primaryLabel];
  objc_msgSend(v0, sel_alpha);
  objc_msgSend(v4, sel_setAlpha_);
  v5 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit42SystemApertureOngoingTelephonyControlsView_changeRouteButton];
  objc_msgSend(v0, sel_alpha);
  objc_msgSend(v5, sel_setAlpha_);
  v6 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit42SystemApertureOngoingTelephonyControlsView_hangUpButton];
  objc_msgSend(v0, sel_alpha);
  return objc_msgSend(v6, sel_setAlpha_);
}

double SystemApertureOngoingTelephonyControlsView.cnkContentAlpha.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit42SystemApertureOngoingTelephonyControlsView_cnkContentAlpha;
  OUTLINED_FUNCTION_2_0();
  return *(double *)v1;
}

id SystemApertureOngoingTelephonyControlsView.cnkContentAlpha.setter(double a1)
{
  uint64_t v1;
  double *v3;

  v3 = (double *)(v1 + OBJC_IVAR____TtC15ConversationKit42SystemApertureOngoingTelephonyControlsView_cnkContentAlpha);
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  return SystemApertureOngoingTelephonyControlsView.cnkContentAlpha.didset();
}

uint64_t (*SystemApertureOngoingTelephonyControlsView.cnkContentAlpha.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_2_0();
  return SystemApertureOngoingTelephonyControlsView.cnkContentAlpha.modify;
}

uint64_t SystemApertureOngoingTelephonyControlsView.cnkContentAlpha.modify(uint64_t a1, char a2)
{
  return SystemApertureOngoingTelephonyControlsView.cnkContentAlpha.modify(a1, a2, (uint64_t (*)(uint64_t))SystemApertureOngoingTelephonyControlsView.cnkContentAlpha.didset);
}

uint64_t key path setter for SystemApertureOngoingTelephonyControlsView.recipe : SystemApertureOngoingTelephonyControlsView(uint64_t a1, _QWORD **a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v4 = type metadata accessor for ConversationControlsRecipe();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of ConversationControlsRecipe(a1, (uint64_t)v6);
  return (*(uint64_t (**)(char *))((*MEMORY[0x1E0DEEDD8] & **a2) + 0xE8))(v6);
}

id SystemApertureOngoingTelephonyControlsView.recipe.didset()
{
  char *v0;
  char *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  char v13;
  char *v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  char v49;
  uint64_t v50[6];

  v1 = v0;
  swift_getObjectType();
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v2 = type metadata accessor for Logger();
  __swift_project_value_buffer(v2, (uint64_t)&static Logger.conversationControls);
  v3 = Logger.logObject.getter();
  v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v50[0] = v6;
    *(_DWORD *)v5 = 136446210;
    v7 = _typeName(_:qualified:)();
    v46 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v7, v8, v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v3, v4, "[%{public}s.recipe.didSet] Updating recipe on existing instance may not result in the expected experience.", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v6, -1, -1);
    MEMORY[0x1C3B751B8](v5, -1, -1);
  }

  v9 = (uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit42SystemApertureOngoingTelephonyControlsView_recipe];
  swift_beginAccess();
  outlined init with copy of ConversationControlsType(v9, (uint64_t)v50);
  v46 = 7;
  v47 = 0u;
  v48 = 0u;
  v49 = 6;
  static ConversationControlsType.== infix(_:_:)((uint64_t)v50);
  v11 = v10;
  outlined destroy of ConversationControlsType((uint64_t)&v46);
  outlined destroy of ConversationControlsType((uint64_t)v50);
  if ((v11 & 1) == 0)
  {
    outlined init with copy of ConversationControlsType(v9, (uint64_t)v50);
    v46 = 9;
    v47 = 0u;
    v48 = 0u;
    v49 = 6;
    static ConversationControlsType.== infix(_:_:)((uint64_t)v50);
    v13 = v12;
    outlined destroy of ConversationControlsType((uint64_t)&v46);
    outlined destroy of ConversationControlsType((uint64_t)v50);
    if ((v13 & 1) == 0)
    {
      v14 = v0;
      v15 = Logger.logObject.getter();
      v16 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v15, v16))
      {
        v17 = swift_slowAlloc();
        v45 = swift_slowAlloc();
        v46 = v45;
        *(_DWORD *)v17 = 136446466;
        v18 = _typeName(_:qualified:)();
        v50[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v18, v19, &v46);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v17 + 12) = 2080;
        outlined init with copy of ConversationControlsType(v9, (uint64_t)v50);
        v27 = specialized >> prefix<A>(_:)((uint64_t)v50, v20, v21, v22, v23, v24, v25, v26);
        v29 = v28;
        outlined destroy of ConversationControlsType?((uint64_t)v50);
        v50[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v27, v29, &v46);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BD004000, v15, v16, "[%{public}s.recipe.didSet] Applied invalid recipe type %s", (uint8_t *)v17, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1C3B751B8](v45, -1, -1);
        MEMORY[0x1C3B751B8](v17, -1, -1);

      }
      else
      {

      }
    }
  }
  v30 = *(_QWORD *)(v9 + 88);
  if (v30 >> 62)
  {
    swift_bridgeObjectRetain();
    v44 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v44)
      goto LABEL_15;
  }
  else if (!*(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_15;
  }
  v31 = Logger.logObject.getter();
  v32 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v31, v32))
  {
    v33 = (uint8_t *)swift_slowAlloc();
    v34 = swift_slowAlloc();
    v50[0] = v34;
    *(_DWORD *)v33 = 136446210;
    v35 = _typeName(_:qualified:)();
    v46 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v35, v36, v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v31, v32, "[%{public}s.recipe.didSet] Ignoring recipe subtitles which is currently unsupported per design.", v33, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v34, -1, -1);
    MEMORY[0x1C3B751B8](v33, -1, -1);
  }

LABEL_15:
  if (*(_QWORD *)(v9 + *(int *)(type metadata accessor for ConversationControlsRecipe() + 40)))
  {
    v37 = Logger.logObject.getter();
    v38 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = (uint8_t *)swift_slowAlloc();
      v40 = swift_slowAlloc();
      v50[0] = v40;
      *(_DWORD *)v39 = 136446210;
      v41 = _typeName(_:qualified:)();
      v46 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v41, v42, v50);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BD004000, v37, v38, "[%{public}s.recipe.didSet] Ignoring recipe subtitleLeadingBadge which is unsupported per design", v39, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v40, -1, -1);
      MEMORY[0x1C3B751B8](v39, -1, -1);
    }

  }
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC15ConversationKit42SystemApertureOngoingTelephonyControlsView_primaryLabel], sel_setAttributedText_, *(_QWORD *)(v9 + 80));
  SystemApertureOngoingTelephonyControlsView.updateLeadingView()();
  return objc_msgSend(v1, sel_setNeedsLayout);
}

uint64_t SystemApertureOngoingTelephonyControlsView.recipe.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15ConversationKit42SystemApertureOngoingTelephonyControlsView_recipe;
  OUTLINED_FUNCTION_2_0();
  return outlined init with copy of ConversationControlsRecipe(v3, a1);
}

uint64_t SystemApertureOngoingTelephonyControlsView.recipe.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15ConversationKit42SystemApertureOngoingTelephonyControlsView_recipe;
  OUTLINED_FUNCTION_2_0();
  outlined assign with copy of ConversationControlsRecipe(a1, v3);
  swift_endAccess();
  SystemApertureOngoingTelephonyControlsView.recipe.didset();
  return outlined destroy of ConversationControlsAction(a1, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
}

uint64_t (*SystemApertureOngoingTelephonyControlsView.recipe.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_2_0();
  return SystemApertureOngoingTelephonyControlsView.recipe.modify;
}

uint64_t SystemApertureOngoingTelephonyControlsView.recipe.modify(uint64_t a1, char a2)
{
  return SystemApertureOngoingTelephonyControlsView.cnkContentAlpha.modify(a1, a2, (uint64_t (*)(uint64_t))SystemApertureOngoingTelephonyControlsView.recipe.didset);
}

uint64_t SystemApertureOngoingTelephonyControlsView.cnkContentAlpha.modify(uint64_t a1, char a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    return a3(result);
  return result;
}

uint64_t SystemApertureOngoingTelephonyControlsView.systemAperturePreferredContentSize.getter()
{
  void *v0;
  id v1;
  void *v2;
  double v3;
  CGFloat v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  CGFloat Width;
  id v12;
  CGRect v14;

  v1 = objc_msgSend(v0, sel_window);
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, sel_frame);
    v4 = v3;
    v6 = v5;
    v8 = v7;
    v10 = v9;

    v14.origin.x = v4;
    v14.origin.y = v6;
    v14.size.width = v8;
    v14.size.height = v10;
    Width = CGRectGetWidth(v14);
  }
  else
  {
    Width = 1.79769313e308;
  }
  v12 = objc_msgSend(v0, sel_SBUISA_systemApertureLeadingConcentricContentLayoutGuide);
  objc_msgSend(v12, sel_layoutFrame);

  return *(_QWORD *)&Width;
}

Swift::Void __swiftcall SystemApertureOngoingTelephonyControlsView.layoutSubviews()()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  double v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  id v12;
  double v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  void *v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  void *v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  double MaxX;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double Width;
  void *v54;
  id v55;
  void *v56;
  double v57;
  double v58;
  double v59;
  double v60;
  void *v61;
  double v62;
  __int128 v63;
  double v64;
  uint64_t v65;
  void *v66;
  void *v67;
  CGFloat Height;
  NSObject *v69;
  double v70;
  double v71;
  double v72;
  os_log_type_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  double v79;
  double v80;
  os_log_type_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  void *v89;
  double v90;
  id v91;
  SEL v92;
  id v93;
  double MinX;
  double v95;
  double v96;
  id v97;
  SEL v98;
  os_log_type_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t inited;
  void *v105;
  _QWORD *v106;
  void *v107;
  id v108;
  id v109;
  id v110;
  id v111;
  id v112;
  id v113;
  id v114;
  id v115;
  id v116;
  id v117;
  id v118;
  void *v119;
  id v120;
  void *v121;
  id v122;
  void *v123;
  id v124;
  void *v125;
  id v126;
  void *v127;
  id v128;
  uint64_t v129;
  double v130;
  CGFloat v131;
  double v132;
  void *v133;
  CGFloat v134;
  void *v135;
  CGFloat v136;
  CGFloat v137;
  double v138;
  void *v139;
  void *v140;
  CGFloat v141;
  _QWORD *v142;
  unint64_t v143;
  objc_super v144;
  CGRect v145;
  CGRect v146;
  CGRect v147;
  CGRect v148;
  CGRect v149;
  CGRect v150;
  CGRect v151;
  CGRect v152;
  CGRect v153;
  CGRect v154;
  CGRect v155;
  CGRect v156;
  CGRect v157;
  CGRect v158;

  OUTLINED_FUNCTION_54_3();
  v1 = v0;
  OUTLINED_FUNCTION_15_6();
  v2 = OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_77();
  v6 = v5 - v4;
  v144.receiver = v0;
  v144.super_class = (Class)ObjC metadata update function for SystemApertureOngoingTelephonyControlsView();
  objc_msgSendSuper2(&v144, sel_layoutSubviews);
  if (one-time initialization token for leadingViewSize != -1)
    swift_once();
  v7 = *((double *)&static SystemApertureOngoingTelephonyControlsView.Constants.leadingViewSize + 1);
  v8 = *(double *)&static SystemApertureOngoingTelephonyControlsView.Constants.leadingViewSize;
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)v0) + 0xE0))();
  v9 = v6 + *(int *)(v2 + 68);
  v10 = *(id *)v9;
  v11 = *(_QWORD *)(v9 + 8);
  v12 = (id)*(unsigned __int8 *)(v9 + 16);
  outlined copy of LeadingViewType?(*(id *)v9, v11, *(_BYTE *)(v9 + 16));
  outlined destroy of ConversationControlsAction(v6, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
  if ((_DWORD)v12 != 255
    && (outlined consume of LeadingViewType?(v10, v11, v12), (v12 & 1) != 0))
  {
    if (one-time initialization token for brandedCallMargins != -1)
      swift_once();
    v13 = *(double *)&qword_1EF4FC6A8;
    v65 = OBJC_IVAR____TtC15ConversationKit42SystemApertureOngoingTelephonyControlsView_leadingView;
    v66 = *(void **)&v1[OBJC_IVAR____TtC15ConversationKit42SystemApertureOngoingTelephonyControlsView_leadingView];
    if (v66)
    {
      v12 = objc_msgSend(v66, sel_layer);
      objc_msgSend(v12, sel_setCornerRadius_, 12.0);

      v67 = *(void **)&v1[v65];
      if (v67)
      {
        v12 = objc_msgSend(v67, sel_layer);
        objc_msgSend(v12, sel_setMasksToBounds_, 1);

      }
    }
  }
  else
  {
    if (one-time initialization token for avatarMargins != -1)
      swift_once();
    v13 = *((double *)&static SystemApertureOngoingTelephonyControlsView.Constants.avatarMargins + 1);
  }
  objc_msgSend(v1, sel_bounds);
  v14 = (CGRectGetHeight(v145) - v7) * 0.5;
  v15 = OBJC_IVAR____TtC15ConversationKit42SystemApertureOngoingTelephonyControlsView_leadingView;
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC15ConversationKit42SystemApertureOngoingTelephonyControlsView_leadingView], sel_setFrame_, v13, v14, v8, v7);
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v16 = OUTLINED_FUNCTION_17_2();
  __swift_project_value_buffer(v16, (uint64_t)&static Logger.conversationControls);
  v17 = OUTLINED_FUNCTION_11_17();
  v18 = static os_log_type_t.debug.getter();
  v129 = v15;
  if (os_log_type_enabled(v17, v18))
  {
    v19 = OUTLINED_FUNCTION_105();
    v20 = OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_46_1(v20);
    *(_DWORD *)v19 = 136446466;
    v21 = OUTLINED_FUNCTION_7_10();
    v23 = OUTLINED_FUNCTION_29_8(v21, v22);
    OUTLINED_FUNCTION_6_22(v23);
    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 12) = 2080;
    type metadata accessor for CGRect(0);
    v24 = OUTLINED_FUNCTION_57_2();
    OUTLINED_FUNCTION_29_8(v24, v25);
    OUTLINED_FUNCTION_9_17();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_26_6(&dword_1BD004000, v17, v18, "[%{public}s][layout] leadingFrame is %s", (uint8_t *)v19);
    OUTLINED_FUNCTION_25_6();
    OUTLINED_FUNCTION_60();
  }

  if (one-time initialization token for actionDiameter != -1)
    swift_once();
  OUTLINED_FUNCTION_10_28();
  CGRectGetWidth(v146);
  if (one-time initialization token for actionMargins != -1)
    swift_once();
  OUTLINED_FUNCTION_10_28();
  CGRectGetHeight(v147);
  v26 = *(void **)&v1[OBJC_IVAR____TtC15ConversationKit42SystemApertureOngoingTelephonyControlsView_hangUpButton];
  OUTLINED_FUNCTION_23_10();
  OUTLINED_FUNCTION_39_11();
  v27 = Logger.logObject.getter();
  v28 = static os_log_type_t.debug.getter();
  v135 = v26;
  if (os_log_type_enabled(v27, v28))
  {
    v29 = OUTLINED_FUNCTION_105();
    v30 = OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_46_1(v30);
    *(_DWORD *)v29 = 136446466;
    v31 = OUTLINED_FUNCTION_7_10();
    v33 = OUTLINED_FUNCTION_29_8(v31, v32);
    OUTLINED_FUNCTION_6_22(v33);
    swift_bridgeObjectRelease();
    *(_WORD *)(v29 + 12) = 2080;
    OUTLINED_FUNCTION_27_6();
    v34 = String.init<A>(reflecting:)();
    OUTLINED_FUNCTION_29_8(v34, v35);
    OUTLINED_FUNCTION_9_17();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_26_6(&dword_1BD004000, v27, v28, "[%{public}s][layout] hangUpCenter is %s", (uint8_t *)v29);
    OUTLINED_FUNCTION_25_6();
    OUTLINED_FUNCTION_60();
  }

  if (one-time initialization token for interActionPadding != -1)
    swift_once();
  OUTLINED_FUNCTION_10_28();
  CGRectGetHeight(v148);
  v36 = *(void **)&v1[OBJC_IVAR____TtC15ConversationKit42SystemApertureOngoingTelephonyControlsView_changeRouteButton];
  OUTLINED_FUNCTION_23_10();
  OUTLINED_FUNCTION_39_11();
  Logger.logObject.getter();
  v37 = OUTLINED_FUNCTION_19_9();
  v133 = v36;
  if (OUTLINED_FUNCTION_4_11(v37))
  {
    v38 = OUTLINED_FUNCTION_105();
    v39 = OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_46_1(v39);
    *(_DWORD *)v38 = 136446466;
    v40 = OUTLINED_FUNCTION_7_10();
    v42 = OUTLINED_FUNCTION_29_8(v40, v41);
    OUTLINED_FUNCTION_6_22(v42);
    OUTLINED_FUNCTION_58_1();
    *(_WORD *)(v38 + 12) = 2080;
    OUTLINED_FUNCTION_27_6();
    v43 = OUTLINED_FUNCTION_57_2();
    OUTLINED_FUNCTION_29_8(v43, v44);
    OUTLINED_FUNCTION_9_17();
    OUTLINED_FUNCTION_58_1();
    OUTLINED_FUNCTION_14_16(&dword_1BD004000, v45, v46, "[%{public}s][layout] changeRouteCenter is %s");
    OUTLINED_FUNCTION_25_6();
    OUTLINED_FUNCTION_60();
  }

  v136 = v13;
  v149.origin.x = v13;
  v134 = v14;
  v149.origin.y = v14;
  v149.size.width = v8;
  v137 = v7;
  v149.size.height = v7;
  MaxX = CGRectGetMaxX(v149);
  if (one-time initialization token for avatarMargins != -1)
    swift_once();
  v48 = *((double *)&xmmword_1EF4FC690 + 1);
  v49 = *((double *)&static SystemApertureOngoingTelephonyControlsView.Constants.actionMargins + 1);
  v50 = *(double *)&static SystemApertureOngoingTelephonyControlsView.Constants.actionDiameter;
  v51 = *(double *)&static SystemApertureOngoingTelephonyControlsView.Constants.interActionPadding;
  v52 = *(double *)&qword_1EF4FC718;
  OUTLINED_FUNCTION_10_28();
  Width = CGRectGetWidth(v150);
  v54 = *(void **)&v1[OBJC_IVAR____TtC15ConversationKit42SystemApertureOngoingTelephonyControlsView_primaryLabel];
  v55 = objc_msgSend(v54, sel_font);
  if (v55)
  {
    v56 = v55;
    v57 = MaxX + v48;
    v58 = Width - (v52 + v50 + v49 + v50 + v51) - v57;
    objc_msgSend(v55, sel_lineHeight);
    v60 = v59;

    v61 = *(void **)&v1[OBJC_IVAR____TtC15ConversationKit42SystemApertureOngoingTelephonyControlsView_brandedIconView];
    v62 = 0.0;
    v131 = v8;
    if (v61)
    {
      if (one-time initialization token for iconSize != -1)
        swift_once();
      v63 = static BrandedIconView.Constants.iconSize;
      v130 = *((double *)&static BrandedIconView.Constants.iconSize + 1);
      if (*(double *)&static BrandedIconView.Constants.iconSize <= 0.0)
      {
        v64 = *(double *)&static BrandedIconView.Constants.iconSize;
      }
      else
      {
        if (one-time initialization token for brandedIconTrailingSpacer != -1)
          swift_once();
        v64 = *(double *)&v63;
        v62 = *(double *)&v63
            + *(double *)&static SystemApertureOngoingTelephonyControlsView.Constants.brandedIconTrailingSpacer;
      }
    }
    else
    {
      v64 = 0.0;
      v130 = 0.0;
    }
    v139 = v61;
    v140 = v54;
    OUTLINED_FUNCTION_10_28();
    Height = CGRectGetHeight(v151);
    v69 = *(NSObject **)&v1[OBJC_IVAR____TtC15ConversationKit42SystemApertureOngoingTelephonyControlsView_durationController];
    v70 = (*((double (**)(double, double))v69->isa + 28))(v58 - v62, Height - v60);
    v138 = v71;
    if (one-time initialization token for secondaryShortTextWidthThreshold != -1)
      swift_once();
    v72 = *(double *)&static SystemApertureOngoingTelephonyControlsView.Constants.secondaryShortTextWidthThreshold;
    OUTLINED_FUNCTION_55_1();
    v73 = OUTLINED_FUNCTION_19_9();
    if (OUTLINED_FUNCTION_17_6(v73))
    {
      v74 = OUTLINED_FUNCTION_105();
      v75 = OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_41_8(v75);
      *(_DWORD *)v74 = 136446722;
      v76 = OUTLINED_FUNCTION_7_10();
      v78 = OUTLINED_FUNCTION_24_5(v76, v77);
      OUTLINED_FUNCTION_46_1(v78);
      OUTLINED_FUNCTION_12_14();
      swift_bridgeObjectRelease();
      *(_WORD *)(v74 + 12) = 1024;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v74 + 18) = 2048;
      OUTLINED_FUNCTION_22_13();
      _os_log_impl(&dword_1BD004000, v69, (os_log_type_t)v27, "[%{public}s][layout] secondaryNextToSensor: %{BOOL}d, textWidth: %f", (uint8_t *)v74, 0x1Cu);
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_60();
    }

    v132 = v62 + v70;
    if (v62 + v70 >= v72)
    {
      if (one-time initialization token for textTopInset != -1)
        swift_once();
      v79 = *(double *)&static SystemApertureOngoingTelephonyControlsView.Constants.textTopInset;
    }
    else
    {
      OUTLINED_FUNCTION_10_28();
      v79 = (CGRectGetHeight(v152) - v138 - v60) * 0.5;
    }
    v141 = v79;
    v80 = v57 + v62;
    OUTLINED_FUNCTION_55_1();
    v81 = OUTLINED_FUNCTION_19_9();
    if (OUTLINED_FUNCTION_17_6(v81))
    {
      v82 = OUTLINED_FUNCTION_105();
      v83 = OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_41_8(v83);
      *(_DWORD *)v82 = 136446466;
      v84 = OUTLINED_FUNCTION_7_10();
      OUTLINED_FUNCTION_24_5(v84, v85);
      OUTLINED_FUNCTION_12_14();
      OUTLINED_FUNCTION_30_4();
      *(_WORD *)(v82 + 12) = 2080;
      v86 = CGRect.description.getter();
      v88 = OUTLINED_FUNCTION_24_5(v86, v87);
      OUTLINED_FUNCTION_46_1(v88);
      OUTLINED_FUNCTION_12_14();
      OUTLINED_FUNCTION_30_4();
      OUTLINED_FUNCTION_26_6(&dword_1BD004000, v69, (os_log_type_t)v27, "[%{public}s][layout] secondaryFrame: %s", (uint8_t *)v82);
      OUTLINED_FUNCTION_25_6();
      OUTLINED_FUNCTION_60();
    }

    v89 = *(void **)&v1[OBJC_IVAR____TtC15ConversationKit42SystemApertureOngoingTelephonyControlsView_secondaryLabel];
    v90 = OUTLINED_FUNCTION_32_9();
    objc_msgSend(v91, v92, v90);
    if (v139)
    {
      v93 = v139;
      objc_msgSend(v93, sel_setBounds_, 0.0, 0.0, v64, v130);
      v69 = v93;
      v153.origin.x = OUTLINED_FUNCTION_32_9();
      MinX = CGRectGetMinX(v153);
      if (one-time initialization token for brandedIconTrailingSpacer != -1)
        swift_once();
      v95 = MinX
          - *(double *)&static SystemApertureOngoingTelephonyControlsView.Constants.brandedIconTrailingSpacer
          + v64 * -0.5;
      objc_msgSend(v89, sel_center, v15);
      -[NSObject setCenter:](v69, sel_setCenter_, v95);

    }
    v154.origin.x = OUTLINED_FUNCTION_32_9();
    CGRectGetMaxY(v154);
    if (v139)
    {
      objc_msgSend(v139, sel_frame);
      CGRectGetMaxY(v155);
    }
    v96 = OUTLINED_FUNCTION_56_3();
    objc_msgSend(v97, v98, v96);
    v156.origin.x = v136;
    v156.origin.y = v134;
    v156.size.width = v131;
    v156.size.height = v137;
    CGRectGetMaxY(v156);
    v157.origin.x = OUTLINED_FUNCTION_56_3();
    CGRectGetMaxY(v157);
    if (v132 >= v72)
    {
      if (one-time initialization token for textBottomInset != -1)
        swift_once();
    }
    else
    {
      v158.origin.x = v80;
      v158.origin.y = v141;
      v158.size.width = v70;
      v158.size.height = v138;
      CGRectGetMinY(v158);
    }
    OUTLINED_FUNCTION_55_1();
    v99 = OUTLINED_FUNCTION_19_9();
    if (OUTLINED_FUNCTION_17_6(v99))
    {
      v100 = OUTLINED_FUNCTION_105();
      v101 = OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_41_8(v101);
      *(_DWORD *)v100 = 136446978;
      v102 = OUTLINED_FUNCTION_7_10();
      OUTLINED_FUNCTION_24_5(v102, v103);
      OUTLINED_FUNCTION_12_14();
      OUTLINED_FUNCTION_30_4();
      *(_WORD *)(v100 + 12) = 2048;
      OUTLINED_FUNCTION_22_13();
      *(_WORD *)(v100 + 22) = 2048;
      OUTLINED_FUNCTION_22_13();
      *(_WORD *)(v100 + 32) = 2048;
      OUTLINED_FUNCTION_22_13();
      _os_log_impl(&dword_1BD004000, v69, (os_log_type_t)v27, "[%{public}s][layout] avatarMaxY: %f, textMaxY: %f, %f", (uint8_t *)v100, 0x2Au);
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_60();
    }

    if (objc_msgSend(v1, sel_effectiveUserInterfaceLayoutDirection) == (id)1)
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UIView?>);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1BD6446F0;
      v105 = *(void **)&v1[v129];
      *(_QWORD *)(inited + 32) = v105;
      *(_QWORD *)(inited + 40) = v89;
      *(_QWORD *)(inited + 48) = v140;
      *(_QWORD *)(inited + 56) = v133;
      *(_QWORD *)(inited + 64) = v135;
      *(_QWORD *)(inited + 72) = v139;
      v142 = (_QWORD *)inited;
      specialized Array._endMutation()();
      v106 = v142;
      v143 = MEMORY[0x1E0DEE9D8];
      v107 = (void *)v106[4];
      if (v107)
      {
        v107;
        v108 = v139;
        v109 = v105;
        v110 = v89;
        v111 = v140;
        v112 = v133;
        MEMORY[0x1C3B7301C](v135);
        if (*(_QWORD *)((v143 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v143 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      else
      {
        v113 = v105;
        v114 = v89;
        v115 = v140;
        v116 = v133;
        v117 = v135;
        v118 = v139;
      }
      v119 = (void *)v106[5];
      if (v119)
      {
        v120 = v119;
        OUTLINED_FUNCTION_40();
      }
      v121 = (void *)v106[6];
      if (v121)
      {
        v122 = v121;
        OUTLINED_FUNCTION_40();
      }
      v123 = (void *)v106[7];
      if (v123)
      {
        v124 = v123;
        OUTLINED_FUNCTION_40();
      }
      v125 = (void *)v106[8];
      if (v125)
      {
        v126 = v125;
        OUTLINED_FUNCTION_40();
      }
      v127 = (void *)v106[9];
      if (v127)
      {
        v128 = v127;
        OUTLINED_FUNCTION_40();
      }
      swift_bridgeObjectRelease();
      specialized Sequence.forEach(_:)(v143, v1);
      swift_bridgeObjectRelease();
    }
    OUTLINED_FUNCTION_50_1();
  }
  else
  {
    __break(1u);
  }
}

uint64_t specialized Sequence.forEach(_:)(unint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  double Width;
  double v10;
  double v11;
  CGRect v13;

  if (a1 >> 62)
    goto LABEL_11;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; v4 = _CocoaArrayWrapper.endIndex.getter())
  {
    v5 = 4;
    while (1)
    {
      v6 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1C3B73D18](v5 - 4, a1) : *(id *)(a1 + 8 * v5);
      v7 = v6;
      v8 = v5 - 3;
      if (__OFADD__(v5 - 4, 1))
        break;
      objc_msgSend(a2, sel_bounds);
      Width = CGRectGetWidth(v13);
      objc_msgSend(v7, sel_center);
      v11 = Width - v10;
      objc_msgSend(v7, sel_center);
      objc_msgSend(v7, sel_setCenter_, v11);

      ++v5;
      if (v8 == v4)
        goto LABEL_9;
    }
    __break(1u);
LABEL_11:
    swift_bridgeObjectRetain();
  }
LABEL_9:

  return swift_bridgeObjectRelease();
}

{
  uint64_t v4;
  id v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v11;

  *(_QWORD *)(swift_allocObject() + 16) = a2;
  if (a1 >> 62)
    goto LABEL_11;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  v5 = a2;
  swift_bridgeObjectRetain();
  for (; v4; v4 = _CocoaArrayWrapper.endIndex.getter())
  {
    v6 = 4;
    while (1)
    {
      v7 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1C3B73D18](v6 - 4, a1) : *(id *)(a1 + 8 * v6);
      v8 = v7;
      v9 = v6 - 3;
      if (__OFADD__(v6 - 4, 1))
        break;
      objc_msgSend(a2, sel_addSublayer_, v7);

      ++v6;
      if (v9 == v4)
        goto LABEL_9;
    }
    __break(1u);
LABEL_11:
    v11 = a2;
    swift_bridgeObjectRetain();
  }
LABEL_9:
  swift_bridgeObjectRelease();

  return swift_release();
}

{
  char **v2;
  char **v3;
  objc_class *ObjectType;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  objc_super v13;
  char **v14;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType();
  if (a1 >> 62)
    goto LABEL_11;
  v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v7; v7 = _CocoaArrayWrapper.endIndex.getter())
  {
    v14 = v3;
    v8 = 4;
    v3 = &selRef_associatedAppBundleIdentifier;
    while (1)
    {
      v9 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1C3B73D18](v8 - 4, a1) : *(id *)(a1 + 8 * v8);
      v10 = v9;
      v11 = v8 - 3;
      if (__OFADD__(v8 - 4, 1))
        break;
      v13.receiver = a2;
      v13.super_class = ObjectType;
      objc_msgSendSuper2(&v13, sel_bounds);
      objc_msgSend(v10, sel_setBounds_);

      ++v8;
      if (v11 == v7)
        goto LABEL_12;
    }
    __break(1u);
LABEL_11:
    swift_bridgeObjectRetain();
  }
LABEL_12:

  return swift_bridgeObjectRelease();
}

{
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  double Width;
  double v10;
  double v11;
  double v12;
  double MinY;
  CGRect v15;
  CGRect v16;
  CGRect v17;

  if (a1 >> 62)
    goto LABEL_11;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; v4 = _CocoaArrayWrapper.endIndex.getter())
  {
    v5 = 4;
    while (1)
    {
      v6 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1C3B73D18](v5 - 4, a1) : *(id *)(a1 + 8 * v5);
      v7 = v6;
      v8 = v5 - 3;
      if (__OFADD__(v5 - 4, 1))
        break;
      objc_msgSend(a2, sel_bounds);
      Width = CGRectGetWidth(v15);
      objc_msgSend(v7, sel_frame);
      v11 = Width - v10;
      objc_msgSend(v7, sel_frame);
      v12 = v11 - CGRectGetMinX(v16);
      objc_msgSend(v7, sel_frame);
      MinY = CGRectGetMinY(v17);
      objc_msgSend(v7, sel_frame);
      objc_msgSend(v7, sel_setFrame_, v12, MinY);

      ++v5;
      if (v8 == v4)
        goto LABEL_9;
    }
    __break(1u);
LABEL_11:
    swift_bridgeObjectRetain();
  }
LABEL_9:

  return swift_bridgeObjectRelease();
}

CGSize __swiftcall SystemApertureOngoingTelephonyControlsView.sizeThatFits(_:)(CGSize a1)
{
  _QWORD *v1;
  _QWORD *v2;
  double v3;
  double v4;
  double v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  int v34;
  double *v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double v53;
  double v54;
  double v55;
  double v56;
  double v57;
  double v58;
  double v59;
  double v60;
  double v61;
  double v62;
  NSObject *v63;
  os_log_type_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  double v68;
  double v69;
  CGSize result;
  uint64_t v71;
  uint64_t v72;
  double v73;
  double v74;
  double v75;

  OUTLINED_FUNCTION_54_3();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  OUTLINED_FUNCTION_15_6();
  v7 = OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_77();
  v11 = v10 - v9;
  if (v4 <= 2.22507386e-308)
    v4 = 1.79769313e308;
  v74 = v6;
  v75 = v4;
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v12 = OUTLINED_FUNCTION_17_2();
  v13 = __swift_project_value_buffer(v12, (uint64_t)&static Logger.conversationControls);
  OUTLINED_FUNCTION_11_17();
  v14 = OUTLINED_FUNCTION_19_9();
  if (OUTLINED_FUNCTION_4_11(v14))
  {
    v15 = OUTLINED_FUNCTION_105();
    v71 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v15 = 136446466;
    v16 = OUTLINED_FUNCTION_7_10();
    v72 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v16, v17, &v71);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2080;
    v72 = *(_QWORD *)&v6;
    v73 = v4;
    type metadata accessor for CGSize(0);
    v18 = String.init<A>(reflecting:)();
    v72 = OUTLINED_FUNCTION_35_3(v18, v19);
    OUTLINED_FUNCTION_34_8();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_14_16(&dword_1BD004000, v20, v21, "[%{public}s][sizing] sizingThatFits %s");
    OUTLINED_FUNCTION_25_6();
    OUTLINED_FUNCTION_60();
  }

  if (one-time initialization token for actionDiameter != -1)
    swift_once();
  v22 = static SystemApertureOngoingTelephonyControlsView.Constants.actionDiameter;
  if (one-time initialization token for interActionPadding != -1)
  {
    swift_once();
    v22 = static SystemApertureOngoingTelephonyControlsView.Constants.actionDiameter;
  }
  Logger.logObject.getter();
  v23 = OUTLINED_FUNCTION_19_9();
  if (OUTLINED_FUNCTION_4_11(v23))
  {
    v24 = OUTLINED_FUNCTION_105();
    v71 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v24 = 136446466;
    v25 = OUTLINED_FUNCTION_7_10();
    OUTLINED_FUNCTION_35_3(v25, v26);
    OUTLINED_FUNCTION_34_8();
    OUTLINED_FUNCTION_58_1();
    *(_WORD *)(v24 + 12) = 2080;
    v73 = *(double *)&v22;
    type metadata accessor for CGSize(0);
    v27 = String.init<A>(reflecting:)();
    v72 = OUTLINED_FUNCTION_35_3(v27, v28);
    OUTLINED_FUNCTION_34_8();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_14_16(&dword_1BD004000, v29, v30, "[%{public}s][sizing] actionsSize is  %s");
    OUTLINED_FUNCTION_25_6();
    OUTLINED_FUNCTION_60();
  }

  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v1) + 0xE0))();
  v31 = v11 + *(int *)(v7 + 68);
  v32 = *(id *)v31;
  v33 = *(_QWORD *)(v31 + 8);
  v34 = *(unsigned __int8 *)(v31 + 16);
  outlined copy of LeadingViewType?(*(id *)v31, v33, *(_BYTE *)(v31 + 16));
  outlined destroy of ConversationControlsAction(v11, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
  if (v34 != 255 && (outlined consume of LeadingViewType?(v32, v33, v34), (v34 & 1) != 0))
  {
    if (one-time initialization token for brandedCallMargins != -1)
      swift_once();
    v35 = (double *)&qword_1EF4FC6A8;
  }
  else
  {
    if (one-time initialization token for avatarMargins != -1)
      swift_once();
    v35 = (double *)&static SystemApertureOngoingTelephonyControlsView.Constants.avatarMargins + 1;
  }
  v36 = *v35;
  if (one-time initialization token for leadingViewSize != -1)
    swift_once();
  v37 = *(double *)&static SystemApertureOngoingTelephonyControlsView.Constants.leadingViewSize;
  if (one-time initialization token for avatarMargins != -1)
    swift_once();
  v38 = v36 + v37;
  v39 = *((double *)&xmmword_1EF4FC690 + 1);
  if (one-time initialization token for actionMargins != -1)
    swift_once();
  v40 = v38 + v39;
  v41 = *(double *)&qword_1EF4FC718
      + *(double *)&static SystemApertureOngoingTelephonyControlsView.Constants.actionDiameter
      + *((double *)&static SystemApertureOngoingTelephonyControlsView.Constants.actionMargins + 1)
      + *(double *)&static SystemApertureOngoingTelephonyControlsView.Constants.actionDiameter
      + *(double *)&static SystemApertureOngoingTelephonyControlsView.Constants.interActionPadding;
  v42 = 0.0;
  if (*(_QWORD *)((char *)v2
                 + OBJC_IVAR____TtC15ConversationKit42SystemApertureOngoingTelephonyControlsView_brandedIconView))
  {
    if (one-time initialization token for iconSize != -1)
      swift_once();
    v44 = *((double *)&static BrandedIconView.Constants.iconSize + 1);
    v43 = *(double *)&static BrandedIconView.Constants.iconSize;
    if (*(double *)&static BrandedIconView.Constants.iconSize > 0.0)
    {
      if (one-time initialization token for brandedIconTrailingSpacer != -1)
        swift_once();
      v42 = v43 + *(double *)&static SystemApertureOngoingTelephonyControlsView.Constants.brandedIconTrailingSpacer;
    }
  }
  else
  {
    v44 = 0.0;
  }
  v45 = v6 - v41 - v40;
  OUTLINED_FUNCTION_2_0();
  objc_msgSend(*(id *)((char *)v2 + OBJC_IVAR____TtC15ConversationKit42SystemApertureOngoingTelephonyControlsView_primaryLabel), sel_sizeThatFits_, v45, v75);
  v47 = v46;
  objc_msgSend(*(id *)((char *)v2 + OBJC_IVAR____TtC15ConversationKit42SystemApertureOngoingTelephonyControlsView_secondaryLabel), sel_sizeThatFits_, v45 - v42, v75 - v46);
  if (v48 > v44)
    v49 = v48;
  else
    v49 = v44;
  v50 = v47 + v49;
  v51 = *(double *)&static SystemApertureOngoingTelephonyControlsView.Constants.avatarMargins;
  v52 = *((double *)&static SystemApertureOngoingTelephonyControlsView.Constants.leadingViewSize + 1);
  v53 = *(double *)&xmmword_1EF4FC690;
  v54 = *(double *)&static SystemApertureOngoingTelephonyControlsView.Constants.actionMargins;
  v55 = *(double *)&static SystemApertureOngoingTelephonyControlsView.Constants.actionDiameter;
  v56 = *(double *)&qword_1EF4FC710;
  if (one-time initialization token for textTopInset != -1)
    swift_once();
  v57 = v51 + v52;
  v58 = v54 + v55;
  v59 = v50 + *(double *)&static SystemApertureOngoingTelephonyControlsView.Constants.textTopInset;
  if (one-time initialization token for textBottomInset != -1)
    swift_once();
  v60 = v57 + v53;
  v61 = v58 + v56;
  v62 = v59 + *(double *)&static SystemApertureOngoingTelephonyControlsView.Constants.textBottomInset;
  if (one-time initialization token for minimumTextWidth != -1)
    swift_once();
  specialized max<A>(_:_:_:_:)(MEMORY[0x1E0DEE9D8], v60, v62, v61);
  v63 = v13;
  Logger.logObject.getter();
  v64 = OUTLINED_FUNCTION_19_9();
  if (OUTLINED_FUNCTION_51_3(v64))
  {
    v65 = OUTLINED_FUNCTION_105();
    v71 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v65 = 136446722;
    v66 = OUTLINED_FUNCTION_7_10();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v66, v67, &v71);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_30_4();
    *(_WORD *)(v65 + 12) = 2048;
    OUTLINED_FUNCTION_65_3();
    *(_WORD *)(v65 + 22) = 2048;
    OUTLINED_FUNCTION_65_3();
    _os_log_impl(&dword_1BD004000, v63, (os_log_type_t)v2, "[%{public}s][sizing] measuredWidth: %f, measuredHeight: %f", (uint8_t *)v65, 0x20u);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

  OUTLINED_FUNCTION_50_1();
  result.height = v69;
  result.width = v68;
  return result;
}

uint64_t specialized max<A>(_:_:_:_:)(uint64_t result, double a2, double a3, double a4)
{
  uint64_t v4;
  double *v5;
  double v6;
  double v7;

  if (a2 <= a3)
    a2 = a3;
  if (a2 <= a4)
    a2 = a4;
  v4 = *(_QWORD *)(result + 16);
  if (v4)
  {
    v5 = (double *)(result + 32);
    do
    {
      v6 = *v5++;
      v7 = v6;
      if (a2 <= v6)
        a2 = v7;
      --v4;
    }
    while (v4);
  }
  return result;
}

CGSize __swiftcall SystemApertureOngoingTelephonyControlsView.systemLayoutSizeFitting(_:withHorizontalFittingPriority:verticalFittingPriority:)(CGSize _, __C::UILayoutPriority withHorizontalFittingPriority, __C::UILayoutPriority verticalFittingPriority)
{
  void *v3;
  double v4;
  double v5;
  CGSize result;

  objc_msgSend(v3, sel_sizeThatFits_, _.width, _.height, *(double *)&withHorizontalFittingPriority.rawValue, *(double *)&verticalFittingPriority.rawValue);
  result.height = v5;
  result.width = v4;
  return result;
}

id SystemApertureOngoingTelephonyControlsView.intrinsicContentSize.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_sizeThatFits_, 1.79769313e308, 1.79769313e308);
}

void SystemApertureOngoingTelephonyControlsView.updateLeadingView()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  _DWORD *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  int v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;

  OUTLINED_FUNCTION_15_6();
  v2 = OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_16_2();
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v4 = OUTLINED_FUNCTION_17_2();
  v5 = __swift_project_value_buffer(v4, (uint64_t)&static Logger.conversationControls);
  OUTLINED_FUNCTION_11_17();
  v6 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_4_11(v6))
  {
    v7 = (_DWORD *)OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_105();
    *v7 = 136446210;
    v8 = OUTLINED_FUNCTION_7_10();
    v10 = OUTLINED_FUNCTION_45_5(v8, v9);
    OUTLINED_FUNCTION_61_0(v10);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_30_4();
    OUTLINED_FUNCTION_13_10(&dword_1BD004000, v11, v12, "[%{public}s] updateLeadingView");
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

  objc_msgSend(*(id *)((char *)v0 + OBJC_IVAR____TtC15ConversationKit42SystemApertureOngoingTelephonyControlsView_leadingView), sel_removeFromSuperview);
  SystemApertureOngoingTelephonyControlsView.leadingView.setter(0);
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
  v13 = v1 + *(int *)(v2 + 68);
  v15 = *(id *)v13;
  v14 = *(_QWORD *)(v13 + 8);
  v16 = *(unsigned __int8 *)(v13 + 16);
  outlined copy of LeadingViewType?(*(id *)v13, v14, *(_BYTE *)(v13 + 16));
  outlined destroy of ConversationControlsAction(v1, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
  if (v16 == 255)
  {
    Logger.logObject.getter();
    v17 = OUTLINED_FUNCTION_12_0();
    if (OUTLINED_FUNCTION_51_3(v17))
    {
      v18 = (uint8_t *)OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_105();
      *(_DWORD *)v18 = 136446210;
      v19 = OUTLINED_FUNCTION_7_10();
      v21 = OUTLINED_FUNCTION_45_5(v19, v20);
      OUTLINED_FUNCTION_44_3(v21);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BD004000, v5, (os_log_type_t)v1, "[%{public}s] omitting leading view", v18, 0xCu);
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_60();
    }

  }
  else
  {
    if ((v16 & 1) != 0)
      SystemApertureOngoingTelephonyControlsView.updateBrandedImageIcon(using:)((uint64_t)v15);
    else
      SystemApertureOngoingTelephonyControlsView.updateAvatarView(using:)(v15);
    outlined consume of LeadingViewType?(v15, v14, v16);
  }
  OUTLINED_FUNCTION_52_1();
}

void SystemApertureOngoingTelephonyControlsView.updateAvatarView(using:)(void *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  os_log_type_t v5;
  _DWORD *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;

  OUTLINED_FUNCTION_15_6();
  OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_16_2();
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v4 = OUTLINED_FUNCTION_17_2();
  __swift_project_value_buffer(v4, (uint64_t)&static Logger.conversationControls);
  OUTLINED_FUNCTION_11_17();
  v5 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_4_11(v5))
  {
    v6 = (_DWORD *)OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_105();
    *v6 = 136446210;
    v7 = OUTLINED_FUNCTION_7_10();
    v9 = OUTLINED_FUNCTION_45_5(v7, v8);
    OUTLINED_FUNCTION_44_3(v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_13_10(&dword_1BD004000, v10, v11, "[%{public}s] showing avatar");
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

  v12 = a1;
  SystemApertureOngoingTelephonyControlsView.leadingView.setter((uint64_t)a1);
  v13 = objc_msgSend(v12, sel_layer);
  OUTLINED_FUNCTION_43_8(*v1);
  OUTLINED_FUNCTION_20_16();
  OUTLINED_FUNCTION_48_1(v13, sel_setAllowsHitTesting_);

  OUTLINED_FUNCTION_59_8();
  OUTLINED_FUNCTION_20_16();
  OUTLINED_FUNCTION_48_1(v12, sel_setUserInteractionEnabled_);
  objc_msgSend(v1, sel_addSubview_, v12);
  objc_msgSend(v1, sel_setNeedsLayout);
  OUTLINED_FUNCTION_52_1();
}

void SystemApertureOngoingTelephonyControlsView.updateBrandedImageIcon(using:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  os_log_type_t v6;
  _DWORD *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;

  v2 = v1;
  OUTLINED_FUNCTION_15_6();
  OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_16_2();
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v5 = OUTLINED_FUNCTION_17_2();
  __swift_project_value_buffer(v5, (uint64_t)&static Logger.conversationControls);
  OUTLINED_FUNCTION_11_17();
  v6 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_4_11(v6))
  {
    v7 = (_DWORD *)OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_105();
    *v7 = 136446210;
    v8 = OUTLINED_FUNCTION_7_10();
    v10 = OUTLINED_FUNCTION_45_5(v8, v9);
    OUTLINED_FUNCTION_61_0(v10);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_30_4();
    OUTLINED_FUNCTION_13_10(&dword_1BD004000, v11, v12, "[%{public}s] showing branded calling image");
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

  v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_initWithImage_, a1);
  v14 = v13;
  SystemApertureOngoingTelephonyControlsView.leadingView.setter((uint64_t)v13);
  v15 = objc_msgSend(v14, sel_layer);
  OUTLINED_FUNCTION_43_8(*v2);
  OUTLINED_FUNCTION_20_16();
  OUTLINED_FUNCTION_48_1(v15, sel_setAllowsHitTesting_);

  OUTLINED_FUNCTION_59_8();
  OUTLINED_FUNCTION_20_16();
  OUTLINED_FUNCTION_48_1(v14, sel_setUserInteractionEnabled_);
  objc_msgSend(v2, sel_addSubview_, v14);
  objc_msgSend(v2, sel_setNeedsLayout);

  OUTLINED_FUNCTION_52_1();
}

id SystemApertureOngoingTelephonyControlsView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

void SystemApertureOngoingTelephonyControlsView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id SystemApertureOngoingTelephonyControlsView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)ObjC metadata update function for SystemApertureOngoingTelephonyControlsView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t protocol witness for ControlsView.cnkContentAlpha.getter in conformance SystemApertureOngoingTelephonyControlsView()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t protocol witness for ControlsView.cnkContentAlpha.setter in conformance SystemApertureOngoingTelephonyControlsView()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t (*protocol witness for ControlsView.cnkContentAlpha.modify in conformance SystemApertureOngoingTelephonyControlsView(_QWORD *a1))()
{
  _QWORD *v1;
  _QWORD *v3;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v1) + 0xD8))();
  return protocol witness for ControlsView.cnkContentAlpha.modify in conformance SystemApertureOngoingTelephonyControlsView;
}

uint64_t protocol witness for ControlsView.recipe.getter in conformance SystemApertureOngoingTelephonyControlsView()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

uint64_t protocol witness for ControlsView.recipe.setter in conformance SystemApertureOngoingTelephonyControlsView()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE8))();
}

uint64_t (*protocol witness for ControlsView.recipe.modify in conformance SystemApertureOngoingTelephonyControlsView(_QWORD *a1))()
{
  _QWORD *v1;
  _QWORD *v3;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v1) + 0xF0))();
  return protocol witness for ControlsView.cnkContentAlpha.modify in conformance SystemApertureOngoingTelephonyControlsView;
}

void protocol witness for ControlsView.cnkContentAlpha.modify in conformance SystemApertureOngoingTelephonyControlsView(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t protocol witness for SystemAperturePreferredContentSizeProvider.systemAperturePreferredContentSize.getter in conformance SystemApertureOngoingTelephonyControlsView()
{
  _QWORD **v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **v0) + 0xF8))();
}

uint64_t specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(uint64_t a1)
{
  return specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(a1, (uint64_t (*)(BOOL))specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:));
}

{
  return specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(a1, (uint64_t (*)(BOOL))specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:));
}

{
  return specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(a1, (uint64_t (*)(BOOL))specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:));
}

{
  return specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(a1, (uint64_t (*)(BOOL))specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:));
}

{
  return specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(a1, (uint64_t (*)(BOOL))specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:));
}

{
  return specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(a1, (uint64_t (*)(BOOL))specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:));
}

{
  return specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(a1, (uint64_t (*)(BOOL))specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:));
}

{
  return specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(a1, (uint64_t (*)(BOOL))specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:));
}

{
  return specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(a1, (uint64_t (*)(BOOL))specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:));
}

{
  return specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(a1, (uint64_t (*)(BOOL))specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:));
}

uint64_t specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(uint64_t result)
{
  _QWORD *v1;

  if (result + 1 > *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFF8) + 0x18) >> 1)
    return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  return result;
}

uint64_t specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(uint64_t result, uint64_t (*a2)(BOOL))
{
  uint64_t v2;
  unint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)v2 + 24);
  if (result + 1 > (uint64_t)(v3 >> 1))
  {
    result = a2(v3 > 1);
    *(_QWORD *)v2 = result;
  }
  return result;
}

void outlined bridged method (mbgnn) of @objc NSObject.accessibilityLabel.setter(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;

  v4 = (id)MEMORY[0x1C3B72E00]();
  objc_msgSend(a3, sel_setAccessibilityLabel_, v4);

}

uint64_t type metadata accessor for SystemApertureOngoingTelephonyControlsView()
{
  uint64_t result;

  result = type metadata singleton initialization cache for SystemApertureOngoingTelephonyControlsView;
  if (!type metadata singleton initialization cache for SystemApertureOngoingTelephonyControlsView)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t outlined destroy of ConversationControlsAction(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t outlined assign with copy of ConversationControlsRecipe(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ConversationControlsRecipe();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

id outlined copy of LeadingViewType?(id result, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255)
    return outlined copy of PreCallControlsContext(result);
  return result;
}

void outlined consume of LeadingViewType?(id a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255)
    outlined consume of PreCallControlsContext(a1);
}

void sub_1BD059C7C(_QWORD **a1@<X0>, double *a2@<X8>)
{
  *a2 = (*(double (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0xC8))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD059CB8(double *a1, _QWORD **a2)
{
  (*(void (**)(double))((*MEMORY[0x1E0DEEDD8] & **a2) + 0xD0))(*a1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD059CF0(_QWORD **a1)
{
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0xE0))();
  OUTLINED_FUNCTION_0();
}

ValueMetadata *type metadata accessor for SystemApertureConstants()
{
  return &type metadata for SystemApertureConstants;
}

uint64_t type metadata completion function for SystemApertureOngoingTelephonyControlsView()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ConversationControlsRecipe();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for SystemApertureOngoingTelephonyControlsView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SystemApertureOngoingTelephonyControlsView.__allocating_init(recipe:controlsManager:menuHostViewController:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t dispatch thunk of SystemApertureOngoingTelephonyControlsView.cnkContentAlpha.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of SystemApertureOngoingTelephonyControlsView.cnkContentAlpha.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of SystemApertureOngoingTelephonyControlsView.cnkContentAlpha.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of SystemApertureOngoingTelephonyControlsView.recipe.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of SystemApertureOngoingTelephonyControlsView.recipe.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of SystemApertureOngoingTelephonyControlsView.recipe.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of SystemApertureOngoingTelephonyControlsView.systemAperturePreferredContentSize.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8))();
}

ValueMetadata *type metadata accessor for SystemApertureOngoingTelephonyControlsView.Constants()
{
  return &type metadata for SystemApertureOngoingTelephonyControlsView.Constants;
}

uint64_t outlined destroy of ConversationControlsType?(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConversationControlsType?);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id OUTLINED_FUNCTION_39_11()
{
  void *v0;
  uint64_t v1;
  double v2;
  double v3;

  return objc_msgSend(v0, (SEL)(v1 + 1480), v2, v3);
}

id ShareCardStatusHeaderView.controlsManager.getter()
{
  id *v0;

  return *v0;
}

void ShareCardStatusHeaderView.controlsManager.setter(void *a1)
{
  id *v1;

  *v1 = a1;
  OUTLINED_FUNCTION_0();
}

uint64_t (*ShareCardStatusHeaderView.controlsManager.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ShareCardStatusHeaderView.shouldHideDefaultStatusView.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t ShareCardStatusHeaderView.shouldHideDefaultStatusView.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 8) = result;
  return result;
}

uint64_t (*ShareCardStatusHeaderView.shouldHideDefaultStatusView.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void ShareCardStatusHeaderView.body.getter(uint64_t a1@<X8>)
{
  void **v1;
  void **v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  void (**v35)();
  uint64_t v36;
  uint64_t v37;
  void (**v38)();
  uint64_t v39;
  void **v40;
  uint64_t v41;
  uint64_t v42;

  v2 = v1;
  v42 = a1;
  v3 = type metadata accessor for ShareCardStatusHeaderView(0);
  v41 = *(_QWORD *)(v3 - 8);
  v4 = *(_QWORD *)(v41 + 64);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_77();
  v9 = (uint64_t *)(v8 - v7);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>, _PaddingLayout>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_77();
  v14 = v13 - v12;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SubscriptionView<PassthroughSubject<(), Never>, ModifiedContent<ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>, _PaddingLayout>>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_77();
  v19 = v18 - v17;
  *v9 = static Alignment.center.getter();
  v9[1] = v20;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_ZStackLayout, ModifiedContent<ConversationStatusView, _PaddingLayout>?>);
  closure #1 in ShareCardStatusHeaderView.body.getter(v2, (uint64_t)v9 + *(int *)(v21 + 44));
  v22 = static Edge.Set.top.getter();
  EdgeInsets.init(_all:)();
  v24 = v23;
  v26 = v25;
  v28 = v27;
  v30 = v29;
  outlined init with copy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v9, v14, &demangling cache variable for type metadata for ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>);
  v31 = v14 + *(int *)(v10 + 36);
  *(_BYTE *)v31 = v22;
  *(_QWORD *)(v31 + 8) = v24;
  *(_QWORD *)(v31 + 16) = v26;
  *(_QWORD *)(v31 + 24) = v28;
  *(_QWORD *)(v31 + 32) = v30;
  *(_BYTE *)(v31 + 40) = 0;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v9, &demangling cache variable for type metadata for ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>);
  v40 = v2;
  v32 = *(_QWORD *)((char *)*v2
                  + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_conversationDidChangePublisher);
  outlined init with copy of ShareCardStatusHeaderView((uint64_t)v2, (uint64_t)v5, type metadata accessor for ShareCardStatusHeaderView);
  v33 = (*(unsigned __int8 *)(v41 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
  v34 = OUTLINED_FUNCTION_13_18();
  outlined init with take of ShareCardStatusHeaderView((uint64_t)v5, v34 + v33, type metadata accessor for ShareCardStatusHeaderView);
  outlined init with copy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v14, v19, &demangling cache variable for type metadata for ModifiedContent<ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>, _PaddingLayout>);
  *(_QWORD *)(v19 + *(int *)(v15 + 52)) = v32;
  v35 = (void (**)())(v19 + *(int *)(v15 + 56));
  *v35 = partial apply for closure #2 in ShareCardStatusHeaderView.body.getter;
  v35[1] = (void (*)())v34;
  swift_retain();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v14, &demangling cache variable for type metadata for ModifiedContent<ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>, _PaddingLayout>);
  outlined init with copy of ShareCardStatusHeaderView((uint64_t)v40, (uint64_t)v5, type metadata accessor for ShareCardStatusHeaderView);
  v36 = OUTLINED_FUNCTION_13_18();
  outlined init with take of ShareCardStatusHeaderView((uint64_t)v5, v36 + v33, type metadata accessor for ShareCardStatusHeaderView);
  v37 = v42;
  outlined init with copy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v19, v42, &demangling cache variable for type metadata for SubscriptionView<PassthroughSubject<(), Never>, ModifiedContent<ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>, _PaddingLayout>>);
  v38 = (void (**)())(v37
                    + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<SubscriptionView<PassthroughSubject<(), Never>, ModifiedContent<ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>, _PaddingLayout>>, _AppearanceActionModifier>)
                             + 36));
  *v38 = partial apply for closure #2 in ShareCardStatusHeaderView.body.getter;
  v38[1] = (void (*)())v36;
  v38[2] = 0;
  v38[3] = 0;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v19, &demangling cache variable for type metadata for SubscriptionView<PassthroughSubject<(), Never>, ModifiedContent<ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>, _PaddingLayout>>);
}

uint64_t type metadata accessor for ShareCardStatusHeaderView(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for ShareCardStatusHeaderView);
}

uint64_t closure #1 in ShareCardStatusHeaderView.body.getter@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v29;

  v4 = type metadata accessor for ConversationStatusView(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (uint64_t *)((char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ConversationStatusView, _PaddingLayout>);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ConversationControlsRecipe();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ShareCardStatusHeaderView(0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<ConversationControlsRecipe?>);
  State.wrappedValue.getter();
  if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v12, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
    v16 = 1;
  }
  else
  {
    outlined init with take of ShareCardStatusHeaderView((uint64_t)v12, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
    v17 = *a1;
    outlined init with copy of ShareCardStatusHeaderView((uint64_t)v15, (uint64_t)v6 + *(int *)(v4 + 20), (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
    *v6 = v17;
    v18 = v17;
    LOBYTE(v17) = static Edge.Set.bottom.getter();
    EdgeInsets.init(_all:)();
    v20 = v19;
    v22 = v21;
    v24 = v23;
    v26 = v25;
    outlined init with copy of ShareCardStatusHeaderView((uint64_t)v6, (uint64_t)v9, type metadata accessor for ConversationStatusView);
    v27 = &v9[*(int *)(v7 + 36)];
    *v27 = (char)v17;
    *((_QWORD *)v27 + 1) = v20;
    *((_QWORD *)v27 + 2) = v22;
    *((_QWORD *)v27 + 3) = v24;
    *((_QWORD *)v27 + 4) = v26;
    v27[40] = 0;
    outlined destroy of AccountUpdateNotice((uint64_t)v6, type metadata accessor for ConversationStatusView);
    outlined destroy of AccountUpdateNotice((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
    outlined init with take of ModifiedContent<ConversationStatusView, _PaddingLayout>((uint64_t)v9, a2);
    v16 = 0;
  }
  return __swift_storeEnumTagSinglePayload(a2, v16, 1, v7);
}

void partial apply for closure #2 in ShareCardStatusHeaderView.body.getter()
{
  type metadata accessor for ShareCardStatusHeaderView(0);
  OUTLINED_FUNCTION_2_34();
  OUTLINED_FUNCTION_0();
}

void ShareCardStatusHeaderView.updateRecipe()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  int EnumTagSinglePayload;
  char v16;
  _BYTE v17[40];
  char v18;

  v1 = v0;
  v2 = type metadata accessor for ShareCardStatusHeaderView(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = &v17[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = MEMORY[0x1E0C80A78](v6);
  v11 = &v17[-v10];
  MEMORY[0x1E0C80A78](v9);
  v13 = &v17[-v12];
  if (one-time initialization token for shared != -1)
    swift_once();
  *(_QWORD *)v17 = 12;
  memset(&v17[8], 0, 32);
  v18 = 6;
  (*(void (**)(_QWORD, _BYTE *, _QWORD))(*(_QWORD *)static ConversationControlsRecipeGenerator.shared + 96))(0, v17, *v0);
  outlined destroy of ConversationControlsType((uint64_t)v17);
  outlined init with copy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v13, (uint64_t)v11, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<ConversationControlsRecipe?>);
  State.wrappedValue.setter();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v13, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  State.wrappedValue.getter();
  v14 = type metadata accessor for ConversationControlsRecipe();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v14);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v8, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  outlined init with copy of ShareCardStatusHeaderView((uint64_t)v1, (uint64_t)v4, type metadata accessor for ShareCardStatusHeaderView);
  if (EnumTagSinglePayload == 1)
  {
    v16 = v4[8];
    outlined destroy of AccountUpdateNotice((uint64_t)v4, type metadata accessor for ShareCardStatusHeaderView);
    if ((v16 & 1) == 0)
    {
      memset(v17, 0, sizeof(v17));
      v18 = 6;
      (*(void (**)(_QWORD, _BYTE *, _QWORD))(*(_QWORD *)static ConversationControlsRecipeGenerator.shared
                                                      + 96))(0, v17, *v1);
      outlined destroy of ConversationControlsType((uint64_t)v17);
      outlined init with copy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v13, (uint64_t)v11, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
      State.wrappedValue.setter();
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v13, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
    }
  }
  else
  {
    outlined destroy of AccountUpdateNotice((uint64_t)v4, type metadata accessor for ShareCardStatusHeaderView);
  }
}

uint64_t objectdestroyTm_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id *v9;
  uint64_t v10;
  uint64_t v11;
  id *v12;

  v1 = type metadata accessor for ShareCardStatusHeaderView(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 16) & ~v2;

  v4 = v0 + v3 + *(int *)(v1 + 24);
  v5 = (int *)OUTLINED_FUNCTION_28_1();
  if (!__swift_getEnumTagSinglePayload(v4, 1, (uint64_t)v5))
  {
    switch(*(_BYTE *)(v4 + 40))
    {
      case 0:
        __swift_destroy_boxed_opaque_existential_1(v4);
        break;
      case 1:
      case 3:
        swift_bridgeObjectRelease();
        break;
      case 2:

        break;
      case 5:
        swift_unknownObjectRelease();
        break;
      default:
        break;
    }

    v6 = *(void **)(v4 + 56);
    if (v6)
    {

    }
    swift_bridgeObjectRelease();
    v7 = v4 + v5[9];
    v8 = type metadata accessor for AttributedString();
    if (!__swift_getEnumTagSinglePayload(v7, 1, v8))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
    v9 = (id *)(v4 + v5[10]);
    if (*v9)
    {

    }
    v10 = v4 + v5[15];
    if (*(unsigned __int8 *)(v10 + 40) <= 0xFDu)
      outlined consume of ConversationControlsRecipe.Actions(*(_QWORD *)v10, *(_QWORD *)(v10 + 8), *(_QWORD *)(v10 + 16), *(_QWORD *)(v10 + 24), *(_QWORD *)(v10 + 32));
    v11 = v4 + v5[17];
    if (*(unsigned __int8 *)(v11 + 16) != 255)
      outlined consume of PreCallControlsContext(*(id *)v11);
    v12 = (id *)(v4 + v5[18]);
    if (*v12 != (id)1)
    {

    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<ConversationControlsRecipe?>);
  swift_release();
  return swift_deallocObject();
}

void ShareCardStatusHeaderView.init(controlsManager:shouldHideDefaultStatusView:)(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  OUTLINED_FUNCTION_1_1();
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v13 - v10;
  *(_QWORD *)a3 = a1;
  *(_BYTE *)(a3 + 8) = a2;
  type metadata accessor for ShareCardStatusHeaderView(0);
  v12 = OUTLINED_FUNCTION_28_1();
  __swift_storeEnumTagSinglePayload((uint64_t)v11, 1, 1, v12);
  outlined init with copy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v11, (uint64_t)v9, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  State.init(wrappedValue:)();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v11, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
}

void outlined init with copy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a3);
  OUTLINED_FUNCTION_5(v3);
  OUTLINED_FUNCTION_0();
}

uint64_t associated type witness table accessor for View.Body : View in ShareCardStatusHeaderView()
{
  return swift_getOpaqueTypeConformance2();
}

char *initializeBufferWithCopyOfBuffer for ShareCardStatusHeaderView(char *a1, char **a2, uint64_t a3)
{
  int v3;
  char *v4;
  char *v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  int *v9;
  char *v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  char v14;
  void *v15;
  id v16;
  uint64_t v17;
  __int128 v18;
  void *v19;
  void *v20;
  id v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  void *v37;
  uint64_t v38;
  void *v39;
  id v40;
  id v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  int v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  void *v61;
  uint64_t v62;
  id v63;
  id v64;
  id v65;
  id v66;
  uint64_t v67;
  __int128 v69;
  __int128 v70;
  uint64_t v71;
  __int128 v72;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = &v4[(v3 + 16) & ~(unint64_t)v3];
  }
  else
  {
    v5 = a1;
    a1[8] = *((_BYTE *)a2 + 8);
    v6 = *(int *)(a3 + 24);
    v7 = &a1[v6];
    v8 = (char **)((char *)a2 + v6);
    v9 = (int *)type metadata accessor for ConversationControlsRecipe();
    v10 = v4;
    if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, (uint64_t)v9))
    {
      v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      switch(*((_BYTE *)v8 + 40))
      {
        case 0:
          v12 = *(_OWORD *)(v8 + 3);
          *(_OWORD *)(v7 + 24) = v12;
          (**(void (***)(char *, _QWORD *))(v12 - 8))(v7, v8);
          v7[40] = 0;
          break;
        case 1:
          v13 = v8[1];
          *(_QWORD *)v7 = *v8;
          *((_QWORD *)v7 + 1) = v13;
          v14 = 1;
          goto LABEL_10;
        case 2:
          v15 = (void *)*v8;
          *(_QWORD *)v7 = *v8;
          v7[40] = 2;
          v16 = v15;
          break;
        case 3:
          v17 = v8[1];
          *(_QWORD *)v7 = *v8;
          *((_QWORD *)v7 + 1) = v17;
          v14 = 3;
LABEL_10:
          v7[40] = v14;
          swift_bridgeObjectRetain();
          break;
        case 5:
          *(_OWORD *)v7 = *(_OWORD *)v8;
          v7[40] = 5;
          swift_unknownObjectRetain();
          break;
        default:
          v18 = *((_OWORD *)v8 + 1);
          *(_OWORD *)v7 = *(_OWORD *)v8;
          *((_OWORD *)v7 + 1) = v18;
          *(_OWORD *)(v7 + 25) = *(_OWORD *)((char *)v8 + 25);
          break;
      }
      v19 = (void *)v8[7];
      v20 = (void *)v8[6];
      *((_QWORD *)v7 + 6) = v20;
      v21 = v20;
      if (v19)
      {
        v23 = (void *)v8[8];
        v22 = v8[9];
        *((_QWORD *)v7 + 7) = v19;
        *((_QWORD *)v7 + 8) = v23;
        *((_QWORD *)v7 + 9) = v22;
        v24 = v19;
        v25 = v23;
      }
      else
      {
        *(_OWORD *)(v7 + 56) = *(_OWORD *)(v8 + 7);
        *((_QWORD *)v7 + 9) = v8[9];
      }
      v27 = (void *)v8[10];
      v26 = v8[11];
      *((_QWORD *)v7 + 10) = v27;
      *((_QWORD *)v7 + 11) = v26;
      v28 = v9[9];
      v29 = &v7[v28];
      v30 = (char *)v8 + v28;
      v31 = type metadata accessor for AttributedString();
      v32 = v27;
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v30, 1, v31))
      {
        v33 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
        memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
        __swift_storeEnumTagSinglePayload((uint64_t)v29, 0, 1, v31);
      }
      v34 = v9[10];
      v35 = &v7[v34];
      v36 = (char *)v8 + v34;
      v37 = *(void **)v36;
      if (*(_QWORD *)v36)
      {
        v39 = (void *)*((_QWORD *)v36 + 1);
        v38 = *((_QWORD *)v36 + 2);
        *(_QWORD *)v35 = v37;
        *((_QWORD *)v35 + 1) = v39;
        *((_QWORD *)v35 + 2) = v38;
        v40 = v37;
        v41 = v39;
      }
      else
      {
        *(_OWORD *)v35 = *(_OWORD *)v36;
        *((_QWORD *)v35 + 2) = *((_QWORD *)v36 + 2);
      }
      v7[v9[11]] = *((_BYTE *)v8 + v9[11]);
      v7[v9[12]] = *((_BYTE *)v8 + v9[12]);
      *(_QWORD *)&v7[v9[13]] = *(_QWORD *)((char *)v8 + v9[13]);
      *(_QWORD *)&v7[v9[14]] = *(_QWORD *)((char *)v8 + v9[14]);
      v42 = v9[15];
      v43 = &v7[v42];
      v44 = (char *)v8 + v42;
      v45 = v44[40];
      if (v45 <= 0xFD)
      {
        v47 = *((_QWORD *)v44 + 1);
        v71 = *(_QWORD *)v44;
        v48 = *((_QWORD *)v44 + 2);
        v49 = *((_QWORD *)v44 + 3);
        v50 = *((_QWORD *)v44 + 4);
        outlined copy of ConversationControlsRecipe.Actions(*(_QWORD *)v44, v47, v48, v49, v50, v45);
        *(_QWORD *)v43 = v71;
        *((_QWORD *)v43 + 1) = v47;
        *((_QWORD *)v43 + 2) = v48;
        *((_QWORD *)v43 + 3) = v49;
        *((_QWORD *)v43 + 4) = v50;
        v43[40] = v45;
      }
      else
      {
        v46 = *((_OWORD *)v44 + 1);
        *(_OWORD *)v43 = *(_OWORD *)v44;
        *((_OWORD *)v43 + 1) = v46;
        *(_OWORD *)(v43 + 25) = *(_OWORD *)(v44 + 25);
      }
      v7[v9[16]] = *((_BYTE *)v8 + v9[16]);
      v51 = v9[17];
      v52 = &v7[v51];
      v53 = (char *)v8 + v51;
      v54 = v53[16];
      if (v54 == 255)
      {
        *(_OWORD *)v52 = *(_OWORD *)v53;
        v52[16] = v53[16];
      }
      else
      {
        v55 = v54 & 1;
        v56 = *(_QWORD *)v53;
        v57 = *((_QWORD *)v53 + 1);
        outlined copy of PreCallControlsContext(*(id *)v53);
        *(_QWORD *)v52 = v56;
        *((_QWORD *)v52 + 1) = v57;
        v52[16] = v55;
      }
      v58 = v9[18];
      v59 = &v7[v58];
      v60 = (char *)v8 + v58;
      v61 = *(void **)((char *)v8 + v58);
      if (v61 == (void *)1)
      {
        memcpy(v59, v60, 0x49uLL);
      }
      else
      {
        v62 = *((_QWORD *)v60 + 1);
        *(_QWORD *)v59 = v61;
        *((_QWORD *)v59 + 1) = v62;
        v69 = *((_OWORD *)v60 + 1);
        v70 = *((_OWORD *)v60 + 2);
        *((_OWORD *)v59 + 1) = v69;
        *((_OWORD *)v59 + 2) = v70;
        v72 = *((_OWORD *)v60 + 3);
        *((_OWORD *)v59 + 3) = v72;
        *((_QWORD *)v59 + 8) = *((_QWORD *)v60 + 8);
        v59[72] = v60[72];
        v63 = v61;
        v64 = (id)v69;
        v65 = (id)v70;
        v66 = (id)v72;
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, (uint64_t)v9);
    }
    v67 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<ConversationControlsRecipe?>);
    *(_QWORD *)&v7[*(int *)(v67 + 28)] = *(_QWORD *)((char *)v8 + *(int *)(v67 + 28));
  }
  swift_retain();
  return v5;
}

uint64_t destroy for ShareCardStatusHeaderView(id *a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id *v9;
  uint64_t v10;
  uint64_t v11;
  id *v12;

  v4 = (uint64_t)a1 + *(int *)(a2 + 24);
  v5 = (int *)type metadata accessor for ConversationControlsRecipe();
  if (!__swift_getEnumTagSinglePayload(v4, 1, (uint64_t)v5))
  {
    switch(*(_BYTE *)(v4 + 40))
    {
      case 0:
        __swift_destroy_boxed_opaque_existential_1(v4);
        break;
      case 1:
      case 3:
        swift_bridgeObjectRelease();
        break;
      case 2:

        break;
      case 5:
        swift_unknownObjectRelease();
        break;
      default:
        break;
    }

    v6 = *(void **)(v4 + 56);
    if (v6)
    {

    }
    swift_bridgeObjectRelease();
    v7 = v4 + v5[9];
    v8 = type metadata accessor for AttributedString();
    if (!__swift_getEnumTagSinglePayload(v7, 1, v8))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
    v9 = (id *)(v4 + v5[10]);
    if (*v9)
    {

    }
    v10 = v4 + v5[15];
    if (*(unsigned __int8 *)(v10 + 40) <= 0xFDu)
      outlined consume of ConversationControlsRecipe.Actions(*(_QWORD *)v10, *(_QWORD *)(v10 + 8), *(_QWORD *)(v10 + 16), *(_QWORD *)(v10 + 24), *(_QWORD *)(v10 + 32));
    v11 = v4 + v5[17];
    if (*(unsigned __int8 *)(v11 + 16) != 255)
      outlined consume of PreCallControlsContext(*(id *)v11);
    v12 = (id *)(v4 + v5[18]);
    if (*v12 != (id)1)
    {

    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<ConversationControlsRecipe?>);
  return swift_release();
}

uint64_t initializeWithCopy for ShareCardStatusHeaderView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  int *v8;
  id v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  char v13;
  void *v14;
  id v15;
  uint64_t v16;
  __int128 v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  void *v22;
  id v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  char *v35;
  void *v36;
  uint64_t v37;
  void *v38;
  id v39;
  id v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  int v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  char *v60;
  void *v61;
  uint64_t v62;
  id v63;
  id v64;
  id v65;
  id v66;
  uint64_t v67;
  __int128 v69;
  __int128 v70;
  uint64_t v71;
  __int128 v72;

  v3 = a1;
  v4 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v5 = *(int *)(a3 + 24);
  v6 = (_QWORD *)(a1 + v5);
  v7 = (_QWORD *)(a2 + v5);
  v8 = (int *)type metadata accessor for ConversationControlsRecipe();
  v9 = v4;
  if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, (uint64_t)v8))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    switch(*((_BYTE *)v7 + 40))
    {
      case 0:
        v11 = *(_OWORD *)(v7 + 3);
        *(_OWORD *)(v6 + 3) = v11;
        (**(void (***)(_QWORD *, _QWORD *))(v11 - 8))(v6, v7);
        *((_BYTE *)v6 + 40) = 0;
        break;
      case 1:
        v12 = v7[1];
        *v6 = *v7;
        v6[1] = v12;
        v13 = 1;
        goto LABEL_8;
      case 2:
        v14 = (void *)*v7;
        *v6 = *v7;
        *((_BYTE *)v6 + 40) = 2;
        v15 = v14;
        break;
      case 3:
        v16 = v7[1];
        *v6 = *v7;
        v6[1] = v16;
        v13 = 3;
LABEL_8:
        *((_BYTE *)v6 + 40) = v13;
        swift_bridgeObjectRetain();
        break;
      case 5:
        *(_OWORD *)v6 = *(_OWORD *)v7;
        *((_BYTE *)v6 + 40) = 5;
        swift_unknownObjectRetain();
        break;
      default:
        v17 = *((_OWORD *)v7 + 1);
        *(_OWORD *)v6 = *(_OWORD *)v7;
        *((_OWORD *)v6 + 1) = v17;
        *(_OWORD *)((char *)v6 + 25) = *(_OWORD *)((char *)v7 + 25);
        break;
    }
    v18 = (void *)v7[7];
    v19 = (void *)v7[6];
    v6[6] = v19;
    v20 = v19;
    if (v18)
    {
      v22 = (void *)v7[8];
      v21 = v7[9];
      v6[7] = v18;
      v6[8] = v22;
      v6[9] = v21;
      v23 = v18;
      v24 = v22;
    }
    else
    {
      *(_OWORD *)(v6 + 7) = *(_OWORD *)(v7 + 7);
      v6[9] = v7[9];
    }
    v25 = (void *)v7[10];
    v26 = v7[11];
    v6[10] = v25;
    v6[11] = v26;
    v27 = v8[9];
    v28 = (char *)v6 + v27;
    v29 = (char *)v7 + v27;
    v30 = type metadata accessor for AttributedString();
    v31 = v25;
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v29, 1, v30))
    {
      v32 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
      __swift_storeEnumTagSinglePayload((uint64_t)v28, 0, 1, v30);
    }
    v33 = v8[10];
    v34 = (_QWORD *)((char *)v6 + v33);
    v35 = (char *)v7 + v33;
    v36 = *(void **)v35;
    if (*(_QWORD *)v35)
    {
      v38 = (void *)*((_QWORD *)v35 + 1);
      v37 = *((_QWORD *)v35 + 2);
      *v34 = v36;
      v34[1] = v38;
      v34[2] = v37;
      v39 = v36;
      v40 = v38;
    }
    else
    {
      *(_OWORD *)v34 = *(_OWORD *)v35;
      v34[2] = *((_QWORD *)v35 + 2);
    }
    *((_BYTE *)v6 + v8[11]) = *((_BYTE *)v7 + v8[11]);
    *((_BYTE *)v6 + v8[12]) = *((_BYTE *)v7 + v8[12]);
    *(_QWORD *)((char *)v6 + v8[13]) = *(_QWORD *)((char *)v7 + v8[13]);
    *(_QWORD *)((char *)v6 + v8[14]) = *(_QWORD *)((char *)v7 + v8[14]);
    v41 = v8[15];
    v42 = (char *)v6 + v41;
    v43 = (char *)v7 + v41;
    v44 = v43[40];
    if (v44 <= 0xFD)
    {
      v46 = *(_QWORD *)v43;
      v47 = *((_QWORD *)v43 + 1);
      v71 = v3;
      v48 = *((_QWORD *)v43 + 2);
      v49 = *((_QWORD *)v43 + 3);
      v50 = *((_QWORD *)v43 + 4);
      outlined copy of ConversationControlsRecipe.Actions(*(_QWORD *)v43, v47, v48, v49, v50, v44);
      *(_QWORD *)v42 = v46;
      *((_QWORD *)v42 + 1) = v47;
      *((_QWORD *)v42 + 2) = v48;
      *((_QWORD *)v42 + 3) = v49;
      v3 = v71;
      *((_QWORD *)v42 + 4) = v50;
      v42[40] = v44;
    }
    else
    {
      v45 = *((_OWORD *)v43 + 1);
      *(_OWORD *)v42 = *(_OWORD *)v43;
      *((_OWORD *)v42 + 1) = v45;
      *(_OWORD *)(v42 + 25) = *(_OWORD *)(v43 + 25);
    }
    *((_BYTE *)v6 + v8[16]) = *((_BYTE *)v7 + v8[16]);
    v51 = v8[17];
    v52 = (char *)v6 + v51;
    v53 = (char *)v7 + v51;
    v54 = v53[16];
    if (v54 == 255)
    {
      *(_OWORD *)v52 = *(_OWORD *)v53;
      v52[16] = v53[16];
    }
    else
    {
      v55 = v54 & 1;
      v56 = *(_QWORD *)v53;
      v57 = *((_QWORD *)v53 + 1);
      outlined copy of PreCallControlsContext(*(id *)v53);
      *(_QWORD *)v52 = v56;
      *((_QWORD *)v52 + 1) = v57;
      v52[16] = v55;
    }
    v58 = v8[18];
    v59 = (_QWORD *)((char *)v6 + v58);
    v60 = (char *)v7 + v58;
    v61 = *(void **)((char *)v7 + v58);
    if (v61 == (void *)1)
    {
      memcpy(v59, v60, 0x49uLL);
    }
    else
    {
      v62 = *((_QWORD *)v60 + 1);
      *v59 = v61;
      v59[1] = v62;
      v69 = *((_OWORD *)v60 + 1);
      v70 = *((_OWORD *)v60 + 2);
      *((_OWORD *)v59 + 1) = v69;
      *((_OWORD *)v59 + 2) = v70;
      v72 = *((_OWORD *)v60 + 3);
      *((_OWORD *)v59 + 3) = v72;
      v59[8] = *((_QWORD *)v60 + 8);
      *((_BYTE *)v59 + 72) = v60[72];
      v63 = v61;
      v64 = (id)v69;
      v65 = (id)v70;
      v66 = (id)v72;
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, (uint64_t)v8);
  }
  v67 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<ConversationControlsRecipe?>);
  *(_QWORD *)((char *)v6 + *(int *)(v67 + 28)) = *(_QWORD *)((char *)v7 + *(int *)(v67 + 28));
  swift_retain();
  return v3;
}

void **assignWithCopy for ShareCardStatusHeaderView(void **a1, uint64_t a2, uint64_t a3)
{
  void **v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  int EnumTagSinglePayload;
  int v14;
  uint64_t v15;
  size_t v16;
  void *v17;
  const void *v18;
  uint64_t v19;
  char v20;
  void *v21;
  id v22;
  __int128 v23;
  __int128 v24;
  void *v25;
  void *v26;
  id v27;
  void *v28;
  id v29;
  id v30;
  __int128 v31;
  void *v32;
  uint64_t v33;
  void *v34;
  const void *v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  __int128 *v41;
  void *v42;
  void *v43;
  id v44;
  id v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int128 *v60;
  int v61;
  __int128 v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  id v71;
  id v72;
  id v73;
  id v74;
  uint64_t v75;
  char v77;
  void *v78;
  id v79;
  __int128 v80;
  __int128 v81;
  void *v82;
  void *v83;
  id v84;
  _OWORD *v85;
  void *v86;
  void *v87;
  _OWORD *v88;
  id v89;
  void *v90;
  void *v91;
  id v92;
  void *v93;
  id v94;
  id v95;
  uint64_t v96;
  __int128 v97;
  void *v98;
  void *v99;
  id v100;
  uint64_t v101;
  void *v102;
  const void *v103;
  uint64_t v104;
  int v105;
  int v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  __int128 *v111;
  void *v112;
  void *v113;
  id v114;
  void *v115;
  void *v116;
  id v117;
  uint64_t v118;
  void *v119;
  id v120;
  id v121;
  uint64_t v122;
  uint64_t *v123;
  uint64_t *v124;
  uint64_t v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  __int128 *v147;
  int v148;
  int v149;
  char v150;
  __int128 v151;
  char v152;
  id v153;
  uint64_t v154;
  id v155;
  char v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  void *v162;
  void *v163;
  uint64_t v164;
  id v165;
  id v166;
  id v167;
  id v168;
  uint64_t v169;
  id v170;
  void *v171;
  uint64_t v172;
  void *v173;
  id v174;
  void *v175;
  uint64_t v176;
  void *v177;
  id v178;
  void *v179;
  uint64_t v180;
  void *v181;
  id v182;
  __int128 v183;
  __int128 v184;
  __int128 v185;
  __int128 v186;
  __int128 v187;
  void **v188;
  __int128 v189;
  void **v190;
  void **v191;
  __int128 v192;

  v5 = a1;
  v6 = *(void **)a2;
  v7 = *a1;
  *a1 = *(void **)a2;
  v8 = v6;

  *((_BYTE *)v5 + 8) = *(_BYTE *)(a2 + 8);
  v9 = *(int *)(a3 + 24);
  v10 = (uint64_t)v5 + v9;
  v11 = a2 + v9;
  v12 = (int *)type metadata accessor for ConversationControlsRecipe();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v10, 1, (uint64_t)v12);
  v14 = __swift_getEnumTagSinglePayload(v11, 1, (uint64_t)v12);
  if (!EnumTagSinglePayload)
  {
    if (v14)
    {
      outlined destroy of AccountUpdateNotice(v10, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
      goto LABEL_7;
    }
    if (v5 != (void **)a2)
    {
      outlined destroy of ConversationControlsType(v10);
      switch(*(_BYTE *)(v11 + 40))
      {
        case 0:
          v19 = *(_QWORD *)(v11 + 24);
          *(_QWORD *)(v10 + 24) = v19;
          *(_QWORD *)(v10 + 32) = *(_QWORD *)(v11 + 32);
          (**(void (***)(uint64_t, uint64_t))(v19 - 8))(v10, v11);
          *(_BYTE *)(v10 + 40) = 0;
          break;
        case 1:
          *(_QWORD *)v10 = *(_QWORD *)v11;
          *(_QWORD *)(v10 + 8) = *(_QWORD *)(v11 + 8);
          v77 = 1;
          goto LABEL_41;
        case 2:
          v78 = *(void **)v11;
          *(_QWORD *)v10 = *(_QWORD *)v11;
          *(_BYTE *)(v10 + 40) = 2;
          v79 = v78;
          break;
        case 3:
          *(_QWORD *)v10 = *(_QWORD *)v11;
          *(_QWORD *)(v10 + 8) = *(_QWORD *)(v11 + 8);
          v77 = 3;
LABEL_41:
          *(_BYTE *)(v10 + 40) = v77;
          swift_bridgeObjectRetain();
          break;
        case 5:
          *(_OWORD *)v10 = *(_OWORD *)v11;
          *(_BYTE *)(v10 + 40) = 5;
          swift_unknownObjectRetain();
          break;
        default:
          v80 = *(_OWORD *)v11;
          v81 = *(_OWORD *)(v11 + 16);
          *(_OWORD *)(v10 + 25) = *(_OWORD *)(v11 + 25);
          *(_OWORD *)v10 = v80;
          *(_OWORD *)(v10 + 16) = v81;
          break;
      }
    }
    v82 = *(void **)(v10 + 48);
    v83 = *(void **)(v11 + 48);
    *(_QWORD *)(v10 + 48) = v83;
    v84 = v83;

    v85 = (_OWORD *)(v10 + 56);
    v86 = *(void **)(v10 + 56);
    v88 = (_OWORD *)(v11 + 56);
    v87 = *(void **)(v11 + 56);
    if (v86)
    {
      if (v87)
      {
        *(_QWORD *)(v10 + 56) = v87;
        v89 = v87;

        v90 = *(void **)(v10 + 64);
        v91 = *(void **)(v11 + 64);
        *(_QWORD *)(v10 + 64) = v91;
        v92 = v91;

        *(_QWORD *)(v10 + 72) = *(_QWORD *)(v11 + 72);
      }
      else
      {
        outlined destroy of ConversationControlsRecipe.View((id *)(v10 + 56));
        v96 = *(_QWORD *)(v11 + 72);
        *v85 = *v88;
        *(_QWORD *)(v10 + 72) = v96;
      }
    }
    else if (v87)
    {
      *(_QWORD *)(v10 + 56) = v87;
      v93 = *(void **)(v11 + 64);
      *(_QWORD *)(v10 + 64) = v93;
      *(_QWORD *)(v10 + 72) = *(_QWORD *)(v11 + 72);
      v94 = v87;
      v95 = v93;
    }
    else
    {
      v97 = *v88;
      *(_QWORD *)(v10 + 72) = *(_QWORD *)(v11 + 72);
      *v85 = v97;
    }
    v98 = *(void **)(v11 + 80);
    v99 = *(void **)(v10 + 80);
    *(_QWORD *)(v10 + 80) = v98;
    v100 = v98;

    *(_QWORD *)(v10 + 88) = *(_QWORD *)(v11 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v101 = v12[9];
    v102 = (void *)(v10 + v101);
    v103 = (const void *)(v11 + v101);
    v104 = type metadata accessor for AttributedString();
    v105 = __swift_getEnumTagSinglePayload((uint64_t)v102, 1, v104);
    v106 = __swift_getEnumTagSinglePayload((uint64_t)v103, 1, v104);
    if (v105)
    {
      if (!v106)
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v104 - 8) + 16))(v102, v103, v104);
        __swift_storeEnumTagSinglePayload((uint64_t)v102, 0, 1, v104);
LABEL_57:
        v109 = v12[10];
        v110 = v10 + v109;
        v111 = (__int128 *)(v11 + v109);
        v112 = *(void **)(v10 + v109);
        v113 = *(void **)(v11 + v109);
        if (v112)
        {
          if (v113)
          {
            *(_QWORD *)v110 = v113;
            v114 = v113;

            v115 = *(void **)(v110 + 8);
            v116 = (void *)*((_QWORD *)v111 + 1);
            *(_QWORD *)(v110 + 8) = v116;
            v117 = v116;

            v118 = *((_QWORD *)v111 + 2);
          }
          else
          {
            outlined destroy of ConversationControlsRecipe.View((id *)v110);
            v118 = *((_QWORD *)v111 + 2);
            *(_OWORD *)v110 = *v111;
          }
          *(_QWORD *)(v110 + 16) = v118;
        }
        else if (v113)
        {
          *(_QWORD *)v110 = v113;
          v119 = (void *)*((_QWORD *)v111 + 1);
          *(_QWORD *)(v110 + 8) = v119;
          *(_QWORD *)(v110 + 16) = *((_QWORD *)v111 + 2);
          v120 = v113;
          v121 = v119;
        }
        else
        {
          v183 = *v111;
          *(_QWORD *)(v110 + 16) = *((_QWORD *)v111 + 2);
          *(_OWORD *)v110 = v183;
        }
        *(_BYTE *)(v10 + v12[11]) = *(_BYTE *)(v11 + v12[11]);
        *(_BYTE *)(v10 + v12[12]) = *(_BYTE *)(v11 + v12[12]);
        *(_QWORD *)(v10 + v12[13]) = *(_QWORD *)(v11 + v12[13]);
        *(_QWORD *)(v10 + v12[14]) = *(_QWORD *)(v11 + v12[14]);
        v122 = v12[15];
        v123 = (uint64_t *)(v10 + v122);
        v124 = (uint64_t *)(v11 + v122);
        v125 = *(unsigned __int8 *)(v11 + v122 + 40);
        if (*(unsigned __int8 *)(v10 + v122 + 40) <= 0xFDu)
        {
          if (v125 <= 0xFD)
          {
            v135 = v124[1];
            v191 = v5;
            v136 = v124[2];
            v137 = v124[3];
            v138 = v124[4];
            v139 = *v124;
            outlined copy of ConversationControlsRecipe.Actions(v139, v135, v136, v137, v138, v125);
            v140 = *v123;
            v141 = v123[1];
            v142 = v123[2];
            v143 = v123[3];
            v144 = v123[4];
            *v123 = v139;
            v123[1] = v135;
            v123[2] = v136;
            v123[3] = v137;
            v5 = v191;
            v123[4] = v138;
            *((_BYTE *)v123 + 40) = v125;
            outlined consume of ConversationControlsRecipe.Actions(v140, v141, v142, v143, v144);
          }
          else
          {
            outlined destroy of ConversationControlsRecipe.Actions(v123);
            v128 = *(_OWORD *)((char *)v124 + 25);
            v129 = *((_OWORD *)v124 + 1);
            *(_OWORD *)v123 = *(_OWORD *)v124;
            *((_OWORD *)v123 + 1) = v129;
            *(_OWORD *)((char *)v123 + 25) = v128;
          }
        }
        else if (v125 <= 0xFD)
        {
          v130 = v124[1];
          v190 = v5;
          v131 = v124[2];
          v132 = v124[3];
          v133 = v124[4];
          v134 = *v124;
          outlined copy of ConversationControlsRecipe.Actions(v134, v130, v131, v132, v133, v125);
          *v123 = v134;
          v123[1] = v130;
          v123[2] = v131;
          v123[3] = v132;
          v5 = v190;
          v123[4] = v133;
          *((_BYTE *)v123 + 40) = v125;
        }
        else
        {
          v126 = *(_OWORD *)v124;
          v127 = *((_OWORD *)v124 + 1);
          *(_OWORD *)((char *)v123 + 25) = *(_OWORD *)((char *)v124 + 25);
          *(_OWORD *)v123 = v126;
          *((_OWORD *)v123 + 1) = v127;
        }
        *(_BYTE *)(v10 + v12[16]) = *(_BYTE *)(v11 + v12[16]);
        v145 = v12[17];
        v146 = v10 + v145;
        v147 = (__int128 *)(v11 + v145);
        v148 = *(unsigned __int8 *)(v10 + v145 + 16);
        v149 = *(unsigned __int8 *)(v11 + v145 + 16);
        if (v148 == 255)
        {
          if (v149 == 255)
          {
            v151 = *v147;
            *(_BYTE *)(v146 + 16) = *((_BYTE *)v147 + 16);
            *(_OWORD *)v146 = v151;
          }
          else
          {
            v156 = v149 & 1;
            v157 = *(_QWORD *)v147;
            v158 = *((_QWORD *)v147 + 1);
            outlined copy of PreCallControlsContext(*(id *)v147);
            *(_QWORD *)v146 = v157;
            *(_QWORD *)(v146 + 8) = v158;
            *(_BYTE *)(v146 + 16) = v156;
          }
        }
        else if (v149 == 255)
        {
          outlined destroy of LeadingViewType((id *)v146);
          v150 = *((_BYTE *)v147 + 16);
          *(_OWORD *)v146 = *v147;
          *(_BYTE *)(v146 + 16) = v150;
        }
        else
        {
          v152 = v149 & 1;
          v153 = *(id *)v147;
          v154 = *((_QWORD *)v147 + 1);
          outlined copy of PreCallControlsContext(*(id *)v147);
          v155 = *(id *)v146;
          *(_QWORD *)v146 = v153;
          *(_QWORD *)(v146 + 8) = v154;
          *(_BYTE *)(v146 + 16) = v152;
          outlined consume of PreCallControlsContext(v155);
        }
        v159 = v12[18];
        v160 = v10 + v159;
        v161 = v11 + v159;
        v162 = *(void **)(v10 + v159);
        v163 = *(void **)(v11 + v159);
        if (v162 == (void *)1)
        {
          if (v163 != (void *)1)
          {
            v164 = *(_QWORD *)(v161 + 8);
            *(_QWORD *)v160 = v163;
            *(_QWORD *)(v160 + 8) = v164;
            v185 = *(_OWORD *)(v161 + 16);
            *(_OWORD *)(v160 + 16) = v185;
            v187 = *(_OWORD *)(v161 + 32);
            *(_OWORD *)(v160 + 32) = v187;
            v192 = *(_OWORD *)(v161 + 48);
            *(_OWORD *)(v160 + 48) = v192;
            *(_QWORD *)(v160 + 64) = *(_QWORD *)(v161 + 64);
            *(_BYTE *)(v160 + 72) = *(_BYTE *)(v161 + 72);
            v165 = v163;
            v166 = (id)v185;
            v167 = (id)v187;
            v168 = (id)v192;
            goto LABEL_37;
          }
        }
        else
        {
          if (v163 != (void *)1)
          {
            v169 = *(_QWORD *)(v161 + 8);
            *(_QWORD *)v160 = v163;
            v170 = v163;

            *(_QWORD *)(v160 + 8) = v169;
            v171 = *(void **)(v161 + 16);
            v172 = *(_QWORD *)(v161 + 24);
            v173 = *(void **)(v160 + 16);
            *(_QWORD *)(v160 + 16) = v171;
            v174 = v171;

            *(_QWORD *)(v160 + 24) = v172;
            v175 = *(void **)(v161 + 32);
            v176 = *(_QWORD *)(v161 + 40);
            v177 = *(void **)(v160 + 32);
            *(_QWORD *)(v160 + 32) = v175;
            v178 = v175;

            *(_QWORD *)(v160 + 40) = v176;
            v179 = *(void **)(v161 + 48);
            v180 = *(_QWORD *)(v161 + 56);
            v181 = *(void **)(v160 + 48);
            *(_QWORD *)(v160 + 48) = v179;
            v182 = v179;

            *(_QWORD *)(v160 + 56) = v180;
            *(_QWORD *)(v160 + 64) = *(_QWORD *)(v161 + 64);
            *(_BYTE *)(v160 + 72) = *(_BYTE *)(v161 + 72);
            goto LABEL_37;
          }
          outlined destroy of SystemApertureElement((id *)v160);
        }
        v17 = (void *)v160;
        v18 = (const void *)v161;
        v16 = 73;
        goto LABEL_8;
      }
    }
    else
    {
      v107 = *(_QWORD *)(v104 - 8);
      if (!v106)
      {
        (*(void (**)(void *, const void *, uint64_t))(v107 + 24))(v102, v103, v104);
        goto LABEL_57;
      }
      (*(void (**)(void *, uint64_t))(v107 + 8))(v102, v104);
    }
    v108 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
    memcpy(v102, v103, *(_QWORD *)(*(_QWORD *)(v108 - 8) + 64));
    goto LABEL_57;
  }
  if (v14)
  {
LABEL_7:
    v16 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?)
                                - 8)
                    + 64);
    v17 = (void *)v10;
    v18 = (const void *)v11;
LABEL_8:
    memcpy(v17, v18, v16);
    goto LABEL_37;
  }
  switch(*(_BYTE *)(v11 + 40))
  {
    case 0:
      v15 = *(_QWORD *)(v11 + 24);
      *(_QWORD *)(v10 + 24) = v15;
      *(_QWORD *)(v10 + 32) = *(_QWORD *)(v11 + 32);
      (**(void (***)(uint64_t, uint64_t))(v15 - 8))(v10, v11);
      *(_BYTE *)(v10 + 40) = 0;
      break;
    case 1:
      *(_QWORD *)v10 = *(_QWORD *)v11;
      *(_QWORD *)(v10 + 8) = *(_QWORD *)(v11 + 8);
      v20 = 1;
      goto LABEL_15;
    case 2:
      v21 = *(void **)v11;
      *(_QWORD *)v10 = *(_QWORD *)v11;
      *(_BYTE *)(v10 + 40) = 2;
      v22 = v21;
      break;
    case 3:
      *(_QWORD *)v10 = *(_QWORD *)v11;
      *(_QWORD *)(v10 + 8) = *(_QWORD *)(v11 + 8);
      v20 = 3;
LABEL_15:
      *(_BYTE *)(v10 + 40) = v20;
      swift_bridgeObjectRetain();
      break;
    case 5:
      *(_OWORD *)v10 = *(_OWORD *)v11;
      *(_BYTE *)(v10 + 40) = 5;
      swift_unknownObjectRetain();
      break;
    default:
      v23 = *(_OWORD *)v11;
      v24 = *(_OWORD *)(v11 + 16);
      *(_OWORD *)(v10 + 25) = *(_OWORD *)(v11 + 25);
      *(_OWORD *)v10 = v23;
      *(_OWORD *)(v10 + 16) = v24;
      break;
  }
  v25 = *(void **)(v11 + 48);
  *(_QWORD *)(v10 + 48) = v25;
  v26 = *(void **)(v11 + 56);
  v27 = v25;
  if (v26)
  {
    *(_QWORD *)(v10 + 56) = v26;
    v28 = *(void **)(v11 + 64);
    *(_QWORD *)(v10 + 64) = v28;
    *(_QWORD *)(v10 + 72) = *(_QWORD *)(v11 + 72);
    v29 = v26;
    v30 = v28;
  }
  else
  {
    v31 = *(_OWORD *)(v11 + 56);
    *(_QWORD *)(v10 + 72) = *(_QWORD *)(v11 + 72);
    *(_OWORD *)(v10 + 56) = v31;
  }
  v32 = *(void **)(v11 + 80);
  *(_QWORD *)(v10 + 80) = v32;
  *(_QWORD *)(v10 + 88) = *(_QWORD *)(v11 + 88);
  v33 = v12[9];
  v34 = (void *)(v10 + v33);
  v35 = (const void *)(v11 + v33);
  v36 = type metadata accessor for AttributedString();
  v37 = v32;
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v35, 1, v36))
  {
    v38 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v34, v35, v36);
    __swift_storeEnumTagSinglePayload((uint64_t)v34, 0, 1, v36);
  }
  v39 = v12[10];
  v40 = (_QWORD *)(v10 + v39);
  v41 = (__int128 *)(v11 + v39);
  v42 = *(void **)v41;
  if (*(_QWORD *)v41)
  {
    *v40 = v42;
    v43 = (void *)*((_QWORD *)v41 + 1);
    v40[1] = v43;
    v40[2] = *((_QWORD *)v41 + 2);
    v44 = v42;
    v45 = v43;
  }
  else
  {
    v46 = *v41;
    v40[2] = *((_QWORD *)v41 + 2);
    *(_OWORD *)v40 = v46;
  }
  *(_BYTE *)(v10 + v12[11]) = *(_BYTE *)(v11 + v12[11]);
  *(_BYTE *)(v10 + v12[12]) = *(_BYTE *)(v11 + v12[12]);
  *(_QWORD *)(v10 + v12[13]) = *(_QWORD *)(v11 + v12[13]);
  *(_QWORD *)(v10 + v12[14]) = *(_QWORD *)(v11 + v12[14]);
  v47 = v12[15];
  v48 = v10 + v47;
  v49 = (uint64_t *)(v11 + v47);
  v50 = *((unsigned __int8 *)v49 + 40);
  if (v50 <= 0xFD)
  {
    v53 = *v49;
    v54 = v49[1];
    v188 = v5;
    v55 = v49[2];
    v56 = v49[3];
    v57 = v49[4];
    outlined copy of ConversationControlsRecipe.Actions(*v49, v54, v55, v56, v57, v50);
    *(_QWORD *)v48 = v53;
    *(_QWORD *)(v48 + 8) = v54;
    *(_QWORD *)(v48 + 16) = v55;
    *(_QWORD *)(v48 + 24) = v56;
    v5 = v188;
    *(_QWORD *)(v48 + 32) = v57;
    *(_BYTE *)(v48 + 40) = v50;
  }
  else
  {
    v51 = *(_OWORD *)v49;
    v52 = *((_OWORD *)v49 + 1);
    *(_OWORD *)(v48 + 25) = *(_OWORD *)((char *)v49 + 25);
    *(_OWORD *)v48 = v51;
    *(_OWORD *)(v48 + 16) = v52;
  }
  *(_BYTE *)(v10 + v12[16]) = *(_BYTE *)(v11 + v12[16]);
  v58 = v12[17];
  v59 = v10 + v58;
  v60 = (__int128 *)(v11 + v58);
  v61 = *((unsigned __int8 *)v60 + 16);
  if (v61 == 255)
  {
    v62 = *v60;
    *(_BYTE *)(v59 + 16) = *((_BYTE *)v60 + 16);
    *(_OWORD *)v59 = v62;
  }
  else
  {
    v63 = v61 & 1;
    v64 = *(_QWORD *)v60;
    v65 = *((_QWORD *)v60 + 1);
    outlined copy of PreCallControlsContext(*(id *)v60);
    *(_QWORD *)v59 = v64;
    *(_QWORD *)(v59 + 8) = v65;
    *(_BYTE *)(v59 + 16) = v63;
  }
  v66 = v12[18];
  v67 = (_QWORD *)(v10 + v66);
  v68 = v11 + v66;
  v69 = *(void **)(v11 + v66);
  if (v69 == (void *)1)
  {
    memcpy(v67, (const void *)v68, 0x49uLL);
  }
  else
  {
    v70 = *(_QWORD *)(v68 + 8);
    *v67 = v69;
    v67[1] = v70;
    v184 = *(_OWORD *)(v68 + 16);
    *((_OWORD *)v67 + 1) = v184;
    v186 = *(_OWORD *)(v68 + 32);
    *((_OWORD *)v67 + 2) = v186;
    v189 = *(_OWORD *)(v68 + 48);
    *((_OWORD *)v67 + 3) = v189;
    v67[8] = *(_QWORD *)(v68 + 64);
    *((_BYTE *)v67 + 72) = *(_BYTE *)(v68 + 72);
    v71 = v69;
    v72 = (id)v184;
    v73 = (id)v186;
    v74 = (id)v189;
  }
  __swift_storeEnumTagSinglePayload(v10, 0, 1, (uint64_t)v12);
LABEL_37:
  v75 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<ConversationControlsRecipe?>);
  *(_QWORD *)(v10 + *(int *)(v75 + 28)) = *(_QWORD *)(v11 + *(int *)(v75 + 28));
  swift_retain();
  swift_release();
  return v5;
}

id *outlined destroy of ConversationControlsRecipe.View(id *a1)
{
  destroy for ParticipantListViewController.ViewContent(a1);
  return a1;
}

_QWORD *outlined destroy of ConversationControlsRecipe.Actions(_QWORD *a1)
{
  destroy for ConversationControlsRecipe.Actions(a1);
  return a1;
}

id *outlined destroy of LeadingViewType(id *a1)
{
  destroy for LeadingViewType(a1);
  return a1;
}

id *outlined destroy of SystemApertureElement(id *a1)
{
  destroy for SystemApertureElement(a1);
  return a1;
}

uint64_t initializeWithTake for ShareCardStatusHeaderView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  _OWORD *v5;
  _OWORD *v6;
  int *v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  _OWORD *v19;
  _OWORD *v20;
  __int128 v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(int *)(a3 + 24);
  v5 = (_OWORD *)(a1 + v4);
  v6 = (_OWORD *)(a2 + v4);
  v7 = (int *)type metadata accessor for ConversationControlsRecipe();
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, (uint64_t)v7))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = v6[1];
    *v5 = *v6;
    v5[1] = v9;
    *(_OWORD *)((char *)v5 + 25) = *(_OWORD *)((char *)v6 + 25);
    *((_QWORD *)v5 + 6) = *((_QWORD *)v6 + 6);
    *(_OWORD *)((char *)v5 + 56) = *(_OWORD *)((char *)v6 + 56);
    *(_OWORD *)((char *)v5 + 72) = *(_OWORD *)((char *)v6 + 72);
    *((_QWORD *)v5 + 11) = *((_QWORD *)v6 + 11);
    v10 = v7[9];
    v11 = (char *)v5 + v10;
    v12 = (char *)v6 + v10;
    v13 = type metadata accessor for AttributedString();
    if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
      __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
    }
    v15 = v7[10];
    v16 = (char *)v5 + v15;
    v17 = (char *)v6 + v15;
    *(_OWORD *)v16 = *(_OWORD *)v17;
    *((_QWORD *)v16 + 2) = *((_QWORD *)v17 + 2);
    *((_BYTE *)v5 + v7[11]) = *((_BYTE *)v6 + v7[11]);
    *((_BYTE *)v5 + v7[12]) = *((_BYTE *)v6 + v7[12]);
    *(_QWORD *)((char *)v5 + v7[13]) = *(_QWORD *)((char *)v6 + v7[13]);
    *(_QWORD *)((char *)v5 + v7[14]) = *(_QWORD *)((char *)v6 + v7[14]);
    v18 = v7[15];
    v19 = (_OWORD *)((char *)v5 + v18);
    v20 = (_OWORD *)((char *)v6 + v18);
    v21 = v20[1];
    *v19 = *v20;
    v19[1] = v21;
    *(_OWORD *)((char *)v19 + 25) = *(_OWORD *)((char *)v20 + 25);
    *((_BYTE *)v5 + v7[16]) = *((_BYTE *)v6 + v7[16]);
    v22 = v7[17];
    v23 = (char *)v5 + v22;
    v24 = (char *)v6 + v22;
    v23[16] = v24[16];
    *(_OWORD *)v23 = *(_OWORD *)v24;
    memcpy((char *)v5 + v7[18], (char *)v6 + v7[18], 0x49uLL);
    __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, (uint64_t)v7);
  }
  v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<ConversationControlsRecipe?>);
  *(_QWORD *)((char *)v5 + *(int *)(v25 + 28)) = *(_QWORD *)((char *)v6 + *(int *)(v25 + 28));
  return a1;
}

uint64_t assignWithTake for ShareCardStatusHeaderView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  int EnumTagSinglePayload;
  int v12;
  __int128 v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;
  uint64_t v18;
  size_t v19;
  void *v20;
  const void *v21;
  __int128 v22;
  void *v23;
  void *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _OWORD *v31;
  _OWORD *v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v39;
  uint64_t v40;
  void *v41;
  const void *v42;
  uint64_t v43;
  int v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  void *v51;
  void *v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  unsigned int v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  uint64_t v84;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = (int *)type metadata accessor for ConversationControlsRecipe();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v8, 1, (uint64_t)v10);
  v12 = __swift_getEnumTagSinglePayload(v9, 1, (uint64_t)v10);
  if (!EnumTagSinglePayload)
  {
    if (v12)
    {
      outlined destroy of AccountUpdateNotice(v8, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
      goto LABEL_7;
    }
    if (a1 != a2)
    {
      outlined destroy of ConversationControlsType(v8);
      v22 = *(_OWORD *)(v9 + 16);
      *(_OWORD *)v8 = *(_OWORD *)v9;
      *(_OWORD *)(v8 + 16) = v22;
      *(_OWORD *)(v8 + 25) = *(_OWORD *)(v9 + 25);
    }
    v23 = *(void **)(v8 + 48);
    *(_QWORD *)(v8 + 48) = *(_QWORD *)(v9 + 48);

    v24 = *(void **)(v8 + 56);
    v25 = *(_QWORD *)(v9 + 56);
    if (v24)
    {
      if (v25)
      {
        *(_QWORD *)(v8 + 56) = v25;

        v26 = *(void **)(v8 + 64);
        *(_QWORD *)(v8 + 64) = *(_QWORD *)(v9 + 64);

        *(_QWORD *)(v8 + 72) = *(_QWORD *)(v9 + 72);
        goto LABEL_19;
      }
      outlined destroy of ConversationControlsRecipe.View((id *)(v8 + 56));
    }
    *(_OWORD *)(v8 + 56) = *(_OWORD *)(v9 + 56);
    *(_QWORD *)(v8 + 72) = *(_QWORD *)(v9 + 72);
LABEL_19:
    v39 = *(void **)(v8 + 80);
    *(_QWORD *)(v8 + 80) = *(_QWORD *)(v9 + 80);

    *(_QWORD *)(v8 + 88) = *(_QWORD *)(v9 + 88);
    swift_bridgeObjectRelease();
    v40 = v10[9];
    v41 = (void *)(v8 + v40);
    v42 = (const void *)(v9 + v40);
    v43 = type metadata accessor for AttributedString();
    v44 = __swift_getEnumTagSinglePayload((uint64_t)v41, 1, v43);
    v45 = __swift_getEnumTagSinglePayload((uint64_t)v42, 1, v43);
    if (v44)
    {
      if (!v45)
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(v41, v42, v43);
        __swift_storeEnumTagSinglePayload((uint64_t)v41, 0, 1, v43);
        goto LABEL_25;
      }
    }
    else
    {
      v46 = *(_QWORD *)(v43 - 8);
      if (!v45)
      {
        (*(void (**)(void *, const void *, uint64_t))(v46 + 40))(v41, v42, v43);
LABEL_25:
        v48 = v10[10];
        v49 = v8 + v48;
        v50 = (_QWORD *)(v9 + v48);
        v51 = *(void **)(v8 + v48);
        if (v51)
        {
          if (*v50)
          {
            *(_QWORD *)v49 = *v50;

            v52 = *(void **)(v49 + 8);
            *(_QWORD *)(v49 + 8) = v50[1];

            goto LABEL_30;
          }
          outlined destroy of ConversationControlsRecipe.View((id *)v49);
        }
        *(_OWORD *)v49 = *(_OWORD *)v50;
LABEL_30:
        *(_QWORD *)(v49 + 16) = v50[2];
        *(_BYTE *)(v8 + v10[11]) = *(_BYTE *)(v9 + v10[11]);
        *(_BYTE *)(v8 + v10[12]) = *(_BYTE *)(v9 + v10[12]);
        *(_QWORD *)(v8 + v10[13]) = *(_QWORD *)(v9 + v10[13]);
        *(_QWORD *)(v8 + v10[14]) = *(_QWORD *)(v9 + v10[14]);
        v53 = v10[15];
        v54 = (uint64_t *)(v8 + v53);
        v55 = v9 + v53;
        if (*(unsigned __int8 *)(v8 + v53 + 40) <= 0xFDu)
        {
          v56 = *(unsigned __int8 *)(v55 + 40);
          if (v56 <= 0xFD)
          {
            v58 = *(_QWORD *)(v55 + 32);
            v59 = *v54;
            v60 = v54[1];
            v61 = v54[2];
            v62 = v54[3];
            v63 = v54[4];
            v64 = *(_OWORD *)(v55 + 16);
            *(_OWORD *)v54 = *(_OWORD *)v55;
            *((_OWORD *)v54 + 1) = v64;
            v54[4] = v58;
            *((_BYTE *)v54 + 40) = v56;
            outlined consume of ConversationControlsRecipe.Actions(v59, v60, v61, v62, v63);
LABEL_35:
            *(_BYTE *)(v8 + v10[16]) = *(_BYTE *)(v9 + v10[16]);
            v65 = v10[17];
            v66 = v8 + v65;
            v67 = v9 + v65;
            if (*(unsigned __int8 *)(v8 + v65 + 16) != 255)
            {
              v68 = *(unsigned __int8 *)(v67 + 16);
              if (v68 != 255)
              {
                v69 = *(id *)v66;
                *(_OWORD *)v66 = *(_OWORD *)v67;
                *(_BYTE *)(v66 + 16) = v68 & 1;
                outlined consume of PreCallControlsContext(v69);
                goto LABEL_40;
              }
              outlined destroy of LeadingViewType((id *)v66);
            }
            *(_OWORD *)v66 = *(_OWORD *)v67;
            *(_BYTE *)(v66 + 16) = *(_BYTE *)(v67 + 16);
LABEL_40:
            v70 = v10[18];
            v71 = v8 + v70;
            v72 = (_QWORD *)(v9 + v70);
            v73 = *(void **)(v8 + v70);
            if (v73 != (void *)1)
            {
              if (*v72 != 1)
              {
                v74 = v72[1];
                *(_QWORD *)v71 = *v72;

                v75 = v72[2];
                v76 = v72[3];
                v77 = *(void **)(v71 + 16);
                *(_QWORD *)(v71 + 8) = v74;
                *(_QWORD *)(v71 + 16) = v75;

                v78 = v72[4];
                v79 = v72[5];
                v80 = *(void **)(v71 + 32);
                *(_QWORD *)(v71 + 24) = v76;
                *(_QWORD *)(v71 + 32) = v78;

                v81 = v72[6];
                v82 = v72[7];
                v83 = *(void **)(v71 + 48);
                *(_QWORD *)(v71 + 40) = v79;
                *(_QWORD *)(v71 + 48) = v81;

                v84 = v72[8];
                *(_QWORD *)(v71 + 56) = v82;
                *(_QWORD *)(v71 + 64) = v84;
                *(_BYTE *)(v71 + 72) = *((_BYTE *)v72 + 72);
                goto LABEL_16;
              }
              outlined destroy of SystemApertureElement((id *)v71);
            }
            v20 = (void *)v71;
            v21 = v72;
            v19 = 73;
            goto LABEL_8;
          }
          outlined destroy of ConversationControlsRecipe.Actions(v54);
        }
        v57 = *(_OWORD *)(v55 + 16);
        *(_OWORD *)v54 = *(_OWORD *)v55;
        *((_OWORD *)v54 + 1) = v57;
        *(_OWORD *)((char *)v54 + 25) = *(_OWORD *)(v55 + 25);
        goto LABEL_35;
      }
      (*(void (**)(void *, uint64_t))(v46 + 8))(v41, v43);
    }
    v47 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    goto LABEL_25;
  }
  if (v12)
  {
LABEL_7:
    v19 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?)
                                - 8)
                    + 64);
    v20 = (void *)v8;
    v21 = (const void *)v9;
LABEL_8:
    memcpy(v20, v21, v19);
    goto LABEL_16;
  }
  v13 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v13;
  *(_OWORD *)(v8 + 25) = *(_OWORD *)(v9 + 25);
  *(_QWORD *)(v8 + 48) = *(_QWORD *)(v9 + 48);
  *(_OWORD *)(v8 + 56) = *(_OWORD *)(v9 + 56);
  *(_OWORD *)(v8 + 72) = *(_OWORD *)(v9 + 72);
  *(_QWORD *)(v8 + 88) = *(_QWORD *)(v9 + 88);
  v14 = v10[9];
  v15 = (void *)(v8 + v14);
  v16 = (const void *)(v9 + v14);
  v17 = type metadata accessor for AttributedString();
  if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v17))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
    __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v17);
  }
  v27 = v10[10];
  v28 = v8 + v27;
  v29 = v9 + v27;
  *(_OWORD *)v28 = *(_OWORD *)v29;
  *(_QWORD *)(v28 + 16) = *(_QWORD *)(v29 + 16);
  *(_BYTE *)(v8 + v10[11]) = *(_BYTE *)(v9 + v10[11]);
  *(_BYTE *)(v8 + v10[12]) = *(_BYTE *)(v9 + v10[12]);
  *(_QWORD *)(v8 + v10[13]) = *(_QWORD *)(v9 + v10[13]);
  *(_QWORD *)(v8 + v10[14]) = *(_QWORD *)(v9 + v10[14]);
  v30 = v10[15];
  v31 = (_OWORD *)(v8 + v30);
  v32 = (_OWORD *)(v9 + v30);
  v33 = v32[1];
  *v31 = *v32;
  v31[1] = v33;
  *(_OWORD *)((char *)v31 + 25) = *(_OWORD *)((char *)v32 + 25);
  *(_BYTE *)(v8 + v10[16]) = *(_BYTE *)(v9 + v10[16]);
  v34 = v10[17];
  v35 = v8 + v34;
  v36 = v9 + v34;
  *(_BYTE *)(v35 + 16) = *(_BYTE *)(v36 + 16);
  *(_OWORD *)v35 = *(_OWORD *)v36;
  memcpy((void *)(v8 + v10[18]), (const void *)(v9 + v10[18]), 0x49uLL);
  __swift_storeEnumTagSinglePayload(v8, 0, 1, (uint64_t)v10);
LABEL_16:
  v37 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<ConversationControlsRecipe?>);
  *(_QWORD *)(v8 + *(int *)(v37 + 28)) = *(_QWORD *)(v9 + *(int *)(v37 + 28));
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ShareCardStatusHeaderView()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1BD05C7CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    OUTLINED_FUNCTION_8_26();
    OUTLINED_FUNCTION_18();
  }
  else
  {
    v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<ConversationControlsRecipe?>);
    OUTLINED_FUNCTION_1_16(a1 + *(int *)(a3 + 24), a2, v6);
  }
}

uint64_t storeEnumTagSinglePayload for ShareCardStatusHeaderView()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1BD05C830()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_15_13();
  if (v3)
  {
    *v1 = (v0 - 1);
    OUTLINED_FUNCTION_18();
  }
  else
  {
    v4 = v2;
    v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<ConversationControlsRecipe?>);
    OUTLINED_FUNCTION_0_29((uint64_t)v1 + *(int *)(v4 + 24), v0, v0, v5);
  }
}

void type metadata completion function for ShareCardStatusHeaderView()
{
  unint64_t v0;

  type metadata accessor for State<ConversationControlsRecipe?>();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void type metadata accessor for State<ConversationControlsRecipe?>()
{
  unint64_t v0;
  uint64_t v1;

  if (!lazy cache variable for type metadata for State<ConversationControlsRecipe?>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
    v0 = type metadata accessor for State();
    if (!v1)
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for State<ConversationControlsRecipe?>);
  }
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<SubscriptionView<PassthroughSubject<(), Never>, ModifiedContent<ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>, _PaddingLayout>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<SubscriptionView<PassthroughSubject<(), Never>, ModifiedContent<ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>, _PaddingLayout>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<SubscriptionView<PassthroughSubject<(), Never>, ModifiedContent<ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>, _PaddingLayout>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<SubscriptionView<PassthroughSubject<(), Never>, ModifiedContent<ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>, _PaddingLayout>>, _AppearanceActionModifier>);
    v2[0] = lazy protocol witness table accessor for type SubscriptionView<PassthroughSubject<(), Never>, ModifiedContent<ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>, _PaddingLayout>> and conformance SubscriptionView<A, B>();
    v2[1] = MEMORY[0x1E0CDC8B0];
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<SubscriptionView<PassthroughSubject<(), Never>, ModifiedContent<ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>, _PaddingLayout>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type SubscriptionView<PassthroughSubject<(), Never>, ModifiedContent<ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>, _PaddingLayout>> and conformance SubscriptionView<A, B>()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type SubscriptionView<PassthroughSubject<(), Never>, ModifiedContent<ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>, _PaddingLayout>> and conformance SubscriptionView<A, B>;
  if (!lazy protocol witness table cache variable for type SubscriptionView<PassthroughSubject<(), Never>, ModifiedContent<ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>, _PaddingLayout>> and conformance SubscriptionView<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for SubscriptionView<PassthroughSubject<(), Never>, ModifiedContent<ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>, _PaddingLayout>>);
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDA108], v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SubscriptionView<PassthroughSubject<(), Never>, ModifiedContent<ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>, _PaddingLayout>> and conformance SubscriptionView<A, B>);
  }
  return result;
}

void **initializeBufferWithCopyOfBuffer for ConversationStatusView(void **a1, void **a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  int v9;
  char *v10;
  __int128 v11;
  uint64_t v12;
  char v13;
  void *v14;
  id v15;
  uint64_t v16;
  __int128 v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  void *v22;
  id v23;
  id v24;
  void *v25;
  uint64_t v26;
  int *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  void *v37;
  uint64_t v38;
  void *v39;
  id v40;
  id v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  int v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  void *v62;
  uint64_t v63;
  id v64;
  id v65;
  id v66;
  id v67;
  __int128 v69;
  __int128 v70;
  void **v71;
  __int128 v72;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = (char *)*a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (void **)&v5[(v4 + 16) & ~(unint64_t)v4];
    swift_retain();
  }
  else
  {
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = *((unsigned __int8 *)a2 + v6 + 40);
    v10 = v5;
    switch(v9)
    {
      case 0:
        v11 = *(_OWORD *)(v8 + 24);
        *(_OWORD *)(v7 + 24) = v11;
        (**(void (***)(char *, char *))(v11 - 8))(v7, v8);
        v7[40] = 0;
        break;
      case 1:
        v12 = *((_QWORD *)v8 + 1);
        *(_QWORD *)v7 = *(_QWORD *)v8;
        *((_QWORD *)v7 + 1) = v12;
        v13 = 1;
        goto LABEL_8;
      case 2:
        v14 = *(void **)v8;
        *(_QWORD *)v7 = *(_QWORD *)v8;
        v7[40] = 2;
        v15 = v14;
        break;
      case 3:
        v16 = *((_QWORD *)v8 + 1);
        *(_QWORD *)v7 = *(_QWORD *)v8;
        *((_QWORD *)v7 + 1) = v16;
        v13 = 3;
LABEL_8:
        v7[40] = v13;
        swift_bridgeObjectRetain();
        break;
      case 5:
        *(_OWORD *)v7 = *(_OWORD *)v8;
        v7[40] = 5;
        swift_unknownObjectRetain();
        break;
      default:
        v17 = *((_OWORD *)v8 + 1);
        *(_OWORD *)v7 = *(_OWORD *)v8;
        *((_OWORD *)v7 + 1) = v17;
        *(_OWORD *)(v7 + 25) = *(_OWORD *)(v8 + 25);
        break;
    }
    v18 = (void *)*((_QWORD *)v8 + 7);
    v19 = (void *)*((_QWORD *)v8 + 6);
    *((_QWORD *)v7 + 6) = v19;
    v20 = v19;
    if (v18)
    {
      v22 = (void *)*((_QWORD *)v8 + 8);
      v21 = *((_QWORD *)v8 + 9);
      *((_QWORD *)v7 + 7) = v18;
      *((_QWORD *)v7 + 8) = v22;
      *((_QWORD *)v7 + 9) = v21;
      v23 = v18;
      v24 = v22;
    }
    else
    {
      *(_OWORD *)(v7 + 56) = *(_OWORD *)(v8 + 56);
      *((_QWORD *)v7 + 9) = *((_QWORD *)v8 + 9);
    }
    v25 = (void *)*((_QWORD *)v8 + 10);
    v26 = *((_QWORD *)v8 + 11);
    *((_QWORD *)v7 + 10) = v25;
    *((_QWORD *)v7 + 11) = v26;
    v27 = (int *)type metadata accessor for ConversationControlsRecipe();
    v28 = v27[9];
    v29 = &v7[v28];
    v30 = &v8[v28];
    v31 = type metadata accessor for AttributedString();
    v32 = v25;
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v30, 1, v31))
    {
      v33 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
      __swift_storeEnumTagSinglePayload((uint64_t)v29, 0, 1, v31);
    }
    v34 = v27[10];
    v35 = &v7[v34];
    v36 = &v8[v34];
    v37 = *(void **)v36;
    if (*(_QWORD *)v36)
    {
      v39 = (void *)*((_QWORD *)v36 + 1);
      v38 = *((_QWORD *)v36 + 2);
      *(_QWORD *)v35 = v37;
      *((_QWORD *)v35 + 1) = v39;
      *((_QWORD *)v35 + 2) = v38;
      v40 = v37;
      v41 = v39;
    }
    else
    {
      *(_OWORD *)v35 = *(_OWORD *)v36;
      *((_QWORD *)v35 + 2) = *((_QWORD *)v36 + 2);
    }
    v7[v27[11]] = v8[v27[11]];
    v7[v27[12]] = v8[v27[12]];
    *(_QWORD *)&v7[v27[13]] = *(_QWORD *)&v8[v27[13]];
    *(_QWORD *)&v7[v27[14]] = *(_QWORD *)&v8[v27[14]];
    v42 = v27[15];
    v43 = &v7[v42];
    v44 = &v8[v42];
    v45 = v44[40];
    if (v45 <= 0xFD)
    {
      v47 = *(_QWORD *)v44;
      v48 = *((_QWORD *)v44 + 1);
      v71 = a1;
      v49 = *((_QWORD *)v44 + 2);
      v50 = *((_QWORD *)v44 + 3);
      v51 = *((_QWORD *)v44 + 4);
      outlined copy of ConversationControlsRecipe.Actions(*(_QWORD *)v44, v48, v49, v50, v51, v45);
      *(_QWORD *)v43 = v47;
      *((_QWORD *)v43 + 1) = v48;
      *((_QWORD *)v43 + 2) = v49;
      *((_QWORD *)v43 + 3) = v50;
      a1 = v71;
      *((_QWORD *)v43 + 4) = v51;
      v43[40] = v45;
    }
    else
    {
      v46 = *((_OWORD *)v44 + 1);
      *(_OWORD *)v43 = *(_OWORD *)v44;
      *((_OWORD *)v43 + 1) = v46;
      *(_OWORD *)(v43 + 25) = *(_OWORD *)(v44 + 25);
    }
    v7[v27[16]] = v8[v27[16]];
    v52 = v27[17];
    v53 = &v7[v52];
    v54 = &v8[v52];
    v55 = v54[16];
    if (v55 == 255)
    {
      *(_OWORD *)v53 = *(_OWORD *)v54;
      v53[16] = v54[16];
    }
    else
    {
      v56 = v55 & 1;
      v57 = *(_QWORD *)v54;
      v58 = *((_QWORD *)v54 + 1);
      outlined copy of PreCallControlsContext(*(id *)v54);
      *(_QWORD *)v53 = v57;
      *((_QWORD *)v53 + 1) = v58;
      v53[16] = v56;
    }
    v59 = v27[18];
    v60 = &v7[v59];
    v61 = &v8[v59];
    v62 = *(void **)&v8[v59];
    if (v62 == (void *)1)
    {
      memcpy(v60, v61, 0x49uLL);
    }
    else
    {
      v63 = *((_QWORD *)v61 + 1);
      *(_QWORD *)v60 = v62;
      *((_QWORD *)v60 + 1) = v63;
      v69 = *((_OWORD *)v61 + 1);
      v70 = *((_OWORD *)v61 + 2);
      *((_OWORD *)v60 + 1) = v69;
      *((_OWORD *)v60 + 2) = v70;
      v72 = *((_OWORD *)v61 + 3);
      *((_OWORD *)v60 + 3) = v72;
      *((_QWORD *)v60 + 8) = *((_QWORD *)v61 + 8);
      v60[72] = v61[72];
      v64 = v62;
      v65 = (id)v69;
      v66 = (id)v70;
      v67 = (id)v72;
    }
  }
  return a1;
}

void destroy for ConversationStatusView(id *a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  id *v9;
  uint64_t v10;
  uint64_t v11;
  id *v12;

  v4 = (uint64_t)a1 + *(int *)(a2 + 20);
  switch(*(_BYTE *)(v4 + 40))
  {
    case 0:
      __swift_destroy_boxed_opaque_existential_1(v4);
      break;
    case 1:
    case 3:
      swift_bridgeObjectRelease();
      break;
    case 2:

      break;
    case 5:
      swift_unknownObjectRelease();
      break;
    default:
      break;
  }

  v5 = *(void **)(v4 + 56);
  if (v5)
  {

  }
  swift_bridgeObjectRelease();
  v6 = (int *)type metadata accessor for ConversationControlsRecipe();
  v7 = v4 + v6[9];
  v8 = type metadata accessor for AttributedString();
  if (!__swift_getEnumTagSinglePayload(v7, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = (id *)(v4 + v6[10]);
  if (*v9)
  {

  }
  v10 = v4 + v6[15];
  if (*(unsigned __int8 *)(v10 + 40) <= 0xFDu)
    outlined consume of ConversationControlsRecipe.Actions(*(_QWORD *)v10, *(_QWORD *)(v10 + 8), *(_QWORD *)(v10 + 16), *(_QWORD *)(v10 + 24), *(_QWORD *)(v10 + 32));
  v11 = v4 + v6[17];
  if (*(unsigned __int8 *)(v11 + 16) != 255)
    outlined consume of PreCallControlsContext(*(id *)v11);
  v12 = (id *)(v4 + v6[18]);
  if (*v12 != (id)1)
  {

  }
}

void **initializeWithCopy for ConversationStatusView(void **a1, void **a2, uint64_t a3)
{
  void **v3;
  void *v4;
  uint64_t v5;
  char *v6;
  char *v7;
  int v8;
  id v9;
  __int128 v10;
  uint64_t v11;
  char v12;
  void *v13;
  id v14;
  uint64_t v15;
  __int128 v16;
  void *v17;
  void *v18;
  id v19;
  uint64_t v20;
  void *v21;
  id v22;
  id v23;
  void *v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  void *v36;
  uint64_t v37;
  void *v38;
  id v39;
  id v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  int v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  void *v61;
  uint64_t v62;
  id v63;
  id v64;
  id v65;
  id v66;
  __int128 v68;
  __int128 v69;
  void **v70;
  __int128 v71;

  v3 = a1;
  v4 = *a2;
  *a1 = *a2;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = *((unsigned __int8 *)a2 + v5 + 40);
  v9 = v4;
  switch(v8)
  {
    case 0:
      v10 = *(_OWORD *)(v7 + 24);
      *(_OWORD *)(v6 + 24) = v10;
      (**(void (***)(char *, char *))(v10 - 8))(v6, v7);
      v6[40] = 0;
      break;
    case 1:
      v11 = *((_QWORD *)v7 + 1);
      *(_QWORD *)v6 = *(_QWORD *)v7;
      *((_QWORD *)v6 + 1) = v11;
      v12 = 1;
      goto LABEL_6;
    case 2:
      v13 = *(void **)v7;
      *(_QWORD *)v6 = *(_QWORD *)v7;
      v6[40] = 2;
      v14 = v13;
      break;
    case 3:
      v15 = *((_QWORD *)v7 + 1);
      *(_QWORD *)v6 = *(_QWORD *)v7;
      *((_QWORD *)v6 + 1) = v15;
      v12 = 3;
LABEL_6:
      v6[40] = v12;
      swift_bridgeObjectRetain();
      break;
    case 5:
      *(_OWORD *)v6 = *(_OWORD *)v7;
      v6[40] = 5;
      swift_unknownObjectRetain();
      break;
    default:
      v16 = *((_OWORD *)v7 + 1);
      *(_OWORD *)v6 = *(_OWORD *)v7;
      *((_OWORD *)v6 + 1) = v16;
      *(_OWORD *)(v6 + 25) = *(_OWORD *)(v7 + 25);
      break;
  }
  v17 = (void *)*((_QWORD *)v7 + 7);
  v18 = (void *)*((_QWORD *)v7 + 6);
  *((_QWORD *)v6 + 6) = v18;
  v19 = v18;
  if (v17)
  {
    v21 = (void *)*((_QWORD *)v7 + 8);
    v20 = *((_QWORD *)v7 + 9);
    *((_QWORD *)v6 + 7) = v17;
    *((_QWORD *)v6 + 8) = v21;
    *((_QWORD *)v6 + 9) = v20;
    v22 = v17;
    v23 = v21;
  }
  else
  {
    *(_OWORD *)(v6 + 56) = *(_OWORD *)(v7 + 56);
    *((_QWORD *)v6 + 9) = *((_QWORD *)v7 + 9);
  }
  v24 = (void *)*((_QWORD *)v7 + 10);
  v25 = *((_QWORD *)v7 + 11);
  *((_QWORD *)v6 + 10) = v24;
  *((_QWORD *)v6 + 11) = v25;
  v26 = (int *)type metadata accessor for ConversationControlsRecipe();
  v27 = v26[9];
  v28 = &v6[v27];
  v29 = &v7[v27];
  v30 = type metadata accessor for AttributedString();
  v31 = v24;
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v29, 1, v30))
  {
    v32 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
    __swift_storeEnumTagSinglePayload((uint64_t)v28, 0, 1, v30);
  }
  v33 = v26[10];
  v34 = &v6[v33];
  v35 = &v7[v33];
  v36 = *(void **)v35;
  if (*(_QWORD *)v35)
  {
    v38 = (void *)*((_QWORD *)v35 + 1);
    v37 = *((_QWORD *)v35 + 2);
    *(_QWORD *)v34 = v36;
    *((_QWORD *)v34 + 1) = v38;
    *((_QWORD *)v34 + 2) = v37;
    v39 = v36;
    v40 = v38;
  }
  else
  {
    *(_OWORD *)v34 = *(_OWORD *)v35;
    *((_QWORD *)v34 + 2) = *((_QWORD *)v35 + 2);
  }
  v6[v26[11]] = v7[v26[11]];
  v6[v26[12]] = v7[v26[12]];
  *(_QWORD *)&v6[v26[13]] = *(_QWORD *)&v7[v26[13]];
  *(_QWORD *)&v6[v26[14]] = *(_QWORD *)&v7[v26[14]];
  v41 = v26[15];
  v42 = &v6[v41];
  v43 = &v7[v41];
  v44 = v43[40];
  if (v44 <= 0xFD)
  {
    v46 = *(_QWORD *)v43;
    v47 = *((_QWORD *)v43 + 1);
    v70 = v3;
    v48 = *((_QWORD *)v43 + 2);
    v49 = *((_QWORD *)v43 + 3);
    v50 = *((_QWORD *)v43 + 4);
    outlined copy of ConversationControlsRecipe.Actions(*(_QWORD *)v43, v47, v48, v49, v50, v44);
    *(_QWORD *)v42 = v46;
    *((_QWORD *)v42 + 1) = v47;
    *((_QWORD *)v42 + 2) = v48;
    *((_QWORD *)v42 + 3) = v49;
    v3 = v70;
    *((_QWORD *)v42 + 4) = v50;
    v42[40] = v44;
  }
  else
  {
    v45 = *((_OWORD *)v43 + 1);
    *(_OWORD *)v42 = *(_OWORD *)v43;
    *((_OWORD *)v42 + 1) = v45;
    *(_OWORD *)(v42 + 25) = *(_OWORD *)(v43 + 25);
  }
  v6[v26[16]] = v7[v26[16]];
  v51 = v26[17];
  v52 = &v6[v51];
  v53 = &v7[v51];
  v54 = v53[16];
  if (v54 == 255)
  {
    *(_OWORD *)v52 = *(_OWORD *)v53;
    v52[16] = v53[16];
  }
  else
  {
    v55 = v54 & 1;
    v56 = *(_QWORD *)v53;
    v57 = *((_QWORD *)v53 + 1);
    outlined copy of PreCallControlsContext(*(id *)v53);
    *(_QWORD *)v52 = v56;
    *((_QWORD *)v52 + 1) = v57;
    v52[16] = v55;
  }
  v58 = v26[18];
  v59 = &v6[v58];
  v60 = &v7[v58];
  v61 = *(void **)&v7[v58];
  if (v61 == (void *)1)
  {
    memcpy(v59, v60, 0x49uLL);
  }
  else
  {
    v62 = *((_QWORD *)v60 + 1);
    *(_QWORD *)v59 = v61;
    *((_QWORD *)v59 + 1) = v62;
    v68 = *((_OWORD *)v60 + 1);
    v69 = *((_OWORD *)v60 + 2);
    *((_OWORD *)v59 + 1) = v68;
    *((_OWORD *)v59 + 2) = v69;
    v71 = *((_OWORD *)v60 + 3);
    *((_OWORD *)v59 + 3) = v71;
    *((_QWORD *)v59 + 8) = *((_QWORD *)v60 + 8);
    v59[72] = v60[72];
    v63 = v61;
    v64 = (id)v68;
    v65 = (id)v69;
    v66 = (id)v71;
  }
  return v3;
}

void **assignWithCopy for ConversationStatusView(void **a1, void **a2, uint64_t a3)
{
  void **v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char v13;
  void *v14;
  id v15;
  __int128 v16;
  __int128 v17;
  void *v18;
  void *v19;
  id v20;
  _OWORD *v21;
  void *v22;
  void *v23;
  _OWORD *v24;
  id v25;
  void *v26;
  void *v27;
  id v28;
  void *v29;
  id v30;
  id v31;
  uint64_t v32;
  __int128 v33;
  void *v34;
  void *v35;
  id v36;
  int *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  int EnumTagSinglePayload;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  void *v49;
  void *v50;
  id v51;
  void *v52;
  void *v53;
  id v54;
  uint64_t v55;
  void *v56;
  id v57;
  id v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  int v86;
  int v87;
  char v88;
  __int128 v89;
  char v90;
  void *v91;
  uint64_t v92;
  id v93;
  char v94;
  void *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  id v100;
  void *v101;
  uint64_t v102;
  id v103;
  id v104;
  id v105;
  id v106;
  uint64_t v107;
  id v108;
  void *v109;
  uint64_t v110;
  void *v111;
  id v112;
  void *v113;
  uint64_t v114;
  void *v115;
  id v116;
  void *v117;
  uint64_t v118;
  void *v119;
  id v120;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  void **v125;
  void **v126;
  __int128 v127;

  v5 = a1;
  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  v8 = v6;

  v9 = *(int *)(a3 + 20);
  v10 = (char *)v5 + v9;
  v11 = (char *)a2 + v9;
  if (v5 != a2)
  {
    outlined destroy of ConversationControlsType((uint64_t)v5 + v9);
    switch(v11[40])
    {
      case 0:
        v12 = *((_QWORD *)v11 + 3);
        *((_QWORD *)v10 + 3) = v12;
        *((_QWORD *)v10 + 4) = *((_QWORD *)v11 + 4);
        (**(void (***)(char *, char *))(v12 - 8))(v10, v11);
        v10[40] = 0;
        break;
      case 1:
        *(_QWORD *)v10 = *(_QWORD *)v11;
        *((_QWORD *)v10 + 1) = *((_QWORD *)v11 + 1);
        v13 = 1;
        goto LABEL_7;
      case 2:
        v14 = *(void **)v11;
        *(_QWORD *)v10 = *(_QWORD *)v11;
        v10[40] = 2;
        v15 = v14;
        break;
      case 3:
        *(_QWORD *)v10 = *(_QWORD *)v11;
        *((_QWORD *)v10 + 1) = *((_QWORD *)v11 + 1);
        v13 = 3;
LABEL_7:
        v10[40] = v13;
        swift_bridgeObjectRetain();
        break;
      case 5:
        *(_OWORD *)v10 = *(_OWORD *)v11;
        v10[40] = 5;
        swift_unknownObjectRetain();
        break;
      default:
        v16 = *(_OWORD *)v11;
        v17 = *((_OWORD *)v11 + 1);
        *(_OWORD *)(v10 + 25) = *(_OWORD *)(v11 + 25);
        *(_OWORD *)v10 = v16;
        *((_OWORD *)v10 + 1) = v17;
        break;
    }
  }
  v18 = (void *)*((_QWORD *)v10 + 6);
  v19 = (void *)*((_QWORD *)v11 + 6);
  *((_QWORD *)v10 + 6) = v19;
  v20 = v19;

  v21 = v10 + 56;
  v22 = (void *)*((_QWORD *)v10 + 7);
  v24 = v11 + 56;
  v23 = (void *)*((_QWORD *)v11 + 7);
  if (v22)
  {
    if (v23)
    {
      *((_QWORD *)v10 + 7) = v23;
      v25 = v23;

      v26 = (void *)*((_QWORD *)v10 + 8);
      v27 = (void *)*((_QWORD *)v11 + 8);
      *((_QWORD *)v10 + 8) = v27;
      v28 = v27;

      *((_QWORD *)v10 + 9) = *((_QWORD *)v11 + 9);
    }
    else
    {
      outlined destroy of ConversationControlsRecipe.View((id *)v10 + 7);
      v32 = *((_QWORD *)v11 + 9);
      *v21 = *v24;
      *((_QWORD *)v10 + 9) = v32;
    }
  }
  else if (v23)
  {
    *((_QWORD *)v10 + 7) = v23;
    v29 = (void *)*((_QWORD *)v11 + 8);
    *((_QWORD *)v10 + 8) = v29;
    *((_QWORD *)v10 + 9) = *((_QWORD *)v11 + 9);
    v30 = v23;
    v31 = v29;
  }
  else
  {
    v33 = *v24;
    *((_QWORD *)v10 + 9) = *((_QWORD *)v11 + 9);
    *v21 = v33;
  }
  v34 = (void *)*((_QWORD *)v11 + 10);
  v35 = (void *)*((_QWORD *)v10 + 10);
  *((_QWORD *)v10 + 10) = v34;
  v36 = v34;

  *((_QWORD *)v10 + 11) = *((_QWORD *)v11 + 11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v37 = (int *)type metadata accessor for ConversationControlsRecipe();
  v38 = v37[9];
  v39 = &v10[v38];
  v40 = &v11[v38];
  v41 = type metadata accessor for AttributedString();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v39, 1, v41);
  v43 = __swift_getEnumTagSinglePayload((uint64_t)v40, 1, v41);
  if (EnumTagSinglePayload)
  {
    if (!v43)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v39, v40, v41);
      __swift_storeEnumTagSinglePayload((uint64_t)v39, 0, 1, v41);
      goto LABEL_23;
    }
    goto LABEL_22;
  }
  v44 = *(_QWORD *)(v41 - 8);
  if (v43)
  {
    (*(void (**)(char *, uint64_t))(v44 + 8))(v39, v41);
LABEL_22:
    v45 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    goto LABEL_23;
  }
  (*(void (**)(char *, char *, uint64_t))(v44 + 24))(v39, v40, v41);
LABEL_23:
  v46 = v37[10];
  v47 = &v10[v46];
  v48 = &v11[v46];
  v49 = *(void **)&v10[v46];
  v50 = *(void **)&v11[v46];
  if (v49)
  {
    if (v50)
    {
      *(_QWORD *)v47 = v50;
      v51 = v50;

      v52 = (void *)*((_QWORD *)v47 + 1);
      v53 = (void *)*((_QWORD *)v48 + 1);
      *((_QWORD *)v47 + 1) = v53;
      v54 = v53;

      v55 = *((_QWORD *)v48 + 2);
    }
    else
    {
      outlined destroy of ConversationControlsRecipe.View((id *)v47);
      v55 = *((_QWORD *)v48 + 2);
      *(_OWORD *)v47 = *(_OWORD *)v48;
    }
    *((_QWORD *)v47 + 2) = v55;
  }
  else if (v50)
  {
    *(_QWORD *)v47 = v50;
    v56 = (void *)*((_QWORD *)v48 + 1);
    *((_QWORD *)v47 + 1) = v56;
    *((_QWORD *)v47 + 2) = *((_QWORD *)v48 + 2);
    v57 = v50;
    v58 = v56;
  }
  else
  {
    v122 = *(_OWORD *)v48;
    *((_QWORD *)v47 + 2) = *((_QWORD *)v48 + 2);
    *(_OWORD *)v47 = v122;
  }
  v10[v37[11]] = v11[v37[11]];
  v10[v37[12]] = v11[v37[12]];
  *(_QWORD *)&v10[v37[13]] = *(_QWORD *)&v11[v37[13]];
  *(_QWORD *)&v10[v37[14]] = *(_QWORD *)&v11[v37[14]];
  v59 = v37[15];
  v60 = &v10[v59];
  v61 = &v11[v59];
  v62 = v11[v59 + 40];
  if (v10[v59 + 40] <= 0xFDu)
  {
    if (v62 <= 0xFD)
    {
      v72 = *(_QWORD *)v61;
      v73 = *((_QWORD *)v61 + 1);
      v126 = v5;
      v74 = *((_QWORD *)v61 + 2);
      v75 = *((_QWORD *)v61 + 4);
      v76 = *(_QWORD *)v61;
      v77 = *((_QWORD *)v61 + 3);
      outlined copy of ConversationControlsRecipe.Actions(v76, v73, v74, v77, v75, v62);
      v78 = *(_QWORD *)v60;
      v79 = *((_QWORD *)v60 + 1);
      v80 = *((_QWORD *)v60 + 2);
      v81 = *((_QWORD *)v60 + 3);
      v82 = *((_QWORD *)v60 + 4);
      *(_QWORD *)v60 = v72;
      *((_QWORD *)v60 + 1) = v73;
      *((_QWORD *)v60 + 2) = v74;
      *((_QWORD *)v60 + 3) = v77;
      v5 = v126;
      *((_QWORD *)v60 + 4) = v75;
      v60[40] = v62;
      outlined consume of ConversationControlsRecipe.Actions(v78, v79, v80, v81, v82);
    }
    else
    {
      outlined destroy of ConversationControlsRecipe.Actions(v60);
      v65 = *(_OWORD *)(v61 + 25);
      v66 = *((_OWORD *)v61 + 1);
      *(_OWORD *)v60 = *(_OWORD *)v61;
      *((_OWORD *)v60 + 1) = v66;
      *(_OWORD *)(v60 + 25) = v65;
    }
  }
  else if (v62 <= 0xFD)
  {
    v67 = *(_QWORD *)v61;
    v68 = *((_QWORD *)v61 + 1);
    v125 = v5;
    v69 = *((_QWORD *)v61 + 2);
    v70 = *((_QWORD *)v61 + 3);
    v71 = *((_QWORD *)v61 + 4);
    outlined copy of ConversationControlsRecipe.Actions(v67, v68, v69, v70, v71, v62);
    *(_QWORD *)v60 = v67;
    *((_QWORD *)v60 + 1) = v68;
    *((_QWORD *)v60 + 2) = v69;
    *((_QWORD *)v60 + 3) = v70;
    v5 = v125;
    *((_QWORD *)v60 + 4) = v71;
    v60[40] = v62;
  }
  else
  {
    v63 = *(_OWORD *)v61;
    v64 = *((_OWORD *)v61 + 1);
    *(_OWORD *)(v60 + 25) = *(_OWORD *)(v61 + 25);
    *(_OWORD *)v60 = v63;
    *((_OWORD *)v60 + 1) = v64;
  }
  v10[v37[16]] = v11[v37[16]];
  v83 = v37[17];
  v84 = &v10[v83];
  v85 = &v11[v83];
  v86 = v10[v83 + 16];
  v87 = v11[v83 + 16];
  if (v86 == 255)
  {
    if (v87 == 255)
    {
      v89 = *(_OWORD *)v85;
      v84[16] = v85[16];
      *(_OWORD *)v84 = v89;
    }
    else
    {
      v94 = v87 & 1;
      v95 = *(void **)v85;
      v96 = *((_QWORD *)v85 + 1);
      outlined copy of PreCallControlsContext(v95);
      *(_QWORD *)v84 = v95;
      *((_QWORD *)v84 + 1) = v96;
      v84[16] = v94;
    }
  }
  else if (v87 == 255)
  {
    outlined destroy of LeadingViewType((id *)v84);
    v88 = v85[16];
    *(_OWORD *)v84 = *(_OWORD *)v85;
    v84[16] = v88;
  }
  else
  {
    v90 = v87 & 1;
    v91 = *(void **)v85;
    v92 = *((_QWORD *)v85 + 1);
    outlined copy of PreCallControlsContext(v91);
    v93 = *(id *)v84;
    *(_QWORD *)v84 = v91;
    *((_QWORD *)v84 + 1) = v92;
    v84[16] = v90;
    outlined consume of PreCallControlsContext(v93);
  }
  v97 = v37[18];
  v98 = &v10[v97];
  v99 = &v11[v97];
  v100 = *(id *)v98;
  v101 = *(void **)v99;
  if (*(_QWORD *)v98 != 1)
  {
    if (v101 != (void *)1)
    {
      v107 = *((_QWORD *)v99 + 1);
      *(_QWORD *)v98 = v101;
      v108 = v101;

      *((_QWORD *)v98 + 1) = v107;
      v109 = (void *)*((_QWORD *)v99 + 2);
      v110 = *((_QWORD *)v99 + 3);
      v111 = (void *)*((_QWORD *)v98 + 2);
      *((_QWORD *)v98 + 2) = v109;
      v112 = v109;

      *((_QWORD *)v98 + 3) = v110;
      v113 = (void *)*((_QWORD *)v99 + 4);
      v114 = *((_QWORD *)v99 + 5);
      v115 = (void *)*((_QWORD *)v98 + 4);
      *((_QWORD *)v98 + 4) = v113;
      v116 = v113;

      *((_QWORD *)v98 + 5) = v114;
      v117 = (void *)*((_QWORD *)v99 + 6);
      v118 = *((_QWORD *)v99 + 7);
      v119 = (void *)*((_QWORD *)v98 + 6);
      *((_QWORD *)v98 + 6) = v117;
      v120 = v117;

      *((_QWORD *)v98 + 7) = v118;
      *((_QWORD *)v98 + 8) = *((_QWORD *)v99 + 8);
      v98[72] = v99[72];
      return v5;
    }
    outlined destroy of SystemApertureElement((id *)v98);
    goto LABEL_49;
  }
  if (v101 == (void *)1)
  {
LABEL_49:
    memcpy(v98, v99, 0x49uLL);
    return v5;
  }
  v102 = *((_QWORD *)v99 + 1);
  *(_QWORD *)v98 = v101;
  *((_QWORD *)v98 + 1) = v102;
  v123 = *((_OWORD *)v99 + 1);
  *((_OWORD *)v98 + 1) = v123;
  v124 = *((_OWORD *)v99 + 2);
  *((_OWORD *)v98 + 2) = v124;
  v127 = *((_OWORD *)v99 + 3);
  *((_OWORD *)v98 + 3) = v127;
  *((_QWORD *)v98 + 8) = *((_QWORD *)v99 + 8);
  v98[72] = v99[72];
  v103 = v101;
  v104 = (id)v123;
  v105 = (id)v124;
  v106 = (id)v127;
  return v5;
}

_QWORD *initializeWithTake for ConversationStatusView(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  __int128 v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  __int128 v20;
  uint64_t v21;
  char *v22;
  char *v23;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  *(_OWORD *)(v5 + 25) = *(_OWORD *)((char *)a2 + v4 + 25);
  v7 = *(_OWORD *)((char *)a2 + v4 + 16);
  *(_OWORD *)v5 = *(_OWORD *)((char *)a2 + v4);
  *((_OWORD *)v5 + 1) = v7;
  *((_QWORD *)v5 + 6) = *(_QWORD *)((char *)a2 + v4 + 48);
  *(_OWORD *)(v5 + 72) = *(_OWORD *)((char *)a2 + v4 + 72);
  *(_OWORD *)(v5 + 56) = *(_OWORD *)((char *)a2 + v4 + 56);
  *((_QWORD *)v5 + 11) = *(_QWORD *)((char *)a2 + v4 + 88);
  v8 = (int *)type metadata accessor for ConversationControlsRecipe();
  v9 = v8[9];
  v10 = &v5[v9];
  v11 = &v6[v9];
  v12 = type metadata accessor for AttributedString();
  if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v12);
  }
  v14 = v8[10];
  v15 = &v5[v14];
  v16 = &v6[v14];
  *(_OWORD *)v15 = *(_OWORD *)v16;
  *((_QWORD *)v15 + 2) = *((_QWORD *)v16 + 2);
  v5[v8[11]] = v6[v8[11]];
  v5[v8[12]] = v6[v8[12]];
  *(_QWORD *)&v5[v8[13]] = *(_QWORD *)&v6[v8[13]];
  *(_QWORD *)&v5[v8[14]] = *(_QWORD *)&v6[v8[14]];
  v17 = v8[15];
  v18 = &v5[v17];
  v19 = &v6[v17];
  v20 = *((_OWORD *)v19 + 1);
  *(_OWORD *)v18 = *(_OWORD *)v19;
  *((_OWORD *)v18 + 1) = v20;
  *(_OWORD *)(v18 + 25) = *(_OWORD *)(v19 + 25);
  v5[v8[16]] = v6[v8[16]];
  v21 = v8[17];
  v22 = &v5[v21];
  v23 = &v6[v21];
  v22[16] = v23[16];
  *(_OWORD *)v22 = *(_OWORD *)v23;
  memcpy(&v5[v8[18]], &v6[v8[18]], 0x49uLL);
  return a1;
}

void **assignWithTake for ConversationStatusView(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  __int128 v10;
  void *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  int EnumTagSinglePayload;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  void *v28;
  void *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  unsigned int v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  char *v43;
  char *v44;
  int v45;
  id v46;
  uint64_t v47;
  char *v48;
  char *v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;

  v6 = *a1;
  *a1 = *a2;

  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  if (a1 != a2)
  {
    outlined destroy of ConversationControlsType((uint64_t)a1 + v7);
    v10 = *((_OWORD *)v9 + 1);
    *(_OWORD *)v8 = *(_OWORD *)v9;
    *((_OWORD *)v8 + 1) = v10;
    *(_OWORD *)(v8 + 25) = *(_OWORD *)(v9 + 25);
  }
  v11 = (void *)*((_QWORD *)v8 + 6);
  *((_QWORD *)v8 + 6) = *((_QWORD *)v9 + 6);

  v12 = (void *)*((_QWORD *)v8 + 7);
  v13 = *((_QWORD *)v9 + 7);
  if (v12)
  {
    if (v13)
    {
      *((_QWORD *)v8 + 7) = v13;

      v14 = (void *)*((_QWORD *)v8 + 8);
      *((_QWORD *)v8 + 8) = *((_QWORD *)v9 + 8);

      *((_QWORD *)v8 + 9) = *((_QWORD *)v9 + 9);
      goto LABEL_8;
    }
    outlined destroy of ConversationControlsRecipe.View((id *)v8 + 7);
  }
  *(_OWORD *)(v8 + 56) = *(_OWORD *)(v9 + 56);
  *((_QWORD *)v8 + 9) = *((_QWORD *)v9 + 9);
LABEL_8:
  v15 = (void *)*((_QWORD *)v8 + 10);
  *((_QWORD *)v8 + 10) = *((_QWORD *)v9 + 10);

  *((_QWORD *)v8 + 11) = *((_QWORD *)v9 + 11);
  swift_bridgeObjectRelease();
  v16 = (int *)type metadata accessor for ConversationControlsRecipe();
  v17 = v16[9];
  v18 = &v8[v17];
  v19 = &v9[v17];
  v20 = type metadata accessor for AttributedString();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v18, 1, v20);
  v22 = __swift_getEnumTagSinglePayload((uint64_t)v19, 1, v20);
  if (EnumTagSinglePayload)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
      __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, v20);
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  v23 = *(_QWORD *)(v20 - 8);
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v23 + 8))(v18, v20);
LABEL_13:
    v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(char *, char *, uint64_t))(v23 + 40))(v18, v19, v20);
LABEL_14:
  v25 = v16[10];
  v26 = &v8[v25];
  v27 = &v9[v25];
  v28 = *(void **)&v8[v25];
  if (v28)
  {
    if (*(_QWORD *)v27)
    {
      *(_QWORD *)v26 = *(_QWORD *)v27;

      v29 = (void *)*((_QWORD *)v26 + 1);
      *((_QWORD *)v26 + 1) = *((_QWORD *)v27 + 1);

      goto LABEL_19;
    }
    outlined destroy of ConversationControlsRecipe.View((id *)v26);
  }
  *(_OWORD *)v26 = *(_OWORD *)v27;
LABEL_19:
  *((_QWORD *)v26 + 2) = *((_QWORD *)v27 + 2);
  v8[v16[11]] = v9[v16[11]];
  v8[v16[12]] = v9[v16[12]];
  *(_QWORD *)&v8[v16[13]] = *(_QWORD *)&v9[v16[13]];
  *(_QWORD *)&v8[v16[14]] = *(_QWORD *)&v9[v16[14]];
  v30 = v16[15];
  v31 = &v8[v30];
  v32 = &v9[v30];
  if (v8[v30 + 40] > 0xFDu)
  {
LABEL_22:
    v34 = *((_OWORD *)v32 + 1);
    *(_OWORD *)v31 = *(_OWORD *)v32;
    *((_OWORD *)v31 + 1) = v34;
    *(_OWORD *)(v31 + 25) = *(_OWORD *)(v32 + 25);
    goto LABEL_24;
  }
  v33 = v32[40];
  if (v33 > 0xFD)
  {
    outlined destroy of ConversationControlsRecipe.Actions(v31);
    goto LABEL_22;
  }
  v35 = *((_QWORD *)v32 + 4);
  v36 = *(_QWORD *)v31;
  v37 = *((_QWORD *)v31 + 1);
  v38 = *((_QWORD *)v31 + 2);
  v39 = *((_QWORD *)v31 + 3);
  v40 = *((_QWORD *)v31 + 4);
  v41 = *((_OWORD *)v32 + 1);
  *(_OWORD *)v31 = *(_OWORD *)v32;
  *((_OWORD *)v31 + 1) = v41;
  *((_QWORD *)v31 + 4) = v35;
  v31[40] = v33;
  outlined consume of ConversationControlsRecipe.Actions(v36, v37, v38, v39, v40);
LABEL_24:
  v8[v16[16]] = v9[v16[16]];
  v42 = v16[17];
  v43 = &v8[v42];
  v44 = &v9[v42];
  if (v8[v42 + 16] == 255)
  {
LABEL_27:
    *(_OWORD *)v43 = *(_OWORD *)v44;
    v43[16] = v44[16];
    goto LABEL_29;
  }
  v45 = v44[16];
  if (v45 == 255)
  {
    outlined destroy of LeadingViewType((id *)v43);
    goto LABEL_27;
  }
  v46 = *(id *)v43;
  *(_OWORD *)v43 = *(_OWORD *)v44;
  v43[16] = v45 & 1;
  outlined consume of PreCallControlsContext(v46);
LABEL_29:
  v47 = v16[18];
  v48 = &v8[v47];
  v49 = &v9[v47];
  v50 = *(id *)v48;
  if (*(_QWORD *)v48 != 1)
  {
    if (*(_QWORD *)v49 != 1)
    {
      v51 = *((_QWORD *)v49 + 1);
      *(_QWORD *)v48 = *(_QWORD *)v49;

      v52 = *((_QWORD *)v49 + 2);
      v53 = *((_QWORD *)v49 + 3);
      v54 = (void *)*((_QWORD *)v48 + 2);
      *((_QWORD *)v48 + 1) = v51;
      *((_QWORD *)v48 + 2) = v52;

      v55 = *((_QWORD *)v49 + 4);
      v56 = *((_QWORD *)v49 + 5);
      v57 = (void *)*((_QWORD *)v48 + 4);
      *((_QWORD *)v48 + 3) = v53;
      *((_QWORD *)v48 + 4) = v55;

      v58 = *((_QWORD *)v49 + 6);
      v59 = *((_QWORD *)v49 + 7);
      v60 = (void *)*((_QWORD *)v48 + 6);
      *((_QWORD *)v48 + 5) = v56;
      *((_QWORD *)v48 + 6) = v58;

      v61 = *((_QWORD *)v49 + 8);
      *((_QWORD *)v48 + 7) = v59;
      *((_QWORD *)v48 + 8) = v61;
      v48[72] = v49[72];
      return a1;
    }
    outlined destroy of SystemApertureElement((id *)v48);
  }
  memcpy(v48, v49, 0x49uLL);
  return a1;
}

uint64_t getEnumTagSinglePayload for ConversationStatusView()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1BD05DEEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    OUTLINED_FUNCTION_8_26();
    OUTLINED_FUNCTION_18();
  }
  else
  {
    v6 = OUTLINED_FUNCTION_28_1();
    OUTLINED_FUNCTION_1_16(a1 + *(int *)(a3 + 20), a2, v6);
  }
}

uint64_t storeEnumTagSinglePayload for ConversationStatusView()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1BD05DF48()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_15_13();
  if (v3)
  {
    *v1 = (v0 - 1);
    OUTLINED_FUNCTION_18();
  }
  else
  {
    v4 = v2;
    v5 = OUTLINED_FUNCTION_28_1();
    OUTLINED_FUNCTION_0_29((uint64_t)v1 + *(int *)(v4 + 20), v0, v0, v5);
  }
}

uint64_t type metadata accessor for ConversationStatusView(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for ConversationStatusView);
}

uint64_t type metadata completion function for ConversationStatusView()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ConversationControlsRecipe();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t associated type witness table accessor for View.Body : View in ConversationStatusView()
{
  return MEMORY[0x1E0CE0788];
}

id ConversationStatusView.makeUIView(context:)()
{
  void **v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v8;

  v1 = type metadata accessor for ConversationControlsRecipe();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for ConversationStatusView(0);
  outlined init with copy of ShareCardStatusHeaderView((uint64_t)v0 + *(int *)(v4 + 20), (uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
  v5 = *v0;
  v6 = objc_allocWithZone((Class)type metadata accessor for ConversationHUDControlsStatusView());
  return ConversationHUDControlsStatusView.init(recipe:controlsManager:menuHostViewController:context:presentationStyle:)((uint64_t)v3, v5, 0, 0, 2, 1);
}

uint64_t ConversationStatusView.updateUIView(_:context:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  v3 = type metadata accessor for ConversationControlsRecipe();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for ConversationStatusView(0);
  outlined init with copy of ShareCardStatusHeaderView(v1 + *(int *)(v6 + 20), (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
  return (*(uint64_t (**)(char *))((*MEMORY[0x1E0DEEDD8] & *a1) + 0xA0))(v5);
}

double ConversationStatusView.sizeThatFits(_:uiView:context:)(uint64_t a1, char a2, uint64_t a3, char a4, id a5, double a6, double a7, double a8, double a9)
{
  double v10;
  double result;

  v10 = *(double *)(MEMORY[0x1E0DC4FF8] + 8);
  if ((a2 & 1) != 0)
    a1 = *MEMORY[0x1E0DC4FF8];
  if ((a4 & 1) != 0)
    a3 = *(_QWORD *)(MEMORY[0x1E0DC4FF8] + 8);
  LODWORD(v10) = 1148846080;
  LODWORD(a9) = 1132068864;
  objc_msgSend(a5, sel_systemLayoutSizeFittingSize_withHorizontalFittingPriority_verticalFittingPriority_, *(double *)&a1, *(double *)&a3, v10, a9);
  return result;
}

double protocol witness for UIViewRepresentable.sizeThatFits(_:uiView:context:) in conformance ConversationStatusView(uint64_t a1, char a2, uint64_t a3, char a4, void *a5, double a6, double a7, double a8, double a9)
{
  return ConversationStatusView.sizeThatFits(_:uiView:context:)(a1, a2 & 1, a3, a4 & 1, a5, a6, a7, a8, a9);
}

uint64_t protocol witness for static View._makeView(view:inputs:) in conformance ConversationStatusView()
{
  lazy protocol witness table accessor for type ConversationStatusView and conformance ConversationStatusView(&lazy protocol witness table cache variable for type ConversationStatusView and conformance ConversationStatusView, (uint64_t)&protocol conformance descriptor for ConversationStatusView);
  return static UIViewRepresentable._makeView(view:inputs:)();
}

uint64_t protocol witness for static View._makeViewList(view:inputs:) in conformance ConversationStatusView()
{
  lazy protocol witness table accessor for type ConversationStatusView and conformance ConversationStatusView(&lazy protocol witness table cache variable for type ConversationStatusView and conformance ConversationStatusView, (uint64_t)&protocol conformance descriptor for ConversationStatusView);
  return static UIViewRepresentable._makeViewList(view:inputs:)();
}

uint64_t protocol witness for static View._viewListCount(inputs:) in conformance ConversationStatusView()
{
  return static View._viewListCount(inputs:)();
}

void protocol witness for View.body.getter in conformance ConversationStatusView()
{
  lazy protocol witness table accessor for type ConversationStatusView and conformance ConversationStatusView(&lazy protocol witness table cache variable for type ConversationStatusView and conformance ConversationStatusView, (uint64_t)&protocol conformance descriptor for ConversationStatusView);
  UIViewRepresentable.body.getter();
  __break(1u);
}

void base witness table accessor for View in ConversationStatusView()
{
  lazy protocol witness table accessor for type ConversationStatusView and conformance ConversationStatusView(&lazy protocol witness table cache variable for type ConversationStatusView and conformance ConversationStatusView, (uint64_t)&protocol conformance descriptor for ConversationStatusView);
}

void outlined init with copy of ShareCardStatusHeaderView(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_84(a1, a2, a3);
  OUTLINED_FUNCTION_5(v3);
  OUTLINED_FUNCTION_0();
}

void lazy protocol witness table accessor for type ConversationStatusView and conformance ConversationStatusView(unint64_t *a1, uint64_t a2)
{
  uint64_t v4;

  if (!*a1)
  {
    v4 = type metadata accessor for ConversationStatusView(255);
    atomic_store(MEMORY[0x1C3B750C8](a2, v4), a1);
  }
  OUTLINED_FUNCTION_0();
}

void outlined init with take of ShareCardStatusHeaderView(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v5 = OUTLINED_FUNCTION_84(a1, a2, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v3, v4, v5);
  OUTLINED_FUNCTION_0();
}

uint64_t outlined init with take of ModifiedContent<ConversationStatusView, _PaddingLayout>(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ConversationStatusView, _PaddingLayout>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

Swift::Void __swiftcall ConversationControlsCountdownJoinButtonProvider.initializeCountdownView(with:fullValue:)(Swift::Double with, Swift::Double fullValue)
{
  uint64_t v2;
  uint64_t v3;
  os_log_type_t v4;
  uint64_t v5;
  NSObject *oslog;

  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & **(_QWORD **)(v2 + 144)) + 0xE0))();
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v3 = OUTLINED_FUNCTION_17_2();
  oslog = OUTLINED_FUNCTION_3(v3, (uint64_t)&static Logger.conversationControls);
  v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(oslog, v4))
  {
    v5 = swift_slowAlloc();
    *(_DWORD *)v5 = 134218240;
    OUTLINED_FUNCTION_13_19();
    *(_WORD *)(v5 + 12) = 2048;
    OUTLINED_FUNCTION_13_19();
    _os_log_impl(&dword_1BD004000, oslog, v4, "[CountdownJoinButtonProvider] Initializing new join countdown view with initial value %f and full value %f", (uint8_t *)v5, 0x16u);
    OUTLINED_FUNCTION_60();
  }

}

Swift::Void __swiftcall ConversationControlsCountdownJoinButtonProvider.startCountdown()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v4;
  os_log_type_t v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  NSObject *v22;

  v1 = MEMORY[0x1C3B752C0](v0 + 152);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 160);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(ObjectType, v2);
    v1 = OUTLINED_FUNCTION_10();
  }
  (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & **(_QWORD **)(v0 + 144)) + 0xE8))(v1);
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v4 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v4, (uint64_t)&static Logger.conversationControls);
  v5 = OUTLINED_FUNCTION_12_10();
  if (OUTLINED_FUNCTION_5_9(v5, v6, v7, v8, v9, v10, v11, v12, v19, v21))
  {
    *(_WORD *)OUTLINED_FUNCTION_7_8() = 0;
    OUTLINED_FUNCTION_4_12(&dword_1BD004000, v13, v14, "[CountdownJoinButtonProvider] Starting join countdown on a view", v15, v16, v17, v18, v20, v22);
    OUTLINED_FUNCTION_60();
  }
  OUTLINED_FUNCTION_15_9(v22);
}

Swift::Void __swiftcall ConversationControlsCountdownJoinButtonProvider.tick()()
{
  uint64_t v0;
  uint64_t v1;
  os_log_type_t v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  NSObject *v19;

  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & **(_QWORD **)(v0 + 144)) + 0xF0))();
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v1 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v1, (uint64_t)&static Logger.conversationControls);
  v2 = OUTLINED_FUNCTION_12_10();
  if (OUTLINED_FUNCTION_5_9(v2, v3, v4, v5, v6, v7, v8, v9, v16, v18))
  {
    *(_WORD *)OUTLINED_FUNCTION_7_8() = 0;
    OUTLINED_FUNCTION_4_12(&dword_1BD004000, v10, v11, "[CountdownJoinButtonProvider] tick", v12, v13, v14, v15, v17, v19);
    OUTLINED_FUNCTION_60();
  }
  OUTLINED_FUNCTION_7_1(v19);
}

Swift::Void __swiftcall ConversationControlsCountdownJoinButtonProvider.countdownEnded()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t v3;
  NSObject *v4;
  uint64_t v5;
  void (*v6)(void);
  NSObject *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;

  if (MEMORY[0x1C3B752C0](v0 + 152))
  {
    v1 = *(_QWORD *)(v0 + 160);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v1 + 16))(ObjectType, v1);
    OUTLINED_FUNCTION_10();
  }
  OUTLINED_FUNCTION_9_4();
  v3 = MEMORY[0x1C3B752C0](v0 + 16);
  if (v3)
  {
    v4 = v3;
    if (MEMORY[0x1C3B752C0](v0 + 152))
    {
      v5 = *(_QWORD *)(v0 + 160);
      swift_getObjectType();
      v6 = *(void (**)(void))(v5 + 24);
      v7 = v4;
      v6();

      OUTLINED_FUNCTION_10();
    }
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v8 = OUTLINED_FUNCTION_17_2();
    v9 = OUTLINED_FUNCTION_3(v8, (uint64_t)&static Logger.conversationControls);
    v10 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)OUTLINED_FUNCTION_7_8();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_1BD004000, v9, v10, "[CountdownJoinButtonProvider] countdownEnded", v11, 2u);
      OUTLINED_FUNCTION_60();
    }

    v13 = v4;
  }
  else
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v12 = OUTLINED_FUNCTION_17_2();
    v13 = OUTLINED_FUNCTION_3(v12, (uint64_t)&static Logger.conversationControls);
    v14 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)OUTLINED_FUNCTION_7_8();
      *(_WORD *)v15 = 0;
      _os_log_impl(&dword_1BD004000, v13, v14, "[CountdownJoinButtonProvider] Skipping joinConversation because button no longer exists after countdownEnded.", v15, 2u);
      OUTLINED_FUNCTION_60();
    }
  }

}

Swift::Void __swiftcall ConversationControlsCountdownJoinButtonProvider.cancelJoinCountdown()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t v3;
  os_log_type_t v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  NSObject *v21;

  if (MEMORY[0x1C3B752C0](v0 + 152))
  {
    v1 = *(_QWORD *)(v0 + 160);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v1 + 32))(ObjectType, v1);
    swift_unknownObjectRelease();
  }
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v3 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v3, (uint64_t)&static Logger.conversationControls);
  v4 = OUTLINED_FUNCTION_12_10();
  if (OUTLINED_FUNCTION_5_9(v4, v5, v6, v7, v8, v9, v10, v11, v18, v20))
  {
    *(_WORD *)OUTLINED_FUNCTION_7_8() = 0;
    OUTLINED_FUNCTION_4_12(&dword_1BD004000, v12, v13, "[CountdownJoinButtonProvider] cancelJoinCountdown", v14, v15, v16, v17, v19, v21);
    OUTLINED_FUNCTION_60();
  }
  OUTLINED_FUNCTION_15_9(v21);
}

uint64_t ConversationControlsCountdownJoinButtonProvider.__allocating_init(controlsManager:context:shape:)(_QWORD *a1, char a2, char a3)
{
  swift_allocObject();
  return ConversationControlsCountdownJoinButtonProvider.init(controlsManager:context:shape:)(a1, a2, a3);
}

uint64_t ConversationControlsCountdownJoinButtonProvider.init(controlsManager:context:shape:)(_QWORD *a1, char a2, char a3)
{
  _QWORD *v3;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  _QWORD *v15;
  _QWORD *v16;
  double v17;
  void *v18;
  void *v19;
  _QWORD *v20;
  void *v21;
  id v22;
  id v23;
  _QWORD v25[50];
  _QWORD v26[4];
  __int16 v27;
  uint64_t v28;
  char v29;
  uint64_t v30;

  v3[20] = 0;
  swift_unknownObjectWeakInit();
  v3[22] = 0;
  swift_unknownObjectWeakInit();
  v7 = (uint64_t)v3 + OBJC_IVAR____TtC15ConversationKit47ConversationControlsCountdownJoinButtonProvider_voucher;
  v8 = type metadata accessor for CountdownVoucher(0);
  __swift_storeEnumTagSinglePayload(v7, 1, 1, v8);
  type metadata accessor for ConversationControlsJoinCallCountdownView();
  v9 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  OUTLINED_FUNCTION_11_8();
  v3[18] = objc_msgSend(v9, sel_init);
  v3[20] = &protocol witness table for ConversationControlsManager;
  v10 = swift_unknownObjectWeakAssign();
  v11 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x2F0))(v10);
  v3[22] = &protocol witness table for ConversationControlsJoinCountdownActionController;
  swift_unknownObjectWeakAssign();
  swift_release();
  swift_release();
  v3[17] = a1;
  ControlsButtonProvider.init(context:shape:)(a2, a3);
  v13 = v12;
  v14 = *(void **)(v12 + 144);
  v15 = a1;
  OUTLINED_FUNCTION_11_8();
  v16 = v14;
  v17 = static Layout.ConversationControls.values.getter((uint64_t)v25);
  (*(void (**)(_QWORD, _QWORD, double))((*v11 & *v16) + 0xA0))(v25[37], 0, v17);

  v18 = *(void **)(v13 + 144);
  v19 = (void *)objc_opt_self();
  v20 = v18;
  (*(void (**)(id))((*v11 & *v20) + 0xB8))(objc_msgSend(v19, sel_secondarySystemFillColor));

  type metadata accessor for UIImage();
  v21 = (void *)*MEMORY[0x1E0DC4B60];
  v26[0] = 0x69662E6F65646976;
  v26[1] = 0xEA00000000006C6CLL;
  v26[2] = 2;
  v26[3] = v21;
  v27 = 0;
  v28 = 7;
  v29 = 0;
  v30 = 0;
  OUTLINED_FUNCTION_11_8();
  v22 = v21;
  v23 = static UIImage.symbolImage(for:)((uint64_t)v26);

  swift_bridgeObjectRelease();
  ControlsButtonProvider.image.setter(v23);
  swift_release_n();

  return v13;
}

Swift::Void __swiftcall ConversationControlsCountdownJoinButtonProvider.buttonChanged()()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  void *v4;

  ControlsButtonProvider.buttonChanged()();
  OUTLINED_FUNCTION_9_4();
  v1 = (void *)MEMORY[0x1C3B752C0](v0 + 16);
  if (v1)
  {
    v2 = v1;
    outlined bridged method (mbnn) of @objc NSObject.accessibilityIdentifier.setter(0xD000000000000013, 0x80000001BD66E280, v1);
    objc_msgSend(v2, sel_setClipsToBounds_, 1);
    objc_msgSend(v2, sel_addSubview_, *(_QWORD *)(v0 + 144));
    objc_msgSend(v2, sel_addTarget_action_forControlEvents_, v0, sel_cancelJoinCountdown, 64);
    v3 = objc_msgSend(v2, sel_imageView);
    if (v3)
    {
      v4 = v3;
      objc_msgSend(v3, sel_setAlpha_, 0.0);

    }
  }
}

Swift::Void __swiftcall ConversationControlsCountdownJoinButtonProvider.didLayoutSubviews(button:)(UIButton *button)
{
  uint64_t v1;
  void *v3;
  id v4;
  CGRect v5;

  v3 = *(void **)(v1 + 144);
  -[UIButton bounds](button, sel_bounds);
  objc_msgSend(v3, sel_setFrame_);
  v4 = -[UIButton layer](button, sel_layer);
  -[UIButton bounds](button, sel_bounds);
  objc_msgSend(v4, sel_setCornerRadius_, CGRectGetHeight(v5) * 0.5);
  OUTLINED_FUNCTION_15_9(v4);
}

Swift::Void __swiftcall ConversationControlsCountdownJoinButtonProvider.movedToWindow(button:)(UIButton *button)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  _BYTE *v17;
  id v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t ObjectType;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE v27[24];

  v3 = type metadata accessor for CountdownVoucher(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = &v27[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CountdownVoucher?);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = &v27[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = MEMORY[0x1E0C80A78](v7);
  v12 = &v27[-v11];
  v13 = MEMORY[0x1E0C80A78](v10);
  v15 = &v27[-v14];
  MEMORY[0x1E0C80A78](v13);
  v17 = &v27[-v16];
  v18 = -[UIButton window](button, sel_window);

  v19 = v1 + OBJC_IVAR____TtC15ConversationKit47ConversationControlsCountdownJoinButtonProvider_voucher;
  if (v18)
  {
    swift_beginAccess();
    outlined init with copy of CountdownVoucher?(v19, (uint64_t)v17);
    v20 = OUTLINED_FUNCTION_14_17((uint64_t)v17);
    outlined destroy of CountdownVoucher?((uint64_t)v17);
    if (v20 != 1)
      return;
    if (MEMORY[0x1C3B752C0](v1 + 168))
    {
      v21 = *(_QWORD *)(v1 + 176);
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v21 + 8))(v1, &protocol witness table for ConversationControlsCountdownJoinButtonProvider, ObjectType, v21);
      swift_unknownObjectRelease();
      v23 = 0;
    }
    else
    {
      v23 = 1;
    }
    OUTLINED_FUNCTION_8_27((uint64_t)v15, v23);
    v26 = (uint64_t)v15;
  }
  else
  {
    swift_beginAccess();
    outlined init with copy of CountdownVoucher?(v19, (uint64_t)v12);
    if (OUTLINED_FUNCTION_14_17((uint64_t)v12) == 1)
    {
      outlined destroy of CountdownVoucher?((uint64_t)v12);
      return;
    }
    outlined init with take of CountdownVoucher((uint64_t)v12, (uint64_t)v5);
    if (MEMORY[0x1C3B752C0](v1 + 168))
    {
      v24 = *(_QWORD *)(v1 + 176);
      v25 = swift_getObjectType();
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v24 + 16))(v5, v25, v24);
      swift_unknownObjectRelease();
    }
    outlined destroy of CountdownVoucher((uint64_t)v5);
    OUTLINED_FUNCTION_8_27((uint64_t)v9, 1);
    v26 = (uint64_t)v9;
  }
  outlined assign with take of CountdownVoucher?(v26, v19);
  swift_endAccess();
}

uint64_t ConversationControlsCountdownJoinButtonProvider.__ivar_destroyer()
{
  uint64_t v0;

  outlined destroy of weak ConversationControlsCountdownJoinButtonDelegate?(v0 + 152);
  outlined destroy of weak ConversationControlsCountdownJoinButtonDelegate?(v0 + 168);
  return outlined destroy of CountdownVoucher?(v0 + OBJC_IVAR____TtC15ConversationKit47ConversationControlsCountdownJoinButtonProvider_voucher);
}

uint64_t ConversationControlsCountdownJoinButtonProvider.deinit()
{
  uint64_t v0;

  v0 = ControlsButtonProvider.deinit();

  outlined destroy of weak ConversationControlsCountdownJoinButtonDelegate?(v0 + 152);
  outlined destroy of weak ConversationControlsCountdownJoinButtonDelegate?(v0 + 168);
  outlined destroy of CountdownVoucher?(v0 + OBJC_IVAR____TtC15ConversationKit47ConversationControlsCountdownJoinButtonProvider_voucher);
  return v0;
}

uint64_t ConversationControlsCountdownJoinButtonProvider.__deallocating_deinit()
{
  ConversationControlsCountdownJoinButtonProvider.deinit();
  return swift_deallocClassInstance();
}

uint64_t outlined init with copy of CountdownVoucher?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CountdownVoucher?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of CountdownVoucher?(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CountdownVoucher?);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t outlined init with take of CountdownVoucher(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CountdownVoucher(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of CountdownVoucher(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CountdownVoucher(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t outlined assign with take of CountdownVoucher?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CountdownVoucher?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of weak ConversationControlsCountdownJoinButtonDelegate?(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  return a1;
}

uint64_t dispatch thunk of ConversationControlsCountdownJoinButtonDelegate.invalidateDismissTimer()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ConversationControlsCountdownJoinButtonDelegate.scheduleDismissTimer()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ConversationControlsCountdownJoinButtonDelegate.joinConversation(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of ConversationControlsCountdownJoinButtonDelegate.cancelJoinCountdown()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t ObjC metadata update function for ConversationControlsCountdownJoinButtonProvider()
{
  return type metadata accessor for ConversationControlsCountdownJoinButtonProvider();
}

uint64_t type metadata accessor for ConversationControlsCountdownJoinButtonProvider()
{
  uint64_t result;

  result = type metadata singleton initialization cache for ConversationControlsCountdownJoinButtonProvider;
  if (!type metadata singleton initialization cache for ConversationControlsCountdownJoinButtonProvider)
    return swift_getSingletonMetadata();
  return result;
}

void type metadata completion function for ConversationControlsCountdownJoinButtonProvider()
{
  unint64_t v0;

  type metadata accessor for CountdownVoucher?();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void type metadata accessor for CountdownVoucher?()
{
  unint64_t v0;
  uint64_t v1;

  if (!lazy cache variable for type metadata for CountdownVoucher?)
  {
    type metadata accessor for CountdownVoucher(255);
    v0 = type metadata accessor for Optional();
    if (!v1)
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for CountdownVoucher?);
  }
}

uint64_t InCallControlsViewConstraintManager.type.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_2_0();
  return *(_QWORD *)(v0 + 72);
}

uint64_t InCallControlsViewConstraintManager.type.setter(uint64_t a1, char a2)
{
  uint64_t v2;

  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v2 + 72) = a1;
  *(_BYTE *)(v2 + 80) = a2;
  return InCallControlsViewConstraintManager.updateConstraints()();
}

void (*InCallControlsViewConstraintManager.type.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_2_0();
  return InCallControlsViewConstraintManager.type.modify;
}

void InCallControlsViewConstraintManager.type.modify(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    InCallControlsViewConstraintManager.updateConstraints()();
  OUTLINED_FUNCTION_0();
}

uint64_t InCallControlsViewConstraintManager.__allocating_init(containingGuide:containingView:controlsView:type:)(void *a1, void *a2, void *a3, uint64_t a4, char a5)
{
  uint64_t v10;

  v10 = swift_allocObject();
  InCallControlsViewConstraintManager.init(containingGuide:containingView:controlsView:type:)(a1, a2, a3, a4, a5);
  return v10;
}

uint64_t InCallControlsViewConstraintManager.init(containingGuide:containingView:controlsView:type:)(void *a1, void *a2, id a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  id v29;
  id v30;

  *(_QWORD *)(v5 + 64) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v5 + 72) = a4;
  *(_BYTE *)(v5 + 80) = a5;
  v9 = objc_msgSend(a3, sel_topAnchor);
  v10 = OUTLINED_FUNCTION_2_2((uint64_t)v9, sel_bottomAnchor);
  v11 = objc_msgSend(v9, sel_constraintEqualToAnchor_constant_, v10, -157.0);
  OUTLINED_FUNCTION_1_4();

  *(_QWORD *)(v5 + 56) = v6;
  v13 = OUTLINED_FUNCTION_123(v12, sel_heightAnchor);
  v14 = OUTLINED_FUNCTION_2_2((uint64_t)v13, sel_widthAnchor);
  v15 = OUTLINED_FUNCTION_0_12();
  OUTLINED_FUNCTION_1_4();

  *(_QWORD *)(v5 + 40) = v6;
  v17 = OUTLINED_FUNCTION_123(v16, sel_topAnchor);
  v18 = OUTLINED_FUNCTION_2_2((uint64_t)v17, sel_topAnchor);
  v19 = OUTLINED_FUNCTION_0_12();
  OUTLINED_FUNCTION_1_4();

  *(_QWORD *)(v5 + 48) = v6;
  v21 = OUTLINED_FUNCTION_123(v20, sel_leadingAnchor);
  v22 = OUTLINED_FUNCTION_2_2((uint64_t)v21, sel_leadingAnchor);
  v23 = OUTLINED_FUNCTION_0_12();
  OUTLINED_FUNCTION_1_4();

  *(_QWORD *)(v5 + 16) = v6;
  v25 = OUTLINED_FUNCTION_123(v24, sel_bottomAnchor);
  v26 = OUTLINED_FUNCTION_2_2((uint64_t)v25, sel_bottomAnchor);
  v27 = OUTLINED_FUNCTION_0_12();
  OUTLINED_FUNCTION_1_4();

  *(_QWORD *)(v5 + 24) = v6;
  v29 = OUTLINED_FUNCTION_123(v28, sel_widthAnchor);
  v30 = objc_msgSend(v29, sel_constraintEqualToConstant_, 345.0);

  *(_QWORD *)(v5 + 32) = v30;
  InCallControlsViewConstraintManager.updateConstraints()();

  return v5;
}

uint64_t InCallControlsViewConstraintManager.constraintsForLayout(_:in:deviceOrientation:)(uint64_t a1)
{
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  switch(*(_QWORD *)(a1 + 8))
  {
    case 0:
      OUTLINED_FUNCTION_6_23();
      v3 = 0;
      goto LABEL_6;
    case 1:
      OUTLINED_FUNCTION_6_23();
      v3 = 1;
LABEL_6:
      v4 = 2;
      goto LABEL_9;
    case 2:
      OUTLINED_FUNCTION_6_23();
      v3 = 0x404D000000000000;
      goto LABEL_8;
    case 3:
      OUTLINED_FUNCTION_6_23();
      v3 = 0x4052C00000000000;
LABEL_8:
      v4 = 0;
      goto LABEL_9;
    case 4:
    case 5:
    case 6:
      OUTLINED_FUNCTION_6_23();
      v3 = v2;
      v4 = 1;
LABEL_9:
      v1(v3, v4);
      result = swift_bridgeObjectRetain();
      break;
    default:
      result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
      __break(1u);
      break;
  }
  return result;
}

uint64_t InCallControlsViewConstraintManager.updateConstraints()()
{
  _QWORD *v0;
  _QWORD *v1;
  double v2;
  char v3;
  id *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  void (*v20)(void);
  uint64_t v21;
  void (*v22)(uint64_t);
  void *v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  id v47;
  id v48;
  uint64_t v50;
  uint64_t v51;

  v1 = v0;
  v2 = COERCE_DOUBLE(OUTLINED_FUNCTION_8_1());
  if (!v3)
  {
    v5 = (void *)v0[7];
    objc_msgSend(v5, sel_setConstant_, -(v2 + 157.0));
LABEL_8:
    v6 = (void *)v0[3];
    objc_msgSend(v6, sel_setConstant_, 0.0);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    v7 = OUTLINED_FUNCTION_5_10();
    *(_OWORD *)(v7 + 16) = xmmword_1BD644140;
    v8 = (void *)v0[2];
    *(_QWORD *)(v7 + 32) = v8;
    *(_QWORD *)(v7 + 40) = v6;
    v9 = (void *)v0[4];
    *(_QWORD *)(v7 + 48) = v9;
    *(_QWORD *)(v7 + 56) = v5;
    v10 = OUTLINED_FUNCTION_3_21();
    OUTLINED_FUNCTION_7_30(v10, v11, v12, v13, v14, v15, v16, v17, v50, v51);
    v18 = v8;
    goto LABEL_14;
  }
  if (v3 == 1)
  {
    if ((*(_QWORD *)&v2 | 2) == 3)
      v4 = (id *)(v0 + 5);
    else
      v4 = (id *)(v0 + 6);
    v9 = (void *)v0[3];
    v36 = *v4;
    objc_msgSend(v9, sel_setConstant_, 0.0);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    v37 = OUTLINED_FUNCTION_5_10();
    *(_OWORD *)(v37 + 16) = xmmword_1BD644140;
    v6 = (void *)v1[2];
    *(_QWORD *)(v37 + 32) = v6;
    *(_QWORD *)(v37 + 40) = v9;
    v5 = (void *)v1[4];
    *(_QWORD *)(v37 + 48) = v5;
    *(_QWORD *)(v37 + 56) = v36;
    v38 = OUTLINED_FUNCTION_3_21();
    OUTLINED_FUNCTION_7_30(v38, v39, v40, v41, v42, v43, v44, v45, v50, v51);
    goto LABEL_14;
  }
  v5 = (void *)v0[7];
  if (v2 != 0.0)
  {
    objc_msgSend(v5, sel_setConstant_, -157.0);
    goto LABEL_8;
  }
  static Layout.MediaPip.padding.getter();
  if (one-time initialization token for shared != -1)
    swift_once();
  v19 = static Defaults.shared;
  v20 = *(void (**)(void))(*(_QWORD *)static Defaults.shared + 384);
  v20();
  v21 = static Platform.current.getter();
  v22 = *(void (**)(uint64_t))(*(_QWORD *)v19 + 488);
  v22(v21);
  objc_msgSend(v5, sel_setConstant_, 16.0);
  v23 = (void *)v1[3];
  v24 = static Layout.MediaPip.padding.getter();
  ((void (*)(double))v20)(v24);
  v25 = static Platform.current.getter();
  v22(v25);
  objc_msgSend(v23, sel_setConstant_, 173.0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v26 = OUTLINED_FUNCTION_5_10();
  *(_OWORD *)(v26 + 16) = xmmword_1BD644140;
  v6 = (void *)v1[2];
  *(_QWORD *)(v26 + 32) = v5;
  *(_QWORD *)(v26 + 40) = v6;
  v9 = (void *)v1[4];
  *(_QWORD *)(v26 + 48) = v9;
  *(_QWORD *)(v26 + 56) = v23;
  v27 = OUTLINED_FUNCTION_3_21();
  OUTLINED_FUNCTION_7_30(v27, v28, v29, v30, v31, v32, v33, v34, v50, v51);
  v35 = v5;
  v5 = v23;
LABEL_14:
  v46 = v6;
  v47 = v9;
  v48 = v5;
  return swift_bridgeObjectRelease();
}

id *InCallControlsViewConstraintManager.deinit()
{
  id *v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t InCallControlsViewConstraintManager.__deallocating_deinit()
{
  InCallControlsViewConstraintManager.deinit();
  return swift_deallocClassInstance();
}

uint64_t protocol witness for ViewConstraintManager.constraintsForLayout(_:in:deviceOrientation:) in conformance InCallControlsViewConstraintManager()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 200))();
}

void sub_1BD05FAB0(uint64_t a1@<X8>)
{
  char v2;

  *(_QWORD *)a1 = OUTLINED_FUNCTION_8_1();
  *(_BYTE *)(a1 + 8) = v2;
  OUTLINED_FUNCTION_0();
}

void sub_1BD05FAD8(uint64_t a1, uint64_t a2)
{
  (*(void (**)(_QWORD, _QWORD))(**(_QWORD **)a2 + 176))(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8));
  OUTLINED_FUNCTION_0();
}

uint64_t type metadata accessor for InCallControlsViewConstraintManager()
{
  return objc_opt_self();
}

uint64_t method lookup function for InCallControlsViewConstraintManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InCallControlsViewConstraintManager.type.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of InCallControlsViewConstraintManager.type.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of InCallControlsViewConstraintManager.type.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of InCallControlsViewConstraintManager.__allocating_init(containingGuide:containingView:controlsView:type:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t dispatch thunk of InCallControlsViewConstraintManager.constraintsForLayout(_:in:deviceOrientation:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t getEnumTagSinglePayload for InCallControlsViewConstraintManager.InCallControlsLayoutType(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFE && *(_BYTE *)(a1 + 9))
    {
      v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 8);
      if (v3 <= 2)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InCallControlsViewConstraintManager.InCallControlsLayoutType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t getEnumTag for InCallControlsViewConstraintManager.InCallControlsLayoutType(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u)
    return *(unsigned __int8 *)(a1 + 8);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t destructiveInjectEnumTag for InCallControlsViewConstraintManager.InCallControlsLayoutType(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for InCallControlsViewConstraintManager.InCallControlsLayoutType()
{
  return &type metadata for InCallControlsViewConstraintManager.InCallControlsLayoutType;
}

id InCallControlsBaseCell.titleLabel.getter()
{
  return OUTLINED_FUNCTION_7(OBJC_IVAR____TtC15ConversationKit22InCallControlsBaseCell_titleLabel);
}

id InCallControlsBaseCell.button.getter()
{
  return OUTLINED_FUNCTION_7(OBJC_IVAR____TtC15ConversationKit22InCallControlsBaseCell_button);
}

void InCallControlsBaseCell.isEnabled.didset(char a1)
{
  uint64_t v1;
  int v2;
  unsigned __int8 *v3;

  v2 = a1 & 1;
  v3 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC15ConversationKit22InCallControlsBaseCell_isEnabled);
  swift_beginAccess();
  if (*v3 != v2)
    InCallControlsBaseCell.updateViews()();
}

uint64_t InCallControlsBaseCell.isEnabled.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC15ConversationKit22InCallControlsBaseCell_isEnabled);
  OUTLINED_FUNCTION_2_0();
  return *v1;
}

void InCallControlsBaseCell.isEnabled.setter(char a1)
{
  uint64_t v1;
  char *v3;
  char v4;

  v3 = (char *)(v1 + OBJC_IVAR____TtC15ConversationKit22InCallControlsBaseCell_isEnabled);
  OUTLINED_FUNCTION_2_0();
  v4 = *v3;
  *v3 = a1;
  InCallControlsBaseCell.isEnabled.didset(v4);
  OUTLINED_FUNCTION_9_0();
}

void InCallControlsBaseCell.isEnabled.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  _BYTE *v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit22InCallControlsBaseCell_isEnabled);
  OUTLINED_FUNCTION_2_0();
  *((_BYTE *)v3 + 32) = *v4;
  OUTLINED_FUNCTION_18();
}

void InCallControlsBaseCell.isEnabled.modify(uint64_t a1)
{
  void *v1;

  v1 = *(void **)a1;
  InCallControlsBaseCell.isEnabled.setter(*(_BYTE *)(*(_QWORD *)a1 + 32));
  free(v1);
}

uint64_t key path setter for InCallControlsBaseCell.delegate : InCallControlsBaseCell(uint64_t a1, _QWORD **a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(uint64_t (**)(uint64_t, uint64_t))((*MEMORY[0x1E0DEEDD8] & **a2) + 0xF0);
  v4 = swift_unknownObjectRetain();
  return v3(v4, v2);
}

uint64_t InCallControlsBaseCell.delegate.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit22InCallControlsBaseCell_delegate;
  OUTLINED_FUNCTION_2_0();
  return MEMORY[0x1C3B752C0](v1);
}

void InCallControlsBaseCell.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + OBJC_IVAR____TtC15ConversationKit22InCallControlsBaseCell_delegate;
  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_9_0();
}

void InCallControlsBaseCell.delegate.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC15ConversationKit22InCallControlsBaseCell_delegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  OUTLINED_FUNCTION_2_0();
  v6 = MEMORY[0x1C3B752C0](v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  OUTLINED_FUNCTION_18();
}

void InCallControlsBaseCell.delegate.modify(uint64_t a1, char a2)
{
  void *v3;

  v3 = *(void **)a1;
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a1 + 40) + *(_QWORD *)(*(_QWORD *)a1 + 48) + 8) = *(_QWORD *)(*(_QWORD *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  free(v3);
}

id InCallControlsBaseCell.__allocating_init(frame:)()
{
  Class v0;
  id v1;
  double v2;
  id v3;
  SEL v4;

  OUTLINED_FUNCTION_17_7();
  v1 = objc_allocWithZone(v0);
  v2 = OUTLINED_FUNCTION_15_0();
  return objc_msgSend(v3, v4, v2);
}

uint64_t InCallControlsBaseCell.init(frame:)()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  id v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  objc_super *v10;
  SEL v11;
  char *v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  Swift::String v21;
  Swift::String_optional v22;
  Swift::String v23;
  Swift::String v24;
  uint64_t v25;
  id v26;
  void *v27;
  void *v28;
  void *v29;
  id v30;
  id v31;
  void *v32;
  uint64_t v33;
  void *v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  id v49;
  id v50;
  id v51;
  uint64_t v52;
  void *v53;
  uint64_t result;
  void *v55;
  uint64_t v56;
  void *v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  unint64_t v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  char **v70;
  id v71;
  id v72;
  id v73;
  id v74;
  uint64_t v75;
  id v76;
  id v77;
  uint64_t v78;
  id v79;
  id v80;
  id v81;
  uint64_t v82;
  char v83;
  id v84;
  id v85;
  id v86;
  void *v87;
  Class isa;
  uint64_t v89;
  id v90;
  char *v91;
  uint64_t v92;
  __int128 v93;
  __int128 v94;
  uint64_t v95;
  Swift::String v96;

  OUTLINED_FUNCTION_17_7();
  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIBackgroundConfiguration?);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v89 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = OBJC_IVAR____TtC15ConversationKit22InCallControlsBaseCell_titleLabel;
  v5 = objc_allocWithZone(MEMORY[0x1E0DC3990]);
  v6 = v0;
  *(_QWORD *)&v0[v4] = objc_msgSend(v5, sel_init);
  v7 = OBJC_IVAR____TtC15ConversationKit22InCallControlsBaseCell_button;
  type metadata accessor for InCallControlButton();
  v95 = 0;
  v93 = 0u;
  v94 = 0u;
  *(_QWORD *)&v6[v7] = OUTLINED_FUNCTION_3_22();
  v6[OBJC_IVAR____TtC15ConversationKit22InCallControlsBaseCell_isAccessiblityConstraintsEnabled] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15ConversationKit22InCallControlsBaseCell_nameLabelFirstBaselineLayoutConstraint] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15ConversationKit22InCallControlsBaseCell_nameLabelLastBaselineLayoutConstraint] = 0;
  v6[OBJC_IVAR____TtC15ConversationKit22InCallControlsBaseCell_isEnabled] = 1;
  OUTLINED_FUNCTION_8_21(OBJC_IVAR____TtC15ConversationKit22InCallControlsBaseCell_delegate);

  v8 = type metadata accessor for InCallControlsBaseCell();
  v91 = v6;
  v92 = v8;
  v9 = OUTLINED_FUNCTION_15_0();
  v12 = (char *)objc_msgSendSuper2(v10, v11, v9);
  if (static Platform.current.getter() == 2)
  {
    static UIBackgroundConfiguration.listPlainCell()();
    v13 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
    UIBackgroundConfiguration.backgroundColor.setter();
  }
  else
  {
    static UIBackgroundConfiguration.listGroupedCell()();
    v14 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
    UIBackgroundConfiguration.backgroundColor.setter();
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIVibrancyEffect);
    static UIVibrancyEffect.inCallControlsEffect.getter();
    UIBackgroundConfiguration.visualEffect.setter();
  }
  v15 = type metadata accessor for UIBackgroundConfiguration();
  __swift_storeEnumTagSinglePayload((uint64_t)v3, 0, 1, v15);
  MEMORY[0x1C3B7370C](v3);
  OUTLINED_FUNCTION_18_4(v12, sel_setAutomaticallyUpdatesBackgroundConfiguration_);
  v16 = OBJC_IVAR____TtC15ConversationKit22InCallControlsBaseCell_titleLabel;
  v17 = *(void **)&v12[OBJC_IVAR____TtC15ConversationKit22InCallControlsBaseCell_titleLabel];
  v18 = (void *)objc_opt_self();
  v19 = v17;
  v20 = objc_msgSend(v18, sel_conversationKit);
  v96._object = (void *)0xE000000000000000;
  v21._object = (void *)0x80000001BD66E440;
  v21._countAndFlagsBits = 0xD000000000000011;
  v22.value._countAndFlagsBits = 0x61737265766E6F43;
  v22.value._object = (void *)0xEF74694B6E6F6974;
  v23._countAndFlagsBits = 0;
  v23._object = (void *)0xE000000000000000;
  v96._countAndFlagsBits = 0;
  v24 = NSLocalizedString(_:tableName:bundle:value:comment:)(v21, v22, (NSBundle)v20, v23, v96);

  outlined bridged method (mbnn) of @objc UILabel.text.setter(v24._countAndFlagsBits, (uint64_t)v24._object, v19);
  v25 = one-time initialization token for tableViewCellTitleLabel;
  v26 = *(id *)&v12[v16];
  if (v25 != -1)
    swift_once();
  objc_msgSend(v26, sel_setTextColor_, static Colors.InCallControls.tableViewCellTitleLabel);

  v27 = *(void **)&v12[v16];
  v28 = (void *)objc_opt_self();
  v29 = (void *)*MEMORY[0x1E0DC4A88];
  v30 = v27;
  v31 = objc_msgSend(v28, sel_preferredFontForTextStyle_, v29);
  UIFont.caseSensitive()();
  OUTLINED_FUNCTION_14_18();
  objc_msgSend(v30, sel_setFont_, v29);

  v32 = *(void **)&v12[v16];
  objc_msgSend(v32, sel_setAdjustsFontForContentSizeCategory_, 1);
  v33 = OBJC_IVAR____TtC15ConversationKit22InCallControlsBaseCell_button;
  v34 = *(void **)&v12[OBJC_IVAR____TtC15ConversationKit22InCallControlsBaseCell_button];
  objc_msgSend(v34, sel_addTarget_action_forControlEvents_, v12, sel_didTapButton_, 64);
  v35 = v32;
  v36 = v34;
  v37 = OUTLINED_FUNCTION_18_4(v35, sel_setTranslatesAutoresizingMaskIntoConstraints_);
  v38 = OUTLINED_FUNCTION_123((uint64_t)v37, sel_contentView);
  objc_msgSend(v38, sel_addSubview_, v35);

  v39 = v36;
  v40 = OUTLINED_FUNCTION_18_4(v39, sel_setTranslatesAutoresizingMaskIntoConstraints_);
  v41 = OUTLINED_FUNCTION_123((uint64_t)v40, sel_contentView);
  objc_msgSend(v41, sel_addSubview_, v39);

  v42 = objc_msgSend(*(id *)&v12[v16], sel_firstBaselineAnchor);
  v43 = OUTLINED_FUNCTION_123((uint64_t)v42, sel_contentView);
  v44 = objc_msgSend(v43, sel_topAnchor);
  OUTLINED_FUNCTION_19_5();
  v45 = objc_msgSend(v42, sel_constraintEqualToAnchor_, v41);
  OUTLINED_FUNCTION_14_18();

  v46 = OBJC_IVAR____TtC15ConversationKit22InCallControlsBaseCell_nameLabelFirstBaselineLayoutConstraint;
  v47 = *(void **)&v12[OBJC_IVAR____TtC15ConversationKit22InCallControlsBaseCell_nameLabelFirstBaselineLayoutConstraint];
  *(_QWORD *)&v12[OBJC_IVAR____TtC15ConversationKit22InCallControlsBaseCell_nameLabelFirstBaselineLayoutConstraint] = v43;

  v49 = objc_msgSend(OUTLINED_FUNCTION_123(v48, sel_contentView), sel_bottomAnchor);
  OUTLINED_FUNCTION_14_18();
  v50 = objc_msgSend(*(id *)&v12[v16], sel_lastBaselineAnchor);
  v51 = objc_msgSend(v43, sel_constraintEqualToAnchor_, v50);
  OUTLINED_FUNCTION_19_5();

  v52 = OBJC_IVAR____TtC15ConversationKit22InCallControlsBaseCell_nameLabelLastBaselineLayoutConstraint;
  v53 = *(void **)&v12[OBJC_IVAR____TtC15ConversationKit22InCallControlsBaseCell_nameLabelLastBaselineLayoutConstraint];
  *(_QWORD *)&v12[OBJC_IVAR____TtC15ConversationKit22InCallControlsBaseCell_nameLabelLastBaselineLayoutConstraint] = v41;

  InCallControlsBaseCell.updateConstraintsConstants()();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_1BD644B60;
  v55 = *(void **)&v12[v46];
  if (!v55)
  {
    __break(1u);
    goto LABEL_23;
  }
  v56 = result;
  *(_QWORD *)(result + 32) = v55;
  v57 = *(void **)&v12[v52];
  if (!v57)
  {
LABEL_23:
    __break(1u);
    return result;
  }
  *(_QWORD *)(result + 40) = v57;
  v58 = v55;
  v59 = OUTLINED_FUNCTION_9((uint64_t)v57, sel_trailingAnchor);
  v60 = OUTLINED_FUNCTION_123((uint64_t)v59, (const char *)&selRef_setMarqueeRunning_);
  v61 = objc_msgSend(v60, (SEL)&selRef_setDateFormat_);

  v62 = objc_msgSend(v59, sel_constraintEqualToAnchor_constant_, v61, -10.0);
  OUTLINED_FUNCTION_19_5();

  *(_QWORD *)(v56 + 48) = v60;
  *(_QWORD *)&v93 = v56;
  specialized Array._endMutation()();
  v63 = v93;
  v64 = objc_msgSend(*(id *)&v12[v33], sel_leadingAnchor);
  v65 = OUTLINED_FUNCTION_123((uint64_t)v64, (const char *)&selRef_setMarqueeRunning_);
  v66 = objc_msgSend(v65, (SEL)&selRef_activeCall + 6);

  v90 = objc_msgSend(v64, sel_constraintEqualToAnchor_constant_, v66, 14.0);
  v67 = objc_msgSend(*(id *)&v12[v33], sel_centerYAnchor);
  v68 = OUTLINED_FUNCTION_123((uint64_t)v67, (const char *)&selRef_setMarqueeRunning_);
  v69 = objc_msgSend(v68, sel_centerYAnchor);

  v70 = &selRef_associatedAppBundleIdentifier;
  v71 = objc_msgSend(v67, sel_constraintEqualToAnchor_, v69);

  v72 = OUTLINED_FUNCTION_20_17(*(void **)&v12[v16]);
  v73 = objc_msgSend(*(id *)&v12[v33], sel_trailingAnchor);
  v74 = objc_msgSend(v72, sel_constraintEqualToAnchor_constant_, v73, 10.0);

  v76 = OUTLINED_FUNCTION_123(v75, sel_separatorLayoutGuide);
  v77 = OUTLINED_FUNCTION_20_17(v76);

  v79 = OUTLINED_FUNCTION_123(v78, sel_contentView);
  v80 = OUTLINED_FUNCTION_20_17(v79);

  v81 = objc_msgSend(v77, sel_constraintEqualToAnchor_, v80);
  if (v63 >> 62)
  {
    swift_bridgeObjectRetain();
    v82 = _CocoaArrayWrapper.endIndex.getter();
    OUTLINED_FUNCTION_27();
  }
  else
  {
    v82 = *(_QWORD *)((v63 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (__OFADD__(v82, 4))
  {
    __break(1u);
    goto LABEL_21;
  }
  specialized Array._reserveCapacityImpl(minimumCapacity:growForAppend:)(v82 + 4, 1);
  specialized Array._endMutation()();
  v70 = (char **)v90;
  MEMORY[0x1C3B7301C]();
  OUTLINED_FUNCTION_2_35();
  if (v83)
LABEL_21:
    OUTLINED_FUNCTION_0_30();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  v84 = v71;
  MEMORY[0x1C3B7301C]();
  OUTLINED_FUNCTION_2_35();
  if (v83)
    OUTLINED_FUNCTION_0_30();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  v85 = v74;
  MEMORY[0x1C3B7301C]();
  OUTLINED_FUNCTION_2_35();
  if (v83)
    OUTLINED_FUNCTION_0_30();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  v86 = v81;
  MEMORY[0x1C3B7301C]();
  OUTLINED_FUNCTION_2_35();
  if (v83)
    OUTLINED_FUNCTION_0_30();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();

  v87 = (void *)objc_opt_self();
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v87, sel_activateConstraints_, isa);

  return (uint64_t)v12;
}

id InCallControlsBaseCell.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void InCallControlsBaseCell.init(coder:)()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0;
  v2 = OBJC_IVAR____TtC15ConversationKit22InCallControlsBaseCell_titleLabel;
  *(_QWORD *)&v1[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  v3 = OBJC_IVAR____TtC15ConversationKit22InCallControlsBaseCell_button;
  type metadata accessor for InCallControlButton();
  *(_QWORD *)&v1[v3] = OUTLINED_FUNCTION_3_22();
  v1[OBJC_IVAR____TtC15ConversationKit22InCallControlsBaseCell_isAccessiblityConstraintsEnabled] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit22InCallControlsBaseCell_nameLabelFirstBaselineLayoutConstraint] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit22InCallControlsBaseCell_nameLabelLastBaselineLayoutConstraint] = 0;
  v1[OBJC_IVAR____TtC15ConversationKit22InCallControlsBaseCell_isEnabled] = 1;
  OUTLINED_FUNCTION_8_21(OBJC_IVAR____TtC15ConversationKit22InCallControlsBaseCell_delegate);

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t InCallControlsBaseCell.didTapButton(_:)()
{
  uint64_t *v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;

  result = OUTLINED_FUNCTION_16_3(*v0);
  if (result)
  {
    v3 = v2;
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v3 + 8))(v0, ObjectType, v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

void InCallControlsBaseCell.updateViews()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  id v8;
  char v9;
  id v10;

  if (one-time initialization token for conversationKit != -1)
    swift_once();
  static os_log_type_t.default.getter();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1BD6441D0;
  v2 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0);
  v2();
  v3 = String.init<A>(reflecting:)();
  v5 = v4;
  *(_QWORD *)(v1 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v1 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v1 + 32) = v3;
  *(_QWORD *)(v1 + 40) = v5;
  os_log(_:dso:log:type:_:)();
  v6 = swift_bridgeObjectRelease();
  v7 = ((uint64_t (*)(uint64_t))v2)(v6);
  v8 = OUTLINED_FUNCTION_11_20(v7);
  v9 = ((uint64_t (*)(id))v2)(v8);
  v10 = OUTLINED_FUNCTION_11_20(v9);
  objc_msgSend(v0, sel_setUserInteractionEnabled_, ((uint64_t (*)(id))v2)(v10) & 1);
  OUTLINED_FUNCTION_6_2();
}

Swift::Void __swiftcall InCallControlsBaseCell.traitCollectionDidChange(_:)(UITraitCollection_optional a1)
{
  void *v1;
  Class isa;
  id v3;
  void *v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;
  uint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v21;
  objc_super v22;

  isa = a1.value.super.isa;
  v22.receiver = v1;
  v22.super_class = (Class)type metadata accessor for InCallControlsBaseCell();
  objc_msgSendSuper2(&v22, sel_traitCollectionDidChange_, isa);
  v3 = objc_msgSend(v1, sel_traitCollection);
  v4 = v3;
  if (isa)
  {
    v3 = OUTLINED_FUNCTION_9((uint64_t)v3, sel_preferredContentSizeCategory);
    isa = (Class)v3;
  }
  v5 = OUTLINED_FUNCTION_123((uint64_t)v3, sel_preferredContentSizeCategory);
  v6 = v5;
  if (isa)
  {
    v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v9 = v8;
    if (v7 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v9 == v10)
    {

      OUTLINED_FUNCTION_22_5();
LABEL_21:

      goto LABEL_22;
    }
    v12 = OUTLINED_FUNCTION_4_13();

    swift_bridgeObjectRelease();
    v13 = swift_bridgeObjectRelease();
    if ((v12 & 1) != 0)
      goto LABEL_21;
  }
  else
  {

  }
  v14 = OUTLINED_FUNCTION_123(v13, sel_preferredContentSizeCategory);
  v15 = UIContentSizeCategory.isAccessibilityCategory.getter();

  if (!isa)
  {
LABEL_17:
    if ((v15 & 1) != *((_BYTE *)v1
                      + OBJC_IVAR____TtC15ConversationKit22InCallControlsBaseCell_isAccessiblityConstraintsEnabled))
      *((_BYTE *)v1 + OBJC_IVAR____TtC15ConversationKit22InCallControlsBaseCell_isAccessiblityConstraintsEnabled) = v15 & 1;
    InCallControlsBaseCell.updateConstraintsConstants()();
    goto LABEL_21;
  }
  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v18 = v17;
  if (v16 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v18 == v19)
  {
    OUTLINED_FUNCTION_22_5();
  }
  else
  {
    v21 = OUTLINED_FUNCTION_4_13();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v21 & 1) == 0)
      goto LABEL_17;
  }

  if ((v15 & 1) != *((_BYTE *)v1
                    + OBJC_IVAR____TtC15ConversationKit22InCallControlsBaseCell_isAccessiblityConstraintsEnabled))
    *((_BYTE *)v1 + OBJC_IVAR____TtC15ConversationKit22InCallControlsBaseCell_isAccessiblityConstraintsEnabled) = v15 & 1;
LABEL_22:
  OUTLINED_FUNCTION_6_2();
}

void InCallControlsBaseCell.updateConstraintsConstants()()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  double v6;
  id v7;
  void *v8;
  void *v9;
  uint64_t v10;
  id v11;
  void *v12;
  double v13;
  id v14;
  id v15;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit22InCallControlsBaseCell_nameLabelFirstBaselineLayoutConstraint);
  if (!v1)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v2 = v0;
  v3 = one-time initialization token for tableHeaderSingleLabelTopConstraintConstant;
  v4 = v1;
  v5 = v4;
  if (v3 != -1)
    v4 = (id)swift_once();
  v6 = *(double *)&static Fonts.InCallControls.tableHeaderSingleLabelTopConstraintConstant;
  v7 = OUTLINED_FUNCTION_9((uint64_t)v4, sel_font);
  if (!v7)
    goto LABEL_11;
  v8 = v7;
  NSLayoutConstraint.setConstant(_:scaledToFont:)(v7, v6);

  v9 = *(void **)(v2 + OBJC_IVAR____TtC15ConversationKit22InCallControlsBaseCell_nameLabelLastBaselineLayoutConstraint);
  if (!v9)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v10 = one-time initialization token for tableHeaderSingleLabelBottomConstraintConstant;
  v11 = v9;
  v12 = v11;
  if (v10 != -1)
    v11 = (id)swift_once();
  v13 = *(double *)&static Fonts.InCallControls.tableHeaderSingleLabelBottomConstraintConstant;
  v14 = OUTLINED_FUNCTION_9((uint64_t)v11, sel_font);
  if (v14)
  {
    v15 = v14;
    NSLayoutConstraint.setConstant(_:scaledToFont:)(v14, v13);

    return;
  }
LABEL_13:
  __break(1u);
}

id InCallControlsBaseCell.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InCallControlsBaseCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for InCallControlsBaseCell()
{
  return objc_opt_self();
}

uint64_t specialized Array._reserveCapacityImpl(minimumCapacity:growForAppend:)(uint64_t a1, char a2)
{
  uint64_t *v2;
  unint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *v2;
  result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v2 = v5;
  v7 = 0;
  if ((result & 1) != 0 && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    if (a1 <= *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x18) >> 1)
      return result;
    v7 = 1;
  }
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    v8 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8 <= a1)
    v9 = a1;
  else
    v9 = v8;
  result = MEMORY[0x1C3B73D24](v7, v9, a2 & 1, v5);
  *v2 = result;
  return result;
}

void outlined bridged method (mbnn) of @objc UILabel.text.setter(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;

  v4 = (id)MEMORY[0x1C3B72E00]();
  OUTLINED_FUNCTION_27();
  objc_msgSend(a3, sel_setText_, v4);

}

void sub_1BD061228(_QWORD **a1@<X0>, _BYTE *a2@<X8>)
{
  *a2 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0xD0))() & 1;
  OUTLINED_FUNCTION_0();
}

void sub_1BD061268(unsigned __int8 *a1, _QWORD **a2)
{
  (*(void (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & **a2) + 0xD8))(*a1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD0612A0(uint64_t **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;

  *a2 = OUTLINED_FUNCTION_16_3(**a1);
  a2[1] = v3;
  OUTLINED_FUNCTION_0();
}

uint64_t method lookup function for InCallControlsBaseCell()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InCallControlsBaseCell.isEnabled.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of InCallControlsBaseCell.isEnabled.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of InCallControlsBaseCell.isEnabled.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of InCallControlsBaseCell.delegate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of InCallControlsBaseCell.delegate.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of InCallControlsBaseCell.delegate.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of InCallControlsBaseCellDelegate.inCallControlsBaseCellDidTapButton(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

id SystemApertureEmptyTrailingView.__allocating_init(frame:)()
{
  Class v0;
  id v1;
  double v2;
  id v3;
  SEL v4;

  OUTLINED_FUNCTION_17_7();
  v1 = objc_allocWithZone(v0);
  v2 = OUTLINED_FUNCTION_15_0();
  return objc_msgSend(v3, v4, v2);
}

id SystemApertureEmptyTrailingView.init(frame:)()
{
  double v0;
  objc_super *v1;
  SEL v2;
  id v3;
  uint64_t v4;
  void *v5;
  os_log_type_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_17_7();
  swift_getObjectType();
  type metadata accessor for SystemApertureEmptyTrailingView();
  v0 = OUTLINED_FUNCTION_15_0();
  v3 = objc_msgSendSuper2(v1, v2, v0);
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v4 = type metadata accessor for Logger();
  __swift_project_value_buffer(v4, (uint64_t)&static Logger.conversationControls);
  v5 = (void *)Logger.logObject.getter();
  v6 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_4_14(v6))
  {
    OUTLINED_FUNCTION_7_31();
    OUTLINED_FUNCTION_5_11();
    v7 = OUTLINED_FUNCTION_2_26(4.8751e-34);
    OUTLINED_FUNCTION_10_22(v7, v8, v9);
    OUTLINED_FUNCTION_0_31();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_3_23(&dword_1BD004000, v10, v11, "[SystemAperture] %{public}s created");
    OUTLINED_FUNCTION_6_3();
    OUTLINED_FUNCTION_60();
  }

  return v3;
}

uint64_t type metadata accessor for SystemApertureEmptyTrailingView()
{
  return objc_opt_self();
}

id SystemApertureEmptyTrailingView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void SystemApertureEmptyTrailingView.init(coder:)()
{
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

id SystemApertureEmptyTrailingView.__deallocating_deinit()
{
  void *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  os_log_type_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  objc_super v11;

  v1 = v0;
  swift_getObjectType();
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v2 = type metadata accessor for Logger();
  __swift_project_value_buffer(v2, (uint64_t)&static Logger.conversationControls);
  v3 = (void *)Logger.logObject.getter();
  v4 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_4_14(v4))
  {
    OUTLINED_FUNCTION_7_31();
    OUTLINED_FUNCTION_5_11();
    v5 = OUTLINED_FUNCTION_2_26(4.8751e-34);
    OUTLINED_FUNCTION_10_22(v5, v6, v7);
    OUTLINED_FUNCTION_0_31();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_3_23(&dword_1BD004000, v8, v9, "[SystemAperture] %{public}s deinit");
    OUTLINED_FUNCTION_6_3();
    OUTLINED_FUNCTION_60();
  }

  v11.receiver = v1;
  v11.super_class = (Class)type metadata accessor for SystemApertureEmptyTrailingView();
  return objc_msgSendSuper2(&v11, sel_dealloc);
}

CGSize __swiftcall SystemApertureEmptyTrailingView.sizeThatFits(_:)(CGSize a1)
{
  double v1;
  double v2;
  CGSize result;

  v1 = 1.0;
  v2 = 1.0;
  result.height = v2;
  result.width = v1;
  return result;
}

id SystemApertureEmptyTrailingView.sizeThatFits(_:for:)()
{
  void *v0;

  return objc_msgSend(v0, sel_sizeThatFits_);
}

uint64_t method lookup function for SystemApertureEmptyTrailingView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SystemApertureEmptyTrailingView.sizeThatFits(_:for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x50))();
}

uint64_t one-time initialization function for shared()
{
  uint64_t result;

  type metadata accessor for SystemApertureIconFactory();
  result = swift_initStaticObject();
  static SystemApertureIconFactory.shared = result;
  return result;
}

{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for ConversationControlsRecipeGenerator();
  v0 = OUTLINED_FUNCTION_15();
  result = ConversationControlsRecipeGenerator.init()();
  static ConversationControlsRecipeGenerator.shared = v0;
  return result;
}

{
  uint64_t result;

  type metadata accessor for CallScreeningRTTHelper();
  swift_allocObject();
  result = CallScreeningRTTHelper.().init()();
  static CallScreeningRTTHelper.shared = result;
  return result;
}

{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for ConversationHUDMenuController();
  OUTLINED_FUNCTION_7_0();
  result = OUTLINED_FUNCTION_0_114();
  static ConversationHUDMenuController.shared = v0;
  return result;
}

{
  uint64_t result;

  type metadata accessor for CarrierBundleSettings();
  result = CarrierBundleSettings.__allocating_init()();
  static CarrierBundleSettings.shared = result;
  return result;
}

{
  uint64_t v0;
  uint64_t v1;
  _UNKNOWN **v2;
  __int128 v4;
  uint64_t v5;
  _UNKNOWN **v6;

  if (static Platform.current.getter() == 1)
  {
    v0 = type metadata accessor for iPadFeatureSupportChecker();
    v1 = OUTLINED_FUNCTION_1_123();
    v2 = &protocol witness table for iPadFeatureSupportChecker;
  }
  else
  {
    v0 = type metadata accessor for iPhoneFeatureSupportChecker();
    v1 = OUTLINED_FUNCTION_1_123();
    v2 = &protocol witness table for iPhoneFeatureSupportChecker;
  }
  *(_BYTE *)(v1 + 16) = 1;
  v5 = v0;
  v6 = v2;
  *(_QWORD *)&v4 = v1;
  return outlined init with take of Notice(&v4, (uint64_t)&static PlatformFeatureChecker.shared);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  type metadata accessor for IMCoreCollaborationImageProvider();
  OUTLINED_FUNCTION_15();
  type metadata accessor for CollaborationImageFetcher();
  v0 = OUTLINED_FUNCTION_15();
  v1 = swift_retain();
  v2 = specialized CollaborationImageFetcher.init(provider:)(v1, v0);
  result = swift_release();
  static CollaborationImageFetcher.shared = v2;
  return result;
}

{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for CallScreeningActor.ActorType();
  v0 = OUTLINED_FUNCTION_60_1();
  result = swift_defaultActor_initialize();
  static CallScreeningActor.shared = v0;
  return result;
}

{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for ObjectTracker();
  v0 = swift_allocObject();
  result = ObjectTracker.init(onReportFailure:)((uint64_t)closure #1 in variable initialization expression of static ObjectTracker.shared, 0);
  static ObjectTracker.shared = v0;
  return result;
}

void SystemApertureIconFactory.__allocating_init()()
{
  uint64_t v0;
  _BYTE v1[168];

  v0 = swift_allocObject() + 16;
  _s15ConversationKit25SystemApertureIconFactoryC0cdE3Set33_15DC8AE79B2F79D7CD5A12680A8D832BLLVSgWOi0_((uint64_t)v1);
  outlined init with take of SystemApertureIconFactory.SystemApertureIconSet?((uint64_t)v1, v0, &demangling cache variable for type metadata for SystemApertureIconFactory.SystemApertureIconSet?);
  OUTLINED_FUNCTION_33_4();
}

uint64_t *SystemApertureIconFactory.shared.unsafeMutableAddressor()
{
  if (one-time initialization token for shared != -1)
    swift_once();
  return &static SystemApertureIconFactory.shared;
}

uint64_t static SystemApertureIconFactory.shared.getter()
{
  type metadata accessor for SystemApertureIconFactory();
  return swift_initStaticObject();
}

uint64_t SystemApertureIconFactory.SymbolIcon.accessibilityLabel.getter()
{
  uint64_t v0;
  void *v1;
  id v2;
  Swift::String v3;
  Swift::String_optional v4;
  Swift::String v5;
  uint64_t countAndFlagsBits;
  Swift::String v8;

  if (one-time initialization token for conversationKit != -1)
    swift_once();
  v0 = unk_1EF4FCB30;
  v1 = (void *)qword_1EF4FCB38;
  v2 = (id)static LocalizationSource.conversationKit;
  swift_bridgeObjectRetain();
  v8._object = (void *)0xE000000000000000;
  v3._countAndFlagsBits = 0x414C504552414853;
  v3._object = (void *)0xE900000000000059;
  v4.value._countAndFlagsBits = v0;
  v4.value._object = v1;
  v5._countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  v8._countAndFlagsBits = 0;
  countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v3, v4, (NSBundle)v2, v5, v8)._countAndFlagsBits;
  swift_bridgeObjectRelease();

  return countAndFlagsBits;
}

BOOL SystemApertureIconFactory.SymbolIcon.init(rawValue:)(Swift::String string)
{
  void *object;
  Swift::String v2;
  Swift::Int v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of SystemApertureIconFactory.SymbolIcon.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  return v3 != 0;
}

id SystemApertureIconFactory.CallDescriptor.statusSymbolAssetPackage.getter@<X0>(id result@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;

  if ((unsigned __int16)result >> 14 == 1)
  {
    if (one-time initialization token for faceTimeVideo != -1)
      swift_once();
    v3 = &static AssetPackageDescriptor.faceTimeVideo;
  }
  else
  {
    if ((unsigned __int16)result >> 14)
    {
      v5 = 0;
      v4 = 0;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      goto LABEL_11;
    }
    if (one-time initialization token for phoneInCall != -1)
      swift_once();
    v3 = &static AssetPackageDescriptor.phoneInCall;
  }
  v5 = *v3;
  v4 = v3[1];
  v6 = (void *)v3[2];
  v7 = v3[3];
  v8 = v3[4];
  OUTLINED_FUNCTION_8_8();
  swift_bridgeObjectRetain();
  result = v6;
LABEL_11:
  *a2 = v5;
  a2[1] = v4;
  a2[2] = (uint64_t)v6;
  a2[3] = v7;
  a2[4] = v8;
  return result;
}

uint64_t SystemApertureIconFactory.CallDescriptor.statusSymbolName.getter(unsigned __int16 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)nullsub_1 + 4 * byte_1BD644C10[a1 >> 14]))(0x69662E656E6F6870, 0xEA00000000006C6CLL);
}

uint64_t sub_1BD061AB4@<X0>(unsigned __int16 a1@<W8>)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)nullsub_1 + 4 * byte_1BD644C14[a1 - 49152]))(0x6F642E656E6F6870, 0xEF6C6C69662E6E77);
}

uint64_t sub_1BD061AF4()
{
  return 0x69662E6F65646976;
}

uint64_t sub_1BD061B10()
{
  return 0x616C706572616873;
}

uint64_t sub_1BD061B2C()
{
  return 0x6D726F6665766177;
}

unint64_t sub_1BD061B44()
{
  return 0xD000000000000016;
}

uint64_t sub_1BD061B60()
{
  return 0x6E6964726F636572;
}

void SystemApertureIconFactory.CallDescriptor.statusSymbolTintColor.getter(__int16 a1)
{
  __asm { BR              X10 }
}

id sub_1BD061BAC()
{
  return objc_msgSend((id)objc_opt_self(), sel_systemGreenColor);
}

void sub_1BD061C3C()
{
  objc_opt_self();
  JUMPOUT(0x1BD061C24);
}

void sub_1BD061C54()
{
  objc_opt_self();
  JUMPOUT(0x1BD061C24);
}

void SystemApertureIconFactory.CallDescriptor.symbolAccessibilityLabel.getter(__int16 a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1BD061CD0()
{
  void *v0;
  id v1;
  Swift::String v2;
  Swift::String_optional v3;
  Swift::String v4;
  uint64_t v5;
  uint64_t countAndFlagsBits;
  uint64_t v8;

  v1 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  OUTLINED_FUNCTION_6_8();
  v2._countAndFlagsBits = 1280065859;
  v2._object = (void *)0xE400000000000000;
  v3.value._countAndFlagsBits = 0x61737265766E6F43;
  v3.value._object = (void *)0xEF74694B6E6F6974;
  v4._countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  v5 = 0;
  countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, v3, (NSBundle)v0, v4, *(Swift::String *)(&v8 - 1))._countAndFlagsBits;

  return countAndFlagsBits;
}

void sub_1BD061E0C()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  OUTLINED_FUNCTION_36_14();
  JUMPOUT(0x1BD061E3CLL);
}

void sub_1BD061E50()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  OUTLINED_FUNCTION_6_8();
  JUMPOUT(0x1BD061DACLL);
}

void sub_1BD061E94()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  OUTLINED_FUNCTION_6_8();
  JUMPOUT(0x1BD061DB0);
}

void sub_1BD061ED4()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  OUTLINED_FUNCTION_6_8();
  JUMPOUT(0x1BD061DB0);
}

void sub_1BD061F18()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  JUMPOUT(0x1BD061DB0);
}

double SystemApertureIconFactory.CallDescriptor.leadingOffsetForConcentricWhenCompact.getter(unsigned __int16 a1)
{
  BOOL v1;
  double result;
  Swift::String v3;

  v3._countAndFlagsBits = SystemApertureIconFactory.CallDescriptor.statusSymbolName.getter(a1);
  v1 = SystemApertureIconFactory.SymbolIcon.init(rawValue:)(v3);
  result = 0.0;
  if (!v1)
    return 3.0;
  return result;
}

void SystemApertureIconFactory.CallDescriptor.statusIcon.getter(void *a1@<X0>, int64x2_t *a2@<X8>)
{
  unsigned __int16 v2;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  _DWORD *v20;
  _DWORD *v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  int v28;
  uint64_t v30;
  void *v31;
  os_log_type_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  int64x2_t v37;
  uint64_t v38;
  uint64_t v39[5];
  void *v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  Swift::String v45;
  Swift::String v46;

  v2 = (unsigned __int16)a1;
  SystemApertureIconFactory.CallDescriptor.statusSymbolAssetPackage.getter(a1, v39);
  outlined init with take of SystemApertureIconFactory.SystemApertureIconSet?((uint64_t)v39, (uint64_t)&v40, &demangling cache variable for type metadata for AssetPackageDescriptor?);
  v4 = v41;
  if (v41)
  {
    v5 = v40;
    v6 = v42;
    v7 = v43;
    v8 = v44;
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_8_8();
    v9 = v6;
    SystemApertureIconFactory.CallDescriptor.symbolAccessibilityLabel.getter(v2);
    v11 = v10;
    v13 = v12;
    v45._countAndFlagsBits = SystemApertureIconFactory.CallDescriptor.statusSymbolName.getter(v2);
    v14 = SystemApertureIconFactory.SymbolIcon.init(rawValue:)(v45);
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    v15 = v2 >> 14;
    if ((v15 - 1) >= 2)
    {
      if (v15 != 3 || (unsigned __int16)(v2 + 0x3FFF) >= 7u)
        v16 = 0;
      else
        v16 = qword_1BD644DD8[(__int16)(v2 + 0x3FFF)];
    }
    else
    {
      v16 = 1;
    }
    v36 = 0x4008000000000000;
    if (v14)
      v36 = 0;
    v37 = vdupq_n_s64(1uLL);
    v37.i64[0] = v8;
  }
  else
  {
    v17 = SystemApertureIconFactory.CallDescriptor.statusSymbolName.getter(v2);
    v19 = v18;
    OUTLINED_FUNCTION_17_8(v17, (unint64_t *)&lazy cache variable for type metadata for UIImage);
    OUTLINED_FUNCTION_25_2();
    SystemApertureIconFactory.CallDescriptor.statusSymbolTintColor.getter(v2);
    v21 = v20;
    v22 = objc_msgSend((id)objc_opt_self(), sel_configurationWithHierarchicalColor_, v20);

    v23 = @nonobjc UIImage.init(_systemName:withConfiguration:)(v17, (uint64_t)v19, v22);
    if (v23)
    {
      v5 = v23;
      swift_bridgeObjectRelease();
      v24 = v5;
      SystemApertureIconFactory.CallDescriptor.symbolAccessibilityLabel.getter(v2);
      v11 = v25;
      v13 = v26;
      v46._countAndFlagsBits = v17;
      v46._object = v19;
      v27 = SystemApertureIconFactory.SymbolIcon.init(rawValue:)(v46);

      v28 = v2 >> 14;
      if ((v28 - 1) >= 2)
      {
        if (v28 != 3 || (unsigned __int16)(v2 + 0x3FFF) >= 7u)
          v16 = 0;
        else
          v16 = qword_1BD644DD8[(__int16)(v2 + 0x3FFF)];
      }
      else
      {
        v16 = 1;
      }
      v9 = 0;
      v7 = 0;
      v36 = 0x4008000000000000;
      if (v27)
        v36 = 0;
    }
    else
    {
      if (one-time initialization token for conversationControls != -1)
        swift_once();
      v30 = type metadata accessor for Logger();
      __swift_project_value_buffer(v30, (uint64_t)&static Logger.conversationControls);
      OUTLINED_FUNCTION_25_2();
      v31 = (void *)Logger.logObject.getter();
      v32 = static os_log_type_t.error.getter();
      if (OUTLINED_FUNCTION_7_9(v32))
      {
        OUTLINED_FUNCTION_34_9();
        v38 = OUTLINED_FUNCTION_20_18();
        *v21 = 136315138;
        OUTLINED_FUNCTION_25_2();
        getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v17, (unint64_t)v19, &v38);
        OUTLINED_FUNCTION_32_4();
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        OUTLINED_FUNCTION_14_4(&dword_1BD004000, v33, v34, "Unable to find systemImage for status: %s");
        OUTLINED_FUNCTION_19_6();
        OUTLINED_FUNCTION_60();
      }

      swift_bridgeObjectRelease_n();
      v5 = 0;
      v9 = 0;
      v7 = 0;
      v11 = 0;
      v13 = 0;
      v16 = 0;
      v36 = 0;
    }
    v37 = 0uLL;
  }
  a2->i64[0] = (uint64_t)v5;
  a2->i64[1] = v4;
  a2[1].i64[0] = (uint64_t)v9;
  a2[1].i64[1] = v7;
  a2[2] = v37;
  a2[3].i64[0] = v11;
  a2[3].i64[1] = v13;
  a2[4].i64[0] = v16;
  a2[4].i64[1] = v36;
  OUTLINED_FUNCTION_35_4();
}

uint64_t SystemApertureIconFactory.CallDescriptor.wantsPillForDetachedAppearance.getter(unsigned __int16 a1)
{
  int v1;
  unsigned int v2;
  BOOL v3;
  unsigned int v4;

  v1 = a1 >> 14;
  v2 = v1 - 1;
  v3 = v1 != 3 || (unsigned __int16)(a1 + 0x3FFF) >= 7u;
  v4 = (0x6Fu >> (a1 - 1)) & 1;
  if (v3)
    v4 = 0;
  if (v2 >= 2)
    return v4;
  else
    return 1;
}

id @nonobjc UIImage.init(_systemName:withConfiguration:)(uint64_t a1, uint64_t a2, void *a3)
{
  void *v4;
  id v5;

  if (a2)
  {
    v4 = (void *)MEMORY[0x1C3B72E00]();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = 0;
  }
  v5 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel__systemImageNamed_withConfiguration_, v4, a3);

  return v5;
}

void SystemApertureIconFactory.CallDescriptor.activityIcon.getter(_DWORD *a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v3;
  void *v5;
  unint64_t v6;
  uint64_t v7;
  int64x2_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  void *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  Swift::String v27;

  v3 = 0uLL;
  if ((unsigned __int16)((unsigned __int16)a1 >> 14) <= 2u && a1 != 13)
  {
    v9 = ActivityType.iconSymbolName.getter(a1);
    v6 = v10;
    if (v10)
    {
      v11 = v9;
      OUTLINED_FUNCTION_17_8(v9, (unint64_t *)&lazy cache variable for type metadata for UIImage);
      v12 = (void *)objc_opt_self();
      OUTLINED_FUNCTION_8_8();
      v13 = objc_msgSend(v12, sel_systemGrayColor);
      v14 = objc_msgSend((id)objc_opt_self(), sel_configurationWithHierarchicalColor_, v13);

      v15 = @nonobjc UIImage.init(_systemName:withConfiguration:)(v11, v6, v14);
      if (v15)
      {
        v5 = v15;
        swift_bridgeObjectRelease();
        v16 = v5;
        SystemApertureIconFactory.CallDescriptor.symbolAccessibilityLabel.getter((__int16)a1);
        v6 = v17;
        v19 = v18;
        v27._countAndFlagsBits = SystemApertureIconFactory.CallDescriptor.statusSymbolName.getter((unsigned __int16)a1);
        v20 = SystemApertureIconFactory.SymbolIcon.init(rawValue:)(v27);

        v7 = 0x4008000000000000;
        if (v20)
          v7 = 0;
        v8 = vdupq_n_s64(1uLL);
        v8.i64[0] = v19;
        goto LABEL_16;
      }
      if (one-time initialization token for conversationControls != -1)
        swift_once();
      v21 = type metadata accessor for Logger();
      __swift_project_value_buffer(v21, (uint64_t)&static Logger.conversationControls);
      OUTLINED_FUNCTION_8_8();
      v22 = (void *)Logger.logObject.getter();
      v23 = static os_log_type_t.error.getter();
      if (OUTLINED_FUNCTION_7_9(v23))
      {
        OUTLINED_FUNCTION_34_9();
        v26 = OUTLINED_FUNCTION_20_18();
        *a1 = 136315138;
        OUTLINED_FUNCTION_8_8();
        getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v11, v6, &v26);
        OUTLINED_FUNCTION_32_4();
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        OUTLINED_FUNCTION_14_4(&dword_1BD004000, v24, v25, "Unable to find systemImage for activity: %s");
        OUTLINED_FUNCTION_19_6();
        OUTLINED_FUNCTION_60();
      }

      swift_bridgeObjectRelease_n();
      v5 = 0;
      v6 = 0;
    }
    else
    {
      v5 = 0;
    }
    v7 = 0;
    v8 = 0uLL;
LABEL_16:
    v3 = 0uLL;
    goto LABEL_17;
  }
  v5 = 0;
  v6 = 0;
  v7 = 0;
  v8 = 0uLL;
LABEL_17:
  *(_QWORD *)a2 = v5;
  *(_OWORD *)(a2 + 8) = v3;
  *(_OWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 40) = 0;
  *(_QWORD *)(a2 + 48) = v6;
  *(int64x2_t *)(a2 + 56) = v8;
  *(_QWORD *)(a2 + 72) = v7;
}

uint64_t SystemApertureIconFactory.CallDescriptor.activityType.getter(unsigned __int16 a1)
{
  return ((uint64_t (*)(void))((char *)sub_1BD0626CC + 4 * byte_1BD644C1D[a1 >> 14]))();
}

uint64_t static SystemApertureIconFactory.CallDescriptor.== infix(_:_:)(unsigned __int16 a1)
{
  return ((uint64_t (*)(void))((char *)sub_1BD0626F4 + 4 * byte_1BD644C21[a1 >> 14]))();
}

BOOL sub_1BD0626F4(unsigned __int8 a1, unsigned __int16 a2)
{
  if (a2 >= 0x4000u)
    return 0;
  if (a1 != 13)
    return a2 != 13 && a2 == a1;
  return a2 == 13;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance SystemApertureIconFactory.CallDescriptor(unsigned __int16 *a1)
{
  return static SystemApertureIconFactory.CallDescriptor.== infix(_:_:)(*a1);
}

BOOL static SystemApertureIconFactory.CallState.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

void SystemApertureIconFactory.CallState.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
  Hasher._combine(_:)(a2);
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance SystemApertureIconFactory.CallState(char *a1, char *a2)
{
  return static SystemApertureIconFactory.CallState.== infix(_:_:)(*a1, *a2);
}

uint64_t protocol witness for Hashable.hashValue.getter in conformance SystemApertureIconFactory.CallState()
{
  unsigned __int8 *v0;

  return SystemApertureIconFactory.CallState.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance SystemApertureIconFactory.CallState(uint64_t a1)
{
  unsigned __int8 *v1;

  SystemApertureIconFactory.CallState.hash(into:)(a1, *v1);
}

void SystemApertureIconFactory.CallState.hashValue.getter(unsigned __int8 a1)
{
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1);
  Hasher._finalize()();
  OUTLINED_FUNCTION_2();
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance SystemApertureIconFactory.CallState()
{
  unsigned __int8 *v0;
  Swift::UInt v1;

  v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  Hasher._finalize()();
  OUTLINED_FUNCTION_2();
}

uint64_t SystemApertureIconFactory.makeStatusIcon(with:for:)(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  _QWORD *v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v11;
  __int128 v12;
  _UNKNOWN **v13;
  _BYTE v14[80];

  v4 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  if (!a1)
    OUTLINED_FUNCTION_27_1(*a3);
  v5 = *(uint64_t (**)(uint64_t))((*v4 & *a3) + 0x290);
  v6 = swift_unknownObjectRetain();
  v7 = v5(v6);
  if (v7)
  {
    v8 = v7;
    *((_QWORD *)&v12 + 1) = OUTLINED_FUNCTION_17_8(v7, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
    v13 = &protocol witness table for TUConversation;
    *(_QWORD *)&v11 = v8;
  }
  else
  {
    v13 = 0;
    v11 = 0u;
    v12 = 0u;
  }
  SystemApertureIconFactory.makeStatusIcon(for:conversation:)();
  swift_unknownObjectRelease();
  outlined destroy of Conversation?((uint64_t)&v11, &demangling cache variable for type metadata for Conversation?);
  return OUTLINED_FUNCTION_38_6((uint64_t)v14, v9, &demangling cache variable for type metadata for SystemApertureIcon?);
}

void SystemApertureIconFactory.makeStatusIcon(for:conversation:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD v84[21];
  _QWORD v85[21];
  _BYTE v86[168];
  _BYTE v87[344];

  if ((unsigned __int16)((unsigned __int16)OUTLINED_FUNCTION_21_15() >> 10) > 0x3Eu)
    goto LABEL_6;
  v1 = v0 + 16;
  OUTLINED_FUNCTION_9_18(v1, (uint64_t)v86);
  OUTLINED_FUNCTION_9_18((uint64_t)v86, (uint64_t)v85);
  OUTLINED_FUNCTION_9_18((uint64_t)v86, (uint64_t)v87);
  if (_s15ConversationKit25SystemApertureIconFactoryC0cdE3Set33_15DC8AE79B2F79D7CD5A12680A8D832BLLVSgWOg((uint64_t)v87) == 1
    || (OUTLINED_FUNCTION_16_6((uint64_t)v85, (uint64_t)&v63),
        OUTLINED_FUNCTION_16_6((uint64_t)v86, (uint64_t)v84),
        outlined retain of SystemApertureIconFactory.SystemApertureIconSet((uint64_t)v84),
        outlined release of SystemApertureIconFactory.SystemApertureIconSet?(&v63, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined consume of SystemApertureIconFactory.SystemApertureIconSet?), (OUTLINED_FUNCTION_29_9() & 1) == 0))
  {
    OUTLINED_FUNCTION_18_20();
    OUTLINED_FUNCTION_2_36();
    OUTLINED_FUNCTION_0_32(v2, v3, v4, v5, v6, v7, v8, v9, v26, v28, v30, v33, v36, v39, v42, v43, v44, v45, v46,
      v47,
      v48,
      v49,
      v50,
      v51,
      v52,
      v53,
      v54,
      v55,
      v56,
      v57,
      v58,
      v59,
      v60,
      v61,
      v62,
      v63,
      v64,
      v65,
      v66,
      v67,
      v68,
      v69,
      v70,
      v71,
      v72,
      v73,
      v74,
      v75,
      v76,
      v77,
      v78,
      v79,
      v80,
      v81,
      v82,
      v83,
      v84[0],
      v84[1],
      v84[2],
      v84[3],
      v84[4],
      v84[5],
      v84[6]);
    OUTLINED_FUNCTION_4_15(v1, (uint64_t)v85);
    OUTLINED_FUNCTION_4_15((uint64_t)v84, v1);
    outlined release of SystemApertureIconFactory.SystemApertureIconSet?(v85, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined consume of SystemApertureIconFactory.SystemApertureIconSet?);
  }
  OUTLINED_FUNCTION_4_15(v1, (uint64_t)v84);
  OUTLINED_FUNCTION_4_15((uint64_t)v84, (uint64_t)&v63);
  OUTLINED_FUNCTION_4_15((uint64_t)v84, (uint64_t)v85);
  v10 = _s15ConversationKit25SystemApertureIconFactoryC0cdE3Set33_15DC8AE79B2F79D7CD5A12680A8D832BLLVSgWOg((uint64_t)v85);
  if ((_DWORD)v10 == 1)
  {
LABEL_6:
    OUTLINED_FUNCTION_5_12();
  }
  else
  {
    OUTLINED_FUNCTION_30_12(v10, v11, &demangling cache variable for type metadata for SystemApertureIconFactory.SystemApertureIconSet?, v12, v13, v14, v15, v16, v26, v28, v30, *((uint64_t *)&v30 + 1), v33, *((uint64_t *)&v33 + 1), v36, *((uint64_t *)&v36 + 1), v64, *((uint64_t *)&v39 + 1), v42,
      v43,
      v44,
      v45,
      v46,
      v47,
      v48,
      v49,
      v50,
      v51,
      v52,
      v53,
      v54,
      v55,
      v56,
      v57,
      v58,
      v59,
      v60,
      v61,
      v62,
      v63);
    v18 = outlined release of SystemApertureIconFactory.SystemApertureIconSet?(v84, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined copy of SystemApertureIconFactory.SystemApertureIconSet?);
    OUTLINED_FUNCTION_3_24((uint64_t)v18, v19, v20, v21, v22, v23, v24, v25, v27, v29, v31, v32, v34, v35, v37, v38, v40);
    outlined release of SystemApertureIconFactory.SystemApertureIconSet?(&v42, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined consume of SystemApertureIconFactory.SystemApertureIconSet?);
    v17 = v41;
  }
  OUTLINED_FUNCTION_10_29(v17);
  OUTLINED_FUNCTION_52_1();
}

void SystemApertureIconFactory.makeActivityIcon(for:)(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  _UNKNOWN **v13;
  _QWORD v14[10];

  v2 = v1;
  v4 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v5 = OUTLINED_FUNCTION_27_1(*a1);
  v7 = v6;
  v8 = (*(uint64_t (**)(void))((*v4 & *a1) + 0x290))();
  if (v8)
  {
    v9 = v8;
    *((_QWORD *)&v12 + 1) = OUTLINED_FUNCTION_17_8(v8, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
    v13 = &protocol witness table for TUConversation;
    *(_QWORD *)&v11 = v9;
  }
  else
  {
    v13 = 0;
    v11 = 0u;
    v12 = 0u;
  }
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t, __int128 *))(*(_QWORD *)v2 + 136))(v14, v5, v7, &v11);
  swift_unknownObjectRelease();
  outlined destroy of Conversation?((uint64_t)&v11, &demangling cache variable for type metadata for Conversation?);
  OUTLINED_FUNCTION_38_6((uint64_t)v14, v10, &demangling cache variable for type metadata for SystemApertureIcon?);
  OUTLINED_FUNCTION_35_4();
}

void SystemApertureIconFactory.makeActivityIcon(for:conversation:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63[11];
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD v74[21];
  _QWORD v75[21];
  _BYTE v76[168];
  _BYTE v77[344];

  if ((unsigned __int16)((unsigned __int16)OUTLINED_FUNCTION_21_15() >> 10) > 0x3Eu)
    goto LABEL_6;
  v1 = v0 + 16;
  OUTLINED_FUNCTION_9_18(v1, (uint64_t)v76);
  OUTLINED_FUNCTION_9_18((uint64_t)v76, (uint64_t)v75);
  OUTLINED_FUNCTION_9_18((uint64_t)v76, (uint64_t)v77);
  if (_s15ConversationKit25SystemApertureIconFactoryC0cdE3Set33_15DC8AE79B2F79D7CD5A12680A8D832BLLVSgWOg((uint64_t)v77) == 1
    || (OUTLINED_FUNCTION_16_6((uint64_t)v75, (uint64_t)v63),
        OUTLINED_FUNCTION_16_6((uint64_t)v76, (uint64_t)v74),
        outlined retain of SystemApertureIconFactory.SystemApertureIconSet((uint64_t)v74),
        outlined release of SystemApertureIconFactory.SystemApertureIconSet?(v63, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined consume of SystemApertureIconFactory.SystemApertureIconSet?), (OUTLINED_FUNCTION_29_9() & 1) == 0))
  {
    OUTLINED_FUNCTION_18_20();
    OUTLINED_FUNCTION_2_36();
    OUTLINED_FUNCTION_0_32(v2, v3, v4, v5, v6, v7, v8, v9, v26, v28, v30, v33, v36, v39, v42, v43, v44, v45, v46,
      v47,
      v48,
      v49,
      v50,
      v51,
      v52,
      v53,
      v54,
      v55,
      v56,
      v57,
      v58,
      v59,
      v60,
      v61,
      v62,
      v63[0],
      v63[1],
      v63[2],
      v63[3],
      v63[4],
      v63[5],
      v63[6],
      v63[7],
      v63[8],
      v63[9],
      v63[10],
      v64,
      v65,
      v66,
      v67,
      v68,
      v69,
      v70,
      v71,
      v72,
      v73,
      v74[0],
      v74[1],
      v74[2],
      v74[3],
      v74[4],
      v74[5],
      v74[6]);
    OUTLINED_FUNCTION_4_15(v1, (uint64_t)v75);
    OUTLINED_FUNCTION_4_15((uint64_t)v74, v1);
    outlined release of SystemApertureIconFactory.SystemApertureIconSet?(v75, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined consume of SystemApertureIconFactory.SystemApertureIconSet?);
  }
  OUTLINED_FUNCTION_4_15(v1, (uint64_t)v74);
  OUTLINED_FUNCTION_4_15((uint64_t)v74, (uint64_t)v63);
  OUTLINED_FUNCTION_4_15((uint64_t)v74, (uint64_t)v75);
  v10 = _s15ConversationKit25SystemApertureIconFactoryC0cdE3Set33_15DC8AE79B2F79D7CD5A12680A8D832BLLVSgWOg((uint64_t)v75);
  if ((_DWORD)v10 == 1)
  {
LABEL_6:
    OUTLINED_FUNCTION_5_12();
  }
  else
  {
    OUTLINED_FUNCTION_30_12(v10, v11, &demangling cache variable for type metadata for SystemApertureIconFactory.SystemApertureIconSet?, v12, v13, v14, v15, v16, v26, v28, v30, *((uint64_t *)&v30 + 1), v33, *((uint64_t *)&v33 + 1), v36, *((uint64_t *)&v36 + 1), v64, *((uint64_t *)&v39 + 1), v42,
      v43,
      v44,
      v45,
      v46,
      v47,
      v48,
      v49,
      v50,
      v51,
      v52,
      v53,
      v54,
      v55,
      v56,
      v57,
      v58,
      v59,
      v60,
      v61,
      v62,
      v63[0]);
    v18 = outlined release of SystemApertureIconFactory.SystemApertureIconSet?(v74, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined copy of SystemApertureIconFactory.SystemApertureIconSet?);
    OUTLINED_FUNCTION_3_24((uint64_t)v18, v19, v20, v21, v22, v23, v24, v25, v27, v29, v31, v32, v34, v35, v37, v38, v40);
    outlined release of SystemApertureIconFactory.SystemApertureIconSet?(&v42, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined consume of SystemApertureIconFactory.SystemApertureIconSet?);
    v17 = v41;
  }
  OUTLINED_FUNCTION_10_29(v17);
  OUTLINED_FUNCTION_52_1();
}

uint64_t SystemApertureIconFactory.callDescriptor(for:conversation:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  char v23;
  id v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t ObjectType;
  uint64_t v30;
  id v31;
  unsigned __int8 v32;
  uint64_t v33;
  void *v35;
  unsigned int v36;
  uint64_t HasChinaSKU;
  id v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  __int128 v52;
  uint64_t v53;
  _QWORD v54[3];
  uint64_t v55;
  uint64_t v56;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Collaboration?);
  v7 = MEMORY[0x1E0C80A78](v6);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v52 - v9;
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v52 - v11;
  v13 = OUTLINED_FUNCTION_13_20();
  v14 = v55;
  if (v55)
  {
    v15 = v56;
    __swift_project_boxed_opaque_existential_1(v54, v55);
    Conversation.currentSharePlayActivity.getter(v14, v15);
    v17 = v16;
    OUTLINED_FUNCTION_12_6();
  }
  else
  {
    OUTLINED_FUNCTION_31_16(v13, &demangling cache variable for type metadata for Conversation?);
    v17 = 0;
  }
  v18 = OUTLINED_FUNCTION_13_20();
  v19 = v55;
  if (v55)
  {
    v20 = v56;
    __swift_project_boxed_opaque_existential_1(v54, v55);
    Conversation.currentCollaboration.getter(v19, v20, (uint64_t)v12);
    OUTLINED_FUNCTION_12_6();
  }
  else
  {
    OUTLINED_FUNCTION_31_16(v18, &demangling cache variable for type metadata for Conversation?);
    v21 = OUTLINED_FUNCTION_26_7();
    __swift_storeEnumTagSinglePayload((uint64_t)v12, 1, 1, v21);
  }
  v22 = SystemApertureIconFactory.mediaType(for:conversation:)(a1, a2, a3);
  v23 = SystemApertureIconFactory.callState(for:)(a1, a2);
  if (v17)
  {
    v24 = v17;
    if (TUConversationActivitySession.generateType.getter() == 6)
    {
      v25 = objc_msgSend(v24, sel_isLocallyInitiated);

      OUTLINED_FUNCTION_1_17(v26, &demangling cache variable for type metadata for Collaboration?);
      if (v25)
        return 4294950914;
      else
        return 4294950915;
    }
    else
    {

      v31 = v24;
      v32 = TUConversationActivitySession.generateType.getter();

      OUTLINED_FUNCTION_1_17(v33, &demangling cache variable for type metadata for Collaboration?);
      return v32 | (v22 << 8) | 0xFFFF8000;
    }
  }
  v28 = v23;
  ObjectType = swift_getObjectType();
  v30 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 216))(ObjectType, a2);
  if ((v30 & 1) != 0)
  {
    OUTLINED_FUNCTION_1_17(v30, &demangling cache variable for type metadata for Collaboration?);
    return 49157;
  }
  v35 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 160))(ObjectType, a2);
  v36 = objc_msgSend(v35, sel_supportsDynamicSystemUI);

  if (v36)
  {
    v38 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DBD2F0]), sel_init);
    v39 = objc_msgSend(v38, sel_groupConversations);

    if (v39)
    {
      HasChinaSKU = TUDeviceHasChinaSKU();
      if ((_DWORD)HasChinaSKU)
      {
        OUTLINED_FUNCTION_1_17(HasChinaSKU, &demangling cache variable for type metadata for Collaboration?);
        return 49160;
      }
    }
  }
  if (!(_BYTE)v22)
  {
    v40 = OUTLINED_FUNCTION_13_20();
    v41 = v55;
    if (v55)
    {
      v42 = v56;
      __swift_project_boxed_opaque_existential_1(v54, v55);
      Conversation.isContinuitySession.getter(v41, v42);
      v44 = v43;
      OUTLINED_FUNCTION_1_17(v43, &demangling cache variable for type metadata for Collaboration?);
      OUTLINED_FUNCTION_12_6();
      if ((v44 & 1) != 0)
        return 49159;
    }
    else
    {
      v45 = OUTLINED_FUNCTION_1_17(v40, &demangling cache variable for type metadata for Collaboration?);
      OUTLINED_FUNCTION_31_16(v45, &demangling cache variable for type metadata for Conversation?);
    }
    return 32781;
  }
  if (v22 == 1)
    __asm { BR              X10 }
  switch(v28)
  {
    case 0:
      OUTLINED_FUNCTION_1_17(HasChinaSKU, &demangling cache variable for type metadata for Collaboration?);
      return 49156;
    case 2:
      outlined init with take of SystemApertureIconFactory.SystemApertureIconSet?((uint64_t)v12, (uint64_t)v10, &demangling cache variable for type metadata for Collaboration?);
      v46 = OUTLINED_FUNCTION_26_7();
      if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v46) == 1)
      {
        outlined destroy of Conversation?((uint64_t)v10, &demangling cache variable for type metadata for Collaboration?);
        return 16397;
      }
      else
      {
        v51 = v10[17];
        outlined destroy of Collaboration((uint64_t)v10);
        return v51 | 0x4000u;
      }
    case 1:
      OUTLINED_FUNCTION_1_17(HasChinaSKU, &demangling cache variable for type metadata for Collaboration?);
      return 49153;
  }
  v47 = outlined init with copy of Conversation?(a3, (uint64_t)&v52);
  if (!v53)
  {
    OUTLINED_FUNCTION_1_17(v47, &demangling cache variable for type metadata for Collaboration?);
    outlined destroy of Conversation?((uint64_t)&v52, &demangling cache variable for type metadata for Conversation?);
    return 64512;
  }
  outlined init with take of Notice(&v52, (uint64_t)v54);
  OUTLINED_FUNCTION_22_14();
  v48 = (void *)OUTLINED_FUNCTION_23_11(*(uint64_t (**)(uint64_t, uint64_t))(a3 + 192));

  if (!v48)
  {
    OUTLINED_FUNCTION_1_17(v49, &demangling cache variable for type metadata for Collaboration?);
    OUTLINED_FUNCTION_12_6();
    return 64512;
  }
  OUTLINED_FUNCTION_22_14();
  v50 = OUTLINED_FUNCTION_23_11(*(uint64_t (**)(uint64_t, uint64_t))(a3 + 264));
  OUTLINED_FUNCTION_1_17(v50, &demangling cache variable for type metadata for Collaboration?);
  if (v50 == 1)
    v27 = 4294950912;
  else
    v27 = 4294950913;
  OUTLINED_FUNCTION_12_6();
  return v27;
}

uint64_t SystemApertureIconFactory.callState(for:)(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType;
  int v4;
  uint64_t result;

  ObjectType = swift_getObjectType();
  v4 = OUTLINED_FUNCTION_39_0(ObjectType, *(uint64_t (**)(uint64_t, uint64_t))(a2 + 184));
  result = 1;
  switch(v4)
  {
    case 1:
      if ((OUTLINED_FUNCTION_39_0(ObjectType, *(uint64_t (**)(uint64_t, uint64_t))(a2 + 136)) & 1) != 0)
        result = 3;
      else
        result = 2;
      break;
    case 2:
    case 3:
    case 5:
      result = 2;
      break;
    case 4:
      return result;
    default:
      result = 0;
      break;
  }
  return result;
}

uint64_t SystemApertureIconFactory.mediaType(for:conversation:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t ObjectType;
  Swift::String v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;

  outlined init with copy of Conversation?(a3, (uint64_t)&v18);
  if (v19)
  {
    outlined init with take of Notice(&v18, (uint64_t)v20);
    __swift_project_boxed_opaque_existential_1(v20, v21);
    v4 = OUTLINED_FUNCTION_15_17();
    if (!v4)
      goto LABEL_11;
    v12 = v21;
    v13 = v22;
    __swift_project_boxed_opaque_existential_1(v20, v21);
    v4 = Conversation.avModeForSystemAperture.getter(v12, v13);
    if (v4 == 2)
    {
      OUTLINED_FUNCTION_37_8(2, v5, v6, v7, v8, v9, v10, v11, v17);
      return 2;
    }
    if (v4 == 1)
    {
      OUTLINED_FUNCTION_37_8(1, v5, v6, v7, v8, v9, v10, v11, v17);
      return 1;
    }
    if (v4)
    {
      *(_QWORD *)&v18 = 0;
      *((_QWORD *)&v18 + 1) = 0xE000000000000000;
      _StringGuts.grow(_:)(35);
      swift_bridgeObjectRelease();
      *(_QWORD *)&v18 = 0xD000000000000021;
      *((_QWORD *)&v18 + 1) = 0x80000001BD66E7C0;
      __swift_project_boxed_opaque_existential_1(v20, v21);
      OUTLINED_FUNCTION_15_17();
      v16._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v16);
      swift_bridgeObjectRelease();
      result = _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
    }
    else
    {
LABEL_11:
      OUTLINED_FUNCTION_37_8(v4, v5, v6, v7, v8, v9, v10, v11, v17);
      return 0;
    }
  }
  else
  {
    outlined destroy of Conversation?((uint64_t)&v18, &demangling cache variable for type metadata for Conversation?);
    ObjectType = swift_getObjectType();
    if ((OUTLINED_FUNCTION_39_0(ObjectType, *(uint64_t (**)(uint64_t, uint64_t))(a2 + 376)) & 1) != 0)
      return 2;
    else
      return 1;
  }
  return result;
}

uint64_t SystemApertureIconFactory.deinit()
{
  uint64_t v0;
  _QWORD v2[21];

  outlined init with take of SystemApertureIconFactory.SystemApertureIconSet?(v0 + 16, (uint64_t)v2, &demangling cache variable for type metadata for SystemApertureIconFactory.SystemApertureIconSet?);
  outlined release of SystemApertureIconFactory.SystemApertureIconSet?(v2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined consume of SystemApertureIconFactory.SystemApertureIconSet?);
  return v0;
}

void SystemApertureIconFactory.__deallocating_deinit()
{
  uint64_t v0;
  _QWORD v1[21];

  outlined init with take of SystemApertureIconFactory.SystemApertureIconSet?(v0 + 16, (uint64_t)v1, &demangling cache variable for type metadata for SystemApertureIconFactory.SystemApertureIconSet?);
  outlined release of SystemApertureIconFactory.SystemApertureIconSet?(v1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined consume of SystemApertureIconFactory.SystemApertureIconSet?);
  swift_deallocClassInstance();
  OUTLINED_FUNCTION_35_4();
}

void SystemApertureIconFactory.init()()
{
  uint64_t v0;
  _BYTE v1[168];

  _s15ConversationKit25SystemApertureIconFactoryC0cdE3Set33_15DC8AE79B2F79D7CD5A12680A8D832BLLVSgWOi0_((uint64_t)v1);
  OUTLINED_FUNCTION_38_6((uint64_t)v1, v0, &demangling cache variable for type metadata for SystemApertureIconFactory.SystemApertureIconSet?);
  OUTLINED_FUNCTION_33_4();
}

double _s15ConversationKit25SystemApertureIconFactoryC0cdE3Set33_15DC8AE79B2F79D7CD5A12680A8D832BLLVSgWOi0_(uint64_t a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_QWORD *)(a1 + 64) = 1;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  return result;
}

uint64_t type metadata accessor for SystemApertureIconFactory()
{
  return objc_opt_self();
}

uint64_t _s15ConversationKit25SystemApertureIconFactoryC0cdE3Set33_15DC8AE79B2F79D7CD5A12680A8D832BLLVSgWOg(uint64_t a1)
{
  unint64_t v1;
  int v2;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  v2 = v1 - 1;
  if (v2 < 0)
    v2 = -1;
  return (v2 + 1);
}

uint64_t outlined retain of SystemApertureIconFactory.SystemApertureIconSet(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v10;

  v10 = *(void **)(a1 + 88);
  v2 = *(_QWORD *)(a1 + 96);
  v3 = *(void **)(a1 + 104);
  v4 = *(_QWORD *)(a1 + 112);
  v5 = *(_QWORD *)(a1 + 120);
  v6 = *(_QWORD *)(a1 + 128);
  v7 = *(_QWORD *)(a1 + 136);
  v8 = *(_QWORD *)(a1 + 144);
  outlined copy of SystemApertureIcon?(*(void **)(a1 + 8), *(_QWORD *)(a1 + 16), *(void **)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64));
  outlined copy of SystemApertureIcon?(v10, v2, v3, v4, v5, v6, v7, v8);
  return a1;
}

void *outlined copy of SystemApertureIcon?(void *result, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  if (a8)
  {
    outlined copy of SystemApertureIconAsset(result, a2, a3, a4, a5, a6 & 1);
    return (void *)swift_bridgeObjectRetain();
  }
  return result;
}

id outlined copy of SystemApertureIconAsset(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, char a6)
{
  if ((a6 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a1 = a3;
  }
  return a1;
}

void outlined consume of SystemApertureIconFactory.SystemApertureIconSet?(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19)
{
  if (a9 != 1)
  {
    outlined consume of SystemApertureIcon?(a2, a3, a4, a5, a6, a7, a8, a9);
    outlined consume of SystemApertureIcon?(a12, a13, a14, a15, a16, a17, a18, a19);
  }
}

void *outlined consume of SystemApertureIcon?(void *result, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  if (a8)
  {
    outlined consume of SystemApertureIconAsset(result, a2, a3, a4, a5, a6 & 1);
    return (void *)swift_bridgeObjectRelease();
  }
  return result;
}

void outlined consume of SystemApertureIconAsset(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, char a6)
{
  if ((a6 & 1) != 0)
  {
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
  }
  else
  {

  }
}

_QWORD *outlined release of SystemApertureIconFactory.SystemApertureIconSet?(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20]);
  return a1;
}

void *outlined copy of SystemApertureIconFactory.SystemApertureIconSet?(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19)
{
  void *result;

  if (a9 != 1)
  {
    outlined copy of SystemApertureIcon?(a2, a3, a4, a5, a6, a7, a8, a9);
    return outlined copy of SystemApertureIcon?(a12, a13, a14, a15, a16, a17, a18, a19);
  }
  return result;
}

uint64_t outlined init with copy of Conversation?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Conversation?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined init with take of SystemApertureIconFactory.SystemApertureIconSet?(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t outlined destroy of Collaboration(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Collaboration(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t lazy protocol witness table accessor for type SystemApertureIconFactory.CallState and conformance SystemApertureIconFactory.CallState()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SystemApertureIconFactory.CallState and conformance SystemApertureIconFactory.CallState;
  if (!lazy protocol witness table cache variable for type SystemApertureIconFactory.CallState and conformance SystemApertureIconFactory.CallState)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for SystemApertureIconFactory.CallState, &type metadata for SystemApertureIconFactory.CallState);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SystemApertureIconFactory.CallState and conformance SystemApertureIconFactory.CallState);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type SystemApertureIconFactory.MediaType and conformance SystemApertureIconFactory.MediaType()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SystemApertureIconFactory.MediaType and conformance SystemApertureIconFactory.MediaType;
  if (!lazy protocol witness table cache variable for type SystemApertureIconFactory.MediaType and conformance SystemApertureIconFactory.MediaType)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for SystemApertureIconFactory.MediaType, &type metadata for SystemApertureIconFactory.MediaType);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SystemApertureIconFactory.MediaType and conformance SystemApertureIconFactory.MediaType);
  }
  return result;
}

uint64_t method lookup function for SystemApertureIconFactory()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SystemApertureIconFactory.makeStatusIcon(with:for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of SystemApertureIconFactory.makeActivityIcon(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of SystemApertureIconFactory.makeActivityIcon(for:conversation:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of SystemApertureIconFactory.callDescriptor(for:conversation:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of SystemApertureIconFactory.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 168))();
}

_WORD *__swift_memcpy2_1(_WORD *result, _WORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for SystemApertureIconFactory.CallDescriptor(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v5;

  if (!a2)
  {
    v5 = -1;
    return v5 + 1;
  }
  if (a2 >= 0x3D)
  {
    if (a2 + 65475 <= 0xFFFEFFFF)
      v2 = 2;
    else
      v2 = 4;
    if (a2 + 65475 < 0xFF0000)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    else
    {
      v4 = *((unsigned __int8 *)a1 + 2);
      if (!*((_BYTE *)a1 + 2))
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 16)) - 65476;
    return v5 + 1;
  }
LABEL_17:
  v5 = (HIBYTE(*a1) & 0x3C | (*a1 >> 14)) ^ 0x3F;
  if (v5 >= 0x3C)
    v5 = -1;
  return v5 + 1;
}

uint64_t storeEnumTagSinglePayload for SystemApertureIconFactory.CallDescriptor(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65475 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65475 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0x3D)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0x3C)
    return ((uint64_t (*)(void))((char *)&loc_1BD063C90 + 4 * byte_1BD644C3E[v4]))();
  *a1 = a2 - 61;
  return ((uint64_t (*)(void))((char *)sub_1BD063CC4 + 4 * byte_1BD644C39[v4]))();
}

uint64_t sub_1BD063CC4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_1BD063CCC(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x1BD063CD4);
  return result;
}

uint64_t sub_1BD063CEC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x1BD063CF4);
  *(_WORD *)result = (((-a2 >> 2) & 0xF) - 16 * (_WORD)a2) << 10;
  return result;
}

uint64_t sub_1BD063CF8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1BD063D00(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

uint64_t getEnumTag for SystemApertureIconFactory.CallDescriptor(unsigned __int16 *a1)
{
  unsigned int v1;
  unsigned int v2;
  unsigned int v3;

  v1 = *a1;
  v2 = v1 >> 14;
  v3 = (v1 & 0x3FF) + 3;
  if (v2 == 3)
    return v3;
  else
    return v2;
}

_WORD *destructiveProjectEnumData for SystemApertureIconFactory.CallDescriptor(_WORD *result)
{
  *result &= 0x3FFFu;
  return result;
}

_WORD *destructiveInjectEnumTag for SystemApertureIconFactory.CallDescriptor(_WORD *result, unsigned int a2)
{
  __int16 v2;

  if (a2 < 3)
    v2 = *result & 0x3FF | ((_WORD)a2 << 14);
  else
    v2 = (a2 + 1021) & 0x3FF | 0xC000;
  *result = v2;
  return result;
}

void type metadata accessor for SystemApertureIconFactory.CallDescriptor()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t getEnumTagSinglePayload for SystemApertureIconFactory.CallState(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFD)
  {
    if (a2 + 3 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 3) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 4;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v5 = v6 - 4;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for SystemApertureIconFactory.CallState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BD063E44 + 4 * byte_1BD644C48[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BD063E78 + 4 * byte_1BD644C43[v4]))();
}

uint64_t sub_1BD063E78(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD063E80(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD063E88);
  return result;
}

uint64_t sub_1BD063E94(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD063E9CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BD063EA0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD063EA8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for SystemApertureIconFactory.CallState()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t storeEnumTagSinglePayload for SystemApertureIconFactory.MediaType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BD063F0C + 4 * byte_1BD644C52[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BD063F40 + 4 * byte_1BD644C4D[v4]))();
}

uint64_t sub_1BD063F40(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD063F48(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD063F50);
  return result;
}

uint64_t sub_1BD063F5C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD063F64);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BD063F68(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD063F70(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for SystemApertureIconFactory.MediaType()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t destroy for SystemApertureIconFactory.SystemApertureIconSet(uint64_t result)
{
  uint64_t v1;

  v1 = result;
  if (*(_QWORD *)(result + 64))
  {
    outlined consume of SystemApertureIconAsset(*(void **)(result + 8), *(_QWORD *)(result + 16), *(void **)(result + 24), *(_QWORD *)(result + 32), *(_QWORD *)(result + 40), *(_BYTE *)(result + 48));
    result = swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(v1 + 144))
  {
    outlined consume of SystemApertureIconAsset(*(void **)(v1 + 88), *(_QWORD *)(v1 + 96), *(void **)(v1 + 104), *(_QWORD *)(v1 + 112), *(_QWORD *)(v1 + 120), *(_BYTE *)(v1 + 128));
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for SystemApertureIconFactory.SystemApertureIconSet(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  char v18;

  *(_WORD *)a1 = *(_WORD *)a2;
  v4 = (void *)(a1 + 8);
  v5 = *(_QWORD *)(a2 + 64);
  if (v5)
  {
    v6 = *(void **)(a2 + 8);
    v7 = *(_QWORD *)(a2 + 16);
    v8 = *(void **)(a2 + 24);
    v9 = *(_QWORD *)(a2 + 32);
    v10 = *(_QWORD *)(a2 + 40);
    v11 = *(_BYTE *)(a2 + 48);
    outlined copy of SystemApertureIconAsset(v6, v7, v8, v9, v10, v11);
    *(_QWORD *)(a1 + 8) = v6;
    *(_QWORD *)(a1 + 16) = v7;
    *(_QWORD *)(a1 + 24) = v8;
    *(_QWORD *)(a1 + 32) = v9;
    *(_QWORD *)(a1 + 40) = v10;
    *(_BYTE *)(a1 + 48) = v11;
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = v5;
    *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    swift_bridgeObjectRetain();
  }
  else
  {
    memcpy(v4, (const void *)(a2 + 8), 0x50uLL);
  }
  v12 = *(_QWORD *)(a2 + 144);
  if (v12)
  {
    v13 = *(void **)(a2 + 88);
    v14 = *(_QWORD *)(a2 + 96);
    v15 = *(void **)(a2 + 104);
    v16 = *(_QWORD *)(a2 + 112);
    v17 = *(_QWORD *)(a2 + 120);
    v18 = *(_BYTE *)(a2 + 128);
    outlined copy of SystemApertureIconAsset(v13, v14, v15, v16, v17, v18);
    *(_QWORD *)(a1 + 88) = v13;
    *(_QWORD *)(a1 + 96) = v14;
    *(_QWORD *)(a1 + 104) = v15;
    *(_QWORD *)(a1 + 112) = v16;
    *(_QWORD *)(a1 + 120) = v17;
    *(_BYTE *)(a1 + 128) = v18;
    *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 144) = v12;
    *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
    *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
    swift_bridgeObjectRetain();
  }
  else
  {
    memcpy((void *)(a1 + 88), (const void *)(a2 + 88), 0x50uLL);
  }
  return a1;
}

uint64_t assignWithCopy for SystemApertureIconFactory.SystemApertureIconSet(uint64_t a1, uint64_t a2)
{
  void *v4;
  const void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  void *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  void *v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  void *v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  char v43;

  *(_WORD *)a1 = *(_WORD *)a2;
  v4 = (void *)(a1 + 8);
  v5 = (const void *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 64);
  if (*(_QWORD *)(a1 + 64))
  {
    if (v6)
    {
      v7 = *(void **)(a2 + 8);
      v8 = *(_QWORD *)(a2 + 16);
      v9 = *(void **)(a2 + 24);
      v10 = *(_QWORD *)(a2 + 32);
      v11 = *(_QWORD *)(a2 + 40);
      v12 = *(_BYTE *)(a2 + 48);
      outlined copy of SystemApertureIconAsset(v7, v8, v9, v10, v11, v12);
      v13 = *(void **)(a1 + 8);
      v14 = *(_QWORD *)(a1 + 16);
      v15 = *(void **)(a1 + 24);
      v16 = *(_QWORD *)(a1 + 32);
      v17 = *(_QWORD *)(a1 + 40);
      v18 = *(_BYTE *)(a1 + 48);
      *(_QWORD *)(a1 + 8) = v7;
      *(_QWORD *)(a1 + 16) = v8;
      *(_QWORD *)(a1 + 24) = v9;
      *(_QWORD *)(a1 + 32) = v10;
      *(_QWORD *)(a1 + 40) = v11;
      *(_BYTE *)(a1 + 48) = v12;
      outlined consume of SystemApertureIconAsset(v13, v14, v15, v16, v17, v18);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      goto LABEL_8;
    }
    outlined destroy of SystemApertureIcon(a1 + 8);
  }
  else if (v6)
  {
    v19 = *(void **)(a2 + 8);
    v20 = *(_QWORD *)(a2 + 16);
    v21 = *(void **)(a2 + 24);
    v22 = *(_QWORD *)(a2 + 32);
    v23 = *(_QWORD *)(a2 + 40);
    v24 = *(_BYTE *)(a2 + 48);
    outlined copy of SystemApertureIconAsset(v19, v20, v21, v22, v23, v24);
    *(_QWORD *)(a1 + 8) = v19;
    *(_QWORD *)(a1 + 16) = v20;
    *(_QWORD *)(a1 + 24) = v21;
    *(_QWORD *)(a1 + 32) = v22;
    *(_QWORD *)(a1 + 40) = v23;
    *(_BYTE *)(a1 + 48) = v24;
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    swift_bridgeObjectRetain();
    goto LABEL_8;
  }
  memcpy(v4, v5, 0x50uLL);
LABEL_8:
  v25 = *(_QWORD *)(a2 + 144);
  if (!*(_QWORD *)(a1 + 144))
  {
    if (v25)
    {
      v38 = *(void **)(a2 + 88);
      v39 = *(_QWORD *)(a2 + 96);
      v40 = *(void **)(a2 + 104);
      v41 = *(_QWORD *)(a2 + 112);
      v42 = *(_QWORD *)(a2 + 120);
      v43 = *(_BYTE *)(a2 + 128);
      outlined copy of SystemApertureIconAsset(v38, v39, v40, v41, v42, v43);
      *(_QWORD *)(a1 + 88) = v38;
      *(_QWORD *)(a1 + 96) = v39;
      *(_QWORD *)(a1 + 104) = v40;
      *(_QWORD *)(a1 + 112) = v41;
      *(_QWORD *)(a1 + 120) = v42;
      *(_BYTE *)(a1 + 128) = v43;
      *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
      *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
      *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
      *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_14:
    memcpy((void *)(a1 + 88), (const void *)(a2 + 88), 0x50uLL);
    return a1;
  }
  if (!v25)
  {
    outlined destroy of SystemApertureIcon(a1 + 88);
    goto LABEL_14;
  }
  v26 = *(void **)(a2 + 88);
  v27 = *(_QWORD *)(a2 + 96);
  v28 = *(void **)(a2 + 104);
  v29 = *(_QWORD *)(a2 + 112);
  v30 = *(_QWORD *)(a2 + 120);
  v31 = *(_BYTE *)(a2 + 128);
  outlined copy of SystemApertureIconAsset(v26, v27, v28, v29, v30, v31);
  v32 = *(void **)(a1 + 88);
  v33 = *(_QWORD *)(a1 + 96);
  v34 = *(void **)(a1 + 104);
  v35 = *(_QWORD *)(a1 + 112);
  v36 = *(_QWORD *)(a1 + 120);
  v37 = *(_BYTE *)(a1 + 128);
  *(_QWORD *)(a1 + 88) = v26;
  *(_QWORD *)(a1 + 96) = v27;
  *(_QWORD *)(a1 + 104) = v28;
  *(_QWORD *)(a1 + 112) = v29;
  *(_QWORD *)(a1 + 120) = v30;
  *(_BYTE *)(a1 + 128) = v31;
  outlined consume of SystemApertureIconAsset(v32, v33, v34, v35, v36, v37);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  return a1;
}

uint64_t outlined destroy of SystemApertureIcon(uint64_t a1)
{
  destroy for SystemApertureIcon(a1);
  return a1;
}

void *__swift_memcpy168_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xA8uLL);
}

uint64_t assignWithTake for SystemApertureIconFactory.SystemApertureIconSet(uint64_t a1, uint64_t a2)
{
  void *v4;
  const void *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  *(_WORD *)a1 = *(_WORD *)a2;
  v4 = (void *)(a1 + 8);
  v5 = (const void *)(a2 + 8);
  if (*(_QWORD *)(a1 + 64))
  {
    v6 = *(_QWORD *)(a2 + 64);
    if (v6)
    {
      v7 = *(_QWORD *)(a2 + 40);
      v8 = *(_BYTE *)(a2 + 48);
      v9 = *(void **)(a1 + 8);
      v10 = *(_QWORD *)(a1 + 16);
      v11 = *(void **)(a1 + 24);
      v12 = *(_QWORD *)(a1 + 32);
      v13 = *(_QWORD *)(a1 + 40);
      v14 = *(_BYTE *)(a1 + 48);
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 40) = v7;
      *(_BYTE *)(a1 + 48) = v8;
      outlined consume of SystemApertureIconAsset(v9, v10, v11, v12, v13, v14);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = v6;
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      goto LABEL_6;
    }
    outlined destroy of SystemApertureIcon(a1 + 8);
  }
  memcpy(v4, v5, 0x50uLL);
LABEL_6:
  if (!*(_QWORD *)(a1 + 144))
  {
LABEL_10:
    memcpy((void *)(a1 + 88), (const void *)(a2 + 88), 0x50uLL);
    return a1;
  }
  v15 = *(_QWORD *)(a2 + 144);
  if (!v15)
  {
    outlined destroy of SystemApertureIcon(a1 + 88);
    goto LABEL_10;
  }
  v16 = *(_QWORD *)(a2 + 120);
  v17 = *(_BYTE *)(a2 + 128);
  v18 = *(void **)(a1 + 88);
  v19 = *(_QWORD *)(a1 + 96);
  v20 = *(void **)(a1 + 104);
  v21 = *(_QWORD *)(a1 + 112);
  v22 = *(_QWORD *)(a1 + 120);
  v23 = *(_BYTE *)(a1 + 128);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 120) = v16;
  *(_BYTE *)(a1 + 128) = v17;
  outlined consume of SystemApertureIconAsset(v18, v19, v20, v21, v22, v23);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v15;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  return a1;
}

uint64_t getEnumTagSinglePayload for SystemApertureIconFactory.SystemApertureIconSet(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 168))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 64);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SystemApertureIconFactory.SystemApertureIconSet(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 168) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 168) = 0;
    if (a2)
      *(_QWORD *)(result + 64) = a2;
  }
  return result;
}

void *type metadata accessor for SystemApertureIconFactory.SystemApertureIconSet()
{
  return &unk_1E7616520;
}

id CallControlsViewController.__allocating_init(captionsStateController:controlsManager:rosterViewProvider:service:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  objc_class *v6;
  id v13;

  v13 = objc_allocWithZone(v6);
  return CallControlsViewController.init(captionsStateController:controlsManager:rosterViewProvider:service:)(a1, a2, a3, a4, a5, a6);
}

id CallControlsViewController.init(captionsStateController:controlsManager:rosterViewProvider:service:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _BYTE *v6;
  char *v9;
  char *v10;
  uint64_t v11;
  _BYTE *v12;
  id v13;
  id v14;
  objc_class *v18;
  objc_super v19;

  v18 = (objc_class *)OUTLINED_FUNCTION_15_6();
  v6[OBJC_IVAR____TtC15ConversationKit26CallControlsViewController_menuState] = 1;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15ConversationKit26CallControlsViewController_rosterCount] = 0;
  v9 = &v6[OBJC_IVAR____TtC15ConversationKit26CallControlsViewController_captionsStateController];
  *(_QWORD *)&v6[OBJC_IVAR____TtC15ConversationKit26CallControlsViewController_captionsStateController + 8] = 0;
  OUTLINED_FUNCTION_54();
  OUTLINED_FUNCTION_54();
  v10 = &v6[OBJC_IVAR____TtC15ConversationKit26CallControlsViewController_rosterViewProvider];
  *(_QWORD *)&v6[OBJC_IVAR____TtC15ConversationKit26CallControlsViewController_rosterViewProvider + 8] = 0;
  OUTLINED_FUNCTION_54();
  *(_QWORD *)&v6[OBJC_IVAR____TtC15ConversationKit26CallControlsViewController_cancellables] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v6[OBJC_IVAR____TtC15ConversationKit26CallControlsViewController____lazy_storage___statusViewModel] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15ConversationKit26CallControlsViewController____lazy_storage___statusView] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15ConversationKit26CallControlsViewController____lazy_storage___menuViewController] = 0;
  v11 = OBJC_IVAR____TtC15ConversationKit26CallControlsViewController_sidebarStateStream;
  type metadata accessor for SidebarStateStream();
  OUTLINED_FUNCTION_7_0();
  v12 = v6;
  *(_QWORD *)&v6[v11] = SidebarStateStream.init(initial:)();
  *(_QWORD *)&v12[OBJC_IVAR____TtC15ConversationKit26CallControlsViewController____lazy_storage___sidebarTrailingVisible] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC15ConversationKit26CallControlsViewController____lazy_storage___sidebarTrailingHidden] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC15ConversationKit26CallControlsViewController____lazy_storage___sidebarViewController] = 0;
  v12[OBJC_IVAR____TtC15ConversationKit26CallControlsViewController_showingCallAgain] = 0;
  *((_QWORD *)v9 + 1) = a2;
  swift_unknownObjectWeakAssign();
  *(_QWORD *)&v12[OBJC_IVAR____TtC15ConversationKit26CallControlsViewController_controlsManager] = a3;
  *((_QWORD *)v10 + 1) = a5;
  swift_unknownObjectWeakAssign();
  outlined init with copy of IDSLookupManager(a6, (uint64_t)&v12[OBJC_IVAR____TtC15ConversationKit26CallControlsViewController_service]);
  v13 = a3;

  v19.receiver = v12;
  v19.super_class = v18;
  v14 = objc_msgSendSuper2(&v19, sel_initWithNibName_bundle_, 0, 0);
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a6);
  return v14;
}

void CallControlsViewController.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;

  objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  OUTLINED_FUNCTION_0();
}

void CallControlsViewController.init(coder:)()
{
  _BYTE *v0;
  uint64_t v1;

  v0[OBJC_IVAR____TtC15ConversationKit26CallControlsViewController_menuState] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit26CallControlsViewController_rosterCount] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit26CallControlsViewController_captionsStateController + 8] = 0;
  OUTLINED_FUNCTION_54();
  OUTLINED_FUNCTION_54();
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit26CallControlsViewController_rosterViewProvider + 8] = 0;
  OUTLINED_FUNCTION_54();
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit26CallControlsViewController_cancellables] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit26CallControlsViewController____lazy_storage___statusViewModel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit26CallControlsViewController____lazy_storage___statusView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit26CallControlsViewController____lazy_storage___menuViewController] = 0;
  v1 = OBJC_IVAR____TtC15ConversationKit26CallControlsViewController_sidebarStateStream;
  type metadata accessor for SidebarStateStream();
  OUTLINED_FUNCTION_7_0();
  *(_QWORD *)&v0[v1] = SidebarStateStream.init(initial:)();
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit26CallControlsViewController____lazy_storage___sidebarTrailingVisible] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit26CallControlsViewController____lazy_storage___sidebarTrailingHidden] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit26CallControlsViewController____lazy_storage___sidebarViewController] = 0;
  v0[OBJC_IVAR____TtC15ConversationKit26CallControlsViewController_showingCallAgain] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

Swift::Void __swiftcall CallControlsViewController.loadView()()
{
  void *v0;
  id v1;
  id v2;
  void *v3;
  id v4;

  type metadata accessor for PassthroughView();
  v1 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  objc_msgSend(v0, sel_setView_, v1);

  v2 = objc_msgSend(v0, sel_view);
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
    objc_msgSend(v3, sel_setBackgroundColor_, v4);

    OUTLINED_FUNCTION_7_1(v4);
  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall CallControlsViewController.viewDidLoad()()
{
  void *v0;
  objc_super v1;

  v1.receiver = v0;
  v1.super_class = (Class)OUTLINED_FUNCTION_15_6();
  objc_msgSendSuper2(&v1, sel_viewDidLoad);
  CallControlsViewController.setupConstraints()();
  CallControlsViewController.statusViewModel.getter();
  CallControlsStatusViewModel.startStatusObservation()();
  swift_release();
  CallControlsViewController.observeSidebarState()();
  CallControlsViewController.observeControlMode()();
  OUTLINED_FUNCTION_36();
}

void CallControlsViewController.setupConstraints()()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  uint64_t v23;
  id v24;
  id v25;
  void *v26;
  Class isa;
  unint64_t v28;

  v1 = v0;
  v28 = (unint64_t)CallControlsViewController.setupStatus()();
  CallControlsViewController.setupSidebar()();
  specialized Array.append<A>(contentsOf:)();
  CallControlsViewController.menuView.getter(&OBJC_IVAR____TtC15ConversationKit26CallControlsViewController____lazy_storage___menuViewController, (uint64_t (*)(uint64_t))closure #1 in CallControlsViewController.menuViewController.getter);
  v3 = v2;
  v4 = objc_msgSend(v2, sel_leadingAnchor);

  v5 = objc_msgSend(v1, sel_view);
  if (!v5)
  {
    __break(1u);
    goto LABEL_17;
  }
  v6 = v5;
  v7 = objc_msgSend(v5, sel_leadingAnchor);

  v8 = objc_msgSend(v4, sel_constraintEqualToAnchor_, v7);
  CallControlsViewController.menuView.getter(&OBJC_IVAR____TtC15ConversationKit26CallControlsViewController____lazy_storage___menuViewController, (uint64_t (*)(uint64_t))closure #1 in CallControlsViewController.menuViewController.getter);
  v10 = v9;
  v11 = objc_msgSend(v9, sel_trailingAnchor);

  v12 = objc_msgSend(v1, sel_view);
  if (!v12)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v13 = v12;
  v14 = objc_msgSend(v12, sel_trailingAnchor);

  v15 = objc_msgSend(v11, sel_constraintLessThanOrEqualToAnchor_, v14);
  CallControlsViewController.menuView.getter(&OBJC_IVAR____TtC15ConversationKit26CallControlsViewController____lazy_storage___menuViewController, (uint64_t (*)(uint64_t))closure #1 in CallControlsViewController.menuViewController.getter);
  v17 = v16;
  v18 = objc_msgSend(v16, sel_bottomAnchor);

  v19 = objc_msgSend(v1, sel_view);
  if (!v19)
  {
LABEL_18:
    __break(1u);
    return;
  }
  v20 = v19;
  v21 = objc_msgSend(v19, sel_bottomAnchor);

  v22 = objc_msgSend(v18, sel_constraintEqualToAnchor_, v21);
  if (v28 >> 62)
  {
    swift_bridgeObjectRetain();
    v23 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    v23 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (__OFADD__(v23, 3))
  {
    __break(1u);
    goto LABEL_15;
  }
  specialized Array._reserveCapacityImpl(minimumCapacity:growForAppend:)(v23 + 3, 1);
  specialized Array._endMutation()();
  v8 = v8;
  MEMORY[0x1C3B7301C]();
  if (*(_QWORD *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
LABEL_15:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  v24 = v15;
  MEMORY[0x1C3B7301C]();
  if (*(_QWORD *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  v25 = v22;
  MEMORY[0x1C3B7301C]();
  if (*(_QWORD *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();

  v26 = (void *)objc_opt_self();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v26, sel_activateConstraints_, isa);

}

uint64_t CallControlsViewController.statusViewModel.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v7[2];

  v1 = OBJC_IVAR____TtC15ConversationKit26CallControlsViewController____lazy_storage___statusViewModel;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit26CallControlsViewController____lazy_storage___statusViewModel))
  {
    v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit26CallControlsViewController____lazy_storage___statusViewModel);
  }
  else
  {
    v3 = v0;
    outlined init with copy of IDSLookupManager(v0 + OBJC_IVAR____TtC15ConversationKit26CallControlsViewController_service, (uint64_t)v7);
    v4 = CallControlsViewController.isScreenLocked.getter();
    type metadata accessor for CallControlsStatusViewModel();
    swift_allocObject();
    CallControlsStatusViewModel.init(service:isScreenLocked:)(v7, v4);
    v2 = v5;
    *(_QWORD *)(v3 + v1) = v5;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t CallControlsViewController.observeSidebarState()()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;
  id v13;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.Drop<AnyPublisher<SidebarState, Never>>);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.ReceiveOn<Publishers.Drop<AnyPublisher<SidebarState, Never>>, NSRunLoop>);
  v12 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (id)SidebarStateStream.states.getter();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnyPublisher<SidebarState, Never>);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type AnyPublisher<SidebarState, Never> and conformance AnyPublisher<A, B>, &demangling cache variable for type metadata for AnyPublisher<SidebarState, Never>, MEMORY[0x1E0C95D90]);
  Publisher.dropFirst(_:)();
  swift_release();
  v13 = objc_msgSend((id)objc_opt_self(), sel_mainRunLoop);
  v10 = type metadata accessor for NSRunLoop.SchedulerOptions();
  __swift_storeEnumTagSinglePayload((uint64_t)v2, 1, 1, v10);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSRunLoop);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type Publishers.Drop<AnyPublisher<SidebarState, Never>> and conformance Publishers.Drop<A>, &demangling cache variable for type metadata for Publishers.Drop<AnyPublisher<SidebarState, Never>>, MEMORY[0x1E0C95988]);
  lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop();
  Publisher.receive<A>(on:options:)();
  outlined destroy of NSRunLoop.SchedulerOptions?((uint64_t)v2);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type Publishers.ReceiveOn<Publishers.Drop<AnyPublisher<SidebarState, Never>>, NSRunLoop> and conformance Publishers.ReceiveOn<A, B>, &demangling cache variable for type metadata for Publishers.ReceiveOn<Publishers.Drop<AnyPublisher<SidebarState, Never>>, NSRunLoop>, MEMORY[0x1E0C95CB8]);
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v7);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [AnyCancellable]);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](lazy protocol witness table cache variable for type [AnyCancellable] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [AnyCancellable], MEMORY[0x1E0DEAF58]);
  AnyCancellable.store<A>(in:)();
  swift_endAccess();
  return swift_release();
}

uint64_t CallControlsViewController.observeControlMode()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit26CallControlsViewController_service + 24);
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit26CallControlsViewController_service + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit26CallControlsViewController_service), v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 64))(v1, v2);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnyPublisher<InCallControlsMode, Never>);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type AnyPublisher<InCallControlsMode, Never> and conformance AnyPublisher<A, B>, &demangling cache variable for type metadata for AnyPublisher<InCallControlsMode, Never>, MEMORY[0x1E0C95D90]);
  Publisher<>.sink(receiveValue:)();
  swift_release();
  swift_release();
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [AnyCancellable]);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](lazy protocol witness table cache variable for type [AnyCancellable] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [AnyCancellable], MEMORY[0x1E0DEAF58]);
  AnyCancellable.store<A>(in:)();
  swift_endAccess();
  return swift_release();
}

Swift::Void __swiftcall CallControlsViewController.viewWillAppear(_:)(Swift::Bool a1)
{
  char *v1;
  uint64_t v2;
  char *v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  objc_super v45;

  v45.receiver = v1;
  v45.super_class = (Class)OUTLINED_FUNCTION_15_6();
  objc_msgSendSuper2(&v45, sel_viewWillAppear_, a1);
  v4 = &v1[OBJC_IVAR____TtC15ConversationKit26CallControlsViewController_service];
  v5 = *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit26CallControlsViewController_service + 32];
  __swift_project_boxed_opaque_existential_1(&v1[OBJC_IVAR____TtC15ConversationKit26CallControlsViewController_service], *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit26CallControlsViewController_service + 24]);
  v6 = *(_QWORD **)&v1[OBJC_IVAR____TtC15ConversationKit26CallControlsViewController_controlsManager];
  v7 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v6) + 0x270))();
  v9 = v8;
  ObjectType = swift_getObjectType();
  v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 184))(ObjectType, v9);
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_22_15(v11, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 96));
  v12 = *((_QWORD *)v4 + 4);
  __swift_project_boxed_opaque_existential_1(v4, *((_QWORD *)v4 + 3));
  v13 = (*(uint64_t (**)(void))((*v7 & *v6) + 0x840))();
  v14 = OUTLINED_FUNCTION_22_15(v13, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 112));
  v15 = (*(uint64_t (**)(uint64_t))((*v7 & *v6) + 0x290))(v14);
  if (v15)
  {
    v16 = (void *)v15;
    v17 = *((_QWORD *)v4 + 4);
    __swift_project_boxed_opaque_existential_1(v4, *((_QWORD *)v4 + 3));
    OUTLINED_FUNCTION_33_5((uint64_t)objc_msgSend(v16, sel_state), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 104));
    v18 = *((_QWORD *)v4 + 4);
    __swift_project_boxed_opaque_existential_1(v4, *((_QWORD *)v4 + 3));
    OUTLINED_FUNCTION_33_5((uint64_t)objc_msgSend(v16, sel_letMeInRequestState), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 120));

  }
  if (one-time initialization token for sidebar != -1)
    swift_once();
  v19 = type metadata accessor for Logger();
  __swift_project_value_buffer(v19, (uint64_t)&static Logger.sidebar);
  v20 = v1;
  v21 = Logger.logObject.getter();
  v22 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = swift_slowAlloc();
    v44 = swift_slowAlloc();
    *(_DWORD *)v23 = 136315906;
    OUTLINED_FUNCTION_5_13();
    OUTLINED_FUNCTION_21_16(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16));
    type metadata accessor for TUCallStatus(0);
    v24 = String.init<A>(reflecting:)();
    v43 = OUTLINED_FUNCTION_16_7(v24, v25, v26, v27, v28);
    OUTLINED_FUNCTION_7_32();

    OUTLINED_FUNCTION_27();
    *(_WORD *)(v23 + 12) = 2080;
    OUTLINED_FUNCTION_5_13();
    OUTLINED_FUNCTION_21_16(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 32));
    v29 = String.init<A>(reflecting:)();
    v43 = OUTLINED_FUNCTION_16_7(v29, v30, v31, v32, v33);
    OUTLINED_FUNCTION_7_32();

    OUTLINED_FUNCTION_27();
    *(_WORD *)(v23 + 22) = 2080;
    OUTLINED_FUNCTION_5_13();
    v43 = (*(uint64_t (**)(uint64_t *))(v2 + 40))(&v43);
    type metadata accessor for TUConversationLetMeInRequestState(0);
    v34 = OUTLINED_FUNCTION_36_10();
    v43 = OUTLINED_FUNCTION_16_7(v34, v35, v36, v37, v38);
    OUTLINED_FUNCTION_7_32();

    OUTLINED_FUNCTION_27();
    *(_WORD *)(v23 + 32) = 2080;
    v40 = *((_QWORD *)v4 + 3);
    v39 = *((_QWORD *)v4 + 4);
    __swift_project_boxed_opaque_existential_1(v4, v40);
    v43 = (*(uint64_t (**)(uint64_t, uint64_t))(v39 + 40))(v40, v39);
    v41 = OUTLINED_FUNCTION_36_10();
    v43 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v41, v42, &v44);
    OUTLINED_FUNCTION_7_32();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v21, v22, "CallControls initial states. call status: %s, controlMode: %s, conversationState: %s, letMeInState: %s", (uint8_t *)v23, 0x2Au);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_60();
  }

}

Swift::Void __swiftcall CallControlsViewController.viewDidLayoutSubviews()()
{
  void *v0;
  void *v1;
  objc_class *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD aBlock[6];
  objc_super v16;

  v1 = v0;
  v2 = (objc_class *)OUTLINED_FUNCTION_15_6();
  v3 = type metadata accessor for DispatchWorkItemFlags();
  v14 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16.receiver = v1;
  v16.super_class = v2;
  objc_msgSendSuper2(&v16, sel_viewDidLayoutSubviews);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v10 = (void *)static OS_dispatch_queue.main.getter();
  v11 = OUTLINED_FUNCTION_7_0();
  swift_unknownObjectWeakInit();
  aBlock[4] = partial apply for closure #1 in CallControlsViewController.viewDidLayoutSubviews();
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = &block_descriptor_2;
  v12 = _Block_copy(aBlock);
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  lazy protocol witness table accessor for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags], MEMORY[0x1E0DEAF38]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  MEMORY[0x1C3B7361C](0, v9, v5, v12);
  _Block_release(v12);

  (*(void (**)(char *, uint64_t))(v14 + 8))(v5, v3);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t CallControlsViewController.isOneToOneModeEnabled.getter()
{
  char *v0;
  void *v1;
  char *v2;
  uint64_t v3;

  CallControlsViewController.menuViewController.getter(&OBJC_IVAR____TtC15ConversationKit26CallControlsViewController____lazy_storage___menuViewController, (uint64_t (*)(uint64_t))closure #1 in CallControlsViewController.menuViewController.getter);
  v1 = v0;
  v2 = &v0[OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_isOneToOneModeEnabled];
  OUTLINED_FUNCTION_1();
  v3 = *v2;

  return v3;
}

void CallControlsViewController.isOneToOneModeEnabled.setter()
{
  void *v0;

  CallControlsViewController.menuViewController.getter(&OBJC_IVAR____TtC15ConversationKit26CallControlsViewController____lazy_storage___menuViewController, (uint64_t (*)(uint64_t))closure #1 in CallControlsViewController.menuViewController.getter);
  OUTLINED_FUNCTION_3_25();
  OUTLINED_FUNCTION_7_1(v0);
}

void CallControlsViewController.isOneToOneModeEnabled.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = CallControlsViewController.isOneToOneModeEnabled.getter() & 1;
  OUTLINED_FUNCTION_0();
}

void CallControlsViewController.isOneToOneModeEnabled.modify()
{
  void *v0;

  CallControlsViewController.menuViewController.getter(&OBJC_IVAR____TtC15ConversationKit26CallControlsViewController____lazy_storage___menuViewController, (uint64_t (*)(uint64_t))closure #1 in CallControlsViewController.menuViewController.getter);
  OUTLINED_FUNCTION_3_25();
  OUTLINED_FUNCTION_7_1(v0);
}

void CallControlsViewController.menuState.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;
  _BYTE *v3;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit26CallControlsViewController_menuState);
  OUTLINED_FUNCTION_1();
  *a1 = *v3;
  OUTLINED_FUNCTION_32();
}

uint64_t key path getter for CallControlsViewController.menuState : CallControlsViewController@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC15ConversationKit26CallControlsViewController_menuState);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void key path setter for CallControlsViewController.menuState : CallControlsViewController(unsigned __int8 *a1)
{
  unsigned __int8 v1;

  v1 = *a1;
  CallControlsViewController.menuState.setter(&v1);
}

void CallControlsViewController.menuState.setter(unsigned __int8 *a1)
{
  uint64_t v1;
  unsigned __int8 v2;
  unsigned __int8 *v3;
  unsigned __int8 v4;
  unsigned __int8 v5;

  v2 = *a1;
  v3 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC15ConversationKit26CallControlsViewController_menuState);
  OUTLINED_FUNCTION_2_0();
  v4 = *v3;
  *v3 = v2;
  v5 = v4;
  CallControlsViewController.menuState.didset(&v5);
  OUTLINED_FUNCTION_9_0();
}

void CallControlsViewController.menuState.didset(unsigned __int8 *a1)
{
  uint64_t v1;
  int v2;
  _BYTE *v3;
  int v4;

  v2 = *a1;
  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit26CallControlsViewController_menuState);
  swift_beginAccess();
  v4 = *v3;
  if (v2)
  {
    if (v2 == 1)
    {
      if (v4 == 1)
        return;
    }
    else if (v4 == 2)
    {
      return;
    }
  }
  else if (!*v3)
  {
    return;
  }
  CallControlsViewController.updateMenuVisibility()();
}

void CallControlsViewController.updateMenuVisibility()()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  unsigned __int8 *v3;
  char v4;
  void *v5;
  void *v6;

  v1 = v0;
  v2 = SidebarStateStream.currentState.getter();
  v3 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC15ConversationKit26CallControlsViewController_menuState);
  swift_beginAccess();
  if (*v3 | v2 & 1)
    v4 = *(_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit26CallControlsViewController_showingCallAgain);
  else
    v4 = 1;
  CallControlsViewController.menuViewController.getter(&OBJC_IVAR____TtC15ConversationKit26CallControlsViewController____lazy_storage___menuViewController, (uint64_t (*)(uint64_t))closure #1 in CallControlsViewController.menuViewController.getter);
  v6 = v5;
  CallControlsMenuViewController.isHidden.setter(v4);

}

void CallControlsViewController.menuState.modify()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  _BYTE *v3;

  v2 = OUTLINED_FUNCTION_38_1();
  *v0 = v2;
  v2[3] = v1;
  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit26CallControlsViewController_menuState);
  OUTLINED_FUNCTION_1();
  *((_BYTE *)v2 + 32) = *v3;
  OUTLINED_FUNCTION_18();
}

{
  void *v0;
  char v1;
  char v2;
  unsigned __int8 *v3;
  char v4;
  char v5;

  OUTLINED_FUNCTION_25_12();
  if ((v2 & 1) != 0)
  {
    v4 = v1;
    v3 = (unsigned __int8 *)&v4;
  }
  else
  {
    v5 = v1;
    v3 = (unsigned __int8 *)&v5;
  }
  CallControlsViewController.menuState.setter(v3);
  OUTLINED_FUNCTION_10_18(v0);
}

uint64_t CallControlsViewController.rosterCount.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit26CallControlsViewController_rosterCount;
  OUTLINED_FUNCTION_1();
  return *(_QWORD *)v1;
}

uint64_t key path getter for CallControlsViewController.rosterCount : CallControlsViewController@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t result;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR____TtC15ConversationKit26CallControlsViewController_rosterCount);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void CallControlsViewController.rosterCount.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC15ConversationKit26CallControlsViewController_rosterCount);
  OUTLINED_FUNCTION_2_0();
  v4 = *v3;
  *v3 = a1;
  CallControlsViewController.rosterCount.didset(v4);
  OUTLINED_FUNCTION_9_0();
}

uint64_t CallControlsViewController.rosterCount.didset(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  uint64_t result;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  _QWORD aBlock[6];

  v2 = v1;
  v4 = type metadata accessor for DispatchWorkItemFlags();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&aBlock[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&aBlock[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)(v2 + OBJC_IVAR____TtC15ConversationKit26CallControlsViewController_rosterCount);
  result = swift_beginAccess();
  if (*v12 != a1)
  {
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
    v17 = static OS_dispatch_queue.main.getter();
    v14 = swift_allocObject();
    swift_unknownObjectWeakInit();
    aBlock[4] = partial apply for closure #1 in CallControlsViewController.viewDidLayoutSubviews();
    aBlock[5] = v14;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
    aBlock[3] = &block_descriptor_10;
    v15 = _Block_copy(aBlock);
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = MEMORY[0x1E0DEE9D8];
    lazy protocol witness table accessor for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
    lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags], MEMORY[0x1E0DEAF38]);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    v16 = (void *)v17;
    MEMORY[0x1C3B7361C](0, v11, v7, v15);
    _Block_release(v15);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  return result;
}

void closure #1 in CallControlsViewController.viewDidLayoutSubviews()(uint64_t a1)
{
  void *v1;

  v1 = (void *)(a1 + 16);
  OUTLINED_FUNCTION_1();
  if (MEMORY[0x1C3B752C0](v1))
  {
    CallControlsViewController.menuViewController.getter(&OBJC_IVAR____TtC15ConversationKit26CallControlsViewController____lazy_storage___menuViewController, (uint64_t (*)(uint64_t))closure #1 in CallControlsViewController.menuViewController.getter);
    OUTLINED_FUNCTION_37_0();
    CallControlsMenuViewController.checkForDynamicState()();

  }
  OUTLINED_FUNCTION_32();
}

void CallControlsViewController.rosterCount.modify()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  v2 = OUTLINED_FUNCTION_38_1();
  *v0 = v2;
  v2[4] = v1;
  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit26CallControlsViewController_rosterCount);
  OUTLINED_FUNCTION_1();
  v2[3] = *v3;
  OUTLINED_FUNCTION_18();
}

void CallControlsViewController.rosterCount.modify(uint64_t a1)
{
  void *v1;

  OUTLINED_FUNCTION_26_8(a1);
  OUTLINED_FUNCTION_11(v1);
}

uint64_t CallControlsViewController.sizeUpdater.getter()
{
  char *v0;
  void *v1;
  char *v2;
  uint64_t v3;

  CallControlsViewController.menuViewController.getter(&OBJC_IVAR____TtC15ConversationKit26CallControlsViewController____lazy_storage___menuViewController, (uint64_t (*)(uint64_t))closure #1 in CallControlsViewController.menuViewController.getter);
  v1 = v0;
  v2 = &v0[OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_sizeUpdater];
  OUTLINED_FUNCTION_1();
  v3 = MEMORY[0x1C3B752C0](v2);

  return v3;
}

void key path setter for CallControlsViewController.sizeUpdater : CallControlsViewController(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = swift_unknownObjectRetain();
  CallControlsViewController.sizeUpdater.setter(v2, v1);
}

void CallControlsViewController.sizeUpdater.setter(uint64_t a1, uint64_t a2)
{
  char *v3;
  void *v4;
  char *v5;

  CallControlsViewController.menuViewController.getter(&OBJC_IVAR____TtC15ConversationKit26CallControlsViewController____lazy_storage___menuViewController, (uint64_t (*)(uint64_t))closure #1 in CallControlsViewController.menuViewController.getter);
  v4 = v3;
  v5 = &v3[OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_sizeUpdater];
  OUTLINED_FUNCTION_2_0();
  *((_QWORD *)v5 + 1) = a2;
  swift_unknownObjectWeakAssign();

  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_9_0();
}

void CallControlsViewController.sizeUpdater.modify(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;

  a1[2] = v1;
  *a1 = CallControlsViewController.sizeUpdater.getter();
  a1[1] = v3;
  OUTLINED_FUNCTION_0();
}

void CallControlsViewController.sizeUpdater.modify(uint64_t *a1, char a2)
{
  uint64_t v2;

  if ((a2 & 1) != 0)
  {
    v2 = swift_unknownObjectRetain();
    OUTLINED_FUNCTION_20_19(v2);
    OUTLINED_FUNCTION_9_8();
  }
  else
  {
    OUTLINED_FUNCTION_20_19(*a1);
    OUTLINED_FUNCTION_18();
  }
}

UILayoutGuide __swiftcall CallControlsViewController.updateViewDependencies(containingView:topCornerView:dodgingView:)(UIView *containingView, UIView_optional *topCornerView, UIView *dodgingView)
{
  UILayoutGuide result;

  swift_unknownObjectWeakAssign();
  CallControlsViewController.menuViewController.getter(&OBJC_IVAR____TtC15ConversationKit26CallControlsViewController____lazy_storage___menuViewController, (uint64_t (*)(uint64_t))closure #1 in CallControlsViewController.menuViewController.getter);
  CallControlsMenuViewController.updateViewDependencies(containingView:topCornerView:dodgingView:)(containingView, topCornerView, dodgingView);
  OUTLINED_FUNCTION_37_0();
  OUTLINED_FUNCTION_18();
  return result;
}

Swift::Void __swiftcall CallControlsViewController.captioningStateDidChange()()
{
  void *v0;
  void *v1;
  void *v2;

  if (objc_msgSend(v0, sel_isViewLoaded))
  {
    CallControlsViewController.menuViewController.getter(&OBJC_IVAR____TtC15ConversationKit26CallControlsViewController____lazy_storage___sidebarViewController, (uint64_t (*)(uint64_t))closure #1 in CallControlsViewController.sidebarViewController.getter);
    v2 = v1;
    CallControlsSidebarViewController.captioningStateDidChange()();
    OUTLINED_FUNCTION_7_1(v2);
  }
  else
  {
    OUTLINED_FUNCTION_36();
  }
}

id CallControlsViewController.setupStatus()()
{
  void *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  id result;
  void *v9;
  id v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  id v25;

  v1 = CallControlsViewController.statusViewModel.getter();
  CallControlsViewController.menuViewController.getter(&OBJC_IVAR____TtC15ConversationKit26CallControlsViewController____lazy_storage___statusView, (uint64_t (*)(uint64_t))closure #1 in CallControlsViewController.statusView.getter);
  v3 = v2;
  swift_beginAccess();
  *(_QWORD *)(v1 + 24) = &protocol witness table for CallControlsStatusView;
  swift_unknownObjectWeakAssign();
  swift_release();

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1BD644B60;
  CallControlsViewController.menuViewController.getter(&OBJC_IVAR____TtC15ConversationKit26CallControlsViewController____lazy_storage___statusView, (uint64_t (*)(uint64_t))closure #1 in CallControlsViewController.statusView.getter);
  v6 = v5;
  v7 = objc_msgSend(v5, sel_topAnchor);

  result = objc_msgSend(v0, sel_view);
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  v9 = result;
  v10 = objc_msgSend(result, sel_topAnchor);

  v11 = objc_msgSend(v7, sel_constraintEqualToAnchor_constant_, v10, 52.0);
  *(_QWORD *)(v4 + 32) = v11;
  CallControlsViewController.menuViewController.getter(&OBJC_IVAR____TtC15ConversationKit26CallControlsViewController____lazy_storage___statusView, (uint64_t (*)(uint64_t))closure #1 in CallControlsViewController.statusView.getter);
  v13 = v12;
  v14 = objc_msgSend(v12, sel_leadingAnchor);

  result = objc_msgSend(v0, sel_view);
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v15 = result;
  v16 = objc_msgSend(result, sel_safeAreaLayoutGuide);

  v17 = objc_msgSend(v16, sel_leadingAnchor);
  v18 = objc_msgSend(v14, sel_constraintEqualToAnchor_constant_, v17, 24.0);

  *(_QWORD *)(v4 + 40) = v18;
  CallControlsViewController.menuViewController.getter(&OBJC_IVAR____TtC15ConversationKit26CallControlsViewController____lazy_storage___statusView, (uint64_t (*)(uint64_t))closure #1 in CallControlsViewController.statusView.getter);
  v20 = v19;
  v21 = objc_msgSend(v19, sel_trailingAnchor);

  result = objc_msgSend(v0, sel_view);
  if (result)
  {
    v22 = result;
    v23 = objc_msgSend(result, sel_safeAreaLayoutGuide);

    v24 = objc_msgSend(v23, sel_trailingAnchor);
    v25 = objc_msgSend(v21, sel_constraintLessThanOrEqualToAnchor_, v24);

    *(_QWORD *)(v4 + 48) = v25;
    specialized Array._endMutation()();
    return (id)v4;
  }
LABEL_7:
  __break(1u);
  return result;
}

id CallControlsViewController.setupSidebar()()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  id result;
  void *v9;
  id v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  void *v25;
  void *v26;
  id v27;
  id v28;

  v1 = v0;
  if ((SidebarStateStream.currentState.getter() & 1) != 0)
    v2 = CallControlsViewController.sidebarTrailingVisible.getter();
  else
    v2 = CallControlsViewController.sidebarTrailingHidden.getter();
  v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1BD644E30;
  CallControlsViewController.menuView.getter(&OBJC_IVAR____TtC15ConversationKit26CallControlsViewController____lazy_storage___sidebarViewController, (uint64_t (*)(uint64_t))closure #1 in CallControlsViewController.sidebarViewController.getter);
  v6 = v5;
  v7 = objc_msgSend(v5, sel_topAnchor);

  result = objc_msgSend(v1, sel_view);
  if (result)
  {
    v9 = result;
    v10 = objc_msgSend(result, sel_topAnchor);

    v11 = objc_msgSend(v7, sel_constraintEqualToAnchor_, v10);
    *(_QWORD *)(v4 + 32) = v11;
    CallControlsViewController.menuView.getter(&OBJC_IVAR____TtC15ConversationKit26CallControlsViewController____lazy_storage___sidebarViewController, (uint64_t (*)(uint64_t))closure #1 in CallControlsViewController.sidebarViewController.getter);
    v13 = v12;
    v14 = objc_msgSend(v12, sel_bottomAnchor);

    result = objc_msgSend(v1, sel_view);
    if (result)
    {
      v15 = result;
      v16 = objc_msgSend(result, sel_bottomAnchor);

      v17 = objc_msgSend(v14, sel_constraintEqualToAnchor_, v16);
      *(_QWORD *)(v4 + 40) = v17;
      CallControlsViewController.menuView.getter(&OBJC_IVAR____TtC15ConversationKit26CallControlsViewController____lazy_storage___sidebarViewController, (uint64_t (*)(uint64_t))closure #1 in CallControlsViewController.sidebarViewController.getter);
      v19 = v18;
      v20 = objc_msgSend(v18, sel_widthAnchor);

      CallControlsViewController.menuView.getter(&OBJC_IVAR____TtC15ConversationKit26CallControlsViewController____lazy_storage___menuViewController, (uint64_t (*)(uint64_t))closure #1 in CallControlsViewController.menuViewController.getter);
      v22 = v21;
      v23 = objc_msgSend(v21, sel_widthAnchor);

      v24 = objc_msgSend(v20, sel_constraintGreaterThanOrEqualToAnchor_, v23);
      *(_QWORD *)(v4 + 48) = v24;
      CallControlsViewController.menuView.getter(&OBJC_IVAR____TtC15ConversationKit26CallControlsViewController____lazy_storage___sidebarViewController, (uint64_t (*)(uint64_t))closure #1 in CallControlsViewController.sidebarViewController.getter);
      v26 = v25;
      v27 = objc_msgSend(v25, sel_widthAnchor);

      v28 = objc_msgSend(v27, sel_constraintGreaterThanOrEqualToConstant_, 280.0);
      *(_QWORD *)(v4 + 56) = v28;
      *(_QWORD *)(v4 + 64) = v3;
      specialized Array._endMutation()();
      return (id)v4;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t CallControlsViewController.isScreenLocked.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  _BYTE v6[16];

  v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Just<Bool>);
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = &v6[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6[15] = 0;
  Just.init(_:)();
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type Just<Bool> and conformance Just<A>, &demangling cache variable for type metadata for Just<Bool>, MEMORY[0x1E0C960B0]);
  v4 = Publisher.eraseToAnyPublisher()();
  (*(void (**)(_BYTE *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

id closure #1 in CallControlsViewController.statusView.getter(void *a1)
{
  id v2;
  id result;
  void *v4;

  type metadata accessor for CallControlsStatusView();
  v2 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  result = objc_msgSend(a1, sel_view);
  if (result)
  {
    v4 = result;
    objc_msgSend(result, sel_addSubview_, v2);

    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id closure #1 in CallControlsViewController.menuViewController.getter(char *a1)
{
  id v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id result;
  void *v10;
  void *v11;
  void *v12;
  _BYTE v13[40];

  v2 = *(id *)&a1[OBJC_IVAR____TtC15ConversationKit26CallControlsViewController_controlsManager];
  v3 = CallControlsViewController.isScreenLocked.getter();
  v4 = &a1[OBJC_IVAR____TtC15ConversationKit26CallControlsViewController_rosterViewProvider];
  v5 = MEMORY[0x1C3B752C0](&a1[OBJC_IVAR____TtC15ConversationKit26CallControlsViewController_rosterViewProvider]);
  v6 = *((_QWORD *)v4 + 1);
  outlined init with copy of IDSLookupManager((uint64_t)&a1[OBJC_IVAR____TtC15ConversationKit26CallControlsViewController_service], (uint64_t)v13);
  v7 = *(_QWORD *)&a1[OBJC_IVAR____TtC15ConversationKit26CallControlsViewController_sidebarStateStream];
  objc_allocWithZone((Class)type metadata accessor for CallControlsMenuViewController());
  swift_retain();
  v8 = CallControlsMenuViewController.init(controlsManager:isScreenLocked:rosterViewProvider:service:sidebarStateStream:)(v2, v3, v5, v6, (uint64_t)v13, v7);
  objc_msgSend(a1, sel_addChildViewController_, v8);
  result = objc_msgSend(a1, sel_view);
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  v10 = result;
  result = objc_msgSend(v8, sel_view);
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v11 = result;
  objc_msgSend(v10, sel_addSubview_, result);

  objc_msgSend(v8, sel_didMoveToParentViewController_, a1);
  result = objc_msgSend(v8, sel_view);
  if (result)
  {
    v12 = result;
    objc_msgSend(result, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

    return v8;
  }
LABEL_7:
  __break(1u);
  return result;
}

void closure #1 in CallControlsViewController.observeSidebarState()(char *a1, uint64_t a2)
{
  char v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1C3B752C0](v3);
  if (v4)
  {
    v5 = (void *)v4;
    CallControlsViewController.animateSidebarState(_:)(v2);

  }
}

void CallControlsViewController.animateSidebarState(_:)(char a1)
{
  void *v1;
  void *v3;
  void *v4;
  unsigned int v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  double v13;
  double v14;
  double v15;
  double v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  void *v30;
  uint64_t v31;

  CallControlsViewController.menuViewController.getter(&OBJC_IVAR____TtC15ConversationKit26CallControlsViewController____lazy_storage___sidebarViewController, (uint64_t (*)(uint64_t))closure #1 in CallControlsViewController.sidebarViewController.getter);
  v4 = v3;
  v5 = objc_msgSend(v3, sel_isViewLoaded);

  if (v5)
  {
    v6 = a1 & 1;
    CallControlsViewController.menuView.getter(&OBJC_IVAR____TtC15ConversationKit26CallControlsViewController____lazy_storage___sidebarViewController, (uint64_t (*)(uint64_t))closure #1 in CallControlsViewController.sidebarViewController.getter);
    v8 = v7;
    objc_msgSend(v7, sel_setHidden_, 0);

    v9 = CallControlsViewController.sidebarTrailingVisible.getter();
    objc_msgSend(v9, sel_setActive_, v6);

    v10 = CallControlsViewController.sidebarTrailingHidden.getter();
    objc_msgSend(v10, sel_setActive_, (_DWORD)v6 == 0);

    if ((_DWORD)v6)
      CallControlsViewController.updateSidebarInsets()();
    v11 = (void *)objc_opt_self();
    objc_msgSend(v11, sel_begin);
    v12 = objc_allocWithZone(MEMORY[0x1E0CD27D0]);
    LODWORD(v13) = 1048240456;
    LODWORD(v14) = 1025758986;
    LODWORD(v15) = 1065269330;
    LODWORD(v16) = 0.375;
    v17 = objc_msgSend(v12, sel_initWithControlPoints__::, v13, v16, v14, v15);
    objc_msgSend(v11, sel_setAnimationTimingFunction_, v17);

    v18 = (void *)objc_opt_self();
    v19 = swift_allocObject();
    *(_QWORD *)(v19 + 16) = v1;
    v30 = partial apply for closure #1 in CallControlsViewController.animateSidebarState(_:);
    v31 = v19;
    v20 = MEMORY[0x1E0C809B0];
    v26 = MEMORY[0x1E0C809B0];
    v27 = 1107296256;
    v28 = thunk for @escaping @callee_guaranteed () -> ();
    v29 = &block_descriptor_18;
    v21 = _Block_copy(&v26);
    v22 = v1;
    swift_release();
    v23 = swift_allocObject();
    *(_QWORD *)(v23 + 16) = v22;
    *(_BYTE *)(v23 + 24) = v6;
    v30 = partial apply for closure #2 in CallControlsViewController.animateSidebarState(_:);
    v31 = v23;
    v26 = v20;
    v27 = 1107296256;
    v28 = thunk for @escaping @callee_guaranteed (@unowned Bool) -> ();
    v29 = &block_descriptor_24;
    v24 = _Block_copy(&v26);
    v25 = v22;
    swift_release();
    objc_msgSend(v18, sel_animateWithDuration_delay_options_animations_completion_, 6, v21, v24, 0.3, 0.0);
    _Block_release(v24);
    _Block_release(v21);
    objc_msgSend(v11, sel_commit);
  }
}

id CallControlsViewController.sidebarTrailingVisible.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  id v12;

  v1 = OBJC_IVAR____TtC15ConversationKit26CallControlsViewController____lazy_storage___sidebarTrailingVisible;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC15ConversationKit26CallControlsViewController____lazy_storage___sidebarTrailingVisible);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC15ConversationKit26CallControlsViewController____lazy_storage___sidebarTrailingVisible);
  }
  else
  {
    CallControlsViewController.menuView.getter(&OBJC_IVAR____TtC15ConversationKit26CallControlsViewController____lazy_storage___sidebarViewController, (uint64_t (*)(uint64_t))closure #1 in CallControlsViewController.sidebarViewController.getter);
    v5 = v4;
    v6 = objc_msgSend(v4, sel_trailingAnchor);

    CallControlsViewController.menuView.getter(&OBJC_IVAR____TtC15ConversationKit26CallControlsViewController____lazy_storage___menuViewController, (uint64_t (*)(uint64_t))closure #1 in CallControlsViewController.menuViewController.getter);
    v8 = v7;
    v9 = objc_msgSend(v7, sel_trailingAnchor);

    v10 = objc_msgSend(v6, sel_constraintEqualToAnchor_, v9);
    v11 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v10;
    v3 = v10;

    v2 = 0;
  }
  v12 = v2;
  return v3;
}

void CallControlsViewController.menuView.getter(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v2;
  id v3;
  id v4;

  CallControlsViewController.menuViewController.getter(a1, a2);
  v4 = objc_msgSend(v3, sel_view);
  OUTLINED_FUNCTION_37_0();
  if (v2)
    OUTLINED_FUNCTION_0();
  else
    __break(1u);
}

id CallControlsViewController.sidebarTrailingHidden.getter()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  id result;
  void *v8;
  id v9;
  id v10;
  void *v11;
  id v12;

  v1 = OBJC_IVAR____TtC15ConversationKit26CallControlsViewController____lazy_storage___sidebarTrailingHidden;
  v2 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit26CallControlsViewController____lazy_storage___sidebarTrailingHidden];
  if (v2)
  {
    v3 = *(id *)&v0[OBJC_IVAR____TtC15ConversationKit26CallControlsViewController____lazy_storage___sidebarTrailingHidden];
LABEL_5:
    v12 = v2;
    return v3;
  }
  CallControlsViewController.menuView.getter(&OBJC_IVAR____TtC15ConversationKit26CallControlsViewController____lazy_storage___sidebarViewController, (uint64_t (*)(uint64_t))closure #1 in CallControlsViewController.sidebarViewController.getter);
  v5 = v4;
  v6 = objc_msgSend(v4, sel_trailingAnchor);

  result = objc_msgSend(v0, sel_view);
  if (result)
  {
    v8 = result;
    v9 = objc_msgSend(result, sel_leadingAnchor);

    v10 = objc_msgSend(v6, sel_constraintEqualToAnchor_, v9);
    v11 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v10;
    v3 = v10;

    v2 = 0;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

id closure #1 in CallControlsViewController.sidebarViewController.getter(char *a1)
{
  void *v2;
  id v3;
  id v4;
  id result;
  void *v6;
  void *v7;
  void *v8;
  void *v9;

  MEMORY[0x1C3B752C0](&a1[OBJC_IVAR____TtC15ConversationKit26CallControlsViewController_captionsStateController]);
  v2 = *(void **)&a1[OBJC_IVAR____TtC15ConversationKit26CallControlsViewController_controlsManager];
  objc_allocWithZone((Class)type metadata accessor for CallControlsSidebarViewController());
  v3 = v2;
  swift_retain();
  v4 = CallControlsSidebarViewController.init(captionsStateController:controlsManager:sidebarStateStream:)();
  objc_msgSend(a1, sel_addChildViewController_, v4);
  result = objc_msgSend(v4, sel_view);
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  v6 = result;
  objc_msgSend(result, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  result = objc_msgSend(a1, sel_view);
  if (!result)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v7 = result;
  result = objc_msgSend(v4, sel_view);
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v8 = result;
  objc_msgSend(v7, sel_addSubview_, result);

  objc_msgSend(v4, sel_didMoveToParentViewController_, a1);
  result = objc_msgSend(v4, sel_view);
  if (result)
  {
    v9 = result;
    objc_msgSend(result, sel_setHidden_, 1);

    return v4;
  }
LABEL_9:
  __break(1u);
  return result;
}

void CallControlsViewController.updateSidebarInsets()()
{
  void *v0;
  void *v1;
  void *v2;
  double v3;
  CGFloat v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double Height;
  id v12;
  void *v13;
  double v14;
  double v15;
  void *v16;
  void *v17;
  _QWORD *v18;
  id v19;
  CGRect v20;

  CallControlsViewController.menuView.getter(&OBJC_IVAR____TtC15ConversationKit26CallControlsViewController____lazy_storage___menuViewController, (uint64_t (*)(uint64_t))closure #1 in CallControlsViewController.menuViewController.getter);
  v2 = v1;
  objc_msgSend(v1, sel_frame);
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;

  v20.origin.x = v4;
  v20.origin.y = v6;
  v20.size.width = v8;
  v20.size.height = v10;
  Height = CGRectGetHeight(v20);
  v12 = objc_msgSend(v0, sel_view);
  if (v12)
  {
    v13 = v12;
    objc_msgSend(v12, sel_safeAreaInsets);
    v15 = v14;

    CallControlsViewController.menuViewController.getter(&OBJC_IVAR____TtC15ConversationKit26CallControlsViewController____lazy_storage___sidebarViewController, (uint64_t (*)(uint64_t))closure #1 in CallControlsViewController.sidebarViewController.getter);
    v17 = v16;
    CallControlsSidebarViewController.detailsViewController.getter();
    v19 = v18;
    (*(void (**)(double, double, double, double))((*MEMORY[0x1E0DEEDD8] & *v18) + 0x100))(0.0, 0.0, Height - v15, 0.0);

  }
  else
  {
    __break(1u);
  }
}

void closure #1 in CallControlsViewController.animateSidebarState(_:)(void *a1)
{
  id v1;
  id v2;

  v1 = objc_msgSend(a1, sel_view);
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, sel_layoutIfNeeded);

  }
  else
  {
    __break(1u);
  }
}

void closure #2 in CallControlsViewController.animateSidebarState(_:)(char a1, uint64_t a2, char a3)
{
  void *v4;
  uint64_t v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  id v10;

  if ((a1 & 1) != 0)
  {
    CallControlsViewController.menuView.getter(&OBJC_IVAR____TtC15ConversationKit26CallControlsViewController____lazy_storage___sidebarViewController, (uint64_t (*)(uint64_t))closure #1 in CallControlsViewController.sidebarViewController.getter);
    v10 = v4;
    objc_msgSend(v4, sel_setHidden_, (a3 & 1) == 0);

  }
  else
  {
    v5 = a3 & 1;
    v6 = CallControlsViewController.sidebarTrailingVisible.getter();
    objc_msgSend(v6, sel_setActive_, (_DWORD)v5 == 0);

    v7 = CallControlsViewController.sidebarTrailingHidden.getter();
    objc_msgSend(v7, sel_setActive_, v5);

    CallControlsViewController.menuView.getter(&OBJC_IVAR____TtC15ConversationKit26CallControlsViewController____lazy_storage___sidebarViewController, (uint64_t (*)(uint64_t))closure #1 in CallControlsViewController.sidebarViewController.getter);
    v9 = v8;
    objc_msgSend(v8, sel_setHidden_, v5);

    CallControlsViewController.updateMenuVisibility()();
  }
}

void CallControlsViewController.showingCallAgain.didset(char a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;

  v2 = OBJC_IVAR____TtC15ConversationKit26CallControlsViewController_showingCallAgain;
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit26CallControlsViewController_showingCallAgain) != (a1 & 1))
  {
    CallControlsViewController.updateMenuVisibility()();
    CallControlsViewController.menuViewController.getter(&OBJC_IVAR____TtC15ConversationKit26CallControlsViewController____lazy_storage___sidebarViewController, (uint64_t (*)(uint64_t))closure #1 in CallControlsViewController.sidebarViewController.getter);
    v4 = v3;
    v5 = objc_msgSend(v3, sel_viewIfLoaded);

    if (v5)
    {
      objc_msgSend(v5, sel_setHidden_, *(unsigned __int8 *)(v1 + v2));

    }
  }
}

void CallControlsViewController.showingCallAgain.setter(char a1)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit26CallControlsViewController_showingCallAgain);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit26CallControlsViewController_showingCallAgain) = a1;
  CallControlsViewController.showingCallAgain.didset(v2);
}

void closure #1 in CallControlsViewController.observeControlMode()(unsigned __int8 *a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1C3B752C0](v3);
  if (v4)
  {
    v5 = (void *)v4;
    CallControlsViewController.showingCallAgain.setter(v2 == 129);

  }
}

void CallControlsViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;

  v4 = v3;
  if (a2)
  {
    v6 = (void *)MEMORY[0x1C3B72E00]();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  OUTLINED_FUNCTION_18();
}

void CallControlsViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void (*protocol witness for CallControlsPlatformController.isOneToOneModeEnabled.modify in conformance CallControlsViewController(uint64_t a1))()
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = CallControlsViewController.isOneToOneModeEnabled.getter() & 1;
  return CallControlsViewController.isOneToOneModeEnabled.modify;
}

void (*protocol witness for CallControlsPlatformController.menuState.modify in conformance CallControlsViewController(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  _BYTE *v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit26CallControlsViewController_menuState);
  swift_beginAccess();
  *((_BYTE *)v3 + 32) = *v4;
  return CallControlsViewController.menuState.modify;
}

void (*protocol witness for CallControlsPlatformController.rosterCount.modify in conformance CallControlsViewController(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  _QWORD *v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = (_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit26CallControlsViewController_rosterCount);
  swift_beginAccess();
  v3[3] = *v4;
  return CallControlsViewController.rosterCount.modify;
}

void (*protocol witness for CallControlsPlatformController.sizeUpdater.modify in conformance CallControlsViewController(uint64_t *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;

  a1[2] = v1;
  *a1 = CallControlsViewController.sizeUpdater.getter();
  a1[1] = v3;
  return CallControlsViewController.sizeUpdater.modify;
}

id CallControlsViewController.constraintsForLayout(_:in:deviceOrientation:)()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id result;
  id v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  id v20;
  id v21;

  v1 = MEMORY[0x1C3B752C0](v0 + OBJC_IVAR____TtC15ConversationKit26CallControlsViewController_containingView);
  if (!v1)
    return (id)MEMORY[0x1E0DEE9D8];
  v2 = (void *)v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1BD644140;
  result = OUTLINED_FUNCTION_4_16();
  if (!result)
  {
    __break(1u);
    goto LABEL_10;
  }
  v5 = objc_msgSend(result, sel_topAnchor);
  OUTLINED_FUNCTION_18_11();
  v7 = OUTLINED_FUNCTION_123(v6, sel_topAnchor);
  v8 = OUTLINED_FUNCTION_8_28();
  OUTLINED_FUNCTION_14();

  *(_QWORD *)(v3 + 32) = &selRef_associatedAppBundleIdentifier;
  result = OUTLINED_FUNCTION_4_16();
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v9 = objc_msgSend(result, sel_bottomAnchor);
  OUTLINED_FUNCTION_18_11();
  v11 = OUTLINED_FUNCTION_123(v10, sel_bottomAnchor);
  v12 = OUTLINED_FUNCTION_8_28();
  OUTLINED_FUNCTION_14();

  *(_QWORD *)(v3 + 40) = &selRef_associatedAppBundleIdentifier;
  result = OUTLINED_FUNCTION_4_16();
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v13 = objc_msgSend(result, sel_leadingAnchor);
  OUTLINED_FUNCTION_18_11();
  v15 = OUTLINED_FUNCTION_123(v14, sel_leadingAnchor);
  v16 = OUTLINED_FUNCTION_8_28();
  OUTLINED_FUNCTION_14();

  *(_QWORD *)(v3 + 48) = &selRef_associatedAppBundleIdentifier;
  result = OUTLINED_FUNCTION_4_16();
  if (result)
  {
    v17 = result;
    v18 = objc_msgSend(result, sel_trailingAnchor);

    v20 = OUTLINED_FUNCTION_123(v19, sel_trailingAnchor);
    v21 = objc_msgSend(v18, sel_constraintEqualToAnchor_, v20);
    OUTLINED_FUNCTION_18_11();

    *(_QWORD *)(v3 + 56) = &selRef_associatedAppBundleIdentifier;
    specialized Array._endMutation()();

    return (id)v3;
  }
LABEL_12:
  __break(1u);
  return result;
}

id protocol witness for ViewConstraintManager.constraintsForLayout(_:in:deviceOrientation:) in conformance CallControlsViewController()
{
  return CallControlsViewController.constraintsForLayout(_:in:deviceOrientation:)();
}

id PassthroughView.hitTest(_:with:)(uint64_t a1, double a2, double a3)
{
  void *v3;
  id v7;
  id v8;
  id v9;
  char v10;
  objc_super v12;

  v12.receiver = v3;
  v12.super_class = (Class)swift_getObjectType();
  v7 = objc_msgSendSuper2(&v12, sel_hitTest_withEvent_, a1, a2, a3);
  if (v7)
  {
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIView);
    v8 = v3;
    v9 = v7;
    v10 = static NSObject.== infix(_:_:)();

    if ((v10 & 1) != 0)
    {

      return 0;
    }
  }
  return v7;
}

id PassthroughView.init(frame:)(double a1, double a2, double a3, double a4)
{
  void *v4;
  objc_super v10;

  v10.receiver = v4;
  v10.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v10, sel_initWithFrame_, a1, a2, a3, a4);
}

id PassthroughView.init(coder:)(void *a1)
{
  void *v1;
  id v3;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)swift_getObjectType();
  v3 = objc_msgSendSuper2(&v5, sel_initWithCoder_, a1);

  return v3;
}

id CallControlsViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)OUTLINED_FUNCTION_15_6();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for PassthroughView()
{
  return objc_opt_self();
}

uint64_t sub_1BD067F4C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void partial apply for closure #1 in CallControlsViewController.viewDidLayoutSubviews()()
{
  uint64_t v0;

  closure #1 in CallControlsViewController.viewDidLayoutSubviews()(v0);
}

void sub_1BD067F88(_BYTE *a1@<X8>)
{
  *a1 = CallControlsViewController.isOneToOneModeEnabled.getter() & 1;
  OUTLINED_FUNCTION_0();
}

void sub_1BD067FB0()
{
  CallControlsViewController.isOneToOneModeEnabled.setter();
  OUTLINED_FUNCTION_0();
}

void sub_1BD067FDC(uint64_t *a1)
{
  CallControlsViewController.rosterCount.setter(*a1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD067FFC(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = CallControlsViewController.sizeUpdater.getter();
  a1[1] = v2;
  OUTLINED_FUNCTION_0();
}

uint64_t dispatch thunk of CallControlsPlatformController.isOneToOneModeEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of CallControlsPlatformController.isOneToOneModeEnabled.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of CallControlsPlatformController.isOneToOneModeEnabled.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of CallControlsPlatformController.menuState.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of CallControlsPlatformController.menuState.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of CallControlsPlatformController.menuState.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of CallControlsPlatformController.rosterCount.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of CallControlsPlatformController.rosterCount.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of CallControlsPlatformController.rosterCount.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t dispatch thunk of CallControlsPlatformController.captioningStateDidChange()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of CallControlsPlatformController.sizeUpdater.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t dispatch thunk of CallControlsPlatformController.sizeUpdater.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 104))();
}

uint64_t dispatch thunk of CallControlsPlatformController.sizeUpdater.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 112))();
}

uint64_t dispatch thunk of CallControlsPlatformController.updateViewDependencies(containingView:topCornerView:dodgingView:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 120))();
}

uint64_t dispatch thunk of RosterViewProvider.currentRosterViews.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t type metadata accessor for CallControlsViewController()
{
  return objc_opt_self();
}

uint64_t method lookup function for CallControlsViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CallControlsViewController.__allocating_init(captionsStateController:controlsManager:rosterViewProvider:service:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 208))();
}

void partial apply for closure #1 in CallControlsViewController.observeControlMode()(unsigned __int8 *a1)
{
  uint64_t v1;

  closure #1 in CallControlsViewController.observeControlMode()(a1, v1);
}

unint64_t lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type NSRunLoop and conformance NSRunLoop;
  if (!lazy protocol witness table cache variable for type NSRunLoop and conformance NSRunLoop)
  {
    type metadata accessor for NSObject(255, (unint64_t *)&lazy cache variable for type metadata for NSRunLoop);
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CB2358], v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type NSRunLoop and conformance NSRunLoop);
  }
  return result;
}

uint64_t outlined destroy of NSRunLoop.SchedulerOptions?(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void partial apply for closure #1 in CallControlsViewController.observeSidebarState()(char *a1)
{
  uint64_t v1;

  closure #1 in CallControlsViewController.observeSidebarState()(a1, v1);
}

uint64_t sub_1BD068170()
{
  uint64_t v0;

  return swift_deallocObject();
}

void partial apply for closure #1 in CallControlsViewController.animateSidebarState(_:)()
{
  uint64_t v0;

  closure #1 in CallControlsViewController.animateSidebarState(_:)(*(void **)(v0 + 16));
}

uint64_t sub_1BD06819C()
{
  uint64_t v0;

  return swift_deallocObject();
}

void partial apply for closure #2 in CallControlsViewController.animateSidebarState(_:)(char a1)
{
  uint64_t v1;

  closure #2 in CallControlsViewController.animateSidebarState(_:)(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24));
}

uint64_t static ClarityUIPreferences.shared.getter()
{
  if (one-time initialization token for shared != -1)
    swift_once();
  return swift_retain();
}

id ClarityUIPreferences.incomingCommunicationLimit.getter()
{
  uint64_t v0;

  swift_getKeyPath();
  OUTLINED_FUNCTION_5_14();
  OUTLINED_FUNCTION_2_6();
  OUTLINED_FUNCTION_11_0();
  return OUTLINED_FUNCTION_7_33(*(id *)(v0 + 16));
}

id key path getter for ClarityUIPreferences.incomingCommunicationLimit : ClarityUIPreferences@<X0>(_QWORD *a1@<X8>)
{
  id result;

  result = ClarityUIPreferences.incomingCommunicationLimit.getter();
  *a1 = result;
  return result;
}

void sub_1BD0682C4()
{
  id *v0;

  OUTLINED_FUNCTION_4();
  *v0 = ClarityUIPreferences.incomingCommunicationLimit.getter();
  OUTLINED_FUNCTION_0();
}

void key path setter for ClarityUIPreferences.incomingCommunicationLimit : ClarityUIPreferences(id *a1)
{
  id v1;

  v1 = *a1;
  ClarityUIPreferences.incomingCommunicationLimit.setter();
}

unint64_t lazy protocol witness table accessor for type ClarityUIPreferences and conformance ClarityUIPreferences()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type ClarityUIPreferences and conformance ClarityUIPreferences;
  if (!lazy protocol witness table cache variable for type ClarityUIPreferences and conformance ClarityUIPreferences)
  {
    v1 = type metadata accessor for ClarityUIPreferences();
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ClarityUIPreferences, v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ClarityUIPreferences and conformance ClarityUIPreferences);
  }
  return result;
}

uint64_t type metadata accessor for ClarityUIPreferences()
{
  uint64_t result;

  result = type metadata singleton initialization cache for ClarityUIPreferences;
  if (!type metadata singleton initialization cache for ClarityUIPreferences)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t ClarityUIPreferences.access<A>(keyPath:)()
{
  lazy protocol witness table accessor for type ClarityUIPreferences and conformance ClarityUIPreferences();
  return ObservationRegistrar.access<A, B>(_:keyPath:)();
}

void closure #1 in ClarityUIPreferences.incomingCommunicationLimit.setter(uint64_t a1, void *a2)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = a2;
  v3 = a2;

}

uint64_t specialized ClarityUIPreferences.withMutation<A, B>(keyPath:_:)()
{
  lazy protocol witness table accessor for type ClarityUIPreferences and conformance ClarityUIPreferences();
  return ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
}

uint64_t ClarityUIPreferences.withMutation<A, B>(keyPath:_:)()
{
  lazy protocol witness table accessor for type ClarityUIPreferences and conformance ClarityUIPreferences();
  return ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
}

id ClarityUIPreferences.outgoingCommunicationLimit.getter()
{
  uint64_t v0;

  swift_getKeyPath();
  OUTLINED_FUNCTION_5_14();
  OUTLINED_FUNCTION_2_6();
  OUTLINED_FUNCTION_11_0();
  return OUTLINED_FUNCTION_7_33(*(id *)(v0 + 24));
}

id key path getter for ClarityUIPreferences.outgoingCommunicationLimit : ClarityUIPreferences@<X0>(_QWORD *a1@<X8>)
{
  id result;

  result = ClarityUIPreferences.outgoingCommunicationLimit.getter();
  *a1 = result;
  return result;
}

void sub_1BD0685A0()
{
  id *v0;

  OUTLINED_FUNCTION_4();
  *v0 = ClarityUIPreferences.outgoingCommunicationLimit.getter();
  OUTLINED_FUNCTION_0();
}

void key path setter for ClarityUIPreferences.outgoingCommunicationLimit : ClarityUIPreferences(id *a1)
{
  id v1;

  v1 = *a1;
  ClarityUIPreferences.incomingCommunicationLimit.setter();
}

void ClarityUIPreferences.incomingCommunicationLimit.setter()
{
  void *v0;

  OUTLINED_FUNCTION_14_29();
  OUTLINED_FUNCTION_6_24();
  swift_release();

  OUTLINED_FUNCTION_10_10();
}

void closure #1 in ClarityUIPreferences.outgoingCommunicationLimit.setter(uint64_t a1, void *a2)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = a2;
  v3 = a2;

}

void ClarityUIPreferences.recentsEnabled.getter()
{
  swift_getKeyPath();
  OUTLINED_FUNCTION_5_14();
  OUTLINED_FUNCTION_2_6();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_45_0();
}

void key path getter for ClarityUIPreferences.recentsEnabled : ClarityUIPreferences(_BYTE *a1@<X8>)
{
  char v2;

  ClarityUIPreferences.recentsEnabled.getter();
  *a1 = v2 & 1;
}

void sub_1BD0686DC()
{
  _BYTE *v0;
  char v1;

  OUTLINED_FUNCTION_4();
  ClarityUIPreferences.recentsEnabled.getter();
  *v0 = v1 & 1;
  OUTLINED_FUNCTION_0();
}

uint64_t key path setter for ClarityUIPreferences.recentsEnabled : ClarityUIPreferences()
{
  return ClarityUIPreferences.recentsEnabled.setter();
}

void sub_1BD068734()
{
  ClarityUIPreferences.recentsEnabled.setter();
  OUTLINED_FUNCTION_0();
}

void ClarityUIPreferences.inCallKeypadEnabled.getter()
{
  swift_getKeyPath();
  OUTLINED_FUNCTION_5_14();
  OUTLINED_FUNCTION_2_6();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_45_0();
}

void key path getter for ClarityUIPreferences.inCallKeypadEnabled : ClarityUIPreferences(_BYTE *a1@<X8>)
{
  char v2;

  ClarityUIPreferences.inCallKeypadEnabled.getter();
  *a1 = v2 & 1;
}

void sub_1BD0687D8()
{
  _BYTE *v0;
  char v1;

  OUTLINED_FUNCTION_4();
  ClarityUIPreferences.inCallKeypadEnabled.getter();
  *v0 = v1 & 1;
  OUTLINED_FUNCTION_0();
}

uint64_t key path setter for ClarityUIPreferences.inCallKeypadEnabled : ClarityUIPreferences()
{
  return ClarityUIPreferences.recentsEnabled.setter();
}

void sub_1BD068830()
{
  ClarityUIPreferences.recentsEnabled.setter();
  OUTLINED_FUNCTION_0();
}

uint64_t ClarityUIPreferences.recentsEnabled.setter()
{
  swift_getKeyPath();
  OUTLINED_FUNCTION_6_24();
  return swift_release();
}

void ClarityUIPreferences.speakerOptionEnabled.getter()
{
  swift_getKeyPath();
  OUTLINED_FUNCTION_5_14();
  OUTLINED_FUNCTION_2_6();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_45_0();
}

void key path getter for ClarityUIPreferences.speakerOptionEnabled : ClarityUIPreferences(_BYTE *a1@<X8>)
{
  char v2;

  ClarityUIPreferences.speakerOptionEnabled.getter();
  *a1 = v2 & 1;
}

void sub_1BD068924()
{
  _BYTE *v0;
  char v1;

  OUTLINED_FUNCTION_4();
  ClarityUIPreferences.speakerOptionEnabled.getter();
  *v0 = v1 & 1;
  OUTLINED_FUNCTION_0();
}

uint64_t key path setter for ClarityUIPreferences.speakerOptionEnabled : ClarityUIPreferences()
{
  return ClarityUIPreferences.recentsEnabled.setter();
}

void sub_1BD06897C()
{
  ClarityUIPreferences.recentsEnabled.setter();
  OUTLINED_FUNCTION_0();
}

uint64_t ClarityUIPreferences.().init()()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  id v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t);
  void *v32;
  uint64_t (*v33)();
  uint64_t v34;

  *(_QWORD *)(v0 + 72) = 0;
  *(_OWORD *)(v0 + 56) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  ObservationRegistrar.init()();
  type metadata accessor for CLFPhoneFaceTimeSettings();
  v1 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_sharedInstance);
  *(_QWORD *)(v0 + 16) = objc_msgSend(v1, sel_incomingCommunicationLimit);
  *(_QWORD *)(v0 + 24) = objc_msgSend(v1, sel_outgoingCommunicationLimit);
  *(_BYTE *)(v0 + 32) = objc_msgSend(v1, sel_recentsEnabled);
  *(_BYTE *)(v0 + 33) = objc_msgSend(v1, sel_inCallKeypadEnabled);
  *(_BYTE *)(v0 + 34) = objc_msgSend(v1, sel_speakerOptionEnabled);
  v2 = swift_allocObject();
  swift_weakInit();
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v1;
  v33 = partial apply for closure #1 in ClarityUIPreferences.().init();
  v34 = v3;
  v4 = MEMORY[0x1E0C809B0];
  v29 = MEMORY[0x1E0C809B0];
  v30 = 1107296256;
  v31 = thunk for @escaping @callee_guaranteed () -> ();
  v32 = &block_descriptor_3;
  v5 = _Block_copy(&v29);
  v6 = v1;
  swift_release();
  v7 = objc_msgSend(v6, sel_observeUpdatesForSelector_handler_, sel_incomingCommunicationLimit, v5);
  _Block_release(v5);
  ClarityUIPreferences.incomingCommunicationLimitObserver.setter();
  v8 = swift_allocObject();
  swift_weakInit();
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = v6;
  v33 = partial apply for closure #2 in ClarityUIPreferences.().init();
  v34 = v9;
  v29 = v4;
  v30 = 1107296256;
  v31 = thunk for @escaping @callee_guaranteed () -> ();
  v32 = &block_descriptor_26_0;
  v10 = _Block_copy(&v29);
  v11 = v6;
  swift_release();
  v12 = objc_msgSend(v11, sel_observeUpdatesForSelector_handler_, sel_outgoingCommunicationLimit, v10);
  _Block_release(v10);
  ClarityUIPreferences.incomingCommunicationLimitObserver.setter();
  v13 = swift_allocObject();
  swift_weakInit();
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v13;
  *(_QWORD *)(v14 + 24) = v11;
  v33 = partial apply for closure #3 in ClarityUIPreferences.().init();
  v34 = v14;
  v29 = v4;
  v30 = 1107296256;
  v31 = thunk for @escaping @callee_guaranteed () -> ();
  v32 = &block_descriptor_33;
  v15 = _Block_copy(&v29);
  v16 = v11;
  swift_release();
  v17 = objc_msgSend(v16, sel_observeUpdatesForSelector_handler_, sel_recentsEnabled, v15);
  _Block_release(v15);
  ClarityUIPreferences.incomingCommunicationLimitObserver.setter();
  v18 = swift_allocObject();
  swift_weakInit();
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = v18;
  *(_QWORD *)(v19 + 24) = v16;
  v33 = partial apply for closure #4 in ClarityUIPreferences.().init();
  v34 = v19;
  v29 = v4;
  v30 = 1107296256;
  v31 = thunk for @escaping @callee_guaranteed () -> ();
  v32 = &block_descriptor_40;
  v20 = _Block_copy(&v29);
  v21 = v16;
  swift_release();
  v22 = objc_msgSend(v21, sel_observeUpdatesForSelector_handler_, sel_inCallKeypadEnabled, v20);
  _Block_release(v20);
  ClarityUIPreferences.incomingCommunicationLimitObserver.setter();
  v23 = swift_allocObject();
  swift_weakInit();
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = v23;
  *(_QWORD *)(v24 + 24) = v21;
  v33 = partial apply for closure #5 in ClarityUIPreferences.().init();
  v34 = v24;
  v29 = v4;
  v30 = 1107296256;
  v31 = thunk for @escaping @callee_guaranteed () -> ();
  v32 = &block_descriptor_47;
  v25 = _Block_copy(&v29);
  v26 = v21;
  swift_release();
  v27 = objc_msgSend(v26, sel_observeUpdatesForSelector_handler_, sel_speakerOptionEnabled, v25);
  _Block_release(v25);
  ClarityUIPreferences.incomingCommunicationLimitObserver.setter();

  return v0;
}

uint64_t closure #1 in ClarityUIPreferences.().init()()
{
  uint64_t (*v0)(void);
  uint64_t result;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;
  id v10;

  OUTLINED_FUNCTION_3_26();
  result = swift_weakLoadStrong();
  if (result)
  {
    v2 = (void *)v0();
    v3 = OUTLINED_FUNCTION_18_21();
    v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v6 = v5;
    if (v4 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v6 == v7)
    {

      swift_bridgeObjectRelease_n();
    }
    else
    {
      v9 = _stringCompareWithSmolCheck(_:_:expecting:)();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v9 & 1) == 0)
      {
        v10 = OUTLINED_FUNCTION_18_21();
        ClarityUIPreferences.incomingCommunicationLimit.setter();
      }
    }
    return swift_release();
  }
  return result;
}

void ClarityUIPreferences.incomingCommunicationLimitObserver.setter()
{
  OUTLINED_FUNCTION_14_29();
  OUTLINED_FUNCTION_6_24();
  swift_release();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_10_10();
}

uint64_t closure #3 in ClarityUIPreferences.().init()()
{
  uint64_t (*v0)(void);
  uint64_t result;
  int v2;

  OUTLINED_FUNCTION_3_26();
  result = swift_weakLoadStrong();
  if (result)
  {
    v2 = v0() & 1;
    if (v2 != OUTLINED_FUNCTION_18_21())
    {
      OUTLINED_FUNCTION_18_21();
      ClarityUIPreferences.recentsEnabled.setter();
    }
    return swift_release();
  }
  return result;
}

uint64_t ClarityUIPreferences.dialerKeypadEnabled.getter()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v6;

  if ((static ClarityUIPreferences.canEnableDialerKeypad.getter() & 1) != 0)
  {
    v0 = ClarityUIPreferences.outgoingCommunicationLimit.getter();
    v1 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v3 = v2;
    if (v1 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v3 == v4)
      v6 = 1;
    else
      v6 = _stringCompareWithSmolCheck(_:_:expecting:)();

    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_2_1();
  }
  else
  {
    v6 = 0;
  }
  return v6 & 1;
}

uint64_t static ClarityUIPreferences.canEnableDialerKeypad.getter()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;

  v0 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v1 = outlined bridged method (ob) of @objc NSBundle.bundleIdentifier.getter(v0);
  v3 = v2;
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (v3)
  {
    if (v1 == v4 && v3 == v5)
      v7 = 1;
    else
      v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = 0;
  }
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t ClarityUIPreferences.canCallContacts.getter()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v21;

  v2 = ClarityUIPreferences.outgoingCommunicationLimit.getter();
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (v1 == OUTLINED_FUNCTION_9_19() && v0 == v3)
  {
    OUTLINED_FUNCTION_12_15();
    goto LABEL_21;
  }
  v5 = OUTLINED_FUNCTION_1_18();
  OUTLINED_FUNCTION_2_1();
  OUTLINED_FUNCTION_53();
  if ((v5 & 1) != 0)
  {
LABEL_21:

    return 0;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (v5 == OUTLINED_FUNCTION_9_19() && v0 == v6)
  {
    OUTLINED_FUNCTION_12_15();
    goto LABEL_24;
  }
  v8 = OUTLINED_FUNCTION_1_18();
  OUTLINED_FUNCTION_2_1();
  OUTLINED_FUNCTION_53();
  if ((v8 & 1) != 0)
  {
LABEL_24:

    return 1;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (v8 == OUTLINED_FUNCTION_9_19() && v0 == v9)
  {

    OUTLINED_FUNCTION_12_15();
  }
  else
  {
    v11 = OUTLINED_FUNCTION_1_18();

    OUTLINED_FUNCTION_2_1();
    OUTLINED_FUNCTION_53();
    if ((v11 & 1) == 0)
    {
      if (one-time initialization token for clarityUI != -1)
        swift_once();
      v12 = type metadata accessor for Logger();
      __swift_project_value_buffer(v12, (uint64_t)&static Log.clarityUI);
      swift_retain_n();
      v13 = Logger.logObject.getter();
      v14 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v13, v14))
      {
        v15 = (uint8_t *)swift_slowAlloc();
        v21 = swift_slowAlloc();
        *(_DWORD *)v15 = 136315138;
        v16 = ClarityUIPreferences.outgoingCommunicationLimit.getter();
        v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        v19 = v18;

        getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v17, v19, &v21);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        OUTLINED_FUNCTION_16_8();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BD004000, v13, v14, "Unhandled outgoing communication limit: %s", v15, 0xCu);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_60();
      }

      OUTLINED_FUNCTION_16_8();
      return 0;
    }
  }
  return 1;
}

uint64_t ClarityUIPreferences.incomingCommunicationLimitObserver.getter()
{
  swift_getKeyPath();
  lazy protocol witness table accessor for type ClarityUIPreferences and conformance ClarityUIPreferences();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return swift_unknownObjectRetain();
}

void key path setter for ClarityUIPreferences.incomingCommunicationLimitObserver : ClarityUIPreferences()
{
  swift_unknownObjectRetain();
  ClarityUIPreferences.incomingCommunicationLimitObserver.setter();
}

uint64_t closure #1 in ClarityUIPreferences.incomingCommunicationLimitObserver.setter(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)(a1 + 40) = a2;
  swift_unknownObjectRetain();
  return swift_unknownObjectRelease();
}

uint64_t ClarityUIPreferences.outgoingCommunicationLimitObserver.getter()
{
  swift_getKeyPath();
  lazy protocol witness table accessor for type ClarityUIPreferences and conformance ClarityUIPreferences();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return swift_unknownObjectRetain();
}

void key path setter for ClarityUIPreferences.outgoingCommunicationLimitObserver : ClarityUIPreferences()
{
  swift_unknownObjectRetain();
  ClarityUIPreferences.incomingCommunicationLimitObserver.setter();
}

uint64_t closure #1 in ClarityUIPreferences.outgoingCommunicationLimitObserver.setter(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)(a1 + 48) = a2;
  swift_unknownObjectRetain();
  return swift_unknownObjectRelease();
}

uint64_t ClarityUIPreferences.recentsEnabledObserver.getter()
{
  swift_getKeyPath();
  lazy protocol witness table accessor for type ClarityUIPreferences and conformance ClarityUIPreferences();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return swift_unknownObjectRetain();
}

void key path setter for ClarityUIPreferences.recentsEnabledObserver : ClarityUIPreferences()
{
  swift_unknownObjectRetain();
  ClarityUIPreferences.incomingCommunicationLimitObserver.setter();
}

uint64_t closure #1 in ClarityUIPreferences.recentsEnabledObserver.setter(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)(a1 + 56) = a2;
  swift_unknownObjectRetain();
  return swift_unknownObjectRelease();
}

uint64_t ClarityUIPreferences.inCallKeypadEnabledObserver.getter()
{
  swift_getKeyPath();
  lazy protocol witness table accessor for type ClarityUIPreferences and conformance ClarityUIPreferences();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return swift_unknownObjectRetain();
}

void key path setter for ClarityUIPreferences.inCallKeypadEnabledObserver : ClarityUIPreferences()
{
  swift_unknownObjectRetain();
  ClarityUIPreferences.incomingCommunicationLimitObserver.setter();
}

uint64_t closure #1 in ClarityUIPreferences.inCallKeypadEnabledObserver.setter(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)(a1 + 64) = a2;
  swift_unknownObjectRetain();
  return swift_unknownObjectRelease();
}

uint64_t ClarityUIPreferences.speakerOptionEnabledObserver.getter()
{
  swift_getKeyPath();
  lazy protocol witness table accessor for type ClarityUIPreferences and conformance ClarityUIPreferences();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return swift_unknownObjectRetain();
}

void key path setter for ClarityUIPreferences.speakerOptionEnabledObserver : ClarityUIPreferences()
{
  swift_unknownObjectRetain();
  ClarityUIPreferences.incomingCommunicationLimitObserver.setter();
}

uint64_t closure #1 in ClarityUIPreferences.speakerOptionEnabledObserver.setter(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)(a1 + 72) = a2;
  swift_unknownObjectRetain();
  return swift_unknownObjectRelease();
}

uint64_t ClarityUIPreferences.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC15ConversationKit20ClarityUIPreferences___observationRegistrar;
  v2 = type metadata accessor for ObservationRegistrar();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t ClarityUIPreferences.__deallocating_deinit()
{
  ClarityUIPreferences.deinit();
  return swift_deallocClassInstance();
}

uint64_t ObjC metadata update function for ClarityUIPreferences()
{
  return type metadata accessor for ClarityUIPreferences();
}

uint64_t type metadata completion function for ClarityUIPreferences()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ObservationRegistrar();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for ClarityUIPreferences()
{
  return swift_lookUpClassMethod();
}

void partial apply for closure #1 in ClarityUIPreferences.speakerOptionEnabled.setter()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + 34) = *(_BYTE *)(v0 + 24);
}

void partial apply for closure #1 in ClarityUIPreferences.inCallKeypadEnabled.setter()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + 33) = *(_BYTE *)(v0 + 24);
}

void partial apply for closure #1 in ClarityUIPreferences.recentsEnabled.setter()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + 32) = *(_BYTE *)(v0 + 24);
}

void partial apply for closure #1 in ClarityUIPreferences.outgoingCommunicationLimit.setter()
{
  uint64_t v0;

  closure #1 in ClarityUIPreferences.outgoingCommunicationLimit.setter(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

void partial apply for closure #1 in ClarityUIPreferences.incomingCommunicationLimit.setter()
{
  uint64_t v0;

  closure #1 in ClarityUIPreferences.incomingCommunicationLimit.setter(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

unint64_t type metadata accessor for CLFPhoneFaceTimeSettings()
{
  unint64_t result;

  result = lazy cache variable for type metadata for CLFPhoneFaceTimeSettings;
  if (!lazy cache variable for type metadata for CLFPhoneFaceTimeSettings)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for CLFPhoneFaceTimeSettings);
  }
  return result;
}

uint64_t sub_1BD069A54()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ClarityUIPreferences.().init()()
{
  return closure #1 in ClarityUIPreferences.().init()();
}

uint64_t partial apply for closure #2 in ClarityUIPreferences.().init()()
{
  return closure #1 in ClarityUIPreferences.().init()();
}

uint64_t partial apply for closure #3 in ClarityUIPreferences.().init()()
{
  return closure #3 in ClarityUIPreferences.().init()();
}

uint64_t partial apply for closure #4 in ClarityUIPreferences.().init()()
{
  return closure #3 in ClarityUIPreferences.().init()();
}

uint64_t objectdestroy_18Tm()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t partial apply for closure #5 in ClarityUIPreferences.().init()()
{
  return closure #3 in ClarityUIPreferences.().init()();
}

void sub_1BD069BD0()
{
  uint64_t *v0;

  OUTLINED_FUNCTION_4();
  *v0 = ClarityUIPreferences.speakerOptionEnabledObserver.getter();
  OUTLINED_FUNCTION_0();
}

uint64_t partial apply for closure #1 in ClarityUIPreferences.speakerOptionEnabledObserver.setter()
{
  uint64_t v0;

  return closure #1 in ClarityUIPreferences.speakerOptionEnabledObserver.setter(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_1BD069C0C()
{
  uint64_t *v0;

  OUTLINED_FUNCTION_4();
  *v0 = ClarityUIPreferences.inCallKeypadEnabledObserver.getter();
  OUTLINED_FUNCTION_0();
}

uint64_t partial apply for closure #1 in ClarityUIPreferences.inCallKeypadEnabledObserver.setter()
{
  uint64_t v0;

  return closure #1 in ClarityUIPreferences.inCallKeypadEnabledObserver.setter(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_1BD069C48()
{
  uint64_t *v0;

  OUTLINED_FUNCTION_4();
  *v0 = ClarityUIPreferences.recentsEnabledObserver.getter();
  OUTLINED_FUNCTION_0();
}

uint64_t partial apply for closure #1 in ClarityUIPreferences.recentsEnabledObserver.setter()
{
  uint64_t v0;

  return closure #1 in ClarityUIPreferences.recentsEnabledObserver.setter(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_1BD069C84()
{
  uint64_t *v0;

  OUTLINED_FUNCTION_4();
  *v0 = ClarityUIPreferences.outgoingCommunicationLimitObserver.getter();
  OUTLINED_FUNCTION_0();
}

uint64_t partial apply for closure #1 in ClarityUIPreferences.outgoingCommunicationLimitObserver.setter()
{
  uint64_t v0;

  return closure #1 in ClarityUIPreferences.outgoingCommunicationLimitObserver.setter(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_1BD069CC0()
{
  uint64_t *v0;

  OUTLINED_FUNCTION_4();
  *v0 = ClarityUIPreferences.incomingCommunicationLimitObserver.getter();
  OUTLINED_FUNCTION_0();
}

uint64_t partial apply for closure #1 in ClarityUIPreferences.incomingCommunicationLimitObserver.setter()
{
  uint64_t v0;

  return closure #1 in ClarityUIPreferences.incomingCommunicationLimitObserver.setter(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

__C::CGRect __swiftcall CGRect.flipIfNeeded(in:)(__C::CGRect in)
{
  double v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  __C::CGRect result;

  v5 = v4;
  v6 = v3;
  v7 = v2;
  v8 = v1;
  result.size.height = v5;
  result.size.width = v6;
  result.origin.y = v7;
  result.origin.x = v8;
  return result;
}

__C::CGRect __swiftcall CGRect.centered(in:)(__C::CGRect in)
{
  double v1;
  double v2;
  double v3;
  double v4;
  CGFloat height;
  CGFloat width;
  CGFloat y;
  CGFloat x;
  CGFloat v9;
  double v10;
  double v11;
  double v12;
  double v13;
  CGRect v14;
  __C::CGRect result;

  v3 = v2;
  v4 = v1;
  height = in.size.height;
  width = in.size.width;
  y = in.origin.y;
  x = in.origin.x;
  v9 = CGRectGetMidX((CGRect)in) - v1 * 0.5;
  v14.origin.x = x;
  v14.origin.y = y;
  v14.size.width = width;
  v14.size.height = height;
  v10 = CGRectGetMidY(v14) - v3 * 0.5;
  v11 = v9;
  v12 = v4;
  v13 = v3;
  result.size.height = v13;
  result.size.width = v12;
  result.origin.y = v10;
  result.origin.x = v11;
  return result;
}

void CGRect.applyInsets(top:left:bottom:right:)()
{
  uint64_t v0;
  double v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = OUTLINED_FUNCTION_1_19();
  *(double *)v0 = UIEdgeInsetsInsetRect(v1, v2, v3, v4, v5, v6);
  *(_QWORD *)(v0 + 8) = v7;
  *(_QWORD *)(v0 + 16) = v8;
  *(_QWORD *)(v0 + 24) = v9;
}

double UIEdgeInsetsInsetRect(double a1, double a2, double a3, double a4, double a5, double a6)
{
  return a1 + a6;
}

void CGRect.applyInsets(dx:dy:)()
{
  CGRect *v0;
  CGFloat v1;
  CGFloat v2;
  CGRect v3;

  v3.origin.x = OUTLINED_FUNCTION_1_19();
  *v0 = CGRectInset(v3, v1, v2);
}

BOOL CGRect.isValid.getter()
{
  uint64_t v0;
  uint64_t v1;
  CGFloat Width;
  CGFloat Height;
  CGRect v5;
  CGRect v6;
  CGRect v7;

  OUTLINED_FUNCTION_17_7();
  Width = CGRectGetWidth(v5);
  if ((~*(_QWORD *)&Width & 0x7FF0000000000000) == 0 && (*(_QWORD *)&Width & 0xFFFFFFFFFFFFFLL) != 0)
    return 0;
  v6.origin.x = OUTLINED_FUNCTION_15_0();
  Height = CGRectGetHeight(v6);
  if ((~*(_QWORD *)&Height & 0x7FF0000000000000) == 0 && (*(_QWORD *)&Height & 0xFFFFFFFFFFFFFLL) != 0)
    return 0;
  if ((~v1 & 0x7FF0000000000000) == 0 && (v1 & 0xFFFFFFFFFFFFFLL) != 0
    || (~v0 & 0x7FF0000000000000) == 0 && (v0 & 0xFFFFFFFFFFFFFLL) != 0)
  {
    return 0;
  }
  v7.origin.x = OUTLINED_FUNCTION_15_0();
  return !CGRectIsInfinite(v7);
}

uint64_t CGRect.description.getter()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  OUTLINED_FUNCTION_17_7();
  v0._countAndFlagsBits = 40;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  type metadata accessor for CGPoint(0);
  OUTLINED_FUNCTION_0_33();
  v1._countAndFlagsBits = 8236;
  v1._object = (void *)0xE200000000000000;
  String.append(_:)(v1);
  type metadata accessor for CGSize(0);
  OUTLINED_FUNCTION_0_33();
  v2._countAndFlagsBits = 41;
  v2._object = (void *)0xE100000000000000;
  String.append(_:)(v2);
  return 0;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance CGRect()
{
  return CGRect.description.getter();
}

uint64_t key path setter for SystemApertureInCallLeadingView.icon : SystemApertureInCallLeadingView(void *__src, _QWORD **a2)
{
  uint64_t (*v3)(_BYTE *);
  _BYTE v5[80];

  memcpy(v5, __src, sizeof(v5));
  v3 = *(uint64_t (**)(_BYTE *))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x78);
  outlined retain of SystemApertureIcon((uint64_t)v5);
  return v3(v5);
}

uint64_t SystemApertureInCallLeadingView.icon.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v14;

  v3 = v1 + OBJC_IVAR____TtC15ConversationKit31SystemApertureInCallLeadingView_icon;
  OUTLINED_FUNCTION_2_0();
  v4 = *(void **)v3;
  v5 = *(_QWORD *)(v3 + 8);
  v6 = *(void **)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(v3 + 32);
  v9 = *(_BYTE *)(v3 + 40);
  v11 = *(_QWORD *)(v3 + 48);
  v10 = *(_QWORD *)(v3 + 56);
  v14 = *(_BYTE *)(v3 + 64);
  v12 = *(_QWORD *)(v3 + 72);
  outlined copy of SystemApertureIconAsset(*(void **)v3, v5, v6, v7, v8, v9);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_BYTE *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v11;
  *(_QWORD *)(a1 + 56) = v10;
  *(_BYTE *)(a1 + 64) = v14;
  *(_QWORD *)(a1 + 72) = v12;
  return swift_bridgeObjectRetain();
}

uint64_t SystemApertureInCallLeadingView.icon.setter(const void *a1)
{
  uint64_t v1;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v3 = (void *)(v1 + OBJC_IVAR____TtC15ConversationKit31SystemApertureInCallLeadingView_icon);
  OUTLINED_FUNCTION_2_0();
  v4 = *(void **)v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = (void *)*((_QWORD *)v3 + 2);
  v7 = *((_QWORD *)v3 + 3);
  v8 = *((_QWORD *)v3 + 4);
  v9 = *((_BYTE *)v3 + 40);
  memcpy(v3, a1, 0x50uLL);
  outlined retain of SystemApertureIcon((uint64_t)a1);
  outlined consume of SystemApertureIconAsset(v4, v5, v6, v7, v8, v9);
  swift_bridgeObjectRelease();
  SystemApertureInCallLeadingView.updateIconView()();
  return outlined release of SystemApertureIcon((uint64_t)a1);
}

uint64_t outlined retain of SystemApertureIcon(uint64_t a1)
{
  outlined copy of SystemApertureIconAsset(*(void **)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_bridgeObjectRetain();
  return a1;
}

id (*SystemApertureInCallLeadingView.icon.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_2_0();
  return SystemApertureInCallLeadingView.icon.modify;
}

id SystemApertureInCallLeadingView.icon.modify(uint64_t a1, char a2)
{
  id result;

  result = (id)swift_endAccess();
  if ((a2 & 1) == 0)
    return SystemApertureInCallLeadingView.updateIconView()();
  return result;
}

void SystemApertureInCallLeadingView.__allocating_init(icon:callDurationProvider:)(uint64_t a1, uint64_t a2)
{
  SystemApertureInCallLeadingView.__allocating_init(icon:callDurationProvider:)(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))specialized SystemApertureInCallLeadingView.__allocating_init(icon:callDurationProvider:));
}

void SystemApertureInCallLeadingView.init(icon:callDurationProvider:)(uint64_t a1, uint64_t a2)
{
  SystemApertureInCallLeadingView.__allocating_init(icon:callDurationProvider:)(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))specialized SystemApertureInCallLeadingView.init(icon:callDurationProvider:));
}

void SystemApertureInCallLeadingView.__allocating_init(icon:callDurationProvider:)(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = __swift_mutable_project_boxed_opaque_existential_1(a2, v7);
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_77();
  v12 = v11 - v10;
  (*(void (**)(uint64_t))(v13 + 16))(v11 - v10);
  a3(a1, v12, v3, v7, v8);
  __swift_destroy_boxed_opaque_existential_1(a2);
  OUTLINED_FUNCTION_65_1();
}

char *closure #1 in SystemApertureInCallLeadingView.init(icon:callDurationProvider:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *result;
  void *v6;
  char *v7;
  id v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  Swift::String v20;
  Swift::String_optional v21;
  Swift::String v22;
  uint64_t countAndFlagsBits;
  void *v24;
  void *object;
  uint64_t v26;
  void *v27;
  id v28;
  Swift::String v29;
  Swift::String_optional v30;
  Swift::String v31;
  Swift::String v32;
  uint64_t v33;
  Swift::String v34;
  Swift::String v35;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Locale?);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = (char *)MEMORY[0x1C3B752C0](a1 + 16);
  if (result)
  {
    v6 = *(void **)&result[OBJC_IVAR____TtC15ConversationKit31SystemApertureInCallLeadingView_durationView];
    v7 = result;
    v8 = objc_msgSend(v6, sel_accessibilityLabel);
    if (v8)
    {
      v9 = v8;
      v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v12 = v11;

      v13 = HIBYTE(v12) & 0xF;
      if ((v12 & 0x2000000000000000) == 0)
        v13 = v10 & 0xFFFFFFFFFFFFLL;
      if (v13)
      {
        v14 = type metadata accessor for Locale();
        __swift_storeEnumTagSinglePayload((uint64_t)v4, 1, 1, v14);
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
        v15 = swift_allocObject();
        *(_OWORD *)(v15 + 16) = xmmword_1BD6441D0;
        *(_QWORD *)(v15 + 56) = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v15 + 64) = lazy protocol witness table accessor for type String and conformance String();
        *(_QWORD *)(v15 + 32) = v10;
        *(_QWORD *)(v15 + 40) = v12;
        v16 = one-time initialization token for conversationKit;
        swift_bridgeObjectRetain();
        if (v16 != -1)
          swift_once();
        v17 = unk_1EF4FCB30;
        v18 = (void *)qword_1EF4FCB38;
        v19 = (id)static LocalizationSource.conversationKit;
        swift_bridgeObjectRetain();
        v34._object = (void *)0xE000000000000000;
        v20._object = (void *)0x80000001BD66ED80;
        v20._countAndFlagsBits = 0xD000000000000021;
        v21.value._countAndFlagsBits = v17;
        v21.value._object = v18;
        v22._countAndFlagsBits = 0;
        v22._object = (void *)0xE000000000000000;
        v34._countAndFlagsBits = 0;
        NSLocalizedString(_:tableName:bundle:value:comment:)(v20, v21, (NSBundle)v19, v22, v34);
        countAndFlagsBits = String.init(format:locale:arguments:)();
        object = v24;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        outlined destroy of Locale?((uint64_t)v4);
        swift_bridgeObjectRelease();
LABEL_13:
        outlined bridged method (mbnn) of @objc NSObject.accessibilityLabel.setter(countAndFlagsBits, (uint64_t)object, v7);

        objc_msgSend(objc_msgSend(v7, sel_systemApertureElementContext), sel_setElementNeedsUpdate);
        return (char *)swift_unknownObjectRelease();
      }
      swift_bridgeObjectRelease();
    }
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    v26 = unk_1EF4FCB30;
    v27 = (void *)qword_1EF4FCB38;
    v28 = (id)static LocalizationSource.conversationKit;
    swift_bridgeObjectRetain();
    v35._object = (void *)0xE000000000000000;
    v29._countAndFlagsBits = 0x494F474E4F5F5841;
    v29._object = (void *)0xEF4C4C41435F474ELL;
    v30.value._countAndFlagsBits = v26;
    v30.value._object = v27;
    v31._countAndFlagsBits = 0;
    v31._object = (void *)0xE000000000000000;
    v35._countAndFlagsBits = 0;
    v32 = NSLocalizedString(_:tableName:bundle:value:comment:)(v29, v30, (NSBundle)v28, v31, v35);
    countAndFlagsBits = v32._countAndFlagsBits;
    object = v32._object;
    swift_bridgeObjectRelease();

    goto LABEL_13;
  }
  return result;
}

id SystemApertureInCallLeadingView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

void SystemApertureInCallLeadingView.init(frame:)()
{
  OUTLINED_FUNCTION_9_20(OBJC_IVAR____TtC15ConversationKit31SystemApertureInCallLeadingView_interItemSpacing);
  OUTLINED_FUNCTION_2_37();
  __break(1u);
}

id SystemApertureInCallLeadingView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void SystemApertureInCallLeadingView.init(coder:)()
{
  OUTLINED_FUNCTION_9_20(OBJC_IVAR____TtC15ConversationKit31SystemApertureInCallLeadingView_interItemSpacing);
  OUTLINED_FUNCTION_2_37();
  __break(1u);
}

id SystemApertureInCallLeadingView.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  void *v12;
  id v13;
  void *v15;
  uint64_t v16;
  objc_super v17;
  _QWORD aBlock[6];

  v2 = type metadata accessor for DispatchWorkItemFlags();
  v16 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_16_2();
  v3 = type metadata accessor for DispatchQoS();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_77();
  v7 = v6 - v5;
  v8 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit31SystemApertureInCallLeadingView_durationView);
  type metadata accessor for OS_dispatch_queue();
  v9 = v8;
  v10 = (void *)static OS_dispatch_queue.main.getter();
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v9;
  aBlock[4] = partial apply for closure #1 in SystemApertureInCallLeadingView.deinit;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = &block_descriptor_4;
  v12 = _Block_copy(aBlock);
  v13 = v9;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  lazy protocol witness table accessor for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  MEMORY[0x1C3B7361C](0, v7, v1, v12);
  _Block_release(v12);

  OUTLINED_FUNCTION_8(*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8));
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
  v17.receiver = v15;
  v17.super_class = (Class)type metadata accessor for SystemApertureInCallLeadingView();
  return objc_msgSendSuper2(&v17, sel_dealloc);
}

uint64_t closure #1 in SystemApertureInCallLeadingView.deinit(_QWORD *a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x60))(0, 0);
}

Swift::Void __swiftcall SystemApertureInCallLeadingView.layoutSubviews()()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  id v14;
  double v15;
  double v16;
  double v17;
  double v18;
  CGFloat Width;
  double v20;
  CGFloat v21;
  CGFloat Height;
  void *v23;
  double v24;
  double v25;
  double v26;
  CGFloat v27;
  objc_super v28;
  CGRect v29;
  CGRect v30;
  CGRect v31;
  CGRect v32;
  CGRect v33;
  CGRect v34;

  v2 = type metadata accessor for FloatingPointRoundingRule();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_16_2();
  v28.receiver = v0;
  v28.super_class = (Class)type metadata accessor for SystemApertureInCallLeadingView();
  objc_msgSendSuper2(&v28, sel_layoutSubviews);
  v4 = objc_msgSend(v0, sel_effectiveUserInterfaceLayoutDirection);
  v5 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit31SystemApertureInCallLeadingView_iconView];
  OUTLINED_FUNCTION_0_1();
  objc_msgSend(v5, sel_sizeThatFits_, v6, v7);
  v9 = v8;
  v11 = v10;
  v12 = 0.0;
  if (v4 == (id)1)
  {
    OUTLINED_FUNCTION_0_1();
    v12 = CGRectGetWidth(v29) - v9;
  }
  OUTLINED_FUNCTION_0_1();
  v13 = (CGRectGetHeight(v30) - v11) * 0.5;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 104))(v1, *MEMORY[0x1E0DED508], v2);
  v14 = objc_msgSend(v0, sel_traitCollection);
  objc_msgSend(v14, sel_displayScale);
  v16 = v15;
  v17 = CGFloat.rounded(_:toScale:)(v1, v15, v12);
  v18 = CGFloat.rounded(_:toScale:)(v1, v16, v13);

  OUTLINED_FUNCTION_8(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  objc_msgSend(v5, sel_setFrame_, v17, v18, v9, v11);
  OUTLINED_FUNCTION_0_1();
  Width = CGRectGetWidth(v31);
  v20 = *(double *)&v0[OBJC_IVAR____TtC15ConversationKit31SystemApertureInCallLeadingView_interItemSpacing];
  v21 = Width - v9 - v20;
  OUTLINED_FUNCTION_0_1();
  Height = CGRectGetHeight(v32);
  v23 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit31SystemApertureInCallLeadingView_durationView];
  objc_msgSend(v23, sel_sizeThatFits_, v21, Height);
  v25 = v24;
  if (v4 == (id)1)
    v26 = 0.0;
  else
    v26 = v9 + v20;
  OUTLINED_FUNCTION_0_1();
  v27 = (CGRectGetHeight(v33) - v25) * 0.5;
  OUTLINED_FUNCTION_0_1();
  objc_msgSend(v23, sel_setFrame_, v26, v27, CGRectGetWidth(v34) - v9 - v20, v25);
}

CGSize __swiftcall SystemApertureInCallLeadingView.sizeThatFits(_:)(CGSize a1)
{
  uint64_t v1;
  double height;
  double width;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  CGSize result;

  height = a1.height;
  width = a1.width;
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC15ConversationKit31SystemApertureInCallLeadingView_iconView), sel_sizeThatFits_);
  v5 = v4;
  v7 = v6;
  v8 = width - v4;
  v9 = *(double *)(v1 + OBJC_IVAR____TtC15ConversationKit31SystemApertureInCallLeadingView_interItemSpacing);
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC15ConversationKit31SystemApertureInCallLeadingView_durationView), sel_sizeThatFits_, v8 - v9, height);
  if (v7 > v11)
    v11 = v7;
  v12 = v5 + v9 + v10;
  result.height = v11;
  result.width = v12;
  return result;
}

id SystemApertureInCallLeadingView.sizeThatFits(_:for:)()
{
  void *v0;

  return objc_msgSend(v0, sel_sizeThatFits_);
}

uint64_t SystemApertureInCallLeadingView.preferredLayoutMargins.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD v4[5];

  (*(void (**)(_QWORD *__return_ptr))((*MEMORY[0x1E0DEEDD8] & **(_QWORD **)(v1
                                                                                     + OBJC_IVAR____TtC15ConversationKit31SystemApertureInCallLeadingView_iconView))
                                               + 0xA8))(v4);
  return outlined init with take of SystemApertureLayoutMargins((uint64_t)v4, a1);
}

id SystemApertureInCallLeadingView.updateIconView()()
{
  uint64_t *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4[10];

  v1 = *(_QWORD **)((char *)v0 + OBJC_IVAR____TtC15ConversationKit31SystemApertureInCallLeadingView_iconView);
  v2 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  OUTLINED_FUNCTION_4_17(*v0, v4[0]);
  (*(void (**)(uint64_t *))((*v2 & *v1) + 0x70))(v4);
  return objc_msgSend(v0, sel_setNeedsLayout);
}

uint64_t outlined release of SystemApertureIcon(uint64_t a1)
{
  outlined consume of SystemApertureIconAsset(*(void **)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t protocol witness for SystemApertureAccessoryView.preferredLayoutMargins.getter in conformance SystemApertureInCallLeadingView@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  _QWORD v4[5];

  (*(void (**)(_QWORD *__return_ptr))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x98))(v4);
  return outlined init with take of SystemApertureLayoutMargins((uint64_t)v4, a1);
}

void specialized SystemApertureInCallLeadingView.__allocating_init(icon:callDurationProvider:)(const void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;

  v9 = *(_QWORD *)(a4 - 8);
  MEMORY[0x1E0C80A78](a1);
  OUTLINED_FUNCTION_77();
  v12 = v11 - v10;
  v13 = (char *)objc_allocWithZone((Class)type metadata accessor for SystemApertureInCallLeadingView());
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v12, a2, a4);
  specialized SystemApertureInCallLeadingView.init(icon:callDurationProvider:)(a1, v12, v13, a4, a5);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a2, a4);
  OUTLINED_FUNCTION_65_1();
}

char *specialized SystemApertureInCallLeadingView.init(icon:callDurationProvider:)(const void *a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  id v16;
  char *v17;
  id v18;
  id v19;
  void (*v20)(char *, char *, uint64_t);
  objc_class *v21;
  id v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  void *v36;
  id v37;
  Swift::String v38;
  Swift::String_optional v39;
  Swift::String v40;
  Swift::String v41;
  _QWORD *v42;
  uint64_t v43;
  void (*v44)(char *(*)(), uint64_t);
  uint64_t v46;
  const void *v47;
  uint64_t ObjectType;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  objc_super v52;
  Swift::String v53;

  ObjectType = swift_getObjectType();
  v10 = *(_QWORD *)(a4 - 8);
  v11 = MEMORY[0x1E0C80A78](ObjectType);
  v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v46 - v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))((char *)&v46 - v14, a2, a4);
  *(_QWORD *)&a3[OBJC_IVAR____TtC15ConversationKit31SystemApertureInCallLeadingView_interItemSpacing] = 0x4010000000000000;
  memcpy(&a3[OBJC_IVAR____TtC15ConversationKit31SystemApertureInCallLeadingView_icon], a1, 0x50uLL);
  v16 = objc_allocWithZone((Class)type metadata accessor for SystemApertureIconView());
  outlined retain of SystemApertureIcon((uint64_t)a1);
  outlined retain of SystemApertureIcon((uint64_t)a1);
  v17 = a3;
  *(_QWORD *)&v17[OBJC_IVAR____TtC15ConversationKit31SystemApertureInCallLeadingView_iconView] = SystemApertureIconView.init(icon:isDetached:)((uint64_t)a1, 0);
  v18 = objc_msgSend((id)objc_opt_self(), sel_monospacedDigitSystemFontOfSize_weight_, 14.0, *MEMORY[0x1E0DC1448]);
  v19 = objc_allocWithZone((Class)type metadata accessor for LiveCallDurationView());
  v20 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v49 = v15;
  v20(v13, v15, a4);
  *(_QWORD *)&v17[OBJC_IVAR____TtC15ConversationKit31SystemApertureInCallLeadingView_durationView] = specialized LiveCallDurationView.init(font:callDurationProvider:voiceOverUpdateHandler:)(v18, (uint64_t)v13, 0, 0, v19, a4, a5);

  v21 = (objc_class *)type metadata accessor for SystemApertureInCallLeadingView();
  v52.receiver = v17;
  v52.super_class = v21;
  v22 = objc_msgSendSuper2(&v52, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v23 = one-time initialization token for conversationControls;
  v24 = (char *)v22;
  if (v23 != -1)
    swift_once();
  v25 = type metadata accessor for Logger();
  __swift_project_value_buffer(v25, (uint64_t)&static Logger.conversationControls);
  v26 = Logger.logObject.getter();
  v27 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v26, v27))
  {
    v28 = (uint8_t *)swift_slowAlloc();
    v29 = swift_slowAlloc();
    v51 = v29;
    v47 = a1;
    *(_DWORD *)v28 = 136446210;
    v30 = _typeName(_:qualified:)();
    v50 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v30, v31, &v51);
    a1 = v47;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v26, v27, "[SystemAperture] %{public}s created", v28, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v29, -1, -1);
    MEMORY[0x1C3B751B8](v28, -1, -1);
  }

  objc_msgSend(v24, sel_addSubview_, *(_QWORD *)&v24[OBJC_IVAR____TtC15ConversationKit31SystemApertureInCallLeadingView_iconView]);
  v32 = OBJC_IVAR____TtC15ConversationKit31SystemApertureInCallLeadingView_durationView;
  objc_msgSend(v24, sel_addSubview_, *(_QWORD *)&v24[OBJC_IVAR____TtC15ConversationKit31SystemApertureInCallLeadingView_durationView]);
  v33 = one-time initialization token for conversationKit;
  v34 = v24;
  if (v33 != -1)
    swift_once();
  v35 = unk_1EF4FCB30;
  v36 = (void *)qword_1EF4FCB38;
  v37 = (id)static LocalizationSource.conversationKit;
  swift_bridgeObjectRetain();
  v53._object = (void *)0xE000000000000000;
  v38._countAndFlagsBits = 0x494F474E4F5F5841;
  v38._object = (void *)0xEF4C4C41435F474ELL;
  v39.value._countAndFlagsBits = v35;
  v39.value._object = v36;
  v40._countAndFlagsBits = 0;
  v40._object = (void *)0xE000000000000000;
  v53._countAndFlagsBits = 0;
  v41 = NSLocalizedString(_:tableName:bundle:value:comment:)(v38, v39, (NSBundle)v37, v40, v53);
  swift_bridgeObjectRelease();

  outlined bridged method (mbnn) of @objc NSObject.accessibilityLabel.setter(v41._countAndFlagsBits, (uint64_t)v41._object, v34);
  SystemApertureInCallLeadingView.updateIconView()();
  v42 = *(_QWORD **)&v24[v32];
  v43 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v44 = *(void (**)(char *(*)(), uint64_t))((*MEMORY[0x1E0DEEDD8] & *v42) + 0x60);
  swift_retain();
  v44(partial apply for closure #1 in SystemApertureInCallLeadingView.init(icon:callDurationProvider:), v43);

  outlined release of SystemApertureIcon((uint64_t)a1);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v49, a4);
  swift_release();
  return v34;
}

unint64_t type metadata accessor for OS_dispatch_queue()
{
  unint64_t result;

  result = lazy cache variable for type metadata for OS_dispatch_queue;
  if (!lazy cache variable for type metadata for OS_dispatch_queue)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  }
  return result;
}

uint64_t sub_1BD06B48C()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in SystemApertureInCallLeadingView.deinit()
{
  uint64_t v0;

  return closure #1 in SystemApertureInCallLeadingView.deinit(*(_QWORD **)(v0 + 16));
}

unint64_t lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A];
  if (!lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A])
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
  }
  return result;
}

uint64_t type metadata accessor for SystemApertureInCallLeadingView()
{
  return objc_opt_self();
}

uint64_t outlined init with take of SystemApertureLayoutMargins(uint64_t a1, uint64_t a2)
{
  __swift_memcpy33_8(a2, a1);
  return a2;
}

void *sub_1BD06B558@<X0>(uint64_t **a1@<X0>, void *a2@<X8>)
{
  uint64_t v4[10];

  OUTLINED_FUNCTION_4_17(**a1, v4[0]);
  return memcpy(a2, v4, 0x50uLL);
}

uint64_t method lookup function for SystemApertureInCallLeadingView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SystemApertureInCallLeadingView.icon.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of SystemApertureInCallLeadingView.icon.setter(uint64_t a1)
{
  uint64_t (*v1)(void);

  OUTLINED_FUNCTION_7_34(a1);
  OUTLINED_FUNCTION_1_20();
  return v1();
}

uint64_t dispatch thunk of SystemApertureInCallLeadingView.icon.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of SystemApertureInCallLeadingView.__allocating_init(icon:callDurationProvider:)(uint64_t a1)
{
  uint64_t (*v1)(void);

  OUTLINED_FUNCTION_7_34(a1);
  OUTLINED_FUNCTION_1_20();
  return v1();
}

uint64_t dispatch thunk of SystemApertureInCallLeadingView.sizeThatFits(_:for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of SystemApertureInCallLeadingView.preferredLayoutMargins.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t sub_1BD06B688()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

char *partial apply for closure #1 in SystemApertureInCallLeadingView.init(icon:callDurationProvider:)()
{
  uint64_t v0;

  return closure #1 in SystemApertureInCallLeadingView.init(icon:callDurationProvider:)(v0);
}

uint64_t outlined destroy of Locale?(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Locale?);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void PushToTalkTalkButtonController.__allocating_init(button:viewModel:)(void *a1, uint64_t a2)
{
  swift_allocObject();
  PushToTalkTalkButtonController.init(button:viewModel:)(a1, a2);
  OUTLINED_FUNCTION_18();
}

uint64_t PushToTalkTalkButtonController.init(button:viewModel:)(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<PushToTalkViewModel.TalkButtonState>.Publisher);
  v19 = *(_QWORD *)(v6 - 8);
  v20 = v6;
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_0_7();
  v7 = type metadata accessor for DispatchTimeInterval();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (uint64_t *)((char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v2 + 40) = MEMORY[0x1E0DEE9E8];
  *(_BYTE *)(v2 + 32) = 0;
  swift_unknownObjectWeakAssign();
  *(_QWORD *)(v2 + 16) = a2;
  v11 = *(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 160);
  v12 = swift_retain();
  if (v11(v12))
  {
    *((_QWORD *)&v22 + 1) = OUTLINED_FUNCTION_2_38();
    *(_QWORD *)&v21 = a2;
  }
  else
  {
    v21 = 0u;
    v22 = 0u;
  }
  *v10 = 300;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DEF490], v7);
  v13 = objc_allocWithZone((Class)type metadata accessor for PushToTalkTalkButtonGestureRecognizer());
  v14 = PushToTalkTalkButtonGestureRecognizer.init(interval:maximumVerticalVelocity:target:action:)((uint64_t)v10, (uint64_t)&v21, (uint64_t)sel_pttTalkButtonGestureChangedWithRecognizer_, 100.0);
  objc_msgSend(v14, sel_setCancelsTouchesInView_, 0);
  objc_msgSend(v14, sel_addTarget_action_, v2, sel_pressGestureChangedWithGestureRecognizer_);
  if (v11((uint64_t)objc_msgSend(a1, sel_addGestureRecognizer_, v14)))
  {
    *((_QWORD *)&v22 + 1) = OUTLINED_FUNCTION_2_38();
    *(_QWORD *)&v21 = a2;
  }
  else
  {
    v21 = 0u;
    v22 = 0u;
  }
  v15 = objc_allocWithZone(MEMORY[0x1E0DC3D80]);
  v16 = @nonobjc UITapGestureRecognizer.init(target:action:)(&v21, (uint64_t)sel_pttDoneButtonTappedWithRecognizer_);
  objc_msgSend(v16, sel_shouldRequireFailureOfGestureRecognizer_, v14);
  (*(void (**)(id))(*(_QWORD *)a2 + 136))(objc_msgSend(a1, sel_addGestureRecognizer_, v16));
  swift_allocObject();
  swift_weakInit();
  lazy protocol witness table accessor for type Published<PushToTalkViewModel.TalkButtonState>.Publisher and conformance Published<A>.Publisher();
  v17 = v20;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v3, v17);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();

  swift_release();
  swift_release();
  return v2;
}

void closure #1 in PushToTalkTalkButtonController.init(button:viewModel:)(unsigned __int8 *a1)
{
  int v1;
  uint64_t Strong;
  void *v3;
  uint64_t v4;
  char **v5;

  v1 = *a1;
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v3 = (void *)MEMORY[0x1C3B752C0](Strong + 24);
    swift_release();
    if (v3)
    {
      if (v1 == 2)
      {
        objc_msgSend(v3, sel_setHighlighted_, 0);
        v4 = 1;
      }
      else
      {
        if (v1 != 3)
        {
          v4 = 1;
          objc_msgSend(v3, sel_setEnabled_, 1);
          if ((v1 & 1) != 0)
          {
LABEL_11:
            objc_msgSend(v3, sel_setNeedsUpdateConfiguration);

            return;
          }
          v5 = &selRef_setHighlighted_;
LABEL_10:
          objc_msgSend(v3, *v5, v4);
          goto LABEL_11;
        }
        v4 = 0;
      }
      v5 = &selRef_setEnabled_;
      goto LABEL_10;
    }
  }
}

void PushToTalkTalkButtonController.buttonComputedState.getter()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  char v3;
  void *v5;
  void *v6;
  void *v7;
  void *v8;

  v1 = *(uint64_t (**)(uint64_t))(**(_QWORD **)(v0 + 16) + 112);
  v2 = swift_retain();
  v3 = v1(v2);
  swift_release();
  if ((v3 & 0xFE) == 2 || (v3 & 1) == 0)
  {
    if ((*(_BYTE *)(v0 + 32) & 1) == 0)
    {
      v5 = (void *)MEMORY[0x1C3B752C0](v0 + 24);
      if (v5)
      {
        v6 = v5;
        if (!objc_msgSend(v5, sel_isHighlighted))
          objc_msgSend(v6, sel_isEnabled);

      }
    }
  }
  else
  {
    v7 = (void *)MEMORY[0x1C3B752C0](v0 + 24);
    if (v7)
    {
      v8 = v7;
      objc_msgSend(v7, sel_isHighlighted);

    }
  }
  OUTLINED_FUNCTION_18();
}

void PushToTalkTalkButtonController.pressGestureChanged(gestureRecognizer:)(void *a1)
{
  uint64_t v1;
  unint64_t v2;
  id v3;

  v2 = (unint64_t)objc_msgSend(a1, sel_state);
  if (v2 <= 5 && ((0x3Bu >> v2) & 1) != 0)
  {
    *(_BYTE *)(v1 + 32) = 0x10100uLL >> (8 * v2);
    v3 = (id)MEMORY[0x1C3B752C0](v1 + 24);
    objc_msgSend(v3, sel_setNeedsUpdateConfiguration);

  }
}

uint64_t PushToTalkTalkButtonController.deinit()
{
  uint64_t v0;

  swift_release();
  swift_unknownObjectWeakDestroy();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t PushToTalkTalkButtonController.__deallocating_deinit()
{
  PushToTalkTalkButtonController.deinit();
  return swift_deallocClassInstance();
}

id @nonobjc UITapGestureRecognizer.init(target:action:)(_QWORD *a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v5;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;

  v5 = a1[3];
  if (v5)
  {
    v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    v8 = *(_QWORD *)(v5 - 8);
    MEMORY[0x1E0C80A78](v7);
    OUTLINED_FUNCTION_0_7();
    (*(void (**)(uint64_t))(v8 + 16))(v3);
    v9 = _bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v3, v5);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v9 = 0;
  }
  v10 = objc_msgSend(v2, sel_initWithTarget_action_, v9, a2);
  swift_unknownObjectRelease();
  return v10;
}

uint64_t sub_1BD06BDB8()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

void partial apply for closure #1 in PushToTalkTalkButtonController.init(button:viewModel:)(unsigned __int8 *a1)
{
  closure #1 in PushToTalkTalkButtonController.init(button:viewModel:)(a1);
}

unint64_t lazy protocol witness table accessor for type Published<PushToTalkViewModel.TalkButtonState>.Publisher and conformance Published<A>.Publisher()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type Published<PushToTalkViewModel.TalkButtonState>.Publisher and conformance Published<A>.Publisher;
  if (!lazy protocol witness table cache variable for type Published<PushToTalkViewModel.TalkButtonState>.Publisher and conformance Published<A>.Publisher)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Published<PushToTalkViewModel.TalkButtonState>.Publisher);
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0C96190], v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Published<PushToTalkViewModel.TalkButtonState>.Publisher and conformance Published<A>.Publisher);
  }
  return result;
}

uint64_t type metadata accessor for PushToTalkTalkButtonController()
{
  return objc_opt_self();
}

uint64_t method lookup function for PushToTalkTalkButtonController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PushToTalkTalkButtonController.__allocating_init(button:viewModel:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t dispatch thunk of PushToTalkTalkButtonController.buttonComputedState.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

id CallControlsFullScreenStatusView.__allocating_init(frame:)()
{
  Class v0;
  id v1;
  double v2;
  id v3;
  SEL v4;

  OUTLINED_FUNCTION_17_7();
  v1 = objc_allocWithZone(v0);
  v2 = OUTLINED_FUNCTION_15_0();
  return objc_msgSend(v3, v4, v2);
}

id CallControlsFullScreenStatusView.init(frame:)()
{
  uint64_t v0;
  uint64_t ObjectType;
  double v2;
  objc_super *v3;
  SEL v4;
  id v5;
  uint64_t v7;

  OUTLINED_FUNCTION_17_7();
  ObjectType = swift_getObjectType();
  *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit32CallControlsFullScreenStatusView____lazy_storage___effectsView) = 0;
  *(_QWORD *)(v0
            + OBJC_IVAR____TtC15ConversationKit32CallControlsFullScreenStatusView____lazy_storage___textLeadingConstraint) = 0;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit32CallControlsFullScreenStatusView____lazy_storage___titleLabel) = 0;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit32CallControlsFullScreenStatusView____lazy_storage___subtitleLabel) = 0;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit32CallControlsFullScreenStatusView____lazy_storage___textContainer) = 0;
  v7 = ObjectType;
  v2 = OUTLINED_FUNCTION_15_0();
  v5 = objc_msgSendSuper2(v3, v4, v2, v0, v7);
  CallControlsFullScreenStatusView.build()();

  return v5;
}

void CallControlsFullScreenStatusView.build()()
{
  void *v0;
  void *v1;
  unint64_t v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  void *v23;
  void *v24;
  id v25;
  id v26;
  void *v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  void *v32;
  void *v33;
  id v34;
  id v35;
  id v36;
  id v37;
  void *v38;
  void *v39;
  id v40;
  id v41;
  id v42;
  uint64_t v43;
  id v44;
  id v45;
  id v46;
  id v47;
  void *v48;
  id v49;
  Class isa;
  unint64_t v51;

  v1 = v0;
  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BD644140;
  CallControlsFullScreenStatusView.textContainer.getter(&OBJC_IVAR____TtC15ConversationKit32CallControlsFullScreenStatusView____lazy_storage___effectsView, (uint64_t (*)(uint64_t))closure #1 in CallControlsFullScreenStatusView.effectsView.getter);
  v4 = v3;
  v5 = objc_msgSend(v3, sel_topAnchor);

  v6 = objc_msgSend(v1, (SEL)&selRef_setUserInteractionEnabled_ + 4);
  v7 = objc_msgSend(v5, sel_constraintEqualToAnchor_, v6);

  *(_QWORD *)(v2 + 32) = v7;
  CallControlsFullScreenStatusView.textContainer.getter(&OBJC_IVAR____TtC15ConversationKit32CallControlsFullScreenStatusView____lazy_storage___effectsView, (uint64_t (*)(uint64_t))closure #1 in CallControlsFullScreenStatusView.effectsView.getter);
  v9 = v8;
  v10 = objc_msgSend(v8, sel_bottomAnchor);

  v11 = objc_msgSend(v1, sel_bottomAnchor);
  v12 = objc_msgSend(v10, (SEL)&selRef_attemptToPlaySoundType_forCall_ + 6, v11);

  *(_QWORD *)(v2 + 40) = v12;
  CallControlsFullScreenStatusView.textContainer.getter(&OBJC_IVAR____TtC15ConversationKit32CallControlsFullScreenStatusView____lazy_storage___effectsView, (uint64_t (*)(uint64_t))closure #1 in CallControlsFullScreenStatusView.effectsView.getter);
  v14 = v13;
  v15 = objc_msgSend(v13, sel_leadingAnchor);

  v16 = objc_msgSend(v1, sel_leadingAnchor);
  v17 = objc_msgSend(v15, (SEL)&selRef_attemptToPlaySoundType_forCall_ + 6, v16);

  *(_QWORD *)(v2 + 48) = v17;
  CallControlsFullScreenStatusView.textContainer.getter(&OBJC_IVAR____TtC15ConversationKit32CallControlsFullScreenStatusView____lazy_storage___effectsView, (uint64_t (*)(uint64_t))closure #1 in CallControlsFullScreenStatusView.effectsView.getter);
  v19 = v18;
  v20 = objc_msgSend(v18, sel_trailingAnchor);

  v21 = objc_msgSend(v1, sel_trailingAnchor);
  v22 = objc_msgSend(v20, (SEL)&selRef_attemptToPlaySoundType_forCall_ + 6, v21);

  *(_QWORD *)(v2 + 56) = v22;
  v51 = v2;
  specialized Array._endMutation()();
  CallControlsFullScreenStatusView.textContainer.getter(&OBJC_IVAR____TtC15ConversationKit32CallControlsFullScreenStatusView____lazy_storage___textContainer, (uint64_t (*)(uint64_t))closure #1 in CallControlsFullScreenStatusView.textContainer.getter);
  v24 = v23;
  v25 = objc_msgSend(v23, sel_topAnchor);

  v26 = objc_msgSend(v1, sel_topAnchor);
  v49 = objc_msgSend(v25, sel_constraintGreaterThanOrEqualToAnchor_, v26);

  CallControlsFullScreenStatusView.textContainer.getter(&OBJC_IVAR____TtC15ConversationKit32CallControlsFullScreenStatusView____lazy_storage___textContainer, (uint64_t (*)(uint64_t))closure #1 in CallControlsFullScreenStatusView.textContainer.getter);
  v28 = v27;
  v29 = objc_msgSend(v27, sel_bottomAnchor);

  v30 = objc_msgSend(v1, sel_bottomAnchor);
  v31 = objc_msgSend(v29, sel_constraintLessThanOrEqualToAnchor_, v30);

  CallControlsFullScreenStatusView.textContainer.getter(&OBJC_IVAR____TtC15ConversationKit32CallControlsFullScreenStatusView____lazy_storage___textContainer, (uint64_t (*)(uint64_t))closure #1 in CallControlsFullScreenStatusView.textContainer.getter);
  v33 = v32;
  v34 = objc_msgSend(v32, sel_centerYAnchor);

  v35 = objc_msgSend(v1, sel_centerYAnchor);
  v36 = objc_msgSend(v34, sel_constraintEqualToAnchor_, v35);

  v37 = CallControlsFullScreenStatusView.textLeadingConstraint.getter();
  CallControlsFullScreenStatusView.textContainer.getter(&OBJC_IVAR____TtC15ConversationKit32CallControlsFullScreenStatusView____lazy_storage___textContainer, (uint64_t (*)(uint64_t))closure #1 in CallControlsFullScreenStatusView.textContainer.getter);
  v39 = v38;
  v40 = objc_msgSend(v38, sel_trailingAnchor);

  v41 = objc_msgSend(v1, sel_trailingAnchor);
  v42 = objc_msgSend(v40, sel_constraintEqualToAnchor_, v41);

  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    v43 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    v43 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (__OFADD__(v43, 5))
  {
    __break(1u);
  }
  else
  {
    specialized Array._reserveCapacityImpl(minimumCapacity:growForAppend:)(v43 + 5, 1);
    specialized Array._endMutation()();
    v2 = (unint64_t)v49;
    MEMORY[0x1C3B7301C]();
    if (*(_QWORD *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(_QWORD *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_5;
  }
  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
LABEL_5:
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  v44 = v31;
  MEMORY[0x1C3B7301C]();
  if (*(_QWORD *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  v45 = v36;
  MEMORY[0x1C3B7301C]();
  if (*(_QWORD *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  v46 = v37;
  MEMORY[0x1C3B7301C]();
  if (*(_QWORD *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  v47 = v42;
  MEMORY[0x1C3B7301C]();
  if (*(_QWORD *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();

  v48 = (void *)objc_opt_self();
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v48, sel_activateConstraints_, isa);

}

id CallControlsFullScreenStatusView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void CallControlsFullScreenStatusView.init(coder:)()
{
  char *v0;

  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit32CallControlsFullScreenStatusView____lazy_storage___effectsView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit32CallControlsFullScreenStatusView____lazy_storage___textLeadingConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit32CallControlsFullScreenStatusView____lazy_storage___titleLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit32CallControlsFullScreenStatusView____lazy_storage___subtitleLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit32CallControlsFullScreenStatusView____lazy_storage___textContainer] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

Swift::Void __swiftcall CallControlsFullScreenStatusView.set(title:subtitle:)(Swift::String_optional title, Swift::String_optional subtitle)
{
  void *object;
  uint64_t countAndFlagsBits;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;

  object = subtitle.value._object;
  countAndFlagsBits = subtitle.value._countAndFlagsBits;
  v4 = title.value._object;
  v5 = title.value._countAndFlagsBits;
  CallControlsFullScreenStatusView.titleLabel.getter(&OBJC_IVAR____TtC15ConversationKit32CallControlsFullScreenStatusView____lazy_storage___titleLabel, MEMORY[0x1E0DC4A98]);
  v7 = v6;
  if (v4)
    v8 = (void *)MEMORY[0x1C3B72E00](v5, v4);
  else
    v8 = 0;
  objc_msgSend(v7, sel_setText_, v8);

  CallControlsFullScreenStatusView.titleLabel.getter(&OBJC_IVAR____TtC15ConversationKit32CallControlsFullScreenStatusView____lazy_storage___titleLabel, MEMORY[0x1E0DC4A98]);
  v10 = v9;
  objc_msgSend(v9, sel_setHidden_, v4 == 0);

  CallControlsFullScreenStatusView.titleLabel.getter(&OBJC_IVAR____TtC15ConversationKit32CallControlsFullScreenStatusView____lazy_storage___subtitleLabel, MEMORY[0x1E0DC4AA0]);
  v12 = v11;
  if (object)
    v13 = (void *)MEMORY[0x1C3B72E00](countAndFlagsBits, object);
  else
    v13 = 0;
  objc_msgSend(v12, sel_setText_, v13);

  CallControlsFullScreenStatusView.titleLabel.getter(&OBJC_IVAR____TtC15ConversationKit32CallControlsFullScreenStatusView____lazy_storage___subtitleLabel, MEMORY[0x1E0DC4AA0]);
  v15 = v14;
  objc_msgSend(v14, sel_setHidden_, object == 0);

}

void CallControlsFullScreenStatusView.titleLabel.getter(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  id v6;

  v4 = *(void **)(v2 + *a1);
  if (!v4)
  {
    closure #1 in CallControlsFullScreenStatusView.titleLabel.getter(a2);
    OUTLINED_FUNCTION_17_3(v5);

    v4 = 0;
  }
  v6 = v4;
  OUTLINED_FUNCTION_18();
}

Swift::Void __swiftcall CallControlsFullScreenStatusView.update(statusLayoutGuide:)(UILayoutGuide statusLayoutGuide)
{
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;

  CallControlsFullScreenStatusView.textContainer.getter(&OBJC_IVAR____TtC15ConversationKit32CallControlsFullScreenStatusView____lazy_storage___textContainer, (uint64_t (*)(uint64_t))closure #1 in CallControlsFullScreenStatusView.textContainer.getter);
  v3 = v2;
  v4 = objc_msgSend(v2, sel_leadingAnchor);

  v5 = -[objc_class leadingAnchor](statusLayoutGuide.super.isa, sel_leadingAnchor);
  v6 = objc_msgSend(v4, sel_constraintEqualToAnchor_, v5);

  CallControlsFullScreenStatusView.textLeadingConstraint.setter(v6);
}

void CallControlsFullScreenStatusView.textLeadingConstraint.setter(void *a1)
{
  uint64_t v1;
  id v3;
  void *v4;
  id v5;

  v3 = CallControlsFullScreenStatusView.textLeadingConstraint.getter();
  v4 = *(void **)(v1
                + OBJC_IVAR____TtC15ConversationKit32CallControlsFullScreenStatusView____lazy_storage___textLeadingConstraint);
  *(_QWORD *)(v1
            + OBJC_IVAR____TtC15ConversationKit32CallControlsFullScreenStatusView____lazy_storage___textLeadingConstraint) = a1;
  v5 = a1;

  CallControlsFullScreenStatusView.textLeadingConstraint.didset(v3);
}

void CallControlsFullScreenStatusView.textContainer.getter(_QWORD *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)(v2 + *a1);
  if (!v4)
  {
    v5 = (void *)a2(v2);
    OUTLINED_FUNCTION_17_3(v5);

    v4 = 0;
  }
  v6 = v4;
  OUTLINED_FUNCTION_18();
}

id closure #1 in CallControlsFullScreenStatusView.effectsView.getter(void *a1)
{
  id v2;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC4028]), sel_initWithPrivateStyle_, 2030);
  if (!v2)
    v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_init);
  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(a1, sel_addSubview_, v2);
  return v2;
}

void CallControlsFullScreenStatusView.textLeadingConstraint.didset(void *a1)
{
  id v1;

  objc_msgSend(a1, sel_setActive_, 0);
  v1 = CallControlsFullScreenStatusView.textLeadingConstraint.getter();
  objc_msgSend(v1, sel_setActive_, 1);

}

id CallControlsFullScreenStatusView.textLeadingConstraint.getter()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  id v10;

  v1 = OBJC_IVAR____TtC15ConversationKit32CallControlsFullScreenStatusView____lazy_storage___textLeadingConstraint;
  v2 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit32CallControlsFullScreenStatusView____lazy_storage___textLeadingConstraint];
  if (v2)
  {
    v3 = *(id *)&v0[OBJC_IVAR____TtC15ConversationKit32CallControlsFullScreenStatusView____lazy_storage___textLeadingConstraint];
  }
  else
  {
    CallControlsFullScreenStatusView.textContainer.getter(&OBJC_IVAR____TtC15ConversationKit32CallControlsFullScreenStatusView____lazy_storage___textContainer, (uint64_t (*)(uint64_t))closure #1 in CallControlsFullScreenStatusView.textContainer.getter);
    v5 = v4;
    v6 = objc_msgSend(v4, sel_leadingAnchor);

    v7 = objc_msgSend(v0, sel_leadingAnchor);
    v8 = objc_msgSend(v6, sel_constraintEqualToAnchor_, v7);

    v9 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v8;
    v3 = v8;

    v2 = 0;
  }
  v10 = v2;
  return v3;
}

void closure #1 in CallControlsFullScreenStatusView.titleLabel.getter(uint64_t *a1)
{
  id v2;
  id v3;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIFont);
  v3 = static UIFont.preferredFont(textStyle:weight:maximumPointSize:)(*a1, 0, 1);
  objc_msgSend(v2, sel_setFont_, v3);

  OUTLINED_FUNCTION_18();
}

void *closure #1 in CallControlsFullScreenStatusView.textContainer.getter(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  UIStackView *v5;
  void *v6;
  void *v7;

  _sSo8NSObjectCMaTm_0(0, &lazy cache variable for type metadata for UIStackView);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BD6441C0;
  CallControlsFullScreenStatusView.titleLabel.getter(&OBJC_IVAR____TtC15ConversationKit32CallControlsFullScreenStatusView____lazy_storage___titleLabel, MEMORY[0x1E0DC4A98]);
  *(_QWORD *)(v2 + 32) = v3;
  CallControlsFullScreenStatusView.titleLabel.getter(&OBJC_IVAR____TtC15ConversationKit32CallControlsFullScreenStatusView____lazy_storage___subtitleLabel, MEMORY[0x1E0DC4AA0]);
  *(_QWORD *)(v2 + 40) = v4;
  specialized Array._endMutation()();
  UIStackView.__allocating_init(arrangedSubviews:)(v5, (Swift::OpaquePointer)v2);
  v7 = v6;
  objc_msgSend(v6, sel_setAxis_, 1);
  objc_msgSend(v7, sel_setSpacing_, 8.0);
  objc_msgSend(v7, sel_setAlignment_, 3);
  objc_msgSend(v7, sel_setDistribution_, 0);
  objc_msgSend(v7, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(a1, sel_addSubview_, v7);
  return v7;
}

id CallControlsFullScreenStatusView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id (*protocol witness for CallControlsFullScreenStatusViewing.isHidden.modify in conformance CallControlsFullScreenStatusView(uint64_t a1))(uint64_t a1)
{
  void *v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = objc_msgSend(v1, sel_isHidden);
  return protocol witness for CallControlsFullScreenStatusViewing.isHidden.modify in conformance CallControlsFullScreenStatusView;
}

id protocol witness for CallControlsFullScreenStatusViewing.isHidden.modify in conformance CallControlsFullScreenStatusView(uint64_t a1)
{
  return objc_msgSend(*(id *)a1, sel_setHidden_, *(unsigned __int8 *)(a1 + 8));
}

uint64_t type metadata accessor for CallControlsFullScreenStatusView()
{
  return objc_opt_self();
}

id InCallControlsPTTLeaveChannelFooterView.__allocating_init(frame:)()
{
  Class v0;
  id v1;
  double v2;
  id v3;
  SEL v4;

  OUTLINED_FUNCTION_17_7();
  v1 = objc_allocWithZone(v0);
  v2 = OUTLINED_FUNCTION_15_0();
  return objc_msgSend(v3, v4, v2);
}

char *InCallControlsPTTLeaveChannelFooterView.init(frame:)()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  char *v4;
  double v5;
  objc_super *v6;
  SEL v7;
  char *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  char *v12;
  id v13;
  id v14;
  Swift::String v15;
  Swift::String_optional v16;
  Swift::String v17;
  Swift::String v18;
  void *v19;
  void *v20;
  uint64_t v21;
  id v22;
  id v23;
  Class isa;
  uint64_t v25;
  id v26;
  void *v27;
  uint64_t v28;
  id v29;
  void *v30;
  uint64_t v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  Class v41;
  Swift::String v43;

  OUTLINED_FUNCTION_17_7();
  v2 = OBJC_IVAR____TtC15ConversationKit39InCallControlsPTTLeaveChannelFooterView_titleLabel;
  v3 = objc_allocWithZone(MEMORY[0x1E0DC3990]);
  v4 = v0;
  *(_QWORD *)&v0[v2] = OUTLINED_FUNCTION_123((uint64_t)v4, sel_init);

  type metadata accessor for InCallControlsPTTLeaveChannelFooterView();
  v5 = OUTLINED_FUNCTION_15_0();
  v8 = (char *)objc_msgSendSuper2(v6, v7, v5);
  v9 = OBJC_IVAR____TtC15ConversationKit39InCallControlsPTTLeaveChannelFooterView_titleLabel;
  v10 = *(void **)&v8[OBJC_IVAR____TtC15ConversationKit39InCallControlsPTTLeaveChannelFooterView_titleLabel];
  v11 = (void *)objc_opt_self();
  v12 = v8;
  v13 = v10;
  v14 = objc_msgSend(v11, sel_conversationKit);
  v43._object = (void *)0xE000000000000000;
  v15._object = (void *)0x80000001BD66EF40;
  v15._countAndFlagsBits = 0xD000000000000026;
  v16.value._countAndFlagsBits = 0x61737265766E6F43;
  v16.value._object = (void *)0xEF74694B6E6F6974;
  v17._countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  v43._countAndFlagsBits = 0;
  v18 = NSLocalizedString(_:tableName:bundle:value:comment:)(v15, v16, (NSBundle)v14, v17, v43);

  outlined bridged method (mbnn) of @objc UILabel.text.setter(v18._countAndFlagsBits, (uint64_t)v18._object, v13);
  v19 = *(void **)&v8[v9];
  v20 = (void *)objc_opt_self();
  v21 = *MEMORY[0x1E0DC4AB8];
  v22 = v19;
  v23 = objc_msgSend(v20, sel_preferredFontForTextStyle_, v21);
  isa = UIFont.withTraits(_:)(0x8000u).super.isa;

  objc_msgSend(v22, sel_setFont_, isa);
  v25 = one-time initialization token for collectionViewSectionHeaderTitleLabel;
  v26 = *(id *)&v8[v9];
  if (v25 != -1)
    swift_once();
  objc_msgSend(v26, sel_setTextColor_, static Colors.InCallControls.collectionViewSectionHeaderTitleLabel);

  v27 = *(void **)&v8[v9];
  v29 = OUTLINED_FUNCTION_5_15(v28, sel_setNumberOfLines_);
  OUTLINED_FUNCTION_5_15((uint64_t)v29, sel_setLineBreakMode_);
  objc_msgSend(v27, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v12, sel_addSubview_, v27);
  v30 = (void *)objc_opt_self();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_1BD644140;
  v32 = OUTLINED_FUNCTION_123((uint64_t)objc_msgSend(v27, sel_leadingAnchor), sel_leadingAnchor);
  v33 = OUTLINED_FUNCTION_1_21((uint64_t)v32, sel_constraintEqualToAnchor_constant_);
  OUTLINED_FUNCTION_1_4();

  *(_QWORD *)(v31 + 32) = v1;
  v34 = OUTLINED_FUNCTION_123((uint64_t)objc_msgSend(*(id *)&v8[v9], sel_trailingAnchor), sel_trailingAnchor);
  v35 = OUTLINED_FUNCTION_1_21((uint64_t)v34, sel_constraintEqualToAnchor_constant_);
  OUTLINED_FUNCTION_1_4();

  *(_QWORD *)(v31 + 40) = v1;
  v36 = OUTLINED_FUNCTION_123((uint64_t)objc_msgSend(*(id *)&v8[v9], sel_topAnchor), sel_topAnchor);
  v37 = OUTLINED_FUNCTION_1_21((uint64_t)v36, sel_constraintEqualToAnchor_constant_);
  OUTLINED_FUNCTION_1_4();

  *(_QWORD *)(v31 + 48) = v1;
  v38 = objc_msgSend(*(id *)&v8[v9], sel_bottomAnchor);
  v39 = OUTLINED_FUNCTION_123((uint64_t)v38, sel_bottomAnchor);
  v40 = objc_msgSend(v38, sel_constraintEqualToAnchor_constant_, v39, -30.0);

  *(_QWORD *)(v31 + 56) = v40;
  specialized Array._endMutation()();
  type metadata accessor for NSLayoutConstraint();
  v41 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v30, sel_activateConstraints_, v41);

  return v12;
}

uint64_t type metadata accessor for InCallControlsPTTLeaveChannelFooterView()
{
  return objc_opt_self();
}

id InCallControlsPTTLeaveChannelFooterView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void InCallControlsPTTLeaveChannelFooterView.init(coder:)()
{
  char *v0;
  uint64_t v1;

  v1 = OBJC_IVAR____TtC15ConversationKit39InCallControlsPTTLeaveChannelFooterView_titleLabel;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

id InCallControlsPTTLeaveChannelFooterView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InCallControlsPTTLeaveChannelFooterView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t key path setter for SystemApertureConversationDetailsView.recipe : SystemApertureConversationDetailsView(uint64_t a1, _QWORD **a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v4 = type metadata accessor for ConversationControlsRecipe();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of ConversationControlsRecipe(a1, (uint64_t)v6);
  return (*(uint64_t (**)(char *))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x70))(v6);
}

uint64_t SystemApertureConversationDetailsView.recipe.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15ConversationKit37SystemApertureConversationDetailsView_recipe;
  OUTLINED_FUNCTION_2_0();
  return outlined init with copy of ConversationControlsRecipe(v3, a1);
}

uint64_t SystemApertureConversationDetailsView.recipe.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15ConversationKit37SystemApertureConversationDetailsView_recipe;
  OUTLINED_FUNCTION_2_0();
  outlined assign with copy of ConversationControlsRecipe(a1, v3);
  swift_endAccess();
  SystemApertureConversationDetailsView.updateStatus()();
  return OUTLINED_FUNCTION_10_12();
}

id (*SystemApertureConversationDetailsView.recipe.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_2_0();
  return SystemApertureConversationDetailsView.recipe.modify;
}

id SystemApertureConversationDetailsView.recipe.modify(uint64_t a1, char a2)
{
  id result;

  result = (id)swift_endAccess();
  if ((a2 & 1) == 0)
    return SystemApertureConversationDetailsView.updateStatus()();
  return result;
}

double SystemApertureConversationDetailsView.titleLabelGlyphInset.getter()
{
  uint64_t v0;
  void *v1;
  double v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit37SystemApertureConversationDetailsView_primaryLabel);
  objc_msgSend(v1, sel__tightBoundingRectOfFirstLine);
  objc_msgSend(v1, sel_convertPoint_toCoordinateSpace_, v0);
  return v2;
}

id SystemApertureConversationDetailsView.__allocating_init(recipe:)()
{
  uint64_t v0;

  OUTLINED_FUNCTION_16_1();
  return SystemApertureConversationDetailsView.init(recipe:)(v0);
}

id SystemApertureConversationDetailsView.init(recipe:)(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  void *v4;
  double v5;
  char *v6;
  id v7;
  void *v8;
  UILabel *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  UILabel *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v23;
  objc_super v24;
  UIColor_optional v25;
  UIColor_optional v26;

  swift_getObjectType();
  v3 = OBJC_IVAR____TtC15ConversationKit37SystemApertureConversationDetailsView_primaryLabel;
  type metadata accessor for UILabel();
  v4 = (void *)objc_opt_self();
  v5 = *MEMORY[0x1E0DC1438];
  v6 = v1;
  v7 = objc_msgSend(v4, sel_systemFontOfSize_weight_, 16.67, v5);
  v8 = (void *)objc_opt_self();
  v25.value.super.isa = (Class)objc_msgSend(v8, sel_whiteColor);
  UILabel.init(font:textColor:)(v9, (UIFont)v7, v25);
  *(_QWORD *)&v1[v3] = v10;
  v11 = OBJC_IVAR____TtC15ConversationKit37SystemApertureConversationDetailsView_secondaryLabel;
  v12 = objc_msgSend(v4, sel_systemFontOfSize_, 14.0);
  v26.value.super.isa = (Class)objc_msgSend(v8, sel_secondaryLabelColor);
  UILabel.init(font:textColor:)(v13, (UIFont)v12, v26);
  *(_QWORD *)&v6[v11] = v14;
  outlined init with copy of ConversationControlsRecipe(a1, (uint64_t)&v6[OBJC_IVAR____TtC15ConversationKit37SystemApertureConversationDetailsView_recipe]);

  v24.receiver = v6;
  v24.super_class = (Class)ObjC metadata update function for SystemApertureConversationDetailsView();
  v15 = objc_msgSendSuper2(&v24, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  SystemApertureConversationDetailsView.configureSubviews()();
  SystemApertureConversationDetailsView.updateStatus()();
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v16 = type metadata accessor for Logger();
  __swift_project_value_buffer(v16, (uint64_t)&static Logger.conversationControls);
  v17 = Logger.logObject.getter();
  v18 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)OUTLINED_FUNCTION_105();
    v23 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v19 = 136446210;
    v20 = OUTLINED_FUNCTION_7_10();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v20, v21, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_2_1();
    _os_log_impl(&dword_1BD004000, v17, v18, "[%{public}s] created", v19, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_60();
  }

  OUTLINED_FUNCTION_10_12();
  return v15;
}

id SystemApertureConversationDetailsView.__allocating_init(coder:)()
{
  void *v0;
  id v1;

  v1 = objc_msgSend(OUTLINED_FUNCTION_16_1(), sel_initWithCoder_, v0);

  return v1;
}

void SystemApertureConversationDetailsView.init(coder:)()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  UILabel *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  UILabel *v9;
  uint64_t v10;
  UIColor_optional v11;
  UIColor_optional v12;

  v1 = OBJC_IVAR____TtC15ConversationKit37SystemApertureConversationDetailsView_primaryLabel;
  type metadata accessor for UILabel();
  v2 = (void *)objc_opt_self();
  v3 = objc_msgSend(v2, sel_systemFontOfSize_weight_, 16.67, *MEMORY[0x1E0DC1438]);
  v4 = (void *)objc_opt_self();
  v11.value.super.isa = (Class)objc_msgSend(v4, sel_whiteColor);
  UILabel.init(font:textColor:)(v5, (UIFont)v3, v11);
  *(_QWORD *)&v0[v1] = v6;
  v7 = OBJC_IVAR____TtC15ConversationKit37SystemApertureConversationDetailsView_secondaryLabel;
  v8 = objc_msgSend(v2, sel_systemFontOfSize_, 14.0);
  v12.value.super.isa = (Class)objc_msgSend(v4, sel_secondaryLabelColor);
  UILabel.init(font:textColor:)(v9, (UIFont)v8, v12);
  *(_QWORD *)&v0[v7] = v10;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

Swift::Void __swiftcall SystemApertureConversationDetailsView.layoutSubviews()()
{
  char *v0;
  CGFloat Width;
  id v2;
  void *v3;
  double v4;
  double v5;
  double v6;
  double v7;
  void *v8;
  double v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  SEL v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD aBlock[6];
  objc_super v51;
  CGRect v52;
  CGRect v53;
  CGRect v54;
  CGRect v55;

  swift_getObjectType();
  v51.receiver = v0;
  v51.super_class = (Class)ObjC metadata update function for SystemApertureConversationDetailsView();
  objc_msgSendSuper2(&v51, sel_layoutSubviews);
  OUTLINED_FUNCTION_2_39();
  Width = CGRectGetWidth(v52);
  v2 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC15ConversationKit37SystemApertureConversationDetailsView_primaryLabel], sel_font);
  if (!v2)
  {
    __break(1u);
    return;
  }
  v3 = v2;
  objc_msgSend(v2, sel_lineHeight);
  v5 = v4;

  OUTLINED_FUNCTION_2_39();
  v6 = CGRectGetWidth(v53);
  OUTLINED_FUNCTION_2_39();
  v7 = CGRectGetHeight(v54) - v5;
  v8 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit37SystemApertureConversationDetailsView_secondaryLabel];
  objc_msgSend(v8, sel_sizeThatFits_, v6, v7);
  if (v6 >= v9)
    v6 = v9;
  if (v7 >= v10)
    v7 = v10;
  v11 = objc_opt_self();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v0;
  *(CGFloat *)(v12 + 24) = Width;
  *(double *)(v12 + 32) = v5;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = partial apply for closure #1 in SystemApertureConversationDetailsView.layoutSubviews();
  *(_QWORD *)(v13 + 24) = v12;
  aBlock[4] = partial apply for thunk for @callee_guaranteed () -> ();
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = &block_descriptor_5;
  v14 = _Block_copy(aBlock);
  v15 = v0;
  swift_retain();
  swift_release();
  objc_msgSend((id)v11, sel_performWithoutAnimation_, v14);
  _Block_release(v14);
  LOBYTE(v11) = swift_isEscapingClosureAtFileLocation();
  v16 = swift_release();
  if ((v11 & 1) != 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)v15) + 0x80))(v16);
  if (one-time initialization token for conversationControls != -1)
LABEL_14:
    swift_once();
  v17 = type metadata accessor for Logger();
  __swift_project_value_buffer(v17, (uint64_t)&static Logger.conversationControls);
  v18 = Logger.logObject.getter();
  v19 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = OUTLINED_FUNCTION_105();
    aBlock[0] = OUTLINED_FUNCTION_105();
    *(_DWORD *)v20 = 136446466;
    v21 = OUTLINED_FUNCTION_7_10();
    OUTLINED_FUNCTION_4_18(v21, v22, v23, v24, v25, v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 12) = 2080;
    OUTLINED_FUNCTION_5_16();
    v27 = CGRect.description.getter();
    OUTLINED_FUNCTION_4_18(v27, v28, v29, v30, v31, v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v18, v19, "[%{public}s][layout] primaryFrame: %s", (uint8_t *)v20, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_60();
  }

  OUTLINED_FUNCTION_5_16();
  objc_msgSend(v33, v34);
  OUTLINED_FUNCTION_5_16();
  objc_msgSend(v8, sel_setFrame_, 0.0, CGRectGetMaxY(v55), v6, v7);
  v35 = Logger.logObject.getter();
  v36 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v35, v36))
  {
    v37 = OUTLINED_FUNCTION_105();
    aBlock[0] = OUTLINED_FUNCTION_105();
    *(_DWORD *)v37 = 136446466;
    v38 = OUTLINED_FUNCTION_7_10();
    OUTLINED_FUNCTION_4_18(v38, v39, v40, v41, v42, v43);
    OUTLINED_FUNCTION_3_27();
    swift_bridgeObjectRelease();
    *(_WORD *)(v37 + 12) = 2080;
    v44 = CGRect.description.getter();
    OUTLINED_FUNCTION_4_18(v44, v45, v46, v47, v48, v49);
    OUTLINED_FUNCTION_3_27();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v35, v36, "[%{public}s][layout] secondaryFrame: %s", (uint8_t *)v37, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_60();
  }
  swift_release();

}

id closure #1 in SystemApertureConversationDetailsView.layoutSubviews()(uint64_t a1, double a2, double a3)
{
  void *v3;

  v3 = *(void **)(a1 + OBJC_IVAR____TtC15ConversationKit37SystemApertureConversationDetailsView_primaryLabel);
  objc_msgSend(v3, sel_setFrame_, 0.0, 0.0, a2, a3);
  objc_msgSend(v3, sel_setNeedsLayout);
  return objc_msgSend(v3, sel_layoutIfNeeded);
}

id SystemApertureConversationDetailsView.updateStatus()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  id *v7;
  void *v8;
  void (*v9)(void);
  id v10;
  void *v11;
  unint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  id v16;
  uint64_t v18;

  v1 = type metadata accessor for ConversationControlsRecipe();
  v2 = MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x1E0C80A78](v2);
  v7 = (id *)((char *)&v18 - v6);
  v8 = *(void **)((char *)v0 + OBJC_IVAR____TtC15ConversationKit37SystemApertureConversationDetailsView_primaryLabel);
  v9 = *(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68);
  ((void (*)(uint64_t))v9)(v5);
  v10 = v7[10];
  OUTLINED_FUNCTION_10_12();
  objc_msgSend(v8, sel_setAttributedText_, v10);

  v11 = *(void **)((char *)v0 + OBJC_IVAR____TtC15ConversationKit37SystemApertureConversationDetailsView_secondaryLabel);
  v9();
  v12 = *((_QWORD *)v4 + 11);
  swift_bridgeObjectRetain();
  outlined destroy of ConversationControlsRecipe((uint64_t)v4);
  if (v12 >> 62)
  {
    swift_bridgeObjectRetain();
    v13 = (void *)_CocoaArrayWrapper.endIndex.getter();
    OUTLINED_FUNCTION_2_1();
    if (!v13)
      goto LABEL_6;
  }
  else
  {
    v13 = *(void **)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v13)
      goto LABEL_6;
  }
  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v12 & 0xC000000000000001) == 0, v12);
  if ((v12 & 0xC000000000000001) != 0)
    v14 = (id)MEMORY[0x1C3B73D18](0, v12);
  else
    v14 = *(id *)(v12 + 32);
  v13 = v14;
LABEL_6:
  OUTLINED_FUNCTION_2_1();
  objc_msgSend(v11, sel_setAttributedText_, v13);

  v16 = OUTLINED_FUNCTION_11_4(v15, sel_setMarqueeEnabled_);
  OUTLINED_FUNCTION_11_4((uint64_t)v16, sel_setMarqueeRunning_);
  return objc_msgSend(v0, sel_setNeedsLayout);
}

uint64_t outlined destroy of ConversationControlsRecipe(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ConversationControlsRecipe();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for SystemApertureConversationDetailsView()
{
  uint64_t result;

  result = type metadata singleton initialization cache for SystemApertureConversationDetailsView;
  if (!type metadata singleton initialization cache for SystemApertureConversationDetailsView)
    return swift_getSingletonMetadata();
  return result;
}

id SystemApertureConversationDetailsView.configureSubviews()()
{
  char *v0;

  objc_msgSend(v0, sel_addSubview_, *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit37SystemApertureConversationDetailsView_primaryLabel]);
  return objc_msgSend(v0, sel_addSubview_, *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit37SystemApertureConversationDetailsView_secondaryLabel]);
}

id SystemApertureConversationDetailsView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

void SystemApertureConversationDetailsView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id SystemApertureConversationDetailsView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)ObjC metadata update function for SystemApertureConversationDetailsView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t protocol witness for SystemApertureControlsStatusView.recipe.getter in conformance SystemApertureConversationDetailsView()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t protocol witness for SystemApertureControlsStatusView.recipe.setter in conformance SystemApertureConversationDetailsView()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

void (*protocol witness for SystemApertureControlsStatusView.recipe.modify in conformance SystemApertureConversationDetailsView(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v3;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x78))();
  return protocol witness for ControlsView.cnkContentAlpha.modify in conformance SystemApertureOngoingTelephonyControlsView;
}

uint64_t protocol witness for SystemApertureControlsStatusView.titleLabelGlyphInset.getter in conformance SystemApertureConversationDetailsView()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t sub_1BD06E484()
{
  uint64_t v0;

  return swift_deallocObject();
}

id partial apply for closure #1 in SystemApertureConversationDetailsView.layoutSubviews()()
{
  uint64_t v0;

  return closure #1 in SystemApertureConversationDetailsView.layoutSubviews()(*(_QWORD *)(v0 + 16), *(double *)(v0 + 24), *(double *)(v0 + 32));
}

uint64_t sub_1BD06E4B4()
{
  return swift_deallocObject();
}

uint64_t sub_1BD06E4C4(_QWORD **a1)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x68))();
}

uint64_t type metadata completion function for SystemApertureConversationDetailsView()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ConversationControlsRecipe();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for SystemApertureConversationDetailsView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SystemApertureConversationDetailsView.recipe.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of SystemApertureConversationDetailsView.recipe.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of SystemApertureConversationDetailsView.recipe.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of SystemApertureConversationDetailsView.titleLabelGlyphInset.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of SystemApertureConversationDetailsView.__allocating_init(recipe:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

void SystemSymbol.name.getter()
{
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  OUTLINED_FUNCTION_0();
}

void SystemSymbol.color.getter()
{
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  OUTLINED_FUNCTION_0();
}

void SystemSymbol.backgroundColor.getter()
{
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  OUTLINED_FUNCTION_0();
}

void SystemSymbol.scale.getter()
{
  OUTLINED_FUNCTION_2_7();
  OUTLINED_FUNCTION_0();
}

void SystemSymbol.font.getter()
{
  OUTLINED_FUNCTION_2_7();
  OUTLINED_FUNCTION_0();
}

void SystemSymbol.weight.getter()
{
  OUTLINED_FUNCTION_2_7();
  OUTLINED_FUNCTION_0();
}

__n128 SystemSymbol.init(name:color:backgroundColor:scale:font:weight:)@<Q0>(unint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, unint64_t a4@<X3>, unint64_t a5@<X4>, unint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, __n128 *a9@<X8>, __n128 a10, unint64_t a11, unint64_t a12)
{
  __n128 result;

  result = a10;
  a9->n128_u64[0] = a1;
  a9->n128_u64[1] = a2;
  a9[1].n128_u64[0] = a3;
  a9[1].n128_u64[1] = a4;
  a9[2].n128_u64[0] = a5;
  a9[2].n128_u64[1] = a6;
  a9[3].n128_u64[0] = a7;
  a9[3].n128_u64[1] = a8;
  a9[4] = a10;
  a9[5].n128_u64[0] = a11;
  a9[5].n128_u64[1] = a12;
  return result;
}

uint64_t SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W7>, void (**a9)()@<X8>)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)@<X0>(uint64_t@<X8>);
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  char *v31;
  unint64_t v32;
  void (*v33)(char *, uint64_t);
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)();
  uint64_t v38;
  uint64_t v39;
  uint64_t result;
  uint64_t (*v41)();
  void (*v42)();
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;

  v52 = a8;
  v48 = a7;
  v49 = a6;
  v15 = OUTLINED_FUNCTION_4_19();
  v47 = *(_QWORD *)(v15 - 8);
  v16 = *(_QWORD *)(v47 + 64);
  v17 = MEMORY[0x1E0C80A78](v15);
  v45 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v46 = (char *)&v43 - v18;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Image.Scale?);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v43 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = OUTLINED_FUNCTION_0_13();
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  v23 = OUTLINED_FUNCTION_0_13();
  *(_QWORD *)(v23 + 16) = partial apply for closure #1 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:);
  *(_QWORD *)(v23 + 24) = v22;
  v50 = v23;
  v24 = OUTLINED_FUNCTION_0_13();
  *(_QWORD *)(v24 + 16) = partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:);
  *(_QWORD *)(v24 + 24) = a3;
  v25 = OUTLINED_FUNCTION_0_13();
  *(_QWORD *)(v25 + 16) = partial apply for closure #3 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:);
  *(_QWORD *)(v25 + 24) = a4;
  v51 = a5;
  outlined init with copy of Image.Scale?(a5, (uint64_t)v21);
  if (__swift_getEnumTagSinglePayload((uint64_t)v21, 1, v15) == 1)
  {
    swift_retain();
    partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
    v26 = 0;
    v27 = 0;
  }
  else
  {
    v43 = a3;
    v44 = v24;
    v28 = v46;
    v29 = v47;
    v30 = *(void (**)(char *, char *, uint64_t))(v47 + 32);
    v30(v46, v21, v15);
    v31 = v45;
    (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v45, v28, v15);
    v32 = (*(unsigned __int8 *)(v29 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
    v27 = swift_allocObject();
    v30((char *)(v27 + v32), v31, v15);
    v33 = *(void (**)(char *, uint64_t))(v29 + 8);
    swift_retain();
    partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
    v34 = v28;
    v24 = v44;
    v33(v34, v15);
    v26 = partial apply for closure #1 in closure #4 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:);
  }
  v35 = v49;
  if (v49)
  {
    v36 = OUTLINED_FUNCTION_0_13();
    *(_QWORD *)(v36 + 16) = partial apply for closure #1 in closure #5 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:);
    *(_QWORD *)(v36 + 24) = v35;
    v35 = OUTLINED_FUNCTION_0_13();
    *(_QWORD *)(v35 + 16) = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed ()) -> (@out Font);
    *(_QWORD *)(v35 + 24) = v36;
    v37 = partial apply for thunk for @escaping @callee_guaranteed () -> (@unowned Font.Weight);
  }
  else
  {
    v37 = 0;
  }
  if ((v52 & 1) != 0)
  {
    swift_release();
    swift_release();
    outlined destroy of Image.Scale?(v51);
    v41 = 0;
    result = 0;
  }
  else
  {
    v38 = swift_allocObject();
    *(_QWORD *)(v38 + 16) = v48;
    swift_release();
    swift_release();
    outlined destroy of Image.Scale?(v51);
    v39 = OUTLINED_FUNCTION_0_13();
    *(_QWORD *)(v39 + 16) = partial apply for closure #1 in closure #6 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:);
    *(_QWORD *)(v39 + 24) = v38;
    result = OUTLINED_FUNCTION_0_13();
    *(_QWORD *)(result + 16) = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed ()) -> (@out Font.Weight);
    *(_QWORD *)(result + 24) = v39;
    v41 = partial apply for thunk for @escaping @callee_guaranteed () -> (@unowned Font.Weight);
  }
  v42 = (void (*)())v50;
  *a9 = partial apply for thunk for @escaping @callee_guaranteed () -> (@owned String);
  a9[1] = v42;
  a9[2] = (void (*)())thunk for @escaping @callee_guaranteed () -> (@owned Color)partial apply;
  a9[3] = (void (*)())v24;
  a9[4] = (void (*)())thunk for @escaping @callee_guaranteed () -> (@owned Color)partial apply;
  a9[5] = (void (*)())v25;
  a9[6] = (void (*)())v26;
  a9[7] = (void (*)())v27;
  a9[8] = (void (*)())v37;
  a9[9] = (void (*)())v35;
  a9[10] = (void (*)())v41;
  a9[11] = (void (*)())result;
  return result;
}

uint64_t closure #1 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BD06EA74()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)()
{
  uint64_t v0;

  return closure #1 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)(*(_QWORD *)(v0 + 16));
}

uint64_t outlined init with copy of Image.Scale?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Image.Scale?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of Image.Scale?(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Image.Scale?);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t closure #1 in closure #4 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = type metadata accessor for Image.Scale();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
}

uint64_t sub_1BD06EB64()
{
  return swift_deallocObject();
}

double partial apply for closure #1 in closure #6 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)@<D0>(double *a1@<X8>)
{
  uint64_t v1;
  double result;

  result = *(double *)(v1 + 16);
  *a1 = result;
  return result;
}

uint64_t sub_1BD06EB80()
{
  swift_release();
  return swift_deallocObject();
}

double partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed ()) -> (@out Font.Weight)(uint64_t a1)
{
  double v2;

  OUTLINED_FUNCTION_5_17(a1);
  return v2;
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed () -> (@unowned Font.Weight)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t partial apply for closure #1 in closure #5 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = v1;
  return swift_retain();
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed ()) -> (@out Font)(uint64_t a1)
{
  uint64_t v2;

  OUTLINED_FUNCTION_5_17(a1);
  return v2;
}

uint64_t sub_1BD06EC20()
{
  uint64_t v0;
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_4_19();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #4 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(OUTLINED_FUNCTION_4_19() - 8) + 80);
  return closure #1 in closure #4 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)(v1 + ((v3 + 16) & ~v3), a1);
}

uint64_t type metadata instantiation function for SystemSymbol()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t destroy for SystemSymbol(_QWORD *a1)
{
  uint64_t result;

  swift_release();
  swift_release();
  result = swift_release();
  if (a1[6])
    result = swift_release();
  if (a1[8])
    result = swift_release();
  if (a1[10])
    return swift_release();
  return result;
}

uint64_t initializeWithCopy for SystemSymbol(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = v4;
  v6 = (_OWORD *)(a2 + 48);
  v5 = *(_QWORD *)(a2 + 48);
  swift_retain();
  swift_retain();
  swift_retain();
  if (v5)
  {
    v7 = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 48) = v5;
    *(_QWORD *)(a1 + 56) = v7;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 48) = *v6;
  }
  v8 = *(_QWORD *)(a2 + 64);
  if (v8)
  {
    v9 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = v8;
    *(_QWORD *)(a1 + 72) = v9;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  }
  v10 = *(_QWORD *)(a2 + 80);
  if (v10)
  {
    v11 = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 80) = v10;
    *(_QWORD *)(a1 + 88) = v11;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  }
  return a1;
}

_QWORD *assignWithCopy for SystemSymbol(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_retain();
  swift_release();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_retain();
  swift_release();
  v7 = a2[6];
  if (a1[6])
  {
    if (v7)
    {
      v8 = a2[7];
      a1[6] = v7;
      a1[7] = v8;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v7)
  {
    v9 = a2[7];
    a1[6] = v7;
    a1[7] = v9;
    swift_retain();
    goto LABEL_8;
  }
  *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
LABEL_8:
  v10 = a2[8];
  if (a1[8])
  {
    if (v10)
    {
      v11 = a2[9];
      a1[8] = v10;
      a1[9] = v11;
      swift_retain();
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v10)
  {
    v12 = a2[9];
    a1[8] = v10;
    a1[9] = v12;
    swift_retain();
    goto LABEL_15;
  }
  *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
LABEL_15:
  v13 = a2[10];
  if (!a1[10])
  {
    if (v13)
    {
      v15 = a2[11];
      a1[10] = v13;
      a1[11] = v15;
      swift_retain();
      return a1;
    }
LABEL_21:
    *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
    return a1;
  }
  if (!v13)
  {
    swift_release();
    goto LABEL_21;
  }
  v14 = a2[11];
  a1[10] = v13;
  a1[11] = v14;
  swift_retain();
  swift_release();
  return a1;
}

void *__swift_memcpy96_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x60uLL);
}

uint64_t assignWithTake for SystemSymbol(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  v4 = *(_QWORD *)(a2 + 48);
  if (*(_QWORD *)(a1 + 48))
  {
    if (v4)
    {
      v5 = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 48) = v4;
      *(_QWORD *)(a1 + 56) = v5;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v4)
  {
    v6 = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 48) = v4;
    *(_QWORD *)(a1 + 56) = v6;
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
LABEL_8:
  v7 = *(_QWORD *)(a2 + 64);
  if (*(_QWORD *)(a1 + 64))
  {
    if (v7)
    {
      v8 = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 64) = v7;
      *(_QWORD *)(a1 + 72) = v8;
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v7)
  {
    v9 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = v7;
    *(_QWORD *)(a1 + 72) = v9;
    goto LABEL_15;
  }
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
LABEL_15:
  v10 = *(_QWORD *)(a2 + 80);
  if (!*(_QWORD *)(a1 + 80))
  {
    if (v10)
    {
      v12 = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 80) = v10;
      *(_QWORD *)(a1 + 88) = v12;
      return a1;
    }
LABEL_21:
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    return a1;
  }
  if (!v10)
  {
    swift_release();
    goto LABEL_21;
  }
  v11 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = v10;
  *(_QWORD *)(a1 + 88) = v11;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for SystemSymbol(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 96))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SystemSymbol(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 96) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 96) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for SystemSymbol(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SystemSymbol);
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x1C3B74FFC](a1, v6, a5);
}

uint64_t sub_1BD06F1E0()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void *closure #1 in UIAction.init(title:imageSymbolName:target:selector:discoverabilityTitle:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *result;
  void *v6;
  id v7;

  v4 = a2 + 16;
  swift_beginAccess();
  result = (void *)MEMORY[0x1C3B752C0](v4);
  if (result)
  {
    v6 = result;
    if (objc_msgSend(result, sel_respondsToSelector_, a3))
    {
      objc_msgSend((id)swift_unknownObjectRetain(), sel_performSelector_, a3);
      v7 = v6;
    }
    return (void *)swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1BD06F28C()
{
  swift_release();
  return swift_deallocObject();
}

void *partial apply for closure #1 in UIAction.init(title:imageSymbolName:target:selector:discoverabilityTitle:)(uint64_t a1)
{
  uint64_t v1;

  return closure #1 in UIAction.init(title:imageSymbolName:target:selector:discoverabilityTitle:)(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

_QWORD *one-time initialization function for shared()
{
  _QWORD *result;

  type metadata accessor for TextLayoutEngine();
  swift_allocObject();
  result = TextLayoutEngine.().init()();
  static TextLayoutEngine.shared = (uint64_t)result;
  return result;
}

uint64_t *TextLayoutEngine.shared.unsafeMutableAddressor()
{
  if (one-time initialization token for shared != -1)
    swift_once();
  return &static TextLayoutEngine.shared;
}

uint64_t static TextLayoutEngine.shared.getter()
{
  if (one-time initialization token for shared != -1)
    swift_once();
  return swift_retain();
}

_QWORD *TextLayoutEngine.().init()()
{
  _QWORD *v0;
  id v1;
  id v2;
  id v3;

  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC12C0]), sel_init);
  v0[3] = v1;
  objc_msgSend(v1, sel_setLineFragmentPadding_, 0.0);
  objc_msgSend(v1, sel_setMaximumNumberOfLines_, 0);
  objc_msgSend(v1, sel_setLineBreakMode_, 0);
  objc_msgSend(v1, sel_setWidthTracksTextView_, 1);
  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC1280]), sel_init);
  v0[4] = v2;
  objc_msgSend(v2, sel_addTextContainer_, v1);
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC1320]), sel_init);
  v0[2] = v3;
  objc_msgSend(v3, sel_addLayoutManager_, v2);
  return v0;
}

void TextLayoutEngine.draw(text:font:color:lowConfidenceRanges:viewSize:)(uint64_t a1, void *a2)
{
  TextLayoutEngine.updateMembers(text:font:color:lowConfidenceRanges:viewSize:)(a1, a2);
}

id sub_1BD06F470()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 32), sel_drawGlyphsForGlyphRange_atPoint_, 0, String.count.getter(), 0.0, 0.0);
}

void TextLayoutEngine.updateMembers(text:font:color:lowConfidenceRanges:viewSize:)(uint64_t a1, void *a2)
{
  TextLayoutEngine.attributedTextWithUnderlines(text:font:color:lowConfidenceRanges:)(a1, a2);
}

void sub_1BD06F4C8(void *a1)
{
  uint64_t v1;
  double v2;
  double v3;
  void *v4;

  objc_msgSend(*(id *)(v1 + 16), sel_setAttributedString_, a1);
  v4 = *(void **)(v1 + 24);
  objc_msgSend(v4, sel_setSize_, v3, v2);
  objc_msgSend(*(id *)(v1 + 32), sel_ensureLayoutForTextContainer_, v4);

}

__C::CGRect __swiftcall TextLayoutEngine.frame(for:text:font:lowConfidenceRanges:viewSize:)(__C::_NSRange a1, Swift::String text, UIFont font, Swift::OpaquePointer lowConfidenceRanges, CGSize viewSize)
{
  TextLayoutEngine.updateMembers(text:font:color:lowConfidenceRanges:viewSize:)(text._countAndFlagsBits, text._object);
}

id sub_1BD06F558()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return objc_msgSend(*(id *)(v1 + 32), sel_boundingRectForGlyphRange_inTextContainer_, v2, v0, *(_QWORD *)(v1 + 24));
}

void TextLayoutEngine.attributedTextWithUnderlines(text:font:color:lowConfidenceRanges:)(uint64_t a1, void *a2)
{
  Swift::String v4;

  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSMutableAttributedString);
  swift_bridgeObjectRetain();
  v4._countAndFlagsBits = a1;
  v4._object = a2;
  NSMutableAttributedString.__allocating_init(string:)(v4);
}

id *TextLayoutEngine.deinit()
{
  id *v0;

  return v0;
}

uint64_t TextLayoutEngine.__deallocating_deinit()
{
  TextLayoutEngine.deinit();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TextLayoutEngine()
{
  return objc_opt_self();
}

uint64_t method lookup function for TextLayoutEngine()
{
  return swift_lookUpClassMethod();
}

unint64_t lazy protocol witness table accessor for type NSAttributedStringKey and conformance NSAttributedStringKey()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type NSAttributedStringKey and conformance NSAttributedStringKey;
  if (!lazy protocol witness table cache variable for type NSAttributedStringKey and conformance NSAttributedStringKey)
  {
    type metadata accessor for NSAttributedStringKey(255);
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for NSAttributedStringKey, v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type NSAttributedStringKey and conformance NSAttributedStringKey);
  }
  return result;
}

void outlined bridged method (mbnnn) of @objc NSMutableAttributedString.setAttributes(_:range:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  Class isa;

  type metadata accessor for NSAttributedStringKey(0);
  lazy protocol witness table accessor for type NSAttributedStringKey and conformance NSAttributedStringKey();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(a4, sel_setAttributes_range_, isa, a2, a3);

}

BOOL static PushToTalkViewModel.TalkButtonState.== infix(_:_:)(unsigned __int8 a1, unsigned __int8 a2)
{
  if (a1 == 2)
    return a2 == 2;
  if (a1 == 3)
    return a2 == 3;
  if ((a2 & 0xFE) == 2)
    return 0;
  return ((a2 ^ a1) & 1) == 0;
}

BOOL static PushToTalkViewModel.TransmitSource.== infix(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance PushToTalkViewModel.TalkButtonState(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static PushToTalkViewModel.TalkButtonState.== infix(_:_:)(*a1, *a2);
}

void PushToTalkViewModel.TransmitSource.hash(into:)(uint64_t a1, char a2)
{
  Hasher._combine(_:)(a2 & 1);
  OUTLINED_FUNCTION_0();
}

Swift::Int PushToTalkViewModel.TransmitSource.hashValue.getter(char a1)
{
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1 & 1);
  return Hasher._finalize()();
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance PushToTalkViewModel.TransmitSource(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static PushToTalkViewModel.TransmitSource.== infix(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance PushToTalkViewModel.TransmitSource()
{
  char *v0;

  return PushToTalkViewModel.TransmitSource.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance PushToTalkViewModel.TransmitSource(uint64_t a1)
{
  char *v1;

  PushToTalkViewModel.TransmitSource.hash(into:)(a1, *v1);
}

uint64_t key path getter for PushToTalkViewModel.pttTalkButtonState : PushToTalkViewModel@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 112))();
  *a2 = result;
  return result;
}

void key path setter for PushToTalkViewModel.pttTalkButtonState : PushToTalkViewModel()
{
  PushToTalkViewModel.pttTalkButtonState.setter();
}

uint64_t PushToTalkViewModel.pttTalkButtonState.getter()
{
  unsigned __int8 v1;

  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

void sub_1BD06FBBC(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  *a2 = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 112))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD06FBE8()
{
  PushToTalkViewModel.pttTalkButtonState.setter();
  OUTLINED_FUNCTION_0();
}

void PushToTalkViewModel.pttTalkButtonState.setter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.setter();
  OUTLINED_FUNCTION_43_1();
}

uint64_t key path setter for PushToTalkViewModel.$pttTalkButtonState : PushToTalkViewModel(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<PushToTalkViewModel.TalkButtonState>.Publisher);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v5 + 16))(v4, a1);
  return PushToTalkViewModel.$pttTalkButtonState.setter((uint64_t)v4);
}

void PushToTalkViewModel.$pttTalkButtonState.getter()
{
  OUTLINED_FUNCTION_2_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<PushToTalkViewModel.TalkButtonState>);
  Published.projectedValue.getter();
  swift_endAccess();
  OUTLINED_FUNCTION_43_1();
}

uint64_t PushToTalkViewModel.$pttTalkButtonState.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<PushToTalkViewModel.TalkButtonState>.Publisher);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_77();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v5 - v4, a1, v2);
  OUTLINED_FUNCTION_2_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<PushToTalkViewModel.TalkButtonState>);
  Published.projectedValue.setter();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

uint64_t key path setter for PushToTalkViewModel.conversationControlsManager : PushToTalkViewModel(id *a1, uint64_t a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))(**(_QWORD **)a2 + 168);
  v4 = *a1;
  return v3(v2);
}

uint64_t PushToTalkViewModel.conversationControlsManager.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit19PushToTalkViewModel_conversationControlsManager;
  OUTLINED_FUNCTION_2_0();
  return MEMORY[0x1C3B752C0](v1);
}

void PushToTalkViewModel.conversationControlsManager.setter(void *a1)
{
  OUTLINED_FUNCTION_2_0();
  swift_unknownObjectWeakAssign();

  OUTLINED_FUNCTION_43_1();
}

void (*PushToTalkViewModel.conversationControlsManager.modify(_QWORD *a1))(id **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC15ConversationKit19PushToTalkViewModel_conversationControlsManager;
  v3[4] = v1;
  v3[5] = v4;
  v5 = v1 + v4;
  OUTLINED_FUNCTION_2_0();
  v3[3] = MEMORY[0x1C3B752C0](v5);
  return TapInteraction.view.modify;
}

void PushToTalkViewModel.__allocating_init(conversationControlsManager:)(_QWORD *a1)
{
  swift_allocObject();
  PushToTalkViewModel.init(conversationControlsManager:)(a1);
  OUTLINED_FUNCTION_0();
}

uint64_t PushToTalkViewModel.init(conversationControlsManager:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v2 = v1;
  v43 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<TUCallTransmissionMode>.Publisher);
  v44 = *(_QWORD *)(v43 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_77();
  v6 = v5 - v4;
  v45 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.RemoveDuplicates<Published<TUCallTransmissionMode>.Publisher>)
                  - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_77();
  v10 = v9 - v8;
  v37 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<ConversationControlsManager.PushToTalkChannelState>.Publisher)
                  - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_77();
  v14 = v13 - v12;
  v40 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.RemoveDuplicates<Published<ConversationControlsManager.PushToTalkChannelState>.Publisher>);
  v41 = *(_QWORD *)(v40 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_77();
  v18 = v17 - v16;
  v46 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.CombineLatest<Publishers.RemoveDuplicates<Published<ConversationControlsManager.PushToTalkChannelState>.Publisher>, Publishers.RemoveDuplicates<Published<TUCallTransmissionMode>.Publisher>>);
  v47 = *(_QWORD *)(v46 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v19);
  OUTLINED_FUNCTION_41();
  v39 = v20;
  v48 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.CompactMap<Publishers.CombineLatest<Publishers.RemoveDuplicates<Published<ConversationControlsManager.PushToTalkChannelState>.Publisher>, Publishers.RemoveDuplicates<Published<TUCallTransmissionMode>.Publisher>>, PushToTalkViewModel.TalkButtonState>)
                  - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v21);
  OUTLINED_FUNCTION_41();
  v42 = v22;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<PushToTalkViewModel.TalkButtonState>);
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  OUTLINED_FUNCTION_77();
  v27 = v26 - v25;
  v28 = v2 + OBJC_IVAR____TtC15ConversationKit19PushToTalkViewModel__pttTalkButtonState;
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 32))(v28, v27, v23);
  swift_unknownObjectWeakInit();
  *(_BYTE *)(v2 + OBJC_IVAR____TtC15ConversationKit19PushToTalkViewModel_talkButtonIsBeingPressed) = 0;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC15ConversationKit19PushToTalkViewModel_cancellables) = MEMORY[0x1E0DEE9E8];
  OUTLINED_FUNCTION_2_0();
  v29 = swift_unknownObjectWeakAssign();
  v30 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x6B0))(v29);
  v31 = MEMORY[0x1E0C96190];
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type Published<ConversationControlsManager.PushToTalkChannelState>.Publisher and conformance Published<A>.Publisher, &demangling cache variable for type metadata for Published<ConversationControlsManager.PushToTalkChannelState>.Publisher, MEMORY[0x1E0C96190]);
  lazy protocol witness table accessor for type ConversationControlsManager.PushToTalkChannelState and conformance ConversationControlsManager.PushToTalkChannelState();
  Publisher<>.removeDuplicates()();
  v32 = OUTLINED_FUNCTION_6_9(v14, *(uint64_t (**)(uint64_t, uint64_t))(v37 + 8));
  (*(void (**)(uint64_t))((*v30 & *a1) + 0x6E0))(v32);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type Published<TUCallTransmissionMode>.Publisher and conformance Published<A>.Publisher, (uint64_t *)&demangling cache variable for type metadata for Published<TUCallTransmissionMode>.Publisher, v31);
  lazy protocol witness table accessor for type TUCallTransmissionMode and conformance TUCallTransmissionMode();
  Publisher<>.removeDuplicates()();
  (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v6, v43);
  v33 = MEMORY[0x1E0C958E0];
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type Publishers.RemoveDuplicates<Published<ConversationControlsManager.PushToTalkChannelState>.Publisher> and conformance Publishers.RemoveDuplicates<A>, &demangling cache variable for type metadata for Publishers.RemoveDuplicates<Published<ConversationControlsManager.PushToTalkChannelState>.Publisher>, MEMORY[0x1E0C958E0]);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type Publishers.RemoveDuplicates<Published<TUCallTransmissionMode>.Publisher> and conformance Publishers.RemoveDuplicates<A>, &demangling cache variable for type metadata for Publishers.RemoveDuplicates<Published<TUCallTransmissionMode>.Publisher>, v33);
  Publisher.combineLatest<A>(_:)();
  OUTLINED_FUNCTION_6_9(v10, *(uint64_t (**)(uint64_t, uint64_t))(v45 + 8));
  (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v18, v40);
  v34 = OUTLINED_FUNCTION_4_20();
  OUTLINED_FUNCTION_7_4();
  v35 = swift_allocObject();
  *(_QWORD *)(v35 + 16) = partial apply for closure #1 in PushToTalkViewModel.init(conversationControlsManager:);
  *(_QWORD *)(v35 + 24) = v34;
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type Publishers.CombineLatest<Publishers.RemoveDuplicates<Published<ConversationControlsManager.PushToTalkChannelState>.Publisher>, Publishers.RemoveDuplicates<Published<TUCallTransmissionMode>.Publisher>> and conformance Publishers.CombineLatest<A, B>, &demangling cache variable for type metadata for Publishers.CombineLatest<Publishers.RemoveDuplicates<Published<ConversationControlsManager.PushToTalkChannelState>.Publisher>, Publishers.RemoveDuplicates<Published<TUCallTransmissionMode>.Publisher>>, MEMORY[0x1E0C95698]);
  Publisher.compactMap<A>(_:)();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v39, v46);
  OUTLINED_FUNCTION_4_20();
  OUTLINED_FUNCTION_7_4();
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type Publishers.CompactMap<Publishers.CombineLatest<Publishers.RemoveDuplicates<Published<ConversationControlsManager.PushToTalkChannelState>.Publisher>, Publishers.RemoveDuplicates<Published<TUCallTransmissionMode>.Publisher>>, PushToTalkViewModel.TalkButtonState> and conformance Publishers.CompactMap<A, B>, &demangling cache variable for type metadata for Publishers.CompactMap<Publishers.CombineLatest<Publishers.RemoveDuplicates<Published<ConversationControlsManager.PushToTalkChannelState>.Publisher>, Publishers.RemoveDuplicates<Published<TUCallTransmissionMode>.Publisher>>, PushToTalkViewModel.TalkButtonState>, MEMORY[0x1E0C95708]);
  Publisher<>.sink(receiveValue:)();
  swift_release();
  OUTLINED_FUNCTION_6_9(v42, *(uint64_t (**)(uint64_t, uint64_t))(v48 + 8));
  OUTLINED_FUNCTION_2_0();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();

  return v2;
}

unint64_t lazy protocol witness table accessor for type ConversationControlsManager.PushToTalkChannelState and conformance ConversationControlsManager.PushToTalkChannelState()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ConversationControlsManager.PushToTalkChannelState and conformance ConversationControlsManager.PushToTalkChannelState;
  if (!lazy protocol witness table cache variable for type ConversationControlsManager.PushToTalkChannelState and conformance ConversationControlsManager.PushToTalkChannelState)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ConversationControlsManager.PushToTalkChannelState, &type metadata for ConversationControlsManager.PushToTalkChannelState);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ConversationControlsManager.PushToTalkChannelState and conformance ConversationControlsManager.PushToTalkChannelState);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type TUCallTransmissionMode and conformance TUCallTransmissionMode()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type TUCallTransmissionMode and conformance TUCallTransmissionMode;
  if (!lazy protocol witness table cache variable for type TUCallTransmissionMode and conformance TUCallTransmissionMode)
  {
    type metadata accessor for TUCallTransmissionMode(255);
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for TUCallTransmissionMode, v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type TUCallTransmissionMode and conformance TUCallTransmissionMode);
  }
  return result;
}

uint64_t sub_1BD0704D8()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t closure #1 in PushToTalkViewModel.init(conversationControlsManager:)(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v4;

  swift_beginAccess();
  if (!swift_weakLoadStrong())
    return 4;
  v4 = PushToTalkViewModel.state(channelState:transmissionMode:)(a1, a2);
  swift_release();
  return v4;
}

uint64_t partial apply for closure #1 in PushToTalkViewModel.init(conversationControlsManager:)(unsigned __int8 a1, uint64_t a2)
{
  return closure #1 in PushToTalkViewModel.init(conversationControlsManager:)(a1, a2);
}

uint64_t sub_1BD070584()
{
  swift_release();
  return swift_deallocObject();
}

void partial apply for thunk for @escaping @callee_guaranteed (@unowned ConversationControlsManager.PushToTalkChannelState, @unowned TUCallTransmissionMode) -> (@unowned PushToTalkViewModel.TalkButtonState?)(unsigned __int8 *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  *a2 = (*(uint64_t (**)(_QWORD, _QWORD))(v2 + 16))(*a1, *((_QWORD *)a1 + 1));
  OUTLINED_FUNCTION_0();
}

uint64_t closure #2 in PushToTalkViewModel.init(conversationControlsManager:)()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    PushToTalkViewModel.pttTalkButtonState.setter();
    return swift_release();
  }
  return result;
}

uint64_t partial apply for closure #2 in PushToTalkViewModel.init(conversationControlsManager:)()
{
  return closure #2 in PushToTalkViewModel.init(conversationControlsManager:)();
}

uint64_t PushToTalkViewModel.state(channelState:transmissionMode:)(unsigned __int8 a1, uint64_t a2)
{
  if (a2 == 2)
    return 3;
  else
    return ((uint64_t (*)(uint64_t))((char *)sub_1BD07066C + 4 * byte_1BD6453F0[a1]))(3);
}

BOOL sub_1BD07066C()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + OBJC_IVAR____TtC15ConversationKit19PushToTalkViewModel_talkButtonIsBeingPressed) & 1) == 0;
}

uint64_t sub_1BD070688()
{
  return 2;
}

uint64_t sub_1BD070690(uint64_t a1, uint64_t a2)
{
  if (a2)
    return 3;
  else
    return 2;
}

Swift::Void __swiftcall PushToTalkViewModel.talkButton(isActive:)(Swift::Bool isActive)
{
  uint64_t v1;

  *(_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit19PushToTalkViewModel_talkButtonIsBeingPressed) = isActive;
}

void PushToTalkViewModel.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit19PushToTalkViewModel__pttTalkButtonState;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<PushToTalkViewModel.TalkButtonState>);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_unknownObjectWeakDestroy();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_0();
}

uint64_t PushToTalkViewModel.__deallocating_deinit()
{
  PushToTalkViewModel.deinit();
  return swift_deallocClassInstance();
}

unint64_t lazy protocol witness table accessor for type PushToTalkViewModel.TransmitSource and conformance PushToTalkViewModel.TransmitSource()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PushToTalkViewModel.TransmitSource and conformance PushToTalkViewModel.TransmitSource;
  if (!lazy protocol witness table cache variable for type PushToTalkViewModel.TransmitSource and conformance PushToTalkViewModel.TransmitSource)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for PushToTalkViewModel.TransmitSource, &type metadata for PushToTalkViewModel.TransmitSource);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PushToTalkViewModel.TransmitSource and conformance PushToTalkViewModel.TransmitSource);
  }
  return result;
}

void sub_1BD070778(uint64_t a1)
{
  (*(void (**)(void))(**(_QWORD **)a1 + 136))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD0707A0(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 160))();
  OUTLINED_FUNCTION_0();
}

uint64_t ObjC metadata update function for PushToTalkViewModel()
{
  return type metadata accessor for PushToTalkViewModel();
}

uint64_t type metadata accessor for PushToTalkViewModel()
{
  uint64_t result;

  result = type metadata singleton initialization cache for PushToTalkViewModel;
  if (!type metadata singleton initialization cache for PushToTalkViewModel)
    return swift_getSingletonMetadata();
  return result;
}

void type metadata completion function for PushToTalkViewModel()
{
  unint64_t v0;

  type metadata accessor for Published<PushToTalkViewModel.TalkButtonState>();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for PushToTalkViewModel()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PushToTalkViewModel.pttTalkButtonState.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of PushToTalkViewModel.$pttTalkButtonState.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of PushToTalkViewModel.conversationControlsManager.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of PushToTalkViewModel.conversationControlsManager.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of PushToTalkViewModel.conversationControlsManager.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of PushToTalkViewModel.__allocating_init(conversationControlsManager:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 232))();
}

uint64_t dispatch thunk of PushToTalkViewModel.talkButton(isActive:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

void type metadata accessor for Published<PushToTalkViewModel.TalkButtonState>()
{
  unint64_t v0;
  uint64_t v1;

  if (!lazy cache variable for type metadata for Published<PushToTalkViewModel.TalkButtonState>)
  {
    v0 = type metadata accessor for Published();
    if (!v1)
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for Published<PushToTalkViewModel.TalkButtonState>);
  }
}

uint64_t getEnumTagSinglePayload for PushToTalkViewModel.TalkButtonState(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v6;
  unsigned int v7;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
  {
    v6 = *a1;
    if (v6 >= 2)
      v7 = v6 - 1;
    else
      v7 = 0;
    if (v7 >= 3)
      return v7 - 2;
    else
      return 0;
  }
  else
  {
    v2 = a2 + 3;
    if (a2 + 3 >= 0xFFFF00)
      v3 = 4;
    else
      v3 = 2;
    if (v2 >> 8 < 0xFF)
      v3 = 1;
    if (v2 >= 0x100)
      v4 = v3;
    else
      v4 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1BD070990 + 4 * byte_1BD6453F5[v4]))();
  }
}

uint64_t storeEnumTagSinglePayload for PushToTalkViewModel.TalkButtonState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 3;
  if (a3 + 3 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xFD)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BD070A3C + 4 * byte_1BD6453FF[v5]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BD070A70 + 4 * byte_1BD6453FA[v5]))();
}

uint64_t sub_1BD070A70(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD070A78(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD070A80);
  return result;
}

uint64_t sub_1BD070A8C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD070A94);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BD070A98(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD070AA0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t getEnumTag for PushToTalkViewModel.TalkButtonState(unsigned __int8 *a1)
{
  unsigned int v1;

  v1 = *a1;
  if (v1 >= 2)
    return v1 - 1;
  else
    return 0;
}

_BYTE *destructiveInjectEnumTag for PushToTalkViewModel.TalkButtonState(_BYTE *result, int a2)
{
  if (a2)
    *result = a2 + 1;
  return result;
}

ValueMetadata *type metadata accessor for PushToTalkViewModel.TalkButtonState()
{
  return &type metadata for PushToTalkViewModel.TalkButtonState;
}

uint64_t storeEnumTagSinglePayload for PushToTalkViewModel.TransmitSource(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BD070B2C + 4 * byte_1BD645409[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BD070B60 + 4 * byte_1BD645404[v4]))();
}

uint64_t sub_1BD070B60(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD070B68(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD070B70);
  return result;
}

uint64_t sub_1BD070B7C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD070B84);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BD070B88(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD070B90(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PushToTalkViewModel.TransmitSource()
{
  return &type metadata for PushToTalkViewModel.TransmitSource;
}

id PushToTalkFullScreenViewController.backgroundMaterialView.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;

  v1 = OBJC_IVAR____TtC15ConversationKit34PushToTalkFullScreenViewController____lazy_storage___backgroundMaterialView;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC15ConversationKit34PushToTalkFullScreenViewController____lazy_storage___backgroundMaterialView);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC15ConversationKit34PushToTalkFullScreenViewController____lazy_storage___backgroundMaterialView);
  }
  else
  {
    v4 = objc_msgSend((id)objc_opt_self(), sel_effectWithStyle_, 18);
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F58]), sel_initWithEffect_, v4);

    v6 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v5;
    v3 = v5;

    v2 = 0;
  }
  v7 = v2;
  return v3;
}

void PushToTalkFullScreenViewController.__allocating_init(conversationControlsManager:)()
{
  void *v0;

  OUTLINED_FUNCTION_16_1();
  PushToTalkFullScreenViewController.init(conversationControlsManager:)(v0);
}

void sub_1BD070C74()
{
  OUTLINED_FUNCTION_0();
}

void PushToTalkFullScreenViewController.init(conversationControlsManager:)(void *a1)
{
  char *v1;
  id v3;
  char *v4;

  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit34PushToTalkFullScreenViewController____lazy_storage___backgroundMaterialView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit34PushToTalkFullScreenViewController_cancellables] = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit34PushToTalkFullScreenViewController_conversationControlsManager] = a1;
  objc_allocWithZone((Class)type metadata accessor for PushToTalkView());
  v3 = a1;
  v4 = v1;
  PushToTalkView.init(conversationControlsManager:)((uint64_t)v3);
}

id sub_1BD070CF0(uint64_t a1)
{
  void *v1;
  char *v2;
  id v3;
  objc_super v5;

  *(_QWORD *)&v2[OBJC_IVAR____TtC15ConversationKit34PushToTalkFullScreenViewController_pttView] = a1;

  v5.receiver = v2;
  v5.super_class = (Class)type metadata accessor for PushToTalkFullScreenViewController();
  v3 = objc_msgSendSuper2(&v5, sel_initWithNibName_bundle_, 0, 0);

  return v3;
}

void PushToTalkFullScreenViewController.__allocating_init(coder:)()
{
  void *v0;

  objc_msgSend(OUTLINED_FUNCTION_16_1(), sel_initWithCoder_, v0);

  OUTLINED_FUNCTION_0();
}

void PushToTalkFullScreenViewController.init(coder:)()
{
  char *v0;

  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit34PushToTalkFullScreenViewController____lazy_storage___backgroundMaterialView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit34PushToTalkFullScreenViewController_cancellables] = MEMORY[0x1E0DEE9E8];

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

Swift::Void __swiftcall PushToTalkFullScreenViewController.viewDidLoad()()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  objc_class *v35;
  id v36;
  id v37;
  id v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD v68[7];
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  id v86;
  objc_super v87;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for OS_dispatch_queue.SchedulerOptions?);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_41();
  v83 = v2;
  v3 = type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride();
  v84 = *(_QWORD *)(v3 - 8);
  v85 = v3;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_41();
  v82 = v5;
  v6 = type metadata accessor for NSNotificationCenter.Publisher();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v68[2] = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.MergeMany<NSNotificationCenter.Publisher>)
                     - 8);
  OUTLINED_FUNCTION_10_1();
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_5_18();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_5_18();
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_5_18();
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_5_18();
  MEMORY[0x1E0C80A78](v18);
  OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_5_18();
  MEMORY[0x1E0C80A78](v19);
  v70 = (char *)v68 - v20;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.Map<Publishers.MergeMany<NSNotificationCenter.Publisher>, TUCall?>);
  v22 = *(_QWORD *)(v21 - 8);
  v75 = v21;
  v76 = v22;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v23);
  OUTLINED_FUNCTION_41();
  v72 = v24;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Just<TUCall?>);
  v26 = *(_QWORD *)(v25 - 8);
  v73 = v25;
  v74 = v26;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v27);
  v69 = (char *)v68 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.Merge<Just<TUCall?>, Publishers.Map<Publishers.MergeMany<NSNotificationCenter.Publisher>, TUCall?>>);
  v79 = *(_QWORD *)(v78 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v29);
  OUTLINED_FUNCTION_41();
  v71 = v30;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.Debounce<Publishers.Merge<Just<TUCall?>, Publishers.Map<Publishers.MergeMany<NSNotificationCenter.Publisher>, TUCall?>>, OS_dispatch_queue>);
  v32 = *(_QWORD *)(v31 - 8);
  v80 = v31;
  v81 = v32;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v33);
  OUTLINED_FUNCTION_41();
  v77 = v34;
  v35 = (objc_class *)type metadata accessor for PushToTalkFullScreenViewController();
  v87.receiver = v0;
  v87.super_class = v35;
  objc_msgSendSuper2(&v87, sel_viewDidLoad);
  v36 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v37 = objc_msgSend(v36, sel_frontmostBargeCall);

  v86 = v37;
  v68[5] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TUCall?);
  Just.init(_:)();
  v38 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  OUTLINED_FUNCTION_0_34();

  v40 = OUTLINED_FUNCTION_6_7(v39, sel_defaultCenter);
  NSNotificationCenter.publisher(for:object:)();

  lazy protocol witness table accessor for type NSNotificationCenter.Publisher and conformance NSNotificationCenter.Publisher();
  Publisher.merge(with:)();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  v41 = OUTLINED_FUNCTION_1_22();
  v42 = OUTLINED_FUNCTION_6_7(v41, sel_defaultCenter);
  OUTLINED_FUNCTION_0_34();

  v43 = v68[1];
  OUTLINED_FUNCTION_10_30();
  OUTLINED_FUNCTION_1_22();
  v44 = OUTLINED_FUNCTION_9_21((uint64_t)v14);
  v45 = OUTLINED_FUNCTION_6_7(v44, sel_defaultCenter);
  OUTLINED_FUNCTION_0_34();

  v46 = v68[3];
  Publishers.MergeMany.merge(with:)();
  OUTLINED_FUNCTION_1_22();
  v47 = OUTLINED_FUNCTION_9_21(v43);
  v48 = OUTLINED_FUNCTION_6_7(v47, (const char *)&selRef_labelColor + 7);
  OUTLINED_FUNCTION_0_34();

  OUTLINED_FUNCTION_11_21();
  OUTLINED_FUNCTION_1_22();
  v49 = OUTLINED_FUNCTION_9_21(v46);
  v50 = OUTLINED_FUNCTION_6_7(v49, (const char *)&selRef_labelColor + 7);
  OUTLINED_FUNCTION_0_34();

  v51 = v68[6];
  OUTLINED_FUNCTION_10_30();
  OUTLINED_FUNCTION_1_22();
  v52 = OUTLINED_FUNCTION_9_21((uint64_t)&selRef_associatedAppBundleIdentifier);
  v53 = OUTLINED_FUNCTION_6_7(v52, (const char *)&selRef_labelColor + 7);
  OUTLINED_FUNCTION_0_34();

  OUTLINED_FUNCTION_11_21();
  OUTLINED_FUNCTION_1_22();
  v54 = OUTLINED_FUNCTION_9_21(v51);
  v55 = OUTLINED_FUNCTION_6_7(v54, (const char *)&selRef_labelColor + 7);
  OUTLINED_FUNCTION_0_34();

  v56 = (uint64_t)v70;
  OUTLINED_FUNCTION_10_30();
  OUTLINED_FUNCTION_1_22();
  OUTLINED_FUNCTION_9_21((uint64_t)&selRef_associatedAppBundleIdentifier);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type Publishers.MergeMany<NSNotificationCenter.Publisher> and conformance Publishers.MergeMany<A>, &demangling cache variable for type metadata for Publishers.MergeMany<NSNotificationCenter.Publisher>, MEMORY[0x1E0C95C80]);
  v57 = v72;
  Publisher.map<A>(_:)();
  OUTLINED_FUNCTION_9_21(v56);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type Just<TUCall?> and conformance Just<A>, &demangling cache variable for type metadata for Just<TUCall?>, MEMORY[0x1E0C960B0]);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type Publishers.Map<Publishers.MergeMany<NSNotificationCenter.Publisher>, TUCall?> and conformance Publishers.Map<A, B>, &demangling cache variable for type metadata for Publishers.Map<Publishers.MergeMany<NSNotificationCenter.Publisher>, TUCall?>, MEMORY[0x1E0C95950]);
  v58 = v71;
  v59 = v73;
  v60 = v75;
  v61 = v69;
  Publisher.merge<A>(with:)();
  (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v57, v60);
  (*(void (**)(char *, uint64_t))(v74 + 8))(v61, v59);
  v62 = v82;
  static OS_dispatch_queue.SchedulerTimeType.Stride.milliseconds(_:)();
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v86 = (id)static OS_dispatch_queue.main.getter();
  v63 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  v64 = v83;
  __swift_storeEnumTagSinglePayload(v83, 1, 1, v63);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type Publishers.Merge<Just<TUCall?>, Publishers.Map<Publishers.MergeMany<NSNotificationCenter.Publisher>, TUCall?>> and conformance Publishers.Merge<A, B>, &demangling cache variable for type metadata for Publishers.Merge<Just<TUCall?>, Publishers.Map<Publishers.MergeMany<NSNotificationCenter.Publisher>, TUCall?>>, MEMORY[0x1E0C95A60]);
  lazy protocol witness table accessor for type OS_dispatch_queue and conformance OS_dispatch_queue();
  v65 = v77;
  v66 = v78;
  Publisher.debounce<A>(for:scheduler:options:)();
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v64, (uint64_t *)&demangling cache variable for type metadata for OS_dispatch_queue.SchedulerOptions?);

  (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v62, v85);
  (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v58, v66);
  OUTLINED_FUNCTION_15();
  swift_unknownObjectWeakInit();
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type Publishers.Debounce<Publishers.Merge<Just<TUCall?>, Publishers.Map<Publishers.MergeMany<NSNotificationCenter.Publisher>, TUCall?>>, OS_dispatch_queue> and conformance Publishers.Debounce<A, B>, &demangling cache variable for type metadata for Publishers.Debounce<Publishers.Merge<Just<TUCall?>, Publishers.Map<Publishers.MergeMany<NSNotificationCenter.Publisher>, TUCall?>>, OS_dispatch_queue>, MEMORY[0x1E0C95BB0]);
  v67 = v80;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v65, v67);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  PushToTalkFullScreenViewController.setupMaterialView()();
  PushToTalkFullScreenViewController.setupPTTView()();
}

void closure #1 in PushToTalkFullScreenViewController.viewDidLoad()(_QWORD *a1@<X8>)
{
  _QWORD v2[4];

  Notification.object.getter();
  if (!v2[3])
  {
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v2, &demangling cache variable for type metadata for Any?);
    goto LABEL_5;
  }
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUCall);
  if ((swift_dynamicCast() & 1) == 0)
LABEL_5:
    *a1 = 0;
}

void closure #2 in PushToTalkFullScreenViewController.viewDidLoad()(void **a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  _QWORD *v7;
  void (*v8)(char *);
  char *v9;

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1C3B752C0](v3);
  if (v4)
  {
    v5 = (char *)v4;
    if (v2)
    {
      v6 = v2;
      if (objc_msgSend(v6, sel_isPTT))
      {
        v7 = *(_QWORD **)&v5[OBJC_IVAR____TtC15ConversationKit34PushToTalkFullScreenViewController_pttView];
        v8 = *(void (**)(char *))((*MEMORY[0x1E0DEEDD8] & *v7) + 0x128);
        v9 = v7;
        v8(v6);

        v5 = v6;
        v6 = v9;
      }

      v5 = v6;
    }

  }
}

void PushToTalkFullScreenViewController.setupMaterialView()()
{
  id v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  uint64_t v33;
  id v34;

  v0 = OUTLINED_FUNCTION_3_28();
  if (!v0)
  {
    __break(1u);
    goto LABEL_8;
  }
  v1 = v0;
  v2 = PushToTalkFullScreenViewController.backgroundMaterialView.getter();
  objc_msgSend(v1, sel_addSubview_, v2);

  v3 = PushToTalkFullScreenViewController.backgroundMaterialView.getter();
  objc_msgSend(v3, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v4 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v4 + 16) = xmmword_1BD644140;
  v5 = objc_msgSend(PushToTalkFullScreenViewController.backgroundMaterialView.getter(), sel_topAnchor);
  OUTLINED_FUNCTION_14_6();
  v6 = OUTLINED_FUNCTION_3_28();
  if (!v6)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v7 = v6;
  v8 = objc_msgSend(v6, sel_topAnchor);
  OUTLINED_FUNCTION_18_11();
  v9 = OUTLINED_FUNCTION_7_35();
  OUTLINED_FUNCTION_19_5();

  *(_QWORD *)(v4 + 32) = v7;
  v10 = objc_msgSend(PushToTalkFullScreenViewController.backgroundMaterialView.getter(), sel_leadingAnchor);
  OUTLINED_FUNCTION_14_6();
  v11 = OUTLINED_FUNCTION_3_28();
  if (!v11)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v12 = v11;
  v13 = objc_msgSend(v11, sel_leadingAnchor);
  OUTLINED_FUNCTION_18_11();
  v14 = OUTLINED_FUNCTION_7_35();
  OUTLINED_FUNCTION_19_5();

  *(_QWORD *)(v4 + 40) = v12;
  v15 = objc_msgSend(PushToTalkFullScreenViewController.backgroundMaterialView.getter(), sel_trailingAnchor);
  OUTLINED_FUNCTION_14_6();
  v16 = OUTLINED_FUNCTION_3_28();
  if (!v16)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v17 = v16;
  v18 = objc_msgSend(v16, sel_trailingAnchor);
  OUTLINED_FUNCTION_18_11();
  v19 = OUTLINED_FUNCTION_7_35();
  OUTLINED_FUNCTION_19_5();

  *(_QWORD *)(v4 + 48) = v17;
  v20 = objc_msgSend(PushToTalkFullScreenViewController.backgroundMaterialView.getter(), sel_bottomAnchor);
  OUTLINED_FUNCTION_14_6();
  v21 = OUTLINED_FUNCTION_3_28();
  if (v21)
  {
    v22 = v21;
    v23 = objc_msgSend(v21, sel_bottomAnchor);

    v24 = OUTLINED_FUNCTION_19_20();
    OUTLINED_FUNCTION_15_18();
    v25 = objc_opt_self();
    OUTLINED_FUNCTION_24_6(v25, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
    OUTLINED_FUNCTION_26_9();
    v26 = OUTLINED_FUNCTION_28_10();
    OUTLINED_FUNCTION_25_13(v26, sel_activateConstraints_, v27, v28, v29, v30, v31, v32, v33);
    OUTLINED_FUNCTION_4_21(v34);
    return;
  }
LABEL_11:
  __break(1u);
}

void PushToTalkFullScreenViewController.setupPTTView()()
{
  uint64_t v0;
  id v1;
  id v2;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  uint64_t v32;
  id v33;

  v1 = PushToTalkFullScreenViewController.backgroundMaterialView.getter();
  v2 = objc_msgSend(v1, sel_contentView);

  v3 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit34PushToTalkFullScreenViewController_pttView);
  objc_msgSend(v2, sel_addSubview_, v3);

  objc_msgSend(v3, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v4 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v4 + 16) = xmmword_1BD644140;
  v5 = OUTLINED_FUNCTION_9(v4, sel_topAnchor);
  v6 = OUTLINED_FUNCTION_20_20();
  v7 = objc_msgSend(v6, sel_topAnchor);
  OUTLINED_FUNCTION_14();
  v8 = OUTLINED_FUNCTION_8_29();
  OUTLINED_FUNCTION_18_11();

  *(_QWORD *)(v4 + 32) = v6;
  v10 = OUTLINED_FUNCTION_9(v9, sel_leadingAnchor);
  v11 = OUTLINED_FUNCTION_20_20();
  v12 = objc_msgSend(v11, sel_leadingAnchor);
  OUTLINED_FUNCTION_14();
  v13 = OUTLINED_FUNCTION_8_29();
  OUTLINED_FUNCTION_18_11();

  *(_QWORD *)(v4 + 40) = v11;
  v15 = OUTLINED_FUNCTION_9(v14, sel_trailingAnchor);
  v16 = OUTLINED_FUNCTION_20_20();
  v17 = objc_msgSend(v16, sel_trailingAnchor);
  OUTLINED_FUNCTION_14();
  v18 = OUTLINED_FUNCTION_8_29();
  OUTLINED_FUNCTION_18_11();

  *(_QWORD *)(v4 + 48) = v16;
  v20 = OUTLINED_FUNCTION_9(v19, sel_bottomAnchor);
  v21 = PushToTalkFullScreenViewController.backgroundMaterialView.getter();
  v22 = objc_msgSend(v21, sel_bottomAnchor);

  v23 = OUTLINED_FUNCTION_19_20();
  OUTLINED_FUNCTION_15_18();
  v24 = objc_opt_self();
  OUTLINED_FUNCTION_24_6(v24, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
  OUTLINED_FUNCTION_26_9();
  v25 = OUTLINED_FUNCTION_28_10();
  OUTLINED_FUNCTION_25_13(v25, sel_activateConstraints_, v26, v27, v28, v29, v30, v31, v32);
  OUTLINED_FUNCTION_4_21(v33);
}

id PushToTalkFullScreenViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;
  id v7;

  v4 = v3;
  if (a2)
  {
    v6 = (void *)MEMORY[0x1C3B72E00]();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void PushToTalkFullScreenViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id PushToTalkFullScreenViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PushToTalkFullScreenViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for PushToTalkFullScreenViewController()
{
  return objc_opt_self();
}

unint64_t lazy protocol witness table accessor for type NSNotificationCenter.Publisher and conformance NSNotificationCenter.Publisher()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type NSNotificationCenter.Publisher and conformance NSNotificationCenter.Publisher;
  if (!lazy protocol witness table cache variable for type NSNotificationCenter.Publisher and conformance NSNotificationCenter.Publisher)
  {
    v1 = type metadata accessor for NSNotificationCenter.Publisher();
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CB1F20], v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type NSNotificationCenter.Publisher and conformance NSNotificationCenter.Publisher);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type OS_dispatch_queue and conformance OS_dispatch_queue()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type OS_dispatch_queue and conformance OS_dispatch_queue;
  if (!lazy protocol witness table cache variable for type OS_dispatch_queue and conformance OS_dispatch_queue)
  {
    v1 = _sSo8NSObjectCMaTm_0(255, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0DEF7F8], v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type OS_dispatch_queue and conformance OS_dispatch_queue);
  }
  return result;
}

uint64_t sub_1BD071E00()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void partial apply for closure #2 in PushToTalkFullScreenViewController.viewDidLoad()(void **a1)
{
  uint64_t v1;

  closure #2 in PushToTalkFullScreenViewController.viewDidLoad()(a1, v1);
}

uint64_t method lookup function for PushToTalkFullScreenViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PushToTalkFullScreenViewController.__allocating_init(conversationControlsManager:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 160))();
}

BOOL static CATransform3D.== infix(_:_:)(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  CATransform3D v11;
  CATransform3D a;

  v2 = a1[1];
  *(_OWORD *)&a.m11 = *a1;
  *(_OWORD *)&a.m13 = v2;
  v3 = a1[3];
  *(_OWORD *)&a.m21 = a1[2];
  *(_OWORD *)&a.m23 = v3;
  v4 = a1[5];
  *(_OWORD *)&a.m31 = a1[4];
  *(_OWORD *)&a.m33 = v4;
  v5 = a1[7];
  *(_OWORD *)&a.m41 = a1[6];
  *(_OWORD *)&a.m43 = v5;
  v6 = a2[1];
  *(_OWORD *)&v11.m11 = *a2;
  *(_OWORD *)&v11.m13 = v6;
  v7 = a2[3];
  *(_OWORD *)&v11.m21 = a2[2];
  *(_OWORD *)&v11.m23 = v7;
  v8 = a2[5];
  *(_OWORD *)&v11.m31 = a2[4];
  *(_OWORD *)&v11.m33 = v8;
  v9 = a2[7];
  *(_OWORD *)&v11.m41 = a2[6];
  *(_OWORD *)&v11.m43 = v9;
  return CATransform3DEqualToTransform(&a, &v11);
}

void CATransform3D.hash(into:)()
{
  Swift::UInt64 *v0;

  OUTLINED_FUNCTION_0_19(*v0);
  OUTLINED_FUNCTION_0_19(v0[1]);
  OUTLINED_FUNCTION_0_19(v0[2]);
  OUTLINED_FUNCTION_0_19(v0[3]);
  OUTLINED_FUNCTION_0_19(v0[4]);
  OUTLINED_FUNCTION_0_19(v0[5]);
  OUTLINED_FUNCTION_0_19(v0[6]);
  OUTLINED_FUNCTION_0_19(v0[7]);
  OUTLINED_FUNCTION_0_19(v0[8]);
  OUTLINED_FUNCTION_0_19(v0[9]);
  OUTLINED_FUNCTION_0_19(v0[10]);
  OUTLINED_FUNCTION_0_19(v0[11]);
  OUTLINED_FUNCTION_0_19(v0[12]);
  OUTLINED_FUNCTION_0_19(v0[13]);
  OUTLINED_FUNCTION_0_19(v0[14]);
  OUTLINED_FUNCTION_0_19(v0[15]);
}

Swift::Int CATransform3D.hashValue.getter()
{
  Hasher.init(_seed:)();
  CATransform3D.hash(into:)();
  return Hasher._finalize()();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance CATransform3D()
{
  Hasher.init(_seed:)();
  CATransform3D.hash(into:)();
  return Hasher._finalize()();
}

unint64_t lazy protocol witness table accessor for type CATransform3D and conformance CATransform3D()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type CATransform3D and conformance CATransform3D;
  if (!lazy protocol witness table cache variable for type CATransform3D and conformance CATransform3D)
  {
    type metadata accessor for CATransform3D(255);
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for CATransform3D, v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type CATransform3D and conformance CATransform3D);
  }
  return result;
}

NSValue __swiftcall NSValue.init(point:)(CGPoint point)
{
  return (NSValue)NSValue.init(point:)((SEL *)&selRef_valueWithCGPoint_, point.x, point.y);
}

NSValue __swiftcall NSValue.init(size:)(CGSize size)
{
  return (NSValue)NSValue.init(point:)((SEL *)&selRef_valueWithCGSize_, size.width, size.height);
}

id NSValue.init(point:)(SEL *a1, double a2, double a3)
{
  return objc_msgSend((id)swift_getObjCClassFromMetadata(), *a1, a2, a3);
}

id NSValue.sizeValue.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_CGSizeValue);
}

uint64_t specialized _ArrayProtocol.filter(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  _QWORD v14[4];
  char *v16;
  uint64_t v17;

  v2 = type metadata accessor for Participant.State(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Participant(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v16 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v14 - v9;
  v11 = MEMORY[0x1E0DEE9D8];
  v17 = MEMORY[0x1E0DEE9D8];
  if (*(_QWORD *)(a1 + 16))
  {
    v14[3] = v2;
    if (*(_QWORD *)(a1 + 16))
    {
      outlined init with copy of Participant(a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)), (uint64_t)v14 - v9, type metadata accessor for Participant);
      outlined init with copy of Participant((uint64_t)v10, (uint64_t)v4, type metadata accessor for Participant.State);
      v12 = (char *)&loc_1BD0721BC + dword_1BD0722FC[swift_getEnumCaseMultiPayload()];
      __asm { BR              X9 }
    }
    __break(1u);
    JUMPOUT(0x1BD0722FCLL);
  }
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t CaptionsViewController.captioningStateManager.getter()
{
  OUTLINED_FUNCTION_1_7();
  return swift_retain();
}

void CaptionsViewController.captioningStateManager.setter(uint64_t a1)
{
  _QWORD *v1;

  OUTLINED_FUNCTION_0_8();
  *v1 = a1;
  swift_release();
  OUTLINED_FUNCTION_43_1();
}

void CaptionsViewController.captioningStateManager.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t CaptionsViewController.allowsScreenshots.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + direct field offset for CaptionsViewController.allowsScreenshots);
}

uint64_t key path getter for CaptionsViewController.delegate : CaptionsViewController@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *a1 + direct field offset for CaptionsViewController.delegate;
  swift_beginAccess();
  result = MEMORY[0x1C3B752C0](v3);
  v5 = *(_QWORD *)(v3 + 8);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t key path setter for CaptionsViewController.delegate : CaptionsViewController(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *a2 + direct field offset for CaptionsViewController.delegate;
  swift_beginAccess();
  *(_QWORD *)(v3 + 8) = v2;
  return swift_unknownObjectWeakAssign();
}

void CaptionsViewController.delegate.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_1_7();
  MEMORY[0x1C3B752C0](v0);
  OUTLINED_FUNCTION_32();
}

void CaptionsViewController.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  OUTLINED_FUNCTION_0_8();
  *(_QWORD *)(v2 + 8) = a2;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_9_0();
}

void CaptionsViewController.delegate.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = direct field offset for CaptionsViewController.delegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  OUTLINED_FUNCTION_2_0();
  v6 = MEMORY[0x1C3B752C0](v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  OUTLINED_FUNCTION_18();
}

uint64_t key path getter for CaptionsViewController.captionVisibilityDuringCapture : CaptionsViewController@<X0>(_QWORD *a1@<X0>, uint64_t (**a2)(double *a1, unsigned __int8 *a2)@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(double *, unsigned __int8 *);

  v3 = (uint64_t *)(*a1 + direct field offset for CaptionsViewController.captionVisibilityDuringCapture);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = partial apply for thunk for @escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ();
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)(double *, unsigned __int8 *))v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t thunk for @escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ()(double *a1, unsigned __int8 *a2, uint64_t (*a3)(_QWORD, double, double, double, double))
{
  return a3(*a2, *a1, a1[1], a1[2], a1[3]);
}

uint64_t key path setter for CaptionsViewController.captionVisibilityDuringCapture : CaptionsViewController(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(char, double, double, double, double);
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed CGRect, @in_guaranteed Bool) -> (@out ());
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + direct field offset for CaptionsViewController.captionVisibilityDuringCapture);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

void CaptionsViewController.captionVisibilityDuringCapture.getter()
{
  uint64_t *v0;

  OUTLINED_FUNCTION_1_7();
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(*v0);
  OUTLINED_FUNCTION_32();
}

void CaptionsViewController.captionVisibilityDuringCapture.setter(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;

  OUTLINED_FUNCTION_0_8();
  v5 = *v2;
  *v2 = a1;
  v2[1] = a2;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v5);
  OUTLINED_FUNCTION_9_0();
}

void CaptionsViewController.captionVisibilityDuringCapture.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void CaptionsViewController.speechModelDownloadPromptBlocked.getter()
{
  OUTLINED_FUNCTION_1_7();
  OUTLINED_FUNCTION_32();
}

void CaptionsViewController.speechModelDownloadPromptBlocked.setter(char a1)
{
  _BYTE *v1;

  OUTLINED_FUNCTION_0_8();
  *v1 = a1;
  OUTLINED_FUNCTION_43_1();
}

void CaptionsViewController.speechModelDownloadPromptBlocked.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void CaptionsViewController.isBroadcastingScreenSharingActive.getter()
{
  OUTLINED_FUNCTION_1_7();
  OUTLINED_FUNCTION_32();
}

void CaptionsViewController.isBroadcastingScreenSharingActive.setter(char a1)
{
  _BYTE *v1;

  OUTLINED_FUNCTION_0_8();
  *v1 = a1;
  OUTLINED_FUNCTION_43_1();
}

void CaptionsViewController.isBroadcastingScreenSharingActive.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

Swift::Void __swiftcall CaptionsViewController.minimize(_:)(Swift::Bool a1)
{
  CaptionsViewController.minimize(_:)(a1, (void (*)(uint64_t))CaptionsStateSource.isMinimized.setter);
}

uint64_t CaptionsViewController.allowsMinimization.getter()
{
  return CaptionsViewController.allowsMinimization.getter((uint64_t (*)(void))CaptionsStateSource.allowsMinimization.getter);
}

uint64_t CaptionsViewController.allowsMinimization.setter(uint64_t a1)
{
  return CaptionsViewController.minimize(_:)(a1, (void (*)(uint64_t))CaptionsStateSource.allowsMinimization.setter);
}

void CaptionsViewController.allowsMinimization.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = CaptionsViewController.allowsMinimization.getter() & 1;
  OUTLINED_FUNCTION_0();
}

{
  CaptionsViewController.allowsMinimization.setter(*(unsigned __int8 *)(a1 + 8));
  OUTLINED_FUNCTION_0();
}

uint64_t CaptionsViewController.isGroupCall.getter()
{
  return CaptionsViewController.allowsMinimization.getter((uint64_t (*)(void))CaptionsStateSource.isGroupCall.getter);
}

uint64_t CaptionsViewController.allowsMinimization.getter(uint64_t (*a1)(void))
{
  OUTLINED_FUNCTION_25_14();
  CaptionsViewModel.source.getter();
  LOBYTE(a1) = a1();
  swift_release();
  OUTLINED_FUNCTION_43();
  return a1 & 1;
}

uint64_t CaptionsViewController.isGroupCall.setter(uint64_t a1)
{
  return CaptionsViewController.minimize(_:)(a1, (void (*)(uint64_t))CaptionsStateSource.isGroupCall.setter);
}

uint64_t CaptionsViewController.minimize(_:)(uint64_t a1, void (*a2)(uint64_t))
{
  OUTLINED_FUNCTION_8_30();
  OUTLINED_FUNCTION_17_9();
  a2(a1);
  OUTLINED_FUNCTION_22();
  return OUTLINED_FUNCTION_2_19();
}

void CaptionsViewController.isGroupCall.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = CaptionsViewController.isGroupCall.getter() & 1;
  OUTLINED_FUNCTION_0();
}

{
  CaptionsViewController.isGroupCall.setter(*(unsigned __int8 *)(a1 + 8));
  OUTLINED_FUNCTION_0();
}

void CaptionsViewController.callName.getter()
{
  OUTLINED_FUNCTION_7_36();
  OUTLINED_FUNCTION_15_19();
  CaptionsStateSource.callName.getter();
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_18();
}

uint64_t key path setter for CaptionsViewController.callName : CaptionsViewController()
{
  swift_bridgeObjectRetain();
  return CaptionsViewController.callName.setter();
}

uint64_t CaptionsViewController.callName.setter()
{
  OUTLINED_FUNCTION_8_30();
  OUTLINED_FUNCTION_17_9();
  CaptionsStateSource.callName.setter();
  OUTLINED_FUNCTION_22();
  return OUTLINED_FUNCTION_2_19();
}

void CaptionsViewController.callName.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  a1[2] = v1;
  CaptionsViewController.callName.getter();
  *a1 = v3;
  a1[1] = v4;
  OUTLINED_FUNCTION_0();
}

uint64_t CaptionsViewController.callName.modify(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0)
    return OUTLINED_FUNCTION_24_7();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_24_7();
  return swift_bridgeObjectRelease();
}

uint64_t CaptionsViewController.groupImage.getter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_7_36();
  OUTLINED_FUNCTION_15_19();
  CaptionsStateSource.groupImage.getter();
  v1 = v0;
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_43();
  return v1;
}

uint64_t key path setter for CaptionsViewController.groupImage : CaptionsViewController(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  return CaptionsViewController.groupImage.setter(v1);
}

uint64_t CaptionsViewController.groupImage.setter(void *a1)
{
  OUTLINED_FUNCTION_25_14();
  CaptionsViewModel.source.getter();
  CaptionsStateSource.groupImage.setter(a1);
  swift_release();
  return OUTLINED_FUNCTION_2_19();
}

void CaptionsViewController.groupImage.modify(uint64_t *a1)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = CaptionsViewController.groupImage.getter();
  OUTLINED_FUNCTION_0();
}

void CaptionsViewController.groupImage.modify(void **a1, char a2)
{
  void *v2;
  id v3;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    v3 = v2;
    CaptionsViewController.groupImage.setter(v2);

  }
  else
  {
    CaptionsViewController.groupImage.setter(*a1);
  }
}

uint64_t CaptionsViewController.languageModelDownloadingProgress.getter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_7_36();
  OUTLINED_FUNCTION_15_19();
  CaptionsStateSource.languageModelDownloadingProgress.getter();
  v1 = v0;
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_43();
  return v1;
}

uint64_t key path getter for CaptionsViewController.languageModelDownloadingProgress : CaptionsViewController@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;

  result = CaptionsViewController.languageModelDownloadingProgress.getter();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t key path setter for CaptionsViewController.languageModelDownloadingProgress : CaptionsViewController(uint64_t a1)
{
  return CaptionsViewController.languageModelDownloadingProgress.setter(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t CaptionsViewController.languageModelDownloadingProgress.setter(uint64_t a1, char a2)
{
  char v3;

  v3 = a2 & 1;
  OUTLINED_FUNCTION_8_30();
  OUTLINED_FUNCTION_17_9();
  CaptionsStateSource.languageModelDownloadingProgress.setter(a1, v3);
  OUTLINED_FUNCTION_22();
  return OUTLINED_FUNCTION_2_19();
}

void CaptionsViewController.languageModelDownloadingProgress.modify(uint64_t a1)
{
  uint64_t v1;
  char v3;

  *(_QWORD *)(a1 + 16) = v1;
  *(_QWORD *)a1 = CaptionsViewController.languageModelDownloadingProgress.getter();
  *(_BYTE *)(a1 + 8) = v3 & 1;
  OUTLINED_FUNCTION_0();
}

{
  CaptionsViewController.languageModelDownloadingProgress.setter(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  OUTLINED_FUNCTION_0();
}

uint64_t CaptionsViewController.updateCaptions(for:)(uint64_t a1)
{
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  CaptionsViewModel.updateCaptions(for:)(a1);
  return swift_release();
}

id CaptionsViewController.__allocating_init(participants:callName:groupImage:isGroupCall:allowsMinimization:layoutIdiom:defaults:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, char a5, char a6, unsigned __int8 *a7, uint64_t a8, uint64_t a9)
{
  objc_class *v9;
  id v18;

  v18 = objc_allocWithZone(v9);
  return CaptionsViewController.init(participants:callName:groupImage:isGroupCall:allowsMinimization:layoutIdiom:defaults:)(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

id CaptionsViewController.init(participants:callName:groupImage:isGroupCall:allowsMinimization:layoutIdiom:defaults:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, char a5, char a6, unsigned __int8 *a7, uint64_t a8, uint64_t a9)
{
  _BYTE *v9;
  uint64_t v14;
  unsigned __int8 v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t ObjectType;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  id v29;
  id v35;
  unsigned __int8 v36;

  v14 = type metadata accessor for UIHostingControllerSizingOptions();
  MEMORY[0x1E0C80A78](v14);
  v15 = *a7;
  *(_QWORD *)&v9[direct field offset for CaptionsViewController.screenSharingStateMonitor] = 0;
  *(_QWORD *)&v9[direct field offset for CaptionsViewController.captioningStateManager] = 0;
  OUTLINED_FUNCTION_18_1(direct field offset for CaptionsViewController.delegate);
  v16 = &v9[direct field offset for CaptionsViewController.captionVisibilityDuringCapture];
  *v16 = 0;
  v16[1] = 0;
  v9[direct field offset for CaptionsViewController.speechModelDownloadPromptBlocked] = 0;
  v9[direct field offset for CaptionsViewController.isBroadcastingScreenSharingActive] = 0;
  v17 = direct field offset for CaptionsViewController.logger;
  v18 = one-time initialization token for conversationKit;
  v19 = v9;
  if (v18 != -1)
    swift_once();
  v20 = &v19[v17];
  v21 = OUTLINED_FUNCTION_17_2();
  v22 = __swift_project_value_buffer(v21, (uint64_t)&static Logger.conversationKit);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v20, v22, v21);
  ObjectType = swift_getObjectType();
  v19[direct field offset for CaptionsViewController.allowsScreenshots] = (*(uint64_t (**)(uint64_t, uint64_t))(a9 + 512))(ObjectType, a9) & 1;
  v36 = v15;
  v35 = a4;
  swift_unknownObjectRetain();
  LOBYTE(v21) = static Platform.current.getter() == 2;
  type metadata accessor for CaptionsViewModel(0);
  swift_allocObject();
  *(_QWORD *)&v19[direct field offset for CaptionsViewController.viewModel] = CaptionsViewModel.init(participants:callName:groupImage:isGroupCall:allowsMinimization:layoutIdiom:defaults:allowsSuppression:)(a1, a2, a3, a4, a5 & 1, a6 & 1, &v36, a8, a9, v21);

  swift_retain();
  v24 = (void *)UIHostingController.init(rootView:)();
  v25 = OUTLINED_FUNCTION_21_8();
  swift_unknownObjectWeakInit();
  v26 = swift_allocObject();
  *(_BYTE *)(v26 + 16) = a6 & 1;
  *(_QWORD *)(v26 + 24) = v25;
  v27 = v24;
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  swift_retain();
  CaptionsViewModel.onRequestMinimizeHandler.setter((uint64_t)partial apply for closure #1 in CaptionsViewController.init(participants:callName:groupImage:isGroupCall:allowsMinimization:layoutIdiom:defaults:), v26);
  OUTLINED_FUNCTION_43();
  swift_release();
  v28 = OUTLINED_FUNCTION_21_8();
  swift_unknownObjectWeakInit();
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  swift_retain();
  CaptionsViewModel.onRequestDismissControlsHandler.setter((uint64_t)partial apply for closure #2 in CaptionsViewController.init(participants:callName:groupImage:isGroupCall:allowsMinimization:layoutIdiom:defaults:), v28);
  OUTLINED_FUNCTION_43();
  swift_release();
  v29 = v27;
  static UIHostingControllerSizingOptions.intrinsicContentSize.getter();
  dispatch thunk of UIHostingController.sizingOptions.setter();

  swift_unknownObjectRelease();
  return v29;
}

void closure #1 in CaptionsViewController.init(participants:callName:groupImage:isGroupCall:allowsMinimization:layoutIdiom:defaults:)(char a1, char a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;

  if ((a2 & 1) != 0)
  {
    v4 = a3 + 16;
    swift_beginAccess();
    v5 = MEMORY[0x1C3B752C0](v4);
    if (v5)
    {
      v6 = (void *)v5;
      v7 = v5 + direct field offset for CaptionsViewController.delegate;
      swift_beginAccess();
      if (MEMORY[0x1C3B752C0](v7))
      {
        v8 = *(_QWORD *)(v7 + 8);
        ObjectType = swift_getObjectType();
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 8))(v6, a1 & 1, ObjectType, v8);

        swift_unknownObjectRelease();
      }
      else
      {

      }
    }
  }
}

void closure #2 in CaptionsViewController.init(participants:callName:groupImage:isGroupCall:allowsMinimization:layoutIdiom:defaults:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x1C3B752C0](v1);
  if (v2)
  {
    v3 = (void *)v2;
    v4 = v2 + direct field offset for CaptionsViewController.delegate;
    swift_beginAccess();
    if (MEMORY[0x1C3B752C0](v4))
    {
      v5 = *(_QWORD *)(v4 + 8);
      ObjectType = swift_getObjectType();
      (*(void (**)(void *, uint64_t, uint64_t))(v5 + 16))(v3, ObjectType, v5);

      swift_unknownObjectRelease();
    }
    else
    {

    }
  }
}

id CaptionsViewController.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void CaptionsViewController.init(coder:)()
{
  _BYTE *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)&v0[direct field offset for CaptionsViewController.screenSharingStateMonitor] = 0;
  *(_QWORD *)&v0[direct field offset for CaptionsViewController.captioningStateManager] = 0;
  OUTLINED_FUNCTION_18_1(direct field offset for CaptionsViewController.delegate);
  v1 = &v0[direct field offset for CaptionsViewController.captionVisibilityDuringCapture];
  *v1 = 0;
  v1[1] = 0;
  v0[direct field offset for CaptionsViewController.speechModelDownloadPromptBlocked] = 0;
  v0[direct field offset for CaptionsViewController.isBroadcastingScreenSharingActive] = 0;
  v2 = direct field offset for CaptionsViewController.logger;
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  v3 = OUTLINED_FUNCTION_17_2();
  v4 = __swift_project_value_buffer(v3, (uint64_t)&static Logger.conversationKit);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(&v0[v2], v4, v3);

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void @objc CaptionsViewController.init(coder:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  CaptionsViewController.init(coder:)();
}

Swift::Bool __swiftcall CaptionsViewController._canShowWhileLocked()()
{
  return 1;
}

uint64_t @objc CaptionsViewController._canShowWhileLocked()()
{
  return 1;
}

Swift::Void __swiftcall CaptionsViewController.viewDidLoad()()
{
  void *v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  objc_super v10;

  v10.receiver = v0;
  v10.super_class = (Class)OUTLINED_FUNCTION_15_6();
  v1 = objc_msgSendSuper2(&v10, sel_viewDidLoad);
  v2 = OUTLINED_FUNCTION_25_1((uint64_t)v1, sel_view);
  if (!v2)
  {
    __break(1u);
    goto LABEL_8;
  }
  v3 = v2;
  v4 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
  objc_msgSend(v3, sel_setBackgroundColor_, v4);

  v6 = OUTLINED_FUNCTION_25_1(v5, sel_view);
  if (!v6)
  {
LABEL_8:
    __break(1u);
    return;
  }
  v7 = v6;
  v8 = objc_msgSend(v6, sel_layer);

  if (*((_BYTE *)v0 + direct field offset for CaptionsViewController.allowsScreenshots))
    v9 = 0;
  else
    v9 = 1042;
  objc_msgSend(v8, sel_setDisableUpdateMask_, v9);

  OUTLINED_FUNCTION_43_1();
}

void @objc CaptionsViewController.viewDidLoad()(void *a1)
{
  id v1;

  v1 = a1;
  CaptionsViewController.viewDidLoad()();

}

Swift::Void __swiftcall CaptionsViewController.traitCollectionDidChange(_:)(UITraitCollection_optional a1)
{
  void *v1;
  Class isa;
  uint64_t v3;
  id v4;
  id v5;
  objc_super v6;

  isa = a1.value.super.isa;
  v6.receiver = v1;
  v6.super_class = (Class)OUTLINED_FUNCTION_15_6();
  objc_msgSendSuper2(&v6, sel_traitCollectionDidChange_, isa);
  v3 = static Platform.current.getter();
  if (!(_BYTE)v3 || (v3 = static Platform.current.getter(), v3 == 1))
  {
    v4 = OUTLINED_FUNCTION_25_1(v3, sel_traitCollection);
    v5 = objc_msgSend(v4, sel_preferredContentSizeCategory);

    LOBYTE(v4) = UIContentSizeCategory.isAccessibilityCategory.getter();
    if ((v4 & 1) != 0)
    {
      if (one-time initialization token for conversationKit != -1)
        swift_once();
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();
      OUTLINED_FUNCTION_7_36();
      OUTLINED_FUNCTION_15_19();
      CaptionsStateSource.isMinimized.setter(0);
      OUTLINED_FUNCTION_19();
      OUTLINED_FUNCTION_43();
    }
  }
  OUTLINED_FUNCTION_43_1();
}

void @objc CaptionsViewController.traitCollectionDidChange(_:)(void *a1, uint64_t a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  UITraitCollection_optional v8;

  v5 = a3;
  v6 = a1;
  v8.is_nil = (char)v6;
  v7 = v6;
  v8.value.super.isa = (Class)a3;
  CaptionsViewController.traitCollectionDidChange(_:)(v8);

}

uint64_t CaptionsViewController.update(with:updateReason:)()
{
  uint64_t v0;

  OUTLINED_FUNCTION_8_30();
  OUTLINED_FUNCTION_17_9();
  v0 = swift_bridgeObjectRetain();
  specialized _ArrayProtocol.filter(_:)(v0);
  CaptionsStateSource.participants.setter();
  OUTLINED_FUNCTION_22();
  return swift_release();
}

void CaptionsViewController.__allocating_init(rootView:)()
{
  OUTLINED_FUNCTION_13_21();
  __break(1u);
}

void CaptionsViewController.init(rootView:)()
{
  OUTLINED_FUNCTION_13_21();
  __break(1u);
}

void CaptionsViewController.__allocating_init(coder:rootView:)()
{
  OUTLINED_FUNCTION_14_30();
  __break(1u);
}

void CaptionsViewController.init(coder:rootView:)()
{
  OUTLINED_FUNCTION_14_30();
  __break(1u);
}

uint64_t CaptionsViewController.__ivar_destroyer()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  swift_release();

  swift_release();
  outlined destroy of weak ConversationControlsCountdownJoinButtonDelegate?(v0 + direct field offset for CaptionsViewController.delegate);
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(*(_QWORD *)(v0 + direct field offset for CaptionsViewController.captionVisibilityDuringCapture));
  OUTLINED_FUNCTION_17_2();
  v1 = OUTLINED_FUNCTION_33_6();
  return OUTLINED_FUNCTION_10_31(v1, v2, v3);
}

id CaptionsViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)OUTLINED_FUNCTION_15_6();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t @objc CaptionsViewController.__ivar_destroyer(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  swift_release();

  swift_release();
  outlined destroy of weak ConversationControlsCountdownJoinButtonDelegate?(a1 + direct field offset for CaptionsViewController.delegate);
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(*(_QWORD *)(a1 + direct field offset for CaptionsViewController.captionVisibilityDuringCapture));
  OUTLINED_FUNCTION_17_2();
  v2 = OUTLINED_FUNCTION_33_6();
  return OUTLINED_FUNCTION_10_31(v2, v3, v4);
}

uint64_t protocol witness for ParticipantsViewController.update(with:updateReason:) in conformance CaptionsViewController()
{
  return CaptionsViewController.update(with:updateReason:)();
}

uint64_t specialized OptionSet<>.insert(_:)(_QWORD *a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 & a2;
  if (v3 != a2)
    *v2 |= a2;
  *a1 = a2;
  return OUTLINED_FUNCTION_30_13(v3 != a2);
}

uint64_t specialized OptionSet<>.insert(_:)(_DWORD *a1, int a2)
{
  _DWORD *v2;
  int v3;

  v3 = *v2 & a2;
  if (v3 != a2)
    *v2 |= a2;
  *a1 = a2;
  return OUTLINED_FUNCTION_30_13(v3 != a2);
}

uint64_t specialized OptionSet<>.formIntersection(_:)(uint64_t result)
{
  _QWORD *v1;

  *v1 &= result;
  return result;
}

{
  _DWORD *v1;

  *v1 &= result;
  return result;
}

uint64_t sub_1BD073A24()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void partial apply for closure #1 in CaptionsViewController.init(participants:callName:groupImage:isGroupCall:allowsMinimization:layoutIdiom:defaults:)(char a1)
{
  uint64_t v1;

  closure #1 in CaptionsViewController.init(participants:callName:groupImage:isGroupCall:allowsMinimization:layoutIdiom:defaults:)(a1, *(_BYTE *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void partial apply for closure #2 in CaptionsViewController.init(participants:callName:groupImage:isGroupCall:allowsMinimization:layoutIdiom:defaults:)()
{
  uint64_t v0;

  closure #2 in CaptionsViewController.init(participants:callName:groupImage:isGroupCall:allowsMinimization:layoutIdiom:defaults:)(v0);
}

void sub_1BD073A6C()
{
  _BYTE *v0;

  OUTLINED_FUNCTION_4();
  *v0 = CaptionsViewController.allowsMinimization.getter() & 1;
  OUTLINED_FUNCTION_0();
}

void sub_1BD073A90(unsigned __int8 *a1)
{
  CaptionsViewController.allowsMinimization.setter(*a1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD073AB0()
{
  _BYTE *v0;

  OUTLINED_FUNCTION_4();
  *v0 = CaptionsViewController.isGroupCall.getter() & 1;
  OUTLINED_FUNCTION_0();
}

void sub_1BD073AD4(unsigned __int8 *a1)
{
  CaptionsViewController.isGroupCall.setter(*a1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD073AF4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_4();
  CaptionsViewController.callName.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_0();
}

void sub_1BD073B18()
{
  uint64_t *v0;

  OUTLINED_FUNCTION_4();
  *v0 = CaptionsViewController.groupImage.getter();
  OUTLINED_FUNCTION_0();
}

uint64_t dispatch thunk of CaptionsViewControllerDelegate.captionsViewController(_:didRequestToBeMinimized:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of CaptionsViewControllerDelegate.captionsViewControllerDidRequestDismissControls(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t type metadata accessor for CaptionsViewController()
{
  uint64_t result;

  result = type metadata singleton initialization cache for CaptionsViewController;
  if (!type metadata singleton initialization cache for CaptionsViewController)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata completion function for CaptionsViewController()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Logger();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for CaptionsViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CaptionsViewController.__allocating_init(participants:callName:groupImage:isGroupCall:allowsMinimization:layoutIdiom:defaults:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(class metadata base offset for CaptionsViewController + v0 + 72))();
}

uint64_t ObjC metadata update function for CaptionsViewController()
{
  return type metadata accessor for CaptionsViewController();
}

uint64_t sub_1BD073C6C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed CGRect, @in_guaranteed Bool) -> (@out ())(char a1, double a2, double a3, double a4, double a5)
{
  uint64_t v5;
  uint64_t (*v6)(_QWORD *, char *);
  char v8;
  _QWORD v9[4];

  v6 = *(uint64_t (**)(_QWORD *, char *))(v5 + 16);
  *(double *)v9 = a2;
  *(double *)&v9[1] = a3;
  *(double *)&v9[2] = a4;
  *(double *)&v9[3] = a5;
  v8 = a1;
  return v6(v9, &v8);
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ()(double *a1, unsigned __int8 *a2)
{
  uint64_t v2;

  return thunk for @escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ()(a1, a2, *(uint64_t (**)(_QWORD, double, double, double, double))(v2 + 16));
}

uint64_t outlined init with copy of Participant(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t outlined destroy of Participant(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Participant(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t outlined consume of Participant.CopresenceInfo?(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t outlined destroy of Participant.MediaInfo(uint64_t a1)
{
  destroy for Participant.MediaInfo(a1);
  return a1;
}

uint64_t outlined init with take of Participant(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Participant(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t key path getter for CancelConfirmationViewModel.delegate : CancelConfirmationViewModel@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v3 = *a1;
  v4 = *a1 + 16;
  swift_beginAccess();
  result = MEMORY[0x1C3B752C0](v4);
  v6 = *(_QWORD *)(v3 + 24);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t key path setter for CancelConfirmationViewModel.delegate : CancelConfirmationViewModel(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v3 + 24) = v2;
  return swift_unknownObjectWeakAssign();
}

void CancelConfirmationViewModel.delegate.getter()
{
  OUTLINED_FUNCTION_10_7();
  OUTLINED_FUNCTION_26();
}

void CancelConfirmationViewModel.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 24) = a2;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_9_0();
}

void CancelConfirmationViewModel.delegate.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess();
  OUTLINED_FUNCTION_26();
}

uint64_t (*sub_1BD073F98(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = v3;
  return CancelConfirmationViewModel.delegate.modify;
}

uint64_t CancelConfirmationViewModel.enabled(for:)()
{
  return 1;
}

uint64_t CancelConfirmationViewModel.controlType.getter()
{
  return CancelConfirmationViewModel.config.getter();
}

uint64_t CancelConfirmationViewModel.config.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  void *v18;
  objc_class *v19;
  NSBundle v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  objc_class *v28;
  NSBundle v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  _OWORD v45[5];
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v58;

  v1 = v0;
  v2 = type metadata accessor for Font.Leading();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Image.Scale();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(v1 + 32))
  {
    v10 = *(_QWORD *)(v1 + 32);
  }
  else
  {
    swift_bridgeObjectRelease();
    v11 = static Color.white.getter();
    if (one-time initialization token for callControlBackgroundOff != -1)
      swift_once();
    v12 = static SystemSymbol<A>.callControlBackgroundOff;
    (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0CDF7D8], v6);
    swift_retain();
    v13 = static Font.body.getter();
    static Font.Weight.regular.getter();
    static SystemSymbol<A>.catalystCallControl(name:color:backgroundColor:scale:font:weight:)(0x6B72616D78, 0xE500000000000000, v11, v12, (uint64_t)v9, v13, v45, v14);
    v44 = v45[3];
    v43 = v45[4];
    v42 = v46;
    v41 = v47;
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    v15 = *(void (**)(char *, uint64_t))(v7 + 8);
    v40 = v45[0];
    v39 = v45[1];
    v38 = v45[2];
    v15(v9, v6);
    v16 = static Color.white.getter();
    static Font.subheadline.getter();
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0CDD6D8], v2);
    v17 = Font.leading(_:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    v48 = xmmword_1BD6456D0;
    v49 = 0x401C000000000000;
    v50 = v16;
    v52 = v40;
    v53 = v39;
    v54 = v38;
    v55 = v44;
    v56 = v43;
    v51 = v17;
    v57 = v42;
    v58 = v41;
    v18 = (void *)objc_opt_self();
    v19 = (objc_class *)objc_msgSend(v18, sel_conversationKit);
    OUTLINED_FUNCTION_7_14();
    v20.super.isa = v19;
    v25 = OUTLINED_FUNCTION_49_2(v21, v22, v23, v24, v20);
    v27 = v26;

    v28 = (objc_class *)objc_msgSend(v18, sel_conversationKit);
    OUTLINED_FUNCTION_7_14();
    v29.super.isa = v28;
    v34 = OUTLINED_FUNCTION_49_2(v30, v31, v32, v33, v29);
    v36 = v35;

    swift_allocObject();
    swift_weakInit();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IconButtonConfig<()>);
    OUTLINED_FUNCTION_14_0();
    v10 = specialized IconButtonConfig.init(buttonStyle:title:hasBadge:accessibilityLabel:accessibilityIdentifier:state:enabled:didTap:)((uint64_t)&v48, v25, v27, 0, v34, v36, 0x75426C65636E6163, 0xEC0000006E6F7474, 1);
    *(_QWORD *)(v1 + 32) = v10;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v10;
}

Swift::Void __swiftcall CancelConfirmationViewModel.didTap()()
{
  OUTLINED_FUNCTION_10_7();
  OUTLINED_FUNCTION_26();
}

void sub_1BD074418(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;

  if (a1)
  {
    v2 = *(_QWORD *)(v1 + 24);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(ObjectType, v2);
    swift_unknownObjectRelease();
  }
  OUTLINED_FUNCTION_9_0();
}

uint64_t key path setter for CancelConfirmationViewModel.config : CancelConfirmationViewModel()
{
  uint64_t v0;

  v0 = swift_retain();
  return CancelConfirmationViewModel.config.setter(v0);
}

uint64_t CancelConfirmationViewModel.config.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = a1;
  return swift_release();
}

uint64_t closure #1 in CancelConfirmationViewModel.config.getter()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
    CancelConfirmationViewModel.didTap()();
  return result;
}

uint64_t CancelConfirmationViewModel.deinit()
{
  uint64_t v0;

  outlined destroy of weak ConversationControlsCountdownJoinButtonDelegate?(v0 + 16);
  swift_release();
  return v0;
}

uint64_t CancelConfirmationViewModel.__deallocating_deinit()
{
  uint64_t v0;

  outlined destroy of weak ConversationControlsCountdownJoinButtonDelegate?(v0 + 16);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t CancelConfirmationViewModel.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  CancelConfirmationViewModel.init()();
  return v0;
}

uint64_t CancelConfirmationViewModel.init()()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v0 + 32) = 0;
  return v0;
}

uint64_t protocol witness for CallControlsPreCallButtonViewModel.delegate.getter in conformance CancelConfirmationViewModel()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_beginAccess();
  return MEMORY[0x1C3B752C0](v1 + 16);
}

uint64_t protocol witness for CallControlsPreCallButtonViewModel.delegate.setter in conformance CancelConfirmationViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  swift_beginAccess();
  *(_QWORD *)(v4 + 24) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

uint64_t (*protocol witness for CallControlsPreCallButtonViewModel.delegate.modify in conformance CancelConfirmationViewModel(_QWORD *a1))()
{
  uint64_t *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = *v1;
  v3[5] = v4;
  swift_beginAccess();
  v5 = MEMORY[0x1C3B752C0](v4 + 16);
  v6 = *(_QWORD *)(v4 + 24);
  v3[3] = v5;
  v3[4] = v6;
  return CancelConfirmationViewModel.delegate.modify;
}

void CancelConfirmationViewModel.delegate.modify(uint64_t a1, char a2)
{
  void *v3;

  v3 = *(void **)a1;
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a1 + 40) + 24) = *(_QWORD *)(*(_QWORD *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  free(v3);
}

uint64_t protocol witness for CallControlsButtonViewModel.controlType.getter in conformance CancelConfirmationViewModel()
{
  return CancelConfirmationViewModel.controlType.getter();
}

uint64_t sub_1BD074734()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in CancelConfirmationViewModel.config.getter()
{
  return closure #1 in CancelConfirmationViewModel.config.getter();
}

uint64_t specialized IconButtonConfig.init(buttonStyle:title:hasBadge:accessibilityLabel:accessibilityIdentifier:state:enabled:didTap:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  __n128 v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v23;
  _BYTE v24[144];

  OUTLINED_FUNCTION_9_22();
  v23 = v14;
  OUTLINED_FUNCTION_14_31();
  OUTLINED_FUNCTION_22_16();
  v15 = OUTLINED_FUNCTION_6_12((void *)(v9 + 352), v12);
  OUTLINED_FUNCTION_24_8((uint64_t)v15, (uint64_t (*)(uint64_t, uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy, (uint64_t (*)(uint64_t, uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy, (uint64_t (*)(uint64_t, uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy);
  OUTLINED_FUNCTION_21_0();
  *(_QWORD *)(v9 + 176) = v11;
  *(_QWORD *)(v9 + 184) = v10;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StateHolder<Bool>);
  OUTLINED_FUNCTION_14_0();
  OUTLINED_FUNCTION_0_35();
  OUTLINED_FUNCTION_19_21();
  OUTLINED_FUNCTION_12_17();
  *(_QWORD *)(v9 + 208) = v13;
  *(_QWORD *)(v9 + 216) = a8;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StateHolder<()>);
  OUTLINED_FUNCTION_14_0();
  OUTLINED_FUNCTION_0_35();
  *(_BYTE *)(v9 + 168) = a9;
  v16 = OUTLINED_FUNCTION_1_23(v23);
  OUTLINED_FUNCTION_2_40(v16, v17);
  OUTLINED_FUNCTION_20_8();
  OUTLINED_FUNCTION_11_1();
  v18 = OUTLINED_FUNCTION_3_29();
  OUTLINED_FUNCTION_23_12(v18, _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe, _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe, _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe);
  v19 = *(_QWORD *)(v9 + 336);
  v20 = *(_QWORD *)(v9 + 344);
  OUTLINED_FUNCTION_4_23(v24);
  *(_QWORD *)(v9 + 16) = v19;
  *(_QWORD *)(v9 + 24) = v20;
  OUTLINED_FUNCTION_4_23((void *)(v9 + 32));
  OUTLINED_FUNCTION_11_8();
  OUTLINED_FUNCTION_11_1();
  outlined retain of IconButtonStyle<ShareMenuActionState>((uint64_t)v24, (uint64_t (*)(uint64_t, uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy, (uint64_t (*)(uint64_t, uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy, (uint64_t (*)(uint64_t, uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy);
  return v9;
}

uint64_t sub_1BD0748D4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = CancelConfirmationViewModel.config.getter();
  *a1 = result;
  return result;
}

uint64_t type metadata accessor for CancelConfirmationViewModel()
{
  return objc_opt_self();
}

uint64_t method lookup function for CancelConfirmationViewModel()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CancelConfirmationViewModel.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t specialized IconButtonConfig.init(buttonStyle:title:hasBadge:accessibilityLabel:accessibilityIdentifier:state:enabled:didTap:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, char a10)
{
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v27;
  _BYTE v28[144];

  OUTLINED_FUNCTION_9_22();
  v27 = v16;
  OUTLINED_FUNCTION_14_31();
  OUTLINED_FUNCTION_22_16();
  v17 = OUTLINED_FUNCTION_6_12((void *)(v11 + 352), v14);
  OUTLINED_FUNCTION_24_8((uint64_t)v17, (uint64_t (*)(uint64_t, uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy, (uint64_t (*)(uint64_t, uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy, (uint64_t (*)(uint64_t, uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy);
  OUTLINED_FUNCTION_21_0();
  *(_QWORD *)(v11 + 176) = v13;
  *(_QWORD *)(v11 + 184) = v12;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StateHolder<Bool>);
  v18 = OUTLINED_FUNCTION_14_0();
  OUTLINED_FUNCTION_0_35();
  *(_BYTE *)(v18 + 16) = v10;
  *(_QWORD *)(v11 + 344) = v18;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_12_17();
  *(_QWORD *)(v11 + 208) = v15;
  *(_QWORD *)(v11 + 216) = a8;
  v19 = swift_allocObject();
  OUTLINED_FUNCTION_0_35();
  *(_BYTE *)(v19 + 16) = a9;
  *(_BYTE *)(v11 + 168) = a10;
  v20 = OUTLINED_FUNCTION_1_23(v27);
  OUTLINED_FUNCTION_2_40(v20, v21);
  OUTLINED_FUNCTION_20_8();
  OUTLINED_FUNCTION_11_1();
  v22 = OUTLINED_FUNCTION_3_29();
  OUTLINED_FUNCTION_23_12(v22, _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe, _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe, _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe);
  v23 = *(_QWORD *)(v11 + 336);
  v24 = *(_QWORD *)(v11 + 344);
  OUTLINED_FUNCTION_4_23(v28);
  *(_QWORD *)(v11 + 16) = v23;
  *(_QWORD *)(v11 + 24) = v24;
  OUTLINED_FUNCTION_4_23((void *)(v11 + 32));
  OUTLINED_FUNCTION_11_8();
  OUTLINED_FUNCTION_11_1();
  outlined retain of IconButtonStyle<ShareMenuActionState>((uint64_t)v28, (uint64_t (*)(uint64_t, uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy, (uint64_t (*)(uint64_t, uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy, (uint64_t (*)(uint64_t, uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy);
  return v11;
}

uint64_t specialized IconButtonConfig.init(buttonStyle:title:hasBadge:accessibilityLabel:accessibilityIdentifier:state:enabled:didTap:)(const void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, char a10, uint64_t a11, char a12, char a13, char a14, uint64_t a15, uint64_t a16)
{
  uint64_t v16;
  void *v20;
  uint64_t v21;
  __n128 v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE v30[144];

  OUTLINED_FUNCTION_14_31();
  OUTLINED_FUNCTION_22_16();
  v20 = OUTLINED_FUNCTION_6_12((void *)(v16 + 352), a1);
  OUTLINED_FUNCTION_24_8((uint64_t)v20, (uint64_t (*)(uint64_t, uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy, (uint64_t (*)(uint64_t, uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy, (uint64_t (*)(uint64_t, uint64_t))_sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy);
  OUTLINED_FUNCTION_21_0();
  *(_QWORD *)(v16 + 176) = a2;
  *(_QWORD *)(v16 + 184) = a3;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StateHolder<Bool>);
  OUTLINED_FUNCTION_14_0();
  OUTLINED_FUNCTION_0_35();
  OUTLINED_FUNCTION_19_21();
  OUTLINED_FUNCTION_12_17();
  *(_QWORD *)(v16 + 208) = a7;
  *(_QWORD *)(v16 + 216) = a8;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StateHolder<ShareMenuActionState>);
  v21 = OUTLINED_FUNCTION_14_0();
  OUTLINED_FUNCTION_0_35();
  *(_BYTE *)(v21 + 16) = a9 & 1;
  *(_BYTE *)(v21 + 17) = a10 & 1;
  *(_QWORD *)(v21 + 24) = a11;
  *(_BYTE *)(v21 + 32) = a12 & 1;
  *(_BYTE *)(v21 + 33) = a13 & 1;
  *(_BYTE *)(v16 + 168) = a14;
  v22 = OUTLINED_FUNCTION_1_23(a16);
  OUTLINED_FUNCTION_2_40(v22, v23);
  OUTLINED_FUNCTION_20_8();
  OUTLINED_FUNCTION_11_1();
  v24 = OUTLINED_FUNCTION_3_29();
  OUTLINED_FUNCTION_23_12(v24, _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe, _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe, (uint64_t (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
  v25 = *(_QWORD *)(v16 + 336);
  v26 = *(_QWORD *)(v16 + 344);
  OUTLINED_FUNCTION_4_23(v30);
  *(_QWORD *)(v16 + 16) = v25;
  *(_QWORD *)(v16 + 24) = v26;
  OUTLINED_FUNCTION_4_23((void *)(v16 + 32));
  OUTLINED_FUNCTION_11_8();
  OUTLINED_FUNCTION_11_1();
  outlined retain of IconButtonStyle<ShareMenuActionState>((uint64_t)v30, (uint64_t (*)(uint64_t, uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy, (uint64_t (*)(uint64_t, uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy, (uint64_t (*)(uint64_t, uint64_t))_sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy);
  return v16;
}

void outlined retain of IconButtonStyle<ShareMenuActionState>(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t), uint64_t (*a3)(uint64_t, uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;

  v28 = *(_QWORD *)(a1 + 128);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v4 = swift_retain();
  v12 = OUTLINED_FUNCTION_18_22(v4, v5, v6, v7, v8, v9, v10, v11, v28, a2);
  v20 = OUTLINED_FUNCTION_15_20(v12, v13, v14, v15, v16, v17, v18, v19, v29, v32, a3);
  OUTLINED_FUNCTION_17_10(v20, v21, v22, v23, v24, v25, v26, v27, v30, v33, v35, a4);
  OUTLINED_FUNCTION_8_0();
}

void outlined release of IconButtonStyle<ShareMenuActionState>(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t), uint64_t (*a3)(uint64_t, uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;

  v28 = *(_QWORD *)(a1 + 128);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v4 = swift_release();
  v12 = OUTLINED_FUNCTION_18_22(v4, v5, v6, v7, v8, v9, v10, v11, v28, a2);
  v20 = OUTLINED_FUNCTION_15_20(v12, v13, v14, v15, v16, v17, v18, v19, v29, v32, a3);
  OUTLINED_FUNCTION_17_10(v20, v21, v22, v23, v24, v25, v26, v27, v30, v33, v35, a4);
  OUTLINED_FUNCTION_8_0();
}

void one-time initialization function for backgroundCornerRadius()
{
  static ConversationNoticeButtonProvider.Constants.backgroundCornerRadius = 0x4031AA3D70A3D70ALL;
}

double one-time initialization function for contentInsets()
{
  double result;

  if (one-time initialization token for systemApertureButtonContentInsets != -1)
    swift_once();
  result = *(double *)&static SystemApertureNoticeLayoutSharedConstants.systemApertureButtonContentInsets;
  static ConversationNoticeButtonProvider.Constants.contentInsets = static SystemApertureNoticeLayoutSharedConstants.systemApertureButtonContentInsets;
  *(_OWORD *)&qword_1EF4BA278 = *(_OWORD *)&qword_1EF4FD390;
  return result;
}

uint64_t ConversationNoticeButtonProvider.__allocating_init(controlsManager:context:)(void *a1, char a2)
{
  swift_allocObject();
  return ConversationNoticeButtonProvider.init(controlsManager:context:)(a1, a2);
}

uint64_t ConversationNoticeButtonProvider.init(controlsManager:context:)(void *a1, char a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;

  *(_QWORD *)(v2 + 136) = a1;
  ControlsButtonProvider.init(context:shape:)(a2, 2);
  v5 = v4;
  v6 = a1;
  swift_retain();
  v7 = ConversationNoticeButtonProvider.noticeButtonTitleFont.getter();
  ControlsButtonProvider.titleFont.setter(v7);
  swift_release();

  return v5;
}

id ConversationNoticeButtonProvider.noticeButtonTitleFont.getter()
{
  uint64_t v0;
  id result;

  if (*(_BYTE *)(v0 + 40))
  {
    type metadata accessor for UIFont();
    return static UIFont.preferredFont(textStyle:weight:maximumPointSize:)(*MEMORY[0x1E0DC4B10], 0, 1);
  }
  else
  {
    result = objc_msgSend((id)objc_opt_self(), sel__preferredFontForTextStyle_variant_, *MEMORY[0x1E0DC4A90], 264);
    if (!result)
      __break(1u);
  }
  return result;
}

Swift::Void __swiftcall ConversationNoticeButtonProvider.buttonChanged()()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;

  ControlsButtonProvider.buttonChanged()();
  if (!*(_BYTE *)(v0 + 40))
  {
    swift_beginAccess();
    v1 = (void *)MEMORY[0x1C3B752C0](v0 + 16);
    if (v1)
    {
      v2 = v1;
      v3 = objc_msgSend(v1, sel_titleLabel);

      if (v3)
      {
        objc_msgSend(v3, sel_setAdjustsFontSizeToFitWidth_, 1);
        objc_msgSend(v3, sel_setMinimumScaleFactor_, 0.5);

      }
    }
  }
}

uint64_t ConversationNoticeButtonProvider.buttonConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  void *v15;
  id v16;
  id v17;
  void (*v18)(char *, char *, uint64_t);
  id v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(_BYTE *, _QWORD);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE v28[32];

  v27 = a1;
  v1 = type metadata accessor for UIButton.Configuration.Size();
  v25 = *(_QWORD *)(v1 - 8);
  v26 = v1;
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for UIBackgroundConfiguration();
  MEMORY[0x1E0C80A78](v4);
  v5 = type metadata accessor for UIButton.Configuration();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v7);
  v12 = (char *)&v24 - v11;
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v24 - v13;
  ControlsButtonProvider.defaultButtonConfiguration.getter((uint64_t)v12);
  v15 = (void *)objc_opt_self();
  v16 = objc_msgSend(v15, sel_whiteColor);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v12, v5);
  v17 = v16;
  static UIBackgroundConfiguration.clear()();
  UIButton.Configuration.background.setter();
  UIButton.Configuration.baseBackgroundColor.setter();
  v18 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
  v18(v14, v9, v5);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
  v19 = objc_msgSend(v15, sel_blackColor);
  UIButton.Configuration.baseForegroundColor.setter();
  (*(void (**)(char *, _QWORD, uint64_t))(v25 + 104))(v3, *MEMORY[0x1E0DC3198], v26);
  UIButton.Configuration.buttonSize.setter();
  v20 = v27;
  if (!*(_BYTE *)(v24 + 40))
  {
    v21 = v27;
    if (one-time initialization token for backgroundCornerRadius != -1)
      swift_once();
    v22 = (void (*)(_BYTE *, _QWORD))UIButton.Configuration.background.modify();
    UIBackgroundConfiguration.cornerRadius.setter();
    v22(v28, 0);
    if (one-time initialization token for contentInsets != -1)
      swift_once();
    UIButton.Configuration.contentInsets.setter();
    UIButton.Configuration.titleLineBreakMode.setter();
    v20 = v21;
  }
  return ((uint64_t (*)(uint64_t, char *, uint64_t))v18)(v20, v14, v5);
}

void ConversationNoticeButtonProvider.__allocating_init(controlsManager:context:shape:)()
{
  OUTLINED_FUNCTION_0_36();
  __break(1u);
}

void ConversationNoticeButtonProvider.init(controlsManager:context:shape:)()
{
  OUTLINED_FUNCTION_0_36();
  __break(1u);
}

uint64_t ConversationNoticeButtonProvider.deinit()
{
  uint64_t v0;
  uint64_t v1;

  v1 = ControlsButtonProvider.deinit();
  OUTLINED_FUNCTION_1_24(v1);
  return v0;
}

uint64_t ConversationNoticeButtonProvider.__deallocating_deinit()
{
  uint64_t v0;

  v0 = ControlsButtonProvider.deinit();
  OUTLINED_FUNCTION_1_24(v0);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ConversationNoticeButtonProvider()
{
  return objc_opt_self();
}

uint64_t method lookup function for ConversationNoticeButtonProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ConversationNoticeButtonProvider.__allocating_init(controlsManager:context:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 480))();
}

unint64_t type metadata accessor for UIFont()
{
  unint64_t result;

  result = lazy cache variable for type metadata for UIFont;
  if (!lazy cache variable for type metadata for UIFont)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for UIFont);
  }
  return result;
}

uint64_t ServiceAvailability.telephony.getter(char a1)
{
  return a1 & 1;
}

uint64_t ServiceAvailability.telephony.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*ServiceAvailability.telephony.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ServiceAvailability.faceTimeAudio.getter(unint64_t a1)
{
  return (a1 >> 8) & 1;
}

uint64_t ServiceAvailability.faceTimeAudio.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = result;
  return result;
}

uint64_t (*ServiceAvailability.faceTimeAudio.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ServiceAvailability.faceTimeVideo.getter(unint64_t a1)
{
  return (a1 >> 16) & 1;
}

uint64_t ServiceAvailability.faceTimeVideo.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 2) = result;
  return result;
}

uint64_t (*ServiceAvailability.faceTimeVideo.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ServiceAvailability.faceTimeMultiway.getter(unint64_t a1)
{
  return (a1 >> 24) & 1;
}

uint64_t ServiceAvailability.faceTimeMultiway.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 3) = result;
  return result;
}

uint64_t (*ServiceAvailability.faceTimeMultiway.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ServiceAvailability.avLessSharePlay.getter(unint64_t a1)
{
  return HIDWORD(a1) & 1;
}

uint64_t ServiceAvailability.avLessSharePlay.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 4) = result;
  return result;
}

uint64_t (*ServiceAvailability.avLessSharePlay.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ServiceAvailability.videoMessaging.getter(unint64_t a1)
{
  return (a1 >> 40) & 1;
}

uint64_t ServiceAvailability.videoMessaging.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 5) = result;
  return result;
}

uint64_t (*ServiceAvailability.videoMessaging.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

BOOL ServiceAvailability.audio.getter(__int16 a1)
{
  return (a1 & 0x101) != 0;
}

BOOL static ServiceAvailability.== infix(_:_:)(unint64_t a1, unint64_t a2)
{
  return ((a1 ^ a2) & 1 | (a1 >> 8) & 1 ^ (a2 >> 8) & 1 | (a1 >> 16) & 1 ^ (a2 >> 16) & 1 | (a1 >> 24) & 1 ^ (a2 >> 24) & 1 | BYTE4(a1) & 1 ^ BYTE4(a2) & 1 | (a1 >> 40) & 1 ^ (a2 >> 40) & 1) == 0;
}

ConversationKit::ServiceAvailability __swiftcall ServiceAvailability.init()()
{
  return (ConversationKit::ServiceAvailability)0;
}

ConversationKit::ServiceAvailability __swiftcall ServiceAvailability.init(telephony:faceTimeAudio:faceTimeVideo:faceTimeMultiway:avLessSharePlay:videoMessaging:)(Swift::Bool telephony, Swift::Bool faceTimeAudio, Swift::Bool faceTimeVideo, Swift::Bool faceTimeMultiway, Swift::Bool avLessSharePlay, Swift::Bool videoMessaging)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = 0x10000000000;
  if (!videoMessaging)
    v6 = 0;
  v7 = 0x100000000;
  if (!avLessSharePlay)
    v7 = 0;
  v8 = 0x1000000;
  if (!faceTimeMultiway)
    v8 = 0;
  v9 = 0x10000;
  if (!faceTimeVideo)
    v9 = 0;
  v10 = 256;
  if (!faceTimeAudio)
    v10 = 0;
  return (ConversationKit::ServiceAvailability)(v10 & 0xFFFFFFFFFFFFFFFELL | telephony | v9 | v8 | v7 | v6);
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance ServiceAvailability(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = a1[4];
  v7 = *a2;
  v8 = a2[1];
  v9 = a2[2];
  v10 = a2[3];
  v11 = a2[4];
  v12 = a2[5];
  if (a1[5])
    v13 = 0x10000000000;
  else
    v13 = 0;
  v14 = v6 == 0;
  v15 = 0x100000000;
  if (v14)
    v16 = 0;
  else
    v16 = 0x100000000;
  v14 = v5 == 0;
  v17 = 0x1000000;
  if (v14)
    v18 = 0;
  else
    v18 = 0x1000000;
  v14 = v4 == 0;
  v19 = 0x10000;
  if (v14)
    v20 = 0;
  else
    v20 = 0x10000;
  v14 = v3 == 0;
  v21 = 256;
  if (v14)
    v22 = 0;
  else
    v22 = 256;
  v23 = v22 | v2 | v20 | v18 | v16 | v13;
  if (v12)
    v24 = 0x10000000000;
  else
    v24 = 0;
  if (!v11)
    v15 = 0;
  if (!v10)
    v17 = 0;
  if (!v9)
    v19 = 0;
  if (!v8)
    v21 = 0;
  return static ServiceAvailability.== infix(_:_:)(v23, v21 | v7 | v19 | v17 | v15 | v24);
}

uint64_t __swift_memcpy6_1(uint64_t result, int *a2)
{
  int v2;

  v2 = *a2;
  *(_WORD *)(result + 4) = *((_WORD *)a2 + 2);
  *(_DWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for ServiceAvailability(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  BOOL v4;

  if (a2)
  {
    if (a2 >= 0xFF && a1[6])
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *a1;
      v4 = v3 >= 2;
      v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ServiceAvailability(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)(result + 4) = 0;
    *(_DWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 6) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 6) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for ServiceAvailability()
{
  return &type metadata for ServiceAvailability;
}

uint64_t StateHolder.state.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  swift_getKeyPath();
  StateHolder.access<A>(keyPath:)();
  swift_release();
  v4 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 88);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v4, v3);
}

uint64_t key path getter for StateHolder.state : <A>StateHolder<A>@<X0>(uint64_t a1@<X8>)
{
  return StateHolder.state.getter(a1);
}

uint64_t sub_1BD075760@<X0>(uint64_t a1@<X8>)
{
  return StateHolder.state.getter(a1);
}

uint64_t key path setter for StateHolder.state : <A>StateHolder<A>(uint64_t a1)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v5;

  MEMORY[0x1E0C80A78](a1);
  v2 = (char *)&v5 - v1;
  (*(void (**)(char *))(v3 + 16))((char *)&v5 - v1);
  return StateHolder.state.setter((uint64_t)v2);
}

_QWORD *sub_1BD0757FC(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t StateHolder.state.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  swift_getKeyPath();
  StateHolder.withMutation<A, B>(keyPath:_:)();
  swift_release();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
}

uint64_t StateHolder.access<A>(keyPath:)()
{
  MEMORY[0x1C3B750C8](&protocol conformance descriptor for StateHolder<A>);
  return ObservationRegistrar.access<A, B>(_:keyPath:)();
}

uint64_t closure #1 in StateHolder.state.setter(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  v4 = (uint64_t)a1 + *(_QWORD *)(*a1 + 88);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 24))(v4, a2);
  return swift_endAccess();
}

uint64_t partial apply for closure #1 in StateHolder.state.setter()
{
  uint64_t v0;

  return closure #1 in StateHolder.state.setter(*(uint64_t **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t StateHolder.withMutation<A, B>(keyPath:_:)()
{
  MEMORY[0x1C3B750C8](&protocol conformance descriptor for StateHolder<A>);
  return ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
}

uint64_t (*StateHolder.state.modify(uint64_t **a1))(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;

  a1[3] = v1;
  v3 = *v1;
  swift_getKeyPath();
  StateHolder.access<A>(keyPath:)();
  swift_release();
  *a1 = v1;
  swift_getKeyPath();
  MEMORY[0x1C3B750C8](&protocol conformance descriptor for StateHolder<A>, v3);
  ObservationRegistrar.willSet<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  return StateHolder.state.modify;
}

uint64_t StateHolder.state.modify(uint64_t a1)
{
  uint64_t *v1;

  v1 = *(uint64_t **)(a1 + 24);
  swift_endAccess();
  return $defer #1 <A>() in StateHolder.state.modify(v1);
}

uint64_t $defer #1 <A>() in StateHolder.state.modify(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  swift_getKeyPath();
  MEMORY[0x1C3B750C8](&protocol conformance descriptor for StateHolder<A>, v1);
  ObservationRegistrar.didSet<A, B>(_:keyPath:)();
  return swift_release();
}

void StateHolder.__allocating_init(state:)(uint64_t a1)
{
  swift_allocObject();
  StateHolder.init(state:)(a1);
  OUTLINED_FUNCTION_0();
}

void StateHolder.init(state:)(uint64_t a1)
{
  uint64_t v1;

  ObservationRegistrar.init()();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v1 + 80) - 8) + 32))(v1 + *(_QWORD *)(*(_QWORD *)v1 + 88), a1);
  OUTLINED_FUNCTION_0();
}

void StateHolder.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 88));
  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 96);
  v2 = type metadata accessor for ObservationRegistrar();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  OUTLINED_FUNCTION_0();
}

uint64_t StateHolder.__deallocating_deinit()
{
  StateHolder.deinit();
  return swift_deallocClassInstance();
}

uint64_t type metadata completion function for StateHolder()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for ObservationRegistrar();
    if (v2 <= 0x3F)
    {
      result = swift_initClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for StateHolder(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for StateHolder);
}

uint64_t method lookup function for StateHolder()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of StateHolder.__allocating_init(state:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

void iOSPeoplePickerAddButtonHandler.presenterViewController.getter()
{
  id *v0;
  id v1;

  OUTLINED_FUNCTION_1_7();
  v1 = *v0;
  OUTLINED_FUNCTION_32();
}

void iOSPeoplePickerAddButtonHandler.presenterViewController.setter(void *a1)
{
  iOSPeoplePickerAddButtonHandler.presenterViewController.setter(a1, &OBJC_IVAR____TtC15ConversationKit31iOSPeoplePickerAddButtonHandler_presenterViewController);
}

void iOSPeoplePickerAddButtonHandler.presenterViewController.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void iOSPeoplePickerAddButtonHandler.contactsSearchViewController.getter()
{
  id *v0;
  id v1;

  OUTLINED_FUNCTION_1_7();
  v1 = *v0;
  OUTLINED_FUNCTION_32();
}

void iOSPeoplePickerAddButtonHandler.contactsSearchViewController.setter(void *a1)
{
  iOSPeoplePickerAddButtonHandler.presenterViewController.setter(a1, &OBJC_IVAR____TtC15ConversationKit31iOSPeoplePickerAddButtonHandler_contactsSearchViewController);
}

void iOSPeoplePickerAddButtonHandler.presenterViewController.setter(void *a1, _QWORD *a2)
{
  uint64_t v2;
  void **v4;
  void *v5;

  v4 = (void **)(v2 + *a2);
  OUTLINED_FUNCTION_2_0();
  v5 = *v4;
  *v4 = a1;

}

void iOSPeoplePickerAddButtonHandler.contactsSearchViewController.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for iOSPeoplePickerAddButtonHandler.addToken : iOSPeoplePickerAddButtonHandler@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD *);

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit31iOSPeoplePickerAddButtonHandler_addToken);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = partial apply for thunk for @escaping @callee_guaranteed (@guaranteed CNComposeRecipient) -> ();
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for iOSPeoplePickerAddButtonHandler.addToken : iOSPeoplePickerAddButtonHandler(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed CNComposeRecipient) -> (@out ());
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit31iOSPeoplePickerAddButtonHandler_addToken);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t iOSPeoplePickerAddButtonHandler.addToken.getter()
{
  uint64_t *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_7();
  v1 = *v0;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(*v0);
  return v1;
}

uint64_t iOSPeoplePickerAddButtonHandler.addToken.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;

  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit31iOSPeoplePickerAddButtonHandler_addToken);
  OUTLINED_FUNCTION_2_0();
  v6 = *v5;
  *v5 = a1;
  v5[1] = a2;
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v6);
}

void iOSPeoplePickerAddButtonHandler.addToken.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

Swift::Void __swiftcall iOSPeoplePickerAddButtonHandler.handleAddButtonPressed(sourceView:)(UIView *sourceView)
{
  uint64_t v1;
  uint64_t v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  id *v12;
  id v13;

  v2 = v1;
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C974B0]), sel_init);
  objc_msgSend(v3, sel_setAllowsCancel_, 1);
  OUTLINED_FUNCTION_4_24((uint64_t)objc_msgSend(v3, sel_setAllowsEditing_, 0), sel_setDelegate_);
  objc_msgSend(v3, sel_setMode_, 2);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSPredicate);
  v4 = (void *)NSPredicate.init(format:_:)();
  OUTLINED_FUNCTION_4_24((uint64_t)v4, sel_setPredicateForEnablingContact_);

  objc_msgSend(v3, sel_setModalPresentationStyle_, 6);
  v5 = OUTLINED_FUNCTION_5_19();
  if (!v5)
  {
    __break(1u);
    goto LABEL_7;
  }
  v6 = v5;
  v7 = (void *)objc_opt_self();
  v8 = objc_msgSend(v7, sel_systemGreenColor);
  objc_msgSend(v6, sel_setTintColor_, v8);

  v9 = OUTLINED_FUNCTION_5_19();
  if (!v9)
  {
LABEL_7:
    __break(1u);
    return;
  }
  v10 = v9;
  v11 = objc_msgSend(v7, sel_systemBackgroundColor);
  objc_msgSend(v10, sel_setBackgroundColor_, v11);

  v12 = (id *)(v2 + OBJC_IVAR____TtC15ConversationKit31iOSPeoplePickerAddButtonHandler_presenterViewController);
  OUTLINED_FUNCTION_2_0();
  if (*v12)
  {
    v13 = *v12;
    objc_msgSend(v13, sel_presentViewController_animated_completion_, v3, 1, 0);

  }
  OUTLINED_FUNCTION_2_3();
}

id iOSPeoplePickerAddButtonHandler.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id iOSPeoplePickerAddButtonHandler.init()()
{
  char *v0;
  objc_class *ObjectType;
  char *v2;
  objc_super v4;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit31iOSPeoplePickerAddButtonHandler_presenterViewController] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit31iOSPeoplePickerAddButtonHandler_contactsSearchViewController] = 0;
  v2 = &v0[OBJC_IVAR____TtC15ConversationKit31iOSPeoplePickerAddButtonHandler_addToken];
  *(_QWORD *)v2 = 0;
  *((_QWORD *)v2 + 1) = 0;
  v4.receiver = v0;
  v4.super_class = ObjectType;
  return objc_msgSendSuper2(&v4, sel_init);
}

id iOSPeoplePickerAddButtonHandler.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t (*protocol witness for PeoplePickerAddButtonHandler.presenterViewController.modify in conformance iOSPeoplePickerAddButtonHandler())()
{
  swift_beginAccess();
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t (*protocol witness for PeoplePickerAddButtonHandler.contactsSearchViewController.modify in conformance iOSPeoplePickerAddButtonHandler())()
{
  swift_beginAccess();
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t (*protocol witness for PeoplePickerAddButtonHandler.addToken.modify in conformance iOSPeoplePickerAddButtonHandler())()
{
  swift_beginAccess();
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

Swift::Void __swiftcall iOSPeoplePickerAddButtonHandler.contactPicker(_:didSelect:)(CNContactPickerViewController *_, CNContactProperty didSelect)
{
  uint64_t v2;
  void (**v4)(void);
  void (*v5)(void);
  objc_class *v6;
  void *v7;
  void *v8;

  -[CNContactPickerViewController dismissViewControllerAnimated:completion:](_, sel_dismissViewControllerAnimated_completion_, 1, 0);
  v4 = (void (**)(void))(v2 + OBJC_IVAR____TtC15ConversationKit31iOSPeoplePickerAddButtonHandler_addToken);
  OUTLINED_FUNCTION_2_0();
  v5 = *v4;
  if (*v4)
  {
    v6 = didSelect.super.isa;
    _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy((uint64_t)v5);
    specialized CNKContactProperty.asRecipient()();
    if (v7)
    {
      v8 = v7;
      v5();

    }
    outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v5);

  }
  OUTLINED_FUNCTION_2_3();
}

Swift::Void __swiftcall iOSPeoplePickerAddButtonHandler.contactPickerDidCancel(_:)(CNContactPickerViewController *a1)
{
  -[CNContactPickerViewController dismissViewControllerAnimated:completion:](a1, sel_dismissViewControllerAnimated_completion_, 1, 0);
}

void specialized CNKContactProperty.asRecipient()()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  id v6;
  id v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;

  v1 = objc_msgSend(v0, sel_contact);
  @nonobjc CNContactProperty.value.getter(&v9);
  if (v10)
  {
    if ((swift_dynamicCast() & 1) != 0)
    {
      v3 = (uint64_t)v7;
      v2 = v8;
      goto LABEL_10;
    }
  }
  else
  {
    outlined destroy of Any?((uint64_t)&v9);
  }
  @nonobjc CNContactProperty.value.getter(&v9);
  if (v10)
  {
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for CNPhoneNumber);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v4 = objc_msgSend(v7, sel_stringValue);
      v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v2 = v5;

      goto LABEL_10;
    }
  }
  else
  {
    outlined destroy of Any?((uint64_t)&v9);
  }
  v3 = 0;
  v2 = 0xE000000000000000;
LABEL_10:
  if (String.count.getter() < 1)
  {

    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = objc_allocWithZone(MEMORY[0x1E0D13688]);
    @nonobjc CNComposeRecipient.init(contact:address:kind:)(v1, v3, v2);
  }
}

uint64_t type metadata accessor for iOSPeoplePickerAddButtonHandler()
{
  return objc_opt_self();
}

uint64_t sub_1BD0767A8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed CNComposeRecipient) -> (@out ())(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t *);
  uint64_t v4;

  v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  v4 = a1;
  return v2(&v4);
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@guaranteed CNComposeRecipient) -> ()(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 16))(*a1);
}

uint64_t outlined destroy of Any?(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Any?);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSaySfG_Sfs5NeverOTg5108_s15ConversationKit13AudioPowerTapC16validatedSamples33_00240A3F10F7B5AE9F613A7AA708052ALLySaySfGAFFS2fXEfU_0F3Kit0hiJ0CAFTf1cn_n(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v5;
  uint64_t v7;
  int *v8;
  int v9;
  unint64_t v10;
  unint64_t v11;
  int v13;
  int v14;
  uint64_t v15;

  v3 = v2;
  v5 = *(_QWORD *)(a1 + 16);
  if (v5)
  {
    v15 = MEMORY[0x1E0DEE9D8];
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, v5, 0);
    v7 = v15;
    v8 = (int *)(a1 + 32);
    while (1)
    {
      v13 = *v8;
      closure #1 in AudioPowerTap.validatedSamples(_:)(&v13, a2, &v14);
      if (v3)
        break;
      v3 = 0;
      v9 = v14;
      v15 = v7;
      v11 = *(_QWORD *)(v7 + 16);
      v10 = *(_QWORD *)(v7 + 24);
      if (v11 >= v10 >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)((char *)(v10 > 1), v11 + 1, 1);
        v7 = v15;
      }
      *(_QWORD *)(v7 + 16) = v11 + 1;
      *(_DWORD *)(v7 + 4 * v11 + 32) = v9;
      ++v8;
      if (!--v5)
      {
        swift_release();
        goto LABEL_10;
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
  }
  else
  {
    swift_release();
    v7 = MEMORY[0x1E0DEE9D8];
LABEL_10:
    swift_bridgeObjectRelease();
  }
  return v7;
}

uint64_t AudioSampleNormalizer.description.getter(uint64_t a1, uint64_t (**a2)(uint64_t, uint64_t))
{
  uint64_t MetatypeMetadata;
  Swift::String v5;
  int v6;
  Swift::String v7;
  int v8;
  uint64_t DynamicType;
  uint64_t v11;
  unint64_t v12;
  Swift::String v13;
  Swift::String v14;
  Swift::String v15;
  Swift::String v16;

  v11 = 0;
  v12 = 0xE000000000000000;
  _StringGuts.grow(_:)(53);
  DynamicType = swift_getDynamicType();
  MetatypeMetadata = swift_getMetatypeMetadata();
  v13._countAndFlagsBits = >> prefix<A>(_:)((uint64_t)&DynamicType, MetatypeMetadata);
  OUTLINED_FUNCTION_49(v13);
  OUTLINED_FUNCTION_133();
  v5._countAndFlagsBits = 0x52656C706D617328;
  v5._object = (void *)0xED0000203A657461;
  String.append(_:)(v5);
  OUTLINED_FUNCTION_45_9(a2[2]);
  LODWORD(DynamicType) = v6;
  v14._countAndFlagsBits = OUTLINED_FUNCTION_62_2();
  OUTLINED_FUNCTION_49(v14);
  swift_bridgeObjectRelease();
  v7._object = (void *)0x80000001BD66F6B0;
  v7._countAndFlagsBits = 0xD000000000000014;
  String.append(_:)(v7);
  OUTLINED_FUNCTION_45_9(a2[3]);
  LODWORD(DynamicType) = v8;
  v15._countAndFlagsBits = OUTLINED_FUNCTION_62_2();
  OUTLINED_FUNCTION_49(v15);
  OUTLINED_FUNCTION_133();
  OUTLINED_FUNCTION_22_17();
  LOBYTE(DynamicType) = a2[4](a1, (uint64_t)a2) & 1;
  v16._countAndFlagsBits = String.init<A>(reflecting:)();
  OUTLINED_FUNCTION_49(v16);
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_56_4();
  return v11;
}

BOOL static AudioPowerTap.Errors.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

void AudioPowerTap.Errors.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
  Hasher._combine(_:)(a2);
  OUTLINED_FUNCTION_0();
}

void AudioPowerTap.Errors.hashValue.getter(unsigned __int8 a1)
{
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1);
  Hasher._finalize()();
  OUTLINED_FUNCTION_26_11();
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance AudioPowerTap.Errors(char *a1, char *a2)
{
  return static AudioPowerTap.Errors.== infix(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance AudioPowerTap.Errors()
{
  unsigned __int8 *v0;

  AudioPowerTap.Errors.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance AudioPowerTap.Errors(uint64_t a1)
{
  unsigned __int8 *v1;

  AudioPowerTap.Errors.hash(into:)(a1, *v1);
}

uint64_t AudioPowerTap.TapType.description.getter(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6E696C6E776F642ELL;
  else
    return 0x6B6E696C70752ELL;
}

ConversationKit::AudioPowerTap::TapType_optional __swiftcall AudioPowerTap.TapType.init(rawValue:)(Swift::Int32 rawValue)
{
  ConversationKit::AudioPowerTap::TapType_optional v1;

  if (rawValue == -2)
    v1.value = ConversationKit_AudioPowerTap_TapType_downlink;
  else
    v1.value = ConversationKit_AudioPowerTap_TapType_unknownDefault;
  if (rawValue == -3)
    return 0;
  else
    return v1;
}

uint64_t AudioPowerTap.TapType.rawValue.getter(char a1)
{
  return (a1 & 1u) - 3;
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance AudioPowerTap.TapType(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance AudioPowerTap.TapType()
{
  specialized RawRepresentable<>.hashValue.getter();
}

void protocol witness for Hashable.hash(into:) in conformance AudioPowerTap.TapType(uint64_t a1)
{
  char *v1;

  specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance AudioPowerTap.TapType()
{
  specialized RawRepresentable<>._rawHashValue(seed:)();
}

ConversationKit::AudioPowerTap::TapType_optional protocol witness for RawRepresentable.init(rawValue:) in conformance AudioPowerTap.TapType@<W0>(Swift::Int32 *a1@<X0>, ConversationKit::AudioPowerTap::TapType_optional *a2@<X8>)
{
  ConversationKit::AudioPowerTap::TapType_optional result;

  result.value = AudioPowerTap.TapType.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance AudioPowerTap.TapType(_DWORD *a1@<X8>)
{
  char *v1;

  *a1 = AudioPowerTap.TapType.rawValue.getter(*v1);
  OUTLINED_FUNCTION_0();
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance AudioPowerTap.TapType()
{
  char *v0;

  return AudioPowerTap.TapType.description.getter(*v0);
}

id AudioPowerTap.format.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

id AudioPowerTap.tapDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  if (*(_BYTE *)(v0 + 24))
    v2 = 4294967294;
  else
    v2 = 4294967293;
  return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C924E8]), sel_initProcessTapWithFormat_PID_, v1, v2);
}

uint64_t AudioPowerTap.tapType.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t AudioPowerTap.lock.getter()
{
  return swift_retain();
}

uint64_t AudioPowerTap.normalizer.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return outlined init with copy of IDSLookupManager(v1 + 40, a1);
}

uint64_t key path setter for AudioPowerTap.waveform : AudioPowerTap(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))(**(_QWORD **)a2 + 168);
  v3 = swift_retain();
  return v2(v3);
}

uint64_t AudioPowerTap.waveform.getter()
{
  OUTLINED_FUNCTION_2_0();
  return swift_retain();
}

uint64_t AudioPowerTap.waveform.setter(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v1 + 80) = a1;
  return swift_release();
}

uint64_t (*AudioPowerTap.waveform.modify())()
{
  OUTLINED_FUNCTION_2_0();
  return CallRecordingPillViewController.cancellable.modify;
}

void AudioPowerTap.__allocating_init(type:normalizer:)(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9[5];

  v4 = v3;
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 48);
  v8 = a1 & 1;
  v9[3] = a2;
  v9[4] = a3;
  __swift_allocate_boxed_opaque_existential_1(v9);
  v7(v8, a2, a3);
  (*(void (**)(uint64_t, uint64_t *))(v4 + 280))(v8, v9);
  OUTLINED_FUNCTION_26_11();
}

void AudioPowerTap.__allocating_init(type:normalizer:)(char a1, __int128 *a2)
{
  char v3;

  v3 = a1 & 1;
  OUTLINED_FUNCTION_15();
  AudioPowerTap.init(type:normalizer:)(v3, a2);
  OUTLINED_FUNCTION_18();
}

uint64_t AudioPowerTap.init(type:normalizer:)(char a1, __int128 *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  _DWORD *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  void *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;

  v3 = v2;
  type metadata accessor for Lock();
  v6 = OUTLINED_FUNCTION_15();
  v7 = (_DWORD *)OUTLINED_FUNCTION_105();
  *(_QWORD *)(v6 + 16) = v7;
  *v7 = 0;
  *(_QWORD *)(v3 + 32) = v6;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CurrentValueSubject<[Float]?, Never>);
  swift_allocObject();
  *(_QWORD *)(v3 + 80) = CurrentValueSubject.init(_:)();
  *(_QWORD *)(v3 + 88) = 0;
  *(_QWORD *)(v3 + 96) = 0;
  *(_QWORD *)(v3 + 104) = 0;
  *(_BYTE *)(v3 + 112) = 0;
  v8 = *((_QWORD *)a2 + 3);
  v9 = *((_QWORD *)a2 + 4);
  __swift_project_boxed_opaque_existential_1(a2, v8);
  v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C89AA8]), sel_initWithCommonFormat_sampleRate_channels_interleaved_, 1, 1, 1, (*(float (**)(uint64_t, uint64_t))(v9 + 16))(v8, v9));
  if (v10)
  {
    *(_QWORD *)(v3 + 16) = v10;
    *(_BYTE *)(v3 + 24) = a1 & 1;
    outlined init with take of Notice(a2, v3 + 40);
  }
  else
  {
    if (one-time initialization token for audioTap != -1)
      swift_once();
    v11 = OUTLINED_FUNCTION_17_2();
    v12 = (void *)__swift_project_value_buffer(v11, (uint64_t)&static Logger.audioTap);
    Logger.logObject.getter();
    v13 = OUTLINED_FUNCTION_55_6();
    if (OUTLINED_FUNCTION_51_3(v13))
    {
      *(_WORD *)OUTLINED_FUNCTION_105() = 0;
      OUTLINED_FUNCTION_36_15(&dword_1BD004000, v14, v15, "Failed to create AVAudioFormat");
      OUTLINED_FUNCTION_60();
    }

    swift_release();
    swift_release();

    type metadata accessor for AudioPowerTap();
    swift_deallocPartialClassInstance();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a2);
    return 0;
  }
  return v3;
}

void AudioPowerTap.deinit(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  id *v22;
  uint64_t v23;
  uint64_t v24;
  id *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  os_log_type_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;

  OUTLINED_FUNCTION_42_2();
  a21 = v23;
  a22 = v24;
  v25 = v22;
  if (one-time initialization token for audioTap != -1)
    swift_once();
  v26 = OUTLINED_FUNCTION_17_2();
  v27 = __swift_project_value_buffer(v26, (uint64_t)&static Logger.audioTap);
  OUTLINED_FUNCTION_29_1();
  v28 = (void *)Logger.logObject.getter();
  v29 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_4_14(v29))
  {
    OUTLINED_FUNCTION_105();
    a10 = OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_46_2(4.8149e-34);
    swift_retain();
    v30 = String.init<A>(reflecting:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v30, v31, &a10);
    OUTLINED_FUNCTION_59_1();
    OUTLINED_FUNCTION_23_0();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_3_23(&dword_1BD004000, v32, v33, "Deinit %s");
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

  v34 = OUTLINED_FUNCTION_23_0();
  if (((*((uint64_t (**)(uint64_t))*v25 + 37))(v34) & 1) != 0)
  {
    v35 = v27;
    Logger.logObject.getter();
    v36 = OUTLINED_FUNCTION_55_6();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = (uint8_t *)OUTLINED_FUNCTION_105();
      *(_WORD *)v37 = 0;
      _os_log_impl(&dword_1BD004000, v35, v36, "AudioPowerTap is being stopped on deinit which is errorprone, leading to hangs in main", v37, 2u);
      OUTLINED_FUNCTION_60();
    }

  }
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v25 + 5));
  swift_release();

  OUTLINED_FUNCTION_9_5();
}

#error "1BD077218: call analysis failed (funcsize=8)"

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> AudioPowerTap.start()()
{
  _QWORD *v0;
  void *v1;
  os_log_type_t v2;
  _QWORD *v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t (*v13)(uint64_t);
  void *v14;
  id v15;
  const AudioStreamBasicDescription *v16;
  OSStatus v17;
  uint64_t v18;
  OpaqueAudioQueue *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  void *v24;
  id v25;
  os_log_type_t v26;
  float *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char v31;
  double v32;
  float v33;
  uint64_t v34;
  uint64_t v35;
  float v36;
  float v37;
  float v38;
  UInt32 v39;
  AudioQueueBufferRef *v40;
  OSStatus Buffer;
  os_log_type_t v42;
  float *v43;
  uint64_t v44;
  uint64_t v45;
  const char *v46;
  os_log_type_t v47;
  float *v48;
  OSStatus v49;
  OSStatus v50;
  os_log_type_t v51;
  uint64_t v52;
  uint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  uint8_t *v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59[3];
  uint64_t v60[3];

  v3 = v0;
  if (one-time initialization token for audioTap != -1)
    swift_once();
  v4 = type metadata accessor for Logger();
  __swift_project_value_buffer(v4, (uint64_t)&static Logger.audioTap);
  OUTLINED_FUNCTION_29_1();
  v5 = Logger.logObject.getter();
  v6 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_41_3(v6))
  {
    v7 = (uint8_t *)OUTLINED_FUNCTION_105();
    v60[0] = OUTLINED_FUNCTION_105();
    *(_DWORD *)v7 = 136315138;
    type metadata accessor for AudioPowerTap();
    OUTLINED_FUNCTION_63_6();
    v8 = String.init<A>(reflecting:)();
    v59[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v8, v9, v60);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_24_9();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v5, v2, "Starting %s", v7, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_60();
  }

  OUTLINED_FUNCTION_24_9();
  v10 = v3[4];
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v10 + 16));
  v11 = swift_beginAccess();
  if (v3[12])
  {
    lazy protocol witness table accessor for type AudioPowerTap.Errors and conformance AudioPowerTap.Errors();
    OUTLINED_FUNCTION_10_8();
    *v12 = 0;
LABEL_12:
    swift_willThrow();
LABEL_13:
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v10 + 16));
    return;
  }
  v13 = *(uint64_t (**)(uint64_t))(*v3 + 152);
  v14 = (void *)v13(v11);
  v15 = objc_msgSend(v14, sel_format);

  v16 = (const AudioStreamBasicDescription *)objc_msgSend(v15, sel_streamDescription);
  OUTLINED_FUNCTION_60_0();
  v17 = AudioQueueNewInput(v16, (AudioQueueInputCallback)@objc closure #1 in AudioPowerTap.start(), v3, 0, 0, 0x800u, (AudioQueueRef *)v3 + 12);
  v18 = swift_endAccess();
  v19 = (OpaqueAudioQueue *)v3[12];
  if (!v19 || v17)
  {
    OUTLINED_FUNCTION_28_11();
    v20 = OUTLINED_FUNCTION_37_4();
    if (OUTLINED_FUNCTION_13_0(v20))
    {
      *(_DWORD *)OUTLINED_FUNCTION_12_18() = 67109120;
      LODWORD(v59[0]) = v17;
      OUTLINED_FUNCTION_10_32();
      OUTLINED_FUNCTION_11_22(&dword_1BD004000, v21, v22, "Failed to create processingQueue, OSStatus: %d");
      OUTLINED_FUNCTION_60();
    }

    lazy protocol witness table accessor for type AudioPowerTap.Errors and conformance AudioPowerTap.Errors();
    OUTLINED_FUNCTION_10_8();
    *v23 = 1;
    goto LABEL_12;
  }
  v24 = (void *)v13(v18);
  v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C924E0]), sel_initWithTapDescription_, v24);

  if (AudioQueueSetProperty(v19, 0x71746F62u, v25, 8u))
  {
    OUTLINED_FUNCTION_28_11();
    v26 = OUTLINED_FUNCTION_37_4();
    if (OUTLINED_FUNCTION_13_0(v26))
    {
      v27 = (float *)OUTLINED_FUNCTION_12_18();
      OUTLINED_FUNCTION_7_37(v27, 1.5047e-36);
      OUTLINED_FUNCTION_11_22(&dword_1BD004000, v28, v29, "Failed to configure AudioQueue, status: %d");
      OUTLINED_FUNCTION_60();
    }

    lazy protocol witness table accessor for type AudioPowerTap.Errors and conformance AudioPowerTap.Errors();
    OUTLINED_FUNCTION_10_8();
    v31 = 2;
    goto LABEL_30;
  }
  objc_msgSend((id)v3[2], sel_sampleRate);
  v33 = v32;
  v34 = v3[8];
  v35 = v3[9];
  __swift_project_boxed_opaque_existential_1(v3 + 5, v34);
  v36 = (*(float (**)(uint64_t, uint64_t))(v35 + 24))(v34, v35);
  v37 = log2f(v33 / v36);
  v38 = exp2f(ceilf(v37));
  if ((~LODWORD(v38) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_39;
  }
  if (v38 <= -1.0)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  if (v38 >= 4295000000.0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v39 = v38;
  v40 = (AudioQueueBufferRef *)(v3 + 11);
  OUTLINED_FUNCTION_60_0();
  Buffer = AudioQueueAllocateBuffer(v19, v39, (AudioQueueBufferRef *)v3 + 11);
  swift_endAccess();
  if (Buffer)
  {
    OUTLINED_FUNCTION_28_11();
    v42 = OUTLINED_FUNCTION_37_4();
    if (OUTLINED_FUNCTION_13_0(v42))
    {
      v43 = (float *)OUTLINED_FUNCTION_12_18();
      OUTLINED_FUNCTION_7_37(v43, 1.5047e-36);
      v46 = "Failed to allocate buffer, status: %d";
      goto LABEL_28;
    }
    goto LABEL_29;
  }
  if (*v40)
  {
    if (!AudioQueueEnqueueBuffer(v19, *v40, 0, 0))
    {
      v49 = AudioQueueStart(v19, 0);
      if (!v49)
      {
        OUTLINED_FUNCTION_29_1();
        v54 = OUTLINED_FUNCTION_28_11();
        v55 = static os_log_type_t.default.getter();
        if (OUTLINED_FUNCTION_41_3(v55))
        {
          v56 = (uint8_t *)OUTLINED_FUNCTION_105();
          v59[0] = OUTLINED_FUNCTION_105();
          *(_DWORD *)v56 = 136315138;
          type metadata accessor for AudioPowerTap();
          OUTLINED_FUNCTION_63_6();
          v57 = String.init<A>(reflecting:)();
          getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v57, v58, v59);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          OUTLINED_FUNCTION_24_9();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1BD004000, v54, (os_log_type_t)v19, "Started %s", v56, 0xCu);
          swift_arrayDestroy();
          OUTLINED_FUNCTION_60();
        }

        OUTLINED_FUNCTION_24_9();
        goto LABEL_13;
      }
      v50 = v49;
      OUTLINED_FUNCTION_28_11();
      v51 = OUTLINED_FUNCTION_37_4();
      if (OUTLINED_FUNCTION_13_0(v51))
      {
        *(_DWORD *)OUTLINED_FUNCTION_12_18() = 67109120;
        LODWORD(v59[0]) = v50;
        OUTLINED_FUNCTION_10_32();
        OUTLINED_FUNCTION_11_22(&dword_1BD004000, v52, v53, "Failed to start AudioQueue, status: %d");
        OUTLINED_FUNCTION_60();
      }

      lazy protocol witness table accessor for type AudioPowerTap.Errors and conformance AudioPowerTap.Errors();
      OUTLINED_FUNCTION_10_8();
      v31 = 3;
      goto LABEL_30;
    }
    OUTLINED_FUNCTION_28_11();
    v47 = OUTLINED_FUNCTION_37_4();
    if (OUTLINED_FUNCTION_13_0(v47))
    {
      v48 = (float *)OUTLINED_FUNCTION_12_18();
      OUTLINED_FUNCTION_7_37(v48, 1.5047e-36);
      v46 = "Failed to enqueue buffer, status: %d";
LABEL_28:
      OUTLINED_FUNCTION_11_22(&dword_1BD004000, v44, v45, v46);
      OUTLINED_FUNCTION_60();
    }
LABEL_29:

    lazy protocol witness table accessor for type AudioPowerTap.Errors and conformance AudioPowerTap.Errors();
    OUTLINED_FUNCTION_10_8();
    v31 = 4;
LABEL_30:
    *v30 = v31;
    swift_willThrow();

    goto LABEL_13;
  }
LABEL_41:
  __break(1u);
}

uint64_t closure #1 in AudioPowerTap.start()(uint64_t result, OpaqueAudioQueue *a2, AudioQueueBuffer *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  UInt32 mAudioDataByteSize;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;

  if (result)
  {
    v8 = result;
    if (one-time initialization token for audioTap != -1)
      swift_once();
    v9 = type metadata accessor for Logger();
    __swift_project_value_buffer(v9, (uint64_t)&static Logger.audioTap);
    v10 = Logger.logObject.getter();
    v11 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = swift_slowAlloc();
      v13 = swift_slowAlloc();
      v22 = v13;
      *(_DWORD *)v12 = 136315394;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UnsafeMutablePointer<AudioQueueBuffer>);
      v14 = String.init<A>(reflecting:)();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v14, v15, &v22);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v12 + 12) = 2080;
      v16 = String.init<A>(reflecting:)();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v16, v17, &v22);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BD004000, v10, v11, "queueBufferRef %s ptr %s", (uint8_t *)v12, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v13, -1, -1);
      MEMORY[0x1C3B751B8](v12, -1, -1);
    }

    mAudioDataByteSize = a3->mAudioDataByteSize;
    swift_retain();
    if (mAudioDataByteSize >> 2 == (_DWORD)a5)
    {
      (*(void (**)(void *const, uint64_t))(*(_QWORD *)v8 + 304))(a3->mAudioData, a5);
      AudioQueueEnqueueBuffer(a2, a3, 0, 0);
    }
    else
    {
      v19 = Logger.logObject.getter();
      v20 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v19, v20))
      {
        v21 = swift_slowAlloc();
        *(_DWORD *)v21 = 67109632;
        LODWORD(v22) = a5;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v21 + 8) = 1024;
        LODWORD(v22) = mAudioDataByteSize >> 2;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v21 + 14) = 1024;
        LODWORD(v22) = mAudioDataByteSize;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl(&dword_1BD004000, v19, v20, "Invalid buffer passed. sampleCount %u is not expected value (%u) for buffer: %u", (uint8_t *)v21, 0x14u);
        MEMORY[0x1C3B751B8](v21, -1, -1);
      }

    }
    return swift_release();
  }
  return result;
}

Swift::Bool __swiftcall AudioPowerTap.stop()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  OpaqueAudioQueue *v5;
  uint64_t v6;
  void *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  unint64_t v16;
  void *v17;
  os_log_type_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25[14];
  uint64_t v26;
  uint64_t v27;

  OUTLINED_FUNCTION_3_0();
  v26 = v1;
  v27 = v2;
  v3 = v0;
  v4 = *(_QWORD *)(v0 + 32);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v4 + 16));
  OUTLINED_FUNCTION_2_0();
  v5 = *(OpaqueAudioQueue **)(v3 + 96);
  if (v5)
  {
    v24 = v4;
    if (objc_msgSend((id)objc_opt_self(), sel_isMainThread))
    {
      if (one-time initialization token for audioTap != -1)
        swift_once();
      v6 = OUTLINED_FUNCTION_17_2();
      v7 = (void *)__swift_project_value_buffer(v6, (uint64_t)&static Logger.audioTap);
      Logger.logObject.getter();
      v8 = OUTLINED_FUNCTION_55_6();
      if (OUTLINED_FUNCTION_51_3(v8))
      {
        *(_WORD *)OUTLINED_FUNCTION_105() = 0;
        OUTLINED_FUNCTION_36_15(&dword_1BD004000, v9, v10, "AudioPowerTap is being stopped on main thread which causes hangs");
        OUTLINED_FUNCTION_60();
      }

    }
    if (one-time initialization token for audioTap != -1)
      swift_once();
    v11 = OUTLINED_FUNCTION_17_2();
    __swift_project_value_buffer(v11, (uint64_t)&static Logger.audioTap);
    OUTLINED_FUNCTION_29_1();
    v12 = Logger.logObject.getter();
    v13 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)OUTLINED_FUNCTION_105();
      v25[0] = OUTLINED_FUNCTION_105();
      *(_DWORD *)v14 = 136315138;
      type metadata accessor for AudioPowerTap();
      swift_retain();
      v15 = String.init<A>(reflecting:)();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v15, v16, v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_23_0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BD004000, v12, v13, "Stopping %s", v14, 0xCu);
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_60();
    }

    OUTLINED_FUNCTION_23_0();
    AudioQueuePause(v5);
    AudioQueueStop(v5, 1u);
    AudioQueueDispose(v5, 1u);
    *(_QWORD *)(v3 + 96) = 0;
    OUTLINED_FUNCTION_29_1();
    v17 = (void *)Logger.logObject.getter();
    v18 = static os_log_type_t.default.getter();
    if (OUTLINED_FUNCTION_4_14(v18))
    {
      OUTLINED_FUNCTION_105();
      v25[0] = OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_46_2(4.8149e-34);
      swift_retain();
      v19 = String.init<A>(reflecting:)();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v19, v20, v25);
      OUTLINED_FUNCTION_59_1();
      OUTLINED_FUNCTION_23_0();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_3_23(&dword_1BD004000, v21, v22, "Stopped %s");
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_60();
    }

    OUTLINED_FUNCTION_23_0();
    v4 = v24;
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 16));
  return v5 != 0;
}

uint64_t AudioPowerTap.process(_:count:)(unint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20[2];

  v3 = v2;
  if (one-time initialization token for audioTap != -1)
    swift_once();
  v6 = OUTLINED_FUNCTION_17_2();
  __swift_project_value_buffer(v6, (uint64_t)&static Logger.audioTap);
  OUTLINED_FUNCTION_29_1();
  v7 = Logger.logObject.getter();
  v8 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = OUTLINED_FUNCTION_105();
    v20[0] = OUTLINED_FUNCTION_105();
    *(_DWORD *)v9 = 136315394;
    v10 = String.init<A>(reflecting:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v10, v11, v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_23_0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2080;
    specialized _copyCollectionToContiguousArray<A>(_:)(a1, a2);
    v12 = MEMORY[0x1C3B7304C]();
    v14 = v13;
    swift_release();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v12, v14, v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_133();
    _os_log_impl(&dword_1BD004000, v7, v8, "[%s] Buffer: %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_60();
  }

  v15 = OUTLINED_FUNCTION_23_0();
  (*(void (**)(uint64_t))(*v3 + 160))(v15);
  v16 = v3[8];
  v17 = v3[9];
  __swift_project_boxed_opaque_existential_1(v3 + 5, v16);
  (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v17 + 40))(a1, a2, v16, v17);
  swift_retain();
  v18 = swift_bridgeObjectRetain();
  _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSaySfG_Sfs5NeverOTg5108_s15ConversationKit13AudioPowerTapC16validatedSamples33_00240A3F10F7B5AE9F613A7AA708052ALLySaySfGAFFS2fXEfU_0F3Kit0hiJ0CAFTf1cn_n(v18, (uint64_t)v3);
  swift_bridgeObjectRelease();
  CurrentValueSubject.send(_:)();
  OUTLINED_FUNCTION_13_3();
  return swift_release();
}

void closure #1 in AudioPowerTap.validatedSamples(_:)(int *a1@<X0>, uint64_t a2@<X1>, _DWORD *a3@<X8>)
{
  int v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *a1;
  if ((~*a1 & 0x7F800000) == 0 && (v4 & 0x7FFFFF) != 0)
  {
    if ((*(_BYTE *)(a2 + 112) & 1) == 0)
    {
      *(_BYTE *)(a2 + 112) = 1;
      if (one-time initialization token for audioTap != -1)
        swift_once();
      v5 = type metadata accessor for Logger();
      __swift_project_value_buffer(v5, (uint64_t)&static Logger.audioTap);
      swift_bridgeObjectRetain_n();
      swift_retain_n();
      v6 = Logger.logObject.getter();
      v7 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v6, v7))
      {
        v8 = swift_slowAlloc();
        v13 = swift_slowAlloc();
        v14 = v13;
        *(_DWORD *)v8 = 136315394;
        v9 = String.init<A>(reflecting:)();
        getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v9, v10, &v14);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v8 + 12) = 2080;
        type metadata accessor for AudioPowerTap();
        swift_retain();
        v11 = String.init<A>(reflecting:)();
        getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v11, v12, &v14);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BD004000, v6, v7, "Found NaN when processing %s samples in %s", (uint8_t *)v8, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1C3B751B8](v13, -1, -1);
        MEMORY[0x1C3B751B8](v8, -1, -1);

      }
      else
      {

        swift_release_n();
        swift_bridgeObjectRelease_n();
      }
    }
    v4 = 0;
  }
  *a3 = v4;
}

uint64_t AudioPowerTap.description.getter()
{
  uint64_t v0;
  Swift::String v1;
  Swift::String v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  Swift::String v7;
  Swift::String v8;
  uint64_t v9;
  void *v10;
  void *v11;
  Swift::String v12;
  _QWORD v14[5];
  uint64_t v15;
  unint64_t v16;

  v14[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(73);
  v15 = 0;
  v16 = 0xE000000000000000;
  v1._countAndFlagsBits = 0xD000000000000014;
  v1._object = (void *)0x80000001BD66F6D0;
  String.append(_:)(v1);
  v14[0] = v0;
  _print_unlocked<A, B>(_:_:)();
  v2._object = (void *)0x80000001BD66F6F0;
  v2._countAndFlagsBits = 0xD000000000000013;
  String.append(_:)(v2);
  OUTLINED_FUNCTION_2_0();
  if (*(_QWORD *)(v0 + 96))
  {
    v14[0] = *(_QWORD *)(v0 + 96);
    v3 = String.init<A>(reflecting:)();
    v5 = v4;
  }
  else
  {
    v5 = 0xE300000000000000;
    v3 = 7104878;
  }
  v6 = v5;
  String.append(_:)(*(Swift::String *)&v3);
  OUTLINED_FUNCTION_2_1();
  OUTLINED_FUNCTION_22_17();
  LOBYTE(v14[0]) = *(_BYTE *)(v0 + 24);
  v7._countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v7);
  OUTLINED_FUNCTION_2_1();
  v8._countAndFlagsBits = 0x6C616D726F6E202CLL;
  v8._object = (void *)0xEE00203A72657A69;
  String.append(_:)(v8);
  outlined init with copy of IDSLookupManager(v0 + 40, (uint64_t)v14);
  v9 = specialized >> prefix<A>(_:)((uint64_t)v14);
  v11 = v10;
  outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v14, &demangling cache variable for type metadata for AudioSampleNormalizer?);
  v12._countAndFlagsBits = v9;
  v12._object = v11;
  String.append(_:)(v12);
  OUTLINED_FUNCTION_2_1();
  OUTLINED_FUNCTION_56_4();
  return v15;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance AudioPowerTap()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 320))();
}

uint64_t type metadata accessor for AudioPowerTap()
{
  return objc_opt_self();
}

unint64_t lazy protocol witness table accessor for type AudioPowerTap.Errors and conformance AudioPowerTap.Errors()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type AudioPowerTap.Errors and conformance AudioPowerTap.Errors;
  if (!lazy protocol witness table cache variable for type AudioPowerTap.Errors and conformance AudioPowerTap.Errors)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for AudioPowerTap.Errors, &type metadata for AudioPowerTap.Errors);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AudioPowerTap.Errors and conformance AudioPowerTap.Errors);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type AudioPowerTap.Errors and conformance AudioPowerTap.Errors;
  if (!lazy protocol witness table cache variable for type AudioPowerTap.Errors and conformance AudioPowerTap.Errors)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for AudioPowerTap.Errors, &type metadata for AudioPowerTap.Errors);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AudioPowerTap.Errors and conformance AudioPowerTap.Errors);
  }
  return result;
}

uint64_t specialized _copyCollectionToContiguousArray<A>(_:)(uint64_t a1)
{
  return specialized _copyCollectionToContiguousArray<A>(_:)(a1, (unint64_t *)&lazy cache variable for type metadata for TUConversation, 0x1E0DBD240, (unint64_t *)&lazy protocol witness table cache variable for type TUConversation and conformance NSObject);
}

{
  return specialized _copyCollectionToContiguousArray<A>(_:)(a1, (unint64_t *)&lazy cache variable for type metadata for TUConversationActivitySession, 0x1E0DBD278, &lazy protocol witness table cache variable for type TUConversationActivitySession and conformance NSObject);
}

{
  return specialized _copyCollectionToContiguousArray<A>(_:)(a1, (unint64_t *)&lazy cache variable for type metadata for SGURL, 0x1E0D19980, (unint64_t *)&lazy protocol witness table cache variable for type SGURL and conformance NSObject);
}

{
  return specialized _copyCollectionToContiguousArray<A>(_:)(a1, (unint64_t *)&lazy cache variable for type metadata for TUHandle, 0x1E0DBD2F8, (unint64_t *)&lazy protocol witness table cache variable for type TUHandle and conformance NSObject);
}

void specialized _copyCollectionToContiguousArray<A>(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  const void *v6;
  uint64_t v7;
  BOOL v8;
  _QWORD v9[5];

  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
    goto LABEL_9;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UUID>);
  OUTLINED_FUNCTION_64_0();
  type metadata accessor for UUID();
  v6 = (const void *)OUTLINED_FUNCTION_4_25();
  OUTLINED_FUNCTION_65_4(v6);
  if (v2)
  {
    OUTLINED_FUNCTION_40_9();
    v8 = v8 && v2 == -1;
    if (!v8)
    {
      *(_QWORD *)(v1 + 16) = v4;
      *(_QWORD *)(v1 + 24) = 2 * (v7 / v2);
      swift_bridgeObjectRetain();
      specialized Sequence._copySequenceContents(initializing:)(v9, v1 + v3, v4, a1);
      OUTLINED_FUNCTION_54_4();
      if (!v8)
        __break(1u);
LABEL_9:
      OUTLINED_FUNCTION_26_11();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t specialized _copyCollectionToContiguousArray<A>(_:)(uint64_t a1, unint64_t *a2, uint64_t a3, unint64_t *a4)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t result;
  char v12;
  _QWORD v13[5];

  if ((a1 & 0xC000000000000001) != 0)
  {
    v8 = __CocoaSet.count.getter();
    if (v8)
      goto LABEL_3;
    return MEMORY[0x1E0DEE9D8];
  }
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    return MEMORY[0x1E0DEE9D8];
LABEL_3:
  if (v8 <= 0)
  {
    v9 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    v9 = (_QWORD *)OUTLINED_FUNCTION_15();
    OUTLINED_FUNCTION_21_17(v9);
    v9[2] = v8;
    v9[3] = v10;
  }
  swift_bridgeObjectRetain();
  specialized Sequence._copySequenceContents(initializing:)(v13, v9 + 4, v8, a1, a2, a3, a4);
  result = OUTLINED_FUNCTION_54_4();
  if (!v12)
  {
    __break(1u);
    return result;
  }
  return (uint64_t)v9;
}

_QWORD *specialized _copyCollectionToContiguousArray<A>(_:)(unint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  size_t v5;

  if (!a2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (a2 <= 0)
  {
    v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Float>);
    v4 = (_QWORD *)swift_allocObject();
    v5 = _swift_stdlib_malloc_size(v4);
    v4[2] = a2;
    v4[3] = 2 * ((uint64_t)(v5 - 32) / 4);
  }
  specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2, (unint64_t)(v4 + 4));
  return v4;
}

unint64_t lazy protocol witness table accessor for type AudioPowerTap.TapType and conformance AudioPowerTap.TapType()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type AudioPowerTap.TapType and conformance AudioPowerTap.TapType;
  if (!lazy protocol witness table cache variable for type AudioPowerTap.TapType and conformance AudioPowerTap.TapType)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for AudioPowerTap.TapType, &type metadata for AudioPowerTap.TapType);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AudioPowerTap.TapType and conformance AudioPowerTap.TapType);
  }
  return result;
}

void sub_1BD078ACC(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 160))();
  OUTLINED_FUNCTION_0();
}

uint64_t dispatch thunk of AudioSampleNormalizer.sampleRate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of AudioSampleNormalizer.refreshFrequency.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of AudioSampleNormalizer.tapType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))() & 1;
}

uint64_t dispatch thunk of AudioSampleNormalizer.process(_:sampleCount:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of AudioSampleNormalizer.init(with:)(char a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(_QWORD))(a3 + 48))(a1 & 1);
}

uint64_t method lookup function for AudioPowerTap()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AudioPowerTap.tapDescription.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of AudioPowerTap.waveform.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of AudioPowerTap.waveform.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of AudioPowerTap.waveform.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of AudioPowerTap.__allocating_init(type:normalizer:)(char a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 280))(a1 & 1);
}

uint64_t dispatch thunk of AudioPowerTap.start()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 288))();
}

uint64_t dispatch thunk of AudioPowerTap.stop()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 296))();
}

uint64_t dispatch thunk of AudioPowerTap.process(_:count:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 304))();
}

uint64_t dispatch thunk of AudioPowerTap.description.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 320))();
}

uint64_t getEnumTagSinglePayload for AudioPowerTap.Errors(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFC)
  {
    if (a2 + 4 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 4) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 5;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v5 = v6 - 5;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for AudioPowerTap.Errors(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1BD078CB0 + 4 * byte_1BD6458E5[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1BD078CE4 + 4 * byte_1BD6458E0[v4]))();
}

uint64_t sub_1BD078CE4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD078CEC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD078CF4);
  return result;
}

uint64_t sub_1BD078D00(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD078D08);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1BD078D0C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD078D14(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AudioPowerTap.Errors()
{
  return &type metadata for AudioPowerTap.Errors;
}

uint64_t storeEnumTagSinglePayload for AudioPowerTap.TapType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BD078D7C + 4 * byte_1BD6458EF[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BD078DB0 + 4 * byte_1BD6458EA[v4]))();
}

uint64_t sub_1BD078DB0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD078DB8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD078DC0);
  return result;
}

uint64_t sub_1BD078DCC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD078DD4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BD078DD8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD078DE0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AudioPowerTap.TapType()
{
  return &type metadata for AudioPowerTap.TapType;
}

void specialized _copyCollectionToContiguousArray<A>(_:)()
{
  uint64_t v0;
  const void *v1;
  uint64_t v2;
  char v3;

  OUTLINED_FUNCTION_3_0();
  if (*(_QWORD *)(v0 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    v1 = (const void *)OUTLINED_FUNCTION_15();
    OUTLINED_FUNCTION_21_17(v1);
    OUTLINED_FUNCTION_14_32(v2);
    specialized Sequence._copySequenceContents(initializing:)();
    OUTLINED_FUNCTION_5_20();
    OUTLINED_FUNCTION_1_25();
    if (!v3)
      __break(1u);
  }
  OUTLINED_FUNCTION_0_20();
}

{
  uint64_t v0;
  const void *v1;
  size_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  OUTLINED_FUNCTION_3_0();
  if (*(_QWORD *)(v0 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
    v1 = (const void *)OUTLINED_FUNCTION_15();
    v2 = _swift_stdlib_malloc_size(v1);
    OUTLINED_FUNCTION_14_32(2 * ((uint64_t)(v2 - 32) / 16));
    specialized Sequence._copySequenceContents(initializing:)(v3, v4, v5, v6);
    OUTLINED_FUNCTION_5_20();
    OUTLINED_FUNCTION_1_25();
    if (!v7)
      __break(1u);
  }
  OUTLINED_FUNCTION_0_20();
}

{
  uint64_t v0;
  const void *v1;
  size_t v2;
  _QWORD *v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  OUTLINED_FUNCTION_3_0();
  if (*(_QWORD *)(v0 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<NoticePriority>);
    v1 = (const void *)OUTLINED_FUNCTION_15();
    v2 = _swift_stdlib_malloc_size(v1);
    OUTLINED_FUNCTION_14_32(2 * v2 - 64);
    specialized Sequence._copySequenceContents(initializing:)(v3, v4, v5, v6);
    OUTLINED_FUNCTION_5_20();
    OUTLINED_FUNCTION_1_25();
    if (!v7)
      __break(1u);
  }
  OUTLINED_FUNCTION_0_20();
}

{
  uint64_t v0;
  const void *v1;
  size_t v2;
  char v3;

  OUTLINED_FUNCTION_3_0();
  if (*(_QWORD *)(v0 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
    v1 = (const void *)OUTLINED_FUNCTION_15();
    v2 = _swift_stdlib_malloc_size(v1);
    OUTLINED_FUNCTION_14_32(2 * ((uint64_t)(v2 - 32) / 16));
    specialized Sequence._copySequenceContents(initializing:)();
    OUTLINED_FUNCTION_5_20();
    OUTLINED_FUNCTION_1_25();
    if (!v3)
      __break(1u);
  }
  OUTLINED_FUNCTION_0_20();
}

#error "1BD078F54: call analysis failed (funcsize=32)"

void specialized _copyCollectionToContiguousArray<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD), void (*a7)(uint64_t, uint64_t, char *))
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  uint64_t v19;

  v7 = a4 >> 1;
  v8 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
    goto LABEL_16;
  }
  if (!v8)
    goto LABEL_14;
  if (v8 > 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v13 = *(_QWORD *)(a6(0) - 8);
    v14 = *(_QWORD *)(v13 + 72);
    v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    v16 = (_QWORD *)swift_allocObject();
    v17 = _swift_stdlib_malloc_size(v16);
    if (v14)
    {
      if (v17 - v15 != 0x8000000000000000 || v14 != -1)
      {
        v16[2] = v8;
        v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
        goto LABEL_12;
      }
LABEL_17:
      __break(1u);
      goto LABEL_18;
    }
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_12:
  if (v7 != a3)
  {
    v19 = a6(0);
    a7(a2 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * a3, v8, (char *)v16+ ((*(unsigned __int8 *)(*(_QWORD *)(v19 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v19 - 8) + 80)));
LABEL_14:
    OUTLINED_FUNCTION_52_1();
    return;
  }
LABEL_18:
  __break(1u);
}

#error "1BD079128: call analysis failed (funcsize=33)"

void specialized _copyCollectionToContiguousArray<A>(_:)(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  unint64_t v5;

  v1 = a1;
  if (a1 >> 62)
    goto LABEL_8;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    if (v2 <= 0)
    {
      v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
      v3 = (_QWORD *)OUTLINED_FUNCTION_15();
      OUTLINED_FUNCTION_21_17(v3);
      v3[2] = v2;
      v3[3] = v4;
    }
    OUTLINED_FUNCTION_124();
    specialized Array._copyContents(initializing:)((uint64_t)(v3 + 4), v2, v1, (void (*)(uint64_t, _QWORD, uint64_t))specialized UnsafeMutablePointer.initialize(from:count:), &lazy protocol witness table cache variable for type [UIWindow] and conformance [A], &demangling cache variable for type metadata for [UIWindow], (uint64_t (*)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))specialized protocol witness for Collection.subscript.read in conformance [A]);
    v1 = v5;
    swift_bridgeObjectRelease();
    if (v1 == v2)
      break;
    __break(1u);
LABEL_8:
    OUTLINED_FUNCTION_124();
    v2 = _CocoaArrayWrapper.endIndex.getter();
    OUTLINED_FUNCTION_13_3();
  }
  OUTLINED_FUNCTION_18();
}

#error "1BD07930C: call analysis failed (funcsize=32)"

uint64_t specialized Array._copyContents(initializing:)(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return specialized Array._copyContents(initializing:)(a1, a2, a3, (void (*)(uint64_t, _QWORD, uint64_t))specialized UnsafeMutablePointer.initialize(from:count:), &lazy protocol witness table cache variable for type [NSLayoutConstraint] and conformance [A], &demangling cache variable for type metadata for [NSLayoutConstraint], (uint64_t (*)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))specialized protocol witness for Collection.subscript.read in conformance [A]);
}

{
  return specialized Array._copyContents(initializing:)(a1, a2, a3, (void (*)(uint64_t, _QWORD, uint64_t))specialized UnsafeMutablePointer.initialize(from:count:), &lazy protocol witness table cache variable for type [PickablePerson] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [PickablePerson], (uint64_t (*)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))specialized protocol witness for Collection.subscript.read in conformance [A]);
}

{
  return specialized Array._copyContents(initializing:)(a1, a2, a3, (void (*)(uint64_t, _QWORD, uint64_t))specialized UnsafeMutablePointer.initialize(from:count:), &lazy protocol witness table cache variable for type [TUHandle] and conformance [A], &demangling cache variable for type metadata for [TUHandle], (uint64_t (*)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))specialized protocol witness for Collection.subscript.read in conformance [A]);
}

{
  return specialized Array._copyContents(initializing:)(a1, a2, a3, (void (*)(uint64_t, _QWORD, uint64_t))specialized UnsafeMutablePointer.initialize(from:count:), &lazy protocol witness table cache variable for type [UILayoutGuide] and conformance [A], &demangling cache variable for type metadata for [UILayoutGuide], (uint64_t (*)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))specialized protocol witness for Collection.subscript.read in conformance [A]);
}

{
  return specialized Array._copyContents(initializing:)(a1, a2, a3, (void (*)(uint64_t, _QWORD, uint64_t))specialized UnsafeMutablePointer.initialize(from:count:), &lazy protocol witness table cache variable for type [UIMenuElement] and conformance [A], &demangling cache variable for type metadata for [UIMenuElement], (uint64_t (*)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))specialized protocol witness for Collection.subscript.read in conformance [A]);
}

{
  return specialized Array._copyContents(initializing:)(a1, a2, a3, (void (*)(uint64_t, _QWORD, uint64_t))specialized UnsafeMutablePointer.initialize(from:count:), &lazy protocol witness table cache variable for type [UIWindow] and conformance [A], &demangling cache variable for type metadata for [UIWindow], (uint64_t (*)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))specialized protocol witness for Collection.subscript.read in conformance [A]);
}

uint64_t specialized Array._copyContents(initializing:)(uint64_t result, uint64_t a2, unint64_t a3, void (*a4)(uint64_t, _QWORD, uint64_t), unint64_t *a5, uint64_t *a6, uint64_t (*a7)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))
{
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t i;
  uint64_t v20;
  void (*v21)(_BYTE *, _QWORD);
  id *v22;
  id v23;
  _BYTE v24[32];

  v13 = result;
  v14 = a3 >> 62;
  if (a3 >> 62)
  {
    OUTLINED_FUNCTION_124();
    v15 = _CocoaArrayWrapper.endIndex.getter();
    result = OUTLINED_FUNCTION_13_3();
    if (!v15)
      return a3;
  }
  else
  {
    v15 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v15)
      return a3;
  }
  if (v13)
  {
    if (v14)
    {
      OUTLINED_FUNCTION_124();
      v16 = _CocoaArrayWrapper.endIndex.getter();
      result = OUTLINED_FUNCTION_13_3();
      if (v16 <= a2)
      {
        if (v15 >= 1)
        {
          lazy protocol witness table accessor for type [UIWindow] and conformance [A](a5, a6);
          v18 = v17;
          OUTLINED_FUNCTION_124();
          for (i = 0; i != v15; ++i)
          {
            v20 = __swift_instantiateConcreteTypeFromMangledName(a6);
            v21 = (void (*)(_BYTE *, _QWORD))a7(v24, i, a3, v20, v18);
            v23 = *v22;
            v21(v24, 0);
            *(_QWORD *)(v13 + 8 * i) = v23;
          }
          OUTLINED_FUNCTION_13_3();
          return a3;
        }
        goto LABEL_16;
      }
    }
    else
    {
      if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) <= a2)
      {
        a4((a3 & 0xFFFFFFFFFFFFFF8) + 32, *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10), v13);
        return a3;
      }
      __break(1u);
    }
    __break(1u);
LABEL_16:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t specialized Sequence._copySequenceContents(initializing:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  char *v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  int64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v41 = a3;
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for UUID();
  v11 = *(_QWORD *)(v10 - 8);
  result = MEMORY[0x1E0C80A78](v10);
  v39 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = a4;
  v16 = *(_QWORD *)(a4 + 56);
  v15 = a4 + 56;
  v14 = v16;
  v17 = -1 << *(_BYTE *)(v15 - 24);
  v35 = a1;
  v36 = v17;
  v18 = -v17;
  if (v18 < 64)
    v19 = ~(-1 << v18);
  else
    v19 = -1;
  v20 = v19 & v14;
  v43 = a2;
  if (!a2)
  {
    v21 = 0;
    v22 = 0;
LABEL_39:
    v32 = v35;
    v33 = ~v36;
    *v35 = v40;
    v32[1] = v15;
    v32[2] = v33;
    v32[3] = v21;
    v32[4] = v20;
    return v22;
  }
  if (!v41)
  {
    v21 = 0;
    v22 = 0;
    goto LABEL_39;
  }
  if (v41 < 0)
    goto LABEL_41;
  v21 = 0;
  v22 = 0;
  v37 = v15;
  v38 = (unint64_t)(63 - v36) >> 6;
  v34 = v38 - 1;
  v23 = v39;
  if (!v20)
    goto LABEL_9;
LABEL_8:
  v24 = __clz(__rbit64(v20));
  v20 &= v20 - 1;
  v25 = v24 | (v21 << 6);
  while (1)
  {
    v29 = *(_QWORD *)(v11 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v11 + 16))(v9, *(_QWORD *)(v40 + 48) + v29 * v25, v10);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v10);
    if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10) == 1)
    {
      v15 = v37;
      goto LABEL_38;
    }
    v42 = v22 + 1;
    v30 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
    v31 = v43;
    v30(v23, v9, v10);
    result = ((uint64_t (*)(uint64_t, char *, uint64_t))v30)(v31, v23, v10);
    v22 = v42;
    if (v42 == v41)
    {
      v22 = v41;
      v15 = v37;
      goto LABEL_39;
    }
    v43 = v31 + v29;
    if (v20)
      goto LABEL_8;
LABEL_9:
    v26 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    v15 = v37;
    if (v26 >= v38)
      goto LABEL_37;
    v27 = *(_QWORD *)(v37 + 8 * v26);
    if (!v27)
    {
      v28 = v21 + 2;
      ++v21;
      if (v26 + 1 >= v38)
        goto LABEL_37;
      v27 = *(_QWORD *)(v37 + 8 * v28);
      if (v27)
        goto LABEL_14;
      v21 = v26 + 1;
      if (v26 + 2 >= v38)
        goto LABEL_37;
      v27 = *(_QWORD *)(v37 + 8 * (v26 + 2));
      if (v27)
      {
        v26 += 2;
      }
      else
      {
        v21 = v26 + 2;
        if (v26 + 3 >= v38)
          goto LABEL_37;
        v27 = *(_QWORD *)(v37 + 8 * (v26 + 3));
        if (!v27)
        {
          v28 = v26 + 4;
          v21 = v26 + 3;
          if (v26 + 4 < v38)
          {
            v27 = *(_QWORD *)(v37 + 8 * v28);
            if (!v27)
            {
              while (1)
              {
                v26 = v28 + 1;
                if (__OFADD__(v28, 1))
                  goto LABEL_42;
                if (v26 >= v38)
                {
                  v21 = v34;
                  goto LABEL_37;
                }
                v27 = *(_QWORD *)(v37 + 8 * v26);
                ++v28;
                if (v27)
                  goto LABEL_21;
              }
            }
LABEL_14:
            v26 = v28;
            goto LABEL_21;
          }
LABEL_37:
          __swift_storeEnumTagSinglePayload((uint64_t)v9, 1, 1, v10);
          v20 = 0;
LABEL_38:
          outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v9, (uint64_t *)&demangling cache variable for type metadata for UUID?);
          goto LABEL_39;
        }
        v26 += 3;
      }
    }
LABEL_21:
    v20 = (v27 - 1) & v27;
    v25 = __clz(__rbit64(v27)) + (v26 << 6);
    v21 = v26;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

_QWORD *specialized Sequence._copySequenceContents(initializing:)(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return specialized Sequence._copySequenceContents(initializing:)(a1, a2, a3, a4, (unint64_t *)&lazy cache variable for type metadata for TUConversationActivitySession, 0x1E0DBD278, &lazy protocol witness table cache variable for type TUConversationActivitySession and conformance NSObject);
}

{
  return specialized Sequence._copySequenceContents(initializing:)(a1, a2, a3, a4, (unint64_t *)&lazy cache variable for type metadata for TUHandle, 0x1E0DBD2F8, (unint64_t *)&lazy protocol witness table cache variable for type TUHandle and conformance NSObject);
}

void specialized Sequence._copySequenceContents(initializing:)(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v6 = *(_QWORD *)(a4 + 16);
  if (!a2)
  {
    v7 = *(_QWORD *)(a4 + 16);
    goto LABEL_13;
  }
  if (!a3)
  {
    v7 = *(_QWORD *)(a4 + 16);
    goto LABEL_13;
  }
  if (a3 < 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (!v6)
  {
LABEL_16:
    v7 = 0;
    goto LABEL_13;
  }
  v7 = v6 - 1;
  *a2 = *(_QWORD *)(a4 + 8 * (v6 - 1) + 32);
  v8 = a3 - 1;
  if (a3 != 1)
  {
    v9 = 0;
    v10 = a4 + 8 * v6 + 16;
    v11 = a2 + 1;
    while (v7 + v9)
    {
      swift_bridgeObjectRetain();
      *v11++ = *(_QWORD *)(v10 + 8 * v9--);
      if (!(v8 + v9))
      {
        v7 += v9;
        goto LABEL_10;
      }
    }
    v7 = 0;
  }
LABEL_10:
  swift_bridgeObjectRetain();
LABEL_13:
  *a1 = a4;
  a1[1] = v7;
  OUTLINED_FUNCTION_52_1();
}

void specialized Sequence._copySequenceContents(initializing:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  specialized Sequence._copySequenceContents(initializing:)(a1, a2, a3, a4, type metadata accessor for Participant);
}

{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  _QWORD *v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;

  v8 = type metadata accessor for Participant.Caption(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v30 - v13;
  v35 = a4;
  v17 = *(_QWORD *)(a4 + 64);
  v16 = a4 + 64;
  v15 = v17;
  v34 = v16;
  v18 = -1 << *(_BYTE *)(v16 - 32);
  if (-v18 < 64)
    v19 = ~(-1 << -(char)v18);
  else
    v19 = -1;
  v20 = v19 & v15;
  if (!a2)
  {
    v21 = 0;
LABEL_37:
    v29 = v34;
    *a1 = v35;
    a1[1] = v29;
    a1[2] = ~v18;
    a1[3] = v21;
    a1[4] = v20;
    return;
  }
  if (!a3)
  {
    v21 = 0;
    goto LABEL_37;
  }
  if (a3 < 0)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  v31 = -1 << *(_BYTE *)(v16 - 32);
  v32 = a1;
  v21 = 0;
  v22 = 0;
  v33 = (unint64_t)(63 - v18) >> 6;
  v30 = v33 - 1;
  if (!v20)
    goto LABEL_9;
LABEL_8:
  v23 = __clz(__rbit64(v20));
  v20 &= v20 - 1;
  v24 = v23 | (v21 << 6);
  while (1)
  {
    ++v22;
    v28 = *(_QWORD *)(v9 + 72);
    outlined init with copy of ConversationControlsAppLaunchButtonType(*(_QWORD *)(v35 + 56) + v28 * v24, (uint64_t)v12, type metadata accessor for Participant.Caption);
    outlined init with take of StagedCollaboration((uint64_t)v12, (uint64_t)v14, type metadata accessor for Participant.Caption);
    outlined init with take of StagedCollaboration((uint64_t)v14, a2, type metadata accessor for Participant.Caption);
    if (v22 == a3)
      goto LABEL_36;
    a2 += v28;
    if (v20)
      goto LABEL_8;
LABEL_9:
    v25 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
      __break(1u);
      goto LABEL_39;
    }
    if (v25 >= v33)
      goto LABEL_32;
    v26 = *(_QWORD *)(v34 + 8 * v25);
    if (!v26)
      break;
LABEL_18:
    v20 = (v26 - 1) & v26;
    v24 = __clz(__rbit64(v26)) + (v25 << 6);
    v21 = v25;
  }
  v21 += 2;
  if (v25 + 1 >= v33)
  {
    v20 = 0;
    v21 = v25;
    goto LABEL_36;
  }
  v26 = *(_QWORD *)(v34 + 8 * v21);
  if (v26)
    goto LABEL_14;
  v27 = v25 + 2;
  if (v25 + 2 >= v33)
    goto LABEL_32;
  v26 = *(_QWORD *)(v34 + 8 * v27);
  if (v26)
    goto LABEL_17;
  v21 = v25 + 3;
  if (v25 + 3 >= v33)
  {
    v20 = 0;
    v21 = v25 + 2;
    goto LABEL_36;
  }
  v26 = *(_QWORD *)(v34 + 8 * v21);
  if (v26)
  {
LABEL_14:
    v25 = v21;
    goto LABEL_18;
  }
  v27 = v25 + 4;
  if (v25 + 4 >= v33)
  {
LABEL_32:
    v20 = 0;
LABEL_36:
    v18 = v31;
    a1 = v32;
    goto LABEL_37;
  }
  v26 = *(_QWORD *)(v34 + 8 * v27);
  if (v26)
  {
LABEL_17:
    v25 = v27;
    goto LABEL_18;
  }
  while (1)
  {
    v25 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v25 >= v33)
    {
      v20 = 0;
      v21 = v30;
      goto LABEL_36;
    }
    v26 = *(_QWORD *)(v34 + 8 * v25);
    ++v27;
    if (v26)
      goto LABEL_18;
  }
LABEL_40:
  __break(1u);
}

void specialized Sequence._copySequenceContents(initializing:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  id v16;

  OUTLINED_FUNCTION_42_2();
  OUTLINED_FUNCTION_18_23();
  if (v8 && (v9 = v7) != 0)
  {
    if (v7 < 0)
    {
LABEL_30:
      __break(1u);
    }
    else
    {
      OUTLINED_FUNCTION_25_15();
      if (!v4)
        goto LABEL_6;
LABEL_5:
      OUTLINED_FUNCTION_43_9();
      while (1)
      {
        ++v3;
        v12 = *(void **)(*(_QWORD *)(v0 + 56) + 8 * v10);
        *v1 = v12;
        if (v3 == v9)
        {
          v16 = v12;
          goto LABEL_28;
        }
        ++v1;
        v13 = v12;
        if (v4)
          goto LABEL_5;
LABEL_6:
        v11 = v6 + 1;
        if (__OFADD__(v6, 1))
        {
          __break(1u);
          goto LABEL_30;
        }
        if (v11 >= v5)
          goto LABEL_28;
        if (!*(_QWORD *)(v2 + 8 * v11))
        {
          v6 += 2;
          if (v11 + 1 >= v5)
            goto LABEL_28;
          if (!*(_QWORD *)(v2 + 8 * v6))
          {
            if (v11 + 2 >= v5)
              goto LABEL_28;
            if (!*(_QWORD *)(v2 + 8 * (v11 + 2)))
            {
              v6 = v11 + 3;
              if (v11 + 3 >= v5)
                goto LABEL_28;
              if (!*(_QWORD *)(v2 + 8 * v6))
              {
                v14 = v11 + 4;
                if (v11 + 4 >= v5)
                  goto LABEL_28;
                if (!*(_QWORD *)(v2 + 8 * v14))
                  break;
              }
            }
          }
        }
LABEL_14:
        OUTLINED_FUNCTION_32_10();
      }
      while (1)
      {
        v15 = v14 + 1;
        if (__OFADD__(v14, 1))
          break;
        if (v15 >= v5)
          goto LABEL_28;
        ++v14;
        if (*(_QWORD *)(v2 + 8 * v15))
          goto LABEL_14;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_28:
    OUTLINED_FUNCTION_39_12();
    OUTLINED_FUNCTION_9_5();
  }
}

{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_42_2();
  OUTLINED_FUNCTION_18_23();
  if (v8 && (v9 = v7) != 0)
  {
    if (v7 < 0)
    {
LABEL_30:
      __break(1u);
    }
    else
    {
      OUTLINED_FUNCTION_25_15();
      if (!v4)
        goto LABEL_6;
LABEL_5:
      OUTLINED_FUNCTION_43_9();
      while (1)
      {
        ++v3;
        v12 = (_QWORD *)(*(_QWORD *)(v0 + 48) + 16 * v10);
        v13 = v12[1];
        *v1 = *v12;
        v1[1] = v13;
        if (v3 == v9)
        {
          swift_bridgeObjectRetain();
          goto LABEL_28;
        }
        v1 += 2;
        swift_bridgeObjectRetain();
        if (v4)
          goto LABEL_5;
LABEL_6:
        v11 = v6 + 1;
        if (__OFADD__(v6, 1))
        {
          __break(1u);
          goto LABEL_30;
        }
        if (v11 >= v5)
          goto LABEL_28;
        if (!*(_QWORD *)(v2 + 8 * v11))
        {
          v6 += 2;
          if (v11 + 1 >= v5)
            goto LABEL_28;
          if (!*(_QWORD *)(v2 + 8 * v6))
          {
            if (v11 + 2 >= v5)
              goto LABEL_28;
            if (!*(_QWORD *)(v2 + 8 * (v11 + 2)))
            {
              v6 = v11 + 3;
              if (v11 + 3 >= v5)
                goto LABEL_28;
              if (!*(_QWORD *)(v2 + 8 * v6))
              {
                v14 = v11 + 4;
                if (v11 + 4 >= v5)
                  goto LABEL_28;
                if (!*(_QWORD *)(v2 + 8 * v14))
                  break;
              }
            }
          }
        }
LABEL_14:
        OUTLINED_FUNCTION_32_10();
      }
      while (1)
      {
        v15 = v14 + 1;
        if (__OFADD__(v14, 1))
          break;
        if (v15 >= v5)
          goto LABEL_28;
        ++v14;
        if (*(_QWORD *)(v2 + 8 * v15))
          goto LABEL_14;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_28:
    OUTLINED_FUNCTION_39_12();
    OUTLINED_FUNCTION_9_5();
  }
}

uint64_t specialized Sequence._copySequenceContents(initializing:)(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD *)result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

_QWORD *specialized Sequence._copySequenceContents(initializing:)(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4, unint64_t *a5, uint64_t a6, unint64_t *a7)
{
  uint64_t v7;
  _QWORD *v9;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  id v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  int64_t v31;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  unint64_t v38;

  v7 = a4;
  v9 = a2;
  v30 = result;
  if ((a4 & 0xC000000000000001) != 0)
  {
    __CocoaSet.makeIterator()();
    v12 = OUTLINED_FUNCTION_64_0();
    _sSo8NSObjectCMaTm_0(v12, a5);
    lazy protocol witness table accessor for type TUHandle and conformance NSObject(a7, a5);
    result = (_QWORD *)Set.Iterator.init(_cocoa:)();
    v7 = v34;
    v13 = v35;
    v14 = v36;
    v15 = v37;
    v16 = v38;
    if (v9)
      goto LABEL_3;
LABEL_37:
    v17 = 0;
    goto LABEL_39;
  }
  v15 = 0;
  v25 = -1 << *(_BYTE *)(a4 + 32);
  v13 = a4 + 56;
  v14 = ~v25;
  v26 = -v25;
  if (v26 < 64)
    v27 = ~(-1 << v26);
  else
    v27 = -1;
  v16 = v27 & *(_QWORD *)(a4 + 56);
  if (!a2)
    goto LABEL_37;
LABEL_3:
  if (!a3)
  {
    v17 = 0;
LABEL_39:
    v28 = v30;
LABEL_41:
    *v28 = v7;
    v28[1] = v13;
    v28[2] = v14;
    v28[3] = v15;
    v28[4] = v16;
    return (_QWORD *)v17;
  }
  if (a3 < 0)
    goto LABEL_48;
  v17 = 0;
  v31 = (unint64_t)(v14 + 64) >> 6;
  v29 = v14;
  while (1)
  {
    if (v7 < 0)
    {
      if (!__CocoaSet.Iterator.next()())
        goto LABEL_40;
      _sSo8NSObjectCMaTm_0(0, a5);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v20 = v33;
      result = (_QWORD *)swift_unknownObjectRelease();
      if (!v33)
        goto LABEL_40;
      goto LABEL_23;
    }
    if (v16)
    {
      v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v19 = v18 | (v15 << 6);
      goto LABEL_22;
    }
    v21 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v21 >= v31)
    {
      v16 = 0;
      goto LABEL_40;
    }
    v22 = *(_QWORD *)(v13 + 8 * v21);
    if (v22)
      goto LABEL_21;
    v23 = v15 + 2;
    if (v15 + 2 >= v31)
    {
      v16 = 0;
      ++v15;
      goto LABEL_40;
    }
    v22 = *(_QWORD *)(v13 + 8 * v23);
    if (!v22)
    {
      if (v15 + 3 >= v31)
        goto LABEL_44;
      v22 = *(_QWORD *)(v13 + 8 * (v15 + 3));
      if (v22)
      {
        v21 = v15 + 3;
        goto LABEL_21;
      }
      v23 = v15 + 4;
      if (v15 + 4 >= v31)
      {
        v16 = 0;
        v15 += 3;
        goto LABEL_40;
      }
      v22 = *(_QWORD *)(v13 + 8 * v23);
      if (!v22)
      {
        v21 = v15 + 5;
        if (v15 + 5 >= v31)
        {
LABEL_44:
          v16 = 0;
          v15 = v23;
          goto LABEL_40;
        }
        v22 = *(_QWORD *)(v13 + 8 * v21);
        if (!v22)
        {
          v24 = v15 + 6;
          while (v24 < v31)
          {
            v22 = *(_QWORD *)(v13 + 8 * v24++);
            if (v22)
            {
              v21 = v24 - 1;
              goto LABEL_21;
            }
          }
          v16 = 0;
          v15 = v31 - 1;
          goto LABEL_40;
        }
        goto LABEL_21;
      }
    }
    v21 = v23;
LABEL_21:
    v16 = (v22 - 1) & v22;
    v19 = __clz(__rbit64(v22)) + (v21 << 6);
    v15 = v21;
LABEL_22:
    result = *(id *)(*(_QWORD *)(v7 + 48) + 8 * v19);
    v20 = result;
    if (!result)
      goto LABEL_40;
LABEL_23:
    ++v17;
    *v9++ = v20;
    if (v17 == a3)
    {
      v17 = a3;
LABEL_40:
      v14 = v29;
      v28 = v30;
      goto LABEL_41;
    }
  }
  __break(1u);
LABEL_48:
  __break(1u);
  return result;
}

void specialized Sequence._copySequenceContents(initializing:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  _QWORD *v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;

  v10 = a5(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v30 - v15;
  v35 = a4;
  v17 = *(_QWORD *)(a4 + 56);
  v34 = a4 + 56;
  v18 = -1 << *(_BYTE *)(a4 + 32);
  if (-v18 < 64)
    v19 = ~(-1 << -(char)v18);
  else
    v19 = -1;
  v20 = v19 & v17;
  if (!a2)
  {
    v21 = 0;
LABEL_37:
    v29 = v34;
    *a1 = v35;
    a1[1] = v29;
    a1[2] = ~v18;
    a1[3] = v21;
    a1[4] = v20;
    OUTLINED_FUNCTION_52_1();
    return;
  }
  if (!a3)
  {
    v21 = 0;
    goto LABEL_37;
  }
  if (a3 < 0)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  v31 = -1 << *(_BYTE *)(a4 + 32);
  v32 = a1;
  v21 = 0;
  v22 = 0;
  v33 = (unint64_t)(63 - v18) >> 6;
  v30 = v33 - 1;
  if (!v20)
    goto LABEL_9;
LABEL_8:
  v23 = __clz(__rbit64(v20));
  v20 &= v20 - 1;
  v24 = v23 | (v21 << 6);
  while (1)
  {
    ++v22;
    v28 = *(_QWORD *)(v11 + 72);
    outlined init with copy of ConversationControlsAppLaunchButtonType(*(_QWORD *)(v35 + 48) + v28 * v24, (uint64_t)v14, a5);
    outlined init with take of StagedCollaboration((uint64_t)v14, (uint64_t)v16, a5);
    outlined init with take of StagedCollaboration((uint64_t)v16, a2, a5);
    if (v22 == a3)
      goto LABEL_36;
    a2 += v28;
    if (v20)
      goto LABEL_8;
LABEL_9:
    v25 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
      __break(1u);
      goto LABEL_39;
    }
    if (v25 >= v33)
      goto LABEL_32;
    v26 = *(_QWORD *)(v34 + 8 * v25);
    if (!v26)
      break;
LABEL_18:
    v20 = (v26 - 1) & v26;
    v24 = __clz(__rbit64(v26)) + (v25 << 6);
    v21 = v25;
  }
  v21 += 2;
  if (v25 + 1 >= v33)
  {
    v20 = 0;
    v21 = v25;
    goto LABEL_36;
  }
  v26 = *(_QWORD *)(v34 + 8 * v21);
  if (v26)
    goto LABEL_14;
  v27 = v25 + 2;
  if (v25 + 2 >= v33)
    goto LABEL_32;
  v26 = *(_QWORD *)(v34 + 8 * v27);
  if (v26)
    goto LABEL_17;
  v21 = v25 + 3;
  if (v25 + 3 >= v33)
  {
    v20 = 0;
    v21 = v25 + 2;
    goto LABEL_36;
  }
  v26 = *(_QWORD *)(v34 + 8 * v21);
  if (v26)
  {
LABEL_14:
    v25 = v21;
    goto LABEL_18;
  }
  v27 = v25 + 4;
  if (v25 + 4 >= v33)
  {
LABEL_32:
    v20 = 0;
LABEL_36:
    v18 = v31;
    a1 = v32;
    goto LABEL_37;
  }
  v26 = *(_QWORD *)(v34 + 8 * v27);
  if (v26)
  {
LABEL_17:
    v25 = v27;
    goto LABEL_18;
  }
  while (1)
  {
    v25 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v25 >= v33)
    {
      v20 = 0;
      v21 = v30;
      goto LABEL_36;
    }
    v26 = *(_QWORD *)(v34 + 8 * v25);
    ++v27;
    if (v26)
      goto LABEL_18;
  }
LABEL_40:
  __break(1u);
}

_QWORD *specialized Sequence._copySequenceContents(initializing:)(_QWORD *result, _BYTE *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;

  v4 = a4 + 64;
  v5 = -1;
  v6 = -1 << *(_BYTE *)(a4 + 32);
  if (-v6 < 64)
    v5 = ~(-1 << -(char)v6);
  v7 = v5 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v8 = 0;
    a3 = 0;
LABEL_36:
    *result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (_QWORD *)a3;
  }
  if (!a3)
  {
    v8 = 0;
    goto LABEL_36;
  }
  if (a3 < 0)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  v8 = 0;
  v9 = 0;
  v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v12 = v11 | (v8 << 6);
LABEL_19:
    ++v9;
    *a2++ = *(_BYTE *)(*(_QWORD *)(a4 + 48) + v12);
    if (v9 == a3)
      goto LABEL_36;
  }
  v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_38;
  }
  if (v13 >= v10)
    goto LABEL_31;
  v14 = *(_QWORD *)(v4 + 8 * v13);
  if (v14)
    goto LABEL_18;
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    v7 = 0;
    v8 = v13;
    goto LABEL_35;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_14:
    v13 = v8;
LABEL_18:
    v16 = __clz(__rbit64(v14));
    v7 = (v14 - 1) & v14;
    v12 = v16 + (v13 << 6);
    v8 = v13;
    goto LABEL_19;
  }
  v15 = v13 + 2;
  if (v13 + 2 >= v10)
    goto LABEL_31;
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_17:
    v13 = v15;
    goto LABEL_18;
  }
  v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    v7 = 0;
    v8 = v13 + 2;
    goto LABEL_35;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
    goto LABEL_14;
  v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_31:
    v7 = 0;
LABEL_35:
    a3 = v9;
    goto LABEL_36;
  }
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
    goto LABEL_17;
  while (1)
  {
    v13 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v13 >= v10)
    {
      v7 = 0;
      v8 = v10 - 1;
      goto LABEL_35;
    }
    v14 = *(_QWORD *)(v4 + 8 * v13);
    ++v15;
    if (v14)
      goto LABEL_18;
  }
LABEL_39:
  __break(1u);
  return result;
}

_QWORD *specialized Sequence._copySequenceContents(initializing:)(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t v25;
  _QWORD *v26;

  v5 = a4 + 64;
  v6 = -1 << *(_BYTE *)(a4 + 32);
  if (-v6 < 64)
    v7 = ~(-1 << -(char)v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v11 = 0;
    v9 = 0;
LABEL_39:
    *result = a4;
    result[1] = v5;
    result[2] = ~v6;
    result[3] = v11;
    result[4] = v8;
    return (_QWORD *)v9;
  }
  v9 = a3;
  if (!a3)
  {
    v11 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v10 = a2;
  v25 = -1 << *(_BYTE *)(a4 + 32);
  v26 = result;
  v11 = 0;
  v12 = 0;
  v13 = (unint64_t)(63 - v6) >> 6;
  if (!v8)
    goto LABEL_9;
LABEL_8:
  v14 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  v15 = v14 | (v11 << 6);
  while (1)
  {
    ++v12;
    v19 = (_QWORD *)(*(_QWORD *)(a4 + 56) + 40 * v15);
    v20 = v19[1];
    v21 = v19[2];
    v22 = v19[3];
    v23 = (void *)v19[4];
    *v10 = *v19;
    v10[1] = v20;
    v10[2] = v21;
    v10[3] = v22;
    v10[4] = v23;
    if (v12 == v9)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v24 = v23;
      goto LABEL_38;
    }
    v10 += 5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = v23;
    if (v8)
      goto LABEL_8;
LABEL_9:
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v16 >= v13)
      goto LABEL_33;
    v17 = *(_QWORD *)(v5 + 8 * v16);
    if (!v17)
    {
      v11 += 2;
      if (v16 + 1 >= v13)
      {
        v8 = 0;
        v11 = v16;
      }
      else
      {
        v17 = *(_QWORD *)(v5 + 8 * v11);
        if (v17)
          goto LABEL_14;
        v18 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_33;
        v17 = *(_QWORD *)(v5 + 8 * v18);
        if (v17)
        {
LABEL_17:
          v16 = v18;
          goto LABEL_18;
        }
        v11 = v16 + 3;
        if (v16 + 3 < v13)
        {
          v17 = *(_QWORD *)(v5 + 8 * v11);
          if (v17)
          {
LABEL_14:
            v16 = v11;
            goto LABEL_18;
          }
          v18 = v16 + 4;
          if (v16 + 4 >= v13)
          {
LABEL_33:
            v8 = 0;
            goto LABEL_37;
          }
          v17 = *(_QWORD *)(v5 + 8 * v18);
          if (!v17)
          {
            while (1)
            {
              v16 = v18 + 1;
              if (__OFADD__(v18, 1))
                goto LABEL_42;
              if (v16 >= v13)
              {
                v8 = 0;
                v11 = v13 - 1;
                goto LABEL_37;
              }
              v17 = *(_QWORD *)(v5 + 8 * v16);
              ++v18;
              if (v17)
                goto LABEL_18;
            }
          }
          goto LABEL_17;
        }
        v8 = 0;
        v11 = v16 + 2;
      }
LABEL_37:
      v9 = v12;
LABEL_38:
      v6 = v25;
      result = v26;
      goto LABEL_39;
    }
LABEL_18:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v16 << 6);
    v11 = v16;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

void lazy protocol witness table accessor for type TUHandle and conformance NSObject(unint64_t *a1, unint64_t *a2)
{
  uint64_t v3;

  if (!*a1)
  {
    v3 = _sSo8NSObjectCMaTm_0(255, a2);
    atomic_store(MEMORY[0x1C3B750C8](MEMORY[0x1E0DEFCF8], v3), a1);
  }
  OUTLINED_FUNCTION_0();
}

void lazy protocol witness table accessor for type [UIWindow] and conformance [A](unint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  if (!*a1)
  {
    v3 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    atomic_store(MEMORY[0x1C3B750C8](MEMORY[0x1E0DEAF50], v3), a1);
  }
  OUTLINED_FUNCTION_0();
}

uint64_t OUTLINED_FUNCTION_39_12()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *v0 = v1;
  v0[1] = v3;
  v0[2] = ~v4;
  v0[3] = v6;
  v0[4] = v5;
  return v2;
}

uint64_t SpringBoardUtilities.isSupported.getter()
{
  return 1;
}

void specialized static SpringBoardUtilities.requestPasscodeUnlock(_:)()
{
  void *v0;
  uint64_t v1;
  _QWORD *v2;
  id v3;
  id v4;

  OUTLINED_FUNCTION_93();
  OUTLINED_FUNCTION_1_26();
  OUTLINED_FUNCTION_11_23();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_6_0();
  v2 = (_QWORD *)OUTLINED_FUNCTION_13_13();
  OUTLINED_FUNCTION_5_21(v2);
  v3 = v0;
  v4 = OUTLINED_FUNCTION_24_10();
  if (OUTLINED_FUNCTION_2_41())
  {
    OUTLINED_FUNCTION_15_1((uint64_t)thunk for @escaping @callee_guaranteed (@unowned Bool) -> ());
    OUTLINED_FUNCTION_7_38();
    OUTLINED_FUNCTION_27_0();
    OUTLINED_FUNCTION_9_23();
    OUTLINED_FUNCTION_10_33();
  }
  else
  {
    OUTLINED_FUNCTION_20_11();
    OUTLINED_FUNCTION_17_12();
    OUTLINED_FUNCTION_0_37();
    OUTLINED_FUNCTION_25_16();
  }
  OUTLINED_FUNCTION_19_0();
  OUTLINED_FUNCTION_11_0();

  OUTLINED_FUNCTION_52_1();
}

{
  void *v0;
  uint64_t v1;
  _QWORD *v2;
  id v3;
  id v4;

  OUTLINED_FUNCTION_93();
  OUTLINED_FUNCTION_1_26();
  OUTLINED_FUNCTION_11_23();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_6_0();
  v2 = (_QWORD *)OUTLINED_FUNCTION_13_13();
  OUTLINED_FUNCTION_5_21(v2);
  v3 = v0;
  v4 = OUTLINED_FUNCTION_24_10();
  if (OUTLINED_FUNCTION_2_41())
  {
    OUTLINED_FUNCTION_15_1((uint64_t)thunk for @escaping @callee_guaranteed (@unowned Bool) -> ());
    OUTLINED_FUNCTION_7_38();
    OUTLINED_FUNCTION_27_0();
    OUTLINED_FUNCTION_9_23();
    OUTLINED_FUNCTION_10_33();
  }
  else
  {
    OUTLINED_FUNCTION_20_11();
    swift_storeEnumTagMultiPayload();
    OUTLINED_FUNCTION_0_37();
    OUTLINED_FUNCTION_25_16();
  }
  OUTLINED_FUNCTION_19_0();
  OUTLINED_FUNCTION_11_0();

  OUTLINED_FUNCTION_52_1();
}

{
  void *v0;
  uint64_t v1;
  _QWORD *v2;
  id v3;
  id v4;

  OUTLINED_FUNCTION_93();
  OUTLINED_FUNCTION_1_26();
  OUTLINED_FUNCTION_11_23();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_6_0();
  v2 = (_QWORD *)OUTLINED_FUNCTION_13_13();
  OUTLINED_FUNCTION_5_21(v2);
  v3 = v0;
  v4 = OUTLINED_FUNCTION_24_10();
  if (OUTLINED_FUNCTION_2_41())
  {
    OUTLINED_FUNCTION_15_1((uint64_t)thunk for @escaping @callee_guaranteed (@unowned Bool) -> ());
    OUTLINED_FUNCTION_7_38();
    OUTLINED_FUNCTION_27_0();
    OUTLINED_FUNCTION_9_23();
    OUTLINED_FUNCTION_10_33();
  }
  else
  {
    OUTLINED_FUNCTION_20_11();
    OUTLINED_FUNCTION_17_12();
    OUTLINED_FUNCTION_0_37();
    OUTLINED_FUNCTION_25_16();
  }
  OUTLINED_FUNCTION_19_0();
  OUTLINED_FUNCTION_11_0();

  OUTLINED_FUNCTION_52_1();
}

{
  void *v0;
  uint64_t v1;
  _QWORD *v2;
  id v3;
  id v4;

  OUTLINED_FUNCTION_93();
  OUTLINED_FUNCTION_1_26();
  OUTLINED_FUNCTION_11_23();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_6_0();
  v2 = (_QWORD *)OUTLINED_FUNCTION_13_13();
  OUTLINED_FUNCTION_5_21(v2);
  v3 = v0;
  v4 = OUTLINED_FUNCTION_24_10();
  if (OUTLINED_FUNCTION_2_41())
  {
    OUTLINED_FUNCTION_15_1((uint64_t)thunk for @escaping @callee_guaranteed (@unowned Bool) -> ());
    OUTLINED_FUNCTION_7_38();
    OUTLINED_FUNCTION_27_0();
    OUTLINED_FUNCTION_9_23();
    OUTLINED_FUNCTION_10_33();
  }
  else
  {
    OUTLINED_FUNCTION_20_11();
    swift_storeEnumTagMultiPayload();
    OUTLINED_FUNCTION_0_37();
    OUTLINED_FUNCTION_25_16();
  }
  OUTLINED_FUNCTION_19_0();
  OUTLINED_FUNCTION_11_0();

  OUTLINED_FUNCTION_52_1();
}

{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_23_13();
  if (OUTLINED_FUNCTION_4_26())
  {
    OUTLINED_FUNCTION_9_2((uint64_t)thunk for @escaping @callee_guaranteed (@unowned Bool) -> (), MEMORY[0x1E0C809B0], 1107296256, v7, v8);
    OUTLINED_FUNCTION_11_8();
    OUTLINED_FUNCTION_11_0();
    OUTLINED_FUNCTION_9_23();
    OUTLINED_FUNCTION_10_33();
LABEL_6:
    OUTLINED_FUNCTION_16_8();
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_1();
  v1 = (_QWORD *)MEMORY[0x1C3B752C0](v0 + 16);
  if (!v1)
    goto LABEL_6;
  v2 = v1;
  v3 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x1F8))();
  v5 = v4;

  if (!v3)
    goto LABEL_6;
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 8))(7, ObjectType, v5);
  OUTLINED_FUNCTION_16_8();
  swift_unknownObjectRelease();
LABEL_7:
  OUTLINED_FUNCTION_14_1();
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  _QWORD aBlock[6];

  OUTLINED_FUNCTION_23_13();
  if (OUTLINED_FUNCTION_4_26())
  {
    aBlock[4] = partial apply for closure #1 in InCallBannerHostViewController.callDetailsGestureRecognizerTapped();
    aBlock[5] = v0;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = thunk for @escaping @callee_guaranteed (@unowned Bool) -> ();
    aBlock[3] = &block_descriptor_3;
    _Block_copy(aBlock);
    OUTLINED_FUNCTION_11_8();
    OUTLINED_FUNCTION_11_0();
    OUTLINED_FUNCTION_9_23();
    OUTLINED_FUNCTION_10_33();
LABEL_6:
    OUTLINED_FUNCTION_16_8();
    return;
  }
  OUTLINED_FUNCTION_1();
  v1 = MEMORY[0x1C3B752C0](v0 + 16);
  if (!v1)
    goto LABEL_6;
  v2 = (void *)v1;
  v3 = v1 + OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_inCallBannerDelegate;
  OUTLINED_FUNCTION_1();
  if (MEMORY[0x1C3B752C0](v3))
  {
    v4 = *(_QWORD *)(v3 + 8);

    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v4 + 32))(ObjectType, v4);
    OUTLINED_FUNCTION_16_8();
    swift_unknownObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_16_8();

  }
}

uint64_t specialized static SpringBoardUtilities.requestPasscodeUnlock(_:)(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, void *a7, void *a8)
{
  _QWORD *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v20;
  _QWORD aBlock[6];

  v15 = (_QWORD *)swift_allocObject();
  v15[2] = a2;
  v15[3] = a3;
  v15[4] = a4;
  v15[5] = a5;
  v15[6] = a6;
  v15[7] = a7;
  v15[8] = a8;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy((uint64_t)a3);
  v20 = a8;
  swift_unknownObjectRetain();
  v16 = a7;
  if (static SpringBoardUtilities.checkSpringBoardState(for:)())
  {
    aBlock[4] = partial apply for closure #1 in InCallControlsViewController.handle(_:from:completion:);
    aBlock[5] = v15;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = thunk for @escaping @callee_guaranteed (@unowned Bool) -> ();
    aBlock[3] = &block_descriptor_33_0;
    _Block_copy(aBlock);
    swift_retain();
    swift_release();
    OUTLINED_FUNCTION_9_23();
    OUTLINED_FUNCTION_10_33();
  }
  else
  {
    v17 = OUTLINED_FUNCTION_20_11();
    (*(void (**)(id, uint64_t, void *, uint64_t, uint64_t))(a6 + 16))(v16, a2, a8, v17, a6);
    if (!a3)
    {
      swift_release();
      v18 = 0;
      goto LABEL_7;
    }
    a3(1);
  }
  swift_release();
  v18 = (uint64_t)a3;
LABEL_7:
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v18);

  return OUTLINED_FUNCTION_19_0();
}

void specialized static SpringBoardUtilities.requestPasscodeUnlock(_:)(uint64_t a1, void (*a2)(void), uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a2;
  *(_QWORD *)(v5 + 24) = a3;
  OUTLINED_FUNCTION_11_8();
  if (OUTLINED_FUNCTION_4_26())
  {
    OUTLINED_FUNCTION_9_2((uint64_t)thunk for @escaping @callee_guaranteed (@unowned Bool) -> (), MEMORY[0x1E0C809B0], 1107296256, v6, v7);
    swift_retain();
    swift_release();
    OUTLINED_FUNCTION_9_23();
    OUTLINED_FUNCTION_10_33();
    OUTLINED_FUNCTION_19();
    OUTLINED_FUNCTION_11_0();
    OUTLINED_FUNCTION_14_1();
  }
  else
  {
    a2();
    OUTLINED_FUNCTION_19();
    swift_release();
  }
}

void static SpringBoardUtilities.requestPasscodeUnlock(_:)(void (*a1)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;

  if (OUTLINED_FUNCTION_4_26())
  {
    OUTLINED_FUNCTION_9_2((uint64_t)thunk for @escaping @callee_guaranteed (@unowned Bool) -> (), MEMORY[0x1E0C809B0], 1107296256, v2, v3);
    OUTLINED_FUNCTION_11_8();
    OUTLINED_FUNCTION_11_0();
    OUTLINED_FUNCTION_9_23();
    OUTLINED_FUNCTION_10_33();
  }
  else
  {
    a1(1);
  }
  OUTLINED_FUNCTION_14_1();
}

BOOL static SpringBoardUtilities.isSpringBoardPasscodeLocked.getter()
{
  return OUTLINED_FUNCTION_18_24();
}

uint64_t thunk for @escaping @callee_guaranteed (@unowned Bool) -> ()(uint64_t a1, int a2)
{
  void (*v2)(_BOOL8);
  _BOOL8 v3;

  v2 = *(void (**)(_BOOL8))(a1 + 32);
  v3 = a2 != 0;
  swift_retain();
  v2(v3);
  return swift_release();
}

BOOL static SpringBoardUtilities.checkSpringBoardState(for:)()
{
  os_log_type_t v0;
  uint64_t v1;
  uint32_t v2;
  uint64_t v3;
  uint8_t *v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  unint64_t v8;
  const char *v9;
  uint64_t v10;
  os_log_type_t v11;
  uint64_t v12;
  unint64_t v13;
  int out_token;
  uint64_t v16;
  uint64_t state64[2];

  state64[1] = *MEMORY[0x1E0C80C00];
  out_token = 0;
  v1 = String.utf8CString.getter();
  v2 = notify_register_check((const char *)(v1 + 32), &out_token);
  OUTLINED_FUNCTION_19();
  if (v2)
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    v3 = type metadata accessor for Logger();
    v4 = (uint8_t *)__swift_project_value_buffer(v3, (uint64_t)&static Logger.conversationKit);
    v5 = Logger.logObject.getter();
    v6 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_22_8(v6))
    {
      OUTLINED_FUNCTION_29_10();
      state64[0] = OUTLINED_FUNCTION_28_12();
      *(_DWORD *)v4 = 136315138;
      LODWORD(v16) = v2;
      v7 = String.init<A>(reflecting:)();
      v16 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v7, v8, (uint64_t *)state64);
      OUTLINED_FUNCTION_31_3();
      swift_bridgeObjectRelease();
      v9 = "Unable to get token to check if SpringBoard is passcode locked: result = %s";
      goto LABEL_11;
    }
LABEL_12:

    return 0;
  }
  state64[0] = 0;
  if (notify_get_state(out_token, state64))
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    v10 = type metadata accessor for Logger();
    v4 = (uint8_t *)__swift_project_value_buffer(v10, (uint64_t)&static Logger.conversationKit);
    v5 = Logger.logObject.getter();
    v11 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_22_8(v11))
    {
      OUTLINED_FUNCTION_29_10();
      v16 = OUTLINED_FUNCTION_28_12();
      *(_DWORD *)v4 = 136315138;
      v12 = String.init<A>(reflecting:)();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v12, v13, &v16);
      OUTLINED_FUNCTION_31_3();
      swift_bridgeObjectRelease();
      v9 = "Unable to get SpringBoard passcode lock state: result = %s";
LABEL_11:
      _os_log_impl(&dword_1BD004000, v5, v0, v9, v4, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_60();
    }
    goto LABEL_12;
  }
  return state64[0] != 0;
}

BOOL static SpringBoardUtilities.isShowingLockScreenOrCoverSheetUI.getter()
{
  return OUTLINED_FUNCTION_18_24();
}

uint64_t SpringBoardUtilities.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t SpringBoardUtilities.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t SpringBoardUtilities.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t SpringBoardUtilities.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t type metadata accessor for SpringBoardUtilities()
{
  return objc_opt_self();
}

uint64_t method lookup function for SpringBoardUtilities()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SpringBoardUtilities.isSupported.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 80))();
}

uint64_t dispatch thunk of SpringBoardUtilities.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

void partial apply for closure #1 in InCallBannerHostViewController.callDetailsGestureRecognizerTapped()(char a1)
{
  closure #1 in InCallBannerHostViewController.callDetailsGestureRecognizerTapped()(a1);
}

void partial apply for closure #1 in LocalParticipantControlsView.handleEffectsTapped()(char a1)
{
  uint64_t v1;

  closure #1 in LocalParticipantControlsView.handleEffectsTapped()(a1, v1);
}

void partial apply for closure #1 in InCallControlsCollectionViewController.openMessages(cell:tappedOpenMessagesButton:)()
{
  closure #1 in InCallControlsCollectionViewController.openMessages(cell:tappedOpenMessagesButton:)();
}

uint64_t outlined destroy of InCallControlsCollectionViewController.Action(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for InCallControlsCollectionViewController.Action(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void partial apply for closure #1 in InCallControlsCollectionViewController.inCallControlsBaseCellDidTapButton(_:)()
{
  closure #1 in InCallControlsCollectionViewController.collectionView(_:didSelectItemAt:)();
}

void partial apply for closure #1 in InCallControlsCollectionViewController.shareLinkCell(cell:tappedCopyLinkButton:)()
{
  closure #1 in InCallControlsCollectionViewController.shareLinkCell(cell:tappedCopyLinkButton:)();
}

uint64_t objectdestroyTm_1()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1BD07B87C()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 24))
    swift_release();
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

void partial apply for closure #1 in InCallControlsViewController.handle(_:from:completion:)(char a1)
{
  uint64_t v1;

  closure #1 in InCallControlsViewController.handle(_:from:completion:)(a1, *(_QWORD *)(v1 + 16), *(void (**)(uint64_t))(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64));
}

uint64_t sub_1BD07B8D4()
{
  swift_release();
  return swift_deallocObject();
}

void partial apply for closure #1 in closure #2 in ConversationControlsManager.startScreenShareWithCountdown(completion:)(char a1)
{
  uint64_t v1;

  closure #1 in closure #2 in ConversationControlsManager.startScreenShareWithCountdown(completion:)(a1, *(void (**)(void))(v1 + 16));
}

uint64_t static ViewBuilder.buildBlock<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(a3, a1);
}

BOOL static SyncedScreeningAlphaGradientView.AnimatedState.== infix(_:_:)()
{
  double v0;
  double v1;
  double v2;

  v0 = SyncedScreeningAlphaGradientView.AnimatedState.minOpacity.getter();
  if (v0 != SyncedScreeningAlphaGradientView.AnimatedState.minOpacity.getter())
    return 0;
  v1 = SyncedScreeningAlphaGradientView.AnimatedState.maxOpacity.getter();
  if (v1 != SyncedScreeningAlphaGradientView.AnimatedState.maxOpacity.getter())
    return 0;
  v2 = SyncedScreeningAlphaGradientView.AnimatedState.unitStart.getter();
  return v2 == SyncedScreeningAlphaGradientView.AnimatedState.unitStart.getter();
}

double SyncedScreeningAlphaGradientView.AnimatedState.minOpacity.getter()
{
  return SyncedScreeningAlphaGradientView.AnimatedState.minOpacity.getter();
}

{
  double v1;

  OUTLINED_FUNCTION_12_19();
  OUTLINED_FUNCTION_11_24();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t SyncedScreeningAlphaGradientView.AnimatedState.minOpacity.setter()
{
  return SyncedScreeningAlphaGradientView.AnimatedState.minOpacity.setter();
}

{
  OUTLINED_FUNCTION_12_19();
  OUTLINED_FUNCTION_11_24();
  swift_retain();
  return static Published.subscript.setter();
}

uint64_t property wrapper backing initializer of SyncedScreeningAlphaGradientView.AnimatedState.maxOpacity()
{
  return Published.init(initialValue:)();
}

double SyncedScreeningAlphaGradientView.AnimatedState.maxOpacity.getter()
{
  return SyncedScreeningAlphaGradientView.AnimatedState.minOpacity.getter();
}

uint64_t SyncedScreeningAlphaGradientView.AnimatedState.maxOpacity.setter()
{
  return SyncedScreeningAlphaGradientView.AnimatedState.minOpacity.setter();
}

double SyncedScreeningAlphaGradientView.AnimatedState.unitStart.getter()
{
  return SyncedScreeningAlphaGradientView.AnimatedState.minOpacity.getter();
}

uint64_t SyncedScreeningAlphaGradientView.AnimatedState.unitStart.setter()
{
  return SyncedScreeningAlphaGradientView.AnimatedState.minOpacity.setter();
}

uint64_t SyncedScreeningAlphaGradientView.AnimatedState.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);

  v1 = v0 + direct field offset for SyncedScreeningAlphaGradientView.AnimatedState._minOpacity;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Double>);
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + direct field offset for SyncedScreeningAlphaGradientView.AnimatedState._maxOpacity, v2);
  v3(v0 + direct field offset for SyncedScreeningAlphaGradientView.AnimatedState._unitStart, v2);
  return v0;
}

uint64_t SyncedScreeningAlphaGradientView.AnimatedState.__deallocating_deinit()
{
  SyncedScreeningAlphaGradientView.AnimatedState.deinit();
  return swift_deallocClassInstance();
}

uint64_t SyncedScreeningAlphaGradientView.AnimatedState.__allocating_init()()
{
  swift_allocObject();
  return SyncedScreeningAlphaGradientView.AnimatedState.init()();
}

uint64_t SyncedScreeningAlphaGradientView.AnimatedState.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  void (*v6)(uint64_t, char *, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Double>);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = v0 + direct field offset for SyncedScreeningAlphaGradientView.AnimatedState._minOpacity;
  property wrapper backing initializer of SyncedScreeningAlphaGradientView.AnimatedState.maxOpacity();
  v6 = *(void (**)(uint64_t, char *, uint64_t))(v2 + 32);
  v6(v5, v4, v1);
  v7 = v0 + direct field offset for SyncedScreeningAlphaGradientView.AnimatedState._maxOpacity;
  property wrapper backing initializer of SyncedScreeningAlphaGradientView.AnimatedState.maxOpacity();
  v6(v7, v4, v1);
  v8 = v0 + direct field offset for SyncedScreeningAlphaGradientView.AnimatedState._unitStart;
  property wrapper backing initializer of SyncedScreeningAlphaGradientView.AnimatedState.maxOpacity();
  v6(v8, v4, v1);
  return v0;
}

uint64_t protocol witness for ObservableObject.objectWillChange.getter in conformance SyncedScreeningAlphaGradientView<A>.AnimatedState@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t result;

  type metadata accessor for SyncedScreeningAlphaGradientView.AnimatedState(0, *(_QWORD *)(a1 + 80), a2, a3);
  result = ObservableObject<>.objectWillChange.getter();
  *a4 = result;
  return result;
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance SyncedScreeningAlphaGradientView<A>.AnimatedState()
{
  return static SyncedScreeningAlphaGradientView.AnimatedState.== infix(_:_:)();
}

double SyncedScreeningAlphaGradientView.GradientTracking.defaultUnitPointStart.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

void SyncedScreeningAlphaGradientView.GradientTracking.defaultUnitPointStart.setter(double a1)
{
  double *v1;

  *v1 = a1;
}

uint64_t (*SyncedScreeningAlphaGradientView.GradientTracking.defaultUnitPointStart.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double SyncedScreeningAlphaGradientView.GradientTracking.unitOffset.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

void SyncedScreeningAlphaGradientView.GradientTracking.unitOffset.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 8) = a1;
}

uint64_t (*SyncedScreeningAlphaGradientView.GradientTracking.unitOffset.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double SyncedScreeningAlphaGradientView.GradientTracking.gradientTransitionUnitLength.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

void SyncedScreeningAlphaGradientView.GradientTracking.gradientTransitionUnitLength.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 16) = a1;
}

uint64_t (*SyncedScreeningAlphaGradientView.GradientTracking.gradientTransitionUnitLength.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double SyncedScreeningAlphaGradientView.GradientTracking.unitTransitionPoint.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

void SyncedScreeningAlphaGradientView.GradientTracking.unitTransitionPoint.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 24) = a1;
}

uint64_t (*SyncedScreeningAlphaGradientView.GradientTracking.unitTransitionPoint.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double SyncedScreeningAlphaGradientView.GradientTracking.endOpacity.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

void SyncedScreeningAlphaGradientView.GradientTracking.endOpacity.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 32) = a1;
}

uint64_t (*SyncedScreeningAlphaGradientView.GradientTracking.endOpacity.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double SyncedScreeningAlphaGradientView.GradientTracking.startOpacity.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 40);
}

void SyncedScreeningAlphaGradientView.GradientTracking.startOpacity.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 40) = a1;
}

uint64_t (*SyncedScreeningAlphaGradientView.GradientTracking.startOpacity.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double SyncedScreeningAlphaGradientView.GradientTracking.init()@<D0>(_OWORD *a1@<X8>)
{
  double result;

  *a1 = xmmword_1BD645B70;
  a1[1] = xmmword_1BD645B80;
  result = 0.0;
  a1[2] = xmmword_1BD645B90;
  return result;
}

double default argument 0 of SyncedScreeningAlphaGradientView.GradientTracking.init(defaultUnitPointStart:unitOffset:gradientTransitionUnitLength:unitTransitionPoint:endOpacity:startOpacity:)()
{
  return 0.3;
}

double default argument 1 of SyncedScreeningAlphaGradientView.GradientTracking.init(defaultUnitPointStart:unitOffset:gradientTransitionUnitLength:unitTransitionPoint:endOpacity:startOpacity:)()
{
  return 0.0;
}

double default argument 2 of SyncedScreeningAlphaGradientView.GradientTracking.init(defaultUnitPointStart:unitOffset:gradientTransitionUnitLength:unitTransitionPoint:endOpacity:startOpacity:)()
{
  return 0.3;
}

double default argument 3 of SyncedScreeningAlphaGradientView.GradientTracking.init(defaultUnitPointStart:unitOffset:gradientTransitionUnitLength:unitTransitionPoint:endOpacity:startOpacity:)()
{
  return 0.5;
}

double default argument 4 of SyncedScreeningAlphaGradientView.GradientTracking.init(defaultUnitPointStart:unitOffset:gradientTransitionUnitLength:unitTransitionPoint:endOpacity:startOpacity:)()
{
  return 0.0;
}

double default argument 5 of SyncedScreeningAlphaGradientView.GradientTracking.init(defaultUnitPointStart:unitOffset:gradientTransitionUnitLength:unitTransitionPoint:endOpacity:startOpacity:)()
{
  return 1.0;
}

void SyncedScreeningAlphaGradientView.GradientTracking.init(defaultUnitPointStart:unitOffset:gradientTransitionUnitLength:unitTransitionPoint:endOpacity:startOpacity:)(double *a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>, double a6@<D4>, double a7@<D5>)
{
  *a1 = a2;
  a1[1] = a3;
  a1[2] = a4;
  a1[3] = a5;
  a1[4] = a6;
  a1[5] = a7;
}

uint64_t property wrapper backing initializer of SyncedScreeningAlphaGradientView.positionalData()
{
  type metadata accessor for PositionalData();
  lazy protocol witness table accessor for type PositionalData and conformance PositionalData();
  return ObservedObject.init(wrappedValue:)();
}

uint64_t SyncedScreeningAlphaGradientView.positionalData.getter()
{
  return swift_retain();
}

uint64_t key path getter for SyncedScreeningAlphaGradientView.positionalData : <A>SyncedScreeningAlphaGradientView<A>@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = SyncedScreeningAlphaGradientView.positionalData.getter();
  *a1 = result;
  return result;
}

void key path setter for SyncedScreeningAlphaGradientView.positionalData : <A>SyncedScreeningAlphaGradientView<A>()
{
  uint64_t v0;

  v0 = swift_retain();
  SyncedScreeningAlphaGradientView.positionalData.setter(v0);
}

void SyncedScreeningAlphaGradientView.positionalData.setter(uint64_t a1)
{
  uint64_t v1;

  swift_release();
  *(_QWORD *)(v1 + 64) = a1;
  OUTLINED_FUNCTION_0();
}

uint64_t (*SyncedScreeningAlphaGradientView.positionalData.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t SyncedScreeningAlphaGradientView.$positionalData.getter()
{
  type metadata accessor for PositionalData();
  lazy protocol witness table accessor for type PositionalData and conformance PositionalData();
  return ObservedObject.projectedValue.getter();
}

unint64_t lazy protocol witness table accessor for type PositionalData and conformance PositionalData()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type PositionalData and conformance PositionalData;
  if (!lazy protocol witness table cache variable for type PositionalData and conformance PositionalData)
  {
    v1 = type metadata accessor for PositionalData();
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for PositionalData, v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PositionalData and conformance PositionalData);
  }
  return result;
}

void property wrapper backing initializer of SyncedScreeningAlphaGradientView.viewState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for SyncedScreeningAlphaGradientView.AnimatedState(0, a3, a3, a4);
  OUTLINED_FUNCTION_10_23();
}

uint64_t sub_1BD07C004()
{
  return StateObject.init(wrappedValue:)();
}

uint64_t implicit closure #2 in implicit closure #1 in variable initialization expression of SyncedScreeningAlphaGradientView._viewState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for SyncedScreeningAlphaGradientView.AnimatedState(0, a1, a3, a4);
  return SyncedScreeningAlphaGradientView.AnimatedState.__allocating_init()();
}

void SyncedScreeningAlphaGradientView.init(uiView:positionalData:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v4 + 16) = a3;
  property wrapper backing initializer of SyncedScreeningAlphaGradientView.viewState((uint64_t)partial apply for implicit closure #2 in implicit closure #1 in variable initialization expression of SyncedScreeningAlphaGradientView._viewState, v4, a3, v5);
}

double sub_1BD07C0A4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  double result;
  uint64_t v10;

  v8 = property wrapper backing initializer of SyncedScreeningAlphaGradientView.positionalData();
  *(_QWORD *)v4 = v3;
  *(_OWORD *)(v4 + 8) = xmmword_1BD645B70;
  *(_OWORD *)(v4 + 24) = xmmword_1BD645B80;
  result = 0.0;
  *(_OWORD *)(v4 + 40) = xmmword_1BD645B90;
  *(_QWORD *)(v4 + 56) = v8;
  *(_QWORD *)(v4 + 64) = v10;
  *(_QWORD *)(v4 + 72) = a1;
  *(_QWORD *)(v4 + 80) = a2;
  *(_BYTE *)(v4 + 88) = a3 & 1;
  return result;
}

uint64_t sub_1BD07C104()
{
  return swift_deallocObject();
}

uint64_t partial apply for implicit closure #2 in implicit closure #1 in variable initialization expression of SyncedScreeningAlphaGradientView._viewState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return implicit closure #2 in implicit closure #1 in variable initialization expression of SyncedScreeningAlphaGradientView._viewState(*(_QWORD *)(v4 + 16), a2, a3, a4);
}

void SyncedScreeningAlphaGradientView.body.getter(uint64_t a1)
{
  id *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = OUTLINED_FUNCTION_15();
  v4 = *(_QWORD *)(a1 + 16);
  OUTLINED_FUNCTION_9_24(v3);
  outlined retain of SyncedScreeningAlphaGradientView<A>(v1);
  type metadata accessor for BackgroundView(255, v4, v5, v6);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _MaskEffect<LinearGradient>);
  type metadata accessor for ModifiedContent();
  type metadata accessor for ModifiedContent();
  type metadata accessor for SyncedScreeningAlphaGradientView.AnimatedState(255, v4, v7, v8);
  OUTLINED_FUNCTION_17_13();
}

void sub_1BD07C1D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,unint64_t a26)
{
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;

  v29 = type metadata accessor for _AnimationModifier();
  type metadata accessor for ModifiedContent();
  v30 = MEMORY[0x1C3B750C8](&protocol conformance descriptor for BackgroundView<A>, v26);
  v31 = lazy protocol witness table accessor for type _MaskEffect<LinearGradient> and conformance _MaskEffect<A>();
  a25 = v30;
  a26 = v31;
  v32 = MEMORY[0x1E0CD9C20];
  a23 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v27, &a25);
  a24 = MEMORY[0x1E0CD9728];
  MEMORY[0x1C3B750C8](v32, v28, &a23);
  MEMORY[0x1C3B750C8](MEMORY[0x1E0CDB148], v29);
  OUTLINED_FUNCTION_17_13();
}

void sub_1BD07C26C()
{
  GeometryReader.init(content:)();
  type metadata accessor for GeometryReader();
  OUTLINED_FUNCTION_17_13();
}

void sub_1BD07C2B0()
{
  id *v0;
  uint64_t v1;

  static SafeAreaRegions.all.getter();
  static Edge.Set.all.getter();
  View.ignoresSafeArea(_:edges:)();
  OUTLINED_FUNCTION_21_11();
  v1 = OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_9_24(v1);
  outlined retain of SyncedScreeningAlphaGradientView<A>(v0);
  type metadata accessor for ModifiedContent();
  OUTLINED_FUNCTION_10_23();
}

void sub_1BD07C348()
{
  View.onAppear(perform:)();
  OUTLINED_FUNCTION_21_11();
  swift_release();
  type metadata accessor for ModifiedContent();
  OUTLINED_FUNCTION_10_23();
}

uint64_t sub_1BD07C3D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t *, uint64_t);
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  _QWORD v14[3];
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v4 = *(void (**)(uint64_t, uint64_t *, uint64_t))(*(_QWORD *)(v1 - 8) + 16);
  v4(v3 - 160, &v13, v1);
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_24_11();
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v2);
  v5 = *(_QWORD *)(v3 - 152);
  v6 = *(_QWORD *)(v3 - 144);
  v7 = *(_BYTE *)(v3 - 136);
  v8 = *(_QWORD *)(v3 - 128);
  v9 = *(_QWORD *)(v3 - 120);
  v10 = *(_QWORD *)(v3 - 112);
  v11 = *(_QWORD *)(v3 - 104);
  v14[0] = *(_QWORD *)(v3 - 160);
  v14[1] = v5;
  v14[2] = v6;
  v15 = v7;
  v16 = v8;
  v17 = v9;
  v18 = v10;
  v19 = v11;
  v4(v0, v14, v1);
  OUTLINED_FUNCTION_43();
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
  return OUTLINED_FUNCTION_24_11();
}

uint64_t closure #1 in SyncedScreeningAlphaGradientView.body.getter@<X0>(uint64_t a1@<X0>, id *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, __int128 *a5@<X8>)
{
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(__int128 *, __int128 *, uint64_t);
  void *v26;
  _QWORD v29[2];
  _OWORD v30[3];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[3];
  _QWORD v35[2];
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _OWORD v48[2];
  uint64_t v49;
  id v50;

  v50 = *a2;
  v7 = type metadata accessor for SyncedScreeningAlphaGradientView(0, a3, a3, a4);
  v8 = v50;
  SyncedScreeningAlphaGradientView.gradient(for:)(a1, v7, v48);
  v42 = v48[0];
  v43 = v48[1];
  *(_QWORD *)&v44 = v49;
  v11 = type metadata accessor for BackgroundView(0, a3, v9, v10);
  v12 = MEMORY[0x1C3B750C8](&protocol conformance descriptor for BackgroundView<A>, v11);
  lazy protocol witness table accessor for type LinearGradient and conformance LinearGradient();
  View.mask<A>(_:)();
  outlined release of LinearGradient((uint64_t)v48);
  outlined release of BackgroundView<A>(&v50);
  v13 = (void *)v36;
  v16 = type metadata accessor for SyncedScreeningAlphaGradientView.AnimatedState(0, a3, v14, v15);
  MEMORY[0x1C3B750C8](&protocol conformance descriptor for SyncedScreeningAlphaGradientView<A>.AnimatedState, v16);
  StateObject.wrappedValue.getter();
  SyncedScreeningAlphaGradientView.AnimatedState.maxOpacity.getter();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _MaskEffect<LinearGradient>);
  v17 = type metadata accessor for ModifiedContent();
  v35[0] = v12;
  v35[1] = lazy protocol witness table accessor for type _MaskEffect<LinearGradient> and conformance _MaskEffect<A>();
  v18 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v17, v35);
  View.opacity(_:)();
  swift_bridgeObjectRelease();

  v19 = (void *)v42;
  static Animation.default.getter();
  v34[2] = StateObject.wrappedValue.getter();
  v20 = type metadata accessor for ModifiedContent();
  v34[0] = v18;
  v34[1] = MEMORY[0x1E0CD9728];
  v21 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v20, v34);
  MEMORY[0x1C3B750C8](&protocol conformance descriptor for SyncedScreeningAlphaGradientView<A>.AnimatedState, v16);
  View.animation<A>(_:value:)();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  v22 = (void *)v36;
  v30[0] = v36;
  v30[1] = v37;
  v30[2] = v38;
  v31 = v39;
  v32 = v40;
  v33 = v41;
  v23 = type metadata accessor for _AnimationModifier();
  v24 = type metadata accessor for ModifiedContent();
  v29[0] = v21;
  v29[1] = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDB148], v23);
  MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v24, v29);
  v25 = *(void (**)(__int128 *, __int128 *, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
  v25(&v42, v30, v24);
  swift_release();
  swift_bridgeObjectRelease();

  swift_release();
  v26 = (void *)v42;
  v36 = v42;
  v37 = v43;
  v38 = v44;
  v39 = v45;
  v40 = v46;
  v41 = v47;
  v25(a5, &v36, v24);
  swift_release();
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t outlined consume of StateObject<SyncedScreeningAlphaGradientView<A>.AnimatedState>.Storage<A>()
{
  return swift_release();
}

uint64_t partial apply for closure #1 in SyncedScreeningAlphaGradientView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, __int128 *a3@<X8>)
{
  uint64_t v3;

  return closure #1 in SyncedScreeningAlphaGradientView.body.getter(a1, (id *)(v3 + 24), *(_QWORD *)(v3 + 16), a2, a3);
}

double SyncedScreeningAlphaGradientView.gradient(for:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(_QWORD *__return_ptr, uint64_t);
  uint64_t v12;
  double v13;
  double v14;
  double v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double result;
  __int128 v27;
  _OWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _OWORD *v32;
  _QWORD v33[4];
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  _BYTE v37[32];
  uint64_t v38;

  v4 = v3;
  v31 = a1;
  v32 = a3;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1E0C80A78](v6);
  v30 = (uint64_t)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Color.black.getter();
  v29 = *(_QWORD *)(a2 + 16);
  v10 = type metadata accessor for SyncedScreeningAlphaGradientView.AnimatedState(0, v29, v8, v9);
  MEMORY[0x1C3B750C8](&protocol conformance descriptor for SyncedScreeningAlphaGradientView<A>.AnimatedState, v10);
  OUTLINED_FUNCTION_6_25();
  SyncedScreeningAlphaGradientView.AnimatedState.maxOpacity.getter();
  OUTLINED_FUNCTION_43();
  Color.opacity(_:)();
  swift_release();
  static Color.black.getter();
  OUTLINED_FUNCTION_6_25();
  SyncedScreeningAlphaGradientView.AnimatedState.minOpacity.getter();
  OUTLINED_FUNCTION_43();
  Color.opacity(_:)();
  OUTLINED_FUNCTION_21_11();
  v11 = *(void (**)(_QWORD *__return_ptr, uint64_t))(**(_QWORD **)(v4 + 64) + 176);
  v12 = swift_retain();
  v11(v33, v12);
  swift_release();
  outlined init with take of ListAnchor?((uint64_t)v33, (uint64_t)v37);
  if (v38)
  {
    type metadata accessor for CGRect(0);
    swift_retain();
    GeometryProxy.subscript.getter();
    outlined release of ListAnchor?((uint64_t)v33);
    v13 = *((double *)&v34 + 1);
    GeometryProxy.size.getter();
    v15 = v14;
    outlined release of ListAnchor?((uint64_t)v33);
    v16 = 1.0 - v13 / v15 + *(double *)(v4 + 16);
  }
  else
  {
    v16 = *(double *)(v4 + 8);
  }
  if (*(double *)(v4 + 32) <= v16)
  {
    v17 = type metadata accessor for TaskPriority();
    __swift_storeEnumTagSinglePayload(v30, 1, 1, v17);
    type metadata accessor for MainActor();
    outlined retain of SyncedScreeningAlphaGradientView<A>((id *)v4);
    v18 = static MainActor.shared.getter();
    v19 = (_QWORD *)OUTLINED_FUNCTION_15();
    v20 = MEMORY[0x1E0DF06E8];
    v19[2] = v18;
    v19[3] = v20;
    v19[4] = v29;
    memcpy(v19 + 5, (const void *)v4, 0x59uLL);
    _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
    swift_release();
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Gradient.Stop>);
  v21 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v21 + 16) = xmmword_1BD645390;
  swift_retain();
  *(_QWORD *)(v21 + 32) = Gradient.Stop.init(color:location:)();
  *(_QWORD *)(v21 + 40) = v22;
  swift_retain();
  *(_QWORD *)(v21 + 48) = Gradient.Stop.init(color:location:)();
  *(_QWORD *)(v21 + 56) = v23;
  swift_retain();
  *(_QWORD *)(v21 + 64) = Gradient.Stop.init(color:location:)();
  *(_QWORD *)(v21 + 72) = v24;
  swift_retain();
  *(_QWORD *)(v21 + 80) = Gradient.Stop.init(color:location:)();
  *(_QWORD *)(v21 + 88) = v25;
  static UnitPoint.bottom.getter();
  static UnitPoint.top.getter();
  MEMORY[0x1C3B72968](v21);
  LinearGradient.init(gradient:startPoint:endPoint:)();
  swift_release();
  swift_release();
  result = *(double *)&v34;
  v27 = v35;
  v28 = v32;
  *v32 = v34;
  v28[1] = v27;
  *((_QWORD *)v28 + 4) = v36;
  return result;
}

id *outlined retain of SyncedScreeningAlphaGradientView<A>(id *a1)
{
  id v2;

  v2 = *a1;
  swift_retain();
  outlined copy of StateObject<SyncedScreeningAlphaGradientView<A>.AnimatedState>.Storage<A>();
  return a1;
}

uint64_t outlined copy of StateObject<SyncedScreeningAlphaGradientView<A>.AnimatedState>.Storage<A>()
{
  return swift_retain();
}

uint64_t type metadata accessor for BackgroundView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for BackgroundView);
}

uint64_t type metadata accessor for SyncedScreeningAlphaGradientView.AnimatedState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SyncedScreeningAlphaGradientView.AnimatedState);
}

unint64_t lazy protocol witness table accessor for type _MaskEffect<LinearGradient> and conformance _MaskEffect<A>()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type _MaskEffect<LinearGradient> and conformance _MaskEffect<A>;
  if (!lazy protocol witness table cache variable for type _MaskEffect<LinearGradient> and conformance _MaskEffect<A>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _MaskEffect<LinearGradient>);
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD8A38], v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _MaskEffect<LinearGradient> and conformance _MaskEffect<A>);
  }
  return result;
}

uint64_t closure #2 in SyncedScreeningAlphaGradientView.body.getter()
{
  static Animation.default.getter();
  withAnimation<A>(_:_:)();
  return swift_release();
}

uint64_t objectdestroy_2Tm()
{
  uint64_t v0;

  swift_release();
  outlined consume of StateObject<SyncedScreeningAlphaGradientView<A>.AnimatedState>.Storage<A>();
  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in SyncedScreeningAlphaGradientView.body.getter()
{
  return closure #2 in SyncedScreeningAlphaGradientView.body.getter();
}

uint64_t outlined init with take of ListAnchor?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ListAnchor?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t closure #1 in SyncedScreeningAlphaGradientView.gradient(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[3] = a4;
  v5[4] = a5;
  v5[2] = a1;
  type metadata accessor for MainActor();
  v5[5] = static MainActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  return swift_task_switch();
}

uint64_t closure #1 in SyncedScreeningAlphaGradientView.gradient(for:)()
{
  uint64_t v0;
  int8x16_t v2;

  v2 = *(int8x16_t *)(v0 + 24);
  swift_release();
  *(int8x16_t *)(swift_task_alloc() + 16) = vextq_s8(v2, v2, 8uLL);
  static Animation.default.getter();
  withAnimation<A>(_:_:)();
  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BD07CE4C()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_release();
  outlined consume of StateObject<SyncedScreeningAlphaGradientView<A>.AnimatedState>.Storage<A>();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in SyncedScreeningAlphaGradientView.gradient(for:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v5 = v1[3];
  v4 = v1[4];
  v6 = v1[2];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = partial apply for closure #1 in SyncedScreeningAlphaGradientView.gradient(for:);
  return closure #1 in SyncedScreeningAlphaGradientView.gradient(for:)(a1, v6, v5, (uint64_t)(v1 + 5), v4);
}

uint64_t partial apply for closure #1 in SyncedScreeningAlphaGradientView.gradient(for:)()
{
  uint64_t v0;

  OUTLINED_FUNCTION_0_2();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t closure #1 in closure #2 in SyncedScreeningAlphaGradientView.body.getter(uint64_t a1, uint64_t a2, void (*a3)(double), uint64_t a4)
{
  uint64_t v6;

  v6 = type metadata accessor for SyncedScreeningAlphaGradientView.AnimatedState(0, a2, (uint64_t)a3, a4);
  MEMORY[0x1C3B750C8](&protocol conformance descriptor for SyncedScreeningAlphaGradientView<A>.AnimatedState, v6);
  StateObject.wrappedValue.getter();
  a3(*(double *)(a1 + 48));
  return swift_release();
}

void _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;

  v3 = OUTLINED_FUNCTION_13_22();
  OUTLINED_FUNCTION_20_21(v3);
  if (v4)
  {
    outlined destroy of TaskPriority?(v1);
  }
  else
  {
    TaskPriority.rawValue.getter();
    OUTLINED_FUNCTION_8_31();
  }
  if (*(_QWORD *)(v0 + 16))
  {
    OUTLINED_FUNCTION_22_18();
    OUTLINED_FUNCTION_25_17();
    OUTLINED_FUNCTION_14_33();
    OUTLINED_FUNCTION_15_21();
  }
  v5 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v5 + 16) = v2;
  *(_QWORD *)(v5 + 24) = v0;
  swift_task_create();
  OUTLINED_FUNCTION_5_22();
}

uint64_t outlined release of ListAnchor?(uint64_t a1)
{
  swift_release();
  return a1;
}

uint64_t associated type witness table accessor for View.Body : View in SyncedScreeningAlphaGradientView<A>()
{
  return swift_getOpaqueTypeConformance2();
}

void _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCytSg_Tgm5()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;

  v3 = OUTLINED_FUNCTION_13_22();
  OUTLINED_FUNCTION_20_21(v3);
  if (v4)
  {
    outlined destroy of TaskPriority?(v1);
  }
  else
  {
    TaskPriority.rawValue.getter();
    OUTLINED_FUNCTION_8_31();
  }
  if (*(_QWORD *)(v0 + 16))
  {
    OUTLINED_FUNCTION_22_18();
    OUTLINED_FUNCTION_25_17();
    OUTLINED_FUNCTION_14_33();
    OUTLINED_FUNCTION_15_21();
  }
  v5 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v5 + 16) = v2;
  *(_QWORD *)(v5 + 24) = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ()?);
  swift_task_create();
  OUTLINED_FUNCTION_5_22();
}

void protocol witness for View.body.getter in conformance SyncedScreeningAlphaGradientView<A>(uint64_t a1)
{
  const void *v1;
  _BYTE v3[89];

  memcpy(v3, v1, sizeof(v3));
  SyncedScreeningAlphaGradientView.body.getter(a1);
}

_QWORD *sub_1BD07D210(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t type metadata instantiation function for SyncedScreeningAlphaGradientView()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t destroy for SyncedScreeningAlphaGradientView(id *a1)
{

  swift_release();
  return outlined consume of StateObject<SyncedScreeningAlphaGradientView<A>.AnimatedState>.Storage<A>();
}

uint64_t initializeWithCopy for SyncedScreeningAlphaGradientView(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  id v8;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v4 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v4;
  v5 = *(_QWORD *)(a2 + 72);
  v6 = *(_QWORD *)(a2 + 80);
  v7 = *(_BYTE *)(a2 + 88);
  v8 = v3;
  swift_retain();
  outlined copy of StateObject<SyncedScreeningAlphaGradientView<A>.AnimatedState>.Storage<A>();
  *(_QWORD *)(a1 + 72) = v5;
  *(_QWORD *)(a1 + 80) = v6;
  *(_BYTE *)(a1 + 88) = v7;
  return a1;
}

uint64_t assignWithCopy for SyncedScreeningAlphaGradientView(uint64_t a1, void **a2)
{
  void **v2;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;

  v2 = a2;
  v4 = *a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = v2[1];
  *(_QWORD *)(a1 + 16) = v2[2];
  *(_QWORD *)(a1 + 24) = v2[3];
  *(_QWORD *)(a1 + 32) = v2[4];
  *(_QWORD *)(a1 + 40) = v2[5];
  *(_QWORD *)(a1 + 48) = v2[6];
  *(_QWORD *)(a1 + 56) = v2[7];
  *(_QWORD *)(a1 + 64) = v2[8];
  swift_retain();
  swift_release();
  v7 = v2[9];
  v8 = v2[10];
  LOBYTE(v2) = *((_BYTE *)v2 + 88);
  outlined copy of StateObject<SyncedScreeningAlphaGradientView<A>.AnimatedState>.Storage<A>();
  *(_QWORD *)(a1 + 72) = v7;
  *(_QWORD *)(a1 + 80) = v8;
  *(_BYTE *)(a1 + 88) = (_BYTE)v2;
  outlined consume of StateObject<SyncedScreeningAlphaGradientView<A>.AnimatedState>.Storage<A>();
  return a1;
}

void *__swift_memcpy89_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x59uLL);
}

uint64_t assignWithTake for SyncedScreeningAlphaGradientView(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  char v6;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v5;
  swift_release();
  v6 = *(_BYTE *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 88) = v6;
  outlined consume of StateObject<SyncedScreeningAlphaGradientView<A>.AnimatedState>.Storage<A>();
  return a1;
}

uint64_t getEnumTagSinglePayload for SyncedScreeningAlphaGradientView(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 89))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SyncedScreeningAlphaGradientView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 88) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 89) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 89) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for SyncedScreeningAlphaGradientView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SyncedScreeningAlphaGradientView);
}

void type metadata completion function for SyncedScreeningAlphaGradientView.AnimatedState()
{
  unint64_t v0;

  type metadata accessor for Published<Double>();
  if (v0 <= 0x3F)
    swift_initClassMetadata2();
}

void type metadata accessor for Published<Double>()
{
  unint64_t v0;
  uint64_t v1;

  if (!lazy cache variable for type metadata for Published<Double>)
  {
    v0 = type metadata accessor for Published();
    if (!v1)
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for Published<Double>);
  }
}

uint64_t type metadata accessor for SyncedScreeningAlphaGradientView.GradientTracking(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SyncedScreeningAlphaGradientView.GradientTracking);
}

void sub_1BD07D580(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *a1;
  v5 = type metadata accessor for BackgroundView(255, *a1, a3, a4);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _MaskEffect<LinearGradient>);
  OUTLINED_FUNCTION_18_25();
  OUTLINED_FUNCTION_19_22();
  v8 = type metadata accessor for SyncedScreeningAlphaGradientView.AnimatedState(255, v4, v6, v7);
  MEMORY[0x1C3B750C8](&protocol conformance descriptor for SyncedScreeningAlphaGradientView<A>.AnimatedState, v8);
  type metadata accessor for _AnimationModifier();
  type metadata accessor for ModifiedContent();
  MEMORY[0x1C3B750C8](&protocol conformance descriptor for BackgroundView<A>, v5);
  lazy protocol witness table accessor for type _MaskEffect<LinearGradient> and conformance _MaskEffect<A>();
  OUTLINED_FUNCTION_10_23();
}

void sub_1BD07D64C()
{
  OUTLINED_FUNCTION_23_14();
}

void sub_1BD07D660()
{
  uint64_t v0;

  MEMORY[0x1C3B750C8](MEMORY[0x1E0CDB148], v0);
  OUTLINED_FUNCTION_17_13();
}

void sub_1BD07D684()
{
  uint64_t v0;

  v0 = type metadata accessor for GeometryReader();
  OUTLINED_FUNCTION_18_25();
  OUTLINED_FUNCTION_19_22();
  MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9318], v0);
  OUTLINED_FUNCTION_10_23();
}

void sub_1BD07D6E0()
{
  OUTLINED_FUNCTION_23_14();
}

uint64_t type metadata instantiation function for BackgroundView()
{
  return swift_allocateGenericValueMetadata();
}

void base witness table accessor for View in BackgroundView<A>()
{
  JUMPOUT(0x1C3B750C8);
}

uint64_t protocol witness for UIViewRepresentable.makeUIView(context:) in conformance BackgroundView<A>(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  return BackgroundView.makeUIView(context:)(a1, *v2, *(_QWORD *)(a2 + 16));
}

uint64_t protocol witness for UIViewRepresentable.updateUIView(_:context:) in conformance BackgroundView<A>(uint64_t a1)
{
  return TPNumberPadCharacter.rawValue.getter(a1);
}

uint64_t protocol witness for UIViewRepresentable.sizeThatFits(_:uiView:context:) in conformance BackgroundView<A>()
{
  return UIViewRepresentable.sizeThatFits(_:uiView:context:)();
}

uint64_t associated type witness table accessor for ObservableObject.ObjectWillChangePublisher : Publisher in SyncedScreeningAlphaGradientView<A>.AnimatedState()
{
  return MEMORY[0x1E0C96020];
}

uint64_t protocol witness for static View._makeView(view:inputs:) in conformance BackgroundView<A>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1C3B750C8](&protocol conformance descriptor for BackgroundView<A>, a3);
  return static UIViewRepresentable._makeView(view:inputs:)();
}

uint64_t protocol witness for static View._makeViewList(view:inputs:) in conformance BackgroundView<A>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1C3B750C8](&protocol conformance descriptor for BackgroundView<A>, a3);
  return static UIViewRepresentable._makeViewList(view:inputs:)();
}

void protocol witness for View.body.getter in conformance BackgroundView<A>(uint64_t a1)
{
  MEMORY[0x1C3B750C8](&protocol conformance descriptor for BackgroundView<A>, a1);
  UIViewRepresentable.body.getter();
  __break(1u);
}

void sub_1BD07D86C(double *a1@<X8>)
{
  *a1 = SyncedScreeningAlphaGradientView.AnimatedState.unitStart.getter();
  OUTLINED_FUNCTION_0();
}

void sub_1BD07D890()
{
  SyncedScreeningAlphaGradientView.AnimatedState.unitStart.setter();
  OUTLINED_FUNCTION_0();
}

void sub_1BD07D8B4(double *a1@<X8>)
{
  *a1 = SyncedScreeningAlphaGradientView.AnimatedState.maxOpacity.getter();
  OUTLINED_FUNCTION_0();
}

void sub_1BD07D8D8()
{
  SyncedScreeningAlphaGradientView.AnimatedState.maxOpacity.setter();
  OUTLINED_FUNCTION_0();
}

void sub_1BD07D8FC(double *a1@<X8>)
{
  *a1 = SyncedScreeningAlphaGradientView.AnimatedState.minOpacity.getter();
  OUTLINED_FUNCTION_0();
}

void sub_1BD07D920()
{
  SyncedScreeningAlphaGradientView.AnimatedState.minOpacity.setter();
  OUTLINED_FUNCTION_0();
}

uint64_t _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRytSg_TG5(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  *(_QWORD *)(v2 + 16) = a1;
  v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v3;
  *v3 = v2;
  v3[1] = _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRytSg_TG5TQ0_;
  return v5(v2 + 32);
}

uint64_t _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRytSg_TG5TQ0_()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v4;

  v1 = *v0;
  v2 = *(_BYTE **)(*v0 + 16);
  v4 = *v0;
  swift_task_dealloc();
  *v2 = *(_BYTE *)(v1 + 32);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_1BD07D9FC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRytSg_TG5TA()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_7_19(v1);
  return OUTLINED_FUNCTION_2_21(v2, v3, v4, v5);
}

uint64_t partial apply for closure #1 in closure #1 in SyncedScreeningAlphaGradientView.gradient(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return closure #1 in closure #2 in SyncedScreeningAlphaGradientView.body.getter(*(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 16), (void (*)(double))SyncedScreeningAlphaGradientView.AnimatedState.minOpacity.setter, a4);
}

uint64_t partial apply for closure #1 in closure #2 in SyncedScreeningAlphaGradientView.body.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return closure #1 in closure #2 in SyncedScreeningAlphaGradientView.body.getter(*(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 16), (void (*)(double))SyncedScreeningAlphaGradientView.AnimatedState.maxOpacity.setter, a4);
}

unint64_t lazy protocol witness table accessor for type LinearGradient and conformance LinearGradient()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type LinearGradient and conformance LinearGradient;
  if (!lazy protocol witness table cache variable for type LinearGradient and conformance LinearGradient)
  {
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD93B0], MEMORY[0x1E0CD93C0]);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LinearGradient and conformance LinearGradient);
  }
  return result;
}

uint64_t outlined release of LinearGradient(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

id *outlined release of BackgroundView<A>(id *a1)
{

  return a1;
}

BOOL ConversationControlsAudioRouteMenuButtonProvider.shouldToggleBetweenSpeakerAndReceiver.getter()
{
  void *v0;
  id v1;
  char **v2;
  void *v3;
  id v4;
  id v5;
  unint64_t v6;
  char **v7;
  id v8;
  unint64_t v9;
  uint64_t v10;
  id v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  unsigned __int8 v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  uint64_t v29;
  unsigned __int8 v30;
  char **v32;

  v0 = (void *)objc_opt_self();
  v1 = objc_msgSend(v0, sel_sharedInstance);
  v2 = (char **)objc_msgSend(v1, sel_routeController);

  v3 = (void *)objc_opt_self();
  v4 = objc_msgSend(v0, sel_sharedInstance);
  v5 = objc_msgSend(v3, sel_eligibleLagunaDevices_, v4);

  if (v5)
  {
    _sSo8NSObjectCMaTm_0(0, &lazy cache variable for type metadata for TUNearbyDeviceHandle);
    v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    v7 = &selRef_associatedAppBundleIdentifier;
    v8 = objc_msgSend(v2, sel_routes);
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TURoute);
    v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v9 >> 62)
      goto LABEL_43;
    v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    while (1)
    {
      swift_bridgeObjectRelease();
      if (v10 != 2)
      {
        swift_bridgeObjectRelease();
        goto LABEL_35;
      }
      v11 = objc_msgSend(v2, v7[375]);
      v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      v32 = v2;
      if (v12 >> 62)
      {
        swift_bridgeObjectRetain();
        v13 = _CocoaArrayWrapper.endIndex.getter();
        if (!v13)
        {
LABEL_16:
          swift_bridgeObjectRelease_n();
          if (v6 >> 62)
          {
            swift_bridgeObjectRetain();
            v19 = _CocoaArrayWrapper.endIndex.getter();

            swift_bridgeObjectRelease_n();
          }
          else
          {
            v19 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRelease();

          }
          return v19 == 0;
        }
      }
      else
      {
        v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v13)
          goto LABEL_16;
      }
      v14 = 4;
      v2 = &selRef_associatedAppBundleIdentifier;
      while (1)
      {
        v7 = (char **)(v14 - 4);
        v15 = (v12 & 0xC000000000000001) != 0
            ? (id)MEMORY[0x1C3B73D18](v14 - 4, v12)
            : *(id *)(v12 + 8 * v14);
        v16 = v15;
        v17 = v14 - 3;
        if (__OFADD__(v7, 1))
          break;
        if ((objc_msgSend(v15, sel_isSpeaker) & 1) != 0)
        {

        }
        else
        {
          v18 = objc_msgSend(v16, sel_isReceiver);

          if ((v18 & 1) == 0)
          {
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease_n();
            return 0;
          }
        }
        ++v14;
        if (v17 == v13)
          goto LABEL_16;
      }
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      swift_bridgeObjectRetain();
      v10 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
  }
  v21 = objc_msgSend(v2, sel_routes);
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TURoute);
  v22 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v22 >> 62)
  {
    swift_bridgeObjectRetain();
    v23 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    v23 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v23 == 2)
  {
    v24 = objc_msgSend(v2, sel_routes);
    v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v6 >> 62)
    {
      swift_bridgeObjectRetain();
      v25 = _CocoaArrayWrapper.endIndex.getter();
      if (v25)
        goto LABEL_24;
    }
    else
    {
      v25 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v25)
      {
LABEL_24:
        v7 = (char **)(v6 & 0xC000000000000001);
        v26 = 4;
        do
        {
          if (v7)
            v27 = (id)MEMORY[0x1C3B73D18](v26 - 4, v6);
          else
            v27 = *(id *)(v6 + 8 * v26);
          v28 = v27;
          v29 = v26 - 3;
          if (__OFADD__(v26 - 4, 1))
            goto LABEL_42;
          if ((objc_msgSend(v27, sel_isSpeaker) & 1) != 0)
          {

          }
          else
          {
            v30 = objc_msgSend(v28, sel_isReceiver);

            if ((v30 & 1) == 0)
            {
              v20 = 0;
              goto LABEL_39;
            }
          }
          ++v26;
        }
        while (v29 != v25);
      }
    }
    v20 = 1;
LABEL_39:

    swift_bridgeObjectRelease_n();
    return v20;
  }
LABEL_35:

  return 0;
}

id ConversationControlsAudioRouteMenuButtonProvider.makeButton(frame:)()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  id v6;

  v1 = static ConversationControlsButtonFactory.makeButton(frame:provider:)(v0);
  v3 = v2;
  v4 = v1;
  ControlsButtonProvider.button.setter(v1, v3);
  v5 = OUTLINED_FUNCTION_15();
  swift_weakInit();
  v6 = v4;
  swift_retain();
  UIControl.addAction(for:handler:)(64, (uint64_t)partial apply for closure #1 in ConversationControlsAudioRouteMenuButtonProvider.makeButton(frame:), v5);

  swift_release_n();
  return v1;
}

void closure #1 in ConversationControlsAudioRouteMenuButtonProvider.makeButton(frame:)()
{
  id v0;
  id v1;
  id v2;
  unint64_t v3;
  id v4;
  id v5;

  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    if (ConversationControlsAudioRouteMenuButtonProvider.shouldToggleBetweenSpeakerAndReceiver.getter())
    {
      v0 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
      v1 = objc_msgSend(v0, sel_routeController);

      v2 = objc_msgSend(v1, sel_routes);
      _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TURoute);
      v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      v4 = v1;
      v5 = specialized Sequence.first(where:)(v3, v4);
      swift_bridgeObjectRelease();
      if (v5)
      {
        objc_msgSend(v4, sel_pickRoute_, v5);

      }
      swift_release();

    }
    else
    {
      swift_release();
    }
  }
}

id specialized Sequence.first(where:)(unint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  char v11;

  if (a1 >> 62)
    goto LABEL_15;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; v3 = _CocoaArrayWrapper.endIndex.getter())
  {
    v4 = 4;
    while (1)
    {
      v5 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1C3B73D18](v4 - 4, a1) : *(id *)(a1 + 8 * v4);
      v6 = v4 - 3;
      if (__OFADD__(v4 - 4, 1))
        break;
      v7 = v5;
      v8 = objc_msgSend(a2, sel_pickedRoute);
      if (!v8)
      {

        swift_bridgeObjectRelease();
        return v7;
      }
      v9 = v8;
      _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TURoute);
      v10 = v7;
      v11 = static NSObject.== infix(_:_:)();

      if ((v11 & 1) == 0)
      {

        swift_bridgeObjectRelease();
        return v7;
      }

      ++v4;
      if (v6 == v3)
        goto LABEL_16;
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
  }
LABEL_16:

  swift_bridgeObjectRelease();
  return 0;
}

Swift::Void __swiftcall ConversationControlsAudioRouteMenuButtonProvider.buttonChanged()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  unsigned int v12;
  id v13;
  unint64_t v14;
  unint64_t v15;
  Swift::String_optional v16;
  Swift::String v17;
  uint64_t v18;
  Swift::String v19;
  uint64_t v20;
  unint64_t v21;
  _BYTE v22[24];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<TURoute?>.Publisher);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = &v22[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  ControlsButtonProvider.buttonChanged()();
  swift_beginAccess();
  v6 = MEMORY[0x1C3B752C0](v0 + 16);
  if (v6)
  {
    v7 = (void *)v6;
    type metadata accessor for ConversationControlsButton();
    if (swift_dynamicCastClass())
    {
      v8 = (void *)objc_opt_self();
      v9 = v7;
      v10 = objc_msgSend(v8, sel_sharedInstance);
      v11 = objc_msgSend(v10, sel_routeController);

      v12 = objc_msgSend(v11, sel_areAuxiliaryRoutesAvailable);
      v13 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
      if (v12)
      {
        v21 = 0xE000000000000000;
        v14 = 0x6F69647541;
        v15 = 0xE500000000000000;
      }
      else
      {
        v14 = 0xD00000000000001ELL;
        v21 = 0xE000000000000000;
        v15 = 0x80000001BD66F870;
      }
      v16.value._countAndFlagsBits = 0x61737265766E6F43;
      v16.value._object = (void *)0xEF74694B6E6F6974;
      v17._countAndFlagsBits = 0;
      v17._object = (void *)0xE000000000000000;
      v18 = 0;
      v19 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v14, v16, (NSBundle)v13, v17, *(Swift::String *)(&v21 - 1));

      ConversationControlsButton.localizedName.setter(v19._countAndFlagsBits, (uint64_t)v19._object);
    }
    outlined bridged method (mbnn) of @objc NSObject.accessibilityIdentifier.setter(0xD00000000000001ALL, 0x80000001BD66F850, v7);
    (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & **(_QWORD **)(v0 + 136)) + 0x598))();
    OUTLINED_FUNCTION_15();
    swift_weakInit();
    lazy protocol witness table accessor for type Published<TURoute?>.Publisher and conformance Published<A>.Publisher();
    v20 = Publisher<>.sink(receiveValue:)();

    swift_release();
    (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
    swift_beginAccess();
    *(_QWORD *)(v1 + 48) = v20;
    swift_release();
  }
}

uint64_t closure #1 in ConversationControlsAudioRouteMenuButtonProvider.buttonChanged()(void **a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  void *v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  _QWORD *v12;
  uint64_t (*v13)(uint64_t);
  _QWORD *v14;
  id v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  _QWORD *v27;
  uint64_t (*v28)(void);
  _QWORD *v29;
  void *v30;
  id v31;
  _BYTE v32[24];

  v2 = type metadata accessor for UUID();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = &v32[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = *a1;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v8 = result;
    v9 = result + 16;
    swift_beginAccess();
    v10 = MEMORY[0x1C3B752C0](v9);
    if (v10)
    {
      v11 = (void *)v10;
      if (v6)
      {
        v12 = *(_QWORD **)(v8 + 136);
        v13 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v12) + 0x460);
        v14 = v12;
        v15 = v6;
        v16 = swift_retain();
        v17 = (void *)v13(v16);

        if (v17)
        {
          v18 = objc_msgSend(v17, sel_audioRouteGlyphFor_, v15);
          swift_unknownObjectRelease();
        }
        else
        {
          v18 = 0;
        }
        ControlsButtonProvider.image.setter(v18);
        swift_release();
        objc_msgSend(v11, sel_setSelected_, objc_msgSend(v15, sel_isReceiver) ^ 1);
      }
      else
      {
        if (one-time initialization token for conversationControls != -1)
          swift_once();
        v19 = type metadata accessor for Logger();
        __swift_project_value_buffer(v19, (uint64_t)&static Logger.conversationControls);
        v20 = Logger.logObject.getter();
        v21 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v20, v21))
        {
          v22 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v22 = 0;
          _os_log_impl(&dword_1BD004000, v20, v21, "ConversationControlsManager didn't have a route specified, falling back to Speaker.", v22, 2u);
          MEMORY[0x1C3B751B8](v22, -1, -1);
        }

        UUID.init()();
        v23 = UUID.uuidString.getter();
        v25 = v24;
        (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
        v26 = objc_allocWithZone(MEMORY[0x1E0DBD348]);
        v15 = @nonobjc TUMutableRoute.init(uniqueIdentifier:name:)(v23, v25, 0x72656B61657053, 0xE700000000000000);
        objc_msgSend(v15, sel_setSpeaker_, 1);
        v27 = *(_QWORD **)(v8 + 136);
        v28 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v27) + 0x460);
        swift_retain();
        v29 = v27;
        v30 = (void *)v28();

        if (v30)
        {
          v31 = objc_msgSend(v30, sel_audioRouteGlyphFor_, v15);
          swift_unknownObjectRelease();
        }
        else
        {
          v31 = 0;
        }
        ControlsButtonProvider.image.setter(v31);
        swift_release();
        objc_msgSend(v11, sel_setSelected_, 1);
      }

    }
    return swift_release();
  }
  return result;
}

id ConversationControlsAudioRouteMenuButtonProvider.menu(for:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  void *v6;
  id v7;

  v1 = v0;
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v2 = type metadata accessor for Logger();
  __swift_project_value_buffer(v2, (uint64_t)&static Logger.conversationControls);
  v3 = Logger.logObject.getter();
  v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_1BD004000, v3, v4, "Displaying Audio Routing menu", v5, 2u);
    MEMORY[0x1C3B751B8](v5, -1, -1);
  }

  v6 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **(_QWORD **)(v1 + 136)) + 0x460))();
  if (!v6)
    return 0;
  v7 = objc_msgSend(v6, sel_audioRouteMenu);
  swift_unknownObjectRelease();
  return v7;
}

Swift::Bool __swiftcall ConversationControlsAudioRouteMenuButtonProvider.shouldEnableMenu()()
{
  return !ConversationControlsAudioRouteMenuButtonProvider.shouldToggleBetweenSpeakerAndReceiver.getter();
}

void ConversationControlsAudioRouteMenuButtonProvider.__allocating_init(controlsManager:context:shape:menuHostViewController:)()
{
  OUTLINED_FUNCTION_15();
  ConversationControlsMenuButtonProvider.init(controlsManager:context:shape:menuHostViewController:)();
}

uint64_t ConversationControlsAudioRouteMenuButtonProvider.__deallocating_deinit()
{
  ConversationControlsMenuButtonProvider.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1BD07EB58()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

void partial apply for closure #1 in ConversationControlsAudioRouteMenuButtonProvider.makeButton(frame:)()
{
  closure #1 in ConversationControlsAudioRouteMenuButtonProvider.makeButton(frame:)();
}

uint64_t partial apply for closure #1 in ConversationControlsAudioRouteMenuButtonProvider.buttonChanged()(void **a1)
{
  return closure #1 in ConversationControlsAudioRouteMenuButtonProvider.buttonChanged()(a1);
}

unint64_t lazy protocol witness table accessor for type Published<TURoute?>.Publisher and conformance Published<A>.Publisher()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type Published<TURoute?>.Publisher and conformance Published<A>.Publisher;
  if (!lazy protocol witness table cache variable for type Published<TURoute?>.Publisher and conformance Published<A>.Publisher)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&demangling cache variable for type metadata for Published<TURoute?>.Publisher);
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0C96190], v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Published<TURoute?>.Publisher and conformance Published<A>.Publisher);
  }
  return result;
}

uint64_t type metadata accessor for ConversationControlsAudioRouteMenuButtonProvider()
{
  return objc_opt_self();
}

BOOL static ParticipantVideoLayerType.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

void ParticipantVideoLayerType.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
  Hasher._combine(_:)(a2);
  OUTLINED_FUNCTION_0();
}

Swift::Int ParticipantVideoLayerType.hashValue.getter(unsigned __int8 a1)
{
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1);
  return Hasher._finalize()();
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance ParticipantVideoLayerType(char *a1, char *a2)
{
  return static ParticipantVideoLayerType.== infix(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance ParticipantVideoLayerType()
{
  unsigned __int8 *v0;

  return ParticipantVideoLayerType.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance ParticipantVideoLayerType(uint64_t a1)
{
  unsigned __int8 *v1;

  ParticipantVideoLayerType.hash(into:)(a1, *v1);
}

id RemoteParticipantVideoProvider.token.getter()
{
  uint64_t *v0;
  void *v1;
  void *v2;
  id v3;

  v1 = (void *)OUTLINED_FUNCTION_1_27(*v0);
  v2 = v1;
  if (!v1)
    return 0;
  v3 = objc_msgSend(v1, sel_streamToken);

  return v3;
}

void RemoteParticipantVideoProvider.hasReceivedVideoFrames.getter()
{
  RemoteParticipantVideoProvider.hasReceivedVideoFrames.getter();
}

{
  uint64_t *v0;
  void *v1;

  v1 = (void *)OUTLINED_FUNCTION_1_27(*v0);
  if (v1)
  {
    OUTLINED_FUNCTION_37_9(v1);

  }
  OUTLINED_FUNCTION_0();
}

void RemoteParticipantVideoProvider.isVideoReconnecting.getter()
{
  RemoteParticipantVideoProvider.hasReceivedVideoFrames.getter();
}

unint64_t RemoteParticipantVideoProvider.videoAttributeOrientation.getter()
{
  return RemoteParticipantVideoProvider.videoAttributeOrientation.getter((uint64_t (*)(void))RemoteParticipantVideoProvider.remoteVideoAttributes.getter, (const char **)&selRef_orientation);
}

unint64_t RemoteParticipantVideoProvider.screenAttributeOrientation.getter()
{
  return RemoteParticipantVideoProvider.videoAttributeOrientation.getter((uint64_t (*)(void))RemoteParticipantVideoProvider.remoteScreenAttributes.getter, (const char **)&selRef_orientation);
}

unint64_t RemoteParticipantVideoProvider.videoAttributeOrientation.getter(uint64_t (*a1)(void), const char **a2)
{
  uint64_t v3;
  void *v4;
  unsigned int v5;
  uint64_t v6;

  v3 = a1();
  v4 = (void *)v3;
  if (v3)
  {
    v5 = OUTLINED_FUNCTION_123(v3, *a2);

    v6 = v5;
  }
  else
  {
    v6 = 0;
  }
  return v6 | ((unint64_t)(v4 == 0) << 32);
}

unint64_t RemoteParticipantVideoProvider.videoAttributeCamera.getter()
{
  return RemoteParticipantVideoProvider.videoAttributeOrientation.getter((uint64_t (*)(void))RemoteParticipantVideoProvider.remoteVideoAttributes.getter, (const char **)&selRef_camera);
}

void RemoteParticipantVideoProvider.contentsRect.getter(uint64_t a1@<X8>)
{
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = RemoteParticipantVideoProvider.remoteVideoAttributes.getter();
  v3 = v2;
  if (v2)
  {
    objc_msgSend(v2, sel_contentsRect);
    v5 = v4;
    v7 = v6;
    v9 = v8;
    v11 = v10;

  }
  else
  {
    v5 = 0;
    v7 = 0;
    v9 = 0;
    v11 = 0;
  }
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v7;
  *(_QWORD *)(a1 + 16) = v9;
  *(_QWORD *)(a1 + 24) = v11;
  *(_BYTE *)(a1 + 32) = v3 == 0;
}

void RemoteParticipantVideoProvider.scaleFactor.getter()
{
  id v0;
  void *v1;

  v0 = RemoteParticipantVideoProvider.remoteVideoAttributes.getter();
  if (v0)
  {
    v1 = v0;
    VideoAttributes.scaleFactor.getter();

  }
}

double VideoAttributes.scaleFactor.getter()
{
  void *v0;
  void *v1;
  id v2;
  float v4;
  _OWORD v5[2];
  _BYTE v6[24];
  uint64_t v7;

  v1 = (void *)MEMORY[0x1C3B72E00](0x636146656C616373, 0xEB00000000726F74);
  v2 = objc_msgSend(v0, sel_valueForKey_, v1);

  if (v2)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v5, 0, sizeof(v5));
  }
  outlined init with take of SystemApertureIconFactory.SystemApertureIconSet?((uint64_t)v5, (uint64_t)v6, &demangling cache variable for type metadata for Any?);
  if (v7)
  {
    if (swift_dynamicCast())
      return v4;
  }
  else
  {
    outlined destroy of Any?((uint64_t)v6);
  }
  return 1.0;
}

void RemoteParticipantVideoProvider.videoAspectRatio.getter()
{
  id v0;

  v0 = RemoteParticipantVideoProvider.remoteVideoAttributes.getter();
  if (v0)
  {
    OUTLINED_FUNCTION_123((uint64_t)v0, sel_ratio);
    OUTLINED_FUNCTION_15_10();
  }
  OUTLINED_FUNCTION_12_1();
}

void RemoteParticipantVideoProvider._remoteVideoAttributes.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_4_3(a1, OBJC_IVAR____TtC15ConversationKit30RemoteParticipantVideoProvider__remoteVideoAttributes);
}

id RemoteParticipantVideoProvider.remoteVideoAttributes.getter()
{
  return RemoteParticipantVideoProvider.remoteVideoAttributes.getter(&OBJC_IVAR____TtC15ConversationKit30RemoteParticipantVideoProvider__remoteVideoAttributes, (SEL *)&selRef_remoteVideoAttributes);
}

void RemoteParticipantVideoProvider._remoteScreenAttributes.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_4_3(a1, OBJC_IVAR____TtC15ConversationKit30RemoteParticipantVideoProvider__remoteScreenAttributes);
}

id RemoteParticipantVideoProvider.remoteScreenAttributes.getter()
{
  return RemoteParticipantVideoProvider.remoteVideoAttributes.getter(&OBJC_IVAR____TtC15ConversationKit30RemoteParticipantVideoProvider__remoteScreenAttributes, (SEL *)&selRef_remoteScreenAttributes);
}

id RemoteParticipantVideoProvider.remoteVideoAttributes.getter(_QWORD *a1, SEL *a2)
{
  uint64_t *v2;
  void *v3;
  id v4;
  void *v6;
  id v7;

  v3 = *(void **)((char *)v2 + *a1);
  v4 = v3;
  if (!v3)
  {
    v6 = (void *)OUTLINED_FUNCTION_1_27(*v2);
    v4 = objc_msgSend(v6, *a2);

  }
  v7 = v3;
  return v4;
}

void RemoteParticipantVideoProvider.portraitVideoAspectRatio.getter()
{
  RemoteParticipantVideoProvider.portraitVideoAspectRatio.getter((uint64_t (*)(void))RemoteParticipantVideoProvider.remoteVideoAttributes.getter);
}

void RemoteParticipantVideoProvider.portraitScreenAspectRatio.getter()
{
  RemoteParticipantVideoProvider.portraitVideoAspectRatio.getter((uint64_t (*)(void))RemoteParticipantVideoProvider.remoteScreenAttributes.getter);
}

void RemoteParticipantVideoProvider.portraitVideoAspectRatio.getter(uint64_t (*a1)(void))
{
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;

  v3 = (void *)a1();
  if (v3)
  {
    v4 = OUTLINED_FUNCTION_23_15(v3);
    if ((_DWORD)v4 && (v4 = OUTLINED_FUNCTION_123((uint64_t)v4, *(const char **)(v2 + 3088)), (_DWORD)v4 != 1))
    {

    }
    else
    {
      OUTLINED_FUNCTION_123((uint64_t)v4, sel_ratio);
      OUTLINED_FUNCTION_15_10();
    }
  }
  OUTLINED_FUNCTION_12_1();
}

void RemoteParticipantVideoProvider.landscapeVideoAspectRatio.getter()
{
  RemoteParticipantVideoProvider.landscapeVideoAspectRatio.getter((uint64_t (*)(void))RemoteParticipantVideoProvider.remoteVideoAttributes.getter);
}

void RemoteParticipantVideoProvider.landscapeScreenAspectRatio.getter()
{
  RemoteParticipantVideoProvider.landscapeVideoAspectRatio.getter((uint64_t (*)(void))RemoteParticipantVideoProvider.remoteScreenAttributes.getter);
}

void RemoteParticipantVideoProvider.landscapeVideoAspectRatio.getter(uint64_t (*a1)(void))
{
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;

  v3 = (void *)a1();
  if (v3)
  {
    v4 = OUTLINED_FUNCTION_23_15(v3);
    if ((_DWORD)v4 == 2 || (v4 = OUTLINED_FUNCTION_123((uint64_t)v4, *(const char **)(v2 + 3088)), (_DWORD)v4 == 3))
    {
      OUTLINED_FUNCTION_123((uint64_t)v4, sel_ratio);
      OUTLINED_FUNCTION_15_10();
    }
    else
    {

    }
  }
  OUTLINED_FUNCTION_12_1();
}

void key path setter for RemoteParticipantVideoProvider.avcRemoteVideoClient : RemoteParticipantVideoProvider(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  RemoteParticipantVideoProvider.avcRemoteVideoClient.setter(v1);
}

void *RemoteParticipantVideoProvider.avcRemoteVideoClient.getter()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;

  v1 = (void **)(v0 + OBJC_IVAR____TtC15ConversationKit30RemoteParticipantVideoProvider_avcRemoteVideoClient);
  OUTLINED_FUNCTION_2_0();
  v2 = *v1;
  v3 = v2;
  return v2;
}

void RemoteParticipantVideoProvider.avcRemoteVideoClient.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;

  v3 = (void **)(v1 + OBJC_IVAR____TtC15ConversationKit30RemoteParticipantVideoProvider_avcRemoteVideoClient);
  OUTLINED_FUNCTION_2_0();
  v4 = *v3;
  *v3 = a1;

}

void RemoteParticipantVideoProvider.isOneToOneModeEnabled.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit30RemoteParticipantVideoProvider_oneToOneModeStateProvider;
  if (MEMORY[0x1C3B752C0](v0 + OBJC_IVAR____TtC15ConversationKit30RemoteParticipantVideoProvider_oneToOneModeStateProvider))
  {
    v2 = *(_QWORD *)(v1 + 8);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(ObjectType, v2);
    OUTLINED_FUNCTION_10();
  }
  OUTLINED_FUNCTION_0();
}

char *RemoteParticipantVideoProvider.__allocating_init(streamToken:avcRemoteVideoClientDelegate:oneToOneModeStateProvider:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  objc_class *v4;
  id v9;

  v9 = objc_allocWithZone(v4);
  return RemoteParticipantVideoProvider.init(streamToken:avcRemoteVideoClientDelegate:oneToOneModeStateProvider:)(a1, a2, a3, a4);
}

char *RemoteParticipantVideoProvider.init(streamToken:avcRemoteVideoClientDelegate:oneToOneModeStateProvider:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  id v11;
  char *v12;
  id v13;
  char *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void **v24;
  void *v25;
  objc_super v27;

  v7 = OBJC_IVAR____TtC15ConversationKit30RemoteParticipantVideoProvider_features;
  v8 = one-time initialization token for shared;
  v9 = v4;
  if (v8 != -1)
    swift_once();
  v10 = static Features.shared;
  *(_QWORD *)&v4[v7] = static Features.shared;
  *(_QWORD *)&v9[OBJC_IVAR____TtC15ConversationKit30RemoteParticipantVideoProvider__remoteVideoAttributes] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC15ConversationKit30RemoteParticipantVideoProvider__remoteScreenAttributes] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC15ConversationKit30RemoteParticipantVideoProvider_avcRemoteVideoClient] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v9[OBJC_IVAR____TtC15ConversationKit30RemoteParticipantVideoProvider_oneToOneModeStateProvider + 8] = 0;
  swift_unknownObjectWeakInit();
  v11 = v10;

  v27.receiver = v9;
  v27.super_class = (Class)type metadata accessor for RemoteParticipantVideoProvider();
  v12 = (char *)objc_msgSendSuper2(&v27, sel_init);
  swift_unknownObjectWeakAssign();
  *(_QWORD *)&v12[OBJC_IVAR____TtC15ConversationKit30RemoteParticipantVideoProvider_oneToOneModeStateProvider + 8] = a4;
  swift_unknownObjectWeakAssign();
  v13 = objc_allocWithZone(MEMORY[0x1E0CF22C8]);
  v14 = v12;
  v15 = objc_msgSend(v13, sel_initWithStreamToken_delegate_, a1, v14);
  if (!v15)
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v16 = OUTLINED_FUNCTION_16_9();
    *(_OWORD *)(v16 + 16) = xmmword_1BD6441D0;
    v17 = OUTLINED_FUNCTION_14_20();
    v19 = v18;
    *(_QWORD *)(v16 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v16 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v16 + 32) = v17;
    *(_QWORD *)(v16 + 40) = v19;
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
  }
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v20 = OUTLINED_FUNCTION_16_9();
  *(_OWORD *)(v20 + 16) = xmmword_1BD6441D0;
  v21 = OUTLINED_FUNCTION_14_20();
  v23 = v22;
  *(_QWORD *)(v20 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v20 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v20 + 32) = v21;
  *(_QWORD *)(v20 + 40) = v23;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  v24 = (void **)&v14[OBJC_IVAR____TtC15ConversationKit30RemoteParticipantVideoProvider_avcRemoteVideoClient];
  OUTLINED_FUNCTION_2_0();
  v25 = *v24;
  *v24 = v15;

  return v14;
}

void RemoteParticipantVideoProvider.isPaused.getter()
{
  RemoteParticipantVideoProvider.isPaused.getter();
}

{
  uint64_t *v0;
  void *v1;

  v1 = (void *)OUTLINED_FUNCTION_1_27(*v0);
  if (v1)
  {
    OUTLINED_FUNCTION_37_9(v1);

  }
  OUTLINED_FUNCTION_0();
}

void RemoteParticipantVideoProvider.isSuspended.getter()
{
  RemoteParticipantVideoProvider.isPaused.getter();
}

id RemoteParticipantVideoProvider.__deallocating_deinit()
{
  uint64_t *v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  objc_super v7;

  if (one-time initialization token for conversationKit != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v1 = OUTLINED_FUNCTION_16_9();
  *(_OWORD *)(v1 + 16) = xmmword_1BD6441D0;
  OUTLINED_FUNCTION_13_5(*v0);
  if ((v2 & 1) != 0)
  {
    v5 = 0xE300000000000000;
    v3 = 7104878;
  }
  else
  {
    v3 = OUTLINED_FUNCTION_14_20();
    v5 = v4;
  }
  *(_QWORD *)(v1 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v1 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v1 + 32) = v3;
  *(_QWORD *)(v1 + 40) = v5;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for RemoteParticipantVideoProvider();
  return objc_msgSendSuper2(&v7, sel_dealloc);
}

Swift::Void __swiftcall RemoteParticipantVideoProvider.setLayer(_:for:)(CALayer _, ConversationKit::ParticipantVideoLayerType a2)
{
  uint64_t *v2;
  char refcount;
  Class isa;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  objc_class *v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  objc_class *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;

  refcount = _._attr.refcount;
  isa = _.super.isa;
  v5 = OUTLINED_FUNCTION_1_27(*v2);
  if (v5)
  {
    v33 = (id)v5;
    if (one-time initialization token for shared != -1)
      swift_once();
    if (((*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 296))() & 1) == 0 || refcount != 2)
    {
      objc_msgSend((id)objc_opt_self(), sel_begin);
      -[objc_class setContentsGravity:](isa, sel_setContentsGravity_, *MEMORY[0x1E0CD2F98]);
      if (one-time initialization token for conversationKit != -1)
        swift_once();
      v10 = type metadata accessor for Logger();
      __swift_project_value_buffer(v10, (uint64_t)&static Logger.conversationKit);
      v11 = isa;
      v12 = Logger.logObject.getter();
      v13 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v12, v13))
      {
        v14 = OUTLINED_FUNCTION_105();
        OUTLINED_FUNCTION_105();
        *(_DWORD *)v14 = 136315394;
        v15 = String.init<A>(reflecting:)();
        OUTLINED_FUNCTION_31_17(v15, v16, v17, v18, v19, v20, v21, v22);
        OUTLINED_FUNCTION_7_32();
        v23 = swift_bridgeObjectRelease();
        *(_WORD *)(v14 + 12) = 2080;
        OUTLINED_FUNCTION_17_8(v23, &lazy cache variable for type metadata for CALayer);
        v24 = v11;
        v25 = String.init<A>(reflecting:)();
        OUTLINED_FUNCTION_31_17(v25, v26, v27, v28, v29, v30, v31, v32);
        OUTLINED_FUNCTION_7_32();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BD004000, v12, v13, "Connecting CALayer to AVCRemoteVideoClient type: %s layer: %s", (uint8_t *)v14, 0x16u);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_60();
      }

      __asm { BR              X10 }
    }
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    v6 = type metadata accessor for Logger();
    __swift_project_value_buffer(v6, (uint64_t)&static Logger.conversationKit);
    v7 = Logger.logObject.getter();
    v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)OUTLINED_FUNCTION_105();
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_1BD004000, v7, v8, "Using CALayerHost mode for screen", v9, 2u);
      OUTLINED_FUNCTION_60();
    }

    objc_msgSend(v33, sel_setVideoLayerHost_forMode_, isa, 2);
  }
}

void RemoteParticipantVideoProvider.isTransformForRemoteVideoOrientationEnabled.getter()
{
  RemoteParticipantVideoProvider.isPaused.getter();
}

void RemoteParticipantVideoProvider.isTransformForRemoteVideoOrientationEnabled.setter(char a1)
{
  uint64_t *v1;
  void *v3;

  v3 = (void *)OUTLINED_FUNCTION_1_27(*v1);
  objc_msgSend(v3, sel_setTransformForRemoteVideoOrientationEnabled_, a1 & 1);
  OUTLINED_FUNCTION_7_1(v3);
}

void (*RemoteParticipantVideoProvider.isTransformForRemoteVideoOrientationEnabled.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;
  char v3;

  *(_QWORD *)a1 = v1;
  RemoteParticipantVideoProvider.isTransformForRemoteVideoOrientationEnabled.getter();
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return RemoteParticipantVideoProvider.isTransformForRemoteVideoOrientationEnabled.modify;
}

void RemoteParticipantVideoProvider.isTransformForRemoteVideoOrientationEnabled.modify(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = *(unsigned __int8 *)(a1 + 8);
  v2 = (void *)OUTLINED_FUNCTION_1_27(**(_QWORD **)a1);
  objc_msgSend(v2, sel_setTransformForRemoteVideoOrientationEnabled_, v1);
  OUTLINED_FUNCTION_7_1(v2);
}

uint64_t RemoteParticipantVideoProvider.isEqual(to:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t result;
  _QWORD *v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  char v8;
  char v9;
  _QWORD *v11;
  _BYTE v12[40];

  outlined init with copy of IDSLookupManager(a1, (uint64_t)v12);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParticipantVideoProvider);
  type metadata accessor for RemoteParticipantVideoProvider();
  result = OUTLINED_FUNCTION_30_14();
  if ((_DWORD)result)
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEEDD8];
    v4 = OUTLINED_FUNCTION_13_5(*v1);
    v6 = v5;
    v7 = (*(uint64_t (**)(void))((*v3 & *v11) + 0x80))();
    v9 = v8;

    if ((v6 & 1) != 0)
      return v9 & 1;
    else
      return (v9 & 1) == 0 && v4 == v7;
  }
  return result;
}

id RemoteParticipantVideoProvider.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void RemoteParticipantVideoProvider.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t protocol witness for ParticipantVideoProvider.token.getter in conformance RemoteParticipantVideoProvider()
{
  _QWORD **v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **v0) + 0x80))();
}

uint64_t protocol witness for ParticipantVideoProvider.hasReceivedVideoFrames.getter in conformance RemoteParticipantVideoProvider()
{
  _QWORD **v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **v0) + 0x88))() & 1;
}

uint64_t protocol witness for ParticipantVideoProvider.isVideoMirrored.getter in conformance RemoteParticipantVideoProvider()
{
  _QWORD **v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **v0) + 0x90))() & 1;
}

uint64_t protocol witness for ParticipantVideoProvider.isVideoReconnecting.getter in conformance RemoteParticipantVideoProvider()
{
  _QWORD **v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **v0) + 0x98))() & 1;
}

uint64_t protocol witness for ParticipantVideoProvider.videoAttributeOrientation.getter in conformance RemoteParticipantVideoProvider()
{
  _QWORD **v0;
  unint64_t v1;

  v1 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **v0) + 0xA0))();
  return v1 | ((HIDWORD(v1) & 1) << 32);
}

uint64_t protocol witness for ParticipantVideoProvider.screenAttributeOrientation.getter in conformance RemoteParticipantVideoProvider()
{
  _QWORD **v0;
  unint64_t v1;

  v1 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **v0) + 0xA8))();
  return v1 | ((HIDWORD(v1) & 1) << 32);
}

uint64_t protocol witness for ParticipantVideoProvider.videoAttributeCamera.getter in conformance RemoteParticipantVideoProvider()
{
  _QWORD **v0;
  unint64_t v1;

  v1 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **v0) + 0xB0))();
  return v1 | ((HIDWORD(v1) & 1) << 32);
}

uint64_t protocol witness for ParticipantVideoProvider.contentsRect.getter in conformance RemoteParticipantVideoProvider@<X0>(uint64_t a1@<X8>)
{
  _QWORD **v1;
  _QWORD v4[5];

  (*(void (**)(_QWORD *__return_ptr))((*MEMORY[0x1E0DEEDD8] & **v1) + 0xB8))(v4);
  return outlined init with take of SystemApertureIconFactory.SystemApertureIconSet?((uint64_t)v4, a1, &demangling cache variable for type metadata for CGRect?);
}

uint64_t protocol witness for ParticipantVideoProvider.scaleFactor.getter in conformance RemoteParticipantVideoProvider()
{
  _QWORD **v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **v0) + 0xC0))();
}

uint64_t protocol witness for ParticipantVideoProvider.videoAspectRatio.getter in conformance RemoteParticipantVideoProvider()
{
  _QWORD **v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **v0) + 0xC8))();
}

uint64_t protocol witness for ParticipantVideoProvider.portraitVideoAspectRatio.getter in conformance RemoteParticipantVideoProvider()
{
  _QWORD **v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **v0) + 0x110))();
}

uint64_t protocol witness for ParticipantVideoProvider.portraitScreenAspectRatio.getter in conformance RemoteParticipantVideoProvider()
{
  _QWORD **v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **v0) + 0x118))();
}

uint64_t protocol witness for ParticipantVideoProvider.landscapeVideoAspectRatio.getter in conformance RemoteParticipantVideoProvider()
{
  _QWORD **v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **v0) + 0x120))();
}

uint64_t protocol witness for ParticipantVideoProvider.landscapeScreenAspectRatio.getter in conformance RemoteParticipantVideoProvider()
{
  _QWORD **v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **v0) + 0x128))();
}

uint64_t protocol witness for ParticipantVideoProvider.setLayer(_:for:) in conformance RemoteParticipantVideoProvider()
{
  _QWORD **v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **v0) + 0x198))();
}

uint64_t protocol witness for ParticipantVideoProvider.isEqual(to:) in conformance RemoteParticipantVideoProvider()
{
  _QWORD **v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **v0) + 0x1B8))() & 1;
}

void RemoteParticipantVideoProvider.remoteVideoClientDidReceiveFirstFrame(_:)()
{
  OUTLINED_FUNCTION_26_12();
}

void sub_1BD080410(void *a1)
{
  uint64_t v1;

  if (a1)
  {
    if ((objc_msgSend(a1, sel_respondsToSelector_, sel_remoteVideoClientDidReceiveFirstFrame_) & 1) != 0)
      objc_msgSend(a1, sel_remoteVideoClientDidReceiveFirstFrame_, v1);
    OUTLINED_FUNCTION_9_8();
  }
  else
  {
    OUTLINED_FUNCTION_18();
  }
}

void sub_1BD08048C()
{
  void *v0;
  void *v1;

}

void RemoteParticipantVideoProvider.remoteVideoClient(_:videoDidSuspend:)()
{
  RemoteParticipantVideoProvider.remoteVideoClient(_:videoDidSuspend:)();
}

{
  OUTLINED_FUNCTION_26_12();
}

void sub_1BD0804F4()
{
  void *v0;
  void *v1;

}

void RemoteParticipantVideoProvider.remoteVideoClient(_:remoteVideoDidPause:)()
{
  RemoteParticipantVideoProvider.remoteVideoClient(_:videoDidSuspend:)();
}

void sub_1BD08055C()
{
  void *v0;
  void *v1;

}

void RemoteParticipantVideoProvider.remoteVideoClient(_:videoDidDegrade:)()
{
  RemoteParticipantVideoProvider.remoteVideoClient(_:videoDidSuspend:)();
}

void sub_1BD0805C4()
{
  void *v0;
  void *v1;

}

void RemoteParticipantVideoProvider.remoteVideoClient(_:networkQualityDidDegrade:info:)(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3;
  void *v7;
  void *v8;
  NSDictionary v9;
  Class isa;

  if (((*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **(_QWORD **)(v3
                                                                   + OBJC_IVAR____TtC15ConversationKit30RemoteParticipantVideoProvider_features))
                             + 0x78))() & 1) != 0)
  {
    v7 = (void *)MEMORY[0x1C3B752C0](v3 + OBJC_IVAR____TtC15ConversationKit30RemoteParticipantVideoProvider_avcRemoteVideoClientDelegate);
    if (v7)
    {
      v8 = v7;
      if ((objc_msgSend(v7, sel_respondsToSelector_, sel_remoteVideoClient_networkQualityDidDegrade_info_) & 1) != 0)
      {
        if (a3)
          v9.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
        else
          v9.super.isa = 0;
        isa = v9.super.isa;
        objc_msgSend(v8, sel_remoteVideoClient_networkQualityDidDegrade_info_, a1, a2 & 1);
        OUTLINED_FUNCTION_10();

      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
  }
  else
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
  }
}

void RemoteParticipantVideoProvider.remoteVideoClient(_:remoteMediaDidStall:)()
{
  RemoteParticipantVideoProvider.remoteVideoClient(_:videoDidSuspend:)();
}

void sub_1BD08083C(void *a1)
{
  uint64_t v1;
  SEL *v2;
  char v3;

  if (a1)
  {
    if ((objc_msgSend(a1, sel_respondsToSelector_, *v2) & 1) != 0)
      objc_msgSend(a1, *v2, v1, v3 & 1);
    OUTLINED_FUNCTION_9_8();
  }
  else
  {
    OUTLINED_FUNCTION_18();
  }
}

void sub_1BD0808C0()
{
  void *v0;
  void *v1;

}

void RemoteParticipantVideoProvider.remoteVideoClient(_:remoteVideoAttributesDidChange:)(uint64_t a1, void *a2)
{
  uint64_t v2;

  OUTLINED_FUNCTION_35_5(a1, a2);
  RemoteParticipantVideoProvider._remoteVideoAttributes.setter(v2);
  OUTLINED_FUNCTION_26_12();
}

void sub_1BD080908(void *a1)
{
  uint64_t v1;

  if (a1)
  {
    v1 = (uint64_t)objc_msgSend(a1, sel_respondsToSelector_, sel_remoteVideoClient_remoteVideoAttributesDidChange_);
    if ((v1 & 1) != 0)
      OUTLINED_FUNCTION_20_22(v1, sel_remoteVideoClient_remoteVideoAttributesDidChange_);
    OUTLINED_FUNCTION_9_8();
  }
  else
  {
    OUTLINED_FUNCTION_18();
  }
}

void sub_1BD08098C()
{
  void *v0;
  void *v1;
  void *v2;

}

void RemoteParticipantVideoProvider.remoteVideoClient(_:remoteScreenAttributesDidChange:)(uint64_t a1, void *a2)
{
  uint64_t v2;

  OUTLINED_FUNCTION_35_5(a1, a2);
  RemoteParticipantVideoProvider._remoteScreenAttributes.setter(v2);
  OUTLINED_FUNCTION_26_12();
}

void sub_1BD0809D8(void *a1)
{
  uint64_t v1;

  if (a1)
  {
    v1 = (uint64_t)objc_msgSend(a1, sel_respondsToSelector_, sel_remoteVideoClient_remoteScreenAttributesDidChange_);
    if ((v1 & 1) != 0)
      OUTLINED_FUNCTION_20_22(v1, sel_remoteVideoClient_remoteScreenAttributesDidChange_);
    OUTLINED_FUNCTION_9_8();
  }
  else
  {
    OUTLINED_FUNCTION_18();
  }
}

void sub_1BD080A64()
{
  void *v0;
  void *v1;
  void *v2;

}

uint64_t RemoteParticipantVideoProvider.debugDescription.getter()
{
  _QWORD *v0;
  uint64_t v1;
  Swift::String v2;
  _QWORD *v3;
  char v4;
  uint64_t v5;
  Swift::String v6;
  uint64_t v7;
  Swift::String v8;
  uint64_t v9;
  void *v10;
  void *v11;
  Swift::String v12;
  Swift::String v13;

  v1 = 7104878;
  _StringGuts.grow(_:)(73);
  OUTLINED_FUNCTION_24_12();
  String.append(_:)(v2);
  v3 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
  if ((v4 & 1) != 0)
    v5 = 7104878;
  else
    v5 = OUTLINED_FUNCTION_14_20();
  OUTLINED_FUNCTION_28_13(v5);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_24_12();
  v6._countAndFlagsBits = 0xD000000000000018;
  String.append(_:)(v6);
  if (((*(uint64_t (**)(void))((*v3 & *v0) + 0x88))() & 1) != 0)
    v7 = 1702195828;
  else
    v7 = 0x65736C6166;
  OUTLINED_FUNCTION_28_13(v7);
  swift_bridgeObjectRelease();
  v8._countAndFlagsBits = 0x3D6376612CLL;
  v8._object = (void *)0xE500000000000000;
  String.append(_:)(v8);
  v9 = (*(uint64_t (**)(void))((*v3 & *v0) + 0x130))();
  if (v9)
  {
    OUTLINED_FUNCTION_17_8(v9, &lazy cache variable for type metadata for AVCRemoteVideoClient);
    v1 = OUTLINED_FUNCTION_14_20();
    v11 = v10;
  }
  else
  {
    v11 = (void *)0xE300000000000000;
  }
  v12._countAndFlagsBits = v1;
  v12._object = v11;
  String.append(_:)(v12);
  swift_bridgeObjectRelease();
  v13._countAndFlagsBits = 41;
  v13._object = (void *)0xE100000000000000;
  String.append(_:)(v13);
  return 0;
}

uint64_t TUVideoDeviceController.token.getter()
{
  return 0;
}

uint64_t TUVideoDeviceController.hasReceivedVideoFrames.getter()
{
  return 1;
}

void TUVideoDeviceController.videoAttributeOrientation.getter(uint64_t a1)
{
  int v1;
  unint64_t v2;

  v1 = OUTLINED_FUNCTION_25_1(a1, sel_currentVideoOrientation);
  v2 = TUVideoDeviceController.videoAttributeOrientationFor(_:)(v1);
  OUTLINED_FUNCTION_2_42(v2);
  OUTLINED_FUNCTION_3_1();
}

uint64_t TUVideoDeviceController.videoAttributeOrientationFor(_:)(int a1)
{
  uint64_t v1;

  v1 = (a1 - 1);
  if (v1 < 3)
    return v1 + 1;
  else
    return 0;
}

uint64_t TUVideoDeviceController.videoAttributeCamera.getter()
{
  return 0x100000000;
}

__n128 TUVideoDeviceController.contentsRect.getter@<Q0>(__n128 *a1@<X8>)
{
  __n128 result;

  a1->n128_u64[0] = 0;
  a1->n128_u64[1] = 0;
  __asm { FMOV            V0.2D, #1.0 }
  a1[1] = result;
  a1[2].n128_u8[0] = 0;
  return result;
}

double TUVideoDeviceController.scaleFactor.getter()
{
  return 1.0;
}

uint64_t TUVideoDeviceController.videoAspectRatio.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  Swift::String v4;
  uint64_t v5;
  Swift::String v6;

  v1 = (uint64_t)OUTLINED_FUNCTION_25_1(a1, sel_currentVideoOrientation);
  if (v1 >= 4)
  {
    _StringGuts.grow(_:)(62);
    OUTLINED_FUNCTION_24_12();
    v4._countAndFlagsBits = 0xD00000000000003CLL;
    String.append(_:)(v4);
    OUTLINED_FUNCTION_123(v5, sel_currentVideoOrientation);
    v6._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v6);
    swift_bridgeObjectRelease();
    result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_123(v1, *off_1E7617E78[(int)v1]);
    return v2;
  }
  return result;
}

double TUVideoDeviceController.portraitVideoAspectRatio.getter()
{
  return TUVideoDeviceController.portraitVideoAspectRatio.getter((SEL *)&selRef_localVideoPortraitAspectRatio);
}

double TUVideoDeviceController.portraitScreenAspectRatio.getter()
{
  return TUVideoDeviceController.portraitVideoAspectRatio.getter((SEL *)&selRef_localScreenPortraitAspectRatio);
}

double TUVideoDeviceController.landscapeVideoAspectRatio.getter()
{
  return TUVideoDeviceController.portraitVideoAspectRatio.getter((SEL *)&selRef_localVideoLandscapeAspectRatio);
}

double TUVideoDeviceController.landscapeScreenAspectRatio.getter()
{
  return TUVideoDeviceController.portraitVideoAspectRatio.getter((SEL *)&selRef_localScreenLandscapeAspectRatio);
}

double TUVideoDeviceController.portraitVideoAspectRatio.getter(SEL *a1)
{
  void *v1;
  double result;

  objc_msgSend(v1, *a1);
  return result;
}

Swift::Void __swiftcall TUVideoDeviceController.setLayer(_:for:)(CALayer _, ConversationKit::ParticipantVideoLayerType a2)
{
  void *v2;
  void *v3;
  char refcount;
  Class isa;
  char **v6;
  char **v7;
  void *v8;
  SEL *v9;

  v3 = v2;
  refcount = _._attr.refcount;
  isa = _.super.isa;
  if (one-time initialization token for shared != -1)
    swift_once();
  if (((*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 632))() & 1) != 0)
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    v6 = &selRef_setLocalFrontLayerHost_;
    v7 = &selRef_setLocalBackLayerHost_;
  }
  else
  {
    v6 = &selRef_setLocalFrontLayer_;
    v7 = &selRef_setLocalBackLayer_;
  }
  v8 = (void *)objc_opt_self();
  objc_msgSend(v8, sel_begin);
  -[objc_class setContentsGravity:](isa, sel_setContentsGravity_, *MEMORY[0x1E0CD2F98]);
  if (refcount == 1)
    v9 = (SEL *)v7;
  else
    v9 = (SEL *)v6;
  objc_msgSend(v3, *v9, isa);
  objc_msgSend(v8, sel_commit);
}

id TUVideoDeviceController.isEqual(to:)(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;
  objc_super v6;
  void *v7;
  _BYTE v8[40];

  outlined init with copy of IDSLookupManager(a1, (uint64_t)v8);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParticipantVideoProvider);
  OUTLINED_FUNCTION_17_8(v2, &lazy cache variable for type metadata for TUVideoDeviceController);
  if (!OUTLINED_FUNCTION_30_14())
    return 0;
  v3 = v7;
  v6.receiver = v1;
  v6.super_class = (Class)MEMORY[0x1E0DBD3B0];
  v4 = objc_msgSendSuper2(&v6, sel_isEqual_, v7);

  return v4;
}

uint64_t protocol witness for ParticipantVideoProvider.token.getter in conformance TUVideoDeviceController()
{
  return 0;
}

uint64_t protocol witness for ParticipantVideoProvider.videoAttributeOrientation.getter in conformance TUVideoDeviceController(uint64_t a1)
{
  unint64_t v1;

  TUVideoDeviceController.videoAttributeOrientation.getter(a1);
  return v1 | ((HIDWORD(v1) & 1) << 32);
}

void protocol witness for ParticipantVideoProvider.screenAttributeOrientation.getter in conformance TUVideoDeviceController(uint64_t a1, uint64_t a2)
{
  protocol witness for ParticipantVideoProvider.screenAttributeOrientation.getter in conformance TUVideoDeviceController(a1, a2, TUVideoDeviceController.screenAttributeOrientation.getter);
}

void protocol witness for ParticipantVideoProvider.videoAttributeCamera.getter in conformance TUVideoDeviceController(uint64_t a1, uint64_t a2)
{
  protocol witness for ParticipantVideoProvider.screenAttributeOrientation.getter in conformance TUVideoDeviceController(a1, a2, TUVideoDeviceController.videoAttributeCamera.getter);
}

void protocol witness for ParticipantVideoProvider.screenAttributeOrientation.getter in conformance TUVideoDeviceController(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  unint64_t v3;

  v3 = a3();
  OUTLINED_FUNCTION_2_42(v3);
  OUTLINED_FUNCTION_3_1();
}

uint64_t protocol witness for ParticipantVideoProvider.contentsRect.getter in conformance TUVideoDeviceController@<X0>(uint64_t a1@<X8>)
{
  __n128 v3[2];

  TUVideoDeviceController.contentsRect.getter(v3);
  return outlined init with take of SystemApertureIconFactory.SystemApertureIconSet?((uint64_t)v3, a1, &demangling cache variable for type metadata for CGRect?);
}

uint64_t protocol witness for ParticipantVideoProvider.videoAspectRatio.getter in conformance TUVideoDeviceController(uint64_t a1)
{
  return TUVideoDeviceController.videoAspectRatio.getter(a1);
}

double protocol witness for ParticipantVideoProvider.portraitVideoAspectRatio.getter in conformance TUVideoDeviceController()
{
  return TUVideoDeviceController.portraitVideoAspectRatio.getter();
}

double protocol witness for ParticipantVideoProvider.portraitScreenAspectRatio.getter in conformance TUVideoDeviceController()
{
  return TUVideoDeviceController.portraitScreenAspectRatio.getter();
}

double protocol witness for ParticipantVideoProvider.landscapeVideoAspectRatio.getter in conformance TUVideoDeviceController()
{
  return TUVideoDeviceController.landscapeVideoAspectRatio.getter();
}

double protocol witness for ParticipantVideoProvider.landscapeScreenAspectRatio.getter in conformance TUVideoDeviceController()
{
  return TUVideoDeviceController.landscapeScreenAspectRatio.getter();
}

void protocol witness for ParticipantVideoProvider.setLayer(_:for:) in conformance TUVideoDeviceController(CALayer a1@<0:X0, 8:X1, 16:X2, 24:X3>, ConversationKit::ParticipantVideoLayerType a2@<W4>)
{
  TUVideoDeviceController.setLayer(_:for:)(a1, a2);
}

unint64_t protocol witness for ParticipantVideoProvider.isEqual(to:) in conformance TUVideoDeviceController(uint64_t a1)
{
  return (unint64_t)TUVideoDeviceController.isEqual(to:)(a1) & 1;
}

uint64_t type metadata accessor for RemoteParticipantVideoProvider()
{
  return objc_opt_self();
}

void outlined bridged method (mbnn) of @objc CALayer.name.setter(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;

  v4 = (id)MEMORY[0x1C3B72E00]();
  swift_bridgeObjectRelease();
  objc_msgSend(a3, sel_setName_, v4);

}

unint64_t lazy protocol witness table accessor for type ParticipantVideoLayerType and conformance ParticipantVideoLayerType()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ParticipantVideoLayerType and conformance ParticipantVideoLayerType;
  if (!lazy protocol witness table cache variable for type ParticipantVideoLayerType and conformance ParticipantVideoLayerType)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ParticipantVideoLayerType, &type metadata for ParticipantVideoLayerType);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ParticipantVideoLayerType and conformance ParticipantVideoLayerType);
  }
  return result;
}

void sub_1BD0812F0(uint64_t **a1@<X0>, uint64_t *a2@<X8>)
{
  *a2 = OUTLINED_FUNCTION_1_27(**a1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD081328(_QWORD **a1@<X0>, _BYTE *a2@<X8>)
{
  *a2 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x1A0))() & 1;
  OUTLINED_FUNCTION_0();
}

void sub_1BD081368(unsigned __int8 *a1, _QWORD **a2)
{
  (*(void (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x1A8))(*a1);
  OUTLINED_FUNCTION_0();
}

uint64_t storeEnumTagSinglePayload for ParticipantVideoLayerType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BD0813EC + 4 * byte_1BD645FB5[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BD081420 + 4 * byte_1BD645FB0[v4]))();
}

uint64_t sub_1BD081420(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD081428(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD081430);
  return result;
}

uint64_t sub_1BD08143C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD081444);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BD081448(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD081450(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ParticipantVideoLayerType()
{
  return &type metadata for ParticipantVideoLayerType;
}

uint64_t dispatch thunk of OneToOneModeStateProviding.isOneToOneModeEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ParticipantVideoProvider.token.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ParticipantVideoProvider.hasReceivedVideoFrames.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ParticipantVideoProvider.isVideoMirrored.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of ParticipantVideoProvider.isVideoReconnecting.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

void dispatch thunk of ParticipantVideoProvider.videoAttributeOrientation.getter(uint64_t a1, uint64_t a2)
{
  unint64_t v2;

  v2 = (*(uint64_t (**)(void))(a2 + 40))();
  OUTLINED_FUNCTION_2_42(v2);
  OUTLINED_FUNCTION_3_1();
}

void dispatch thunk of ParticipantVideoProvider.screenAttributeOrientation.getter(uint64_t a1, uint64_t a2)
{
  unint64_t v2;

  v2 = (*(uint64_t (**)(void))(a2 + 48))();
  OUTLINED_FUNCTION_2_42(v2);
  OUTLINED_FUNCTION_3_1();
}

void dispatch thunk of ParticipantVideoProvider.videoAttributeCamera.getter(uint64_t a1, uint64_t a2)
{
  unint64_t v2;

  v2 = (*(uint64_t (**)(void))(a2 + 56))();
  OUTLINED_FUNCTION_2_42(v2);
  OUTLINED_FUNCTION_3_1();
}

uint64_t dispatch thunk of ParticipantVideoProvider.contentsRect.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of ParticipantVideoProvider.scaleFactor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

void dispatch thunk of ParticipantVideoProvider.videoAspectRatio.getter(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(a2 + 80))();
  OUTLINED_FUNCTION_3_1();
}

void dispatch thunk of ParticipantVideoProvider.portraitVideoAspectRatio.getter(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(a2 + 88))();
  OUTLINED_FUNCTION_3_1();
}

void dispatch thunk of ParticipantVideoProvider.portraitScreenAspectRatio.getter(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(a2 + 96))();
  OUTLINED_FUNCTION_3_1();
}

void dispatch thunk of ParticipantVideoProvider.landscapeVideoAspectRatio.getter(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(a2 + 104))();
  OUTLINED_FUNCTION_3_1();
}

void dispatch thunk of ParticipantVideoProvider.landscapeScreenAspectRatio.getter(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(a2 + 112))();
  OUTLINED_FUNCTION_3_1();
}

uint64_t dispatch thunk of ParticipantVideoProvider.setLayer(_:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 120))();
}

uint64_t dispatch thunk of ParticipantVideoProvider.isEqual(to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 128))();
}

uint64_t method lookup function for RemoteParticipantVideoProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RemoteParticipantVideoProvider.token.getter()
{
  uint64_t *v0;

  return OUTLINED_FUNCTION_13_5(*v0);
}

uint64_t dispatch thunk of RemoteParticipantVideoProvider.hasReceivedVideoFrames.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of RemoteParticipantVideoProvider.isVideoMirrored.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of RemoteParticipantVideoProvider.isVideoReconnecting.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

void dispatch thunk of RemoteParticipantVideoProvider.videoAttributeOrientation.getter()
{
  _QWORD *v0;
  unint64_t v1;

  v1 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
  OUTLINED_FUNCTION_2_42(v1);
  OUTLINED_FUNCTION_3_1();
}

void dispatch thunk of RemoteParticipantVideoProvider.screenAttributeOrientation.getter()
{
  _QWORD *v0;
  unint64_t v1;

  v1 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
  OUTLINED_FUNCTION_2_42(v1);
  OUTLINED_FUNCTION_3_1();
}

void dispatch thunk of RemoteParticipantVideoProvider.videoAttributeCamera.getter()
{
  _QWORD *v0;
  unint64_t v1;

  v1 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
  OUTLINED_FUNCTION_2_42(v1);
  OUTLINED_FUNCTION_3_1();
}

uint64_t dispatch thunk of RemoteParticipantVideoProvider.contentsRect.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of RemoteParticipantVideoProvider.scaleFactor.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

void dispatch thunk of RemoteParticipantVideoProvider.videoAspectRatio.getter()
{
  _QWORD *v0;

  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
  OUTLINED_FUNCTION_3_1();
}

void dispatch thunk of RemoteParticipantVideoProvider.portraitVideoAspectRatio.getter()
{
  _QWORD *v0;

  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x110))();
  OUTLINED_FUNCTION_3_1();
}

void dispatch thunk of RemoteParticipantVideoProvider.portraitScreenAspectRatio.getter()
{
  _QWORD *v0;

  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x118))();
  OUTLINED_FUNCTION_3_1();
}

void dispatch thunk of RemoteParticipantVideoProvider.landscapeVideoAspectRatio.getter()
{
  _QWORD *v0;

  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x120))();
  OUTLINED_FUNCTION_3_1();
}

void dispatch thunk of RemoteParticipantVideoProvider.landscapeScreenAspectRatio.getter()
{
  _QWORD *v0;

  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x128))();
  OUTLINED_FUNCTION_3_1();
}

uint64_t dispatch thunk of RemoteParticipantVideoProvider.avcRemoteVideoClient.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x130))();
}

uint64_t dispatch thunk of RemoteParticipantVideoProvider.isOneToOneModeEnabled.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x178))();
}

uint64_t dispatch thunk of RemoteParticipantVideoProvider.__allocating_init(streamToken:avcRemoteVideoClientDelegate:oneToOneModeStateProvider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 384))();
}

uint64_t dispatch thunk of RemoteParticipantVideoProvider.isPaused.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x188))();
}

uint64_t dispatch thunk of RemoteParticipantVideoProvider.isSuspended.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x190))();
}

uint64_t dispatch thunk of RemoteParticipantVideoProvider.setLayer(_:for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x198))();
}

uint64_t dispatch thunk of RemoteParticipantVideoProvider.isTransformForRemoteVideoOrientationEnabled.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1A0))();
}

uint64_t dispatch thunk of RemoteParticipantVideoProvider.isTransformForRemoteVideoOrientationEnabled.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1A8))();
}

uint64_t dispatch thunk of RemoteParticipantVideoProvider.isTransformForRemoteVideoOrientationEnabled.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1B0))();
}

uint64_t dispatch thunk of RemoteParticipantVideoProvider.isEqual(to:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1B8))();
}

uint64_t static CallScreening.EndingAction.== infix(_:_:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a3)
  {
    if (a3 != 1)
      return a6 == 2 && !(a5 | a4);
    if (a6 != 1)
      return 0;
LABEL_6:
    if (a1 != a4 || a2 != a5)
      return _stringCompareWithSmolCheck(_:_:expecting:)();
    return 1;
  }
  if (!a6)
    goto LABEL_6;
  return 0;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance CallScreening.EndingAction(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return protocol witness for static Equatable.== infix(_:_:) in conformance CallScreening.EndingAction(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))static CallScreening.EndingAction.== infix(_:_:));
}

void static CallScreening.StateTransition.== infix(_:_:)(uint64_t a1, uint64_t a2, char a3)
{
  __asm { BR              X11 }
}

uint64_t sub_1BD0819DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, unsigned int a5@<W8>)
{
  if (a5 >= 0x20)
    return 0;
  if (a1 == a3 && a2 == a4)
    return 1;
  else
    return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance CallScreening.StateTransition(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return protocol witness for static Equatable.== infix(_:_:) in conformance CallScreening.EndingAction(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))static CallScreening.StateTransition.== infix(_:_:));
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance CallScreening.EndingAction(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  return a5(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(unsigned __int8 *)(a1 + 16), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(unsigned __int8 *)(a2 + 16));
}

void CallScreening.StateTransition.description.getter(uint64_t a1, uint64_t a2, char a3)
{
  __asm { BR              X10 }
}

unint64_t sub_1BD081B60()
{
  void *v0;
  uint64_t v1;
  Swift::String v2;
  Swift::String v3;

  _StringGuts.grow(_:)(25);
  swift_bridgeObjectRelease();
  v2._countAndFlagsBits = v1;
  v2._object = v0;
  String.append(_:)(v2);
  v3._countAndFlagsBits = 10530;
  v3._object = (void *)0xE200000000000000;
  String.append(_:)(v3);
  return 0xD000000000000015;
}

void protocol witness for CustomStringConvertible.description.getter in conformance CallScreening.StateTransition()
{
  uint64_t v0;

  CallScreening.StateTransition.description.getter(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_BYTE *)(v0 + 16));
}

void CallScreening.State.description.getter()
{
  __int128 *v0;
  _BYTE v1[48];

  outlined init with take of CallScreening.State(v0, (uint64_t)v1);
  __asm { BR              X11 }
}

unint64_t sub_1BD081CB0()
{
  return 0xD000000000000019;
}

void protocol witness for CustomStringConvertible.description.getter in conformance CallScreening.State()
{
  __int128 *v0;
  _BYTE v1[56];

  outlined init with take of CallScreening.State(v0, (uint64_t)v1);
  CallScreening.State.description.getter();
}

void CallScreening.State.stateTransition.getter()
{
  __int128 *v0;
  _BYTE v1[48];

  outlined init with take of CallScreening.State(v0, (uint64_t)v1);
  __asm { BR              X10 }
}

uint64_t sub_1BD081F44()
{
  return 1;
}

void CallScreening.State.stateMachineContainer.getter()
{
  __int128 *v0;
  _BYTE v1[48];

  outlined init with take of CallScreening.State(v0, (uint64_t)v1);
  __asm { BR              X11 }
}

uint64_t sub_1BD081FF4()
{
  return swift_retain();
}

void static CallScreening.State.== infix(_:_:)(__int128 *a1)
{
  uint64_t v2;
  _BYTE v3[48];

  outlined init with take of CallScreening.State(a1, (uint64_t)&v2);
  outlined init with take of CallScreening.State(a1, (uint64_t)v3);
  __asm { BR              X11 }
}

BOOL sub_1BD082098()
{
  __int128 *v0;
  _QWORD v2[55];

  OUTLINED_FUNCTION_24_13();
  OUTLINED_FUNCTION_11_8();
  OUTLINED_FUNCTION_14_11();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_43();
  outlined init with take of CallScreening.State(v0, (uint64_t)v2);
  return v2[6] >> 61 == 0;
}

uint64_t CallScreening.State.willExit(to:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[3];
  uint64_t v6;
  uint64_t v7;

  CallScreening.State.state.getter();
  v2 = v6;
  v3 = v7;
  __swift_project_boxed_opaque_existential_1(v5, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, v2, v3);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
}

void CallScreening.State.state.getter()
{
  __int128 *v0;
  _BYTE v1[48];

  outlined init with take of CallScreening.State(v0, (uint64_t)v1);
  __asm { BR              X11 }
}

uint64_t *sub_1BD082638()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;

  OUTLINED_FUNCTION_16_10();
  v6 = OUTLINED_FUNCTION_10_24();
  v4 = v8;
  v7 = OUTLINED_FUNCTION_13_23(&lazy protocol witness table cache variable for type CallScreeningInitialState<CKStateMachine<CallScreening.State>> and conformance CallScreeningInitialState<A>, v2, (uint64_t)&protocol conformance descriptor for CallScreeningInitialState<A>);
  v5 = v9;
  outlined init with take of Notice(&v4, v0);
  return outlined retain of CallScreening.State(v1);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> CallScreening.State.enteringState()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD v2[3];
  uint64_t v3;
  uint64_t v4;

  CallScreening.State.state.getter();
  v0 = v3;
  v1 = v4;
  __swift_project_boxed_opaque_existential_1(v2, v3);
  (*(void (**)(uint64_t, uint64_t))(v1 + 56))(v0, v1);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
}

void CallScreening.State.stateMachine.getter()
{
  __int128 *v0;
  _BYTE v1[48];

  outlined init with take of CallScreening.State(v0, (uint64_t)v1);
  __asm { BR              X11 }
}

uint64_t sub_1BD082890()
{
  uint64_t (*v0)(uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  OUTLINED_FUNCTION_31_18();
  v0 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 104);
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  v1 = OUTLINED_FUNCTION_11_1();
  v2 = v0(v1);
  OUTLINED_FUNCTION_11_0();
  swift_release();
  return v2;
}

uint64_t CallScreeningState.stateMachine.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = (*(uint64_t (**)(void))(a2 + 40))();
  v3 = OUTLINED_FUNCTION_18_26(v2);
  swift_release();
  if (!v3)
    return 0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CKStateMachine<CallScreening.State>);
  swift_getAssociatedTypeWitness();
  if (swift_dynamicCast())
    return v5;
  else
    return 0;
}

void protocol witness for CKStateMachineState.stateTransition.getter in conformance CallScreening.State(uint64_t a1@<X8>)
{
  __int128 *v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  _BYTE v6[56];

  outlined init with take of CallScreening.State(v1, (uint64_t)v6);
  CallScreening.State.stateTransition.getter();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
}

void protocol witness for CKStateMachineState.stateMachineContainer.getter in conformance CallScreening.State()
{
  __int128 *v0;
  _BYTE v1[56];

  outlined init with take of CallScreening.State(v0, (uint64_t)v1);
  CallScreening.State.stateMachineContainer.getter();
}

uint64_t protocol witness for CKStateMachineState.willExit(to:) in conformance CallScreening.State(__int128 *a1)
{
  __int128 *v1;
  _BYTE v3[56];
  _BYTE v4[56];

  outlined init with take of CallScreening.State(a1, (uint64_t)v3);
  outlined init with take of CallScreening.State(v1, (uint64_t)v4);
  return CallScreening.State.willExit(to:)((uint64_t)v3);
}

void protocol witness for CKStateMachineState.enteringState() in conformance CallScreening.State()
{
  __int128 *v0;
  _BYTE v1[56];

  outlined init with take of CallScreening.State(v0, (uint64_t)v1);
  CallScreening.State.enteringState()();
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance CallScreening.State(__int128 *a1, __int128 *a2)
{
  char v3;
  __int128 v5[3];
  _BYTE v6[56];

  outlined init with take of CallScreening.State(a1, (uint64_t)v5);
  outlined init with take of CallScreening.State(a2, (uint64_t)v6);
  static CallScreening.State.== infix(_:_:)(v5);
  return v3 & 1;
}

BOOL specialized static CKStateMachineContainer.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = OUTLINED_FUNCTION_18_26(a1);
  v4 = (*(uint64_t (**)(void))(*(_QWORD *)a2 + 104))();
  v5 = v4;
  if (v3)
  {
    OUTLINED_FUNCTION_11_0();
    if (v5)
    {
      OUTLINED_FUNCTION_19();
      return v3 == v5;
    }
    goto LABEL_5;
  }
  if (v4)
  {
LABEL_5:
    OUTLINED_FUNCTION_19();
    return 0;
  }
  OUTLINED_FUNCTION_19();
  return 1;
}

uint64_t specialized CallScreeningEndingState.description.getter()
{
  __int128 *v0;
  Swift::String v1;
  Swift::String v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  __int128 v7;

  *(_QWORD *)&v7 = 0;
  *((_QWORD *)&v7 + 1) = 0xE000000000000000;
  _StringGuts.grow(_:)(29);
  v5 = 0;
  v6 = 0xE000000000000000;
  v1._object = (void *)0x80000001BD66FD30;
  v1._countAndFlagsBits = 0xD00000000000001ALL;
  String.append(_:)(v1);
  outlined init with take of CallScreening.EndingAction(v0, (uint64_t)&v7);
  outlined init with take of CallScreening.EndingAction(&v7, (uint64_t)&v4);
  _print_unlocked<A, B>(_:_:)();
  v2._countAndFlagsBits = 41;
  v2._object = (void *)0xE100000000000000;
  String.append(_:)(v2);
  return v5;
}

unint64_t specialized CallScreeningScreeningState.description.getter()
{
  uint64_t *v0;
  void *v1;
  uint64_t v2;
  Swift::String v3;
  Swift::String v4;

  _StringGuts.grow(_:)(28);
  swift_bridgeObjectRelease();
  v2 = *v0;
  v1 = (void *)v0[1];
  swift_bridgeObjectRetain();
  v3._countAndFlagsBits = v2;
  v3._object = v1;
  String.append(_:)(v3);
  swift_bridgeObjectRelease();
  v4._countAndFlagsBits = 41;
  v4._object = (void *)0xE100000000000000;
  String.append(_:)(v4);
  return 0xD000000000000019;
}

unint64_t specialized CallScreeningTrackingState.description.getter()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  Swift::String v3;
  Swift::String v4;

  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease();
  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(void **)(v0 + 24);
  swift_bridgeObjectRetain();
  v3._countAndFlagsBits = v2;
  v3._object = v1;
  String.append(_:)(v3);
  swift_bridgeObjectRelease();
  v4._countAndFlagsBits = 41;
  v4._object = (void *)0xE100000000000000;
  String.append(_:)(v4);
  return 0xD000000000000018;
}

unint64_t specialized CallScreeningAnsweringState.description.getter()
{
  uint64_t *v0;
  void *v1;
  uint64_t v2;
  Swift::String v3;
  Swift::String v4;

  _StringGuts.grow(_:)(28);
  swift_bridgeObjectRelease();
  v2 = *v0;
  v1 = (void *)v0[1];
  swift_bridgeObjectRetain();
  v3._countAndFlagsBits = v2;
  v3._object = v1;
  String.append(_:)(v3);
  swift_bridgeObjectRelease();
  v4._countAndFlagsBits = 41;
  v4._object = (void *)0xE100000000000000;
  String.append(_:)(v4);
  return 0xD000000000000019;
}

uint64_t outlined init with take of CallScreening.State(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  *(_QWORD *)(a2 + 48) = *((_QWORD *)a1 + 6);
  *(_OWORD *)(a2 + 16) = v3;
  *(_OWORD *)(a2 + 32) = v4;
  *(_OWORD *)a2 = v2;
  return a2;
}

uint64_t outlined init with take of CallScreening.EndingAction(__int128 *a1, uint64_t a2)
{
  __int128 v2;

  v2 = *a1;
  *(_BYTE *)(a2 + 16) = *((_BYTE *)a1 + 16);
  *(_OWORD *)a2 = v2;
  return a2;
}

uint64_t outlined retain of CallScreening.EndingAction(uint64_t a1)
{
  outlined copy of CallScreening.EndingAction(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  return a1;
}

uint64_t outlined copy of CallScreening.EndingAction(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 1u)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t outlined release of CallScreening.EndingAction(uint64_t a1)
{
  outlined consume of CallScreening.EndingAction(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  return a1;
}

uint64_t outlined consume of CallScreening.EndingAction(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 1u)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t outlined retain of String(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t outlined release of String(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t *outlined retain of CallScreening.State(uint64_t *a1)
{
  outlined copy of CallScreening.State(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6]);
  return a1;
}

uint64_t outlined copy of CallScreening.State(uint64_t result, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  switch(a7 >> 61)
  {
    case 0uLL:
    case 1uLL:
      goto LABEL_6;
    case 2uLL:
      swift_retain();
      swift_bridgeObjectRetain();
      goto LABEL_6;
    case 3uLL:
      swift_bridgeObjectRetain();
      goto LABEL_6;
    case 4uLL:
      swift_bridgeObjectRetain();
      swift_retain();
      goto LABEL_6;
    case 5uLL:
      outlined copy of CallScreening.EndingAction(result, a2, a3);
LABEL_6:
      swift_retain();
      result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type CallScreening.StateTransition and conformance CallScreening.StateTransition()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type CallScreening.StateTransition and conformance CallScreening.StateTransition;
  if (!lazy protocol witness table cache variable for type CallScreening.StateTransition and conformance CallScreening.StateTransition)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for CallScreening.StateTransition, &type metadata for CallScreening.StateTransition);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type CallScreening.StateTransition and conformance CallScreening.StateTransition);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type CallScreening.StateTransition and conformance CallScreening.StateTransition;
  if (!lazy protocol witness table cache variable for type CallScreening.StateTransition and conformance CallScreening.StateTransition)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for CallScreening.StateTransition, &type metadata for CallScreening.StateTransition);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type CallScreening.StateTransition and conformance CallScreening.StateTransition);
  }
  return result;
}

unint64_t instantiation function for generic protocol witness table for CallScreening.State(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = lazy protocol witness table accessor for type CallScreening.State and conformance CallScreening.State();
  result = lazy protocol witness table accessor for type CallScreening.State and conformance CallScreening.State();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t lazy protocol witness table accessor for type CallScreening.State and conformance CallScreening.State()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type CallScreening.State and conformance CallScreening.State;
  if (!lazy protocol witness table cache variable for type CallScreening.State and conformance CallScreening.State)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for CallScreening.State, &type metadata for CallScreening.State);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type CallScreening.State and conformance CallScreening.State);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type CallScreening.State and conformance CallScreening.State;
  if (!lazy protocol witness table cache variable for type CallScreening.State and conformance CallScreening.State)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for CallScreening.State, &type metadata for CallScreening.State);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type CallScreening.State and conformance CallScreening.State);
  }
  return result;
}

uint64_t dispatch thunk of CallScreeningState.stateMachineContainer.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of CallScreeningState.willExit(to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t (*v4)(_OWORD *);
  __int128 v5;
  _OWORD v7[3];
  uint64_t v8;

  v3 = *(_QWORD *)(a1 + 48);
  v4 = *(uint64_t (**)(_OWORD *))(a3 + 48);
  v5 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v5;
  v7[2] = *(_OWORD *)(a1 + 32);
  v8 = v3;
  return v4(v7);
}

uint64_t dispatch thunk of CallScreeningState.enteredState()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of CallScreeningStateMachine.logger.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of CallScreeningStateMachine.currentState.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of CallScreeningStateMachine.transition(with:reason:validation:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  _QWORD *v17;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v19 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a9 + 32) + *(_QWORD *)(a9 + 32));
  v17 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v9 + 16) = v17;
  *v17 = v9;
  v17[1] = dispatch thunk of CallScreeningStateMachine.transition(with:reason:validation:);
  return v19(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t dispatch thunk of CallScreeningStateMachine.transition(with:reason:validation:)()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t destroy for CallScreening.State(uint64_t *a1)
{
  return outlined consume of CallScreening.State(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6]);
}

uint64_t outlined consume of CallScreening.State(uint64_t result, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  switch(a7 >> 61)
  {
    case 0uLL:
    case 1uLL:
      goto LABEL_6;
    case 2uLL:
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    case 3uLL:
      swift_bridgeObjectRelease();
      goto LABEL_6;
    case 4uLL:
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_6;
    case 5uLL:
      outlined consume of CallScreening.EndingAction(result, a2, a3);
LABEL_6:
      swift_release();
      result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t *initializeWithCopy for CallScreening.State(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  v8 = a2[5];
  v9 = a2[6];
  outlined copy of CallScreening.State(*a2, v4, v5, v6, v7, v8, v9);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  return a1;
}

uint64_t *assignWithCopy for CallScreening.State(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  v8 = a2[5];
  v9 = a2[6];
  outlined copy of CallScreening.State(*a2, v4, v5, v6, v7, v8, v9);
  v10 = *a1;
  v11 = a1[1];
  v12 = a1[2];
  v13 = a1[3];
  v14 = a1[4];
  v15 = a1[5];
  v16 = a1[6];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  outlined consume of CallScreening.State(v10, v11, v12, v13, v14, v15, v16);
  return a1;
}

uint64_t *assignWithTake for CallScreening.State(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  __int128 v11;

  v3 = *(_QWORD *)(a2 + 48);
  v4 = *a1;
  v6 = a1[1];
  v5 = a1[2];
  v7 = a1[3];
  v8 = a1[4];
  v9 = a1[5];
  v10 = a1[6];
  v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v11;
  *((_OWORD *)a1 + 2) = *(_OWORD *)(a2 + 32);
  a1[6] = v3;
  outlined consume of CallScreening.State(v4, v6, v5, v7, v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for CallScreening.State(uint64_t a1, unsigned int a2)
{
  unsigned int v2;

  if (a2)
  {
    if (a2 >= 0x7B && *(_BYTE *)(a1 + 56))
    {
      v2 = *(_DWORD *)a1 + 122;
    }
    else
    {
      v2 = (((*(_QWORD *)(a1 + 48) >> 57) >> 4) | (8
                                                               * ((*(_QWORD *)(a1 + 48) >> 57) & 8 | *(_QWORD *)(a1 + 48) & 7))) ^ 0x7F;
      if (v2 >= 0x7A)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for CallScreening.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x7A)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 123;
    if (a3 >= 0x7B)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if (a3 >= 0x7B)
      *(_BYTE *)(result + 56) = 0;
    if (a2)
    {
      v3 = (-a2 >> 3) & 0xF | (16 * (-a2 & 0x7F));
      *(_OWORD *)(result + 16) = 0u;
      *(_OWORD *)(result + 32) = 0u;
      *(_OWORD *)result = 0u;
      *(_QWORD *)(result + 48) = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t getEnumTag for CallScreening.State(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48) >> 61;
}

uint64_t destructiveProjectEnumData for CallScreening.State(uint64_t result)
{
  *(_QWORD *)(result + 48) &= 0x1FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t destructiveInjectEnumTag for CallScreening.State(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 48) = *(_QWORD *)(result + 48) & 0xFFFFFFFFFFFFFF8 | (a2 << 61);
  return result;
}

void type metadata accessor for CallScreening.State()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t initializeBufferWithCopyOfBuffer for CallScreening.EndingAction(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return initializeBufferWithCopyOfBuffer for CallScreening.EndingAction(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t))outlined copy of CallScreening.EndingAction);
}

uint64_t destroy for CallScreening.EndingAction(uint64_t a1)
{
  return outlined consume of CallScreening.EndingAction(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t *assignWithCopy for CallScreening.EndingAction(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return assignWithCopy for CallScreening.EndingAction(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t))outlined copy of CallScreening.EndingAction, (void (*)(uint64_t, uint64_t, uint64_t))outlined consume of CallScreening.EndingAction);
}

uint64_t *assignWithTake for CallScreening.EndingAction(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return assignWithTake for CallScreening.EndingAction(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))outlined consume of CallScreening.EndingAction);
}

uint64_t getEnumTagSinglePayload for CallScreening.EndingAction(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFE && *(_BYTE *)(a1 + 17))
    {
      v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 2)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CallScreening.EndingAction(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t getEnumTag for CallScreening.EndingAction(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t destructiveInjectEnumTag for CallScreening.EndingAction(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

void type metadata accessor for CallScreening.EndingAction()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t initializeBufferWithCopyOfBuffer for CallScreening.StateTransition(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return initializeBufferWithCopyOfBuffer for CallScreening.EndingAction(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t))outlined copy of CallScreening.StateTransition);
}

uint64_t outlined copy of CallScreening.StateTransition(uint64_t result, uint64_t a2, unsigned __int8 a3)
{
  switch(a3 >> 5)
  {
    case 0:
    case 1:
    case 2:
      result = swift_bridgeObjectRetain();
      break;
    case 3:
      result = outlined copy of CallScreening.EndingAction(result, a2, a3 & 0x1F);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t destroy for CallScreening.StateTransition(uint64_t a1)
{
  return outlined consume of CallScreening.StateTransition(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t outlined consume of CallScreening.StateTransition(uint64_t result, uint64_t a2, unsigned __int8 a3)
{
  switch(a3 >> 5)
  {
    case 0:
    case 1:
    case 2:
      result = swift_bridgeObjectRelease();
      break;
    case 3:
      result = outlined consume of CallScreening.EndingAction(result, a2, a3 & 0x1F);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for CallScreening.EndingAction(uint64_t a1, uint64_t *a2, uint64_t a3, void (*a4)(_QWORD, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *a2;
  v6 = a2[1];
  v7 = *((unsigned __int8 *)a2 + 16);
  a4(*a2, v6, v7);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = v7;
  return a1;
}

uint64_t *assignWithCopy for CallScreening.StateTransition(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return assignWithCopy for CallScreening.EndingAction(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t))outlined copy of CallScreening.StateTransition, (void (*)(uint64_t, uint64_t, uint64_t))outlined consume of CallScreening.StateTransition);
}

uint64_t *assignWithCopy for CallScreening.EndingAction(uint64_t *a1, uint64_t *a2, uint64_t a3, void (*a4)(_QWORD, uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v7 = *a2;
  v8 = a2[1];
  v9 = *((unsigned __int8 *)a2 + 16);
  a4(*a2, v8, v9);
  v10 = *a1;
  v11 = a1[1];
  *a1 = v7;
  a1[1] = v8;
  v12 = *((unsigned __int8 *)a1 + 16);
  *((_BYTE *)a1 + 16) = v9;
  a5(v10, v11, v12);
  return a1;
}

uint64_t *assignWithTake for CallScreening.StateTransition(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return assignWithTake for CallScreening.EndingAction(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))outlined consume of CallScreening.StateTransition);
}

uint64_t *assignWithTake for CallScreening.EndingAction(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t))
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_BYTE *)(a2 + 16);
  v6 = *a1;
  v7 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v8 = *((unsigned __int8 *)a1 + 16);
  *((_BYTE *)a1 + 16) = v5;
  a4(v6, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for CallScreening.StateTransition(uint64_t a1, unsigned int a2)
{
  unsigned int v2;

  if (a2)
  {
    if (a2 >= 0x3C && *(_BYTE *)(a1 + 17))
    {
      v2 = *(_DWORD *)a1 + 59;
    }
    else
    {
      v2 = ((*(unsigned __int8 *)(a1 + 16) >> 5) & 0xFFFFFFC7 | (8 * ((*(unsigned __int8 *)(a1 + 16) >> 2) & 7))) ^ 0x3F;
      if (v2 >= 0x3B)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for CallScreening.StateTransition(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3B)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 60;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x3C)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0x3C)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 0;
      *(_BYTE *)(result + 16) = 4 * (((-a2 >> 3) & 7) - 8 * a2);
    }
  }
  return result;
}

uint64_t getEnumTag for CallScreening.StateTransition(uint64_t a1)
{
  unsigned int v1;
  int v2;
  unsigned int v3;

  v1 = *(unsigned __int8 *)(a1 + 16);
  v2 = (char)v1;
  v3 = v1 >> 5;
  if (v2 >= 0)
    return v3;
  else
    return (*(_DWORD *)a1 + 4);
}

uint64_t destructiveProjectEnumData for CallScreening.StateTransition(uint64_t result)
{
  *(_BYTE *)(result + 16) &= 0x1Fu;
  return result;
}

uint64_t destructiveInjectEnumTag for CallScreening.StateTransition(uint64_t result, unsigned int a2)
{
  char v2;

  if (a2 < 4)
  {
    v2 = *(_BYTE *)(result + 16) & 3 | (32 * a2);
  }
  else
  {
    *(_QWORD *)result = a2 - 4;
    *(_QWORD *)(result + 8) = 0;
    v2 = 0x80;
  }
  *(_BYTE *)(result + 16) = v2;
  return result;
}

void type metadata accessor for CallScreening.StateTransition()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t sub_1BD083A68()
{
  uint64_t v0;

  outlined consume of CallScreening.EndingAction(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32));
  swift_release();
  OUTLINED_FUNCTION_32_5();
  return swift_deallocObject();
}

uint64_t sub_1BD083A9C()
{
  swift_bridgeObjectRelease();
  swift_release();
  OUTLINED_FUNCTION_32_5();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BD083AD4()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BD083B08()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  OUTLINED_FUNCTION_32_5();
  return swift_deallocObject();
}

uint64_t AudioCallMiddleContainerView.view.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t property wrapper backing initializer of AudioCallMiddleContainerView.viewModel()
{
  lazy protocol witness table accessor for type TranscriptionViewModel and conformance TranscriptionViewModel((unint64_t *)&lazy protocol witness table cache variable for type TranscriptionViewModel and conformance TranscriptionViewModel, type metadata accessor for TranscriptionViewModel, (uint64_t)&protocol conformance descriptor for TranscriptionViewModel);
  return ObservedObject.init(wrappedValue:)();
}

uint64_t AudioCallMiddleContainerView.viewModel.getter()
{
  return swift_retain();
}

uint64_t key path getter for AudioCallMiddleContainerView.viewModel : <A>AudioCallMiddleContainerView<A>@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t result;

  type metadata accessor for AudioCallMiddleContainerView(0, *(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8), a3);
  result = AudioCallMiddleContainerView.viewModel.getter();
  *a4 = result;
  return result;
}

uint64_t key path setter for AudioCallMiddleContainerView.viewModel : <A>AudioCallMiddleContainerView<A>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  v4 = type metadata accessor for AudioCallMiddleContainerView(0, *(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8), a4);
  v5 = swift_retain();
  return AudioCallMiddleContainerView.viewModel.setter(v5, v4);
}

uint64_t AudioCallMiddleContainerView.viewModel.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t result;

  v4 = v2 + *(int *)(a2 + 36);
  result = swift_release();
  *(_QWORD *)(v4 + 8) = a1;
  return result;
}

uint64_t (*AudioCallMiddleContainerView.viewModel.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t AudioCallMiddleContainerView.$viewModel.getter()
{
  type metadata accessor for TranscriptionViewModel(0);
  lazy protocol witness table accessor for type TranscriptionViewModel and conformance TranscriptionViewModel((unint64_t *)&lazy protocol witness table cache variable for type TranscriptionViewModel and conformance TranscriptionViewModel, type metadata accessor for TranscriptionViewModel, (uint64_t)&protocol conformance descriptor for TranscriptionViewModel);
  return ObservedObject.projectedValue.getter();
}

uint64_t AudioCallMiddleContainerView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];

  v25 = a2;
  v4 = *(_QWORD *)(a1 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v23 = *(_QWORD *)(MEMORY[0x1E0C80A78](a1) + 16);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _AnimationModifier<[TranscriptionViewModel.Caption]>);
  v6 = type metadata accessor for ModifiedContent();
  v21 = *(_QWORD *)(a1 + 24);
  v26[0] = v21;
  v26[1] = lazy protocol witness table accessor for type _AnimationModifier<[TranscriptionViewModel.Caption]> and conformance _AnimationModifier<A>();
  v22 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v6, v26);
  v8 = type metadata accessor for AccessibilityCaptionsReader(0, v6, v22, v7);
  v24 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v20 - v12;
  v20 = AudioCallMiddleContainerView.viewModel.getter();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v2, a1);
  v14 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v15 = swift_allocObject();
  v16 = v21;
  *(_QWORD *)(v15 + 16) = v23;
  *(_QWORD *)(v15 + 24) = v16;
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v15 + v14, (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  AccessibilityCaptionsReader.init(viewModel:content:)((uint64_t)partial apply for closure #1 in AudioCallMiddleContainerView.body.getter, v15, v6, v22, (uint64_t)v11);
  v17 = MEMORY[0x1C3B750C8](&protocol conformance descriptor for AccessibilityCaptionsReader<A>, v8);
  static ViewBuilder.buildExpression<A>(_:)(v11, v8, v17);
  v18 = *(void (**)(char *, uint64_t))(v24 + 8);
  v18(v11, v8);
  static ViewBuilder.buildBlock<A>(_:)((uint64_t)v13, v8, v25);
  return ((uint64_t (*)(char *, uint64_t))v18)(v13, v8);
}

unint64_t lazy protocol witness table accessor for type _AnimationModifier<[TranscriptionViewModel.Caption]> and conformance _AnimationModifier<A>()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type _AnimationModifier<[TranscriptionViewModel.Caption]> and conformance _AnimationModifier<A>;
  if (!lazy protocol witness table cache variable for type _AnimationModifier<[TranscriptionViewModel.Caption]> and conformance _AnimationModifier<A>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _AnimationModifier<[TranscriptionViewModel.Caption]>);
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDB148], v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _AnimationModifier<[TranscriptionViewModel.Caption]> and conformance _AnimationModifier<A>);
  }
  return result;
}

uint64_t closure #1 in AudioCallMiddleContainerView.body.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  static Animation.easeInOut.getter();
  type metadata accessor for AudioCallMiddleContainerView(0, a2, a3, v5);
  AudioCallMiddleContainerView.viewModel.getter();
  TranscriptionViewModel.captions.getter();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [TranscriptionViewModel.Caption]);
  lazy protocol witness table accessor for type [TranscriptionViewModel.Caption] and conformance <A> [A]();
  View.animation<A>(_:value:)();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1BD083FF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AudioCallMiddleContainerView(0, v5, *(_QWORD *)(v4 + 24), a4)- 8)+ 80);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4 + ((v6 + 32) & ~v6), v5);
  swift_release();
  return swift_deallocObject();
}

uint64_t type metadata accessor for AudioCallMiddleContainerView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AudioCallMiddleContainerView);
}

uint64_t partial apply for closure #1 in AudioCallMiddleContainerView.body.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(v4 + 24);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AudioCallMiddleContainerView(0, v5, v6, a4) - 8)
                          + 80);
  return closure #1 in AudioCallMiddleContainerView.body.getter(v4 + ((v7 + 32) & ~v7), v5, v6);
}

uint64_t AudioCallMiddleContainerView.init(view:viewModel:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t *v8;
  uint64_t result;
  uint64_t v10;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a4, a1);
  v8 = (uint64_t *)(a4 + *(int *)(type metadata accessor for AudioCallMiddleContainerView(0, a2, a3, v7) + 36));
  result = property wrapper backing initializer of AudioCallMiddleContainerView.viewModel();
  *v8 = result;
  v8[1] = v10;
  return result;
}

uint64_t associated type witness table accessor for View.Body : View in AudioCallMiddleContainerView<A>()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1BD084188()
{
  return 16;
}

__n128 sub_1BD084194(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t type metadata completion function for AudioCallMiddleContainerView()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for AudioCallMiddleContainerView(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = (_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    v11 = (_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *v10 = *v11;
    v10[1] = v11[1];
  }
  swift_retain();
  return v4;
}

uint64_t destroy for AudioCallMiddleContainerView(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
  return swift_release();
}

uint64_t initializeWithCopy for AudioCallMiddleContainerView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for AudioCallMiddleContainerView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for AudioCallMiddleContainerView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  *(_OWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t assignWithTake for AudioCallMiddleContainerView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for AudioCallMiddleContainerView(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  unint64_t v13;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (!a2)
    return 0;
  v8 = *(_QWORD *)(v5 + 64);
  if (v7 >= a2)
  {
    if (v6 < 0x7FFFFFFF)
    {
      v13 = *(_QWORD *)(((a1 + v8 + 7) & 0xFFFFFFFFFFFFF8) + 8);
      if (v13 >= 0xFFFFFFFF)
        LODWORD(v13) = -1;
      return (v13 + 1);
    }
    else
    {
      return __swift_getEnumTagSinglePayload(a1, v6, v4);
    }
  }
  else
  {
    if (((((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
      v9 = 2;
    else
      v9 = a2 - v7 + 1;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1BD08452C + 4 * byte_1BD6462D0[v11]))();
  }
}

void storeEnumTagSinglePayload for AudioCallMiddleContainerView(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0u;
  }
  else
  {
    if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
  }
  if (a2 > v6)
  {
    if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      v10 = ~v6 + a2;
      bzero(a1, ((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
      *a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t sub_1BD084698(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  _QWORD *v8;

  *(_BYTE *)(v5 + v6) = 0;
  if ((_DWORD)a2)
  {
    if (a3 < 0x7FFFFFFF)
    {
      v8 = (_QWORD *)((v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8);
      if ((a2 & 0x80000000) != 0)
      {
        *v8 = a2 ^ 0x80000000;
        v8[1] = 0;
      }
      else
      {
        v8[1] = (a2 - 1);
      }
    }
    else
    {
      return __swift_storeEnumTagSinglePayload(v5, a2, a3, a4);
    }
  }
  return result;
}

uint64_t sub_1BD084728(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[2];

  v1 = *(_QWORD *)(a1 + 8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _AnimationModifier<[TranscriptionViewModel.Caption]>);
  v2 = type metadata accessor for ModifiedContent();
  v7[0] = v1;
  v7[1] = lazy protocol witness table accessor for type _AnimationModifier<[TranscriptionViewModel.Caption]> and conformance _AnimationModifier<A>();
  v3 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v2, v7);
  v5 = type metadata accessor for AccessibilityCaptionsReader(255, v2, v3, v4);
  return MEMORY[0x1C3B750C8](&protocol conformance descriptor for AccessibilityCaptionsReader<A>, v5);
}

unint64_t lazy protocol witness table accessor for type [TranscriptionViewModel.Caption] and conformance <A> [A]()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = lazy protocol witness table cache variable for type [TranscriptionViewModel.Caption] and conformance <A> [A];
  if (!lazy protocol witness table cache variable for type [TranscriptionViewModel.Caption] and conformance <A> [A])
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&demangling cache variable for type metadata for [TranscriptionViewModel.Caption]);
    v2 = lazy protocol witness table accessor for type TranscriptionViewModel and conformance TranscriptionViewModel(&lazy protocol witness table cache variable for type TranscriptionViewModel.Caption and conformance TranscriptionViewModel.Caption, type metadata accessor for TranscriptionViewModel.Caption, (uint64_t)&protocol conformance descriptor for TranscriptionViewModel.Caption);
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0DEAF30], v1, &v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type [TranscriptionViewModel.Caption] and conformance <A> [A]);
  }
  return result;
}

void static UIBackgroundConfiguration.plainInCallControlsBackground.getter()
{
  id v0;

  static UIBackgroundConfiguration.listPlainCell()();
  v0 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
  UIBackgroundConfiguration.backgroundColor.setter();
  OUTLINED_FUNCTION_0();
}

void static UIBackgroundConfiguration.preferredInCallControlsBackground.getter()
{
  id v0;

  static UIBackgroundConfiguration.listGroupedCell()();
  v0 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
  UIBackgroundConfiguration.backgroundColor.setter();
  type metadata accessor for UIVibrancyEffect();
  static UIVibrancyEffect.inCallControlsEffect.getter();
  UIBackgroundConfiguration.visualEffect.setter();
  OUTLINED_FUNCTION_0();
}

void static UIBackgroundConfiguration.blurredInCallControlsBackground.getter()
{
  id v0;

  static UIBackgroundConfiguration.listGroupedCell()();
  v0 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
  UIBackgroundConfiguration.backgroundColor.setter();
  type metadata accessor for UIVibrancyEffect();
  static UIVibrancyEffect.inCallControlsEffect.getter();
  UIBackgroundConfiguration.visualEffect.setter();
  OUTLINED_FUNCTION_0();
}

unint64_t type metadata accessor for UIVibrancyEffect()
{
  unint64_t result;

  result = lazy cache variable for type metadata for UIVibrancyEffect;
  if (!lazy cache variable for type metadata for UIVibrancyEffect)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for UIVibrancyEffect);
  }
  return result;
}

uint64_t key path getter for CallScreeningInitialState.initialStateSetup : <A>CallScreeningInitialState<A>@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = a3 + a2;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = *(_OWORD *)(v5 - 16);
  *(_QWORD *)(v8 + 32) = v7;
  *(_QWORD *)(v8 + 40) = v6;
  *a4 = partial apply for thunk for @escaping @callee_guaranteed (@guaranteed CallScreeningInitialState<A>) -> ();
  a4[1] = v8;
  return swift_retain();
}

uint64_t key path setter for CallScreeningInitialState.initialStateSetup : <A>CallScreeningInitialState<A>(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v5 = a4 + a3;
  v7 = *a1;
  v6 = a1[1];
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = *(_OWORD *)(v5 - 16);
  *(_QWORD *)(v8 + 32) = v7;
  *(_QWORD *)(v8 + 40) = v6;
  swift_retain();
  result = swift_release();
  *(_QWORD *)(a2 + 8) = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed CallScreeningInitialState<A>) -> (@out ());
  *(_QWORD *)(a2 + 16) = v8;
  return result;
}

uint64_t CallScreeningInitialState.initialStateSetup.getter(uint64_t a1, uint64_t a2)
{
  swift_retain();
  return a2;
}

uint64_t CallScreeningInitialState.initialStateSetup.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_release();
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  return result;
}

uint64_t (*CallScreeningInitialState.initialStateSetup.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t CallScreeningInitialState.init(initialStateSetup:)()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CKStateMachineContainer<CallScreening.State>);
  v0 = swift_allocObject();
  swift_weakInit();
  return v0;
}

void CallScreeningInitialState.willExit(to:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27[3];
  uint64_t v28;

  v10 = type metadata accessor for Logger();
  v11 = OUTLINED_FUNCTION_6_27(v10);
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_11_2();
  v27[0] = a2;
  v27[1] = a3;
  v27[2] = a4;
  v16 = OUTLINED_FUNCTION_12_21(v12, v13, v14, v15);
  v17 = MEMORY[0x1C3B750C8](&protocol conformance descriptor for CallScreeningInitialState<A>, v16);
  if (CallScreeningState.stateMachine.getter(v16, v17))
  {
    OUTLINED_FUNCTION_17_15(a5);
    OUTLINED_FUNCTION_13_8();
    swift_retain();
    OUTLINED_FUNCTION_4_27();
    OUTLINED_FUNCTION_13_8();
    swift_retain();
    OUTLINED_FUNCTION_4_27();
    v18 = Logger.logObject.getter();
    v19 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v18, v19))
    {
      v26 = v19;
      v20 = OUTLINED_FUNCTION_105();
      v27[0] = OUTLINED_FUNCTION_105();
      *(_DWORD *)v20 = 136446466;
      swift_release();
      OUTLINED_FUNCTION_14_12();
      v25 = v18;
      v28 = OUTLINED_FUNCTION_0_38();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      OUTLINED_FUNCTION_14_12();
      OUTLINED_FUNCTION_3_31();
      *(_WORD *)(v20 + 12) = 2082;
      outlined retain of CallScreening.State(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined copy of CallScreening.State);
      CallScreening.State.description.getter();
      v22 = v21;
      v24 = v23;
      OUTLINED_FUNCTION_8_16();
      v28 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v22, v24, v27);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_8_16();
      OUTLINED_FUNCTION_8_16();
      _os_log_impl(&dword_1BD004000, v25, v26, "%{public}s Exiting to %{public}s", (uint8_t *)v20, 0x16u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_60();
    }
    OUTLINED_FUNCTION_23_0();
    OUTLINED_FUNCTION_23_0();
    OUTLINED_FUNCTION_4_27();
    OUTLINED_FUNCTION_4_27();

    swift_unknownObjectRelease();
    OUTLINED_FUNCTION_9_26();
  }
  OUTLINED_FUNCTION_1_29();
}

uint64_t type metadata accessor for CallScreeningInitialState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CallScreeningInitialState);
}

_QWORD *outlined retain of CallScreening.State(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6]);
  return a1;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> CallScreeningInitialState.enteredState()()
{
  void (*v0)(_QWORD, _QWORD, _QWORD);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(_QWORD, _QWORD, _QWORD);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(_QWORD, _QWORD, _QWORD);
  uint64_t v28;
  uint64_t v29;

  v6 = v3;
  v7 = v2;
  v8 = v1;
  v9 = v0;
  v10 = OUTLINED_FUNCTION_16_11();
  v11 = OUTLINED_FUNCTION_6_27(v10);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = v5;
  v27 = v9;
  v28 = v8;
  v15 = type metadata accessor for CallScreeningInitialState(0, v7, v6, v14);
  v16 = MEMORY[0x1C3B750C8](&protocol conformance descriptor for CallScreeningInitialState<A>, v15);
  if (CallScreeningState.stateMachine.getter(v15, v16))
  {
    OUTLINED_FUNCTION_17_15(v7);
    swift_unknownObjectRelease();
    swift_retain();
    swift_retain();
    v17 = Logger.logObject.getter();
    v18 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = OUTLINED_FUNCTION_105();
      v23 = v4;
      v20 = (uint8_t *)v19;
      v22 = OUTLINED_FUNCTION_105();
      v26 = v22;
      *(_DWORD *)v20 = 136446210;
      v29 = OUTLINED_FUNCTION_0_38();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      swift_release();
      OUTLINED_FUNCTION_3_31();
      _os_log_impl(&dword_1BD004000, v17, v18, "EnteredState %{public}s", v20, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_60();
    }

    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v13, v25);
  }
  v9(v5, v9, v8);
  OUTLINED_FUNCTION_1_29();
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> CallScreeningInitialState.update(with:)(ConversationKit::AnsweringMachineCallStatus *with)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23[3];
  uint64_t v24;

  v5 = v4;
  v6 = v3;
  v7 = v2;
  v8 = v1;
  v9 = OUTLINED_FUNCTION_16_11();
  v10 = OUTLINED_FUNCTION_6_27(v9);
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_11_2();
  v23[0] = v8;
  v23[1] = v7;
  v23[2] = v6;
  v15 = OUTLINED_FUNCTION_12_21(v11, v12, v13, v14);
  v16 = MEMORY[0x1C3B750C8](&protocol conformance descriptor for CallScreeningInitialState<A>, v15);
  if (CallScreeningState.stateMachine.getter(v15, v16))
  {
    OUTLINED_FUNCTION_17_15(v5);
    swift_unknownObjectRelease();
    swift_retain();
    OUTLINED_FUNCTION_13_8();
    OUTLINED_FUNCTION_15_23();
    swift_retain();
    OUTLINED_FUNCTION_13_8();
    OUTLINED_FUNCTION_15_23();
    v17 = Logger.logObject.getter();
    v18 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = OUTLINED_FUNCTION_105();
      v23[0] = OUTLINED_FUNCTION_105();
      *(_DWORD *)v19 = 136446466;
      OUTLINED_FUNCTION_14_12();
      swift_release();
      v24 = OUTLINED_FUNCTION_0_38();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_14_12();
      swift_release();
      OUTLINED_FUNCTION_3_31();
      *(_WORD *)(v19 + 12) = 2082;
      OUTLINED_FUNCTION_15_23();
      v20 = AnsweringMachineCallStatus.description.getter();
      v22 = v21;
      OUTLINED_FUNCTION_7_40();
      v24 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v20, v22, v23);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_7_40();
      OUTLINED_FUNCTION_7_40();
      _os_log_impl(&dword_1BD004000, v17, v18, "%{public}s recieved callStatus Update: %{public}s", (uint8_t *)v19, 0x16u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_60();
    }
    OUTLINED_FUNCTION_23_0();
    OUTLINED_FUNCTION_23_0();
    OUTLINED_FUNCTION_7_40();
    OUTLINED_FUNCTION_7_40();

    OUTLINED_FUNCTION_9_26();
  }
  OUTLINED_FUNCTION_1_29();
}

uint64_t protocol witness for CallScreeningState.stateMachineContainer.getter in conformance CallScreeningInitialState<A>()
{
  return swift_retain();
}

void protocol witness for CallScreeningState.willExit(to:) in conformance CallScreeningInitialState<A>(_QWORD *a1, uint64_t a2)
{
  uint64_t *v2;

  CallScreeningInitialState.willExit(to:)(a1, *v2, v2[1], v2[2], *(_QWORD *)(a2 + 16));
}

void protocol witness for CallScreeningState.enteredState() in conformance CallScreeningInitialState<A>()
{
  CallScreeningInitialState.enteredState()();
}

uint64_t protocol witness for UpdatesWithCallStatus.update(with:) in conformance CallScreeningInitialState<A>(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = v2;
  v3[4] = a2;
  v3[2] = a1;
  v3[5] = static CKStateMachineActor.shared.getter();
  return swift_task_switch();
}

uint64_t protocol witness for UpdatesWithCallStatus.update(with:) in conformance CallScreeningInitialState<A>()
{
  uint64_t v0;
  ConversationKit::AnsweringMachineCallStatus *v1;

  v1 = *(ConversationKit::AnsweringMachineCallStatus **)(v0 + 16);
  swift_release();
  CallScreeningInitialState.update(with:)(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t static CallScreeningInitialState.== infix(_:_:)()
{
  return 1;
}

uint64_t CallScreeningInitialState.description.getter()
{
  return 0x536C616974696E49;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance CallScreeningInitialState<A>()
{
  return 0x536C616974696E49;
}

uint64_t outlined retain of AnsweringMachineCallStatus(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t outlined release of AnsweringMachineCallStatus(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t associated type witness table accessor for CallScreeningState.StateMachine : CallScreeningStateMachine in CallScreeningInitialState<A>(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 24);
}

uint64_t instantiation function for generic protocol witness table for CallScreeningInitialState<A>(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for CallScreeningInitialState<A>);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1BD0853C0()
{
  return 16;
}

__n128 sub_1BD0853CC(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t destroy for CallScreeningInitialState()
{
  swift_release();
  return swift_release();
}

uint64_t initializeBufferWithCopyOfBuffer for CallScreeningInitialState(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for CallScreeningInitialState(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  swift_retain();
  swift_release();
  v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for CallScreeningInitialState(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_release();
  v4 = *(_QWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v4;
  swift_release();
  return a1;
}

uint64_t sub_1BD0854E4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed CallScreeningInitialState<A>) -> (@out ())(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t (*v4)(_QWORD *);
  _QWORD v6[3];

  v4 = *(uint64_t (**)(_QWORD *))(v3 + 32);
  v6[0] = a1;
  v6[1] = a2;
  v6[2] = a3;
  return v4(v6);
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@guaranteed CallScreeningInitialState<A>) -> ()(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v1 + 32))(*a1, a1[1], a1[2]);
}

uint64_t @objc LockScreenHostingController._canShowWhileLocked()()
{
  return 1;
}

void LockScreenHostingController.__allocating_init(rootView:)(uint64_t a1)
{
  OUTLINED_FUNCTION_12_3();
  LockScreenHostingController.init(rootView:)(a1);
}

void LockScreenHostingController.init(rootView:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + class metadata base offset for LockScreenHostingController);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v6 - v5, a1, v3);
  UIHostingController.init(rootView:)();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  OUTLINED_FUNCTION_91();
}

void LockScreenHostingController.__allocating_init(coder:rootView:)(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_12_3();
  LockScreenHostingController.init(coder:rootView:)(a1, a2);
}

void LockScreenHostingController.init(coder:rootView:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void (*v8)(uint64_t, uint64_t);
  id v9;
  uint64_t v10;

  v4 = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v2) + class metadata base offset for LockScreenHostingController);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](a1);
  (*(void (**)(char *))(v5 + 16))((char *)&v10 - v6);
  v7 = (void *)UIHostingController.init(coder:rootView:)();
  v8 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v9 = v7;
  v8(a2, v4);
  if (v7)

  OUTLINED_FUNCTION_91();
}

id LockScreenHostingController.__allocating_init(coder:)(void *a1)
{
  id v2;

  v2 = objc_msgSend(OUTLINED_FUNCTION_12_3(), sel_initWithCoder_, a1);

  return v2;
}

id LockScreenHostingController.init(coder:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v6;
  id v7;
  objc_super v9;

  v6 = (objc_class *)type metadata accessor for LockScreenHostingController(0, *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4)+ class metadata base offset for LockScreenHostingController), *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4)+ class metadata base offset for LockScreenHostingController+ 8), a4);
  v9.receiver = v4;
  v9.super_class = v6;
  v7 = objc_msgSendSuper2(&v9, sel_initWithCoder_, a1);

  return v7;
}

uint64_t type metadata accessor for LockScreenHostingController(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for LockScreenHostingController);
}

id @objc LockScreenHostingController.init(coder:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = a3;
  return LockScreenHostingController.init(coder:)(v3, v4, v5, v6);
}

id LockScreenHostingController.__deallocating_deinit(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  objc_super v7;

  v5 = (objc_class *)type metadata accessor for LockScreenHostingController(0, *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4)+ class metadata base offset for LockScreenHostingController), *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4)+ class metadata base offset for LockScreenHostingController+ 8), a4);
  v7.receiver = v4;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, sel_dealloc);
}

void View.inLockScreenHostingController()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for LockScreenHostingController(0, a1, v6, v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, a1);
  LockScreenHostingController.__allocating_init(rootView:)((uint64_t)v5);
  OUTLINED_FUNCTION_91();
}

uint64_t type metadata completion function for LockScreenHostingController()
{
  return swift_initClassMetadata2();
}

uint64_t CaptionsViewConstraintManager.__allocating_init(containingGuide:rosterCellLayoutGuide:containingView:captionsView:bannerView:gridView:)(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6)
{
  uint64_t v12;

  v12 = OUTLINED_FUNCTION_15();
  CaptionsViewConstraintManager.init(containingGuide:rosterCellLayoutGuide:containingView:captionsView:bannerView:gridView:)(a1, a2, a3, a4, a5, a6);
  return v12;
}

void CaptionsViewConstraintManager.init(containingGuide:rosterCellLayoutGuide:containingView:captionsView:bannerView:gridView:)(void *a1, void *a2, void *a3, id a4, void *a5, void *a6)
{
  _QWORD *v6;
  uint64_t v7;
  void *v8;
  _QWORD *v9;
  id v13;
  id v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  id v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  id v47;
  id v48;
  id v49;
  uint64_t v50;
  id v51;
  id v52;
  id v53;
  uint64_t v54;
  id v55;
  id v56;
  id v57;
  uint64_t v58;
  id v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  id v65;
  id v66;
  id v67;
  uint64_t v68;
  id v69;
  id v70;
  id v71;
  uint64_t v72;
  id v73;
  id v74;
  id v75;
  uint64_t v76;
  id v77;
  id v78;
  id v79;
  uint64_t v80;
  id v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  id v85;
  uint64_t v86;
  id v87;
  id v88;
  id v89;
  uint64_t v90;
  id v91;
  id v92;
  id v93;
  uint64_t v94;
  id v95;
  id v96;
  id v97;

  v9 = v6;
  v6[22] = MEMORY[0x1E0DEE9D8];
  v13 = objc_msgSend(a4, sel_widthAnchor);
  if (one-time initialization token for transcriptSidebarWidth != -1)
    swift_once();
  v14 = OUTLINED_FUNCTION_46_3();
  OUTLINED_FUNCTION_45_6();
  v6[13] = v7;
  v16 = OUTLINED_FUNCTION_2_11(v15, sel_heightAnchor);
  if (one-time initialization token for transcriptVerticalSize != -1)
    swift_once();
  v17 = OUTLINED_FUNCTION_46_3();
  OUTLINED_FUNCTION_45_6();
  v6[14] = v7;
  v19 = objc_msgSend(OUTLINED_FUNCTION_2_11(v18, sel_heightAnchor), sel_constraintEqualToConstant_, 0.0);
  OUTLINED_FUNCTION_45_6();
  v6[15] = v7;
  v21 = OUTLINED_FUNCTION_2_11(v20, sel_leftAnchor);
  v22 = OUTLINED_FUNCTION_39((uint64_t)v21, sel_leftAnchor);
  v23 = OUTLINED_FUNCTION_1_30((uint64_t)v22, sel_constraintEqualToAnchor_);
  OUTLINED_FUNCTION_6_14();

  v6[2] = v8;
  v25 = OUTLINED_FUNCTION_2_11(v24, sel_leftAnchor);
  v26 = objc_msgSend(a5, sel_rightAnchor);
  OUTLINED_FUNCTION_30_15();
  if (one-time initialization token for shared != -1)
    swift_once();
  v27 = static Defaults.shared;
  OUTLINED_FUNCTION_11_6();
  static Platform.current.getter();
  v28 = OUTLINED_FUNCTION_12_4();
  v29 = OUTLINED_FUNCTION_10_35(v28, sel_constraintEqualToAnchor_constant_);
  OUTLINED_FUNCTION_28_14();

  v9[3] = v27;
  v31 = OUTLINED_FUNCTION_2_11(v30, sel_rightAnchor);
  v32 = OUTLINED_FUNCTION_39((uint64_t)v31, sel_rightAnchor);
  v33 = OUTLINED_FUNCTION_1_30((uint64_t)v32, (const char *)&selRef_attemptToPlaySoundType_forCall_ + 6);
  OUTLINED_FUNCTION_6_14();

  v9[5] = v8;
  v35 = OUTLINED_FUNCTION_2_11(v34, sel_rightAnchor);
  v36 = objc_msgSend(a6, sel_leftAnchor);
  OUTLINED_FUNCTION_30_15();
  v37 = static Defaults.shared;
  OUTLINED_FUNCTION_11_6();
  static Platform.current.getter();
  v38 = OUTLINED_FUNCTION_12_4();
  v39 = OUTLINED_FUNCTION_10_35(v38, sel_constraintEqualToAnchor_constant_);
  OUTLINED_FUNCTION_28_14();

  v9[6] = v37;
  v41 = OUTLINED_FUNCTION_2_11(v40, (const char *)&selRef_initWithRootViewController_ + 5);
  v42 = OUTLINED_FUNCTION_2_2((uint64_t)v41, (const char *)&selRef_constraintEqualToAnchor_ + 4);
  OUTLINED_FUNCTION_30_15();
  v43 = static Defaults.shared;
  OUTLINED_FUNCTION_11_6();
  static Platform.current.getter();
  v44 = OUTLINED_FUNCTION_12_4();
  v45 = OUTLINED_FUNCTION_10_35(v44, sel_constraintEqualToAnchor_constant_);
  OUTLINED_FUNCTION_28_14();

  v9[4] = v43;
  v47 = OUTLINED_FUNCTION_2_2(v46, (const char *)&selRef_constraintEqualToAnchor_ + 4);
  v48 = OUTLINED_FUNCTION_20_4((uint64_t)v47, (const char *)&selRef_constraintEqualToAnchor_ + 4);
  v49 = OUTLINED_FUNCTION_1_30((uint64_t)v48, sel_constraintEqualToAnchor_);
  OUTLINED_FUNCTION_6_14();

  v9[7] = v8;
  v51 = OUTLINED_FUNCTION_2_2(v50, sel_leftAnchor);
  v52 = OUTLINED_FUNCTION_20_4((uint64_t)v51, sel_leftAnchor);
  v53 = OUTLINED_FUNCTION_1_30((uint64_t)v52, sel_constraintEqualToAnchor_);
  OUTLINED_FUNCTION_6_14();

  v9[8] = v8;
  v55 = OUTLINED_FUNCTION_2_11(v54, sel_leadingAnchor);
  v56 = OUTLINED_FUNCTION_20_4((uint64_t)v55, sel_leadingAnchor);
  v57 = OUTLINED_FUNCTION_1_30((uint64_t)v56, sel_constraintEqualToAnchor_);
  OUTLINED_FUNCTION_6_14();

  v9[10] = v8;
  v59 = OUTLINED_FUNCTION_2_11(v58, sel_trailingAnchor);
  v60 = OUTLINED_FUNCTION_2_2((uint64_t)v59, sel_leadingAnchor);
  OUTLINED_FUNCTION_30_15();
  v61 = static Defaults.shared;
  OUTLINED_FUNCTION_11_6();
  static Platform.current.getter();
  v62 = OUTLINED_FUNCTION_12_4();
  v63 = OUTLINED_FUNCTION_10_35(v62, sel_constraintEqualToAnchor_constant_);
  OUTLINED_FUNCTION_28_14();

  v9[11] = v61;
  v65 = OUTLINED_FUNCTION_2_11(v64, sel_trailingAnchor);
  v66 = OUTLINED_FUNCTION_2_2((uint64_t)v65, sel_leadingAnchor);
  v67 = OUTLINED_FUNCTION_1_30((uint64_t)v66, sel_constraintEqualToAnchor_);
  OUTLINED_FUNCTION_6_14();

  v9[12] = v8;
  v69 = OUTLINED_FUNCTION_2_2(v68, sel_trailingAnchor);
  v70 = OUTLINED_FUNCTION_20_4((uint64_t)v69, sel_trailingAnchor);
  v71 = OUTLINED_FUNCTION_1_30((uint64_t)v70, sel_constraintEqualToAnchor_);
  OUTLINED_FUNCTION_6_14();

  v9[9] = v8;
  v73 = OUTLINED_FUNCTION_2_11(v72, sel_topAnchor);
  v74 = OUTLINED_FUNCTION_20_4((uint64_t)v73, sel_topAnchor);
  v75 = OUTLINED_FUNCTION_1_30((uint64_t)v74, sel_constraintEqualToAnchor_);
  OUTLINED_FUNCTION_6_14();

  v9[16] = v8;
  v77 = OUTLINED_FUNCTION_2_11(v76, sel_bottomAnchor);
  v78 = OUTLINED_FUNCTION_20_4((uint64_t)v77, sel_bottomAnchor);
  v79 = OUTLINED_FUNCTION_1_30((uint64_t)v78, sel_constraintEqualToAnchor_);
  OUTLINED_FUNCTION_6_14();

  v9[17] = v8;
  v81 = OUTLINED_FUNCTION_2_11(v80, sel_bottomAnchor);
  v82 = objc_msgSend(a5, sel_topAnchor);
  OUTLINED_FUNCTION_30_15();
  v83 = static Defaults.shared;
  OUTLINED_FUNCTION_11_6();
  static Platform.current.getter();
  v84 = OUTLINED_FUNCTION_12_4();
  v85 = OUTLINED_FUNCTION_10_35(v84, sel_constraintEqualToAnchor_constant_);
  OUTLINED_FUNCTION_28_14();

  v9[18] = v83;
  v87 = OUTLINED_FUNCTION_2_11(v86, sel_bottomAnchor);
  v88 = OUTLINED_FUNCTION_39((uint64_t)v87, sel_topAnchor);
  v89 = OUTLINED_FUNCTION_1_30((uint64_t)v88, (const char *)&selRef_attemptToPlaySoundType_forCall_ + 6);
  OUTLINED_FUNCTION_6_14();

  v9[21] = v8;
  v91 = OUTLINED_FUNCTION_2_11(v90, sel_centerXAnchor);
  v92 = OUTLINED_FUNCTION_20_4((uint64_t)v91, sel_centerXAnchor);
  v93 = OUTLINED_FUNCTION_1_30((uint64_t)v92, (const char *)&selRef_attemptToPlaySoundType_forCall_ + 6);
  OUTLINED_FUNCTION_6_14();

  v9[19] = v8;
  v95 = OUTLINED_FUNCTION_2_11(v94, sel_centerYAnchor);
  v96 = OUTLINED_FUNCTION_2_2((uint64_t)v95, sel_centerYAnchor);
  v97 = OUTLINED_FUNCTION_1_30((uint64_t)v96, (const char *)&selRef_attemptToPlaySoundType_forCall_ + 6);
  OUTLINED_FUNCTION_6_14();

  v9[20] = v8;
  OUTLINED_FUNCTION_0_20();
}

uint64_t CaptionsViewConstraintManager.constraintsForLayout(_:in:deviceOrientation:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  if (*(_BYTE *)(a1 + 19))
  {
    if (*(_BYTE *)(a1 + 19) == 1)
    {
      OUTLINED_FUNCTION_32_11();
      OUTLINED_FUNCTION_31_19();
      CaptionsViewConstraintManager.platformBubbleConstraints(for:deviceOrientation:)(v2, v3);
    }
    OUTLINED_FUNCTION_32_11();
    OUTLINED_FUNCTION_31_19();
    CaptionsViewConstraintManager.platformTranscriptConstraints(for:deviceOrientation:)(v9, v10);
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v4 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v4 + 16) = xmmword_1BD6441C0;
  v5 = (void *)v1[13];
  v6 = (void *)v1[15];
  *(_QWORD *)(v4 + 32) = v5;
  *(_QWORD *)(v4 + 40) = v6;
  v12 = v4;
  OUTLINED_FUNCTION_26_0();
  v1[22] = v12;
  v7 = v5;
  v8 = v6;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRetain();
}

void CaptionsViewConstraintManager.platformTranscriptConstraints(for:deviceOrientation:)(char *a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  char v5;
  char v6;
  char v7;
  char v8;
  char v9;
  char v10;
  char v11;
  uint64_t v12;
  _BYTE v13[8];
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;

  v3 = *a1;
  v4 = *((_QWORD *)a1 + 1);
  v5 = a1[16];
  v6 = a1[17];
  v7 = a1[18];
  v8 = a1[19];
  v9 = a1[20];
  v10 = a1[21];
  v11 = a1[22];
  v12 = static Platform.current.getter();
  if (v12 == 2)
  {
    v13[0] = v3;
    v14 = v4;
    v15 = v5;
    v16 = v6;
    v17 = v7;
    v18 = v8;
    v19 = v9;
    v20 = v10;
    v21 = v11;
    CaptionsViewConstraintManager.tvTranscriptConstraints(for:)((uint64_t)v13);
  }
  CaptionsViewConstraintManager.defaultTranscriptConstraints(for:deviceOrientation:)(v12, a2);
}

void CaptionsViewConstraintManager.tvTranscriptConstraints(for:)(uint64_t a1)
{
  _QWORD *v1;
  int v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;

  v2 = *(unsigned __int8 *)(a1 + 18);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v3 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v3 + 16) = xmmword_1BD644140;
  v4 = (void *)v1[13];
  v5 = (void *)v1[14];
  *(_QWORD *)(v3 + 32) = v4;
  *(_QWORD *)(v3 + 40) = v5;
  v7 = (void *)v1[9];
  v6 = (void *)v1[10];
  *(_QWORD *)(v3 + 48) = v6;
  *(_QWORD *)(v3 + 56) = v7;
  OUTLINED_FUNCTION_26_0();
  v8 = 12;
  if (v2)
    v8 = 11;
  v9 = (void *)v1[v8];
  v10 = v4;
  v11 = v5;
  v12 = v6;
  v13 = v7;
  v14 = v9;
  OUTLINED_FUNCTION_36_0();
}

void CaptionsViewConstraintManager.defaultTranscriptConstraints(for:deviceOrientation:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  unint64_t v39;
  Swift::String v40;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v4 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v4 + 16) = xmmword_1BD6443F0;
  v5 = (void *)v2[13];
  *(_QWORD *)(v4 + 32) = v5;
  OUTLINED_FUNCTION_44_4();
  if ((unint64_t)(a2 - 1) >= 3)
  {
    if (!a2)
    {
      v17 = (void *)v2[2];
      v18 = (void *)v2[16];
      v19 = (void *)v2[21];
      v21 = (void *)v2[6];
      v20 = (void *)v2[7];
      if (v39 >> 62)
      {
        OUTLINED_FUNCTION_33_8();
        v33 = v17;
        v34 = v21;
        v35 = v18;
        v36 = v19;
        v37 = v20;
        OUTLINED_FUNCTION_124();
        OUTLINED_FUNCTION_25_3();
        OUTLINED_FUNCTION_7_15();
      }
      else
      {
        OUTLINED_FUNCTION_40_10();
        v22 = v17;
        v23 = v21;
        v24 = v18;
        v25 = v19;
        v26 = v20;
      }
      if (!__OFADD__(v2, 5))
      {
        OUTLINED_FUNCTION_27_8((uint64_t)v2 + 5);
        OUTLINED_FUNCTION_4_28();
        v27 = v17;
        OUTLINED_FUNCTION_5_23();
      }
      __break(1u);
      JUMPOUT(0x1BD086684);
    }
    v38 = v5;
    OUTLINED_FUNCTION_43_10();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_14_34();
    v40._countAndFlagsBits = OUTLINED_FUNCTION_42_7();
    OUTLINED_FUNCTION_41_9(v40);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_29_12();
    __break(1u);
  }
  else
  {
    v7 = (void *)v2[4];
    v6 = (void *)v2[5];
    v8 = (void *)v2[16];
    v9 = (void *)v2[21];
    v10 = (void *)v2[8];
    if (v39 >> 62)
    {
      OUTLINED_FUNCTION_33_8();
      OUTLINED_FUNCTION_124();
      v28 = v6;
      v29 = v7;
      v30 = v8;
      v31 = v9;
      v32 = v10;
      OUTLINED_FUNCTION_25_3();
      OUTLINED_FUNCTION_7_15();
    }
    else
    {
      OUTLINED_FUNCTION_40_10();
      v11 = v6;
      v12 = v7;
      v13 = v8;
      v14 = v9;
      v15 = v10;
    }
    if (!__OFADD__(v2, 5))
    {
      OUTLINED_FUNCTION_27_8((uint64_t)v2 + 5);
      OUTLINED_FUNCTION_4_28();
      v16 = v6;
      OUTLINED_FUNCTION_5_23();
    }
    __break(1u);
  }
  JUMPOUT(0x1BD08661CLL);
}

void CaptionsViewConstraintManager.platformBubbleConstraints(for:deviceOrientation:)(uint64_t a1, char *a2)
{
  uint64_t v2;
  uint64_t v3;

  if (static Platform.current.getter() == 2)
  {
    OUTLINED_FUNCTION_9_27();
    CaptionsViewConstraintManager.tvBubbleConstraints(for:)(v2);
  }
  OUTLINED_FUNCTION_9_27();
  CaptionsViewConstraintManager.defaultBubbleConstraints(for:deviceOrientation:)(v3, a2);
}

void CaptionsViewConstraintManager.tvBubbleConstraints(for:)(uint64_t a1)
{
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;

  v2 = *(unsigned __int8 *)(a1 + 16);
  v3 = *(unsigned __int8 *)(a1 + 17);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v4 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v4 + 16) = xmmword_1BD6443F0;
  v5 = *(void **)(v1 + 152);
  *(_QWORD *)(v4 + 32) = v5;
  OUTLINED_FUNCTION_26_0();
  if (v3 == 128)
  {
    v6 = *(void **)(v1 + 128);
  }
  else
  {
    if (!v2)
    {
      v10 = *(id *)(v1 + 136);
      v11 = v5;
      OUTLINED_FUNCTION_36_0();
    }
    v6 = *(void **)(v1 + 144);
  }
  v7 = v6;
  v8 = v5;
  v9 = v7;
  OUTLINED_FUNCTION_36_0();
}

void sub_1BD086890(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  if (*(_QWORD *)((a10 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((a10 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    OUTLINED_FUNCTION_3_2();
  JUMPOUT(0x1BD08684CLL);
}

void CaptionsViewConstraintManager.defaultBubbleConstraints(for:deviceOrientation:)(uint64_t a1, char *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  int v5;
  uint64_t v6;
  void *v7;
  char *v8;
  _QWORD *v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  void *v15;
  char *v16;
  id v17;
  char *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;
  _QWORD *v24;
  char *v25;
  id v26;
  id v27;
  unint64_t v28;
  Swift::String v29;

  v3 = v2;
  v5 = *(unsigned __int8 *)(a1 + 16);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v6 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v6 + 16) = xmmword_1BD6443F0;
  v7 = (void *)v2[13];
  *(_QWORD *)(v6 + 32) = v7;
  OUTLINED_FUNCTION_44_4();
  if ((unint64_t)(a2 - 1) < 2)
  {
    a2 = (char *)v2[5];
    v3 = (_QWORD *)v2[16];
    if (v28 >> 62)
    {
      OUTLINED_FUNCTION_8_32();
      OUTLINED_FUNCTION_124();
      v19 = a2;
      v20 = v3;
      OUTLINED_FUNCTION_25_3();
      OUTLINED_FUNCTION_7_15();
    }
    else
    {
      OUTLINED_FUNCTION_18_27();
      v8 = a2;
      v9 = v3;
    }
    v10 = (uint64_t)v2 + 2;
    if (!__OFADD__(v2, 2))
    {
LABEL_23:
      OUTLINED_FUNCTION_27_8(v10);
      OUTLINED_FUNCTION_4_28();
      v18 = a2;
      OUTLINED_FUNCTION_5_23();
    }
    __break(1u);
  }
  if (a2 == (char *)3)
  {
    a2 = (char *)v3[2];
    if (!v5)
      goto LABEL_20;
    v3 = (_QWORD *)v3[18];
    if (v28 >> 62)
    {
      OUTLINED_FUNCTION_8_32();
      OUTLINED_FUNCTION_124();
      v23 = a2;
      v24 = v3;
      OUTLINED_FUNCTION_25_3();
      OUTLINED_FUNCTION_7_15();
    }
    else
    {
      OUTLINED_FUNCTION_18_27();
      v11 = a2;
      v12 = v3;
    }
    v10 = (uint64_t)v2 + 2;
    if (!__OFADD__(v2, 2))
      goto LABEL_23;
    __break(1u);
  }
  if (a2)
    goto LABEL_29;
  a2 = (char *)v3[2];
  v3 = (_QWORD *)v3[16];
  if (v28 >> 62)
  {
    OUTLINED_FUNCTION_8_32();
    v21 = a2;
    v22 = v3;
    OUTLINED_FUNCTION_124();
    OUTLINED_FUNCTION_25_3();
    OUTLINED_FUNCTION_7_15();
  }
  else
  {
    OUTLINED_FUNCTION_18_27();
    v13 = a2;
    v14 = v3;
  }
  v10 = (uint64_t)v2 + 2;
  if (!__OFADD__(v2, 2))
    goto LABEL_23;
  __break(1u);
LABEL_20:
  v15 = (void *)v3[17];
  if (v28 >> 62)
  {
    OUTLINED_FUNCTION_8_32();
    OUTLINED_FUNCTION_124();
    v25 = a2;
    v26 = v15;
    OUTLINED_FUNCTION_25_3();
    OUTLINED_FUNCTION_7_15();
  }
  else
  {
    OUTLINED_FUNCTION_18_27();
    v16 = a2;
    v17 = v15;
  }
  v10 = (uint64_t)v2 + 2;
  if (!__OFADD__(v2, 2))
    goto LABEL_23;
  __break(1u);
LABEL_29:
  v27 = v7;
  OUTLINED_FUNCTION_43_10();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_14_34();
  v29._countAndFlagsBits = OUTLINED_FUNCTION_42_7();
  OUTLINED_FUNCTION_41_9(v29);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_29_12();
  __break(1u);
}

id *CaptionsViewConstraintManager.deinit()
{
  id *v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t CaptionsViewConstraintManager.__deallocating_deinit()
{
  CaptionsViewConstraintManager.deinit();
  return swift_deallocClassInstance();
}

uint64_t protocol witness for CaptionsViewConstraintManagerProtocol.init(containingGuide:rosterCellLayoutGuide:containingView:captionsView:bannerView:gridView:) in conformance CaptionsViewConstraintManager@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 272))();
  *a1 = result;
  return result;
}

uint64_t protocol witness for CaptionsViewConstraintManagerProtocol.update(remoteParticipantAspectRatio:) in conformance CaptionsViewConstraintManager()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 280))();
}

uint64_t protocol witness for ViewConstraintManager.constraintsForLayout(_:in:deviceOrientation:) in conformance CaptionsViewConstraintManager()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 288))();
}

uint64_t dispatch thunk of CaptionsViewConstraintManagerProtocol.init(containingGuide:rosterCellLayoutGuide:containingView:captionsView:bannerView:gridView:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 16))();
}

uint64_t dispatch thunk of CaptionsViewConstraintManagerProtocol.update(remoteParticipantAspectRatio:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t type metadata accessor for CaptionsViewConstraintManager()
{
  return objc_opt_self();
}

uint64_t method lookup function for CaptionsViewConstraintManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CaptionsViewConstraintManager.__allocating_init(containingGuide:rosterCellLayoutGuide:containingView:captionsView:bannerView:gridView:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 272))();
}

uint64_t dispatch thunk of CaptionsViewConstraintManager.update(remoteParticipantAspectRatio:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 280))();
}

uint64_t dispatch thunk of CaptionsViewConstraintManager.constraintsForLayout(_:in:deviceOrientation:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 288))();
}

uint64_t *Colors.InCallControls.tableViewCellTitleLabel.unsafeMutableAddressor()
{
  if (one-time initialization token for tableViewCellTitleLabel != -1)
    swift_once();
  return &static Colors.InCallControls.tableViewCellTitleLabel;
}

uint64_t *Colors.InCallControls.collectionViewSectionHeaderTitleLabel.unsafeMutableAddressor()
{
  if (one-time initialization token for collectionViewSectionHeaderTitleLabel != -1)
    swift_once();
  return &static Colors.InCallControls.collectionViewSectionHeaderTitleLabel;
}

id one-time initialization function for separator()
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.33, 0.33, 0.35, 1.0);
  static Colors.ShareView.separator = (uint64_t)result;
  return result;
}

uint64_t *Colors.ShareView.separator.unsafeMutableAddressor()
{
  if (one-time initialization token for separator != -1)
    swift_once();
  return &static Colors.ShareView.separator;
}

id static Colors.ShareView.separator.getter()
{
  return static Colors.ShareView.separator.getter();
}

{
  id *v0;
  char v1;

  OUTLINED_FUNCTION_28_15();
  if (!v1)
    OUTLINED_FUNCTION_36_8();
  return OUTLINED_FUNCTION_33_9(*v0);
}

id one-time initialization function for background()
{
  id result;

  result = OUTLINED_FUNCTION_25_18(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.1);
  static Colors.ParticipantViews.background = (uint64_t)result;
  return result;
}

{
  id result;

  result = OUTLINED_FUNCTION_25_18(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.1);
  static Colors.InCallControls.background = (uint64_t)result;
  return result;
}

{
  id result;

  result = OUTLINED_FUNCTION_5_24(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_);
  static Colors.MultiwayViewController.background = (uint64_t)result;
  return result;
}

uint64_t *Colors.ParticipantViews.background.unsafeMutableAddressor()
{
  if (one-time initialization token for background != -1)
    swift_once();
  return &static Colors.ParticipantViews.background;
}

id static Colors.ParticipantViews.background.getter()
{
  return static Colors.ShareView.separator.getter();
}

id one-time initialization function for titleLabel()
{
  id result;

  result = OUTLINED_FUNCTION_16_13(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_);
  static Colors.ParticipantViews.titleLabel = (uint64_t)result;
  return result;
}

uint64_t *Colors.ParticipantViews.titleLabel.unsafeMutableAddressor()
{
  if (one-time initialization token for titleLabel != -1)
    swift_once();
  return &static Colors.ParticipantViews.titleLabel;
}

id static Colors.ParticipantViews.titleLabel.getter()
{
  return static Colors.ShareView.separator.getter();
}

id one-time initialization function for subtitleLabel()
{
  id result;

  result = OUTLINED_FUNCTION_25_18(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.698039216);
  static Colors.ParticipantViews.subtitleLabel = (uint64_t)result;
  return result;
}

uint64_t *Colors.ParticipantViews.subtitleLabel.unsafeMutableAddressor()
{
  if (one-time initialization token for subtitleLabel != -1)
    swift_once();
  return &static Colors.ParticipantViews.subtitleLabel;
}

id static Colors.ParticipantViews.subtitleLabel.getter()
{
  return static Colors.ShareView.separator.getter();
}

id one-time initialization function for alertText()
{
  id result;

  result = OUTLINED_FUNCTION_5_24(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_);
  static Colors.ParticipantViews.alertText = (uint64_t)result;
  return result;
}

uint64_t *Colors.ParticipantViews.alertText.unsafeMutableAddressor()
{
  if (one-time initialization token for alertText != -1)
    swift_once();
  return &static Colors.ParticipantViews.alertText;
}

id static Colors.ParticipantViews.alertText.getter()
{
  return static Colors.ShareView.separator.getter();
}

id one-time initialization function for bottomBarText()
{
  id result;

  result = OUTLINED_FUNCTION_16_13(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_);
  static Colors.ParticipantViews.bottomBarText = (uint64_t)result;
  return result;
}

uint64_t *Colors.ParticipantViews.bottomBarText.unsafeMutableAddressor()
{
  if (one-time initialization token for bottomBarText != -1)
    swift_once();
  return &static Colors.ParticipantViews.bottomBarText;
}

id static Colors.ParticipantViews.bottomBarText.getter()
{
  return static Colors.ShareView.separator.getter();
}

id one-time initialization function for overlaySpinner()
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 1.0, 1.0, 1.0, 1.0);
  static Colors.ParticipantViews.overlaySpinner = (uint64_t)result;
  return result;
}

uint64_t *Colors.ParticipantViews.overlaySpinner.unsafeMutableAddressor()
{
  if (one-time initialization token for overlaySpinner != -1)
    swift_once();
  return &static Colors.ParticipantViews.overlaySpinner;
}

id static Colors.ParticipantViews.overlaySpinner.getter()
{
  return static Colors.ShareView.separator.getter();
}

id one-time initialization function for overlayIcon()
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 1.0, 1.0, 1.0, 0.5);
  static Colors.ParticipantViews.overlayIcon = (uint64_t)result;
  return result;
}

uint64_t *Colors.ParticipantViews.overlayIcon.unsafeMutableAddressor()
{
  if (one-time initialization token for overlayIcon != -1)
    swift_once();
  return &static Colors.ParticipantViews.overlayIcon;
}

id static Colors.ParticipantViews.overlayIcon.getter()
{
  return static Colors.ShareView.separator.getter();
}

id one-time initialization function for buttonIcon()
{
  id result;

  result = OUTLINED_FUNCTION_5_24(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_);
  static Colors.ParticipantViews.buttonIcon = (uint64_t)result;
  return result;
}

uint64_t *Colors.ParticipantViews.buttonIcon.unsafeMutableAddressor()
{
  if (one-time initialization token for buttonIcon != -1)
    swift_once();
  return &static Colors.ParticipantViews.buttonIcon;
}

id static Colors.ParticipantViews.buttonIcon.getter()
{
  return static Colors.ShareView.separator.getter();
}

id one-time initialization function for border()
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.0, 0.0, 0.0, 1.0);
  static Colors.ParticipantViews.border = (uint64_t)result;
  return result;
}

uint64_t *Colors.ParticipantViews.border.unsafeMutableAddressor()
{
  if (one-time initialization token for border != -1)
    swift_once();
  return &static Colors.ParticipantViews.border;
}

id static Colors.ParticipantViews.border.getter()
{
  return static Colors.ShareView.separator.getter();
}

uint64_t one-time initialization function for bottomGradient()
{
  uint64_t v0;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1BD6441C0;
  *(_QWORD *)(v0 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithWhite_alpha_, 0.0, 0.0);
  *(_QWORD *)(v0 + 40) = OUTLINED_FUNCTION_46_4(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithWhite_alpha_, 0.0);
  result = specialized Array._endMutation()();
  static Colors.ParticipantViews.bottomGradient = v0;
  return result;
}

uint64_t *Colors.ParticipantViews.bottomGradient.unsafeMutableAddressor()
{
  if (one-time initialization token for bottomGradient != -1)
    swift_once();
  return &static Colors.ParticipantViews.bottomGradient;
}

uint64_t static Colors.ParticipantViews.bottomGradient.getter()
{
  return static Colors.ParticipantViews.bottomGradient.getter();
}

{
  char v0;

  OUTLINED_FUNCTION_28_15();
  if (!v0)
    OUTLINED_FUNCTION_36_8();
  return swift_bridgeObjectRetain();
}

id one-time initialization function for bottomShadow()
{
  id result;

  result = OUTLINED_FUNCTION_46_4(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithWhite_alpha_, 0.0);
  static Colors.ParticipantViews.bottomShadow = (uint64_t)result;
  return result;
}

uint64_t *Colors.ParticipantViews.bottomShadow.unsafeMutableAddressor()
{
  if (one-time initialization token for bottomShadow != -1)
    swift_once();
  return &static Colors.ParticipantViews.bottomShadow;
}

id static Colors.ParticipantViews.bottomShadow.getter()
{
  return static Colors.ShareView.separator.getter();
}

void *Colors.ParticipantViews.bottomShadowOpacity.unsafeMutableAddressor()
{
  return &static Colors.ParticipantViews.bottomShadowOpacity;
}

float static Colors.ParticipantViews.bottomShadowOpacity.getter()
{
  return 0.5;
}

id one-time initialization function for shutterButtonEnabled()
{
  id result;

  result = OUTLINED_FUNCTION_16_13(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_);
  static Colors.ParticipantViews.shutterButtonEnabled = (uint64_t)result;
  return result;
}

uint64_t *Colors.ParticipantViews.shutterButtonEnabled.unsafeMutableAddressor()
{
  if (one-time initialization token for shutterButtonEnabled != -1)
    swift_once();
  return &static Colors.ParticipantViews.shutterButtonEnabled;
}

id static Colors.ParticipantViews.shutterButtonEnabled.getter()
{
  return static Colors.ShareView.separator.getter();
}

id one-time initialization function for shutterButtonDisabled()
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 1.0, 1.0, 1.0, 0.5);
  static Colors.ParticipantViews.shutterButtonDisabled = (uint64_t)result;
  return result;
}

uint64_t *Colors.ParticipantViews.shutterButtonDisabled.unsafeMutableAddressor()
{
  if (one-time initialization token for shutterButtonDisabled != -1)
    swift_once();
  return &static Colors.ParticipantViews.shutterButtonDisabled;
}

id static Colors.ParticipantViews.shutterButtonDisabled.getter()
{
  return static Colors.ShareView.separator.getter();
}

id one-time initialization function for ringButtonColor()
{
  id result;

  result = OUTLINED_FUNCTION_25_18(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.274509804);
  static Colors.ParticipantViews.ringButtonColor = (uint64_t)result;
  return result;
}

uint64_t *Colors.ParticipantViews.ringButtonColor.unsafeMutableAddressor()
{
  if (one-time initialization token for ringButtonColor != -1)
    swift_once();
  return &static Colors.ParticipantViews.ringButtonColor;
}

id static Colors.ParticipantViews.ringButtonColor.getter()
{
  return static Colors.ShareView.separator.getter();
}

id one-time initialization function for shadow()
{
  id result;

  result = OUTLINED_FUNCTION_5_24(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_);
  static Colors.ParticipantViews.shadow = (uint64_t)result;
  return result;
}

{
  id result;

  result = OUTLINED_FUNCTION_5_24(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_);
  static Colors.LocalParticipantView.shadow = (uint64_t)result;
  return result;
}

uint64_t *Colors.ParticipantViews.shadow.unsafeMutableAddressor()
{
  if (one-time initialization token for shadow != -1)
    swift_once();
  return &static Colors.ParticipantViews.shadow;
}

id static Colors.ParticipantViews.shadow.getter()
{
  return static Colors.ShareView.separator.getter();
}

void one-time initialization function for screenShareNameLabel(uint64_t a1)
{
  one-time initialization function for screenShareNameLabel(a1, (SEL *)&selRef_labelColor, &static Colors.ParticipantViews.screenShareNameLabel);
}

_QWORD *Colors.ParticipantViews.screenShareNameLabel.unsafeMutableAddressor()
{
  if (one-time initialization token for screenShareNameLabel != -1)
    swift_once();
  return &static Colors.ParticipantViews.screenShareNameLabel;
}

id static Colors.ParticipantViews.screenShareNameLabel.getter()
{
  return static Colors.ShareView.separator.getter();
}

void one-time initialization function for screenShareInfoViewButton(uint64_t a1)
{
  one-time initialization function for screenShareNameLabel(a1, (SEL *)&selRef_labelColor, &static Colors.ParticipantViews.screenShareInfoViewButton);
}

_QWORD *Colors.ParticipantViews.screenShareInfoViewButton.unsafeMutableAddressor()
{
  if (one-time initialization token for screenShareInfoViewButton != -1)
    swift_once();
  return &static Colors.ParticipantViews.screenShareInfoViewButton;
}

id static Colors.ParticipantViews.screenShareInfoViewButton.getter()
{
  return static Colors.ShareView.separator.getter();
}

void *Colors.ParticipantViews.shadowOpacity.unsafeMutableAddressor()
{
  return &static Colors.ParticipantViews.shadowOpacity;
}

float static Colors.ParticipantViews.shadowOpacity.getter()
{
  return 0.83;
}

id one-time initialization function for contactMonogram()
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.0, 0.0, 0.0, 0.9);
  static Colors.ParticipantViews.contactMonogram = (uint64_t)result;
  return result;
}

uint64_t *Colors.ParticipantViews.contactMonogram.unsafeMutableAddressor()
{
  if (one-time initialization token for contactMonogram != -1)
    swift_once();
  return &static Colors.ParticipantViews.contactMonogram;
}

id static Colors.ParticipantViews.contactMonogram.getter()
{
  return static Colors.ShareView.separator.getter();
}

id one-time initialization function for contactMonogramIcon()
{
  id result;

  result = OUTLINED_FUNCTION_32_12(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_);
  static Colors.ParticipantViews.contactMonogramIcon = (uint64_t)result;
  return result;
}

uint64_t *Colors.ParticipantViews.contactMonogramIcon.unsafeMutableAddressor()
{
  if (one-time initialization token for contactMonogramIcon != -1)
    swift_once();
  return &static Colors.ParticipantViews.contactMonogramIcon;
}

id static Colors.ParticipantViews.contactMonogramIcon.getter()
{
  return static Colors.ShareView.separator.getter();
}

id one-time initialization function for overlayContent()
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithWhite_alpha_, 1.0, 0.75);
  static Colors.ParticipantViews.overlayContent = (uint64_t)result;
  return result;
}

uint64_t *Colors.ParticipantViews.overlayContent.unsafeMutableAddressor()
{
  if (one-time initialization token for overlayContent != -1)
    swift_once();
  return &static Colors.ParticipantViews.overlayContent;
}

id static Colors.ParticipantViews.overlayContent.getter()
{
  return static Colors.ShareView.separator.getter();
}

uint64_t one-time initialization function for expandButton()
{
  __n128 *inited;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(UIControlState, ParticipantViewButton.ElementColors)>);
  inited = (__n128 *)swift_initStackObject();
  OUTLINED_FUNCTION_19_24(inited, (__n128)xmmword_1BD645390);
  v1 = OUTLINED_FUNCTION_6_28();
  v2 = OUTLINED_FUNCTION_11_26(v1);
  v3 = OUTLINED_FUNCTION_6_28();
  v4 = OUTLINED_FUNCTION_12_22(v3);
  inited[2].n128_u64[1] = (unint64_t)v2;
  inited[3].n128_u64[0] = 0x3FECCCCCCCCCCCCDLL;
  inited[3].n128_u64[1] = (unint64_t)v4;
  inited[4].n128_u64[0] = 0x3FED70A3D70A3D71;
  inited[4].n128_u64[1] = 1;
  v5 = OUTLINED_FUNCTION_6_28();
  v6 = OUTLINED_FUNCTION_11_26(v5);
  v7 = OUTLINED_FUNCTION_6_28();
  v8 = OUTLINED_FUNCTION_12_22(v7);
  inited[5].n128_u64[0] = (unint64_t)v6;
  inited[5].n128_u64[1] = 0x3FECCCCCCCCCCCCDLL;
  inited[6].n128_u64[0] = (unint64_t)v8;
  inited[6].n128_u64[1] = 0x3FED70A3D70A3D71;
  inited[7].n128_u64[0] = 4;
  v9 = OUTLINED_FUNCTION_6_28();
  v10 = OUTLINED_FUNCTION_11_26(v9);
  v11 = OUTLINED_FUNCTION_6_28();
  v12 = OUTLINED_FUNCTION_12_22(v11);
  inited[7].n128_u64[1] = (unint64_t)v10;
  inited[8].n128_u64[0] = 0x3FECCCCCCCCCCCCDLL;
  inited[8].n128_u64[1] = (unint64_t)v12;
  inited[9].n128_u64[0] = 0x3FED70A3D70A3D71;
  inited[9].n128_u64[1] = 2;
  v13 = OUTLINED_FUNCTION_6_28();
  v14 = OUTLINED_FUNCTION_11_26(v13);
  v15 = OUTLINED_FUNCTION_6_28();
  v16 = OUTLINED_FUNCTION_12_22(v15);
  inited[10].n128_u64[0] = (unint64_t)v14;
  inited[10].n128_u64[1] = 0x3FECCCCCCCCCCCCDLL;
  inited[11].n128_u64[0] = (unint64_t)v16;
  inited[11].n128_u64[1] = 0x3FED70A3D70A3D71;
  OUTLINED_FUNCTION_17_17();
  OUTLINED_FUNCTION_27_9();
  result = OUTLINED_FUNCTION_10_36();
  static Colors.ParticipantViews.expandButton = result;
  return result;
}

uint64_t *Colors.ParticipantViews.expandButton.unsafeMutableAddressor()
{
  if (one-time initialization token for expandButton != -1)
    swift_once();
  return &static Colors.ParticipantViews.expandButton;
}

uint64_t static Colors.ParticipantViews.expandButton.getter()
{
  return static Colors.ParticipantViews.bottomGradient.getter();
}

void one-time initialization function for background(uint64_t a1)
{
  one-time initialization function for screenShareNameLabel(a1, (SEL *)&selRef_clearColor, &static Colors.MostActiveParticipantView.background);
}

uint64_t *Colors.MostActiveParticipantView.background.unsafeMutableAddressor()
{
  if (one-time initialization token for background != -1)
    swift_once();
  return &static Colors.MostActiveParticipantView.background;
}

id static Colors.MostActiveParticipantView.background.getter()
{
  return static Colors.ShareView.separator.getter();
}

id one-time initialization function for unfocusedOverlay()
{
  id result;

  result = OUTLINED_FUNCTION_32_12(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_);
  static Colors.ParticipantGridView.unfocusedOverlay = (uint64_t)result;
  return result;
}

uint64_t *Colors.ParticipantGridView.unfocusedOverlay.unsafeMutableAddressor()
{
  if (one-time initialization token for unfocusedOverlay != -1)
    swift_once();
  return &static Colors.ParticipantGridView.unfocusedOverlay;
}

id static Colors.ParticipantGridView.unfocusedOverlay.getter()
{
  return static Colors.ShareView.separator.getter();
}

uint64_t *Colors.LocalParticipantView.shadow.unsafeMutableAddressor()
{
  if (one-time initialization token for shadow != -1)
    swift_once();
  return &static Colors.LocalParticipantView.shadow;
}

id static Colors.LocalParticipantView.shadow.getter()
{
  return static Colors.ShareView.separator.getter();
}

void *Colors.LocalParticipantView.shadowOpacity.unsafeMutableAddressor()
{
  return &static Colors.LocalParticipantView.shadowOpacity;
}

float static Colors.LocalParticipantView.shadowOpacity.getter()
{
  return 0.83;
}

uint64_t *Colors.InCallControls.background.unsafeMutableAddressor()
{
  if (one-time initialization token for background != -1)
    swift_once();
  return &static Colors.InCallControls.background;
}

id static Colors.InCallControls.background.getter()
{
  return static Colors.ShareView.separator.getter();
}

id one-time initialization function for flatHotdog()
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 1.0, 1.0, 1.0, 0.2);
  static Colors.InCallControls.flatHotdog = (uint64_t)result;
  return result;
}

uint64_t *Colors.InCallControls.flatHotdog.unsafeMutableAddressor()
{
  if (one-time initialization token for flatHotdog != -1)
    swift_once();
  return &static Colors.InCallControls.flatHotdog;
}

id static Colors.InCallControls.flatHotdog.getter()
{
  return static Colors.ShareView.separator.getter();
}

void one-time initialization function for tableViewBackground(uint64_t a1)
{
  one-time initialization function for screenShareNameLabel(a1, (SEL *)&selRef_clearColor, &static Colors.InCallControls.tableViewBackground);
}

uint64_t *Colors.InCallControls.tableViewBackground.unsafeMutableAddressor()
{
  if (one-time initialization token for tableViewBackground != -1)
    swift_once();
  return &static Colors.InCallControls.tableViewBackground;
}

id static Colors.InCallControls.tableViewBackground.getter()
{
  return static Colors.ShareView.separator.getter();
}

id one-time initialization function for actionButton()
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 1.0, 1.0, 1.0, 1.0);
  static Colors.InCallControls.actionButton = (uint64_t)result;
  return result;
}

uint64_t *Colors.InCallControls.actionButton.unsafeMutableAddressor()
{
  if (one-time initialization token for actionButton != -1)
    swift_once();
  return &static Colors.InCallControls.actionButton;
}

id static Colors.InCallControls.actionButton.getter()
{
  return static Colors.ShareView.separator.getter();
}

id one-time initialization function for actionButtonDisabled()
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.698039216, 0.698039216, 0.698039216, 1.0);
  static Colors.InCallControls.actionButtonDisabled = (uint64_t)result;
  return result;
}

uint64_t *Colors.InCallControls.actionButtonDisabled.unsafeMutableAddressor()
{
  if (one-time initialization token for actionButtonDisabled != -1)
    swift_once();
  return &static Colors.InCallControls.actionButtonDisabled;
}

id static Colors.InCallControls.actionButtonDisabled.getter()
{
  return static Colors.ShareView.separator.getter();
}

void *Colors.InCallControls.actionButtonDisabledAlpha.unsafeMutableAddressor()
{
  return &static Colors.InCallControls.actionButtonDisabledAlpha;
}

double static Colors.InCallControls.actionButtonDisabledAlpha.getter()
{
  return 0.75;
}

id one-time initialization function for backgroundBlurEffect()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(), sel_effectWithStyle_, 1200);
  static Colors.InCallControls.backgroundBlurEffect = (uint64_t)result;
  return result;
}

uint64_t *Colors.InCallControls.backgroundBlurEffect.unsafeMutableAddressor()
{
  if (one-time initialization token for backgroundBlurEffect != -1)
    swift_once();
  return &static Colors.InCallControls.backgroundBlurEffect;
}

id static Colors.InCallControls.backgroundBlurEffect.getter()
{
  return static Colors.ShareView.separator.getter();
}

id one-time initialization function for localCameraControlsBlurEffect()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(), sel_effectWithStyle_, 14);
  static Colors.InCallControls.localCameraControlsBlurEffect = (uint64_t)result;
  return result;
}

uint64_t *Colors.InCallControls.localCameraControlsBlurEffect.unsafeMutableAddressor()
{
  if (one-time initialization token for localCameraControlsBlurEffect != -1)
    swift_once();
  return &static Colors.InCallControls.localCameraControlsBlurEffect;
}

id static Colors.InCallControls.localCameraControlsBlurEffect.getter()
{
  return static Colors.ShareView.separator.getter();
}

void one-time initialization function for button()
{
  void *v0;
  uint64_t v1;
  __n128 *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  id v37;
  id v38;
  id v39;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(UIControlState, InCallControlButtonConfiguration)>);
  v2 = (__n128 *)OUTLINED_FUNCTION_31_20();
  OUTLINED_FUNCTION_19_24(v2, (__n128)xmmword_1BD645390);
  v3 = (void *)objc_opt_self();
  v4 = OUTLINED_FUNCTION_21_18(v3);
  v5 = OUTLINED_FUNCTION_25_1((uint64_t)v4, *(const char **)(v1 + 3448));
  if (one-time initialization token for backgroundBlurEffect != -1)
    swift_once();
  objc_opt_self();
  v6 = OUTLINED_FUNCTION_44_5();
  v7 = OUTLINED_FUNCTION_7_41(v0, sel__effectForBlurEffect_vibrancyStyle_);
  v8 = OUTLINED_FUNCTION_25_1((uint64_t)v7, *(const char **)(v1 + 3448));
  v9 = OUTLINED_FUNCTION_25_1((uint64_t)v8, *(const char **)(v1 + 3448));
  v10 = OUTLINED_FUNCTION_24_14(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithWhite_alpha_);
  v2[2].n128_u64[1] = (unint64_t)v4;
  v2[3].n128_u64[0] = (unint64_t)v5;
  v2[3].n128_u64[1] = (unint64_t)v6;
  v2[4].n128_u64[0] = (unint64_t)v7;
  v2[4].n128_u8[8] = 1;
  v2[5].n128_u64[0] = (unint64_t)v8;
  v2[5].n128_u64[1] = (unint64_t)v9;
  v2[6].n128_u64[0] = (unint64_t)v10;
  v2[6].n128_u64[1] = 1;
  v11 = OUTLINED_FUNCTION_25_1((uint64_t)v10, *(const char **)(v1 + 3448));
  v12 = OUTLINED_FUNCTION_13_25(v11, sel_colorWithAlphaComponent_);
  OUTLINED_FUNCTION_18_17();
  v14 = OUTLINED_FUNCTION_25_1(v13, *(const char **)(v1 + 3448));
  v15 = OUTLINED_FUNCTION_13_25(v14, (SEL)&selRef_configureForTripleDeviceWithZoomFactor_minimumZoomFactor_displayMinimumZoomFactor_maximumZoomFactor_displayMaximumZoomFactor_switchOverZoomFactor1_displaySwitchOverZoomFactor1_switchOverZoomFactor2_displaySwitchOverZoomFactor2_);
  OUTLINED_FUNCTION_14_10();
  v16 = (id)static Colors.InCallControls.backgroundBlurEffect;
  v17 = OUTLINED_FUNCTION_29_13(v0, sel__effectForBlurEffect_vibrancyStyle_);
  v18 = OUTLINED_FUNCTION_25_1((uint64_t)v17, *(const char **)(v1 + 3448));
  v19 = OUTLINED_FUNCTION_25_1((uint64_t)v18, *(const char **)(v1 + 3448));
  objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithWhite_alpha_, 1.0, 0.3);
  OUTLINED_FUNCTION_39_13();
  v2[9].n128_u64[1] = (unint64_t)v18;
  v2[10].n128_u64[0] = (unint64_t)v19;
  v2[10].n128_u64[1] = v20;
  v2[11].n128_u64[0] = 4;
  v21 = OUTLINED_FUNCTION_25_1(v20, *(const char **)(v1 + 3448));
  v22 = OUTLINED_FUNCTION_25_1((uint64_t)v21, sel_blackColor);
  v23 = OUTLINED_FUNCTION_25_1((uint64_t)v22, *(const char **)(v1 + 3448));
  v24 = OUTLINED_FUNCTION_25_1((uint64_t)v23, sel_blackColor);
  v25 = OUTLINED_FUNCTION_25_1((uint64_t)v24, sel_blackColor);
  v26 = OUTLINED_FUNCTION_25_1((uint64_t)v25, *(const char **)(v1 + 3448));
  v2[11].n128_u64[1] = (unint64_t)v21;
  v2[12].n128_u64[0] = (unint64_t)v22;
  v2[12].n128_u64[1] = (unint64_t)v23;
  v2[13].n128_u64[0] = 0;
  v2[13].n128_u8[8] = 0;
  v2[14].n128_u64[0] = (unint64_t)v24;
  v2[14].n128_u64[1] = (unint64_t)v25;
  v2[15].n128_u64[0] = (unint64_t)v26;
  v2[15].n128_u64[1] = 2;
  v27 = OUTLINED_FUNCTION_25_1((uint64_t)v26, *(const char **)(v1 + 3448));
  v28 = OUTLINED_FUNCTION_8_33(v27);
  OUTLINED_FUNCTION_18_17();
  v30 = OUTLINED_FUNCTION_25_1(v29, *(const char **)(v1 + 3448));
  v31 = OUTLINED_FUNCTION_8_33(v30);
  OUTLINED_FUNCTION_14_10();
  v32 = (id)static Colors.InCallControls.backgroundBlurEffect;
  v33 = OUTLINED_FUNCTION_7_41(v0, sel__effectForBlurEffect_vibrancyStyle_);
  v34 = OUTLINED_FUNCTION_25_1((uint64_t)v33, *(const char **)(v1 + 3448));
  v35 = OUTLINED_FUNCTION_8_33(v34);
  OUTLINED_FUNCTION_40_1();
  v37 = OUTLINED_FUNCTION_25_1(v36, *(const char **)(v1 + 3448));
  v38 = OUTLINED_FUNCTION_8_33(v37);

  v39 = OUTLINED_FUNCTION_24_14(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithWhite_alpha_);
  v2[16].n128_u64[0] = (unint64_t)v21;
  v2[16].n128_u64[1] = (unint64_t)v27;
  v2[17].n128_u64[0] = (unint64_t)v32;
  v2[17].n128_u64[1] = (unint64_t)v33;
  v2[18].n128_u8[0] = 1;
  v2[18].n128_u64[1] = (unint64_t)v25;
  v2[19].n128_u64[0] = (unint64_t)v38;
  v2[19].n128_u64[1] = (unint64_t)v39;
  OUTLINED_FUNCTION_17_17();
  OUTLINED_FUNCTION_27_9();
  static Colors.InCallControls.button = OUTLINED_FUNCTION_10_36();
  OUTLINED_FUNCTION_20_24();
}

uint64_t *Colors.InCallControls.button.unsafeMutableAddressor()
{
  if (one-time initialization token for button != -1)
    swift_once();
  return &static Colors.InCallControls.button;
}

uint64_t static Colors.InCallControls.button.getter()
{
  return static Colors.ParticipantViews.bottomGradient.getter();
}

void one-time initialization function for brickButton()
{
  uint64_t v0;
  __n128 *v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  id v39;
  id v40;
  id v41;
  void *v42;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(UIControlState, InCallControlButtonConfiguration)>);
  v1 = (__n128 *)OUTLINED_FUNCTION_31_20();
  OUTLINED_FUNCTION_19_24(v1, (__n128)xmmword_1BD645390);
  v2 = (void *)objc_opt_self();
  v3 = OUTLINED_FUNCTION_21_18(v2);
  v4 = OUTLINED_FUNCTION_25_1((uint64_t)v3, *(const char **)(v0 + 3448));
  if (one-time initialization token for backgroundBlurEffect != -1)
    swift_once();
  v5 = (void *)static Colors.InCallControls.backgroundBlurEffect;
  v42 = (void *)objc_opt_self();
  v6 = v5;
  v7 = OUTLINED_FUNCTION_7_41(v42, sel__effectForBlurEffect_vibrancyStyle_);
  v8 = OUTLINED_FUNCTION_25_1((uint64_t)v7, *(const char **)(v0 + 3448));
  v9 = OUTLINED_FUNCTION_25_1((uint64_t)v8, *(const char **)(v0 + 3448));
  v10 = OUTLINED_FUNCTION_6_28();
  v11 = OUTLINED_FUNCTION_24_14(v10, sel_initWithWhite_alpha_);
  v1[2].n128_u64[1] = (unint64_t)v3;
  v1[3].n128_u64[0] = (unint64_t)v4;
  v1[3].n128_u64[1] = (unint64_t)v6;
  v1[4].n128_u64[0] = (unint64_t)v7;
  v1[4].n128_u8[8] = 1;
  v1[5].n128_u64[0] = (unint64_t)v8;
  v1[5].n128_u64[1] = (unint64_t)v9;
  v1[6].n128_u64[0] = (unint64_t)v11;
  v1[6].n128_u64[1] = 1;
  v12 = OUTLINED_FUNCTION_25_1((uint64_t)v11, *(const char **)(v0 + 3448));
  v13 = OUTLINED_FUNCTION_6_28();
  v14 = OUTLINED_FUNCTION_15_24(v13, sel_initWithWhite_alpha_);
  v15 = OUTLINED_FUNCTION_25_1((uint64_t)v14, *(const char **)(v0 + 3448));
  v16 = OUTLINED_FUNCTION_25_1((uint64_t)v15, *(const char **)(v0 + 3448));
  v17 = OUTLINED_FUNCTION_6_28();
  v18 = OUTLINED_FUNCTION_15_24(v17, sel_initWithWhite_alpha_);
  v19 = OUTLINED_FUNCTION_25_1((uint64_t)v18, *(const char **)(v0 + 3448));
  v1[7].n128_u64[0] = (unint64_t)v12;
  v1[7].n128_u64[1] = (unint64_t)v14;
  v1[8].n128_u64[0] = (unint64_t)v15;
  v1[8].n128_u64[1] = 0;
  v1[9].n128_u8[0] = 0;
  v1[9].n128_u64[1] = (unint64_t)v16;
  v1[10].n128_u64[0] = (unint64_t)v18;
  v1[10].n128_u64[1] = (unint64_t)v19;
  v1[11].n128_u64[0] = 4;
  v20 = OUTLINED_FUNCTION_25_1((uint64_t)v19, *(const char **)(v0 + 3448));
  v21 = OUTLINED_FUNCTION_6_28();
  v22 = OUTLINED_FUNCTION_15_24(v21, (SEL)&selRef_isReceiver);
  v23 = OUTLINED_FUNCTION_25_1((uint64_t)v22, *(const char **)(v0 + 3448));
  v24 = OUTLINED_FUNCTION_6_28();
  v25 = OUTLINED_FUNCTION_15_24(v24, (SEL)&selRef_isReceiver);
  v26 = OUTLINED_FUNCTION_6_28();
  v27 = OUTLINED_FUNCTION_15_24(v26, (SEL)&selRef_isReceiver);
  v28 = OUTLINED_FUNCTION_25_1((uint64_t)v27, *(const char **)(v0 + 3448));
  v1[11].n128_u64[1] = (unint64_t)v20;
  v1[12].n128_u64[0] = (unint64_t)v22;
  v1[12].n128_u64[1] = (unint64_t)v23;
  v1[13].n128_u64[0] = 0;
  v1[13].n128_u8[8] = 0;
  v1[14].n128_u64[0] = (unint64_t)v25;
  v1[14].n128_u64[1] = (unint64_t)v27;
  v1[15].n128_u64[0] = (unint64_t)v28;
  v1[15].n128_u64[1] = 2;
  v29 = OUTLINED_FUNCTION_25_1((uint64_t)v28, *(const char **)(v0 + 3448));
  v30 = OUTLINED_FUNCTION_13_25(v29, sel_colorWithAlphaComponent_);
  OUTLINED_FUNCTION_18_17();
  v32 = OUTLINED_FUNCTION_25_1(v31, *(const char **)(v0 + 3448));
  v33 = OUTLINED_FUNCTION_8_33(v32);
  OUTLINED_FUNCTION_14_10();
  v34 = (id)static Colors.InCallControls.backgroundBlurEffect;
  v35 = OUTLINED_FUNCTION_7_41(v42, sel__effectForBlurEffect_vibrancyStyle_);
  v36 = OUTLINED_FUNCTION_25_1((uint64_t)v35, *(const char **)(v0 + 3448));
  v37 = OUTLINED_FUNCTION_8_33(v36);
  OUTLINED_FUNCTION_40_1();
  v39 = OUTLINED_FUNCTION_25_1(v38, *(const char **)(v0 + 3448));
  v40 = OUTLINED_FUNCTION_8_33(v39);

  v41 = OUTLINED_FUNCTION_24_14(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithWhite_alpha_);
  v1[16].n128_u64[0] = (unint64_t)v20;
  v1[16].n128_u64[1] = (unint64_t)v29;
  v1[17].n128_u64[0] = (unint64_t)v34;
  v1[17].n128_u64[1] = (unint64_t)v35;
  v1[18].n128_u8[0] = 1;
  v1[18].n128_u64[1] = (unint64_t)v27;
  v1[19].n128_u64[0] = (unint64_t)v40;
  v1[19].n128_u64[1] = (unint64_t)v41;
  OUTLINED_FUNCTION_17_17();
  OUTLINED_FUNCTION_27_9();
  static Colors.InCallControls.brickButton = OUTLINED_FUNCTION_10_36();
  OUTLINED_FUNCTION_20_24();
}

uint64_t *Colors.InCallControls.brickButton.unsafeMutableAddressor()
{
  if (one-time initialization token for brickButton != -1)
    swift_once();
  return &static Colors.InCallControls.brickButton;
}

uint64_t static Colors.InCallControls.brickButton.getter()
{
  return static Colors.ParticipantViews.bottomGradient.getter();
}

uint64_t one-time initialization function for conversationControls()
{
  uint64_t v0;
  __n128 *v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  id v26;
  id v27;
  uint64_t v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  id v38;
  id v39;
  uint64_t v40;
  id v41;
  id v42;
  uint64_t v43;
  id v44;
  id v45;
  uint64_t v46;
  id v47;
  id v48;
  uint64_t v49;
  id v50;
  id v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  uint64_t v61;
  id v62;
  id v63;
  uint64_t v64;
  id v65;
  id v66;
  uint64_t result;
  id v68;
  void *v69;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(UIControlState, InCallControlButtonConfiguration)>);
  v1 = (__n128 *)OUTLINED_FUNCTION_48_9();
  OUTLINED_FUNCTION_19_24(v1, (__n128)xmmword_1BD646730);
  v2 = (void *)objc_opt_self();
  v3 = OUTLINED_FUNCTION_34_11(v2);
  v4 = OUTLINED_FUNCTION_25_1((uint64_t)v3, *(const char **)(v0 + 3448));
  if (one-time initialization token for backgroundBlurEffect != -1)
    swift_once();
  v5 = (void *)static Colors.InCallControls.backgroundBlurEffect;
  v6 = (void *)objc_opt_self();
  v7 = v5;
  v69 = v6;
  v8 = OUTLINED_FUNCTION_7_41(v6, sel__effectForBlurEffect_vibrancyStyle_);
  v9 = v0;
  v10 = OUTLINED_FUNCTION_25_1((uint64_t)v8, *(const char **)(v0 + 3448));
  v11 = OUTLINED_FUNCTION_25_1((uint64_t)v10, *(const char **)(v9 + 3448));
  v12 = OUTLINED_FUNCTION_25_1((uint64_t)v11, sel_secondarySystemFillColor);
  v1[2].n128_u64[1] = (unint64_t)v3;
  v1[3].n128_u64[0] = (unint64_t)v4;
  v1[3].n128_u64[1] = (unint64_t)v7;
  v1[4].n128_u64[0] = (unint64_t)v8;
  v1[4].n128_u8[8] = 1;
  v1[5].n128_u64[0] = (unint64_t)v10;
  v1[5].n128_u64[1] = (unint64_t)v11;
  v1[6].n128_u64[0] = (unint64_t)v12;
  v1[6].n128_u64[1] = 1;
  v13 = OUTLINED_FUNCTION_25_1((uint64_t)v12, *(const char **)(v9 + 3448));
  v14 = OUTLINED_FUNCTION_1_31(v13, sel_colorWithAlphaComponent_);
  OUTLINED_FUNCTION_18_17();
  v16 = OUTLINED_FUNCTION_25_1(v15, *(const char **)(v9 + 3448));
  v17 = OUTLINED_FUNCTION_1_31(v16, (SEL)&selRef_configureForTripleDeviceWithZoomFactor_minimumZoomFactor_displayMinimumZoomFactor_maximumZoomFactor_displayMaximumZoomFactor_switchOverZoomFactor1_displaySwitchOverZoomFactor1_switchOverZoomFactor2_displaySwitchOverZoomFactor2_);
  OUTLINED_FUNCTION_14_10();
  v18 = (id)static Colors.InCallControls.backgroundBlurEffect;
  v19 = OUTLINED_FUNCTION_29_13(v6, sel__effectForBlurEffect_vibrancyStyle_);
  v20 = OUTLINED_FUNCTION_25_1((uint64_t)v19, *(const char **)(v9 + 3448));
  v21 = OUTLINED_FUNCTION_1_31(v20, (SEL)&selRef_configureForTripleDeviceWithZoomFactor_minimumZoomFactor_displayMinimumZoomFactor_maximumZoomFactor_displayMaximumZoomFactor_switchOverZoomFactor1_displaySwitchOverZoomFactor1_switchOverZoomFactor2_displaySwitchOverZoomFactor2_);

  v23 = OUTLINED_FUNCTION_25_1(v22, *(const char **)(v9 + 3448));
  v24 = OUTLINED_FUNCTION_1_31(v23, (SEL)&selRef_configureForTripleDeviceWithZoomFactor_minimumZoomFactor_displayMinimumZoomFactor_maximumZoomFactor_displayMaximumZoomFactor_switchOverZoomFactor1_displaySwitchOverZoomFactor1_switchOverZoomFactor2_displaySwitchOverZoomFactor2_);

  v26 = OUTLINED_FUNCTION_25_1(v25, sel_secondarySystemFillColor);
  v27 = OUTLINED_FUNCTION_1_31(v26, (SEL)&selRef_configureForTripleDeviceWithZoomFactor_minimumZoomFactor_displayMinimumZoomFactor_maximumZoomFactor_displayMaximumZoomFactor_switchOverZoomFactor1_displaySwitchOverZoomFactor1_switchOverZoomFactor2_displaySwitchOverZoomFactor2_);

  OUTLINED_FUNCTION_39_13();
  v1[9].n128_u64[1] = (unint64_t)v21;
  v1[10].n128_u64[0] = (unint64_t)v24;
  v1[10].n128_u64[1] = (unint64_t)v27;
  v1[11].n128_u64[0] = 4;
  v29 = OUTLINED_FUNCTION_25_1(v28, sel_blackColor);
  v30 = OUTLINED_FUNCTION_25_1((uint64_t)v29, sel_blackColor);
  v31 = OUTLINED_FUNCTION_25_1((uint64_t)v30, sel_whiteColor);
  v32 = OUTLINED_FUNCTION_25_1((uint64_t)v31, sel_blackColor);
  v33 = OUTLINED_FUNCTION_25_1((uint64_t)v32, sel_blackColor);
  v34 = OUTLINED_FUNCTION_25_1((uint64_t)v33, sel_whiteColor);
  v1[11].n128_u64[1] = (unint64_t)v29;
  v1[12].n128_u64[0] = (unint64_t)v30;
  v35 = OUTLINED_FUNCTION_35_7((uint64_t)v34);
  v36 = OUTLINED_FUNCTION_25_1(v35, sel_blackColor);
  v68 = OUTLINED_FUNCTION_1_31(v36, sel_colorWithAlphaComponent_);

  v38 = OUTLINED_FUNCTION_25_1(v37, sel_blackColor);
  v39 = OUTLINED_FUNCTION_1_31(v38, sel_colorWithAlphaComponent_);

  v41 = OUTLINED_FUNCTION_25_1(v40, sel_labelColor);
  v42 = OUTLINED_FUNCTION_1_31(v41, sel_colorWithAlphaComponent_);

  v44 = OUTLINED_FUNCTION_25_1(v43, sel_blackColor);
  v45 = OUTLINED_FUNCTION_1_31(v44, sel_colorWithAlphaComponent_);

  v47 = OUTLINED_FUNCTION_25_1(v46, sel_blackColor);
  v48 = OUTLINED_FUNCTION_1_31(v47, sel_colorWithAlphaComponent_);

  v50 = OUTLINED_FUNCTION_25_1(v49, sel_labelColor);
  v51 = OUTLINED_FUNCTION_1_31(v50, sel_colorWithAlphaComponent_);

  v1[16].n128_u64[0] = (unint64_t)v68;
  v1[16].n128_u64[1] = (unint64_t)v39;
  v1[17].n128_u64[0] = (unint64_t)v42;
  v1[17].n128_u64[1] = 0;
  v1[18].n128_u8[0] = 0;
  v1[18].n128_u64[1] = (unint64_t)v45;
  v1[19].n128_u64[0] = (unint64_t)v48;
  v1[19].n128_u64[1] = (unint64_t)v51;
  v1[20].n128_u64[0] = 2;
  v53 = objc_msgSend(OUTLINED_FUNCTION_25_1(v52, sel_labelColor), sel_colorWithAlphaComponent_, 0.2);
  OUTLINED_FUNCTION_19_5();
  v55 = OUTLINED_FUNCTION_25_1(v54, sel_labelColor);
  v56 = OUTLINED_FUNCTION_23_18(v55);

  v57 = (id)static Colors.InCallControls.backgroundBlurEffect;
  v58 = OUTLINED_FUNCTION_7_41(v69, sel__effectForBlurEffect_vibrancyStyle_);
  v59 = OUTLINED_FUNCTION_25_1((uint64_t)v58, sel_labelColor);
  v60 = OUTLINED_FUNCTION_23_18(v59);

  v62 = OUTLINED_FUNCTION_25_1(v61, sel_labelColor);
  v63 = OUTLINED_FUNCTION_23_18(v62);

  v65 = OUTLINED_FUNCTION_25_1(v64, sel_secondarySystemFillColor);
  v66 = OUTLINED_FUNCTION_23_18(v65);

  v1[20].n128_u64[1] = (unint64_t)&selRef_associatedAppBundleIdentifier;
  v1[21].n128_u64[0] = (unint64_t)v56;
  v1[21].n128_u64[1] = (unint64_t)v57;
  v1[22].n128_u64[0] = (unint64_t)v58;
  v1[22].n128_u8[8] = 1;
  v1[23].n128_u64[0] = (unint64_t)v60;
  v1[23].n128_u64[1] = (unint64_t)v63;
  v1[24].n128_u64[0] = (unint64_t)v66;
  OUTLINED_FUNCTION_17_17();
  OUTLINED_FUNCTION_27_9();
  result = OUTLINED_FUNCTION_10_36();
  static Colors.InCallControls.conversationControls = result;
  return result;
}

uint64_t *Colors.InCallControls.conversationControls.unsafeMutableAddressor()
{
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  return &static Colors.InCallControls.conversationControls;
}

uint64_t static Colors.InCallControls.conversationControls.getter()
{
  return static Colors.ParticipantViews.bottomGradient.getter();
}

void one-time initialization function for joinButton(uint64_t a1)
{
  one-time initialization function for joinButton(a1, (const char **)&selRef_systemGreenColor, &static Colors.InCallControls.joinButton);
}

id static UIColor.joinConversation.getter()
{
  return static UIColor.joinConversation.getter((SEL *)&selRef_systemGreenColor);
}

uint64_t *Colors.InCallControls.joinButton.unsafeMutableAddressor()
{
  if (one-time initialization token for joinButton != -1)
    swift_once();
  return &static Colors.InCallControls.joinButton;
}

uint64_t static Colors.InCallControls.joinButton.getter()
{
  return static Colors.ParticipantViews.bottomGradient.getter();
}

void one-time initialization function for leaveButton(uint64_t a1)
{
  one-time initialization function for joinButton(a1, (const char **)&selRef_systemRedColor, &static Colors.InCallControls.leaveButton);
}

void one-time initialization function for joinButton(uint64_t a1, const char **a2, uint64_t *a3)
{
  __n128 *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  id v27;
  id v28;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(UIControlState, InCallControlButtonConfiguration)>);
  v4 = (__n128 *)OUTLINED_FUNCTION_31_20();
  OUTLINED_FUNCTION_19_24(v4, (__n128)xmmword_1BD645380);
  v5 = (void *)objc_opt_self();
  v6 = objc_msgSend(v5, sel_whiteColor);
  v7 = OUTLINED_FUNCTION_2_2((uint64_t)v6, sel_whiteColor);
  v8 = OUTLINED_FUNCTION_2_2((uint64_t)v7, *a2);
  v9 = OUTLINED_FUNCTION_2_2((uint64_t)v8, sel_whiteColor);
  v10 = OUTLINED_FUNCTION_2_2((uint64_t)v9, sel_whiteColor);
  v11 = OUTLINED_FUNCTION_2_2((uint64_t)v10, *a2);
  v4[2].n128_u64[1] = (unint64_t)v6;
  v4[3].n128_u64[0] = (unint64_t)v7;
  v4[3].n128_u64[1] = (unint64_t)v8;
  v4[4].n128_u64[0] = 0;
  v4[4].n128_u8[8] = 0;
  v4[5].n128_u64[0] = (unint64_t)v9;
  v4[5].n128_u64[1] = (unint64_t)v10;
  v4[6].n128_u64[0] = (unint64_t)v11;
  v4[6].n128_u64[1] = 1;
  v12 = OUTLINED_FUNCTION_2_2((uint64_t)v11, sel_labelColor);
  v13 = OUTLINED_FUNCTION_1_31(v12, sel_colorWithAlphaComponent_);
  OUTLINED_FUNCTION_14_10();
  v15 = OUTLINED_FUNCTION_2_2(v14, sel_labelColor);
  v16 = OUTLINED_FUNCTION_1_31(v15, sel_colorWithAlphaComponent_);
  OUTLINED_FUNCTION_41_2();
  v18 = OUTLINED_FUNCTION_2_2(v17, *a2);
  v19 = OUTLINED_FUNCTION_1_31(v18, sel_colorWithAlphaComponent_);

  v21 = OUTLINED_FUNCTION_2_2(v20, sel_labelColor);
  v22 = OUTLINED_FUNCTION_1_31(v21, sel_colorWithAlphaComponent_);

  v24 = OUTLINED_FUNCTION_2_2(v23, sel_labelColor);
  v25 = OUTLINED_FUNCTION_1_31(v24, sel_colorWithAlphaComponent_);

  v27 = OUTLINED_FUNCTION_2_2(v26, *a2);
  v28 = OUTLINED_FUNCTION_1_31(v27, sel_colorWithAlphaComponent_);
  OUTLINED_FUNCTION_19_5();
  v4[7].n128_u64[0] = (unint64_t)v6;
  v4[7].n128_u64[1] = (unint64_t)v12;
  v4[8].n128_u64[0] = (unint64_t)v19;
  v4[8].n128_u64[1] = 0;
  v4[9].n128_u8[0] = 0;
  v4[9].n128_u64[1] = (unint64_t)v22;
  v4[10].n128_u64[0] = (unint64_t)v25;
  v4[10].n128_u64[1] = (unint64_t)v5;
  OUTLINED_FUNCTION_17_17();
  OUTLINED_FUNCTION_43_11();
  *a3 = OUTLINED_FUNCTION_30_16();
  OUTLINED_FUNCTION_26_13();
}

id static UIColor.leaveConversation.getter()
{
  return static UIColor.joinConversation.getter((SEL *)&selRef_systemRedColor);
}

uint64_t *Colors.InCallControls.leaveButton.unsafeMutableAddressor()
{
  if (one-time initialization token for leaveButton != -1)
    swift_once();
  return &static Colors.InCallControls.leaveButton;
}

uint64_t static Colors.InCallControls.leaveButton.getter()
{
  return static Colors.ParticipantViews.bottomGradient.getter();
}

uint64_t one-time initialization function for localCameraControls()
{
  void *v0;
  uint64_t v1;
  __n128 *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v24;
  id v25;
  id v26;
  uint64_t v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  id v32;
  id v33;
  uint64_t v34;
  id v35;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(UIControlState, InCallControlButtonConfiguration)>);
  v2 = (__n128 *)OUTLINED_FUNCTION_31_20();
  OUTLINED_FUNCTION_19_24(v2, (__n128)xmmword_1BD645390);
  v3 = (void *)objc_opt_self();
  v4 = OUTLINED_FUNCTION_34_11(v3);
  v5 = OUTLINED_FUNCTION_25_1((uint64_t)v4, *(const char **)(v1 + 3448));
  if (one-time initialization token for backgroundBlurEffect != -1)
    swift_once();
  objc_opt_self();
  v6 = OUTLINED_FUNCTION_44_5();
  v7 = OUTLINED_FUNCTION_7_41(v0, sel__effectForBlurEffect_vibrancyStyle_);
  v2[2].n128_u64[1] = (unint64_t)v4;
  v2[3].n128_u64[0] = (unint64_t)v5;
  v2[3].n128_u64[1] = (unint64_t)v6;
  v2[4].n128_u64[0] = (unint64_t)v7;
  v2[4].n128_u8[8] = 1;
  v2[5].n128_u64[0] = 0;
  v2[5].n128_u64[1] = 0;
  v2[6].n128_u64[0] = 0;
  v2[6].n128_u64[1] = 1;
  v8 = OUTLINED_FUNCTION_25_1((uint64_t)v7, *(const char **)(v1 + 3448));
  v9 = OUTLINED_FUNCTION_1_31(v8, sel_colorWithAlphaComponent_);
  OUTLINED_FUNCTION_18_17();
  v11 = OUTLINED_FUNCTION_25_1(v10, *(const char **)(v1 + 3448));
  v12 = OUTLINED_FUNCTION_1_31(v11, sel_colorWithAlphaComponent_);

  v13 = (id)static Colors.InCallControls.backgroundBlurEffect;
  v14 = objc_msgSend(v0, sel__effectForBlurEffect_vibrancyStyle_, v13, 110);
  v2[7].n128_u64[0] = (unint64_t)v4;
  v2[7].n128_u64[1] = (unint64_t)v12;
  v2[8].n128_u64[0] = (unint64_t)v13;
  v2[8].n128_u64[1] = (unint64_t)v14;
  v2[9].n128_u8[0] = 1;
  v2[9].n128_u64[1] = 0;
  v2[10].n128_u64[0] = 0;
  v2[10].n128_u64[1] = 0;
  v2[11].n128_u64[0] = 4;
  v15 = OUTLINED_FUNCTION_25_1((uint64_t)v14, sel_blackColor);
  v16 = OUTLINED_FUNCTION_25_1((uint64_t)v15, sel_blackColor);
  v17 = OUTLINED_FUNCTION_25_1((uint64_t)v16, sel_labelColor);
  v18 = OUTLINED_FUNCTION_25_1((uint64_t)v17, sel_blackColor);
  v19 = OUTLINED_FUNCTION_25_1((uint64_t)v18, sel_blackColor);
  v20 = OUTLINED_FUNCTION_25_1((uint64_t)v19, sel_labelColor);
  v2[11].n128_u64[1] = (unint64_t)v15;
  v2[12].n128_u64[0] = (unint64_t)v16;
  v21 = OUTLINED_FUNCTION_35_7((uint64_t)v20);
  v22 = OUTLINED_FUNCTION_25_1(v21, sel_blackColor);
  v23 = OUTLINED_FUNCTION_1_31(v22, sel_colorWithAlphaComponent_);

  v25 = OUTLINED_FUNCTION_25_1(v24, sel_blackColor);
  v26 = OUTLINED_FUNCTION_1_31(v25, sel_colorWithAlphaComponent_);
  OUTLINED_FUNCTION_18_17();
  v28 = OUTLINED_FUNCTION_25_1(v27, sel_labelColor);
  v29 = OUTLINED_FUNCTION_25_1((uint64_t)v28, sel_blackColor);
  v30 = OUTLINED_FUNCTION_1_31(v29, sel_colorWithAlphaComponent_);

  v32 = OUTLINED_FUNCTION_25_1(v31, sel_blackColor);
  v33 = OUTLINED_FUNCTION_1_31(v32, sel_colorWithAlphaComponent_);

  v35 = OUTLINED_FUNCTION_25_1(v34, sel_labelColor);
  v2[16].n128_u64[0] = (unint64_t)v23;
  v2[16].n128_u64[1] = (unint64_t)v22;
  v2[17].n128_u64[0] = (unint64_t)v28;
  v2[17].n128_u64[1] = 0;
  v2[18].n128_u8[0] = 0;
  v2[18].n128_u64[1] = (unint64_t)v30;
  v2[19].n128_u64[0] = (unint64_t)v33;
  v2[19].n128_u64[1] = (unint64_t)v35;
  OUTLINED_FUNCTION_17_17();
  OUTLINED_FUNCTION_27_9();
  result = OUTLINED_FUNCTION_10_36();
  static Colors.InCallControls.localCameraControls = result;
  return result;
}

uint64_t *Colors.InCallControls.localCameraControls.unsafeMutableAddressor()
{
  if (one-time initialization token for localCameraControls != -1)
    swift_once();
  return &static Colors.InCallControls.localCameraControls;
}

uint64_t static Colors.InCallControls.localCameraControls.getter()
{
  return static Colors.ParticipantViews.bottomGradient.getter();
}

uint64_t one-time initialization function for localCameraCollapseControls()
{
  uint64_t inited;
  void *v1;
  id v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(UIControlState, InCallControlButtonConfiguration)>);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BD645380;
  *(_QWORD *)(inited + 32) = 0;
  v1 = (void *)objc_opt_self();
  v2 = objc_msgSend(v1, sel_secondarySystemBackgroundColor);
  v3 = objc_msgSend(v1, sel_secondarySystemBackgroundColor);
  if (one-time initialization token for localCameraControlsBlurEffect != -1)
    swift_once();
  v4 = (void *)static Colors.InCallControls.localCameraControlsBlurEffect;
  v5 = (void *)objc_opt_self();
  v6 = v4;
  v7 = objc_msgSend(v5, sel__effectForBlurEffect_vibrancyStyle_, v6, 112);
  *(_QWORD *)(inited + 40) = v2;
  *(_QWORD *)(inited + 48) = v3;
  *(_QWORD *)(inited + 56) = v6;
  *(_QWORD *)(inited + 64) = v7;
  *(_BYTE *)(inited + 72) = 1;
  *(_QWORD *)(inited + 80) = 0;
  *(_QWORD *)(inited + 88) = 0;
  *(_QWORD *)(inited + 96) = 0;
  *(_QWORD *)(inited + 104) = 1;
  v8 = objc_msgSend(v1, sel_secondarySystemBackgroundColor);
  v9 = objc_msgSend(v8, sel_colorWithAlphaComponent_, 0.6);

  v10 = objc_msgSend(v1, sel_secondarySystemBackgroundColor);
  v11 = objc_msgSend(v10, sel_colorWithAlphaComponent_, 0.6);

  v12 = (id)static Colors.InCallControls.localCameraControlsBlurEffect;
  v13 = objc_msgSend(v5, sel__effectForBlurEffect_vibrancyStyle_, v12, 110);
  *(_QWORD *)(inited + 112) = v9;
  *(_QWORD *)(inited + 120) = v11;
  *(_QWORD *)(inited + 128) = v12;
  *(_QWORD *)(inited + 136) = v13;
  *(_BYTE *)(inited + 144) = 1;
  type metadata accessor for UIControlState(0);
  lazy protocol witness table accessor for type UIControlState and conformance UIControlState();
  *(_QWORD *)(inited + 160) = 0;
  *(_QWORD *)(inited + 168) = 0;
  *(_QWORD *)(inited + 152) = 0;
  result = Dictionary.init(dictionaryLiteral:)();
  static Colors.InCallControls.localCameraCollapseControls = result;
  return result;
}

uint64_t *Colors.InCallControls.localCameraCollapseControls.unsafeMutableAddressor()
{
  if (one-time initialization token for localCameraCollapseControls != -1)
    swift_once();
  return &static Colors.InCallControls.localCameraCollapseControls;
}

uint64_t static Colors.InCallControls.localCameraCollapseControls.getter()
{
  return static Colors.ParticipantViews.bottomGradient.getter();
}

void one-time initialization function for pttLeaveButtonBanner(uint64_t a1)
{
  one-time initialization function for pttLeaveButtonBanner(a1, (const char **)&selRef_systemRedColor, &static Colors.InCallControls.pttLeaveButtonBanner);
}

uint64_t *Colors.InCallControls.pttLeaveButtonBanner.unsafeMutableAddressor()
{
  if (one-time initialization token for pttLeaveButtonBanner != -1)
    swift_once();
  return &static Colors.InCallControls.pttLeaveButtonBanner;
}

uint64_t static Colors.InCallControls.pttLeaveButtonBanner.getter()
{
  return static Colors.ParticipantViews.bottomGradient.getter();
}

void one-time initialization function for pttLeaveButtonFullScreen(uint64_t a1)
{
  one-time initialization function for pttLeaveButtonFullScreen(a1, (const char **)&selRef_systemRedColor, &static Colors.InCallControls.pttLeaveButtonFullScreen);
}

uint64_t *Colors.InCallControls.pttLeaveButtonFullScreen.unsafeMutableAddressor()
{
  if (one-time initialization token for pttLeaveButtonFullScreen != -1)
    swift_once();
  return &static Colors.InCallControls.pttLeaveButtonFullScreen;
}

uint64_t static Colors.InCallControls.pttLeaveButtonFullScreen.getter()
{
  return static Colors.ParticipantViews.bottomGradient.getter();
}

void one-time initialization function for pttTalkButtonBanner(uint64_t a1)
{
  one-time initialization function for pttLeaveButtonBanner(a1, (const char **)&selRef_systemBlueColor, &static Colors.InCallControls.pttTalkButtonBanner);
}

id static UIColor.pttTalk.getter()
{
  return static UIColor.joinConversation.getter((SEL *)&selRef_systemBlueColor);
}

uint64_t *Colors.InCallControls.pttTalkButtonBanner.unsafeMutableAddressor()
{
  if (one-time initialization token for pttTalkButtonBanner != -1)
    swift_once();
  return &static Colors.InCallControls.pttTalkButtonBanner;
}

uint64_t static Colors.InCallControls.pttTalkButtonBanner.getter()
{
  return static Colors.ParticipantViews.bottomGradient.getter();
}

void one-time initialization function for pttTalkButtonFullScreen(uint64_t a1)
{
  one-time initialization function for pttLeaveButtonFullScreen(a1, (const char **)&selRef_systemBlueColor, &static Colors.InCallControls.pttTalkButtonFullScreen);
}

void one-time initialization function for pttLeaveButtonFullScreen(uint64_t a1, const char **a2, uint64_t *a3)
{
  __n128 *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;
  id v28;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(UIControlState, ButtonStyle)>);
  v4 = (__n128 *)OUTLINED_FUNCTION_48_9();
  OUTLINED_FUNCTION_19_24(v4, (__n128)xmmword_1BD646740);
  v5 = (void *)objc_opt_self();
  v6 = OUTLINED_FUNCTION_42_8(v5);
  v7 = OUTLINED_FUNCTION_2_43();
  v8 = OUTLINED_FUNCTION_9((uint64_t)v7, *a2);
  v9 = OUTLINED_FUNCTION_2_43();
  v4[2].n128_u64[1] = (unint64_t)v6;
  v4[3].n128_u64[0] = 0;
  v4[3].n128_u8[8] = 64;
  v4[4].n128_u64[0] = (unint64_t)v7;
  v4[4].n128_u64[1] = (unint64_t)v8;
  v4[5].n128_u64[0] = 0;
  v4[5].n128_u8[8] = 64;
  v4[6].n128_u64[0] = (unint64_t)v9;
  v4[6].n128_u64[1] = 1;
  v10 = OUTLINED_FUNCTION_9((uint64_t)v9, *a2);
  v11 = OUTLINED_FUNCTION_1_31(v10, sel_colorWithAlphaComponent_);
  OUTLINED_FUNCTION_14_10();
  v12 = OUTLINED_FUNCTION_2_43();
  v13 = OUTLINED_FUNCTION_1_31(v12, sel_colorWithAlphaComponent_);
  OUTLINED_FUNCTION_41_2();
  v15 = OUTLINED_FUNCTION_9(v14, *a2);
  v16 = OUTLINED_FUNCTION_1_31(v15, sel_colorWithAlphaComponent_);

  v17 = OUTLINED_FUNCTION_2_43();
  v18 = OUTLINED_FUNCTION_1_31(v17, sel_colorWithAlphaComponent_);

  v4[7].n128_u64[0] = (unint64_t)v6;
  v4[7].n128_u64[1] = 0;
  v4[8].n128_u8[0] = 64;
  v4[8].n128_u64[1] = (unint64_t)v10;
  v4[9].n128_u64[0] = (unint64_t)v16;
  v4[9].n128_u64[1] = 0;
  v4[10].n128_u8[0] = 64;
  v4[10].n128_u64[1] = (unint64_t)v18;
  v4[11].n128_u64[0] = 2;
  v20 = OUTLINED_FUNCTION_9(v19, sel_darkGrayColor);
  v21 = OUTLINED_FUNCTION_38_9(v20);
  OUTLINED_FUNCTION_18_17();
  v22 = OUTLINED_FUNCTION_2_43();
  v23 = OUTLINED_FUNCTION_1_31(v22, sel_colorWithAlphaComponent_);
  OUTLINED_FUNCTION_14_10();
  v25 = OUTLINED_FUNCTION_9(v24, sel_darkGrayColor);
  v26 = OUTLINED_FUNCTION_38_9(v25);

  v27 = OUTLINED_FUNCTION_2_43();
  v28 = OUTLINED_FUNCTION_1_31(v27, sel_colorWithAlphaComponent_);

  v4[11].n128_u64[1] = (unint64_t)v17;
  v4[12].n128_u64[0] = 0;
  v4[12].n128_u8[8] = 64;
  v4[13].n128_u64[0] = (unint64_t)v20;
  v4[13].n128_u64[1] = (unint64_t)v26;
  v4[14].n128_u64[0] = 0;
  v4[14].n128_u8[8] = 64;
  v4[15].n128_u64[0] = (unint64_t)v28;
  OUTLINED_FUNCTION_17_17();
  OUTLINED_FUNCTION_43_11();
  *a3 = OUTLINED_FUNCTION_30_16();
  OUTLINED_FUNCTION_22_20();
}

uint64_t *Colors.InCallControls.pttTalkButtonFullScreen.unsafeMutableAddressor()
{
  if (one-time initialization token for pttTalkButtonFullScreen != -1)
    swift_once();
  return &static Colors.InCallControls.pttTalkButtonFullScreen;
}

uint64_t static Colors.InCallControls.pttTalkButtonFullScreen.getter()
{
  return static Colors.ParticipantViews.bottomGradient.getter();
}

uint64_t one-time initialization function for avLessButton()
{
  uint64_t inited;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(UIControlState, ButtonStyle)>);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BD645380;
  *(_QWORD *)(inited + 32) = 0;
  v1 = (void *)objc_opt_self();
  v2 = objc_msgSend(v1, sel_secondarySystemFillColor);
  v3 = objc_msgSend(v1, sel_labelColor);
  v4 = objc_msgSend(v1, sel_secondarySystemFillColor);
  v5 = objc_msgSend(v1, sel_labelColor);
  *(_QWORD *)(inited + 40) = v2;
  *(_QWORD *)(inited + 48) = 0;
  *(_BYTE *)(inited + 56) = 64;
  *(_QWORD *)(inited + 64) = v3;
  *(_QWORD *)(inited + 72) = v4;
  *(_QWORD *)(inited + 80) = 0;
  *(_BYTE *)(inited + 88) = 64;
  *(_QWORD *)(inited + 96) = v5;
  *(_QWORD *)(inited + 104) = 1;
  v6 = objc_msgSend(v1, sel_secondarySystemFillColor);
  v7 = objc_msgSend(v6, sel_colorWithAlphaComponent_, 0.75);

  v8 = objc_msgSend(v1, sel_labelColor);
  v9 = objc_msgSend(v1, sel_secondarySystemFillColor);
  v10 = objc_msgSend(v9, sel_colorWithAlphaComponent_, 0.75);

  v11 = objc_msgSend(v1, sel_labelColor);
  *(_QWORD *)(inited + 112) = v7;
  *(_QWORD *)(inited + 120) = 0;
  *(_BYTE *)(inited + 128) = 64;
  *(_QWORD *)(inited + 136) = v8;
  *(_QWORD *)(inited + 144) = v10;
  *(_QWORD *)(inited + 152) = 0;
  *(_BYTE *)(inited + 160) = 64;
  *(_QWORD *)(inited + 168) = v11;
  type metadata accessor for UIControlState(0);
  lazy protocol witness table accessor for type UIControlState and conformance UIControlState();
  result = Dictionary.init(dictionaryLiteral:)();
  static Colors.InCallControls.avLessButton = result;
  return result;
}

uint64_t *Colors.InCallControls.avLessButton.unsafeMutableAddressor()
{
  if (one-time initialization token for avLessButton != -1)
    swift_once();
  return &static Colors.InCallControls.avLessButton;
}

uint64_t static Colors.InCallControls.avLessButton.getter()
{
  return static Colors.ParticipantViews.bottomGradient.getter();
}

void one-time initialization function for greenTea3PDeclineButtonBanner(uint64_t a1)
{
  one-time initialization function for pttLeaveButtonBanner(a1, (const char **)&selRef_systemRedColor, &static Colors.InCallControls.greenTea3PDeclineButtonBanner);
}

id static UIColor.declineCall.getter()
{
  return static UIColor.joinConversation.getter((SEL *)&selRef_systemRedColor);
}

uint64_t *Colors.InCallControls.greenTea3PDeclineButtonBanner.unsafeMutableAddressor()
{
  if (one-time initialization token for greenTea3PDeclineButtonBanner != -1)
    swift_once();
  return &static Colors.InCallControls.greenTea3PDeclineButtonBanner;
}

uint64_t static Colors.InCallControls.greenTea3PDeclineButtonBanner.getter()
{
  return static Colors.ParticipantViews.bottomGradient.getter();
}

void one-time initialization function for greenTea3PAcceptButtonBanner(uint64_t a1)
{
  one-time initialization function for pttLeaveButtonBanner(a1, (const char **)&selRef_systemBlueColor, &static Colors.InCallControls.greenTea3PAcceptButtonBanner);
}

void one-time initialization function for pttLeaveButtonBanner(uint64_t a1, const char **a2, uint64_t *a3)
{
  __n128 *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(UIControlState, ButtonStyle)>);
  v4 = (__n128 *)OUTLINED_FUNCTION_48_9();
  OUTLINED_FUNCTION_19_24(v4, (__n128)xmmword_1BD646740);
  v5 = (void *)objc_opt_self();
  v6 = OUTLINED_FUNCTION_42_8(v5);
  v7 = OUTLINED_FUNCTION_2_43();
  v8 = OUTLINED_FUNCTION_9((uint64_t)v7, *a2);
  v9 = OUTLINED_FUNCTION_2_43();
  v4[2].n128_u64[1] = (unint64_t)v6;
  v4[3].n128_u64[0] = 0;
  v4[3].n128_u8[8] = 64;
  v4[4].n128_u64[0] = (unint64_t)v7;
  v4[4].n128_u64[1] = (unint64_t)v8;
  v4[5].n128_u64[0] = 0;
  v4[5].n128_u8[8] = 64;
  v4[6].n128_u64[0] = (unint64_t)v9;
  v4[6].n128_u64[1] = 1;
  v10 = OUTLINED_FUNCTION_9((uint64_t)v9, *a2);
  v11 = OUTLINED_FUNCTION_1_31(v10, sel_colorWithAlphaComponent_);
  OUTLINED_FUNCTION_14_10();
  v12 = OUTLINED_FUNCTION_2_43();
  v13 = OUTLINED_FUNCTION_1_31(v12, sel_colorWithAlphaComponent_);
  OUTLINED_FUNCTION_41_2();
  v15 = OUTLINED_FUNCTION_9(v14, *a2);
  v16 = OUTLINED_FUNCTION_1_31(v15, sel_colorWithAlphaComponent_);

  v17 = OUTLINED_FUNCTION_2_43();
  v18 = OUTLINED_FUNCTION_1_31(v17, sel_colorWithAlphaComponent_);

  v4[7].n128_u64[0] = (unint64_t)v6;
  v4[7].n128_u64[1] = 0;
  v4[8].n128_u8[0] = 64;
  v4[8].n128_u64[1] = (unint64_t)v10;
  v4[9].n128_u64[0] = (unint64_t)v16;
  v4[9].n128_u64[1] = 0;
  v4[10].n128_u8[0] = 64;
  v4[10].n128_u64[1] = (unint64_t)v18;
  v4[11].n128_u64[0] = 2;
  v19 = OUTLINED_FUNCTION_2_43();
  v20 = OUTLINED_FUNCTION_1_31(v19, sel_colorWithAlphaComponent_);

  v21 = OUTLINED_FUNCTION_2_43();
  v22 = OUTLINED_FUNCTION_1_31(v21, sel_colorWithAlphaComponent_);
  OUTLINED_FUNCTION_19_5();
  v4[11].n128_u64[1] = 0;
  v4[12].n128_u64[0] = 0;
  v4[12].n128_u8[8] = 3;
  v4[13].n128_u64[1] = 0;
  v4[14].n128_u64[0] = 0;
  v4[13].n128_u64[0] = (unint64_t)v20;
  v4[14].n128_u8[8] = 3;
  v4[15].n128_u64[0] = (unint64_t)v19;
  OUTLINED_FUNCTION_17_17();
  OUTLINED_FUNCTION_43_11();
  *a3 = OUTLINED_FUNCTION_30_16();
  OUTLINED_FUNCTION_22_20();
}

id static UIColor.acceptGreenTea3PCall.getter()
{
  return static UIColor.joinConversation.getter((SEL *)&selRef_systemBlueColor);
}

uint64_t *Colors.InCallControls.greenTea3PAcceptButtonBanner.unsafeMutableAddressor()
{
  if (one-time initialization token for greenTea3PAcceptButtonBanner != -1)
    swift_once();
  return &static Colors.InCallControls.greenTea3PAcceptButtonBanner;
}

uint64_t static Colors.InCallControls.greenTea3PAcceptButtonBanner.getter()
{
  return static Colors.ParticipantViews.bottomGradient.getter();
}

void one-time initialization function for greenTea3PResumeButton()
{
  void *v0;
  uint64_t v1;
  __n128 *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  id v24;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(UIControlState, InCallControlButtonConfiguration)>);
  v2 = (__n128 *)OUTLINED_FUNCTION_31_20();
  OUTLINED_FUNCTION_19_24(v2, (__n128)xmmword_1BD645380);
  v3 = (void *)objc_opt_self();
  v4 = OUTLINED_FUNCTION_21_18(v3);
  v5 = OUTLINED_FUNCTION_25_1((uint64_t)v4, *(const char **)(v1 + 3448));
  if (one-time initialization token for backgroundBlurEffect != -1)
    swift_once();
  objc_opt_self();
  v6 = OUTLINED_FUNCTION_44_5();
  v7 = OUTLINED_FUNCTION_29_13(v0, sel__effectForBlurEffect_vibrancyStyle_);
  v8 = OUTLINED_FUNCTION_25_1((uint64_t)v7, *(const char **)(v1 + 3448));
  v9 = OUTLINED_FUNCTION_25_1((uint64_t)v8, *(const char **)(v1 + 3448));
  v10 = OUTLINED_FUNCTION_25_1((uint64_t)v9, sel_secondarySystemFillColor);
  v2[2].n128_u64[1] = (unint64_t)v4;
  v2[3].n128_u64[0] = (unint64_t)v5;
  v2[3].n128_u64[1] = (unint64_t)v6;
  v2[4].n128_u64[0] = (unint64_t)v7;
  v2[4].n128_u8[8] = 1;
  v2[5].n128_u64[0] = (unint64_t)v8;
  v2[5].n128_u64[1] = (unint64_t)v9;
  v2[6].n128_u64[0] = (unint64_t)v10;
  v2[6].n128_u64[1] = 1;
  v11 = OUTLINED_FUNCTION_25_1((uint64_t)v10, *(const char **)(v1 + 3448));
  v12 = OUTLINED_FUNCTION_1_31(v11, sel_colorWithAlphaComponent_);
  OUTLINED_FUNCTION_18_17();
  v14 = OUTLINED_FUNCTION_25_1(v13, *(const char **)(v1 + 3448));
  v15 = OUTLINED_FUNCTION_1_31(v14, sel_colorWithAlphaComponent_);
  OUTLINED_FUNCTION_14_10();
  v16 = (id)static Colors.InCallControls.backgroundBlurEffect;
  v17 = objc_msgSend(v0, sel__effectForBlurEffect_vibrancyStyle_, v16, 110);
  v18 = OUTLINED_FUNCTION_25_1((uint64_t)v17, *(const char **)(v1 + 3448));
  v19 = OUTLINED_FUNCTION_1_31(v18, sel_colorWithAlphaComponent_);
  OUTLINED_FUNCTION_40_1();
  v21 = OUTLINED_FUNCTION_25_1(v20, *(const char **)(v1 + 3448));
  v22 = OUTLINED_FUNCTION_1_31(v21, sel_colorWithAlphaComponent_);

  v24 = OUTLINED_FUNCTION_25_1(v23, sel_systemFillColor);
  v2[7].n128_u64[0] = (unint64_t)v4;
  v2[7].n128_u64[1] = (unint64_t)v11;
  v2[8].n128_u64[0] = (unint64_t)v16;
  v2[8].n128_u64[1] = (unint64_t)v17;
  v2[9].n128_u8[0] = 1;
  v2[9].n128_u64[1] = (unint64_t)v8;
  v2[10].n128_u64[0] = (unint64_t)v22;
  v2[10].n128_u64[1] = (unint64_t)v24;
  OUTLINED_FUNCTION_17_17();
  OUTLINED_FUNCTION_27_9();
  static Colors.InCallControls.greenTea3PResumeButton = OUTLINED_FUNCTION_10_36();
  OUTLINED_FUNCTION_26_13();
}

uint64_t *Colors.InCallControls.greenTea3PResumeButton.unsafeMutableAddressor()
{
  if (one-time initialization token for greenTea3PResumeButton != -1)
    swift_once();
  return &static Colors.InCallControls.greenTea3PResumeButton;
}

uint64_t static Colors.InCallControls.greenTea3PResumeButton.getter()
{
  return static Colors.ParticipantViews.bottomGradient.getter();
}

void one-time initialization function for collectionViewSectionHeaderTitleLabel(uint64_t a1)
{
  one-time initialization function for screenShareNameLabel(a1, (SEL *)&selRef_secondaryLabelColor, &static Colors.InCallControls.collectionViewSectionHeaderTitleLabel);
}

id static Colors.InCallControls.collectionViewSectionHeaderTitleLabel.getter()
{
  return static Colors.ShareView.separator.getter();
}

void one-time initialization function for tableViewCellTitleLabel(uint64_t a1)
{
  one-time initialization function for screenShareNameLabel(a1, (SEL *)&selRef_labelColor, &static Colors.InCallControls.tableViewCellTitleLabel);
}

id static Colors.InCallControls.tableViewCellTitleLabel.getter()
{
  return static Colors.ShareView.separator.getter();
}

void one-time initialization function for tableViewCellSubtitleLabel(uint64_t a1)
{
  one-time initialization function for screenShareNameLabel(a1, (SEL *)&selRef_secondaryLabelColor, &static Colors.InCallControls.tableViewCellSubtitleLabel);
}

uint64_t *Colors.InCallControls.tableViewCellSubtitleLabel.unsafeMutableAddressor()
{
  if (one-time initialization token for tableViewCellSubtitleLabel != -1)
    swift_once();
  return &static Colors.InCallControls.tableViewCellSubtitleLabel;
}

id static Colors.InCallControls.tableViewCellSubtitleLabel.getter()
{
  return static Colors.ShareView.separator.getter();
}

void one-time initialization function for tableViewHeaderTitleLabel(uint64_t a1)
{
  one-time initialization function for screenShareNameLabel(a1, (SEL *)&selRef_labelColor, &static Colors.InCallControls.tableViewHeaderTitleLabel);
}

uint64_t *Colors.InCallControls.tableViewHeaderTitleLabel.unsafeMutableAddressor()
{
  if (one-time initialization token for tableViewHeaderTitleLabel != -1)
    swift_once();
  return &static Colors.InCallControls.tableViewHeaderTitleLabel;
}

id static Colors.InCallControls.tableViewHeaderTitleLabel.getter()
{
  return static Colors.ShareView.separator.getter();
}

void one-time initialization function for tableViewHeaderSubtitleLabel(uint64_t a1)
{
  one-time initialization function for screenShareNameLabel(a1, (SEL *)&selRef_secondaryLabelColor, &static Colors.InCallControls.tableViewHeaderSubtitleLabel);
}

_QWORD *Colors.InCallControls.tableViewHeaderSubtitleLabel.unsafeMutableAddressor()
{
  if (one-time initialization token for tableViewHeaderSubtitleLabel != -1)
    swift_once();
  return &static Colors.InCallControls.tableViewHeaderSubtitleLabel;
}

id static Colors.InCallControls.tableViewHeaderSubtitleLabel.getter()
{
  return static Colors.ShareView.separator.getter();
}

uint64_t *Colors.MultiwayViewController.background.unsafeMutableAddressor()
{
  if (one-time initialization token for background != -1)
    swift_once();
  return &static Colors.MultiwayViewController.background;
}

id static Colors.MultiwayViewController.background.getter()
{
  return static Colors.ShareView.separator.getter();
}

void one-time initialization function for buttonDefaultBackground(uint64_t a1)
{
  one-time initialization function for screenShareNameLabel(a1, (SEL *)&selRef_whiteColor, &static Colors.ParticipantControls.buttonDefaultBackground);
}

_QWORD *Colors.ParticipantControls.buttonDefaultBackground.unsafeMutableAddressor()
{
  if (one-time initialization token for buttonDefaultBackground != -1)
    swift_once();
  return &static Colors.ParticipantControls.buttonDefaultBackground;
}

id static Colors.ParticipantControls.buttonDefaultBackground.getter()
{
  return static Colors.ShareView.separator.getter();
}

void one-time initialization function for buttonDefaultTint(uint64_t a1)
{
  one-time initialization function for screenShareNameLabel(a1, (SEL *)&selRef_systemBlueColor, &static Colors.ParticipantControls.buttonDefaultTint);
}

_QWORD *Colors.ParticipantControls.buttonDefaultTint.unsafeMutableAddressor()
{
  if (one-time initialization token for buttonDefaultTint != -1)
    swift_once();
  return &static Colors.ParticipantControls.buttonDefaultTint;
}

id static Colors.ParticipantControls.buttonDefaultTint.getter()
{
  return static Colors.ShareView.separator.getter();
}

id one-time initialization function for buttonBlurBackground()
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 1.0, 1.0, 1.0, 0.35);
  static Colors.ParticipantControls.buttonBlurBackground = (uint64_t)result;
  return result;
}

uint64_t *Colors.ParticipantControls.buttonBlurBackground.unsafeMutableAddressor()
{
  if (one-time initialization token for buttonBlurBackground != -1)
    swift_once();
  return &static Colors.ParticipantControls.buttonBlurBackground;
}

id static Colors.ParticipantControls.buttonBlurBackground.getter()
{
  return static Colors.ShareView.separator.getter();
}

void one-time initialization function for buttonBlurTint(uint64_t a1)
{
  one-time initialization function for screenShareNameLabel(a1, (SEL *)&selRef_whiteColor, &static Colors.ParticipantControls.buttonBlurTint);
}

_QWORD *Colors.ParticipantControls.buttonBlurTint.unsafeMutableAddressor()
{
  if (one-time initialization token for buttonBlurTint != -1)
    swift_once();
  return &static Colors.ParticipantControls.buttonBlurTint;
}

id static Colors.ParticipantControls.buttonBlurTint.getter()
{
  return static Colors.ShareView.separator.getter();
}

id one-time initialization function for participantBackground()
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.2, 0.2, 0.2, 1.0);
  static Colors.Roster.participantBackground = (uint64_t)result;
  return result;
}

uint64_t *Colors.Roster.participantBackground.unsafeMutableAddressor()
{
  if (one-time initialization token for participantBackground != -1)
    swift_once();
  return &static Colors.Roster.participantBackground;
}

id static Colors.Roster.participantBackground.getter()
{
  return static Colors.ShareView.separator.getter();
}

id one-time initialization function for sashBackground()
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.301960784, 0.301960784, 0.301960784, 1.0);
  static Colors.Roster.sashBackground = (uint64_t)result;
  return result;
}

uint64_t *Colors.Roster.sashBackground.unsafeMutableAddressor()
{
  if (one-time initialization token for sashBackground != -1)
    swift_once();
  return &static Colors.Roster.sashBackground;
}

id static Colors.Roster.sashBackground.getter()
{
  return static Colors.ShareView.separator.getter();
}

void one-time initialization function for sashSelectedBackground(uint64_t a1)
{
  one-time initialization function for screenShareNameLabel(a1, (SEL *)&selRef_lightGrayColor, &static Colors.Roster.sashSelectedBackground);
}

_QWORD *Colors.Roster.sashSelectedBackground.unsafeMutableAddressor()
{
  if (one-time initialization token for sashSelectedBackground != -1)
    swift_once();
  return &static Colors.Roster.sashSelectedBackground;
}

id static Colors.Roster.sashSelectedBackground.getter()
{
  return static Colors.ShareView.separator.getter();
}

void one-time initialization function for sashText(uint64_t a1)
{
  one-time initialization function for screenShareNameLabel(a1, (SEL *)&selRef_whiteColor, &static Colors.Roster.sashText);
}

_QWORD *Colors.Roster.sashText.unsafeMutableAddressor()
{
  if (one-time initialization token for sashText != -1)
    swift_once();
  return &static Colors.Roster.sashText;
}

id static Colors.Roster.sashText.getter()
{
  return static Colors.ShareView.separator.getter();
}

void one-time initialization function for sashSelectedText(uint64_t a1)
{
  one-time initialization function for screenShareNameLabel(a1, (SEL *)&selRef_blackColor, &static Colors.Roster.sashSelectedText);
}

_QWORD *Colors.Roster.sashSelectedText.unsafeMutableAddressor()
{
  if (one-time initialization token for sashSelectedText != -1)
    swift_once();
  return &static Colors.Roster.sashSelectedText;
}

id static Colors.Roster.sashSelectedText.getter()
{
  return static Colors.ShareView.separator.getter();
}

id one-time initialization function for actionCellTintColor()
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.64, 0.64, 0.64, 1.0);
  static Colors.Roster.actionCellTintColor = (uint64_t)result;
  return result;
}

uint64_t *Colors.Roster.actionCellTintColor.unsafeMutableAddressor()
{
  if (one-time initialization token for actionCellTintColor != -1)
    swift_once();
  return &static Colors.Roster.actionCellTintColor;
}

id static Colors.Roster.actionCellTintColor.getter()
{
  return static Colors.ShareView.separator.getter();
}

id one-time initialization function for actionCellBackgroundColor()
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.21, 0.21, 0.21, 0.6);
  static Colors.Roster.actionCellBackgroundColor = (uint64_t)result;
  return result;
}

uint64_t *Colors.Roster.actionCellBackgroundColor.unsafeMutableAddressor()
{
  if (one-time initialization token for actionCellBackgroundColor != -1)
    swift_once();
  return &static Colors.Roster.actionCellBackgroundColor;
}

id static Colors.Roster.actionCellBackgroundColor.getter()
{
  return static Colors.ShareView.separator.getter();
}

void one-time initialization function for background()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;

  v0 = type metadata accessor for Color.RGBColorSpace();
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD))(v3 + 104))(v2, *MEMORY[0x1E0CDF3E0]);
  static Colors.Captions.background = MEMORY[0x1C3B72614](v2, 0.117647059, 0.117647059, 0.117647059, 1.0);
  OUTLINED_FUNCTION_0();
}

uint64_t *Colors.Captions.background.unsafeMutableAddressor()
{
  if (one-time initialization token for background != -1)
    swift_once();
  return &static Colors.Captions.background;
}

uint64_t static Colors.Captions.background.getter()
{
  return static Colors.Captions.background.getter();
}

{
  char v0;

  OUTLINED_FUNCTION_28_15();
  if (!v0)
    OUTLINED_FUNCTION_36_8();
  return swift_retain();
}

void one-time initialization function for divider()
{
  uint64_t v0;

  static Color.gray.getter();
  v0 = Color.opacity(_:)();
  swift_release();
  static Colors.Captions.divider = v0;
  OUTLINED_FUNCTION_0();
}

uint64_t *Colors.Captions.divider.unsafeMutableAddressor()
{
  if (one-time initialization token for divider != -1)
    swift_once();
  return &static Colors.Captions.divider;
}

uint64_t static Colors.Captions.divider.getter()
{
  return static Colors.Captions.background.getter();
}

void one-time initialization function for lowConfidenceTermUnderline(uint64_t a1)
{
  one-time initialization function for screenShareNameLabel(a1, (SEL *)&selRef_systemBlueColor, &static Colors.Captions.lowConfidenceTermUnderline);
}

uint64_t *Colors.Captions.lowConfidenceTermUnderline.unsafeMutableAddressor()
{
  if (one-time initialization token for lowConfidenceTermUnderline != -1)
    swift_once();
  return &static Colors.Captions.lowConfidenceTermUnderline;
}

id static Colors.Captions.lowConfidenceTermUnderline.getter()
{
  return static Colors.ShareView.separator.getter();
}

uint64_t one-time initialization function for progressBar()
{
  uint64_t result;

  result = static Color.white.getter();
  static Colors.Captions.progressBar = result;
  return result;
}

uint64_t *Colors.Captions.progressBar.unsafeMutableAddressor()
{
  if (one-time initialization token for progressBar != -1)
    swift_once();
  return &static Colors.Captions.progressBar;
}

uint64_t static Colors.Captions.progressBar.getter()
{
  return static Colors.Captions.background.getter();
}

id static Colors.clear.getter()
{
  return objc_msgSend((id)objc_opt_self(), sel_clearColor);
}

void *Colors.AudioVisualization.alphaDecay.unsafeMutableAddressor()
{
  return &static Colors.AudioVisualization.alphaDecay;
}

float static Colors.AudioVisualization.alphaDecay.getter()
{
  return 0.75;
}

void *Colors.AudioVisualization.minAlpha.unsafeMutableAddressor()
{
  return &static Colors.AudioVisualization.minAlpha;
}

float static Colors.AudioVisualization.minAlpha.getter()
{
  return 0.35;
}

void *Colors.AudioVisualization.reducedMotionMinAlpha.unsafeMutableAddressor()
{
  return &static Colors.AudioVisualization.reducedMotionMinAlpha;
}

float static Colors.AudioVisualization.reducedMotionMinAlpha.getter()
{
  return 0.0;
}

float static Colors.AudioVisualization.reducedMotionAlpha(_:)(float a1)
{
  if (a1 <= 0.5)
    return powf(a1 + a1, 3.0);
  else
    return 1.0;
}

void *Colors.AudioVisualization.gradientInterpolationPercentage.unsafeMutableAddressor()
{
  return &static Colors.AudioVisualization.gradientInterpolationPercentage;
}

double static Colors.AudioVisualization.gradientInterpolationPercentage.getter()
{
  return 0.25;
}

uint64_t one-time initialization function for uniqueGradients()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<[UIColor]>);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1BD646750;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1BD6441C0;
  *(_QWORD *)(v1 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.345098039, 0.925490196, 1.0, 1.0);
  *(_QWORD *)(v1 + 40) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.156862745, 0.737254902, 1.0, 1.0);
  specialized Array._endMutation()();
  *(_QWORD *)(v0 + 32) = v1;
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BD6441C0;
  *(_QWORD *)(v2 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.356862745, 0.968627451, 0.654901961, 1.0);
  *(_QWORD *)(v2 + 40) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.0509803922, 0.741176471, 0.17254902, 1.0);
  specialized Array._endMutation()();
  *(_QWORD *)(v0 + 40) = v2;
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1BD6441C0;
  *(_QWORD *)(v3 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 1.0, 0.368627451, 0.533333333, 1.0);
  *(_QWORD *)(v3 + 40) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 1.0, 0.125490196, 0.290196078, 1.0);
  specialized Array._endMutation()();
  *(_QWORD *)(v0 + 48) = v3;
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1BD6441C0;
  *(_QWORD *)(v4 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 1.0, 0.91372549, 0.247058824, 1.0);
  *(_QWORD *)(v4 + 40) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 1.0, 0.674509804, 0.00784313725, 1.0);
  specialized Array._endMutation()();
  *(_QWORD *)(v0 + 56) = v4;
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1BD6441C0;
  *(_QWORD *)(v5 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.650980392, 0.639215686, 1.0, 1.0);
  *(_QWORD *)(v5 + 40) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.450980392, 0.439215686, 1.0, 1.0);
  specialized Array._endMutation()();
  *(_QWORD *)(v0 + 64) = v5;
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1BD6441C0;
  *(_QWORD *)(v6 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.266666667, 0.674509804, 1.0, 1.0);
  *(_QWORD *)(v6 + 40) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.0274509804, 0.435294118, 1.0, 1.0);
  specialized Array._endMutation()();
  *(_QWORD *)(v0 + 72) = v6;
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1BD6441C0;
  *(_QWORD *)(v7 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.996078431, 0.678431373, 0.349019608, 1.0);
  *(_QWORD *)(v7 + 40) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 1.0, 0.325490196, 0.192156863, 1.0);
  specialized Array._endMutation()();
  *(_QWORD *)(v0 + 80) = v7;
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1BD6441C0;
  *(_QWORD *)(v8 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.988235294, 0.988235294, 0.345098039, 1.0);
  *(_QWORD *)(v8 + 40) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 1.0, 0.925490196, 0.00784313725, 1.0);
  result = specialized Array._endMutation()();
  *(_QWORD *)(v0 + 88) = v8;
  static Colors.ParticipantGradients.uniqueGradients = (_UNKNOWN *)v0;
  return result;
}

#error "1BD08B4E8: call analysis failed (funcsize=28)"

uint64_t static Colors.ParticipantGradients.gradient(for:)(void *a1)
{
  id v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t result;

  v1 = objc_msgSend(a1, sel_value);
  v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v4 = v3;

  specialized Sequence.reduce<A>(_:_:)(0, v2, v4);
  result = swift_bridgeObjectRelease();
  if (one-time initialization token for gradients != -1)
    result = swift_once();
  if (*((_QWORD *)static Colors.ParticipantGradients.gradients + 2))
    return swift_bridgeObjectRetain();
  __break(1u);
  return result;
}

unint64_t specialized Sequence.reduce<A>(_:_:)(uint64_t a1, unint64_t a2, unint64_t a3)
{
  unint64_t v4;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t result;
  unint64_t v11;
  int v12;
  uint64_t v13;
  _QWORD v14[2];
  uint64_t v15;

  if ((a3 & 0x2000000000000000) != 0)
    v4 = HIBYTE(a3) & 0xF;
  else
    v4 = a2 & 0xFFFFFFFFFFFFLL;
  if (!v4)
    return a1;
  v7 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0)
    LOBYTE(v7) = 1;
  v8 = 4 << v7;
  v15 = a3 & 0xFFFFFFFFFFFFFFLL;
  v13 = (a3 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v9 = 15;
  while (1)
  {
    result = v9;
    if ((v9 & 0xC) == v8)
      result = _StringGuts._slowEnsureMatchingEncoding(_:)(v9, a2, a3);
    v11 = result >> 16;
    if (result >> 16 >= v4)
      break;
    if ((a3 & 0x1000000000000000) != 0)
    {
      result = String.UTF8View._foreignSubscript(position:)();
      v12 = result;
    }
    else if ((a3 & 0x2000000000000000) != 0)
    {
      v14[0] = a2;
      v14[1] = v15;
      v12 = *((unsigned __int8 *)v14 + v11);
    }
    else
    {
      result = v13;
      if ((a2 & 0x1000000000000000) == 0)
        result = _StringObject.sharedUTF8.getter();
      v12 = *(unsigned __int8 *)(result + v11);
    }
    if ((v9 & 0xC) == v8)
    {
      result = _StringGuts._slowEnsureMatchingEncoding(_:)(v9, a2, a3);
      v9 = result;
      if ((a3 & 0x1000000000000000) == 0)
      {
LABEL_19:
        v9 = (v9 & 0xFFFFFFFFFFFF0000) + 65540;
        goto LABEL_24;
      }
    }
    else if ((a3 & 0x1000000000000000) == 0)
    {
      goto LABEL_19;
    }
    if (v4 <= v9 >> 16)
      goto LABEL_27;
    v9 = String.UTF8View._foreignIndex(after:)();
LABEL_24:
    a1 = v12 ^ a1;
    if (4 * v4 == v9 >> 14)
      return a1;
  }
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t one-time initialization function for default()
{
  uint64_t result;

  if (one-time initialization token for uniqueGradients != -1)
    result = swift_once();
  if (*((_QWORD *)static Colors.ParticipantGradients.uniqueGradients + 2))
  {
    static Colors.ParticipantGradients.default = *((_QWORD *)static Colors.ParticipantGradients.uniqueGradients + 4);
    return swift_bridgeObjectRetain();
  }
  else
  {
    __break(1u);
  }
  return result;
}

{
  if (one-time initialization token for waitingForTranscriptionText != -1)
    swift_once();
  swift_beginAccess();
  static TranscriptionViewModel.Configuration.default = static TranscriptionViewModel.Configuration.Strings.waitingForTranscriptionText;
  return swift_bridgeObjectRetain();
}

uint64_t *Colors.ParticipantGradients.default.unsafeMutableAddressor()
{
  if (one-time initialization token for default != -1)
    swift_once();
  return &static Colors.ParticipantGradients.default;
}

uint64_t static Colors.ParticipantGradients.default.getter()
{
  if (one-time initialization token for default != -1)
    swift_once();
  OUTLINED_FUNCTION_2_0();
  return swift_bridgeObjectRetain();
}

uint64_t static Colors.ParticipantGradients.default.setter(uint64_t a1)
{
  if (one-time initialization token for default != -1)
    swift_once();
  OUTLINED_FUNCTION_2_0();
  static Colors.ParticipantGradients.default = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*static Colors.ParticipantGradients.default.modify())()
{
  if (one-time initialization token for default != -1)
    swift_once();
  OUTLINED_FUNCTION_2_0();
  return CallRecordingPillViewController.cancellable.modify;
}

void one-time initialization function for borderColor(uint64_t a1)
{
  one-time initialization function for screenShareNameLabel(a1, (SEL *)&selRef_darkGrayColor, &static Colors.AnnotationDisc.borderColor);
}

_QWORD *Colors.AnnotationDisc.borderColor.unsafeMutableAddressor()
{
  if (one-time initialization token for borderColor != -1)
    swift_once();
  return &static Colors.AnnotationDisc.borderColor;
}

id static Colors.AnnotationDisc.borderColor.getter()
{
  return static Colors.ShareView.separator.getter();
}

void one-time initialization function for fillColor(uint64_t a1)
{
  one-time initialization function for screenShareNameLabel(a1, (SEL *)&selRef_lightGrayColor, &static Colors.AnnotationDisc.fillColor);
}

_QWORD *Colors.AnnotationDisc.fillColor.unsafeMutableAddressor()
{
  if (one-time initialization token for fillColor != -1)
    swift_once();
  return &static Colors.AnnotationDisc.fillColor;
}

id static Colors.AnnotationDisc.fillColor.getter()
{
  return static Colors.ShareView.separator.getter();
}

void one-time initialization function for activeButtonTintColor(uint64_t a1)
{
  one-time initialization function for screenShareNameLabel(a1, (SEL *)&selRef_whiteColor, &static Colors.PeoplePickerViewController.activeButtonTintColor);
}

id static Colors.PeoplePickerViewController.activeButtonTintColor.getter()
{
  return static Colors.ShareView.separator.getter();
}

id one-time initialization function for inactiveButtonTintColor()
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithWhite_alpha_, 1.0, 0.3);
  static Colors.PeoplePickerViewController.inactiveButtonTintColor = (uint64_t)result;
  return result;
}

id static Colors.PeoplePickerViewController.inactiveButtonTintColor.getter()
{
  return static Colors.ShareView.separator.getter();
}

void one-time initialization function for activeButtonBackgroundColor(uint64_t a1)
{
  one-time initialization function for screenShareNameLabel(a1, (SEL *)&selRef_systemGreenColor, &static Colors.PeoplePickerViewController.activeButtonBackgroundColor);
}

id static Colors.PeoplePickerViewController.activeButtonBackgroundColor.getter()
{
  return static Colors.ShareView.separator.getter();
}

void one-time initialization function for inactiveButtonBackgroundColor(uint64_t a1)
{
  one-time initialization function for screenShareNameLabel(a1, (SEL *)&selRef_darkGrayColor, &static Colors.PeoplePickerViewController.inactiveButtonBackgroundColor);
}

id static Colors.PeoplePickerViewController.inactiveButtonBackgroundColor.getter()
{
  return static Colors.ShareView.separator.getter();
}

void one-time initialization function for audioActiveTintColor(uint64_t a1)
{
  one-time initialization function for screenShareNameLabel(a1, (SEL *)&selRef_systemGreenColor, &static Colors.PeoplePickerViewController.audioActiveTintColor);
}

id static Colors.PeoplePickerViewController.audioActiveTintColor.getter()
{
  return static Colors.ShareView.separator.getter();
}

id one-time initialization function for audioActiveBackgroundColor()
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.19, 0.25, 0.17, 1.0);
  static Colors.PeoplePickerViewController.audioActiveBackgroundColor = (uint64_t)result;
  return result;
}

id static Colors.PeoplePickerViewController.audioActiveBackgroundColor.getter()
{
  return static Colors.ShareView.separator.getter();
}

id one-time initialization function for foregroundColor()
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithWhite_alpha_, 0.509803922, 1.0);
  static Colors.Notices.foregroundColor = (uint64_t)result;
  return result;
}

uint64_t *Colors.Notices.foregroundColor.unsafeMutableAddressor()
{
  if (one-time initialization token for foregroundColor != -1)
    swift_once();
  return &static Colors.Notices.foregroundColor;
}

id static Colors.Notices.foregroundColor.getter()
{
  return static Colors.ShareView.separator.getter();
}

void one-time initialization function for subjectColor(uint64_t a1)
{
  one-time initialization function for screenShareNameLabel(a1, (SEL *)&selRef_whiteColor, &static Colors.Notices.subjectColor);
}

uint64_t *Colors.Notices.subjectColor.unsafeMutableAddressor()
{
  if (one-time initialization token for subjectColor != -1)
    swift_once();
  return &static Colors.Notices.subjectColor;
}

id static Colors.Notices.subjectColor.getter()
{
  return static Colors.ShareView.separator.getter();
}

void one-time initialization function for channelNameLabel(uint64_t a1)
{
  one-time initialization function for screenShareNameLabel(a1, (SEL *)&selRef_whiteColor, &static Colors.PTT.channelNameLabel);
}

uint64_t *Colors.PTT.channelNameLabel.unsafeMutableAddressor()
{
  if (one-time initialization token for channelNameLabel != -1)
    swift_once();
  return &static Colors.PTT.channelNameLabel;
}

id static Colors.PTT.channelNameLabel.getter()
{
  return static Colors.ShareView.separator.getter();
}

id one-time initialization function for disclosureButtonLabel()
{
  id result;

  result = OUTLINED_FUNCTION_46_4(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithWhite_alpha_, 1.0);
  static Colors.PTT.disclosureButtonLabel = (uint64_t)result;
  return result;
}

uint64_t *Colors.PTT.disclosureButtonLabel.unsafeMutableAddressor()
{
  if (one-time initialization token for disclosureButtonLabel != -1)
    swift_once();
  return &static Colors.PTT.disclosureButtonLabel;
}

id static Colors.PTT.disclosureButtonLabel.getter()
{
  return static Colors.ShareView.separator.getter();
}

void one-time initialization function for buttonLabel(uint64_t a1)
{
  one-time initialization function for screenShareNameLabel(a1, (SEL *)&selRef_whiteColor, &static Colors.PTT.buttonLabel);
}

uint64_t *Colors.PTT.buttonLabel.unsafeMutableAddressor()
{
  if (one-time initialization token for buttonLabel != -1)
    swift_once();
  return &static Colors.PTT.buttonLabel;
}

id static Colors.PTT.buttonLabel.getter()
{
  return static Colors.ShareView.separator.getter();
}

void one-time initialization function for buttonLabelDisabled(uint64_t a1)
{
  one-time initialization function for screenShareNameLabel(a1, (SEL *)&selRef_darkGrayColor, &static Colors.PTT.buttonLabelDisabled);
}

uint64_t *Colors.PTT.buttonLabelDisabled.unsafeMutableAddressor()
{
  if (one-time initialization token for buttonLabelDisabled != -1)
    swift_once();
  return &static Colors.PTT.buttonLabelDisabled;
}

id static Colors.PTT.buttonLabelDisabled.getter()
{
  return static Colors.ShareView.separator.getter();
}

void one-time initialization function for pttButtonDisabledSymbol()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
  v1 = objc_msgSend(v0, sel_colorWithAlphaComponent_, 0.5);

  static Colors.PTT.pttButtonDisabledSymbol = (uint64_t)v1;
  OUTLINED_FUNCTION_0();
}

uint64_t *Colors.PTT.pttButtonDisabledSymbol.unsafeMutableAddressor()
{
  if (one-time initialization token for pttButtonDisabledSymbol != -1)
    swift_once();
  return &static Colors.PTT.pttButtonDisabledSymbol;
}

id static Colors.PTT.pttButtonDisabledSymbol.getter()
{
  return static Colors.ShareView.separator.getter();
}

void one-time initialization function for pttButtonSymbol(uint64_t a1)
{
  one-time initialization function for screenShareNameLabel(a1, (SEL *)&selRef_whiteColor, &static Colors.PTT.pttButtonSymbol);
}

void one-time initialization function for screenShareNameLabel(uint64_t a1, SEL *a2, _QWORD *a3)
{
  *a3 = objc_msgSend((id)objc_opt_self(), *a2);
  OUTLINED_FUNCTION_0();
}

uint64_t *Colors.PTT.pttButtonSymbol.unsafeMutableAddressor()
{
  if (one-time initialization token for pttButtonSymbol != -1)
    swift_once();
  return &static Colors.PTT.pttButtonSymbol;
}

id static Colors.PTT.pttButtonSymbol.getter()
{
  return static Colors.ShareView.separator.getter();
}

id static UIColor.acceptCall.getter()
{
  return static UIColor.joinConversation.getter((SEL *)&selRef_systemGreenColor);
}

id static UIColor.callAgain.getter()
{
  return static UIColor.joinConversation.getter((SEL *)&selRef_systemGreenColor);
}

id static UIColor.continueHandoff.getter()
{
  return static UIColor.joinConversation.getter((SEL *)&selRef_systemGreenColor);
}

id static UIColor.lagunaHandoff.getter()
{
  return static UIColor.joinConversation.getter((SEL *)&selRef_whiteColor);
}

id static UIColor.acceptVoIPCall.getter()
{
  return static UIColor.joinConversation.getter((SEL *)&selRef_systemBlueColor);
}

id static UIColor.missedCallTitle.getter()
{
  return static UIColor.joinConversation.getter((SEL *)&selRef_systemRedColor);
}

id static UIColor.close.getter()
{
  return static UIColor.close.getter(0.8);
}

id static UIColor.acceptScreenShare.getter()
{
  return static UIColor.joinConversation.getter((SEL *)&selRef_whiteColor);
}

id static UIColor.incomingScreenShareBackground.getter()
{
  return static UIColor.joinConversation.getter((SEL *)&selRef_systemIndigoColor);
}

id static UIColor.denyScreenShareBackground.getter()
{
  return static UIColor.close.getter(0.5);
}

id static UIColor.close.getter(double a1)
{
  id v2;
  id v3;

  v2 = objc_msgSend((id)objc_opt_self(), sel_systemGrayColor);
  v3 = objc_msgSend(v2, sel_colorWithAlphaComponent_, a1);

  return v3;
}

id static UIColor.callIsRecording.getter()
{
  return static UIColor.joinConversation.getter((SEL *)&selRef_systemRedColor);
}

id static UIColor.remoteWaveform.getter()
{
  return static UIColor.joinConversation.getter((SEL *)&selRef_greenColor);
}

id static UIColor.localWaveform.getter()
{
  return static UIColor.joinConversation.getter((SEL *)&selRef_orangeColor);
}

id static UIColor.joinConversation.getter(SEL *a1)
{
  return objc_msgSend((id)objc_opt_self(), *a1);
}

void type metadata accessor for Colors()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for Colors.ShareView()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for Colors.ParticipantViews()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for Colors.MostActiveParticipantView()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for Colors.ParticipantGridView()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for Colors.LocalParticipantView()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for Colors.InCallControls()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for Colors.MultiwayViewController()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for Colors.ParticipantControls()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for Colors.Roster()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for Colors.Captions()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for Colors.AudioVisualization()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for Colors.ParticipantGradients()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for Colors.AnnotationDisc()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for Colors.PeoplePickerViewController()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for Colors.Notices()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for Colors.PTT()
{
  OUTLINED_FUNCTION_34_0();
}

unint64_t lazy protocol witness table accessor for type UIControlState and conformance UIControlState()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type UIControlState and conformance UIControlState;
  if (!lazy protocol witness table cache variable for type UIControlState and conformance UIControlState)
  {
    type metadata accessor for UIControlState(255);
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for UIControlState, v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type UIControlState and conformance UIControlState);
  }
  return result;
}

void OUTLINED_FUNCTION_39_13()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v0 + 112) = v1;
  *(_QWORD *)(v0 + 120) = v2;
  *(_QWORD *)(v0 + 128) = v3;
  *(_QWORD *)(v0 + 136) = v4;
  *(_BYTE *)(v0 + 144) = 1;
}

BOOL static CallScreeningEndingState.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  BOOL v16;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  __int128 v23;
  char v24;

  outlined init with take of CallScreening.EndingAction((__int128 *)a1, (uint64_t)&v19);
  outlined init with take of CallScreening.EndingAction((__int128 *)a2, (uint64_t)&v18);
  v4 = outlined init with take of CallScreening.EndingAction(&v19, (uint64_t)&v20);
  if (v22)
  {
    if (v22 != 1)
    {
      OUTLINED_FUNCTION_21_19(v4, v5, v6, v7, v8, v9, v10, v11, v18);
      if (v24 != 2 || v23 != 0)
        return 0;
      return specialized static CKStateMachineContainer.== infix(_:_:)(*(_QWORD *)(a1 + 24), *(_QWORD *)(a2 + 24));
    }
    v12 = v20;
    v13 = v21;
    OUTLINED_FUNCTION_21_19(v4, v5, v6, v7, v8, v9, v10, v11, v18);
    if (v24 != 1)
      return 0;
  }
  else
  {
    v12 = v20;
    v13 = v21;
    OUTLINED_FUNCTION_21_19(v4, v5, v6, v7, v8, v9, v10, v11, v18);
    if (v24)
      return 0;
  }
  if (v12 == (_QWORD)v23 && v13 == *((_QWORD *)&v23 + 1))
    return specialized static CKStateMachineContainer.== infix(_:_:)(*(_QWORD *)(a1 + 24), *(_QWORD *)(a2 + 24));
  v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
  v16 = 0;
  if ((v15 & 1) != 0)
    return specialized static CKStateMachineContainer.== infix(_:_:)(*(_QWORD *)(a1 + 24), *(_QWORD *)(a2 + 24));
  return v16;
}

uint64_t CallScreeningEndingState.endingAction.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)v0;
  outlined copy of CallScreening.EndingAction(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_BYTE *)(v0 + 16));
  return v1;
}

uint64_t CallScreeningEndingState.stateMachineContainer.getter()
{
  return swift_retain();
}

void (*CallScreeningEndingState.validation.getter(uint64_t a1))(__int128 *a1)
{
  __int128 *v1;
  _OWORD *v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  _BYTE v8[24];

  v3 = (_OWORD *)swift_allocObject();
  v4 = *v1;
  v5 = v1[1];
  v3[1] = *(_OWORD *)(a1 + 16);
  v3[2] = v4;
  v6 = v1[2];
  v3[3] = v5;
  v3[4] = v6;
  outlined init with take of CallScreening.EndingAction(v1, (uint64_t)v8);
  outlined retain of CallScreening.EndingAction((uint64_t)v8);
  swift_retain();
  swift_retain();
  return partial apply for closure #1 in CallScreeningEndingState.validation.getter;
}

void closure #1 in CallScreeningEndingState.validation.getter(__int128 *a1)
{
  _BYTE v1[48];

  outlined init with take of CallScreening.State(a1, (uint64_t)v1);
  __asm { BR              X11 }
}

uint64_t sub_1BD08C464()
{
  lazy protocol witness table accessor for type CKStateMachineError and conformance CKStateMachineError();
  swift_allocError();
  return swift_willThrow();
}

void sub_1BD08C4C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, __int128 a10, __int128 a11, __int128 a12, uint64_t a13, __int128 a14, __int128 a15, __int128 a16, __int128 a17, uint64_t a18, __int128 a19)
{
  __int128 *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  a14 = a10;
  a15 = a11;
  a16 = a12;
  outlined init with take of CallScreening.EndingAction(&a14, (uint64_t)&a17);
  outlined init with take of CallScreening.EndingAction(v19, (uint64_t)&a19);
  outlined init with take of CallScreening.EndingAction(&a17, v20 - 56);
  if (*(_BYTE *)(v20 - 40))
  {
    if (*(_BYTE *)(v20 - 40) != 1)
    {
      outlined init with take of CallScreening.EndingAction(&a19, v20 - 80);
      goto LABEL_13;
    }
    v21 = *(_QWORD *)(v20 - 56);
    v22 = *(_QWORD *)(v20 - 48);
    outlined init with take of CallScreening.EndingAction(&a19, v20 - 104);
    if (*(_BYTE *)(v20 - 88) != 1)
      goto LABEL_13;
    v23 = *(_QWORD *)(v20 - 104);
    v24 = *(_QWORD *)(v20 - 96);
  }
  else
  {
    v21 = *(_QWORD *)(v20 - 56);
    v22 = *(_QWORD *)(v20 - 48);
    outlined init with take of CallScreening.EndingAction(&a19, v20 - 128);
    if (*(_BYTE *)(v20 - 112))
      goto LABEL_13;
    v23 = *(_QWORD *)(v20 - 128);
    v24 = *(_QWORD *)(v20 - 120);
  }
  if (v21 != v23 || v22 != v24)
    _stringCompareWithSmolCheck(_:_:expecting:)();
LABEL_13:
  JUMPOUT(0x1BD08C470);
}

void CallScreeningEndingState.init(prevState:endingAction:endCall:)(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  __int128 v8;

  OUTLINED_FUNCTION_3_32(a1, a2, a3, a4, a5, a6, a7, a8, v8);
  swift_release();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CKStateMachineContainer<CallScreening.State>);
  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_29_14();
  OUTLINED_FUNCTION_34_12();
  OUTLINED_FUNCTION_6_2();
}

{
  __int128 v8;

  OUTLINED_FUNCTION_3_32(a1, a2, a3, a4, a5, a6, a7, a8, v8);
  swift_release();
  swift_release();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CKStateMachineContainer<CallScreening.State>);
  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_29_14();
  OUTLINED_FUNCTION_34_12();
  OUTLINED_FUNCTION_6_2();
}

void CallScreeningEndingState.willExit(to:)(_QWORD *a1, uint64_t a2)
{
  __int128 *v2;
  uint64_t v3;
  __int128 *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t);
  NSObject *v17;
  os_log_type_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  os_log_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _OWORD v37[3];
  uint64_t v38;

  v4 = v2;
  v7 = type metadata accessor for Logger();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = v2[1];
  v37[0] = *v2;
  v37[1] = v11;
  v37[2] = v2[2];
  v12 = MEMORY[0x1C3B750C8](&protocol conformance descriptor for CallScreeningEndingState<A>, a2);
  v13 = CallScreeningState.stateMachine.getter(a2, v12);
  if (v13)
  {
    v14 = v13;
    v35 = v8;
    outlined init with take of CallScreening.EndingAction(v4, (uint64_t)v37);
    v15 = *(_QWORD *)(a2 + 16);
    v16 = *(void (**)(uint64_t))(*(_QWORD *)(a2 + 24) + 16);
    v34 = v14;
    v16(v15);
    outlined retain of CallScreening.EndingAction((uint64_t)v37);
    swift_retain();
    OUTLINED_FUNCTION_13_8();
    OUTLINED_FUNCTION_4_27();
    outlined retain of CallScreening.EndingAction((uint64_t)v37);
    swift_retain();
    OUTLINED_FUNCTION_13_8();
    OUTLINED_FUNCTION_4_27();
    v17 = Logger.logObject.getter();
    v18 = static os_log_type_t.default.getter();
    v19 = v18;
    if (os_log_type_enabled(v17, v18))
    {
      v20 = OUTLINED_FUNCTION_105();
      v30 = v19;
      v21 = v20;
      v31 = OUTLINED_FUNCTION_105();
      v38 = v31;
      *(_DWORD *)v21 = 136446466;
      v32 = v7;
      v29 = v17;
      v22 = CallScreeningEndingState.description.getter();
      v24 = v23;
      OUTLINED_FUNCTION_28_16();
      OUTLINED_FUNCTION_27_10();
      OUTLINED_FUNCTION_14_12();
      v36 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v22, v24, &v38);
      v33 = v3;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_28_16();
      OUTLINED_FUNCTION_27_10();
      OUTLINED_FUNCTION_14_12();
      *(_WORD *)(v21 + 12) = 2082;
      outlined retain of CallScreening.State(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined copy of CallScreening.State);
      CallScreening.State.description.getter();
      v26 = v25;
      v28 = v27;
      OUTLINED_FUNCTION_18_28();
      v36 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v26, v28, &v38);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_18_28();
      OUTLINED_FUNCTION_18_28();
      _os_log_impl(&dword_1BD004000, v29, (os_log_type_t)v30, "%{public}s Exiting to %{public}s", (uint8_t *)v21, 0x16u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_60();
    }
    OUTLINED_FUNCTION_28_16();
    OUTLINED_FUNCTION_27_10();
    OUTLINED_FUNCTION_14_12();
    OUTLINED_FUNCTION_28_16();
    OUTLINED_FUNCTION_27_10();
    OUTLINED_FUNCTION_14_12();
    OUTLINED_FUNCTION_4_27();
    OUTLINED_FUNCTION_4_27();
    OUTLINED_FUNCTION_25_19();

    (*(void (**)(char *, uint64_t))(v35 + 8))(v10, v7);
  }
  OUTLINED_FUNCTION_1_29();
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> CallScreeningEndingState.enteredState()()
{
  uint64_t v0;
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  NSObject *v23;
  uint64_t v24;
  void (*v25)(void);
  NSObject *v26;
  os_log_type_t v27;
  _BOOL4 v28;
  uint8_t *v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  char *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  os_log_type_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  os_log_type_t v45;
  uint8_t *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  _OWORD *v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  _OWORD *v60;
  __int128 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  char *v67;
  uint64_t v68;
  void (*v69)(void);
  NSObject *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(char *, uint64_t);
  _OWORD *v78;
  _OWORD v80[4];
  uint64_t v81;

  v2 = v0;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1E0C80A78](v3);
  v76 = (uint64_t)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Logger();
  v74 = *(_QWORD *)(v5 - 8);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v6);
  v11 = (char *)&v63 - v10;
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v63 - v13;
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v63 - v15;
  v17 = v1[1];
  v80[0] = *v1;
  v80[1] = v17;
  v78 = v1;
  v80[2] = v1[2];
  v18 = MEMORY[0x1C3B750C8](&protocol conformance descriptor for CallScreeningEndingState<A>, v2);
  if (CallScreeningState.stateMachine.getter(v2, v18))
  {
    v67 = v8;
    v65 = v14;
    v66 = v11;
    v72 = v5;
    v19 = *(_QWORD *)v78;
    v20 = *((_QWORD *)v78 + 1);
    v21 = *((unsigned __int8 *)v78 + 16);
    v22 = *((_QWORD *)v78 + 3);
    v23 = *((_QWORD *)v78 + 5);
    v24 = *(_QWORD *)(v2 + 24);
    v25 = *(void (**)(void))(v24 + 16);
    v75 = *(_QWORD *)(v2 + 16);
    v69 = v25;
    v25();
    LODWORD(v77) = v21;
    outlined copy of CallScreening.EndingAction(v19, v20, v21);
    v73 = v22;
    swift_retain();
    v70 = v23;
    OUTLINED_FUNCTION_11_8();
    v26 = Logger.logObject.getter();
    v27 = static os_log_type_t.default.getter();
    v28 = os_log_type_enabled(v26, v27);
    v71 = v24;
    v68 = v19;
    if (v28)
    {
      v29 = (uint8_t *)OUTLINED_FUNCTION_105();
      v64 = OUTLINED_FUNCTION_105();
      *(_QWORD *)&v80[0] = v64;
      *(_DWORD *)v29 = 136446210;
      v30 = CallScreeningEndingState.description.getter();
      v81 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v30, v31, (uint64_t *)v80);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      outlined consume of CallScreening.EndingAction(v19, v20, v77);
      OUTLINED_FUNCTION_14_12();
      OUTLINED_FUNCTION_36_16();
      _os_log_impl(&dword_1BD004000, v26, v27, "EnteredState %{public}s", v29, 0xCu);
      OUTLINED_FUNCTION_17_18();
      OUTLINED_FUNCTION_60();
    }
    outlined consume of CallScreening.EndingAction(v19, v20, v77);
    v32 = v73;
    OUTLINED_FUNCTION_14_12();
    OUTLINED_FUNCTION_36_16();

    v33 = *(void (**)(char *, uint64_t))(v74 + 8);
    v34 = v72;
    v33(v16, v72);
    if ((_DWORD)v77)
    {
      if ((_DWORD)v77 == 1)
      {
        OUTLINED_FUNCTION_26_14();
        v35 = v65;
        OUTLINED_FUNCTION_5_25();
        swift_bridgeObjectRetain_n();
        Logger.logObject.getter();
        v36 = OUTLINED_FUNCTION_31_6();
        if (OUTLINED_FUNCTION_22_8(v36))
        {
          OUTLINED_FUNCTION_105();
          *(_QWORD *)&v80[0] = OUTLINED_FUNCTION_105();
          OUTLINED_FUNCTION_16_14(4.8751e-34);
          v37 = OUTLINED_FUNCTION_23_19();
          OUTLINED_FUNCTION_15_25(v37);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          OUTLINED_FUNCTION_12_23();
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_22_0(&dword_1BD004000, v38, v39, "Ending State EnteredState() will end call %{public}s");
          OUTLINED_FUNCTION_17_18();
          OUTLINED_FUNCTION_60();
        }
        v54 = v68;
        OUTLINED_FUNCTION_12_23();

        v77(v35, v34);
        OUTLINED_FUNCTION_37_11();
        v55 = type metadata accessor for TaskPriority();
        OUTLINED_FUNCTION_20_25(v55);
        outlined copy of CallScreening.EndingAction(v54, v32, 1u);
        v56 = one-time initialization token for shared;
        swift_retain();
        swift_retain();
        swift_unknownObjectRetain();
        if (v56 != -1)
          swift_once();
        v57 = lazy protocol witness table accessor for type CKStateMachineActor.ActorType and conformance CKStateMachineActor.ActorType();
        v58 = (_QWORD *)swift_allocObject();
        v59 = OUTLINED_FUNCTION_19_25(v58);
        v61 = v60[1];
        *((_OWORD *)v59 + 3) = *v60;
        *((_OWORD *)v59 + 4) = v61;
        *((_OWORD *)v59 + 5) = v60[2];
        v59[12] = v54;
        v59[13] = v32;
        v59[14] = v57;
        OUTLINED_FUNCTION_11_8();
        _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
      }
      else
      {
        OUTLINED_FUNCTION_5_25();
        Logger.logObject.getter();
        v45 = OUTLINED_FUNCTION_31_6();
        if (os_log_type_enabled(v23, v45))
        {
          v46 = (uint8_t *)OUTLINED_FUNCTION_105();
          *(_WORD *)v46 = 0;
          _os_log_impl(&dword_1BD004000, v23, v45, "Ending State EnteredState() will passthrough to listening state", v46, 2u);
          OUTLINED_FUNCTION_60();
        }

        v33(v67, v34);
        OUTLINED_FUNCTION_37_11();
        v47 = type metadata accessor for TaskPriority();
        OUTLINED_FUNCTION_20_25(v47);
        v48 = one-time initialization token for shared;
        OUTLINED_FUNCTION_13_8();
        swift_retain();
        swift_unknownObjectRetain();
        if (v48 != -1)
          swift_once();
        v49 = lazy protocol witness table accessor for type CKStateMachineActor.ActorType and conformance CKStateMachineActor.ActorType();
        v50 = (_QWORD *)swift_allocObject();
        v51 = OUTLINED_FUNCTION_19_25(v50);
        v51[6] = v49;
        v53 = v52[1];
        *(_OWORD *)(v51 + 7) = *v52;
        *(_OWORD *)(v51 + 9) = v53;
        *(_OWORD *)(v51 + 11) = v52[2];
        OUTLINED_FUNCTION_11_8();
        _sScTss5Error_pRs_rlE8priority9operationScTyxsAA_pGScPSg_xyYaKYAcntcfCyt_Tgm5(v76, (uint64_t)&async function pointer to partial apply for closure #2 in CallScreeningEndingState.enteredState(), v48);
      }
      swift_unknownObjectRelease();
      swift_release();
    }
    else
    {
      OUTLINED_FUNCTION_26_14();
      v40 = v66;
      OUTLINED_FUNCTION_5_25();
      swift_bridgeObjectRetain();
      Logger.logObject.getter();
      v41 = OUTLINED_FUNCTION_31_6();
      if (OUTLINED_FUNCTION_22_8(v41))
      {
        OUTLINED_FUNCTION_105();
        *(_QWORD *)&v80[0] = OUTLINED_FUNCTION_105();
        OUTLINED_FUNCTION_16_14(4.8751e-34);
        v42 = OUTLINED_FUNCTION_23_19();
        OUTLINED_FUNCTION_15_25(v42);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        OUTLINED_FUNCTION_8_34((uint64_t)"rolsViewControllerDelegate");
        OUTLINED_FUNCTION_8_34((uint64_t)"rolsViewControllerDelegate");
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_22_0(&dword_1BD004000, v43, v44, "Ending State EnteredState() will wait for %{public}s to disconnect");
        OUTLINED_FUNCTION_17_18();
        OUTLINED_FUNCTION_60();
      }
      OUTLINED_FUNCTION_25_19();
      v62 = v68;
      OUTLINED_FUNCTION_8_34(v68);
      OUTLINED_FUNCTION_8_34(v62);

      v77(v40, v34);
    }
  }
  OUTLINED_FUNCTION_1_29();
}

uint64_t closure #1 in CallScreeningEndingState.enteredState()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v12;
  _QWORD *v13;
  uint64_t (*v15)(uint64_t, uint64_t);
  uint64_t v16;

  v8[6] = a8;
  v8[7] = v16;
  v8[4] = a6;
  v8[5] = a7;
  v8[3] = a5;
  v12 = type metadata accessor for Logger();
  v8[8] = v12;
  v8[9] = *(_QWORD *)(v12 - 8);
  v8[10] = swift_task_alloc();
  if (one-time initialization token for shared != -1)
    swift_once();
  v8[11] = static CKStateMachineActor.shared;
  v15 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a4 + 32) + *(_QWORD *)(a4 + 32));
  v13 = (_QWORD *)swift_task_alloc();
  v8[12] = v13;
  *v13 = v8;
  v13[1] = closure #1 in CallScreeningEndingState.enteredState();
  return v15(a5, a6);
}

uint64_t closure #1 in CallScreeningEndingState.enteredState()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  _QWORD *v4;

  OUTLINED_FUNCTION_30();
  v3 = *v2;
  *v4 = v3;
  *(_QWORD *)(v0 + 104) = v1;
  swift_task_dealloc();
  if (v1)
    return OUTLINED_FUNCTION_2_8();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v3 + 8))();
}

{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  unint64_t v3;
  uint64_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  (*(void (**)(_QWORD))(*(_QWORD *)(v0 + 56) + 16))(*(_QWORD *)(v0 + 48));
  swift_bridgeObjectRetain_n();
  v1 = Logger.logObject.getter();
  v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = *(_QWORD *)(v0 + 32);
    v4 = *(_QWORD *)(v0 + 24);
    v5 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    *(_DWORD *)v5 = 136446210;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 16) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v4, v3, &v10);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1BD004000, v1, v2, "Ending State EnteredState() will end call %{public}s and wait for it to disconnect", v5, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_60();
  }
  v7 = *(_QWORD *)(v0 + 72);
  v6 = *(_QWORD *)(v0 + 80);
  v8 = *(_QWORD *)(v0 + 64);

  swift_bridgeObjectRelease_n();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t closure #2 in CallScreeningEndingState.enteredState()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[4] = a6;
  v7[5] = a7;
  v7[2] = a4;
  v7[3] = a5;
  if (one-time initialization token for shared != -1)
    swift_once();
  v7[6] = static CKStateMachineActor.shared;
  return swift_task_switch();
}

uint64_t closure #2 in CallScreeningEndingState.enteredState()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t (*v10)(void);

  v5 = v4[5];
  v6 = type metadata accessor for CallScreeningEndingState(0, v4[4], v5, a4);
  CallScreeningEndingState.validation.getter(v6);
  v4[7] = v7;
  v10 = (uint64_t (*)(void))(**(int **)(v5 + 32) + *(_QWORD *)(v5 + 32));
  v8 = (_QWORD *)swift_task_alloc();
  v4[8] = (uint64_t)v8;
  *v8 = v4;
  v8[1] = closure #2 in CallScreeningEndingState.enteredState();
  OUTLINED_FUNCTION_14_35();
  return OUTLINED_FUNCTION_13_26(v10);
}

uint64_t closure #2 in CallScreeningEndingState.enteredState()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  _QWORD *v4;

  OUTLINED_FUNCTION_30();
  v3 = *v2;
  *v4 = v3;
  *(_QWORD *)(v0 + 72) = v1;
  swift_task_dealloc();
  if (v1)
    return OUTLINED_FUNCTION_2_8();
  swift_release();
  return (*(uint64_t (**)(void))(v3 + 8))();
}

{
  uint64_t v0;

  swift_release();
  return OUTLINED_FUNCTION_16(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t _sScTss5Error_pRs_rlE8priority9operationScTyxsAA_pGScPSg_xyYaKYAcntcfCyt_Tgm5(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = type metadata accessor for TaskPriority();
  if (__swift_getEnumTagSinglePayload(a1, 1, v5) == 1)
  {
    outlined destroy of TaskPriority?(a1);
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  }
  if (*(_QWORD *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t CallScreeningEndingState.update(with:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[15] = a2;
  v3[16] = v2;
  v3[14] = a1;
  if (one-time initialization token for shared != -1)
    swift_once();
  v3[17] = static CKStateMachineActor.shared;
  return swift_task_switch();
}

uint64_t CallScreeningEndingState.update(with:)()
{
  uint64_t v0;
  _OWORD *v1;
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t (*v13)(void);

  v2 = *(_QWORD *)(v0 + 120);
  v1 = *(_OWORD **)(v0 + 128);
  v4 = v1[1];
  v3 = v1[2];
  *(_OWORD *)(v0 + 16) = *v1;
  *(_OWORD *)(v0 + 32) = v4;
  *(_OWORD *)(v0 + 48) = v3;
  v5 = MEMORY[0x1C3B750C8](&protocol conformance descriptor for CallScreeningEndingState<A>, v2);
  v6 = CallScreeningState.stateMachine.getter(v2, v5);
  *(_QWORD *)(v0 + 144) = v6;
  if (!v6)
    return (*(uint64_t (**)(void))(v0 + 8))();
  outlined init with take of CallScreening.EndingAction(*(__int128 **)(v0 + 128), v0 + 88);
  outlined init with take of CallScreening.EndingAction((__int128 *)(v0 + 88), v0 + 64);
  if (*(unsigned __int8 *)(v0 + 80) <= 1u)
  {
    v7 = *(_QWORD *)(v0 + 112);
    if (*(_QWORD *)(v7 + 16) == *(_QWORD *)(v0 + 64) && *(_QWORD *)(v7 + 24) == *(_QWORD *)(v0 + 72))
    {
LABEL_9:
      if (*(_BYTE *)(v7 + 32) == 6)
      {
        v9 = *(_QWORD *)(v0 + 120);
        CallScreeningEndingState.validation.getter(v9);
        *(_QWORD *)(v0 + 152) = v10;
        v13 = (uint64_t (*)(void))(**(int **)(*(_QWORD *)(v9 + 24) + 32) + *(_QWORD *)(*(_QWORD *)(v9 + 24) + 32));
        v11 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 160) = v11;
        *v11 = v0;
        v11[1] = CallScreeningEndingState.update(with:);
        OUTLINED_FUNCTION_14_35();
        return OUTLINED_FUNCTION_13_26(v13);
      }
      goto LABEL_11;
    }
    if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      v7 = *(_QWORD *)(v0 + 112);
      goto LABEL_9;
    }
  }
LABEL_11:
  swift_unknownObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_30();
  *v3 = *v2;
  *(_QWORD *)(v0 + 168) = v1;
  swift_task_dealloc();
  if (!v1)
    swift_release();
  return OUTLINED_FUNCTION_2_8();
}

{
  uint64_t v0;

  swift_unknownObjectRelease();
  return OUTLINED_FUNCTION_16(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;

  swift_release();
  swift_unknownObjectRelease();
  return OUTLINED_FUNCTION_16(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t protocol witness for CallScreeningState.stateMachineContainer.getter in conformance CallScreeningEndingState<A>()
{
  return swift_retain();
}

void protocol witness for CallScreeningState.willExit(to:) in conformance CallScreeningEndingState<A>(_QWORD *a1, uint64_t a2)
{
  CallScreeningEndingState.willExit(to:)(a1, a2);
}

void protocol witness for CallScreeningState.enteredState() in conformance CallScreeningEndingState<A>()
{
  CallScreeningEndingState.enteredState()();
}

uint64_t protocol witness for UpdatesWithCallStatus.update(with:) in conformance CallScreeningEndingState<A>(uint64_t a1, uint64_t a2)
{
  _OWORD *v2;
  uint64_t v3;
  __int128 v6;
  _QWORD *v7;

  v6 = v2[1];
  *(_OWORD *)(v3 + 16) = *v2;
  *(_OWORD *)(v3 + 32) = v6;
  *(_OWORD *)(v3 + 48) = v2[2];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 64) = v7;
  *v7 = v3;
  v7[1] = protocol witness for UpdatesWithCallStatus.update(with:) in conformance CallScreeningEndingState<A>;
  return CallScreeningEndingState.update(with:)(a1, a2);
}

uint64_t protocol witness for UpdatesWithCallStatus.update(with:) in conformance CallScreeningEndingState<A>()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_16(*(uint64_t (**)(void))(v2 + 8));
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance CallScreeningEndingState<A>(_OWORD *a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[3];
  _OWORD v8[3];

  v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  v3 = *a2;
  v4 = a2[1];
  v7[2] = a1[2];
  v8[0] = v3;
  v5 = a2[2];
  v8[1] = v4;
  v8[2] = v5;
  return static CallScreeningEndingState.== infix(_:_:)((uint64_t)v7, (uint64_t)v8);
}

uint64_t CallScreeningEndingState.description.getter()
{
  __int128 *v0;
  Swift::String v1;
  Swift::String v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  __int128 v7;

  *(_QWORD *)&v7 = 0;
  *((_QWORD *)&v7 + 1) = 0xE000000000000000;
  _StringGuts.grow(_:)(29);
  v5 = 0;
  v6 = 0xE000000000000000;
  v1._object = (void *)0x80000001BD66FD30;
  v1._countAndFlagsBits = 0xD00000000000001ALL;
  String.append(_:)(v1);
  outlined init with take of CallScreening.EndingAction(v0, (uint64_t)&v7);
  outlined init with take of CallScreening.EndingAction(&v7, (uint64_t)&v4);
  _print_unlocked<A, B>(_:_:)();
  v2._countAndFlagsBits = 41;
  v2._object = (void *)0xE100000000000000;
  String.append(_:)(v2);
  return v5;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance CallScreeningEndingState<A>()
{
  return CallScreeningEndingState.description.getter();
}

unint64_t lazy protocol witness table accessor for type CKStateMachineActor.ActorType and conformance CKStateMachineActor.ActorType()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type CKStateMachineActor.ActorType and conformance CKStateMachineActor.ActorType;
  if (!lazy protocol witness table cache variable for type CKStateMachineActor.ActorType and conformance CKStateMachineActor.ActorType)
  {
    v1 = type metadata accessor for CKStateMachineActor.ActorType();
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for CKStateMachineActor.ActorType, v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type CKStateMachineActor.ActorType and conformance CKStateMachineActor.ActorType);
  }
  return result;
}

uint64_t sub_1BD08DB38()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  outlined consume of CallScreening.EndingAction(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_BYTE *)(v0 + 72));
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in CallScreeningEndingState.enteredState()(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[4];
  v5 = v1[5];
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = partial apply for closure #2 in CallScreeningEndingState.enteredState();
  return closure #2 in CallScreeningEndingState.enteredState()(a1, v6, v7, v8, (uint64_t)(v1 + 7), v4, v5);
}

uint64_t partial apply for closure #2 in CallScreeningEndingState.enteredState()()
{
  uint64_t v0;

  OUTLINED_FUNCTION_0_2();
  return OUTLINED_FUNCTION_16(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1BD08DC34()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  outlined consume of CallScreening.EndingAction(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_BYTE *)(v0 + 64));
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in CallScreeningEndingState.enteredState()(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[4];
  v5 = v1[2];
  v6 = v1[3];
  v7 = (uint64_t)(v1 + 6);
  v8 = v1[12];
  v9 = v1[13];
  v10 = v1[14];
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = partial apply for closure #1 in SyncedScreeningAlphaGradientView.gradient(for:);
  return closure #1 in CallScreeningEndingState.enteredState()(a1, v5, v6, v7, v8, v9, v10, v4);
}

uint64_t instantiation function for generic protocol witness table for CallScreeningEndingState<A>(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for CallScreeningEndingState<A>);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t destroy for CallScreeningEndingState(uint64_t a1)
{
  outlined consume of CallScreening.EndingAction(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for CallScreeningEndingState(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  uint64_t v7;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 16);
  outlined copy of CallScreening.EndingAction(*(_QWORD *)a2, v5, v6);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  v7 = *(_QWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = v7;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for CallScreeningEndingState(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  uint64_t v10;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 16);
  outlined copy of CallScreening.EndingAction(*(_QWORD *)a2, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  v9 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v6;
  outlined consume of CallScreening.EndingAction(v7, v8, v9);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  v10 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v10;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for CallScreeningEndingState(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  uint64_t v8;

  v4 = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v7 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v4;
  outlined consume of CallScreening.EndingAction(v5, v6, v7);
  swift_release();
  v8 = *(_QWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = v8;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for CallScreeningEndingState(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 48))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CallScreeningEndingState(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for CallScreeningEndingState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CallScreeningEndingState);
}

uint64_t sub_1BD08DF8C()
{
  uint64_t v0;

  outlined consume of CallScreening.EndingAction(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void partial apply for closure #1 in CallScreeningEndingState.validation.getter(__int128 *a1)
{
  closure #1 in CallScreeningEndingState.validation.getter(a1);
}

unint64_t lazy protocol witness table accessor for type CKStateMachineError and conformance CKStateMachineError()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type CKStateMachineError and conformance CKStateMachineError;
  if (!lazy protocol witness table cache variable for type CKStateMachineError and conformance CKStateMachineError)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for CKStateMachineError, &type metadata for CKStateMachineError);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type CKStateMachineError and conformance CKStateMachineError);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type CKStateMachineError and conformance CKStateMachineError;
  if (!lazy protocol witness table cache variable for type CKStateMachineError and conformance CKStateMachineError)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for CKStateMachineError, &type metadata for CKStateMachineError);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type CKStateMachineError and conformance CKStateMachineError);
  }
  return result;
}

uint64_t _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSaySo06UIMenuB0CG_AGs5NeverOTg50108_s15ConversationKit0A31ControlsShareMenuButtonProviderC29capturedDidChangeNotificationyy10Foundation0K0VFSo6d13CAIXEfU_So0M7B8CAKXEfU_0G3Kit0gjklmN0CTf1cn_n(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  void *v8;
  unint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v1 = a1;
  if (a1 >> 62)
  {
LABEL_22:
    swift_bridgeObjectRetain();
    v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v2)
      goto LABEL_3;
LABEL_23:
    swift_release();
    return MEMORY[0x1E0DEE9D8];
  }
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v2)
    goto LABEL_23;
LABEL_3:
  v21 = MEMORY[0x1E0DEE9D8];
  result = specialized ContiguousArray.reserveCapacity(_:)();
  if ((v2 & 0x8000000000000000) == 0)
  {
    v19 = v2;
    v4 = 0;
    v20 = v1 & 0xC000000000000001;
    while (1)
    {
      if (v2 == v4)
      {
        __break(1u);
        goto LABEL_22;
      }
      v5 = v20 ? (id)MEMORY[0x1C3B73D18](v4, v1) : *(id *)(v1 + 8 * v4 + 32);
      v6 = v5;
      objc_opt_self();
      v7 = swift_dynamicCastObjCClass();
      if (v7)
        break;
LABEL_19:
      ++v4;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      if (v2 == v4)
      {
        v18 = v21;
        swift_release();
        return v18;
      }
    }
    v8 = (void *)v7;
    v9 = v1;
    v10 = v6;
    v11 = objc_msgSend(v8, sel_identifier);
    v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v14 = v13;
    if (v12 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v14 == v15)
    {

      swift_bridgeObjectRelease_n();
    }
    else
    {
      v17 = _stringCompareWithSmolCheck(_:_:expecting:)();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v17 & 1) == 0)
        goto LABEL_18;
    }
    ConversationControlsShareMenuButtonProvider.determineState(for:)((UIAction)v8);
LABEL_18:

    v1 = v9;
    v2 = v19;
    goto LABEL_19;
  }
  __break(1u);
  return result;
}

void ConversationControlsShareMenuButtonProvider.shareScreenCountdownView.didset(void *a1)
{
  uint64_t v1;
  void *v2;
  _BYTE *v3;
  _BYTE *v4;

  if (a1)
    objc_msgSend(a1, sel_removeFromSuperview);
  swift_beginAccess();
  v2 = (void *)MEMORY[0x1C3B752C0](v1 + 16);
  if (v2)
  {
    v3 = *(_BYTE **)(v1 + 208);
    if (v3)
    {
      v3[OBJC_IVAR____TtC15ConversationKit13CountdownView_isCountingDown] = 1;
      v4 = v3;
      ConversationControlsShareMenuButtonProvider.countdownEphemeralAlert.getter();
    }

  }
}

void ConversationControlsShareMenuButtonProvider.countdownEphemeralAlert.getter()
{
  void *v0;
  id v1;
  uint64_t v2;

  v0 = (void *)objc_opt_self();
  v1 = OUTLINED_FUNCTION_51_8(v0);
  OUTLINED_FUNCTION_0_3(0x535F4E4545524353, 0xEE00474E49524148);
  OUTLINED_FUNCTION_10_3();
  OUTLINED_FUNCTION_17_8(v2, (unint64_t *)&lazy cache variable for type metadata for NSMutableAttributedString);
  OUTLINED_FUNCTION_50_7();
}

void sub_1BD08E504()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  objc_class *v5;
  NSBundle v6;
  uint64_t v7;
  void *v8;
  void *v9;
  Swift::String v10;

  if (one-time initialization token for shared != -1)
    swift_once();
  v1 = (*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 176))();
  if ((v1 & 1) != 0)
    v2 = 0xD00000000000002ELL;
  else
    v2 = 0xD00000000000002FLL;
  if ((v1 & 1) != 0)
    v3 = 0x80000001BD670110;
  else
    v3 = 0x80000001BD6700E0;
  v4 = OUTLINED_FUNCTION_17_8(v1, (unint64_t *)&lazy cache variable for type metadata for NSAttributedString);
  v5 = (objc_class *)OUTLINED_FUNCTION_123(v4, (const char *)(v0 + 1326));
  v6.super.isa = v5;
  v7 = OUTLINED_FUNCTION_49_2(v2, v3, 0x61737265766E6F43, 0xEF74694B6E6F6974, v6);
  v9 = v8;
  OUTLINED_FUNCTION_53();

  v10._countAndFlagsBits = v7;
  v10._object = v9;
  NSMutableAttributedString.__allocating_init(string:)(v10);
}

id closure #1 in ConversationControlsShareMenuButtonProvider.shareScreenCountdownView.didset(void *a1, uint64_t a2, uint64_t a3)
{
  objc_msgSend(a1, sel_setSelected_, 0);
  return objc_msgSend(a1, sel_addSubview_, a3);
}

void ConversationControlsShareMenuButtonProvider.shareScreenCountdownView.setter(void *a1)
{
  uint64_t v1;
  void *v2;
  id v3;

  v2 = *(void **)(v1 + 208);
  *(_QWORD *)(v1 + 208) = a1;
  v3 = a1;
  ConversationControlsShareMenuButtonProvider.shareScreenCountdownView.didset(v2);

}

Swift::Void __swiftcall ConversationControlsShareMenuButtonProvider.buttonChanged()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  objc_class *v17;
  unint64_t v18;
  NSBundle v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v2 = v0;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<ForegroundApp?>.Publisher);
  v36 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_77();
  v6 = v5 - v4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.RemoveDuplicates<Published<ForegroundApp?>.Publisher>);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_11_2();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.RemoveDuplicates<AnyPublisher<ShareMenuActionState, Never>>);
  v35 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_77();
  v12 = v11 - v10;
  ControlsButtonProvider.buttonChanged()();
  OUTLINED_FUNCTION_1();
  v13 = MEMORY[0x1C3B752C0](v0 + 16);
  if (v13)
  {
    v14 = (void *)v13;
    v31 = v3;
    v32 = v1;
    v33 = v8;
    v34 = v7;
    type metadata accessor for ConversationControlsButton();
    if (swift_dynamicCastClass())
    {
      v15 = (void *)objc_opt_self();
      v16 = v14;
      v17 = (objc_class *)objc_msgSend(v15, sel_conversationKit);
      OUTLINED_FUNCTION_61();
      v18 = OUTLINED_FUNCTION_5_26(28);
      v19.super.isa = v17;
      v23 = OUTLINED_FUNCTION_49_2(v18, v20, v21, v22, v19);
      v25 = v24;

      ConversationControlsButton.localizedName.setter(v23, v25);
    }
    outlined bridged method (mbnn) of @objc NSObject.accessibilityIdentifier.setter(0x6E654D6572616873, 0xEF6E6F7474754275, v14);
    v26 = objc_msgSend(v14, sel_addTarget_action_forControlEvents_, v0, sel_screenSharingButtonPressed, 64);
    v27 = *(_QWORD **)(v0 + 136);
    (*(void (**)(id))((*MEMORY[0x1E0DEEDD8] & *v27) + 0x670))(v26);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnyPublisher<ShareMenuActionState, Never>);
    lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type AnyPublisher<ShareMenuActionState, Never> and conformance AnyPublisher<A, B>, &demangling cache variable for type metadata for AnyPublisher<ShareMenuActionState, Never>, MEMORY[0x1E0C95D90]);
    lazy protocol witness table accessor for type ShareMenuActionState and conformance ShareMenuActionState();
    Publisher<>.removeDuplicates()();
    OUTLINED_FUNCTION_11_0();
    OUTLINED_FUNCTION_15();
    OUTLINED_FUNCTION_7_4();
    lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type Publishers.RemoveDuplicates<AnyPublisher<ShareMenuActionState, Never>> and conformance Publishers.RemoveDuplicates<A>, &demangling cache variable for type metadata for Publishers.RemoveDuplicates<AnyPublisher<ShareMenuActionState, Never>>, MEMORY[0x1E0C958E0]);
    v28 = Publisher<>.sink(receiveValue:)();
    OUTLINED_FUNCTION_11_0();
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v12, v9);
    swift_beginAccess();
    *(_QWORD *)(v2 + 48) = v28;
    v29 = swift_release();
    (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v27) + 0x790))(v29);
    lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type Published<ForegroundApp?>.Publisher and conformance Published<A>.Publisher, &demangling cache variable for type metadata for Published<ForegroundApp?>.Publisher, MEMORY[0x1E0C96190]);
    lazy protocol witness table accessor for type ForegroundApp? and conformance <A> A?();
    Publisher<>.removeDuplicates()();
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v6, v31);
    OUTLINED_FUNCTION_15();
    OUTLINED_FUNCTION_7_4();
    lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type Publishers.RemoveDuplicates<Published<ForegroundApp?>.Publisher> and conformance Publishers.RemoveDuplicates<A>, &demangling cache variable for type metadata for Publishers.RemoveDuplicates<Published<ForegroundApp?>.Publisher>, MEMORY[0x1E0C958E0]);
    v30 = Publisher<>.sink(receiveValue:)();

    OUTLINED_FUNCTION_11_0();
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v32, v34);
    *(_QWORD *)(v2 + 160) = v30;
    swift_release();
  }
  OUTLINED_FUNCTION_52_1();
}

void closure #1 in ConversationControlsShareMenuButtonProvider.buttonChanged()(unsigned __int8 *a1)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  __int16 v4;
  int v5;
  uint64_t Strong;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  int v11;
  uint64_t v12;
  __int16 v13;
  __int16 v14;
  _QWORD *v15;
  uint64_t (*v16)(void);
  _QWORD *v17;
  _QWORD *v18;
  id v19;
  ConversationKit::ShareMenuActionState v20;

  v1 = *a1;
  v2 = a1[1];
  v3 = *((_QWORD *)a1 + 1);
  v4 = a1[16];
  v5 = a1[17];
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v7 = Strong;
    v8 = Strong + 16;
    swift_beginAccess();
    v9 = (void *)MEMORY[0x1C3B752C0](v8);
    if (v9)
    {
      v10 = v9;
      objc_msgSend(v9, sel_setEnabled_, v1);
      if (v2)
        v11 = 256;
      else
        v11 = 0;
      v12 = v11 | v1;
      if (v5)
        v13 = 256;
      else
        v13 = 0;
      v14 = v13 | v4;
      ConversationControlsShareMenuButtonProvider.updateShareScreenCountdownView(with:)(v11 | v1, v3, v14);
      v15 = *(_QWORD **)(v7 + 136);
      v16 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v15) + 0x778);
      v17 = v15;
      v18 = (_QWORD *)v16();

      ConversationControlsShareMenuButtonProvider.updateButtonStyle(buttonState:foregroundApp:)(v12, v3, v14, v18);
      v19 = v10;
      *(_QWORD *)&v20.buttonEnabled = v12;
      objc_msgSend(v19, sel_setShowsMenuAsPrimaryAction_, ConversationControlsShareMenuButtonProvider.shouldEnableMenu(state:)(v20));
      swift_release();

    }
    else
    {
      swift_release();
    }
  }
}

void ConversationControlsShareMenuButtonProvider.updateShareScreenCountdownView(with:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  if ((a3 & 1) != 0)
  {
    ConversationControlsShareMenuButtonProvider.shareScreenCountdownView.setter(0);
  }
  else
  {
    v4 = *(_QWORD *)(v3 + 208);
    if (v4
      || (v5 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CountdownView()), sel_init),
          ConversationControlsShareMenuButtonProvider.shareScreenCountdownView.setter(v5),
          (v4 = *(_QWORD *)(v3 + 208)) != 0))
    {
      v6 = *(void **)(v4 + OBJC_IVAR____TtC15ConversationKit13CountdownView_countdownLabel);
      _sSo8NSObjectCMaTm_0(0, &lazy cache variable for type metadata for NSNumberFormatter);
      v9 = v6;
      v7 = static NSNumberFormatter.localizedStringForInt(_:)();
      outlined bridged method (mbnn) of @objc UILabel.text.setter(v7, v8, v9);

    }
  }
}

void ConversationControlsShareMenuButtonProvider.updateButtonStyle(buttonState:foregroundApp:)(__int16 a1, uint64_t a2, __int16 a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  uint64_t (*v13)(void);
  _QWORD *v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  __int128 v21;
  __int128 v22;
  void *v23;
  id v24;
  id v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  void *v29;
  __int16 v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  v5 = v4;
  swift_beginAccess();
  v9 = (void *)MEMORY[0x1C3B752C0](v5 + 16);
  if (!v9)
    return;
  v10 = v9;
  if (!*(_QWORD *)(v5 + 208))
  {
    if ((a1 & 0x100) != 0)
    {
      objc_msgSend(v9, sel_setSelected_, 1);
    }
    else
    {
      if ((a3 & 0x100) != 0)
      {
        objc_msgSend(v9, sel_setSelected_, 1);
        _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
        v18 = (void *)*MEMORY[0x1E0DC4A88];
        v26 = 0x616C706572616873;
        v27 = 0xE900000000000079;
        v28 = 3;
        v29 = v18;
        v30 = 0;
        v31 = 4;
        v32 = 0;
        v33 = 0;
        v19 = v18;
        v20 = static UIImage.symbolImage(for:)((uint64_t)&v26);

        swift_bridgeObjectRelease();
        ControlsButtonProvider.image.setter(v20);
        goto LABEL_13;
      }
      if (a4)
      {
        v13 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *a4) + 0x80);
        v14 = a4;
        if ((v13() & 1) != 0)
        {
          objc_msgSend(v10, sel_setSelected_, 0);
          _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
          v15 = (void *)*MEMORY[0x1E0DC4A88];
          v26 = 0x616C706572616873;
          v27 = 0xE900000000000079;
          v28 = 3;
          v29 = v15;
          v30 = 0;
          v31 = 4;
          v32 = 0;
          v33 = 0;
          v16 = v15;
          v17 = static UIImage.symbolImage(for:)((uint64_t)&v26);

          swift_bridgeObjectRelease();
          ControlsButtonProvider.image.setter(v17);

LABEL_13:
          v21 = xmmword_1BD646A10;
          v22 = xmmword_1BD646A20;
LABEL_17:
          *(_OWORD *)(v5 + 176) = v21;
          *(_OWORD *)(v5 + 192) = v22;
          return;
        }

      }
      objc_msgSend(v10, sel_setSelected_, 0);
    }
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
    v23 = (void *)*MEMORY[0x1E0DC4A88];
    v26 = 0xD000000000000028;
    v27 = 0x80000001BD670480;
    v28 = 3;
    v29 = v23;
    v30 = 0;
    v31 = 4;
    v32 = 0;
    v33 = 0;
    v24 = v23;
    v25 = static UIImage.symbolImage(for:)((uint64_t)&v26);

    swift_bridgeObjectRelease();
    ControlsButtonProvider.image.setter(v25);

    v21 = *MEMORY[0x1E0DC3298];
    v22 = *(_OWORD *)(MEMORY[0x1E0DC3298] + 16);
    goto LABEL_17;
  }
  objc_msgSend(v9, sel_setSelected_, 0);
  v11 = objc_msgSend(v10, sel_imageView);
  if (v11)
  {
    v12 = v11;
    objc_msgSend(v11, sel_setAlpha_, 0.0);

  }
}

Swift::Bool __swiftcall ConversationControlsShareMenuButtonProvider.shouldEnableMenu(state:)(ConversationKit::ShareMenuActionState state)
{
  uint64_t v1;
  Swift::Bool v2;
  uint64_t v3;

  v2 = (*(_WORD *)&state.buttonEnabled & 0x100) == 0;
  if (one-time initialization token for shared != -1)
    swift_once();
  if ((OUTLINED_FUNCTION_59_9() & 1) != 0)
    return 0;
  v3 = *(_QWORD *)(v1 + 208);
  if (v3)
  {
    if ((*(_BYTE *)(v3 + OBJC_IVAR____TtC15ConversationKit13CountdownView_isCountingDown) & 1) != 0)
      return 0;
  }
  return v2;
}

uint64_t closure #2 in ConversationControlsShareMenuButtonProvider.buttonChanged()(_QWORD **a1)
{
  _QWORD *v1;
  uint64_t result;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v5)(void);
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  __int16 v9;
  __int16 v10;
  Swift::String v11;

  v1 = *a1;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v3 = result;
    v4 = *(_QWORD **)(result + 136);
    v5 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v4) + 0x640);
    v6 = v4;
    LOWORD(v5) = v5();
    v8 = v7;
    v10 = v9;

    ConversationControlsShareMenuButtonProvider.updateButtonStyle(buttonState:foregroundApp:)((unsigned __int16)v5 & 0x101, v8, v10 & 0x101, v1);
    if (*(unsigned __int8 *)(v3 + 40) <= 1u)
    {
      v11._object = (void *)0x80000001BD6704B0;
      v11._countAndFlagsBits = 0xD000000000000016;
      ConversationControlsMenuButtonProvider.dismissMenu(context:)(v11);
    }
    return swift_release();
  }
  return result;
}

Swift::Bool __swiftcall ConversationControlsShareMenuButtonProvider.shouldEnableMenu()()
{
  uint64_t v0;
  ConversationKit::ShareMenuActionState v2;

  *(_QWORD *)&v2.buttonEnabled = OUTLINED_FUNCTION_30_17(**(_QWORD **)(v0 + 136)) & 0x101;
  return ConversationControlsShareMenuButtonProvider.shouldEnableMenu(state:)(v2);
}

uint64_t ConversationControlsShareMenuButtonProvider.buttonConfiguration.getter()
{
  ConversationControlsMenuButtonProvider.buttonConfiguration.getter();
  UIButton.Configuration.contentInsets.getter();
  UIButton.Configuration.contentInsets.getter();
  UIButton.Configuration.contentInsets.getter();
  UIButton.Configuration.contentInsets.getter();
  return UIButton.Configuration.contentInsets.setter();
}

Swift::Void __swiftcall ConversationControlsShareMenuButtonProvider.didLayoutSubviews(button:)(UIButton *button)
{
  uint64_t v1;
  void *v3;
  id v4;
  id v5;
  double v6;
  id v7;
  CGRect v8;

  v3 = *(void **)(v1 + 208);
  if (v3)
  {
    v4 = objc_msgSend(v3, sel_layer);
    -[UIButton bounds](button, sel_bounds);
    objc_msgSend(v4, sel_setCornerRadius_, CGRectGetHeight(v8) * 0.5);

  }
  v5 = OUTLINED_FUNCTION_123((uint64_t)v3, sel_imageView);
  if (v5)
  {
    v6 = 0.0;
    if (!*(_QWORD *)(v1 + 208))
      v6 = 1.0;
    v7 = v5;
    objc_msgSend(v5, sel_setAlpha_, v6);

  }
}

Swift::Void __swiftcall ConversationControlsShareMenuButtonProvider.screenSharingButtonPressed()()
{
  uint64_t v0;
  __int16 v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  UIView_optional *v5;
  ConversationKit::ShareMenuActionState v6;

  swift_weakInit();
  if (one-time initialization token for shared != -1)
    swift_once();
  if ((OUTLINED_FUNCTION_59_9() & 1) != 0
    && (!static Platform.current.getter() || static Platform.current.getter() == 1))
  {
    v1 = OUTLINED_FUNCTION_30_17(**(_QWORD **)(v0 + 136));
    v2 = *(_QWORD *)(v0 + 208);
    if (v2 && (*(_BYTE *)(v2 + OBJC_IVAR____TtC15ConversationKit13CountdownView_isCountingDown) & 1) != 0)
    {
      ConversationControlsManager.declineIncomingScreenShareRequests()();
LABEL_13:
      specialized closure #1 in ConversationControlsShareMenuButtonProvider.screenSharingButtonPressed()();
      goto LABEL_14;
    }
    if ((v1 & 0x100) != 0)
      goto LABEL_13;
    OUTLINED_FUNCTION_1();
    v5 = (UIView_optional *)MEMORY[0x1C3B752C0](v0 + 16);
    ConversationControlsManager.presentShareCard(source:)(v5);

  }
  else
  {
    specialized closure #1 in ConversationControlsShareMenuButtonProvider.screenSharingButtonPressed()();
    OUTLINED_FUNCTION_1();
    v3 = MEMORY[0x1C3B752C0](v0 + 16);
    if (v3)
    {
      v4 = (void *)v3;
      *(_QWORD *)&v6.buttonEnabled = OUTLINED_FUNCTION_30_17(**(_QWORD **)(v0 + 136)) & 0x101;
      objc_msgSend(v4, sel_setShowsMenuAsPrimaryAction_, ConversationControlsShareMenuButtonProvider.shouldEnableMenu(state:)(v6));

    }
  }
LABEL_14:
  swift_weakDestroy();
}

uint64_t specialized closure #1 in ConversationControlsShareMenuButtonProvider.screenSharingButtonPressed()()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  id v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t (*v9)(void);
  _QWORD *v10;
  _QWORD *v11;
  void (*v12)(void);
  _QWORD *v13;
  _QWORD *v14;
  uint64_t (*v15)(void);
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  __int16 v19;
  __int16 v20;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = result;
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v2 = type metadata accessor for Logger();
    __swift_project_value_buffer(v2, (uint64_t)&static Logger.conversationControls);
    v3 = Logger.logObject.getter();
    v4 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v5 = 0;
      _os_log_impl(&dword_1BD004000, v3, v4, "Stopping screen sharing", v5, 2u);
      MEMORY[0x1C3B751B8](v5, -1, -1);
    }

    v6 = *(id *)(v1 + 136);
    ConversationControlsManager.stopScreenShare()();

    v7 = *(_QWORD **)(v1 + 136);
    v8 = (_QWORD *)MEMORY[0x1E0DEEDD8];
    v9 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v7) + 0x640);
    v10 = v7;
    if ((v9() & 0x100) != 0)
      ConversationControlsShareMenuButtonProvider.endedScreenSharingEphemeralAlert.getter();
    (*(void (**)(_QWORD, _QWORD, _QWORD))((*v8 & *v10) + 0x7F8))(0, 0, 0);

    ConversationControlsShareMenuButtonProvider.shareScreenCountdownView.setter(0);
    v11 = *(_QWORD **)(v1 + 136);
    v12 = *(void (**)(void))((*v8 & *v11) + 0x978);
    v13 = v11;
    v12();

    v14 = *(_QWORD **)(v1 + 136);
    v15 = *(uint64_t (**)(void))((*v8 & *v14) + 0x640);
    v16 = v14;
    LOWORD(v15) = v15();
    v18 = v17;
    v20 = v19;

    ConversationControlsShareMenuButtonProvider.updateButtonStyle(buttonState:foregroundApp:)((unsigned __int16)v15 & 0x101, v18, v20 & 0x101, 0);
    return swift_release();
  }
  return result;
}

void ConversationControlsShareMenuButtonProvider.endedScreenSharingEphemeralAlert.getter()
{
  id v0;
  uint64_t v1;

  v0 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  OUTLINED_FUNCTION_0_3(0x535F4E4545524353, 0xEE00474E49524148);
  OUTLINED_FUNCTION_10_3();
  OUTLINED_FUNCTION_17_8(v1, (unint64_t *)&lazy cache variable for type metadata for NSMutableAttributedString);
  OUTLINED_FUNCTION_50_7();
}

void sub_1BD08F6A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  objc_class *v3;
  unint64_t v4;
  NSBundle v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  Swift::String v12;

  v2 = OUTLINED_FUNCTION_17_8(a1, (unint64_t *)&lazy cache variable for type metadata for NSAttributedString);
  v3 = (objc_class *)OUTLINED_FUNCTION_123(v2, *(const char **)(v1 + 864));
  OUTLINED_FUNCTION_61();
  v4 = OUTLINED_FUNCTION_5_26(27);
  v5.super.isa = v3;
  v9 = OUTLINED_FUNCTION_49_2(v4, v6, v7, v8, v5);
  v11 = v10;

  v12._countAndFlagsBits = v9;
  v12._object = v11;
  NSMutableAttributedString.__allocating_init(string:)(v12);
}

uint64_t sub_1BD08F710()
{
  uint64_t v0;

  return v0;
}

Swift::Void __swiftcall ConversationControlsShareMenuButtonProvider.setAutomaticShareState(_:)(Swift::Bool a1)
{
  NSObject *v1;
  uint64_t v3;
  os_log_type_t v4;
  uint8_t *v5;

  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v3 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v3, (uint64_t)&static Logger.conversationControls);
  v4 = OUTLINED_FUNCTION_12_0();
  if (os_log_type_enabled(v1, v4))
  {
    v5 = (uint8_t *)OUTLINED_FUNCTION_105();
    *(_DWORD *)v5 = 67109120;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl(&dword_1BD004000, v1, v4, "togglePlaybackAuthorization: %{BOOL}d", v5, 8u);
    OUTLINED_FUNCTION_60();
  }

  ConversationControlsShareMenuButtonProvider.shareMediaEphemeralAlert(authorization:)(a1);
}

void ConversationControlsShareMenuButtonProvider.shareMediaEphemeralAlert(authorization:)(uint64_t a1)
{
  void *v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  _QWORD v9[4];
  __int16 v10;
  uint64_t v11;
  char v12;
  uint64_t v13;

  v1 = (void *)OUTLINED_FUNCTION_17_8(a1, (unint64_t *)&lazy cache variable for type metadata for UIImage);
  v2 = (void *)*MEMORY[0x1E0DC4AD0];
  v9[0] = 0x616C706572616873;
  v9[1] = 0xE900000000000079;
  v9[2] = 1;
  v9[3] = v2;
  v10 = 0;
  v11 = 4;
  v12 = 0;
  v13 = 0;
  v3 = v2;
  static UIImage.symbolImage(for:)((uint64_t)v9);
  OUTLINED_FUNCTION_49_5();
  v4 = swift_bridgeObjectRelease();
  if (v1)
  {
    v5 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
    v6 = objc_msgSend(v1, sel_imageWithTintColor_, v5);

  }
  OUTLINED_FUNCTION_17_8(v4, (unint64_t *)&lazy cache variable for type metadata for NSAttributedString);
  v7 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  OUTLINED_FUNCTION_16_15();
  OUTLINED_FUNCTION_0_3(0x414C504552414853, v8);

  static NSAttributedString.localizedString(_:prefixImage:imageBounds:)();
}

void sub_1BD08FA40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  objc_class *v9;
  NSBundle v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  Swift::String v19;

  swift_bridgeObjectRelease();
  v2 = **(_QWORD **)(v0 + 136);
  v3 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v4 = (_QWORD *)OUTLINED_FUNCTION_64_1(v2);
  if (v4)
  {
    v5 = v4;
    v6 = (*(uint64_t (**)(void))((*v3 & *v4) + 0x68))();
    v8 = v7;

  }
  else
  {
    v8 = 0x80000001BD66D370;
    v6 = 0xD000000000000010;
  }
  v9 = (objc_class *)OUTLINED_FUNCTION_39((uint64_t)v4, *(const char **)(v1 + 864));
  OUTLINED_FUNCTION_16_15();
  OUTLINED_FUNCTION_61();
  OUTLINED_FUNCTION_7_14();
  v10.super.isa = v9;
  OUTLINED_FUNCTION_49_2(v11, v12, v13, v14, v10);

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v15 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v15 + 16) = xmmword_1BD6441D0;
  *(_QWORD *)(v15 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v15 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v15 + 32) = v6;
  *(_QWORD *)(v15 + 40) = v8;
  v16 = OUTLINED_FUNCTION_61_1();
  v18 = v17;
  OUTLINED_FUNCTION_53();
  v19._countAndFlagsBits = v16;
  v19._object = v18;
  NSMutableAttributedString.__allocating_init(string:)(v19);
}

uint64_t sub_1BD08FB6C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_49_5();
  return v0;
}

uint64_t sub_1BD08FBBC()
{
  return swift_release();
}

void ConversationControlsShareMenuButtonProvider.__allocating_init(controlsManager:context:shape:menuHostViewController:)(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  OUTLINED_FUNCTION_15();
  ConversationControlsShareMenuButtonProvider.init(controlsManager:context:shape:menuHostViewController:)(a1, a2, a3, a4);
  OUTLINED_FUNCTION_91();
}

uint64_t ConversationControlsShareMenuButtonProvider.init(controlsManager:context:shape:menuHostViewController:)(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v4;
  id v7;
  uint64_t v8;
  id v9;
  _OWORD *v10;
  __int128 v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;

  *(_QWORD *)(v4 + 160) = 0;
  v7 = objc_allocWithZone(MEMORY[0x1E0DBD2F0]);
  v8 = partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  v9 = OUTLINED_FUNCTION_123(v8, sel_init);
  v10 = (_OWORD *)MEMORY[0x1E0DC3298];
  *(_QWORD *)(v4 + 168) = v9;
  v11 = v10[1];
  *(_OWORD *)(v4 + 176) = *v10;
  *(_OWORD *)(v4 + 192) = v11;
  *(_QWORD *)(v4 + 208) = 0;
  OUTLINED_FUNCTION_61();
  *(_QWORD *)(v4 + 216) = MEMORY[0x1C3B72E00](0xD000000000000013);
  OUTLINED_FUNCTION_61();
  *(_QWORD *)(v4 + 224) = MEMORY[0x1C3B72E00]();
  swift_release();
  v12 = a4;
  v13 = a1;
  ConversationControlsMenuButtonProvider.init(controlsManager:context:shape:menuHostViewController:)();
  v15 = v14;
  v16 = (void *)objc_opt_self();
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  v17 = objc_msgSend(v16, sel_defaultCenter);
  v18 = *MEMORY[0x1E0DC5340];
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  objc_msgSend(v17, sel_addObserver_selector_name_object_, v15, sel_capturedDidChangeNotification_, v18, 0);

  swift_release_n();
  return v15;
}

id ConversationControlsShareMenuButtonProvider.screenSharingActionIdentifier.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 216);
}

id ConversationControlsShareMenuButtonProvider.requestScreenSharingActionIdentifier.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 224);
}

void ConversationControlsShareMenuButtonProvider.capturedDidChangeNotification(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  NSObject *v14;
  os_log_type_t v15;
  _DWORD *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  id v24;
  uint64_t v25;
  void *v26;
  uint64_t aBlock[9];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Notification?);
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_11_2();
  v6 = type metadata accessor for Notification();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_77();
  v10 = v9 - v8;
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v11 = OUTLINED_FUNCTION_17_2();
  v12 = __swift_project_value_buffer(v11, (uint64_t)&static Logger.conversationControls);
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  v13(v10, a1, v6);
  v14 = v12;
  Logger.logObject.getter();
  v15 = OUTLINED_FUNCTION_12_0();
  if (os_log_type_enabled(v12, v15))
  {
    v16 = (_DWORD *)OUTLINED_FUNCTION_105();
    aBlock[0] = OUTLINED_FUNCTION_105();
    *v16 = 136315138;
    v13(v2, v10, v6);
    __swift_storeEnumTagSinglePayload(v2, 0, 1, v6);
    specialized >> prefix<A>(_:)(v2);
    v18 = v17;
    v20 = v19;
    outlined destroy of Notification?(v2);
    aBlock[6] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v18, v20, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_47();
    OUTLINED_FUNCTION_46_5(&dword_1BD004000, v14, v21, "capturedDidChangeNotification: %s");
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }
  OUTLINED_FUNCTION_47();

  OUTLINED_FUNCTION_1();
  v22 = (void *)MEMORY[0x1C3B752C0](v3 + 16);
  if (!v22)
    goto LABEL_8;
  v23 = v22;
  v24 = objc_msgSend(v22, sel_contextMenuInteraction);

  if (!v24)
    goto LABEL_8;
  v25 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v25 + 16) = partial apply for closure #1 in ConversationControlsShareMenuButtonProvider.capturedDidChangeNotification(_:);
  *(_QWORD *)(v25 + 24) = v3;
  aBlock[4] = (uint64_t)partial apply for thunk for @escaping @callee_guaranteed () -> (@owned String);
  aBlock[5] = v25;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)thunk for @escaping @callee_guaranteed (@guaranteed UIMenu) -> (@owned UIMenu);
  aBlock[3] = (uint64_t)&block_descriptor_7;
  v26 = _Block_copy(aBlock);
  swift_retain();
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  swift_release();
  objc_msgSend(v24, sel_updateVisibleMenuWithBlock_, v26);

  _Block_release(v26);
  LOBYTE(v26) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if ((v26 & 1) != 0)
    __break(1u);
  else
LABEL_8:
    OUTLINED_FUNCTION_52_1();
}

id closure #1 in ConversationControlsShareMenuButtonProvider.capturedDidChangeNotification(_:)(void *a1)
{
  id v2;
  unint64_t v3;
  Class isa;
  id v5;

  v2 = objc_msgSend(a1, sel_children);
  _sSo8NSObjectCMaTm_0(0, &lazy cache variable for type metadata for UIMenuElement);
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  swift_retain();
  _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSaySo06UIMenuB0CG_AGs5NeverOTg50108_s15ConversationKit0A31ControlsShareMenuButtonProviderC29capturedDidChangeNotificationyy10Foundation0K0VFSo6d13CAIXEfU_So0M7B8CAKXEfU_0G3Kit0gjklmN0CTf1cn_n(v3);
  swift_bridgeObjectRelease();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(a1, sel_menuByReplacingChildren_, isa);

  return v5;
}

Swift::Void __swiftcall ConversationControlsShareMenuButtonProvider.determineState(for:)(UIAction a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  char v5;
  id v6;
  NSObject *v7;
  NSObject *v8;
  uint64_t v9;
  uint64_t v10;
  os_log_type_t v11;
  _DWORD *v12;
  char v13;
  BOOL v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  SEL v28;
  uint64_t v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;

  v2 = v1;
  if (one-time initialization token for shared != -1)
    swift_once();
  v4 = (void *)static Defaults.shared;
  if (((*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 160))() & 1) != 0)
  {
    v5 = (*(uint64_t (**)(void))(*(_QWORD *)v4 + 208))();
    v6 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
    v7 = objc_msgSend(v6, sel_isCaptured);

    if ((v5 & 1) != 0 && !(_DWORD)v7
      || (v8 = static Defaults.shared,
          ((*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 216))() & 1) != 0))
    {
      ConversationControlsManager.isShownAboveCoverSheet.getter();
      if ((v9 & 1) == 0)
      {
        -[objc_class setAttributes:](a1.super.super.isa, sel_setAttributes_, (unint64_t)OUTLINED_FUNCTION_123(v9, sel_attributes) & 0xFFFFFFFFFFFFFFFELL);
        OUTLINED_FUNCTION_8_0();
        objc_msgSend(v27, v28);
        return;
      }
      if (one-time initialization token for conversationControls != -1)
        swift_once();
      v10 = OUTLINED_FUNCTION_17_2();
      __swift_project_value_buffer(v10, (uint64_t)&static Logger.conversationControls);
      swift_retain_n();
      v7 = Logger.logObject.getter();
      v11 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v7, v11))
      {
        v12 = (_DWORD *)OUTLINED_FUNCTION_105();
        v42 = OUTLINED_FUNCTION_105();
        *v12 = 136315138;
        ConversationControlsManager.isShownAboveCoverSheet.getter();
        v14 = (v13 & 1) == 0;
        if ((v13 & 1) != 0)
          v15 = 1702195828;
        else
          v15 = 0x65736C6166;
        if (v14)
          v16 = 0xE500000000000000;
        else
          v16 = 0xE400000000000000;
        getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v15, v16, &v42);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        OUTLINED_FUNCTION_62_0();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_46_5(&dword_1BD004000, v7, v17, "controlsManager.isShownAboveCoverSheet:%s");
        OUTLINED_FUNCTION_21();
        OUTLINED_FUNCTION_60();
      }

      v40 = OUTLINED_FUNCTION_62_0();
      OUTLINED_FUNCTION_11_4(v40, sel_setAttributes_);
      v41 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
      v38 = (unsigned __int16)OUTLINED_FUNCTION_66_3() | 0x74206B636F6C0000;
      v39 = 0xEF6572616853206FLL;
    }
    else
    {
      if (one-time initialization token for conversationControls != -1)
        swift_once();
      v29 = OUTLINED_FUNCTION_17_2();
      OUTLINED_FUNCTION_3(v29, (uint64_t)&static Logger.conversationControls);
      v30 = OUTLINED_FUNCTION_12_0();
      if (os_log_type_enabled(v8, v30))
      {
        v31 = OUTLINED_FUNCTION_105();
        v42 = OUTLINED_FUNCTION_105();
        *(_DWORD *)v31 = 136315394;
        v32 = OUTLINED_FUNCTION_56_5();
        getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v32, v33, &v42);
        OUTLINED_FUNCTION_7_32();
        swift_bridgeObjectRelease();
        *(_WORD *)(v31 + 12) = 2080;
        v34 = OUTLINED_FUNCTION_56_5();
        getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v34, v35, &v42);
        OUTLINED_FUNCTION_7_32();
        OUTLINED_FUNCTION_53();
        _os_log_impl(&dword_1BD004000, v8, v30, "screenSharingAvailable:%s, screenIsCaptured:%s", (uint8_t *)v31, 0x16u);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_60();
      }

      OUTLINED_FUNCTION_11_4(v36, sel_setAttributes_);
      v37 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
      v38 = (unsigned __int16)OUTLINED_FUNCTION_66_3() | 0x616C696176610000;
      v39 = 0xEB00000000656C62;
    }
    OUTLINED_FUNCTION_0_3(v38, v39);
    OUTLINED_FUNCTION_10_3();
    outlined bridged method (mbnn) of @objc UIAction.discoverabilityTitle.setter(v2, (uint64_t)v7, a1.super.super.isa);
    OUTLINED_FUNCTION_8_0();
  }
  else
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v18 = OUTLINED_FUNCTION_17_2();
    OUTLINED_FUNCTION_3(v18, (uint64_t)&static Logger.conversationControls);
    v19 = OUTLINED_FUNCTION_12_0();
    if (OUTLINED_FUNCTION_5_3(v19))
    {
      *(_WORD *)OUTLINED_FUNCTION_105() = 0;
      OUTLINED_FUNCTION_2_5(&dword_1BD004000, v20, v21, "Hardware doesn't support screen sharing");
      OUTLINED_FUNCTION_60();
    }

    OUTLINED_FUNCTION_11_4(v22, sel_setAttributes_);
    v23 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
    OUTLINED_FUNCTION_15_26();
    OUTLINED_FUNCTION_0_3(0x7070755320746F4ELL, 0xED0000646574726FLL);
    OUTLINED_FUNCTION_10_3();
    OUTLINED_FUNCTION_8_0();
    outlined bridged method (mbnn) of @objc UIAction.discoverabilityTitle.setter(v24, v25, v26);
  }
}

id thunk for @escaping @callee_guaranteed (@guaranteed UIMenu) -> (@owned UIMenu)(uint64_t a1, void *a2)
{
  uint64_t (*v2)(void);
  id v3;
  void *v4;

  v2 = *(uint64_t (**)(void))(a1 + 32);
  v3 = a2;
  v4 = (void *)v2();

  return v4;
}

Class ConversationControlsShareMenuButtonProvider.menu(for:)()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  void *v13;
  objc_class *v14;
  NSBundle v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  id v22;
  void *v23;
  id v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  uint64_t v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  _QWORD *v38;
  id v39;
  id v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  _QWORD *v51;
  void *v52;
  id v53;
  uint64_t v54;
  _QWORD *v55;
  void *v56;
  uint64_t v57;
  UIMenuElementSize v58;
  id v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  UIMenuElementSize v65;
  uint64_t v66;
  Swift::String v67;
  Swift::String_optional v68;
  UIMenuIdentifier_optional v69;
  UIMenuOptions v70;
  objc_class *v71;
  id v72;
  id v73;
  uint64_t v74;
  id v75;
  Swift::String v76;
  Swift::String_optional v77;
  UIMenuIdentifier_optional v78;
  UIMenuOptions v79;
  Swift::String v80;
  Swift::String_optional v81;
  UIMenuIdentifier_optional v82;
  UIMenuOptions v83;
  Class isa;
  UIMenuElementSize preferredElementSize;
  Swift::OpaquePointer v87;
  uint64_t v88;
  uint64_t v89;
  id v90;
  UIMenuElementSize v91;
  UIMenuElementSize v92;
  _QWORD v93[4];
  __int16 v94;
  uint64_t v95;
  char v96;
  id v97;
  UIImage_optional v98;
  UIImage_optional v99;
  UIImage_optional v100;

  v1 = v0;
  v2 = (void *)v0[17];
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v3 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v3, (uint64_t)&static Logger.conversationControls);
  v4 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_5_3(v4))
  {
    *(_WORD *)OUTLINED_FUNCTION_105() = 0;
    OUTLINED_FUNCTION_2_5(&dword_1BD004000, v5, v6, "Displaying Share menu");
    OUTLINED_FUNCTION_60();
  }

  v92 = MEMORY[0x1E0DEE9D8];
  specialized static UIImage.image(named:)(2, (uint64_t)&type metadata for ImageNames.ConversationControls, (uint64_t)&protocol witness table for ImageNames.ConversationControls, (uint64_t (*)(uint64_t))ImageNames.ConversationControls.rawValue.getter);
  v8 = v7;
  v9 = (void *)objc_opt_self();
  v10 = objc_msgSend(v9, sel_labelColor);
  v11 = objc_msgSend(v8, sel_imageWithTintColor_, v10);

  v13 = (void *)OUTLINED_FUNCTION_17_8(v12, (unint64_t *)&lazy cache variable for type metadata for UIAction);
  v14 = (objc_class *)objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  OUTLINED_FUNCTION_16_15();
  OUTLINED_FUNCTION_7_14();
  v15.super.isa = v14;
  OUTLINED_FUNCTION_49_2(v16, v17, v18, v19, v15);

  v20 = (void *)v1[27];
  v21 = OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_7_4();
  v90 = v11;
  v22 = v20;
  preferredElementSize = UIMenuElementSizeSmall;
  v87._rawValue = 0;
  v23 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  ConversationControlsShareMenuButtonProvider.determineState(for:)((UIAction)v23);
  v24 = v23;
  MEMORY[0x1C3B7301C](v24);
  OUTLINED_FUNCTION_20_26();
  if (v25)
    OUTLINED_FUNCTION_7_42();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  OUTLINED_FUNCTION_42_9();
  OUTLINED_FUNCTION_39_6();
  v28 = (void *)(*(uint64_t (**)(uint64_t))(v26 + 2256))(v27);
  if (v28)
  {
    v29 = v28;
    if (objc_msgSend(v28, sel_state, 0, 0, 0, partial apply for closure #1 in ConversationControlsShareMenuButtonProvider.menu(for:), v21) == (id)1)
    {
      v30 = TUConversationActivitySession.generateType.getter();
      if (v30 != 6)
      {
        v31 = (void *)OUTLINED_FUNCTION_17_8(v30, (unint64_t *)&lazy cache variable for type metadata for UIImage);
        v32 = (id)*MEMORY[0x1E0DC4A88];
        v33 = objc_msgSend(v9, sel_labelColor);
        v93[0] = 0x616C706572616873;
        v93[1] = 0xEF6873616C732E79;
        v93[2] = 3;
        v93[3] = v32;
        v94 = 0;
        v95 = 4;
        v96 = 0;
        v97 = v33;
        v34 = static UIImage.symbolImage(for:)((uint64_t)v93);

        v35 = swift_bridgeObjectRelease();
        v36 = OUTLINED_FUNCTION_39(v35, sel_conversationKit);
        OUTLINED_FUNCTION_15_26();
        OUTLINED_FUNCTION_0_3(0x7261685320646E45, 0xED000079616C5065);

        v34;
        TUConversationActivitySession.concatenatedDescription.getter();
        v37 = OUTLINED_FUNCTION_15();
        OUTLINED_FUNCTION_7_4();
        v38 = (_QWORD *)OUTLINED_FUNCTION_15();
        v38[2] = v37;
        v38[3] = v2;
        v38[4] = v29;
        v39 = v2;
        v40 = v29;
        v41 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
        OUTLINED_FUNCTION_28_17();
      }
      goto LABEL_17;
    }

  }
  OUTLINED_FUNCTION_39_6();
  v43 = (*(uint64_t (**)(void))(v42 + 1912))();
  if (!v43)
    goto LABEL_18;
  v29 = (void *)v43;
  OUTLINED_FUNCTION_39_6();
  if (((*(uint64_t (**)(void))(v44 + 128))() & 1) != 0)
  {
    OUTLINED_FUNCTION_39_6();
    v88 = (*(uint64_t (**)(void))(v45 + 104))();
    v89 = v46;
    OUTLINED_FUNCTION_39_6();
    v48 = (*(uint64_t (**)(void))(v47 + 120))();
    v49 = OUTLINED_FUNCTION_39(v48, sel_conversationKit);
    OUTLINED_FUNCTION_15_26();
    OUTLINED_FUNCTION_0_3(0x6974616D6F747541, 0xED0000796C6C6163);

    v50 = OUTLINED_FUNCTION_15();
    OUTLINED_FUNCTION_7_4();
    v51 = (_QWORD *)OUTLINED_FUNCTION_15();
    v51[2] = v50;
    v51[3] = v88;
    v51[4] = v89;
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_34_13();
    v52 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    v53 = OUTLINED_FUNCTION_39((uint64_t)v52, sel_conversationKit);
    OUTLINED_FUNCTION_15_26();
    OUTLINED_FUNCTION_0_3(0x7478654E206B7341, 0xED0000656D695420);

    v54 = OUTLINED_FUNCTION_15();
    OUTLINED_FUNCTION_7_4();
    v55 = (_QWORD *)OUTLINED_FUNCTION_15();
    v55[2] = v54;
    v55[3] = v88;
    v55[4] = v89;
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_34_13();
    v56 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    v57 = OUTLINED_FUNCTION_15();
    *(_OWORD *)(v57 + 16) = xmmword_1BD6441C0;
    *(_QWORD *)(v57 + 32) = v52;
    *(_QWORD *)(v57 + 40) = v56;
    v93[0] = v57;
    specialized Array._endMutation()();
    v58 = v93[0];
    v59 = v52;
    v60 = OUTLINED_FUNCTION_39((uint64_t)v56, sel_conversationKit);
    OUTLINED_FUNCTION_15_26();
    OUTLINED_FUNCTION_61();
    OUTLINED_FUNCTION_0_3(0xD000000000000017, v61);

    String.uppercased()();
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v62 = OUTLINED_FUNCTION_15();
    *(_OWORD *)(v62 + 16) = xmmword_1BD6441D0;
    *(_QWORD *)(v62 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v62 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v62 + 32) = v88;
    *(_QWORD *)(v62 + 40) = v89;
    OUTLINED_FUNCTION_61_1();
    v63 = OUTLINED_FUNCTION_53();
    if ((unint64_t)v58 >> 62)
    {
      OUTLINED_FUNCTION_17_8(v63, &lazy cache variable for type metadata for UIMenuElement);
      swift_bridgeObjectRetain();
      v65 = _bridgeCocoaArray<A>(_:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
      v64 = dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
      OUTLINED_FUNCTION_17_8(v64, &lazy cache variable for type metadata for UIMenuElement);
      v65 = v58;
    }
    v66 = swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_17_8(v66, &lazy cache variable for type metadata for UIMenu);
    OUTLINED_FUNCTION_13_27();
    v71 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v67, v68, v98, v69, v70, v65, 0).super.super.isa;
    OUTLINED_FUNCTION_28_17();
  }
LABEL_17:

LABEL_18:
  v72 = objc_msgSend((id)v1[21], sel_sharePlayDiscoverabilityEnabled, preferredElementSize);
  if ((_DWORD)v72)
  {
    OUTLINED_FUNCTION_17_8((uint64_t)v72, (unint64_t *)&lazy cache variable for type metadata for UICustomViewMenuElement);
    v73 = @nonobjc UICustomViewMenuElement.__allocating_init(viewProvider:)((uint64_t)closure #5 in ConversationControlsShareMenuButtonProvider.menu(for:), 0);
    OUTLINED_FUNCTION_17_8((uint64_t)v73, &lazy cache variable for type metadata for UIMenu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    v74 = OUTLINED_FUNCTION_15();
    *(_OWORD *)(v74 + 16) = xmmword_1BD6443F0;
    *(_QWORD *)(v74 + 32) = v73;
    v91 = v74;
    specialized Array._endMutation()();
    v75 = v73;
    OUTLINED_FUNCTION_13_27();
    UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v76, v77, v99, v78, v79, v91, v87);
    OUTLINED_FUNCTION_28_17();
  }
  OUTLINED_FUNCTION_17_8((uint64_t)v72, &lazy cache variable for type metadata for UIMenu);
  OUTLINED_FUNCTION_13_27();
  isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v80, v81, v100, v82, v83, v92, v87).super.super.isa;

  return isa;
}

uint64_t closure #1 in ConversationControlsShareMenuButtonProvider.menu(for:)()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  id v6;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = result;
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v2 = type metadata accessor for Logger();
    __swift_project_value_buffer(v2, (uint64_t)&static Logger.conversationControls);
    v3 = Logger.logObject.getter();
    v4 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v5 = 0;
      _os_log_impl(&dword_1BD004000, v3, v4, "Start screen sharing (countdown)", v5, 2u);
      MEMORY[0x1C3B751B8](v5, -1, -1);
    }

    v6 = *(id *)(v1 + 136);
    swift_retain();
    ConversationControlsManager.startScreenShareWithCountdown(completion:)();

    swift_release();
    ConversationControlsMenuButtonProvider.disableMenuContainerViewInteraction()();
    return swift_release();
  }
  return result;
}

void closure #1 in closure #1 in ConversationControlsShareMenuButtonProvider.menu(for:)(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id (*v10)();
  uint64_t v11;

  v2 = (void *)objc_opt_self();
  v10 = partial apply for closure #1 in closure #1 in closure #1 in ConversationControlsShareMenuButtonProvider.menu(for:);
  v11 = a1;
  v3 = MEMORY[0x1E0C809B0];
  v6 = MEMORY[0x1E0C809B0];
  v7 = 1107296256;
  v8 = thunk for @escaping @callee_guaranteed () -> ();
  v9 = &block_descriptor_23;
  v4 = _Block_copy(&v6);
  swift_retain();
  swift_release();
  v10 = partial apply for closure #2 in closure #1 in closure #1 in ConversationControlsShareMenuButtonProvider.menu(for:);
  v11 = a1;
  v6 = v3;
  v7 = 1107296256;
  v8 = thunk for @escaping @callee_guaranteed (@unowned Bool) -> ();
  v9 = &block_descriptor_26_1;
  v5 = _Block_copy(&v6);
  swift_retain();
  swift_release();
  objc_msgSend(v2, sel_animateWithDuration_animations_completion_, v4, v5, 0.5);
  _Block_release(v5);
  _Block_release(v4);
}

id closure #1 in closure #1 in closure #1 in ConversationControlsShareMenuButtonProvider.menu(for:)(uint64_t a1)
{
  id result;

  result = *(id *)(a1 + 208);
  if (result)
    return objc_msgSend(result, sel_setAlpha_, 0.0);
  return result;
}

void closure #2 in ConversationControlsShareMenuButtonProvider.menu(for:)(uint64_t a1, uint64_t a2, _QWORD *a3, void *a4)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  id v16;
  id v17;
  uint64_t v18;

  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    v6 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *a3) + 0x290))();
    if (v6)
    {
      v7 = (void *)v6;
      if (one-time initialization token for conversationControls != -1)
        swift_once();
      v8 = type metadata accessor for Logger();
      __swift_project_value_buffer(v8, (uint64_t)&static Logger.conversationControls);
      v9 = a4;
      v10 = Logger.logObject.getter();
      v11 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v10, v11))
      {
        v12 = (uint8_t *)swift_slowAlloc();
        v13 = swift_slowAlloc();
        v18 = v13;
        *(_DWORD *)v12 = 136315138;
        v14 = TUConversationActivitySession.uniqueIdentifier.getter();
        getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v14, v15, &v18);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BD004000, v10, v11, "End active SharePlay activity: %s", v12, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C3B751B8](v13, -1, -1);
        MEMORY[0x1C3B751B8](v12, -1, -1);

      }
      else
      {

      }
      v16 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
      v17 = objc_msgSend(v16, sel_conversationManager);

      objc_msgSend(v17, sel_presentDismissalAlertForActivitySession_onConversation_, v9, v7);
      ConversationControlsMenuButtonProvider.disableMenuContainerViewInteraction()();
      swift_release();

    }
    else
    {
      swift_release();
    }
  }
}

UIMenuElementState __swiftcall UIMenuElementState.init(state:)(Swift::Bool state)
{
  return (unint64_t)state;
}

uint64_t closure #3 in ConversationControlsShareMenuButtonProvider.menu(for:)(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, const char *a5, char a6)
{
  uint64_t result;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;

  OUTLINED_FUNCTION_1();
  result = swift_weakLoadStrong();
  if (result)
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v11 = OUTLINED_FUNCTION_17_2();
    v12 = __swift_project_value_buffer(v11, (uint64_t)&static Logger.conversationControls);
    swift_bridgeObjectRetain_n();
    Logger.logObject.getter();
    v13 = OUTLINED_FUNCTION_12_0();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)OUTLINED_FUNCTION_105();
      v15 = OUTLINED_FUNCTION_105();
      *(_DWORD *)v14 = 136315138;
      swift_bridgeObjectRetain();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a3, a4, &v15);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1BD004000, v12, v13, a5, v14, 0xCu);
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_60();
    }

    swift_bridgeObjectRelease_n();
    ConversationControlsShareMenuButtonProvider.setAutomaticShareState(_:)(a6 & 1);
  }
  return result;
}

id closure #5 in ConversationControlsShareMenuButtonProvider.menu(for:)()
{
  id v0;
  id v1;

  v0 = objc_allocWithZone((Class)type metadata accessor for SharePlayDiscoverabilityMenuView());
  v1 = SharePlayDiscoverabilityMenuView.init(type:presentationStyle:foregroundApp:)(0, 0, 0);
  objc_msgSend(v1, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  return v1;
}

id @nonobjc UICustomViewMenuElement.__allocating_init(viewProvider:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *ObjCClassFromMetadata;
  id v4;
  _QWORD v6[6];

  v6[4] = a1;
  v6[5] = a2;
  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 1107296256;
  v6[2] = thunk for @escaping @callee_guaranteed (@guaranteed UICustomViewMenuElement) -> (@owned UIView);
  v6[3] = &block_descriptor_20_0;
  v2 = _Block_copy(v6);
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v4 = OUTLINED_FUNCTION_65(ObjCClassFromMetadata, sel_elementWithViewProvider_);
  _Block_release(v2);
  swift_release();
  return v4;
}

void ConversationControlsShareMenuButtonProvider.__ivar_destroyer()
{
  id *v0;

  swift_release();

}

void ConversationControlsShareMenuButtonProvider.deinit()
{
  id *v0;

  v0 = (id *)ConversationControlsMenuButtonProvider.deinit();
  swift_release();

  OUTLINED_FUNCTION_0();
}

uint64_t ConversationControlsShareMenuButtonProvider.__deallocating_deinit()
{
  ConversationControlsShareMenuButtonProvider.deinit();
  return swift_deallocClassInstance();
}

id CountdownView.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

uint64_t static NSNumberFormatter.localizedStringForInt(_:)()
{
  void *v0;
  id v1;
  uint64_t v2;

  v0 = (void *)objc_opt_self();
  v1 = objc_msgSend(v0, sel_localizedStringFromNumber_numberStyle_, OUTLINED_FUNCTION_65(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_), 0);
  OUTLINED_FUNCTION_49_5();
  v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v2;
}

char *CountdownView.init()()
{
  _BYTE *v0;
  id v1;
  char *v2;
  double v3;
  SEL v4;
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  double v9;
  id v10;
  id v11;
  double v12;
  objc_super *v13;
  SEL v14;
  char *v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  Class isa;

  v0[OBJC_IVAR____TtC15ConversationKit13CountdownView_isCountingDown] = 0;
  v1 = objc_allocWithZone(MEMORY[0x1E0DC3990]);
  v2 = v0;
  v3 = OUTLINED_FUNCTION_29();
  v5 = objc_msgSend(v1, v4, v3);
  v6 = OBJC_IVAR____TtC15ConversationKit13CountdownView_countdownLabel;
  *(_QWORD *)&v2[OBJC_IVAR____TtC15ConversationKit13CountdownView_countdownLabel] = v5;
  objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v7 = *(void **)&v2[v6];
  v8 = (void *)objc_opt_self();
  v9 = *MEMORY[0x1E0DC1420];
  v10 = v7;
  v11 = objc_msgSend(v8, sel_systemFontOfSize_weight_, 20.0, v9);
  objc_msgSend(v10, sel_setFont_, v11);

  type metadata accessor for CountdownView();
  v12 = OUTLINED_FUNCTION_29();
  v15 = (char *)objc_msgSendSuper2(v13, v14, v12);
  v16 = objc_msgSend(v15, sel_layer);
  v17 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
  v18 = objc_msgSend(v17, sel_CGColor);

  objc_msgSend(v16, sel_setBorderColor_, v18);
  v20 = OUTLINED_FUNCTION_123(v19, sel_layer);
  objc_msgSend(v20, sel_setBorderWidth_, 2.0);

  v21 = OBJC_IVAR____TtC15ConversationKit13CountdownView_countdownLabel;
  objc_msgSend(v15, sel_addSubview_, *(_QWORD *)&v15[OBJC_IVAR____TtC15ConversationKit13CountdownView_countdownLabel]);
  v22 = (void *)objc_opt_self();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v23 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v23 + 16) = xmmword_1BD6441C0;
  v24 = objc_msgSend(*(id *)&v15[v21], sel_centerXAnchor);
  v25 = OUTLINED_FUNCTION_123((uint64_t)v24, sel_centerXAnchor);
  v26 = OUTLINED_FUNCTION_36_3();

  *(_QWORD *)(v23 + 32) = v26;
  v27 = objc_msgSend(*(id *)&v15[v21], sel_centerYAnchor);
  v28 = OUTLINED_FUNCTION_123((uint64_t)v27, sel_centerYAnchor);
  v29 = OUTLINED_FUNCTION_36_3();

  *(_QWORD *)(v23 + 40) = v29;
  specialized Array._endMutation()();
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v22, sel_activateConstraints_, isa);

  return v15;
}

void CountdownView.__allocating_init(coder:)()
{
  objc_class *v0;

  OUTLINED_FUNCTION_65(objc_allocWithZone(v0), sel_initWithCoder_);
  OUTLINED_FUNCTION_49_5();
  OUTLINED_FUNCTION_0();
}

void CountdownView.init(coder:)()
{
  _BYTE *v0;

  v0[OBJC_IVAR____TtC15ConversationKit13CountdownView_isCountingDown] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

id CountdownView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

void CountdownView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id CountdownView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CountdownView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void @nonobjc UIImage.__allocating_init(named:in:compatibleWith:)(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  void *v6;
  id v7;

  v6 = (void *)MEMORY[0x1C3B72E00]();
  OUTLINED_FUNCTION_53();
  v7 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_imageNamed_inBundle_compatibleWithTraitCollection_, v6, a3, a4);

  OUTLINED_FUNCTION_91();
}

unint64_t lazy protocol witness table accessor for type ShareMenuActionState and conformance ShareMenuActionState()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ShareMenuActionState and conformance ShareMenuActionState;
  if (!lazy protocol witness table cache variable for type ShareMenuActionState and conformance ShareMenuActionState)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ShareMenuActionState, &type metadata for ShareMenuActionState);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ShareMenuActionState and conformance ShareMenuActionState);
  }
  return result;
}

uint64_t sub_1BD091F58()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

void partial apply for closure #1 in ConversationControlsShareMenuButtonProvider.buttonChanged()(unsigned __int8 *a1)
{
  closure #1 in ConversationControlsShareMenuButtonProvider.buttonChanged()(a1);
}

unint64_t lazy protocol witness table accessor for type ForegroundApp? and conformance <A> A?()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = lazy protocol witness table cache variable for type ForegroundApp? and conformance <A> A?;
  if (!lazy protocol witness table cache variable for type ForegroundApp? and conformance <A> A?)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&demangling cache variable for type metadata for ForegroundApp?);
    v2 = lazy protocol witness table accessor for type ForegroundApp and conformance NSObject();
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0DEE998], v1, &v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ForegroundApp? and conformance <A> A?);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ForegroundApp and conformance NSObject()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type ForegroundApp and conformance NSObject;
  if (!lazy protocol witness table cache variable for type ForegroundApp and conformance NSObject)
  {
    v1 = type metadata accessor for ForegroundApp();
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0DEFD00], v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ForegroundApp and conformance NSObject);
  }
  return result;
}

uint64_t partial apply for closure #2 in ConversationControlsShareMenuButtonProvider.buttonChanged()(_QWORD **a1)
{
  return closure #2 in ConversationControlsShareMenuButtonProvider.buttonChanged()(a1);
}

id partial apply for closure #1 in ConversationControlsShareMenuButtonProvider.capturedDidChangeNotification(_:)(void *a1)
{
  return closure #1 in ConversationControlsShareMenuButtonProvider.capturedDidChangeNotification(_:)(a1);
}

uint64_t outlined destroy of Notification?(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Notification?);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void outlined bridged method (mbnn) of @objc UIAction.discoverabilityTitle.setter(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;

  v4 = (id)MEMORY[0x1C3B72E00]();
  swift_bridgeObjectRelease();
  objc_msgSend(a3, sel_setDiscoverabilityTitle_, v4);

}

void specialized static UIImage.image(named:)(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  _BYTE v26[24];
  ValueMetadata *v27;
  _UNKNOWN **v28;

  v27 = &type metadata for ImageNames.CallRecording;
  v28 = &protocol witness table for ImageNames.CallRecording;
  OUTLINED_FUNCTION_17_8(a1, (unint64_t *)&lazy cache variable for type metadata for UIImage);
  v2 = (void *)objc_opt_self();
  v3 = OUTLINED_FUNCTION_51_8(v2);
  v4 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
  v5 = objc_msgSend(v4, sel_traitCollection);

  OUTLINED_FUNCTION_61();
  @nonobjc UIImage.__allocating_init(named:in:compatibleWith:)(v6, v7, v3, v5);
  if (v11)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
    OUTLINED_FUNCTION_22_21();
  }
  else
  {
    OUTLINED_FUNCTION_58_9(0, v8, v9, v10);
    OUTLINED_FUNCTION_31_21();
    OUTLINED_FUNCTION_25_20((uint64_t)"Unable to load image ");
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ImageName);
    OUTLINED_FUNCTION_57_3();
    OUTLINED_FUNCTION_11_27();
    v13 = OUTLINED_FUNCTION_123(v12, (const char *)(v1 + 1326));
    v14 = objc_msgSend(v13, sel_description);
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    OUTLINED_FUNCTION_10_3();
    OUTLINED_FUNCTION_40_11(v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25);

    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_54_5();
    OUTLINED_FUNCTION_33_10();
    __break(1u);
  }
}

{
  specialized static UIImage.image(named:)(a1, (uint64_t)&type metadata for ImageNames.Drawer, (uint64_t)&protocol witness table for ImageNames.Drawer, (uint64_t (*)(uint64_t))ImageNames.Drawer.rawValue.getter);
}

{
  specialized static UIImage.image(named:)(a1, (uint64_t)&type metadata for ImageNames.ParticipantView, (uint64_t)&protocol witness table for ImageNames.ParticipantView, (uint64_t (*)(uint64_t))ImageNames.ParticipantView.rawValue.getter);
}

{
  specialized static UIImage.image(named:)(a1, (uint64_t)&type metadata for ImageNames.ConversationControls, (uint64_t)&protocol witness table for ImageNames.ConversationControls, (uint64_t (*)(uint64_t))ImageNames.ConversationControls.rawValue.getter);
}

void specialized static UIImage.image(named:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  _BYTE v30[24];
  uint64_t v31;
  uint64_t v32;

  v31 = a2;
  v32 = a3;
  v30[0] = a1;
  OUTLINED_FUNCTION_17_8(a1, (unint64_t *)&lazy cache variable for type metadata for UIImage);
  v6 = a4(a1);
  v8 = v7;
  v9 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v10 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
  v11 = objc_msgSend(v10, sel_traitCollection);

  @nonobjc UIImage.__allocating_init(named:in:compatibleWith:)(v6, v8, v9, v11);
  if (v15)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
    OUTLINED_FUNCTION_22_21();
  }
  else
  {
    OUTLINED_FUNCTION_58_9(0, v12, v13, v14);
    OUTLINED_FUNCTION_31_21();
    OUTLINED_FUNCTION_25_20((uint64_t)"Unable to load image ");
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ImageName);
    OUTLINED_FUNCTION_57_3();
    OUTLINED_FUNCTION_11_27();
    v17 = OUTLINED_FUNCTION_123(v16, sel_conversationKit);
    v18 = objc_msgSend(v17, sel_description);
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    OUTLINED_FUNCTION_10_3();
    OUTLINED_FUNCTION_40_11(v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29);

    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_54_5();
    OUTLINED_FUNCTION_33_10();
    __break(1u);
  }
}

uint64_t partial apply for closure #1 in ConversationControlsShareMenuButtonProvider.menu(for:)()
{
  return closure #1 in ConversationControlsShareMenuButtonProvider.menu(for:)();
}

uint64_t partial apply for closure #3 in ConversationControlsShareMenuButtonProvider.menu(for:)(uint64_t a1)
{
  uint64_t v1;

  return closure #3 in ConversationControlsShareMenuButtonProvider.menu(for:)(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), "Setting automatic SharePlay for app: %s", 1);
}

uint64_t objectdestroy_8Tm()
{
  swift_release();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_43_2();
  return swift_deallocObject();
}

uint64_t partial apply for closure #4 in ConversationControlsShareMenuButtonProvider.menu(for:)(uint64_t a1)
{
  uint64_t v1;

  return closure #3 in ConversationControlsShareMenuButtonProvider.menu(for:)(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), "Reset SharePlay state for app: %s", 0);
}

uint64_t sub_1BD0924B8()
{
  uint64_t v0;

  swift_release();

  OUTLINED_FUNCTION_43_2();
  return swift_deallocObject();
}

void partial apply for closure #2 in ConversationControlsShareMenuButtonProvider.menu(for:)(uint64_t a1)
{
  uint64_t v1;

  closure #2 in ConversationControlsShareMenuButtonProvider.menu(for:)(a1, *(_QWORD *)(v1 + 16), *(_QWORD **)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t type metadata accessor for CountdownView()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for ConversationControlsShareMenuButtonProvider()
{
  return objc_opt_self();
}

uint64_t method lookup function for CountdownView()
{
  return swift_lookUpClassMethod();
}

void partial apply for closure #1 in closure #1 in ConversationControlsShareMenuButtonProvider.menu(for:)()
{
  uint64_t v0;

  closure #1 in closure #1 in ConversationControlsShareMenuButtonProvider.menu(for:)(v0);
}

id partial apply for closure #1 in closure #1 in closure #1 in ConversationControlsShareMenuButtonProvider.menu(for:)()
{
  uint64_t v0;

  return closure #1 in closure #1 in closure #1 in ConversationControlsShareMenuButtonProvider.menu(for:)(v0);
}

id partial apply for closure #2 in closure #1 in closure #1 in ConversationControlsShareMenuButtonProvider.menu(for:)()
{
  uint64_t v0;
  id result;

  result = *(id *)(v0 + 208);
  if (result)
    return objc_msgSend(result, sel_removeFromSuperview);
  return result;
}

uint64_t sub_1BD092564()
{
  uint64_t v0;

  OUTLINED_FUNCTION_43_2();
  return swift_deallocObject();
}

id partial apply for closure #1 in ConversationControlsShareMenuButtonProvider.shareScreenCountdownView.didset()
{
  uint64_t v0;

  return closure #1 in ConversationControlsShareMenuButtonProvider.shareScreenCountdownView.didset(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t key path getter for InCallControlsStatusCell.viewModel : InCallControlsStatusCell@<X0>(_QWORD **a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD v4[5];

  (*(void (**)(_QWORD *__return_ptr))((*MEMORY[0x1E0DEEDD8] & **a1) + 0xA0))(v4);
  return outlined init with take of InCallControlsStatusCellViewModel?((uint64_t)v4, a2);
}

uint64_t key path setter for InCallControlsStatusCell.viewModel : InCallControlsStatusCell(uint64_t a1, _QWORD **a2)
{
  uint64_t (*v3)(_BYTE *);
  _BYTE v5[40];

  outlined init with take of InCallControlsStatusCellViewModel?(a1, (uint64_t)v5);
  v3 = *(uint64_t (**)(_BYTE *))((*MEMORY[0x1E0DEEDD8] & **a2) + 0xA8);
  outlined retain of InCallControlsStatusCellViewModel?((uint64_t)v5);
  return v3(v5);
}

id InCallControlsStatusCell.viewModel.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id result;

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC15ConversationKit24InCallControlsStatusCell_viewModel);
  OUTLINED_FUNCTION_2_0();
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = (void *)v3[4];
  v9 = OUTLINED_FUNCTION_17_19();
  result = outlined copy of InCallControlsStatusCellViewModel?(v9, v10, v11, v12, v8);
  *a1 = v4;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  return result;
}

id outlined copy of InCallControlsStatusCellViewModel?(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  id result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return a5;
  }
  return result;
}

void InCallControlsStatusCell.viewModel.setter(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_0_8();
  v3 = *(void **)(v1 + 32);
  outlined init with take of InCallControlsStatusCellViewModel?(a1, v1);
  v4 = OUTLINED_FUNCTION_17_19();
  outlined consume of InCallControlsStatusCellViewModel?(v4, v5, v6, v7, v3);
}

uint64_t outlined init with take of InCallControlsStatusCellViewModel?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for InCallControlsStatusCellViewModel?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void outlined consume of InCallControlsStatusCellViewModel?(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

  }
}

void InCallControlsStatusCell.viewModel.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path setter for InCallControlsStatusCell.menuHostViewController : InCallControlsStatusCell(uint64_t a1, _QWORD **a2)
{
  id v2;
  uint64_t v3;
  uint64_t (*v4)(id, uint64_t);
  id v5;

  v2 = *(id *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(uint64_t (**)(id, uint64_t))((*MEMORY[0x1E0DEEDD8] & **a2) + 0xC0);
  v5 = *(id *)a1;
  return v4(v2, v3);
}

id InCallControlsStatusCell.menuHostViewController.getter()
{
  uint64_t v0;
  id *v1;
  id v2;
  id v3;

  v1 = (id *)(v0 + OBJC_IVAR____TtC15ConversationKit24InCallControlsStatusCell_menuHostViewController);
  OUTLINED_FUNCTION_2_0();
  v2 = *v1;
  v3 = *v1;
  return v2;
}

void InCallControlsStatusCell.menuHostViewController.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v5;

  OUTLINED_FUNCTION_0_8();
  v5 = *(void **)v2;
  *(_QWORD *)v2 = a1;
  *(_QWORD *)(v2 + 8) = a2;

}

void InCallControlsStatusCell.menuHostViewController.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path setter for InCallControlsStatusCell.iconImageView : InCallControlsStatusCell(id *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & **a2) + 0xD8))(*a1);
}

void InCallControlsStatusCell.iconImageView.getter()
{
  CallControlsFullScreenStatusView.textContainer.getter(&OBJC_IVAR____TtC15ConversationKit24InCallControlsStatusCell____lazy_storage___iconImageView, (uint64_t (*)(uint64_t))closure #1 in InCallControlsStatusCell.iconImageView.getter);
}

id closure #1 in InCallControlsStatusCell.iconImageView.getter(void *a1)
{
  id v1;
  id v2;
  char v3;
  id v4;
  id v5;
  void *v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  id v11;
  Class isa;

  v1 = objc_msgSend(a1, sel_traitCollection);
  v2 = objc_msgSend(v1, sel_preferredContentSizeCategory);

  v3 = UIContentSizeCategory.isAccessibilityCategory.getter();
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_init);
  v5 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
  objc_msgSend(v4, sel_setTintColor_, v5);

  objc_msgSend(v4, sel_setHidden_, v3 & 1);
  objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v6 = (void *)objc_opt_self();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1BD6441C0;
  v8 = objc_msgSend(v4, sel_widthAnchor);
  v9 = objc_msgSend(v8, sel_constraintEqualToConstant_, 29.0);

  *(_QWORD *)(v7 + 32) = v9;
  v10 = objc_msgSend(v4, sel_heightAnchor);
  v11 = objc_msgSend(v10, sel_constraintEqualToConstant_, 29.0);

  *(_QWORD *)(v7 + 40) = v11;
  specialized Array._endMutation()();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_activateConstraints_, isa);

  return v4;
}

void InCallControlsStatusCell.iconImageView.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_4_3(a1, OBJC_IVAR____TtC15ConversationKit24InCallControlsStatusCell____lazy_storage___iconImageView);
}

void InCallControlsStatusCell.iconImageView.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_8_3(a1);
  InCallControlsStatusCell.iconImageView.getter();
  *v1 = v2;
  OUTLINED_FUNCTION_0();
}

void InCallControlsStatusCell.iconImageView.modify(void **a1, char a2)
{
  InCallControlsStatusCell.iconImageView.modify(a1, a2, (void (*)(void))InCallControlsStatusCell.iconImageView.setter);
}

void InCallControlsStatusCell.titleLabel.getter()
{
  InCallControlsStatusCell.titleLabel.getter(&OBJC_IVAR____TtC15ConversationKit24InCallControlsStatusCell____lazy_storage___titleLabel, (uint64_t (*)(void))closure #1 in InCallControlsStatusCell.titleLabel.getter);
}

void InCallControlsStatusCell.titleLabel.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_4_3(a1, OBJC_IVAR____TtC15ConversationKit24InCallControlsStatusCell____lazy_storage___titleLabel);
}

uint64_t key path setter for InCallControlsStatusCell.titleLabel : InCallControlsStatusCell(id *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & **a2) + 0xF0))(*a1);
}

id closure #1 in InCallControlsStatusCell.titleLabel.getter()
{
  id v0;
  id v1;
  id v2;
  double v3;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  objc_msgSend(v0, sel_setNumberOfLines_, 1);
  objc_msgSend(v0, sel_setClipsToBounds_, 1);
  objc_msgSend(v0, sel_setLineBreakMode_, 4);
  v1 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4AD0]);
  objc_msgSend(v0, sel_setFont_, v1);

  objc_msgSend(v0, sel_setAdjustsFontForContentSizeCategory_, 1);
  v2 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
  objc_msgSend(v0, sel_setTextColor_, v2);

  LODWORD(v3) = 1132068864;
  objc_msgSend(v0, sel_setContentCompressionResistancePriority_forAxis_, 0, v3);
  return v0;
}

void InCallControlsStatusCell.titleLabel.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_8_3(a1);
  InCallControlsStatusCell.titleLabel.getter();
  *v1 = v2;
  OUTLINED_FUNCTION_0();
}

void InCallControlsStatusCell.titleLabel.modify(void **a1, char a2)
{
  InCallControlsStatusCell.iconImageView.modify(a1, a2, (void (*)(void))InCallControlsStatusCell.titleLabel.setter);
}

void InCallControlsStatusCell.subtitleLabel.getter()
{
  InCallControlsStatusCell.titleLabel.getter(&OBJC_IVAR____TtC15ConversationKit24InCallControlsStatusCell____lazy_storage___subtitleLabel, (uint64_t (*)(void))closure #1 in InCallControlsStatusCell.subtitleLabel.getter);
}

void InCallControlsStatusCell.titleLabel.getter(_QWORD *a1, uint64_t (*a2)(void))
{
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)(v2 + *a1);
  if (!v4)
  {
    v5 = (void *)a2();
    OUTLINED_FUNCTION_17_3(v5);

    v4 = 0;
  }
  v6 = v4;
  OUTLINED_FUNCTION_18();
}

void InCallControlsStatusCell.subtitleLabel.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_4_3(a1, OBJC_IVAR____TtC15ConversationKit24InCallControlsStatusCell____lazy_storage___subtitleLabel);
}

uint64_t key path setter for InCallControlsStatusCell.subtitleLabel : InCallControlsStatusCell(id *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x108))(*a1);
}

id closure #1 in InCallControlsStatusCell.subtitleLabel.getter()
{
  id v0;
  id v1;
  Class isa;
  Class v3;
  id v4;
  double v5;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  objc_msgSend(v0, sel_setNumberOfLines_, 1);
  objc_msgSend(v0, sel_setClipsToBounds_, 1);
  objc_msgSend(v0, sel_setLineBreakMode_, 4);
  objc_msgSend(v0, sel_setMarqueeEnabled_, 1);
  objc_msgSend(v0, sel_setMarqueeRunning_, 1);
  v1 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4B10]);
  isa = UIFont.withTraits(_:)(0x8000u).super.isa;

  v3 = UIFont.caseSensitive()().super.isa;
  objc_msgSend(v0, sel_setFont_, v3);

  objc_msgSend(v0, sel_setAdjustsFontForContentSizeCategory_, 1);
  v4 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
  objc_msgSend(v0, sel_setTextColor_, v4);

  LODWORD(v5) = 1132068864;
  objc_msgSend(v0, sel_setContentCompressionResistancePriority_forAxis_, 0, v5);
  return v0;
}

void InCallControlsStatusCell.subtitleLabel.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_8_3(a1);
  InCallControlsStatusCell.subtitleLabel.getter();
  *v1 = v2;
  OUTLINED_FUNCTION_0();
}

void InCallControlsStatusCell.subtitleLabel.modify(void **a1, char a2)
{
  InCallControlsStatusCell.iconImageView.modify(a1, a2, (void (*)(void))InCallControlsStatusCell.subtitleLabel.setter);
}

void *InCallControlsStatusCell.actionButton.getter()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;

  v1 = (void **)(v0 + OBJC_IVAR____TtC15ConversationKit24InCallControlsStatusCell_actionButton);
  OUTLINED_FUNCTION_2_0();
  v2 = *v1;
  v3 = v2;
  return v2;
}

void InCallControlsStatusCell.actionButton.setter(void *a1)
{
  void **v1;
  void *v3;

  OUTLINED_FUNCTION_0_8();
  v3 = *v1;
  *v1 = a1;

  OUTLINED_FUNCTION_43_1();
}

uint64_t key path setter for InCallControlsStatusCell.actionButton : InCallControlsStatusCell(id *a1, _QWORD **a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x120);
  v4 = *a1;
  return v3(v2);
}

void InCallControlsStatusCell.actionButton.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path setter for InCallControlsStatusCell.conversationStatusHStack : InCallControlsStatusCell(id *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x138))(*a1);
}

void InCallControlsStatusCell.conversationStatusHStack.getter()
{
  CallControlsFullScreenStatusView.textContainer.getter(&OBJC_IVAR____TtC15ConversationKit24InCallControlsStatusCell____lazy_storage___conversationStatusHStack, (uint64_t (*)(uint64_t))closure #1 in InCallControlsStatusCell.conversationStatusHStack.getter);
}

id closure #1 in InCallControlsStatusCell.conversationStatusHStack.getter(void *a1)
{
  id v1;
  id v2;
  id v3;
  uint64_t v4;

  v1 = objc_msgSend(a1, sel_traitCollection);
  v2 = objc_msgSend(v1, sel_preferredContentSizeCategory);

  LOBYTE(v1) = UIContentSizeCategory.isAccessibilityCategory.getter();
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3CA8]), sel_init);
  objc_msgSend(v3, sel_setAxis_, v1 & 1);
  if ((v1 & 1) != 0)
    v4 = 1;
  else
    v4 = 3;
  objc_msgSend(v3, sel_setAlignment_, v4);
  objc_msgSend(v3, sel_setSpacing_, 16.0);

  return v3;
}

void InCallControlsStatusCell.conversationStatusHStack.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_4_3(a1, OBJC_IVAR____TtC15ConversationKit24InCallControlsStatusCell____lazy_storage___conversationStatusHStack);
}

void InCallControlsStatusCell.conversationStatusHStack.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_8_3(a1);
  InCallControlsStatusCell.conversationStatusHStack.getter();
  *v1 = v2;
  OUTLINED_FUNCTION_0();
}

void InCallControlsStatusCell.conversationStatusHStack.modify(void **a1, char a2)
{
  InCallControlsStatusCell.iconImageView.modify(a1, a2, (void (*)(void))InCallControlsStatusCell.conversationStatusHStack.setter);
}

uint64_t key path setter for InCallControlsStatusCell.conversationStatusDetailsVStack : InCallControlsStatusCell(id *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x150))(*a1);
}

void InCallControlsStatusCell.conversationStatusDetailsVStack.getter()
{
  CallControlsFullScreenStatusView.textContainer.getter(&OBJC_IVAR____TtC15ConversationKit24InCallControlsStatusCell____lazy_storage___conversationStatusDetailsVStack, (uint64_t (*)(uint64_t))closure #1 in InCallControlsStatusCell.conversationStatusDetailsVStack.getter);
}

id closure #1 in InCallControlsStatusCell.conversationStatusDetailsVStack.getter(_QWORD *a1)
{
  uint64_t v2;
  _QWORD *v3;
  UIStackView *v4;
  id v5;
  id v6;

  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for UIStackView);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BD6441C0;
  v3 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  *(_QWORD *)(v2 + 32) = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *a1) + 0xE8))();
  *(_QWORD *)(v2 + 40) = (*(uint64_t (**)(void))((*v3 & *a1) + 0x100))();
  specialized Array._endMutation()();
  UIStackView.__allocating_init(arrangedSubviews:)(v4, (Swift::OpaquePointer)v2);
  v6 = v5;
  objc_msgSend(v6, sel_setAxis_, 1);
  objc_msgSend(v6, sel_setAlignment_, 1);

  return v6;
}

void InCallControlsStatusCell.conversationStatusDetailsVStack.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_4_3(a1, OBJC_IVAR____TtC15ConversationKit24InCallControlsStatusCell____lazy_storage___conversationStatusDetailsVStack);
}

void InCallControlsStatusCell.conversationStatusDetailsVStack.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_8_3(a1);
  InCallControlsStatusCell.conversationStatusDetailsVStack.getter();
  *v1 = v2;
  OUTLINED_FUNCTION_0();
}

void InCallControlsStatusCell.conversationStatusDetailsVStack.modify(void **a1, char a2)
{
  InCallControlsStatusCell.iconImageView.modify(a1, a2, (void (*)(void))InCallControlsStatusCell.conversationStatusDetailsVStack.setter);
}

void InCallControlsStatusCell.iconImageView.modify(void **a1, char a2, void (*a3)(void))
{
  void *v4;
  id v5;

  v4 = *a1;
  if ((a2 & 1) != 0)
  {
    v5 = v4;
    a3();
    OUTLINED_FUNCTION_7_1(v5);
  }
  else
  {
    ((void (*)(void *))a3)(v4);
  }
}

id InCallControlsStatusCell.__allocating_init(frame:)()
{
  Class v0;
  id v1;
  double v2;
  id v3;
  SEL v4;

  OUTLINED_FUNCTION_17_7();
  v1 = objc_allocWithZone(v0);
  v2 = OUTLINED_FUNCTION_15_0();
  return objc_msgSend(v3, v4, v2);
}

id InCallControlsStatusCell.init(frame:)()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  char *v6;
  uint64_t v7;
  void *v8;
  char *v9;
  id v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  double v21;
  objc_super *v22;
  SEL v23;
  id v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v31[2];
  _QWORD v32[4];
  __int16 v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  _QWORD v37[4];
  __int16 v38;
  uint64_t v39;
  char v40;
  uint64_t v41;

  OUTLINED_FUNCTION_17_7();
  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIBackgroundConfiguration?);
  v2 = MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = &v0[OBJC_IVAR____TtC15ConversationKit24InCallControlsStatusCell_viewModel];
  *(_OWORD *)v5 = 0u;
  *((_OWORD *)v5 + 1) = 0u;
  *((_QWORD *)v5 + 4) = 0;
  v6 = &v0[OBJC_IVAR____TtC15ConversationKit24InCallControlsStatusCell_menuHostViewController];
  *(_QWORD *)v6 = 0;
  *((_QWORD *)v6 + 1) = 0;
  v7 = OBJC_IVAR____TtC15ConversationKit24InCallControlsStatusCell_faceTimeSymbolImage;
  OUTLINED_FUNCTION_59(v2, (unint64_t *)&lazy cache variable for type metadata for UIImage);
  v8 = (void *)*MEMORY[0x1E0DC4A88];
  v37[0] = 0x69662E6F65646976;
  v37[1] = 0xEA00000000006C6CLL;
  v37[2] = -1;
  v37[3] = v8;
  v38 = 0;
  v39 = 4;
  v40 = 0;
  v41 = 0;
  v9 = v0;
  v10 = v8;
  v11 = static UIImage.symbolImage(for:)((uint64_t)v37);

  OUTLINED_FUNCTION_15_5();
  *(_QWORD *)&v0[v7] = v11;
  v12 = OBJC_IVAR____TtC15ConversationKit24InCallControlsStatusCell_sharePlaySymbolImage;
  v13 = (void *)objc_opt_self();
  v14 = v10;
  v15 = objc_msgSend(v13, sel_labelColor);
  OUTLINED_FUNCTION_13_28();
  v32[0] = v16;
  v32[1] = v17;
  v32[2] = 1;
  v32[3] = v14;
  v33 = 0;
  v34 = 4;
  v35 = 0;
  v36 = v18;
  v19 = static UIImage.symbolImage(for:)((uint64_t)v32);

  OUTLINED_FUNCTION_11_28();
  *(_QWORD *)&v9[v12] = v19;
  *(_QWORD *)&v9[OBJC_IVAR____TtC15ConversationKit24InCallControlsStatusCell____lazy_storage___iconImageView] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC15ConversationKit24InCallControlsStatusCell____lazy_storage___titleLabel] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC15ConversationKit24InCallControlsStatusCell____lazy_storage___subtitleLabel] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC15ConversationKit24InCallControlsStatusCell_actionButton] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC15ConversationKit24InCallControlsStatusCell____lazy_storage___conversationStatusHStack] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC15ConversationKit24InCallControlsStatusCell____lazy_storage___conversationStatusDetailsVStack] = 0;

  v20 = type metadata accessor for InCallControlsStatusCell();
  v31[0] = v9;
  v31[1] = v20;
  v21 = OUTLINED_FUNCTION_15_0();
  v24 = objc_msgSendSuper2(v22, v23, v21);
  v25 = objc_msgSend(v24, sel_contentView);
  objc_msgSend(v25, sel_setUserInteractionEnabled_, 0);

  v26 = v24;
  static UIBackgroundConfiguration.listGroupedCell()();
  v27 = objc_msgSend(v13, sel_whiteColor);
  v28 = UIBackgroundConfiguration.backgroundColor.setter();
  OUTLINED_FUNCTION_59(v28, (unint64_t *)&lazy cache variable for type metadata for UIVibrancyEffect);
  static UIVibrancyEffect.inCallControlsEffect.getter();
  UIBackgroundConfiguration.visualEffect.setter();
  v29 = type metadata accessor for UIBackgroundConfiguration();
  __swift_storeEnumTagSinglePayload((uint64_t)v4, 0, 1, v29);
  MEMORY[0x1C3B7370C](v4);

  objc_msgSend(v26, sel_setAutomaticallyUpdatesBackgroundConfiguration_, 0);
  InCallControlsStatusCell.setupCell()();

  return v26;
}

void InCallControlsStatusCell.setupCell()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t (*v2)(void);
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;

  v1 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v2 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x130);
  v3 = (void *)v2();
  v4 = (void *)(*(uint64_t (**)(void))((*v1 & *v0) + 0xD0))();
  objc_msgSend(v3, sel_addArrangedSubview_, v4);

  v5 = (void *)v2();
  v6 = (void *)(*(uint64_t (**)(void))((*v1 & *v0) + 0x148))();
  objc_msgSend(v5, sel_addArrangedSubview_, v6);

  v7 = (void *)v2();
  objc_msgSend(v0, sel_addSubview_, v7);

  InCallControlsStatusCell.configureActionButton()();
  InCallControlsStatusCell.setupLayoutConstraints()();
  v8 = objc_msgSend(v0, sel_separatorLayoutGuide);
  v9 = objc_msgSend(v8, sel_leadingAnchor);

  v10 = objc_msgSend(v0, sel_leadingAnchor);
  v11 = objc_msgSend(v9, sel_constraintEqualToAnchor_, v10);

  objc_msgSend(v11, sel_setActive_, 1);
}

id InCallControlsStatusCell.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void InCallControlsStatusCell.init(coder:)(uint64_t a1)
{
  char *v1;
  char *v2;
  char *v3;
  char *v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  _QWORD v17[4];
  __int16 v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  _QWORD v22[4];
  __int16 v23;
  uint64_t v24;
  char v25;
  uint64_t v26;

  v2 = v1;
  v3 = &v1[OBJC_IVAR____TtC15ConversationKit24InCallControlsStatusCell_viewModel];
  *(_OWORD *)v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *((_QWORD *)v3 + 4) = 0;
  v4 = &v1[OBJC_IVAR____TtC15ConversationKit24InCallControlsStatusCell_menuHostViewController];
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0;
  v5 = OBJC_IVAR____TtC15ConversationKit24InCallControlsStatusCell_faceTimeSymbolImage;
  OUTLINED_FUNCTION_59(a1, (unint64_t *)&lazy cache variable for type metadata for UIImage);
  v6 = (void *)*MEMORY[0x1E0DC4A88];
  v22[0] = 0x69662E6F65646976;
  v22[1] = 0xEA00000000006C6CLL;
  v22[2] = -1;
  v22[3] = v6;
  v23 = 0;
  v24 = 4;
  v25 = 0;
  v26 = 0;
  v7 = v6;
  v8 = static UIImage.symbolImage(for:)((uint64_t)v22);

  OUTLINED_FUNCTION_15_5();
  *(_QWORD *)&v1[v5] = v8;
  v9 = OBJC_IVAR____TtC15ConversationKit24InCallControlsStatusCell_sharePlaySymbolImage;
  v10 = (void *)objc_opt_self();
  v11 = v7;
  v12 = objc_msgSend(v10, sel_labelColor);
  OUTLINED_FUNCTION_13_28();
  v17[0] = v13;
  v17[1] = v14;
  v17[2] = 1;
  v17[3] = v11;
  v18 = 0;
  v19 = 4;
  v20 = 0;
  v21 = v15;
  v16 = static UIImage.symbolImage(for:)((uint64_t)v17);

  OUTLINED_FUNCTION_11_28();
  *(_QWORD *)&v2[v9] = v16;
  *(_QWORD *)&v2[OBJC_IVAR____TtC15ConversationKit24InCallControlsStatusCell____lazy_storage___iconImageView] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC15ConversationKit24InCallControlsStatusCell____lazy_storage___titleLabel] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC15ConversationKit24InCallControlsStatusCell____lazy_storage___subtitleLabel] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC15ConversationKit24InCallControlsStatusCell_actionButton] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC15ConversationKit24InCallControlsStatusCell____lazy_storage___conversationStatusHStack] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC15ConversationKit24InCallControlsStatusCell____lazy_storage___conversationStatusDetailsVStack] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t InCallControlsStatusCell.configure(with:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void (*v9)(_QWORD *);
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t (*v17)(void);
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t *v21;
  void *v22;
  _QWORD v24[5];

  v2 = v1;
  v4 = a1[1];
  v5 = a1[2];
  v6 = a1[3];
  v7 = (void *)a1[4];
  v24[0] = *a1;
  v3 = v24[0];
  v24[1] = v4;
  v24[2] = v5;
  v24[3] = v6;
  v24[4] = v7;
  OUTLINED_FUNCTION_9_28();
  v9 = *(void (**)(_QWORD *))(v8 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7;
  v9(v24);
  OUTLINED_FUNCTION_9_28();
  v11 = (void *)(*(uint64_t (**)(void))(v10 + 232))();
  outlined bridged method (mbgnn) of @objc UILabel.text.setter(v3, v4, v11);

  OUTLINED_FUNCTION_9_28();
  v13 = (void *)(*(uint64_t (**)(void))(v12 + 256))();
  outlined bridged method (mbgnn) of @objc UILabel.text.setter(v5, v6, v13);

  OUTLINED_FUNCTION_9_28();
  v15 = (*(uint64_t (**)(void))(v14 + 800))();
  OUTLINED_FUNCTION_9_28();
  v17 = *(uint64_t (**)(void))(v16 + 208);
  v18 = (void *)v17();
  v19 = v18;
  if ((v15 & 1) != 0)
    v20 = 2;
  else
    v20 = 1;
  if ((v15 & 1) != 0)
    v21 = &OBJC_IVAR____TtC15ConversationKit24InCallControlsStatusCell_sharePlaySymbolImage;
  else
    v21 = &OBJC_IVAR____TtC15ConversationKit24InCallControlsStatusCell_faceTimeSymbolImage;
  objc_msgSend(v18, sel_setContentMode_, v20);

  v22 = (void *)v17();
  objc_msgSend(v22, sel_setImage_, *(_QWORD *)(v2 + *v21));

  return InCallControlsStatusCell.configureActionButton()();
}

uint64_t InCallControlsStatusCell.configureActionButton()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  _QWORD *v6;
  uint64_t result;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  id v17;
  id v18;
  double v19;
  id v20;
  id v21;
  double v22;
  Class isa;
  id v24;
  double v25;
  uint64_t (*v26)(id);
  id v27;
  uint64_t v28;
  void *v29;
  id v30;
  int v31;
  _QWORD v32[5];
  _OWORD v33[2];
  void *v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;

  v1 = v0;
  v2 = type metadata accessor for ConversationControlsAction();
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  (*(void (**)(_QWORD *__return_ptr, uint64_t))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))(v32, v3);
  result = outlined init with take of InCallControlsStatusCellViewModel?((uint64_t)v32, (uint64_t)v33);
  if (*((_QWORD *)&v33[0] + 1))
  {
    v35 = v33[0];
    v36 = v33[1];
    v8 = v34;
    v9 = (*(uint64_t (**)(uint64_t))((*v6 & *v0) + 0x118))(result);
    if (v9)
    {
      v10 = (void *)v9;
      v11 = (void *)(*(uint64_t (**)(void))((*v6 & *v0) + 0x130))();
      objc_msgSend(v11, sel_removeArrangedSubview_, v10);

      objc_msgSend(v10, sel_removeFromSuperview);
    }
    v12 = v8;
    static ConversationControlsAction.primaryCallAction(controlsManager:location:)();
    v13 = (void *)(*(uint64_t (**)(void))((*v6 & *v1) + 0xB8))();
    ConversationControlsAction.button(controlsManager:menuHostViewController:context:options:)();
    v15 = v14;

    objc_msgSend(v15, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v30 = (id)objc_opt_self();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1BD6441C0;
    v17 = objc_msgSend(v15, sel_widthAnchor);
    v18 = objc_msgSend(v17, sel_constraintEqualToConstant_, 0.0);

    LODWORD(v19) = 1144733696;
    objc_msgSend(v18, sel_setPriority_, v19);
    *(_QWORD *)(v16 + 32) = v18;
    v20 = objc_msgSend(v15, sel_heightAnchor);
    v21 = objc_msgSend(v20, sel_constraintEqualToConstant_, 36.0);

    type metadata accessor for UILayoutPriority(0);
    LODWORD(v37) = 1144750080;
    v31 = 1092616192;
    lazy protocol witness table accessor for type UILayoutPriority and conformance UILayoutPriority();
    static _UIKitNumericRawRepresentable.- infix(_:_:)();
    LODWORD(v22) = v38;
    objc_msgSend(v21, sel_setPriority_, v22);
    *(_QWORD *)(v16 + 40) = v21;
    *(_QWORD *)&v38 = v16;
    specialized Array._endMutation()();
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    objc_msgSend(v30, sel_activateConstraints_, isa);

    v24 = v15;
    *(float *)&v25 = ConversationControlsAction.ccrPriority.getter();
    objc_msgSend(v24, sel_setContentCompressionResistancePriority_forAxis_, 0, v25);

    v26 = *(uint64_t (**)(id))((*v6 & *v1) + 0x120);
    v27 = v24;
    v28 = v26(v24);
    v29 = (void *)(*(uint64_t (**)(uint64_t))((*v6 & *v1) + 0x130))(v28);
    objc_msgSend(v29, sel_addArrangedSubview_, v27);

    v37 = v35;
    outlined release of String((uint64_t)&v37);
    v38 = v36;
    outlined release of String((uint64_t)&v38);

    return outlined destroy of ConversationControlsAction((uint64_t)v5);
  }
  return result;
}

Swift::Void __swiftcall InCallControlsStatusCell.traitCollectionDidChange(_:)(UITraitCollection_optional a1)
{
  _QWORD *v1;
  Class isa;
  id v3;
  id v4;
  char v5;
  _QWORD *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t (*v10)(void);
  void *v11;
  void *v12;
  objc_super v13;

  isa = a1.value.super.isa;
  v13.receiver = v1;
  v13.super_class = (Class)type metadata accessor for InCallControlsStatusCell();
  objc_msgSendSuper2(&v13, sel_traitCollectionDidChange_, isa);
  v3 = objc_msgSend(v1, sel_traitCollection);
  v4 = objc_msgSend(v3, sel_preferredContentSizeCategory);

  v5 = UIContentSizeCategory.isAccessibilityCategory.getter();
  v6 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v7 = (void *)OUTLINED_FUNCTION_14_24(*v1);
  v8 = v7;
  if ((v5 & 1) != 0)
    v9 = 1;
  else
    v9 = 3;
  objc_msgSend(v7, sel_setHidden_, v5 & 1);

  v10 = *(uint64_t (**)(void))((*v6 & *v1) + 0x130);
  v11 = (void *)v10();
  objc_msgSend(v11, sel_setAxis_, v5 & 1);

  v12 = (void *)v10();
  objc_msgSend(v12, sel_setAlignment_, v9);

}

id InCallControlsStatusCell.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InCallControlsStatusCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void InCallControlsStatusCell.setupLayoutConstraints()()
{
  _QWORD *v0;
  _QWORD *v1;
  unint64_t v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  uint64_t (*v20)(void);
  void *v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  id v33;
  void *v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  id v39;
  id v40;
  id v41;
  void *v42;
  Class isa;
  unint64_t v44;

  v1 = v0;
  v2 = MEMORY[0x1E0DEE9D8];
  v44 = MEMORY[0x1E0DEE9D8];
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC39A0]), sel_init);
  objc_msgSend(v1, sel_addLayoutGuide_, v3);
  v4 = objc_msgSend(v3, sel_topAnchor);
  v5 = objc_msgSend(v1, sel_topAnchor);
  v6 = objc_msgSend(v4, sel_constraintEqualToAnchor_constant_, v5, 11.0);

  v7 = objc_msgSend(v3, sel_leadingAnchor);
  v8 = objc_msgSend(v1, sel_leadingAnchor);
  v9 = objc_msgSend(v7, sel_constraintEqualToAnchor_constant_, v8, 18.0);

  v10 = objc_msgSend(v3, sel_bottomAnchor);
  v11 = objc_msgSend(v1, sel_bottomAnchor);
  v12 = objc_msgSend(v10, sel_constraintEqualToAnchor_constant_, v11, -11.0);

  v13 = objc_msgSend(v3, sel_trailingAnchor);
  v14 = objc_msgSend(v1, sel_trailingAnchor);
  v15 = objc_msgSend(v13, sel_constraintEqualToAnchor_constant_, v14, -10.0);

  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    v16 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    v16 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (__OFADD__(v16, 4))
  {
    __break(1u);
  }
  else
  {
    specialized Array._reserveCapacityImpl(minimumCapacity:growForAppend:)(v16 + 4, 1);
    specialized Array._endMutation()();
    v6 = v6;
    MEMORY[0x1C3B7301C]();
    if (*(_QWORD *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(_QWORD *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_5;
  }
  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
LABEL_5:
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  v17 = v9;
  MEMORY[0x1C3B7301C]();
  if (*(_QWORD *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  v18 = v12;
  MEMORY[0x1C3B7301C]();
  if (*(_QWORD *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  v19 = v15;
  MEMORY[0x1C3B7301C]();
  if (*(_QWORD *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();

  v20 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x130);
  v21 = (void *)v20();
  objc_msgSend(v21, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  v22 = (void *)v20();
  v23 = objc_msgSend(v22, sel_topAnchor);

  v24 = objc_msgSend(v3, sel_topAnchor);
  v25 = objc_msgSend(v23, sel_constraintEqualToAnchor_, v24);

  v26 = (void *)v20();
  v27 = objc_msgSend(v26, sel_leadingAnchor);

  v28 = objc_msgSend(v3, sel_leadingAnchor);
  v29 = objc_msgSend(v27, sel_constraintEqualToAnchor_, v28);

  v30 = (void *)v20();
  v31 = objc_msgSend(v30, sel_bottomAnchor);

  v32 = objc_msgSend(v3, sel_bottomAnchor);
  v33 = objc_msgSend(v31, sel_constraintEqualToAnchor_, v32);

  v34 = (void *)v20();
  v35 = objc_msgSend(v34, sel_trailingAnchor);

  v36 = objc_msgSend(v3, sel_trailingAnchor);
  v37 = objc_msgSend(v35, sel_constraintEqualToAnchor_, v36);

  if (v44 >> 62)
  {
    swift_bridgeObjectRetain();
    v38 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    v38 = *(_QWORD *)((v44 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (__OFADD__(v38, 4))
  {
    __break(1u);
  }
  else
  {
    specialized Array._reserveCapacityImpl(minimumCapacity:growForAppend:)(v38 + 4, 1);
    specialized Array._endMutation()();
    v25 = v25;
    MEMORY[0x1C3B7301C]();
    if (*(_QWORD *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(_QWORD *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
  }
  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
LABEL_15:
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  v39 = v29;
  MEMORY[0x1C3B7301C]();
  if (*(_QWORD *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  v40 = v33;
  MEMORY[0x1C3B7301C]();
  if (*(_QWORD *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  v41 = v37;
  MEMORY[0x1C3B7301C]();
  if (*(_QWORD *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();

  v42 = (void *)objc_opt_self();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v42, sel_activateConstraints_, isa);

}

uint64_t type metadata accessor for InCallControlsStatusCell()
{
  return objc_opt_self();
}

void outlined bridged method (mbgnn) of @objc UILabel.text.setter(uint64_t a1, uint64_t a2, void *a3)
{
  void *v4;

  v4 = (void *)MEMORY[0x1C3B72E00]();
  objc_msgSend(a3, sel_setText_, v4);
  OUTLINED_FUNCTION_7_1(v4);
}

void sub_1BD094C44()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0xB8))();
  v0[1] = v2;
  OUTLINED_FUNCTION_0();
}

void sub_1BD094C7C()
{
  uint64_t *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = OUTLINED_FUNCTION_14_24(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD094CAC()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0xE8))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD094CE4()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x100))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD094D1C()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x118))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD094D54()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x130))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD094D8C()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x148))();
  OUTLINED_FUNCTION_0();
}

uint64_t method lookup function for InCallControlsStatusCell()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InCallControlsStatusCell.viewModel.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

void dispatch thunk of InCallControlsStatusCell.viewModel.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  void (*v3)(_OWORD *);
  __int128 v4;
  _OWORD v5[2];
  uint64_t v6;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(void (**)(_OWORD *))((*MEMORY[0x1E0DEEDD8] & *v1) + 0xA8);
  v4 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v4;
  v6 = v2;
  v3(v5);
  OUTLINED_FUNCTION_43_1();
}

uint64_t dispatch thunk of InCallControlsStatusCell.viewModel.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of InCallControlsStatusCell.menuHostViewController.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of InCallControlsStatusCell.menuHostViewController.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of InCallControlsStatusCell.menuHostViewController.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of InCallControlsStatusCell.iconImageView.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of InCallControlsStatusCell.iconImageView.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of InCallControlsStatusCell.iconImageView.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of InCallControlsStatusCell.titleLabel.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of InCallControlsStatusCell.titleLabel.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of InCallControlsStatusCell.titleLabel.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of InCallControlsStatusCell.subtitleLabel.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of InCallControlsStatusCell.subtitleLabel.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x108))();
}

uint64_t dispatch thunk of InCallControlsStatusCell.subtitleLabel.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x110))();
}

uint64_t dispatch thunk of InCallControlsStatusCell.actionButton.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x118))();
}

uint64_t dispatch thunk of InCallControlsStatusCell.actionButton.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x120))();
}

uint64_t dispatch thunk of InCallControlsStatusCell.actionButton.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x128))();
}

uint64_t dispatch thunk of InCallControlsStatusCell.conversationStatusHStack.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x130))();
}

uint64_t dispatch thunk of InCallControlsStatusCell.conversationStatusHStack.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x138))();
}

uint64_t dispatch thunk of InCallControlsStatusCell.conversationStatusHStack.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x140))();
}

uint64_t dispatch thunk of InCallControlsStatusCell.conversationStatusDetailsVStack.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x148))();
}

uint64_t dispatch thunk of InCallControlsStatusCell.conversationStatusDetailsVStack.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x150))();
}

uint64_t dispatch thunk of InCallControlsStatusCell.conversationStatusDetailsVStack.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x158))();
}

void dispatch thunk of InCallControlsStatusCell.configure(with:)(__int128 *a1)
{
  _QWORD *v1;
  uint64_t v2;
  void (*v3)(__int128 *);
  __int128 v4;
  uint64_t v5;
  __int128 v6;

  v2 = *((_QWORD *)a1 + 2);
  v3 = *(void (**)(__int128 *))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x160);
  v4 = *a1;
  v5 = v2;
  v6 = *(__int128 *)((char *)a1 + 24);
  v3(&v4);
  OUTLINED_FUNCTION_43_1();
}

uint64_t outlined retain of InCallControlsStatusCellViewModel?(uint64_t a1)
{
  outlined copy of InCallControlsStatusCellViewModel?(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(void **)(a1 + 32));
  return a1;
}

unint64_t lazy protocol witness table accessor for type UILayoutPriority and conformance UILayoutPriority()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type UILayoutPriority and conformance UILayoutPriority;
  if (!lazy protocol witness table cache variable for type UILayoutPriority and conformance UILayoutPriority)
  {
    type metadata accessor for UILayoutPriority(255);
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0DC2B88], v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type UILayoutPriority and conformance UILayoutPriority);
  }
  return result;
}

uint64_t outlined destroy of ConversationControlsAction(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ConversationControlsAction();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFShySo8TUHandleCG_15ConversationKit11ParticipantVs5NeverOTg5(void (*a1)(void **), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  unsigned __int8 v30;
  uint64_t v31;
  unint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  unsigned __int8 v38;
  uint64_t v39;

  v4 = v3;
  type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_41();
  v34 = v8;
  v33 = a3 & 0xC000000000000001;
  if ((a3 & 0xC000000000000001) != 0)
    v9 = __CocoaSet.count.getter();
  else
    v9 = *(_QWORD *)(a3 + 16);
  if (!v9)
  {
LABEL_24:
    OUTLINED_FUNCTION_92();
    OUTLINED_FUNCTION_1_29();
    return;
  }
  v39 = MEMORY[0x1E0DEE9D8];
  OUTLINED_FUNCTION_55_7();
  if (v33)
  {
    v10 = __CocoaSet.startIndex.getter();
    v12 = 1;
  }
  else
  {
    v10 = specialized _NativeSet.startIndex.getter(a3);
    v12 = v13 & 1;
  }
  v36 = v10;
  v37 = v11;
  v38 = v12;
  if ((v9 & 0x8000000000000000) == 0)
  {
    v31 = a3;
    while (1)
    {
      v14 = v36;
      v15 = v37;
      v16 = v38;
      specialized Set.subscript.getter(v36, v37, v38, a3);
      v18 = v17;
      v35 = v17;
      a1(&v35);

      if (v4)
        break;
      v19 = v39;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_89_1(0, *(_QWORD *)(v19 + 16) + 1);
        v19 = v39;
      }
      v21 = *(_QWORD *)(v19 + 16);
      v20 = *(_QWORD *)(v19 + 24);
      if (v21 >= v20 >> 1)
      {
        OUTLINED_FUNCTION_89_1(v20 > 1, v21 + 1);
        v19 = v39;
      }
      *(_QWORD *)(v19 + 16) = v21 + 1;
      OUTLINED_FUNCTION_37_3();
      outlined init with take of Participant(v34, v19 + v22 + *(_QWORD *)(v23 + 72) * v21, type metadata accessor for Participant);
      if (v33)
      {
        a3 = v31;
        if ((v16 & 1) == 0)
          goto LABEL_26;
        if (__CocoaSet.Index.handleBitPattern.getter())
          swift_isUniquelyReferenced_nonNull_native();
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Set<TUHandle>.Index);
        Set.Index._asCocoa.modify();
        __CocoaSet.formIndex(after:isUnique:)();
        OUTLINED_FUNCTION_95_4();
      }
      else
      {
        a3 = v31;
        v24 = specialized _NativeSet.index(after:)(v14, v15, v16, v31);
        v26 = v25;
        v27 = a2;
        v29 = v28;
        OUTLINED_FUNCTION_68_4();
        v36 = v24;
        v37 = v26;
        v30 = v29 & 1;
        a2 = v27;
        v4 = 0;
        v38 = v30;
      }
      if (!--v9)
      {
        outlined consume of Set<TUHandle>.Index._Variant(v36, v37, v38);
        goto LABEL_24;
      }
    }
    OUTLINED_FUNCTION_68_4();
    swift_release();
    goto LABEL_24;
  }
  __break(1u);
LABEL_26:
  __break(1u);
}

void _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSaySo8TUHandleCG_15ConversationKit11ParticipantVs5NeverOTg5(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_77();
  v8 = v7 - v6;
  if ((unint64_t)a3 >> 62)
    goto LABEL_18;
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (!v9)
    {
LABEL_16:
      OUTLINED_FUNCTION_92();
      OUTLINED_FUNCTION_1_29();
      return;
    }
    v17 = MEMORY[0x1E0DEE9D8];
    OUTLINED_FUNCTION_55_7();
    if (v9 < 0)
      break;
    v10 = 0;
    while (v9 != v10)
    {
      if ((a3 & 0xC000000000000001) != 0)
        v11 = (id)MEMORY[0x1C3B73D18](v10, a3);
      else
        v11 = *(id *)(a3 + 8 * v10 + 32);
      v12 = v11;
      OUTLINED_FUNCTION_66_4();
      if (v3)
      {
        swift_release();

        goto LABEL_16;
      }

      v14 = *(_QWORD *)(v17 + 16);
      v13 = *(_QWORD *)(v17 + 24);
      if (v14 >= v13 >> 1)
        OUTLINED_FUNCTION_89_1(v13 > 1, v14 + 1);
      ++v10;
      *(_QWORD *)(v17 + 16) = v14 + 1;
      OUTLINED_FUNCTION_37_3();
      outlined init with take of Participant(v8, v17 + v15 + *(_QWORD *)(v16 + 72) * v14, type metadata accessor for Participant);
      if (v9 == v10)
        goto LABEL_16;
    }
    __break(1u);
LABEL_18:
    if (a3 < 0)
      v3 = a3;
    else
      v3 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v9 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  __break(1u);
}

void _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSay15ConversationKit16CaptionSectionerV0F0VG_AJs5NeverOTg5(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v5 = type metadata accessor for CaptionSectioner.Caption(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_77();
  v9 = v8 - v7;
  v10 = *(_QWORD *)(a3 + 16);
  if (v10)
  {
    v17 = MEMORY[0x1E0DEE9D8];
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, v10, 0);
    OUTLINED_FUNCTION_37_3();
    v16 = v11;
    v12 = a3 + v11;
    v13 = *(_QWORD *)(v6 + 72);
    while (1)
    {
      OUTLINED_FUNCTION_66_4();
      if (v3)
        break;
      v15 = *(_QWORD *)(v17 + 16);
      v14 = *(_QWORD *)(v17 + 24);
      if (v15 >= v14 >> 1)
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v14 > 1, v15 + 1, 1);
      *(_QWORD *)(v17 + 16) = v15 + 1;
      outlined init with take of Participant(v9, v17 + v16 + v15 * v13, type metadata accessor for CaptionSectioner.Caption);
      v12 += v13;
      if (!--v10)
        goto LABEL_9;
    }
    swift_release();
  }
LABEL_9:
  OUTLINED_FUNCTION_92();
  OUTLINED_FUNCTION_1_29();
}

uint64_t _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSay15ConversationKit11ParticipantV7CaptionVG_AF0G9SectionerVAIVs5NeverOTg5(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;

  v4 = v3;
  v19 = a1;
  v20 = a2;
  v6 = type metadata accessor for CaptionSectioner.Caption(0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a3 + 16);
  v11 = MEMORY[0x1E0DEE9D8];
  if (v10)
  {
    v21 = MEMORY[0x1E0DEE9D8];
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, v10, 0);
    v11 = v21;
    v12 = *(_QWORD *)(type metadata accessor for Participant.Caption(0) - 8);
    v13 = a3 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    v18 = *(_QWORD *)(v12 + 72);
    while (1)
    {
      v19(v13);
      if (v4)
        break;
      v4 = 0;
      v21 = v11;
      v15 = *(_QWORD *)(v11 + 16);
      v14 = *(_QWORD *)(v11 + 24);
      if (v15 >= v14 >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v14 > 1, v15 + 1, 1);
        v11 = v21;
      }
      *(_QWORD *)(v11 + 16) = v15 + 1;
      outlined init with take of Participant((uint64_t)v9, v11+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v15, type metadata accessor for CaptionSectioner.Caption);
      v13 += v18;
      if (!--v10)
        return v11;
    }
    swift_release();
  }
  return v11;
}

void _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSnySiG_12CoreGraphics7CGFloatVs5NeverOTg5(void (*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v5 = a4 - a3;
  if (__OFSUB__(a4, a3))
    goto LABEL_18;
  v6 = v4;
  if (v5)
  {
    v16 = MEMORY[0x1E0DEE9D8];
    OUTLINED_FUNCTION_104_0();
    if (v5 < 0)
    {
LABEL_19:
      __break(1u);
      return;
    }
    v10 = v16;
    v11 = a3;
    while (a4 != v11)
    {
      v14 = v11;
      a1(&v15, &v14);
      if (v6)
      {
        swift_release();
        return;
      }
      v6 = 0;
      v12 = v15;
      v16 = v10;
      v13 = *(_QWORD *)(v10 + 16);
      if (v13 >= *(_QWORD *)(v10 + 24) >> 1)
      {
        OUTLINED_FUNCTION_90_3();
        v10 = v16;
      }
      *(_QWORD *)(v10 + 16) = v13 + 1;
      *(_QWORD *)(v10 + 8 * v13 + 32) = v12;
      if (a4 < a3)
        goto LABEL_16;
      if (v11 >= a4)
        goto LABEL_17;
      if (a4 == ++v11)
        return;
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
}

void _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lF7SwiftUI14LayoutSubviewsV_12CoreGraphics7CGFloatVs5NeverOTg5()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v7 = *(_QWORD *)(type metadata accessor for LayoutSubview() - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_77_1();
  type metadata accessor for LayoutSubviews();
  _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type LayoutSubviews and conformance LayoutSubviews, (uint64_t (*)(uint64_t))MEMORY[0x1E0CD9370], MEMORY[0x1E0CD9390]);
  v3 = dispatch thunk of Collection.count.getter();
  if (!v3)
  {
LABEL_11:
    OUTLINED_FUNCTION_92();
    return;
  }
  v4 = v3;
  v9 = MEMORY[0x1E0DEE9D8];
  OUTLINED_FUNCTION_104_0();
  dispatch thunk of Collection.startIndex.getter();
  if ((v4 & 0x8000000000000000) == 0)
  {
    while (1)
    {
      dispatch thunk of Collection.subscript.read();
      (*(void (**)(uint64_t))(v7 + 16))(v1);
      OUTLINED_FUNCTION_95_4();
      OUTLINED_FUNCTION_66_4();
      if (v0)
        break;
      OUTLINED_FUNCTION_73_2();
      v5 = v9;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_90_3();
        v5 = v9;
      }
      v6 = *(_QWORD *)(v5 + 16);
      if (v6 >= *(_QWORD *)(v5 + 24) >> 1)
      {
        OUTLINED_FUNCTION_90_3();
        v5 = v9;
      }
      *(_QWORD *)(v5 + 16) = v6 + 1;
      *(_QWORD *)(v5 + 8 * v6 + 32) = v8;
      dispatch thunk of Collection.formIndex(after:)();
      if (!--v4)
        goto LABEL_11;
    }
    OUTLINED_FUNCTION_73_2();
    swift_release();
    goto LABEL_11;
  }
  __break(1u);
}

uint64_t _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSaySo18NSNotificationNameaG_So8NSObject_ps5NeverOTg5(void (*a1)(uint64_t *__return_ptr, id *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t result;
  id *i;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_QWORD *)(a3 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v5)
  {
    v12 = MEMORY[0x1E0DEE9D8];
    specialized ContiguousArray.reserveCapacity(_:)();
    for (i = (id *)(a3 + 32); ; ++i)
    {
      v10 = *i;
      v9 = v10;
      a1(&v11, &v10);

      if (v3)
        break;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      if (!--v5)
        return v12;
    }
    return swift_release();
  }
  return result;
}

uint64_t _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSay15ConversationKit22TranscriptionViewModelC7CaptionVG_SSs5NeverOTg5(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = MEMORY[0x1E0DEE9D8];
  if (v4)
  {
    v16 = MEMORY[0x1E0DEE9D8];
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    v5 = v16;
    type metadata accessor for TranscriptionViewModel.Caption(0);
    OUTLINED_FUNCTION_12_11();
    v8 = a3 + v7;
    v13 = *(_QWORD *)(v9 + 72);
    while (1)
    {
      OUTLINED_FUNCTION_66_4();
      if (v3)
        break;
      v10 = *(_QWORD *)(v16 + 16);
      if (v10 >= *(_QWORD *)(v16 + 24) >> 1)
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      *(_QWORD *)(v16 + 16) = v10 + 1;
      v11 = v16 + 16 * v10;
      *(_QWORD *)(v11 + 32) = v14;
      *(_QWORD *)(v11 + 40) = v15;
      v8 += v13;
      if (!--v4)
        return v5;
    }
    swift_release();
  }
  return v5;
}

void CaptionSectioner.Caption.Visibility.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
  Hasher._combine(_:)(a2);
  OUTLINED_FUNCTION_0();
}

BOOL static CaptionSectioner.Caption.Visibility.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

void CaptionSectioner.Caption.Visibility.hashValue.getter(unsigned __int8 a1)
{
  OUTLINED_FUNCTION_5_1();
  Hasher._combine(_:)(a1);
  OUTLINED_FUNCTION_4_6();
  OUTLINED_FUNCTION_2();
}

void protocol witness for Hashable.hashValue.getter in conformance CaptionSectioner.Caption.Visibility()
{
  unsigned __int8 *v0;

  CaptionSectioner.Caption.Visibility.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance CaptionSectioner.Caption.Visibility(uint64_t a1)
{
  unsigned __int8 *v1;

  CaptionSectioner.Caption.Visibility.hash(into:)(a1, *v1);
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance CaptionSectioner.Caption.Visibility(char *a1, char *a2)
{
  return static CaptionSectioner.Caption.Visibility.== infix(_:_:)(*a1, *a2);
}

uint64_t CaptionSectioner.Caption.id.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t CaptionSectioner.Caption.id.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*CaptionSectioner.Caption.id.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void CaptionSectioner.Caption.participant.getter(uint64_t a1@<X8>)
{
  CaptionSectioner.Caption.participant.getter(type metadata accessor for CaptionSectioner.Caption, a1);
}

uint64_t type metadata accessor for CaptionSectioner.Caption(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for CaptionSectioner.Caption);
}

void CaptionSectioner.Caption.participant.setter(uint64_t a1)
{
  CaptionSectioner.Caption.participant.setter(a1, type metadata accessor for CaptionSectioner.Caption);
}

uint64_t (*CaptionSectioner.Caption.participant.modify())(_QWORD)
{
  OUTLINED_FUNCTION_46_6();
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t CaptionSectioner.Caption.dateCreated.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_102_0();
  OUTLINED_FUNCTION_33();
  v0 = OUTLINED_FUNCTION_70_2();
  return OUTLINED_FUNCTION_31_0(v0, v1, v2, v3);
}

uint64_t CaptionSectioner.Caption.dateCreated.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_32_13();
  OUTLINED_FUNCTION_33();
  v0 = OUTLINED_FUNCTION_69_1();
  return OUTLINED_FUNCTION_31_0(v0, v1, v2, v3);
}

uint64_t (*CaptionSectioner.Caption.dateCreated.modify())(_QWORD)
{
  type metadata accessor for CaptionSectioner.Caption(0);
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t CaptionSectioner.Caption.dateUpdated.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_102_0();
  OUTLINED_FUNCTION_33();
  v0 = OUTLINED_FUNCTION_70_2();
  return OUTLINED_FUNCTION_31_0(v0, v1, v2, v3);
}

uint64_t CaptionSectioner.Caption.dateUpdated.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_32_13();
  OUTLINED_FUNCTION_33();
  v0 = OUTLINED_FUNCTION_69_1();
  return OUTLINED_FUNCTION_31_0(v0, v1, v2, v3);
}

uint64_t (*CaptionSectioner.Caption.dateUpdated.modify())(_QWORD)
{
  type metadata accessor for CaptionSectioner.Caption(0);
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t CaptionSectioner.Caption.image.getter()
{
  type metadata accessor for CaptionSectioner.Caption(0);
  return swift_retain();
}

void CaptionSectioner.Caption.image.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(int *)(OUTLINED_FUNCTION_32_13() + 32);
  swift_release();
  *(_QWORD *)(v1 + v2) = v0;
  OUTLINED_FUNCTION_18();
}

uint64_t (*CaptionSectioner.Caption.image.modify())(_QWORD)
{
  type metadata accessor for CaptionSectioner.Caption(0);
  return TPNumberPadCharacter.rawValue.getter;
}

void CaptionSectioner.Caption.text.getter()
{
  type metadata accessor for CaptionSectioner.Caption(0);
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_0();
}

void CaptionSectioner.Caption.text.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + *(int *)(OUTLINED_FUNCTION_87_2() + 36));
  swift_bridgeObjectRelease();
  *v5 = v3;
  v5[1] = a2;
  OUTLINED_FUNCTION_18();
}

uint64_t (*CaptionSectioner.Caption.text.modify())(_QWORD)
{
  type metadata accessor for CaptionSectioner.Caption(0);
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t CaptionSectioner.Caption.isBadTranscription.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for CaptionSectioner.Caption(0) + 40));
}

void CaptionSectioner.Caption.isBadTranscription.setter()
{
  char v0;
  uint64_t v1;

  *(_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_32_13() + 40)) = v0;
  OUTLINED_FUNCTION_0();
}

uint64_t (*CaptionSectioner.Caption.isBadTranscription.modify())(_QWORD)
{
  type metadata accessor for CaptionSectioner.Caption(0);
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t CaptionSectioner.Caption.lowConfidenceRanges.getter()
{
  type metadata accessor for CaptionSectioner.Caption(0);
  return swift_bridgeObjectRetain();
}

void CaptionSectioner.Caption.lowConfidenceRanges.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(int *)(OUTLINED_FUNCTION_32_13() + 44);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v2) = v0;
  OUTLINED_FUNCTION_18();
}

uint64_t (*CaptionSectioner.Caption.lowConfidenceRanges.modify())(_QWORD)
{
  type metadata accessor for CaptionSectioner.Caption(0);
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t CaptionSectioner.Caption.visibility.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for CaptionSectioner.Caption(0) + 48));
}

void CaptionSectioner.Caption.visibility.setter()
{
  char v0;
  uint64_t v1;

  *(_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_32_13() + 48)) = v0;
  OUTLINED_FUNCTION_0();
}

uint64_t (*CaptionSectioner.Caption.visibility.modify())(_QWORD)
{
  type metadata accessor for CaptionSectioner.Caption(0);
  return TPNumberPadCharacter.rawValue.getter;
}

BOOL CaptionSectioner.Caption.suppressed.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for CaptionSectioner.Caption(0) + 48)) == 1;
}

BOOL CaptionSectioner.Caption.expired.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for CaptionSectioner.Caption(0) + 48)) == 2;
}

void CaptionSectioner.Caption.isDisplayEquivalent(to:)()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  BOOL v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BOOL4 v36;
  _BOOL4 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  OUTLINED_FUNCTION_93();
  v4 = (uint64_t)v0;
  v5 = OUTLINED_FUNCTION_87_2();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_5_27();
  v40 = v7;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_18_0();
  v39 = v9;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_18_0();
  v38 = v11;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_18_0();
  v41 = v13;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_108_0();
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v38 - v17;
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_112();
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v38 - v20;
  v22 = *v0;
  v23 = *v1;
  OUTLINED_FUNCTION_9_29(v4, (uint64_t)&v38 - v20);
  OUTLINED_FUNCTION_9_29((uint64_t)v1, v2);
  if (v22 != v23)
  {
    OUTLINED_FUNCTION_23_20(v2);
    OUTLINED_FUNCTION_23_20((uint64_t)v21);
    OUTLINED_FUNCTION_34_14(v4, (uint64_t)v18);
    OUTLINED_FUNCTION_34_14((uint64_t)v1, v3);
    goto LABEL_10;
  }
  static Participant.== infix(_:_:)();
  v25 = v24;
  OUTLINED_FUNCTION_23_20(v2);
  OUTLINED_FUNCTION_23_20((uint64_t)v21);
  OUTLINED_FUNCTION_34_14(v4, (uint64_t)v18);
  OUTLINED_FUNCTION_34_14((uint64_t)v1, v3);
  if ((v25 & 1) == 0)
  {
LABEL_10:
    OUTLINED_FUNCTION_0_40((uint64_t)v18);
    OUTLINED_FUNCTION_0_40(v3);
    v31 = v41;
    OUTLINED_FUNCTION_11_29(v4, v41);
    v33 = v38;
    OUTLINED_FUNCTION_11_29((uint64_t)v1, v38);
    v35 = v39;
    v34 = v40;
    goto LABEL_11;
  }
  v26 = *(int *)(v5 + 36);
  v27 = *(_QWORD *)&v18[v26];
  v28 = *(_QWORD *)&v18[v26 + 8];
  v29 = (_QWORD *)(v3 + v26);
  v30 = v27 == *v29 && v28 == v29[1];
  v31 = v41;
  if (v30)
  {
    OUTLINED_FUNCTION_0_40((uint64_t)v18);
    OUTLINED_FUNCTION_0_40(v3);
    OUTLINED_FUNCTION_11_29(v4, v31);
    v33 = v38;
    OUTLINED_FUNCTION_11_29((uint64_t)v1, v38);
    v35 = v39;
    v34 = v40;
    goto LABEL_15;
  }
  v32 = OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_23_20((uint64_t)v18);
  OUTLINED_FUNCTION_23_20(v3);
  OUTLINED_FUNCTION_34_14(v4, v31);
  v33 = v38;
  OUTLINED_FUNCTION_34_14((uint64_t)v1, v38);
  v35 = v39;
  v34 = v40;
  if ((v32 & 1) == 0)
  {
LABEL_11:
    OUTLINED_FUNCTION_0_40(v33);
    OUTLINED_FUNCTION_0_40(v31);
    OUTLINED_FUNCTION_11_29(v4, v35);
    OUTLINED_FUNCTION_11_29((uint64_t)v1, v34);
    goto LABEL_12;
  }
LABEL_15:
  v36 = *(unsigned __int8 *)(v31 + *(int *)(v5 + 48)) != 2;
  OUTLINED_FUNCTION_0_40(v31);
  v37 = *(unsigned __int8 *)(v33 + *(int *)(v5 + 48)) == 2;
  OUTLINED_FUNCTION_0_40(v33);
  OUTLINED_FUNCTION_11_29(v4, v35);
  OUTLINED_FUNCTION_11_29((uint64_t)v1, v34);
  if (((v36 ^ v37) & 1) != 0)
  {
    OUTLINED_FUNCTION_0_40(v35);
    OUTLINED_FUNCTION_0_40(v34);
    goto LABEL_13;
  }
LABEL_12:
  OUTLINED_FUNCTION_0_40(v34);
  OUTLINED_FUNCTION_0_40(v35);
LABEL_13:
  OUTLINED_FUNCTION_52_1();
}

BOOL static CaptionSectioner.CaptionID.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

void _s15ConversationKit11ParticipantVWOcTm_0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  OUTLINED_FUNCTION_84(a1, a2, a3);
  OUTLINED_FUNCTION_100_0();
  OUTLINED_FUNCTION_38(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16));
  OUTLINED_FUNCTION_0();
}

BOOL static CaptionSectioner.Caption.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  int *v2;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  BOOL v13;
  char v14;
  _BOOL8 result;
  char v16;

  if (*a1 != *a2)
    return 0;
  OUTLINED_FUNCTION_46_6();
  OUTLINED_FUNCTION_49_8();
  if ((v5 & 1) == 0 || (OUTLINED_FUNCTION_101_2() & 1) == 0 || (OUTLINED_FUNCTION_101_2() & 1) == 0)
    return 0;
  v6 = v2[8];
  v7 = *(_QWORD *)((char *)a2 + v6);
  if (*(_QWORD *)((char *)a1 + v6))
  {
    if (!v7)
      return 0;
    swift_retain();
    swift_retain();
    v8 = static Image.== infix(_:_:)();
    swift_release();
    swift_release();
    if ((v8 & 1) == 0)
      return 0;
  }
  else if (v7)
  {
    return 0;
  }
  v9 = v2[9];
  v10 = *(_QWORD *)((char *)a1 + v9);
  v11 = *(_QWORD *)((char *)a1 + v9 + 8);
  v12 = (_QWORD *)((char *)a2 + v9);
  v13 = v10 == *v12 && v11 == v12[1];
  if (v13 || (v14 = OUTLINED_FUNCTION_13(), result = 0, (v14 & 1) != 0))
  {
    if (*((unsigned __int8 *)a1 + v2[10]) == *((unsigned __int8 *)a2 + v2[10]))
    {
      specialized static Array<A>.== infix(_:_:)(*(int64x2_t **)((char *)a1 + v2[11]), *(int64x2_t **)((char *)a2 + v2[11]));
      if ((v16 & 1) != 0)
        return *((unsigned __int8 *)a1 + v2[12]) == *((unsigned __int8 *)a2 + v2[12]);
    }
    return 0;
  }
  return result;
}

void specialized static Array<A>.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  BOOL v45;
  uint64_t v46;
  int64x2_t *v47;
  int64x2_t *v48;
  uint64_t v49;
  BOOL v50;
  char v51;
  int64x2_t *v53;
  uint64_t v54;
  char v55;

  OUTLINED_FUNCTION_93();
  a19 = v20;
  a20 = v21;
  v23 = v22;
  v25 = v24;
  v26 = (int *)type metadata accessor for TranscriptionViewModel.Caption(0);
  OUTLINED_FUNCTION_20_7();
  MEMORY[0x1E0C80A78](v27);
  OUTLINED_FUNCTION_24_15();
  v30 = (_QWORD *)(v28 - v29);
  MEMORY[0x1E0C80A78](v31);
  v33 = (uint64_t *)((char *)&a9 - v32);
  v34 = *(_QWORD *)(v25 + 16);
  if (v34 == *(_QWORD *)(v23 + 16) && v34 && v25 != v23)
  {
    v35 = 0;
    OUTLINED_FUNCTION_37_3();
    v37 = v25 + v36;
    v38 = v23 + v36;
    v40 = *(_QWORD *)(v39 + 72);
    while (1)
    {
      _s15ConversationKit11ParticipantVWOcTm_0(v37 + v40 * v35, (uint64_t)v33, type metadata accessor for TranscriptionViewModel.Caption);
      _s15ConversationKit11ParticipantVWOcTm_0(v38 + v40 * v35, (uint64_t)v30, type metadata accessor for TranscriptionViewModel.Caption);
      if (*v33 != *v30 || (OUTLINED_FUNCTION_115_2() & 1) == 0 || (OUTLINED_FUNCTION_115_2() & 1) == 0)
        break;
      v41 = v26[7];
      v42 = *(_QWORD *)((char *)v33 + v41);
      v43 = *(_QWORD *)((char *)v33 + v41 + 8);
      v44 = (_QWORD *)((char *)v30 + v41);
      v45 = v42 == *v44 && v43 == v44[1];
      if (!v45 && (OUTLINED_FUNCTION_13() & 1) == 0)
        break;
      if (*((unsigned __int8 *)v33 + v26[8]) != *((unsigned __int8 *)v30 + v26[8]))
        break;
      v46 = v26[9];
      v47 = *(int64x2_t **)((char *)v33 + v46);
      v48 = *(int64x2_t **)((char *)v30 + v46);
      v49 = v47[1].i64[0];
      if (v49 != v48[1].i64[0])
        break;
      if (v49)
        v50 = v47 == v48;
      else
        v50 = 1;
      if (!v50)
      {
        if (v47[2].i64[0] != v48[2].i64[0] || v47[2].i64[1] != v48[2].i64[1])
          break;
        v53 = v47 + 3;
        v54 = v49 - 1;
        while (v54)
        {
          OUTLINED_FUNCTION_51_9(v53);
          if ((v55 & 1) == 0)
            goto LABEL_31;
        }
      }
      v51 = *((_BYTE *)v33 + v26[10]) ^ *((_BYTE *)v30 + v26[10]);
      outlined destroy of CaptionSectioner.Caption((uint64_t)v30, type metadata accessor for TranscriptionViewModel.Caption);
      outlined destroy of CaptionSectioner.Caption((uint64_t)v33, type metadata accessor for TranscriptionViewModel.Caption);
      if ((v51 & 1) == 0 && ++v35 != v34)
        continue;
      goto LABEL_32;
    }
LABEL_31:
    OUTLINED_FUNCTION_0_40((uint64_t)v30);
    OUTLINED_FUNCTION_0_40((uint64_t)v33);
  }
LABEL_32:
  OUTLINED_FUNCTION_52_1();
}

{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  BOOL v41;

  OUTLINED_FUNCTION_93();
  a19 = v20;
  a20 = v21;
  v23 = v22;
  v25 = v24;
  type metadata accessor for ConversationControlsAction();
  OUTLINED_FUNCTION_20_7();
  MEMORY[0x1E0C80A78](v26);
  OUTLINED_FUNCTION_24_15();
  v29 = v27 - v28;
  MEMORY[0x1E0C80A78](v30);
  v33 = (char *)&a9 - v32;
  v34 = *(_QWORD *)(v25 + 16);
  if (v34 == *(_QWORD *)(v23 + 16) && v34 && v25 != v23)
  {
    v35 = (*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
    v36 = *(_QWORD *)(v31 + 72);
    v37 = v34 - 1;
    do
    {
      _s15ConversationKit11ParticipantVWOcTm_0(v25 + v35, (uint64_t)v33, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsAction);
      _s15ConversationKit11ParticipantVWOcTm_0(v23 + v35, v29, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsAction);
      static ConversationControlsAction.== infix(_:_:)();
      v39 = v38;
      outlined destroy of CaptionSectioner.Caption(v29, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsAction);
      outlined destroy of CaptionSectioner.Caption((uint64_t)v33, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsAction);
      v41 = v37-- != 0;
      if ((v39 & 1) == 0)
        break;
      v35 += v36;
    }
    while (v41);
  }
  OUTLINED_FUNCTION_52_1();
}

int32x2_t specialized static Array<A>.== infix(_:_:)(int64x2_t *a1, int64x2_t *a2)
{
  uint64_t v2;
  int64x2_t *v4;
  uint64_t v5;
  int32x2_t result;
  char v7;

  v2 = a1[1].i64[0];
  if (v2 == a2[1].i64[0] && v2 && a1 != a2 && a1[2].i64[0] == a2[2].i64[0] && a1[2].i64[1] == a2[2].i64[1])
  {
    v4 = a1 + 3;
    v5 = v2 - 1;
    do
    {
      if (!v5)
        break;
      result = OUTLINED_FUNCTION_51_9(v4);
    }
    while ((v7 & 1) != 0);
  }
  return result;
}

BOOL specialized static Array<A>.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  BOOL v47;
  BOOL v48;
  unsigned __int8 *v49;
  int v50;
  int v51;
  int v52;
  int v53;
  unsigned __int8 *v54;
  int v55;
  int v56;
  int v57;
  int v58;
  int v59;
  char v60;
  char v61;
  int *v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  BOOL v70;
  char v71;
  char v72;
  uint64_t v73;
  int v74;
  int v75;
  uint64_t v76;
  _BOOL8 result;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  char *v85;
  char *v86;
  char *v87;
  char *v88;
  unint64_t v89;
  uint64_t v90;
  int v91;
  int *v92;
  _QWORD *v93;
  _QWORD *v94;

  v4 = type metadata accessor for Participant(0);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v79 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v5);
  v10 = (char *)&v79 - v9;
  v11 = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v79 - v12;
  v14 = MEMORY[0x1E0C80A78](v11);
  v16 = (char *)&v79 - v15;
  v17 = MEMORY[0x1E0C80A78](v14);
  v19 = (char *)&v79 - v18;
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v79 - v20;
  v22 = type metadata accessor for CaptionSectioner.Caption(0);
  v23 = MEMORY[0x1E0C80A78](v22);
  v24 = MEMORY[0x1E0C80A78](v23);
  v28 = (char *)&v79 - v26;
  v29 = *(_QWORD *)(a1 + 16);
  if (v29 == *(_QWORD *)(a2 + 16))
  {
    if (!v29 || a1 == a2)
      return 1;
    v92 = (int *)v24;
    v93 = (_QWORD *)v27;
    v85 = v21;
    v86 = v19;
    v83 = v10;
    v84 = v4;
    v87 = v16;
    v88 = v13;
    v30 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
    v80 = *(_QWORD *)(v25 + 72);
    v81 = a1;
    v31 = v29 - 1;
    v82 = a2;
    v94 = (uint64_t *)((char *)&v79 - v26);
    while (1)
    {
      v90 = v31;
      _s15ConversationKit11ParticipantVWOcTm_0(a1 + v30, (uint64_t)v28, type metadata accessor for CaptionSectioner.Caption);
      v89 = v30;
      v32 = a2 + v30;
      v33 = v93;
      _s15ConversationKit11ParticipantVWOcTm_0(v32, (uint64_t)v93, type metadata accessor for CaptionSectioner.Caption);
      v34 = v94;
      v35 = (uint64_t)v33;
      if (*v94 != *v33)
        break;
      v36 = v92[5];
      v37 = (uint64_t)v94 + v36;
      v38 = (uint64_t)v33 + v36;
      static Participant.State.== infix(_:_:)();
      v40 = v39;
      v41 = (uint64_t)v85;
      _s15ConversationKit11ParticipantVWOcTm_0(v37, (uint64_t)v85, type metadata accessor for Participant);
      v42 = (uint64_t)v86;
      _s15ConversationKit11ParticipantVWOcTm_0(v38, (uint64_t)v86, type metadata accessor for Participant);
      if ((v40 & 1) == 0)
      {
        outlined destroy of CaptionSectioner.Caption(v42, type metadata accessor for Participant);
        outlined destroy of CaptionSectioner.Caption(v41, type metadata accessor for Participant);
        v45 = (uint64_t)v87;
        _s15ConversationKit11ParticipantVWOcTm_0(v37, (uint64_t)v87, type metadata accessor for Participant);
        v46 = (uint64_t)v88;
        _s15ConversationKit11ParticipantVWOcTm_0(v38, (uint64_t)v88, type metadata accessor for Participant);
LABEL_34:
        outlined destroy of CaptionSectioner.Caption(v46, type metadata accessor for Participant);
        outlined destroy of CaptionSectioner.Caption(v45, type metadata accessor for Participant);
        _s15ConversationKit11ParticipantVWOcTm_0(v37, (uint64_t)v10, type metadata accessor for Participant);
        _s15ConversationKit11ParticipantVWOcTm_0(v38, (uint64_t)v7, type metadata accessor for Participant);
LABEL_35:
        outlined destroy of CaptionSectioner.Caption((uint64_t)v7, type metadata accessor for Participant);
        outlined destroy of CaptionSectioner.Caption((uint64_t)v10, type metadata accessor for Participant);
        v35 = (uint64_t)v93;
        v34 = v94;
        break;
      }
      v43 = v84;
      v44 = static UUID.== infix(_:_:)();
      outlined destroy of CaptionSectioner.Caption(v42, type metadata accessor for Participant);
      outlined destroy of CaptionSectioner.Caption(v41, type metadata accessor for Participant);
      v45 = (uint64_t)v87;
      _s15ConversationKit11ParticipantVWOcTm_0(v37, (uint64_t)v87, type metadata accessor for Participant);
      v46 = (uint64_t)v88;
      _s15ConversationKit11ParticipantVWOcTm_0(v38, (uint64_t)v88, type metadata accessor for Participant);
      if ((v44 & 1) == 0)
        goto LABEL_34;
      v47 = *(_QWORD *)(v45 + *(int *)(v43 + 28)) != 0;
      outlined destroy of CaptionSectioner.Caption(v45, type metadata accessor for Participant);
      v48 = *(_QWORD *)(v46 + *(int *)(v43 + 28)) == 0;
      outlined destroy of CaptionSectioner.Caption(v46, type metadata accessor for Participant);
      _s15ConversationKit11ParticipantVWOcTm_0(v37, (uint64_t)v10, type metadata accessor for Participant);
      _s15ConversationKit11ParticipantVWOcTm_0(v38, (uint64_t)v7, type metadata accessor for Participant);
      if (((v47 ^ v48) & 1) == 0)
        goto LABEL_35;
      v49 = (unsigned __int8 *)&v10[*(int *)(v43 + 24)];
      v91 = *v49;
      v50 = v49[1];
      v51 = v49[2];
      v52 = v49[3];
      v53 = v49[4];
      outlined destroy of CaptionSectioner.Caption((uint64_t)v10, type metadata accessor for Participant);
      v54 = (unsigned __int8 *)&v7[*(int *)(v43 + 24)];
      v55 = *v54;
      v56 = v54[1];
      v57 = v54[2];
      v58 = v54[3];
      v59 = v54[4];
      outlined destroy of CaptionSectioner.Caption((uint64_t)v7, type metadata accessor for Participant);
      v70 = v91 == v55;
      v10 = v83;
      v35 = (uint64_t)v93;
      v34 = v94;
      if (!v70)
        break;
      if (((v50 ^ v56) & 1) != 0)
        break;
      if (((v51 ^ v57) & 1) != 0)
        break;
      if (((v52 ^ v58) & 1) != 0)
        break;
      if (((v53 ^ v59) & 1) != 0)
        break;
      v60 = static Date.== infix(_:_:)();
      v35 = (uint64_t)v93;
      v34 = v94;
      if ((v60 & 1) == 0)
        break;
      v61 = static Date.== infix(_:_:)();
      v62 = v92;
      v35 = (uint64_t)v93;
      v34 = v94;
      if ((v61 & 1) == 0)
        break;
      v63 = v92[8];
      v64 = *(_QWORD *)((char *)v93 + v63);
      if (*(_QWORD *)((char *)v94 + v63))
      {
        if (!v64)
          break;
        swift_retain();
        swift_retain();
        v65 = static Image.== infix(_:_:)();
        swift_release();
        swift_release();
        v62 = v92;
        v35 = (uint64_t)v93;
        v34 = v94;
        if ((v65 & 1) == 0)
          break;
      }
      else if (v64)
      {
        break;
      }
      v66 = v62[9];
      v67 = *(_QWORD *)((char *)v34 + v66);
      v68 = *(_QWORD *)((char *)v34 + v66 + 8);
      v69 = (_QWORD *)(v35 + v66);
      v70 = v67 == *v69 && v68 == v69[1];
      if (!v70)
      {
        v71 = _stringCompareWithSmolCheck(_:_:expecting:)();
        v62 = v92;
        v35 = (uint64_t)v93;
        v34 = v94;
        if ((v71 & 1) == 0)
          break;
      }
      if (*((unsigned __int8 *)v34 + v62[10]) != *(unsigned __int8 *)(v35 + v62[10]))
        break;
      specialized static Array<A>.== infix(_:_:)(*(int64x2_t **)((char *)v34 + v62[11]), *(int64x2_t **)(v35 + v62[11]));
      v35 = (uint64_t)v93;
      v34 = v94;
      if ((v72 & 1) == 0)
        break;
      v73 = v92[12];
      v74 = *((unsigned __int8 *)v94 + v73);
      v75 = *((unsigned __int8 *)v93 + v73);
      v76 = (uint64_t)v94;
      outlined destroy of CaptionSectioner.Caption((uint64_t)v93, type metadata accessor for CaptionSectioner.Caption);
      outlined destroy of CaptionSectioner.Caption(v76, type metadata accessor for CaptionSectioner.Caption);
      v31 = v90 - 1;
      result = v74 == v75;
      if (v74 == v75)
      {
        a1 = v81;
        v30 = v89 + v80;
        a2 = v82;
        v28 = (char *)v94;
        if (v90)
          continue;
      }
      return result;
    }
    v78 = (uint64_t)v34;
    outlined destroy of CaptionSectioner.Caption(v35, type metadata accessor for CaptionSectioner.Caption);
    outlined destroy of CaptionSectioner.Caption(v78, type metadata accessor for CaptionSectioner.Caption);
  }
  return 0;
}

void specialized static Array<A>.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  unint64_t v2;
  BOOL v5;
  _QWORD *v6;
  _QWORD *v7;
  unint64_t v8;
  BOOL v9;

  v2 = a1[2];
  if (v2 == a2[2]
    && v2
    && a1 != a2
    && (a1[4] == a2[4] ? (v5 = a1[5] == a2[5]) : (v5 = 0), (v5 || (OUTLINED_FUNCTION_13() & 1) != 0) && v2 != 1))
  {
    v6 = a1 + 7;
    v7 = a2 + 7;
    v8 = 1;
    while (v8 < v2)
    {
      v9 = *(v6 - 1) == *(v7 - 1) && *v6 == *v7;
      if (v9 || (OUTLINED_FUNCTION_13() & 1) != 0)
      {
        ++v8;
        v6 += 2;
        v7 += 2;
        if (v2 != v8)
          continue;
      }
      goto LABEL_18;
    }
    __break(1u);
  }
  else
  {
LABEL_18:
    OUTLINED_FUNCTION_18();
  }
}

uint64_t CaptionSectioner.Caption.init(id:participant:dateCreated:dateUpdated:image:text:isBadTranscription:lowConfidenceRanges:visibility:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  int *v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  uint64_t result;
  _QWORD *v30;
  uint64_t v31;
  char v32;

  OUTLINED_FUNCTION_65_5();
  v32 = v10;
  v31 = v11;
  v13 = v12;
  v15 = v14;
  v17 = v16;
  v19 = v18;
  v21 = v20;
  v23 = v22;
  *v22 = v24;
  v25 = (int *)OUTLINED_FUNCTION_46_6();
  outlined init with take of Participant(v21, (uint64_t)v23 + v25[5], type metadata accessor for Participant);
  v26 = (char *)v23 + v25[6];
  v27 = OUTLINED_FUNCTION_33();
  v28 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 32);
  v28(v26, v19, v27);
  result = ((uint64_t (*)(char *, uint64_t, uint64_t))v28)((char *)v23 + v25[7], v17, v27);
  *(_QWORD *)((char *)v23 + v25[8]) = v15;
  v30 = (_QWORD *)((char *)v23 + v25[9]);
  *v30 = v13;
  v30[1] = v31;
  *((_BYTE *)v23 + v25[10]) = v32;
  *(_QWORD *)((char *)v23 + v25[11]) = a9;
  *((_BYTE *)v23 + v25[12]) = a10;
  return result;
}

void CaptionSectioner.SpeakerSection.id.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  _s15ConversationKit11ParticipantVWOcTm_0(v1, a1, type metadata accessor for CaptionSectioner.SectionID);
}

uint64_t type metadata accessor for CaptionSectioner.SectionID(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for CaptionSectioner.SectionID);
}

void CaptionSectioner.SpeakerSection.id.setter(uint64_t a1)
{
  uint64_t v1;

  outlined assign with take of Participant(a1, v1, type metadata accessor for CaptionSectioner.SectionID);
}

void outlined assign with take of Participant(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  OUTLINED_FUNCTION_84(a1, a2, a3);
  OUTLINED_FUNCTION_100_0();
  OUTLINED_FUNCTION_38(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 40));
  OUTLINED_FUNCTION_0();
}

uint64_t (*CaptionSectioner.SpeakerSection.id.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void CaptionSectioner.SpeakerSection.participant.getter(uint64_t a1@<X8>)
{
  CaptionSectioner.Caption.participant.getter(type metadata accessor for CaptionSectioner.SpeakerSection, a1);
}

void CaptionSectioner.Caption.participant.getter(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  v4 = a1(0);
  _s15ConversationKit11ParticipantVWOcTm_0(v2 + *(int *)(v4 + 20), a2, type metadata accessor for Participant);
  OUTLINED_FUNCTION_0();
}

uint64_t type metadata accessor for CaptionSectioner.SpeakerSection(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for CaptionSectioner.SpeakerSection);
}

void CaptionSectioner.SpeakerSection.participant.setter(uint64_t a1)
{
  CaptionSectioner.Caption.participant.setter(a1, type metadata accessor for CaptionSectioner.SpeakerSection);
}

void CaptionSectioner.Caption.participant.setter(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_97_1(a1, a2);
  outlined assign with take of Participant(v2, v3 + *(int *)(v4 + 20), type metadata accessor for Participant);
  OUTLINED_FUNCTION_0();
}

uint64_t (*CaptionSectioner.SpeakerSection.participant.modify())(_QWORD)
{
  OUTLINED_FUNCTION_60_4();
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t CaptionSectioner.SpeakerSection.captions.getter()
{
  type metadata accessor for CaptionSectioner.SpeakerSection(0);
  return swift_bridgeObjectRetain();
}

void CaptionSectioner.SpeakerSection.captions.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(OUTLINED_FUNCTION_60_4() + 24);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  OUTLINED_FUNCTION_18();
}

uint64_t (*CaptionSectioner.SpeakerSection.captions.modify())(_QWORD)
{
  type metadata accessor for CaptionSectioner.SpeakerSection(0);
  return TPNumberPadCharacter.rawValue.getter;
}

void static CaptionSectioner.SpeakerSection.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v5;

  if ((static UUID.== infix(_:_:)() & 1) != 0 && (OUTLINED_FUNCTION_60_4(), OUTLINED_FUNCTION_49_8(), (v5 & 1) != 0))
    specialized static Array<A>.== infix(_:_:)(*(_QWORD *)(a1 + *(int *)(v2 + 24)), *(_QWORD *)(a2 + *(int *)(v2 + 24)));
  else
    OUTLINED_FUNCTION_18();
}

void CaptionSectioner.SpeakerSection.init(id:participant:captions:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;

  outlined init with take of Participant(a1, a4, type metadata accessor for CaptionSectioner.SectionID);
  v7 = OUTLINED_FUNCTION_60_4();
  outlined init with take of Participant(a2, a4 + *(int *)(v7 + 20), type metadata accessor for Participant);
  *(_QWORD *)(a4 + *(int *)(v7 + 24)) = a3;
  OUTLINED_FUNCTION_18();
}

void outlined init with take of Participant(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  OUTLINED_FUNCTION_84(a1, a2, a3);
  OUTLINED_FUNCTION_100_0();
  OUTLINED_FUNCTION_38(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 32));
  OUTLINED_FUNCTION_0();
}

void protocol witness for Identifiable.id.getter in conformance CaptionSectioner.SpeakerSection(uint64_t a1@<X8>)
{
  uint64_t v1;

  _s15ConversationKit11ParticipantVWOcTm_0(v1, a1, type metadata accessor for CaptionSectioner.SectionID);
}

void CaptionSectioner.CaptionID.hash(into:)(int a1, Swift::UInt a2)
{
  Hasher._combine(_:)(a2);
  OUTLINED_FUNCTION_0();
}

void CaptionSectioner.CaptionID.hashValue.getter()
{
  int v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  char v9;

  v0 = OUTLINED_FUNCTION_5_1();
  OUTLINED_FUNCTION_22_7(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);
  OUTLINED_FUNCTION_4_6();
  OUTLINED_FUNCTION_2();
}

void protocol witness for Hashable.hashValue.getter in conformance CaptionSectioner.CaptionID()
{
  CaptionSectioner.CaptionID.hashValue.getter();
}

void protocol witness for Hashable.hash(into:) in conformance CaptionSectioner.CaptionID(int a1)
{
  Swift::UInt *v1;

  CaptionSectioner.CaptionID.hash(into:)(a1, *v1);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance CaptionSectioner.CaptionID()
{
  int v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  char v9;

  v0 = Hasher.init(_seed:)();
  OUTLINED_FUNCTION_22_7(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);
  OUTLINED_FUNCTION_4_6();
  OUTLINED_FUNCTION_2();
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance CaptionSectioner.CaptionID(uint64_t *a1, uint64_t *a2)
{
  return static CaptionSectioner.CaptionID.== infix(_:_:)(*a1, *a2);
}

uint64_t CaptionSectioner.SectionID.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_100_0();
  return OUTLINED_FUNCTION_31_0(a2, a1, v5, *(uint64_t (**)(void))(v4 + 32));
}

uint64_t CaptionSectioner.SectionID.hash(into:)()
{
  OUTLINED_FUNCTION_33_0();
  _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  return dispatch thunk of Hashable.hash(into:)();
}

void CaptionSectioner.SectionID.hashValue.getter()
{
  OUTLINED_FUNCTION_5_1();
  OUTLINED_FUNCTION_33_0();
  _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  dispatch thunk of Hashable.hash(into:)();
  OUTLINED_FUNCTION_4_6();
  OUTLINED_FUNCTION_2();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance CaptionSectioner.SectionID()
{
  Hasher.init(_seed:)();
  type metadata accessor for UUID();
  _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  dispatch thunk of Hashable.hash(into:)();
  return Hasher._finalize()();
}

uint64_t CaptionSectioner.sections.getter()
{
  return swift_bridgeObjectRetain();
}

double CaptionSectioner.suppressionAge.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

double CaptionSectioner.maximumAge.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

void default argument 4 of CaptionSectioner.init(participants:badCaptionCountThreshold:suppressionAge:maximumAge:currentDate:)()
{
  OUTLINED_FUNCTION_34_0();
}

__n128 CaptionSectioner.init(participants:badCaptionCountThreshold:suppressionAge:maximumAge:currentDate:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>, double a7@<D1>)
{
  __n128 result;
  uint64_t v9;
  __n128 v10;
  __int128 v13;

  v9 = MEMORY[0x1E0DEE9D8];
  v10.n128_f64[0] = a6;
  v10.n128_f64[1] = a7;
  *(_QWORD *)&v13 = a3;
  *((_QWORD *)&v13 + 1) = a4;
  CaptionSectioner.updateCaptions()();
  result = v10;
  *(_QWORD *)a5 = v9;
  *(__n128 *)(a5 + 8) = v10;
  *(_QWORD *)(a5 + 24) = a1;
  *(_QWORD *)(a5 + 32) = a2;
  *(_OWORD *)(a5 + 40) = v13;
  return result;
}

Swift::Void __swiftcall CaptionSectioner.updateCaptions()()
{
  __int128 *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  __int128 v9;
  void (*v10)(void);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v17[16];
  uint64_t v18;
  _BYTE *v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;

  v3 = v0;
  v4 = OUTLINED_FUNCTION_33();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_59_3();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_112();
  MEMORY[0x1E0C80A78](v6);
  v8 = &v17[-v7];
  v9 = v0[2];
  v25 = v0[1];
  v26 = v9;
  v24 = *v0;
  v27 = *((_QWORD *)v0 + 6);
  v10 = (void (*)(void))*((_QWORD *)&v9 + 1);
  CaptionSectioner.gatherAndSortCaptions()();
  v12 = v11;
  v10();
  Date.addingTimeInterval(_:)();
  v13 = OUTLINED_FUNCTION_67_0(v2);
  (*((void (**)(uint64_t))v0 + 5))(v13);
  Date.addingTimeInterval(_:)();
  OUTLINED_FUNCTION_67_0(v1);
  v18 = v2;
  v19 = v8;
  _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSay15ConversationKit16CaptionSectionerV0F0VG_AJs5NeverOTg5((uint64_t)partial apply for closure #1 in CaptionSectioner.updateCaptions(), (uint64_t)v17, v12);
  OUTLINED_FUNCTION_25();
  v14 = v0[1];
  v20 = *v0;
  v21 = v14;
  v22 = v0[2];
  v23 = *((_QWORD *)v0 + 6);
  CaptionSectioner.chunkSections(sortedCaptions:)();
  v16 = v15;
  OUTLINED_FUNCTION_2_1();
  OUTLINED_FUNCTION_67_0(v2);
  OUTLINED_FUNCTION_67_0((uint64_t)v8);
  swift_bridgeObjectRelease();
  *v3 = v16;
}

void CaptionSectioner.update(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  char v8;
  char v9;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(_QWORD);

  v5 = *(_QWORD *)(v1 + 24);
  v3 = (uint64_t *)(v1 + 24);
  v4 = v5;
  swift_bridgeObjectRetain();
  specialized Collection<>.firstIndex(of:)();
  v7 = v6;
  v9 = v8;
  swift_bridgeObjectRelease();
  if ((v9 & 1) != 0)
  {
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:));
    v13 = *(_QWORD *)(*v3 + 16);
    specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(v13);
    v14 = *v3;
    *(_QWORD *)(*v3 + 16) = v13 + 1;
    OUTLINED_FUNCTION_14_2();
    OUTLINED_FUNCTION_12_11();
    _s15ConversationKit11ParticipantVWOcTm_0(a1, v14 + v15 + *(_QWORD *)(v16 + 72) * v13, v17);
    *v3 = v14;
    goto LABEL_7;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v3 = v4;
  if ((isUniquelyReferenced_nonNull_native & 1) != 0)
  {
    if ((v7 & 0x8000000000000000) == 0)
      goto LABEL_4;
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v4 = specialized _ArrayBuffer._consumeAndCreateNew()();
  *v3 = v4;
  if ((v7 & 0x8000000000000000) != 0)
    goto LABEL_9;
LABEL_4:
  if (v7 < *(_QWORD *)(v4 + 16))
  {
    OUTLINED_FUNCTION_14_2();
    OUTLINED_FUNCTION_12_11();
    outlined assign with copy of Participant(a1, v4 + v11 + *(_QWORD *)(v12 + 72) * v7);
LABEL_7:
    CaptionSectioner.updateCaptions()();
    return;
  }
LABEL_10:
  __break(1u);
}

void specialized Collection<>.firstIndex(of:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned __int8 *v36;
  int v37;
  int v38;
  unsigned __int8 *v39;
  int v40;
  int v41;
  int v42;
  _BYTE v43[12];
  int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _BYTE *v57;

  OUTLINED_FUNCTION_93();
  v3 = v2;
  v5 = v4;
  v51 = OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_20_7();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_24_15();
  OUTLINED_FUNCTION_64_2();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_111_1();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_109_3();
  MEMORY[0x1E0C80A78](v9);
  v57 = &v43[-v10];
  OUTLINED_FUNCTION_8_4();
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = &v43[-v13];
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_110_0();
  MEMORY[0x1E0C80A78](v15);
  v19 = &v43[-v18];
  v56 = *(_QWORD *)(v3 + 16);
  if (v56)
  {
    v54 = v16;
    v55 = v17;
    v20 = 0;
    OUTLINED_FUNCTION_37_3();
    v22 = v3 + v21;
    v52 = *(_QWORD *)(v23 + 72);
    v53 = v0;
    while (1)
    {
      OUTLINED_FUNCTION_13_29(v22, (uint64_t)v19);
      static Participant.State.== infix(_:_:)();
      v25 = v24;
      v26 = v55;
      OUTLINED_FUNCTION_13_29((uint64_t)v19, v55);
      OUTLINED_FUNCTION_13_29(v5, (uint64_t)v14);
      if ((v25 & 1) == 0)
        break;
      v27 = static UUID.== infix(_:_:)();
      OUTLINED_FUNCTION_7_43((uint64_t)v14);
      OUTLINED_FUNCTION_7_43(v26);
      OUTLINED_FUNCTION_13_29((uint64_t)v19, (uint64_t)v57);
      OUTLINED_FUNCTION_13_29(v5, v0);
      if ((v27 & 1) == 0)
        goto LABEL_13;
      v28 = v5;
      v29 = v14;
      v30 = v0;
      v31 = v51;
      v32 = *(_QWORD *)&v57[*(int *)(v51 + 28)] != 0;
      OUTLINED_FUNCTION_7_43((uint64_t)v57);
      LOBYTE(v31) = *(_QWORD *)(v30 + *(int *)(v31 + 28)) == 0;
      v33 = v30;
      v14 = v29;
      v5 = v28;
      OUTLINED_FUNCTION_7_43(v33);
      LOBYTE(v28) = v32 ^ v31;
      v34 = v54;
      OUTLINED_FUNCTION_13_29((uint64_t)v19, v54);
      OUTLINED_FUNCTION_13_29(v5, v1);
      if ((v28 & 1) == 0)
        goto LABEL_14;
      v35 = v51;
      v36 = (unsigned __int8 *)(v34 + *(int *)(v51 + 24));
      v37 = *v36;
      v49 = v36[1];
      v50 = v37;
      v48 = v36[2];
      v46 = v36[3];
      v38 = v36[4];
      OUTLINED_FUNCTION_7_43(v34);
      v39 = (unsigned __int8 *)(v1 + *(int *)(v35 + 24));
      v40 = *v39;
      v41 = v39[1];
      v47 = v39[2];
      v42 = v39[3];
      v44 = v39[4];
      v45 = v42;
      OUTLINED_FUNCTION_7_43(v1);
      if (v50 == v40 && ((v49 ^ v41) & 1) == 0 && ((v48 ^ v47) & 1) == 0 && ((v46 ^ v45) & 1) == 0)
      {
        OUTLINED_FUNCTION_7_43((uint64_t)v19);
        v0 = v53;
        if (v38 == v44)
          goto LABEL_17;
        goto LABEL_16;
      }
LABEL_15:
      OUTLINED_FUNCTION_7_43((uint64_t)v19);
      v0 = v53;
LABEL_16:
      ++v20;
      v22 += v52;
      if (v56 == v20)
        goto LABEL_17;
    }
    OUTLINED_FUNCTION_7_43((uint64_t)v14);
    OUTLINED_FUNCTION_7_43(v26);
    OUTLINED_FUNCTION_13_29((uint64_t)v19, (uint64_t)v57);
    OUTLINED_FUNCTION_13_29(v5, v0);
LABEL_13:
    OUTLINED_FUNCTION_7_43(v0);
    OUTLINED_FUNCTION_7_43((uint64_t)v57);
    v34 = v54;
    OUTLINED_FUNCTION_13_29((uint64_t)v19, v54);
    OUTLINED_FUNCTION_13_29(v5, v1);
LABEL_14:
    OUTLINED_FUNCTION_7_43(v1);
    OUTLINED_FUNCTION_7_43(v34);
    goto LABEL_15;
  }
LABEL_17:
  OUTLINED_FUNCTION_52_1();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  char v7;

  OUTLINED_FUNCTION_93();
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = v1;
    OUTLINED_FUNCTION_59(v0, (unint64_t *)&lazy cache variable for type metadata for NSObject);
    v4 = 0;
    v5 = v3 + 48;
    do
    {
      v6 = *(id *)(v5 - 16);
      swift_bridgeObjectRetain();
      swift_retain();
      v7 = OUTLINED_FUNCTION_61_2();
      swift_release();
      swift_bridgeObjectRelease();

      if ((v7 & 1) != 0)
        break;
      ++v4;
      v5 += 24;
    }
    while (v2 != v4);
  }
  OUTLINED_FUNCTION_52_1();
}

uint64_t specialized Collection<>.firstIndex(of:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  type metadata accessor for HUDActivityManager.BannerUpdate(0);
  v4 = 0;
  OUTLINED_FUNCTION_12_11();
  v6 = a2 + v5;
  v8 = *(_QWORD *)(v7 + 72);
  while (1)
  {
    static HUDActivityManager.BannerUpdate.== infix(_:_:)();
    if ((v9 & 1) != 0)
      break;
    ++v4;
    v6 += v8;
    if (v2 == v4)
      return 0;
  }
  return v4;
}

#error "1BD098A08: call analysis failed (funcsize=70)"

uint64_t specialized Collection<>.firstIndex(of:)(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  BOOL v7;
  uint64_t result;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  char v13;

  v3 = a3[2];
  if (!v3)
    return 0;
  v7 = a3[4] == a1 && a3[5] == a2;
  if (v7 || (OUTLINED_FUNCTION_13() & 1) != 0)
    return 0;
  v9 = 0;
  v10 = a3 + 7;
  v11 = 1;
  while (1)
  {
    if (v3 == v11)
      return 0;
    ++v9;
    if (*(v10 - 1) == a1 && *v10 == a2)
      break;
    v13 = OUTLINED_FUNCTION_13();
    result = v11++;
    v10 += 2;
    if ((v13 & 1) != 0)
      return result;
  }
  return v9;
}

#error "1BD098CC4: call analysis failed (funcsize=70)"

void CaptionSectioner.gatherAndSortCaptions()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  const void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char v57[8];
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71[42];
  _QWORD v72[2];

  OUTLINED_FUNCTION_93();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CaptionSectioner.Caption?);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_77();
  v5 = v4 - v3;
  v6 = type metadata accessor for CaptionSectioner.Caption(0);
  v63 = *(_QWORD *)(v6 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_5_27();
  v66 = v8;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_108_0();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_18_0();
  v61 = v11;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_62();
  v70 = v13;
  v65 = type metadata accessor for Participant.State(0);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_77();
  v17 = v16 - v15;
  v67 = v0;
  v68 = v6;
  v18 = *(_QWORD *)(v0 + 24);
  v72[0] = v18;
  v19 = *(_QWORD *)(v18 + 16);
  v62 = v5;
  v69 = v1;
  if (!v19)
  {
    v23 = MEMORY[0x1E0DEE9D8];
LABEL_26:
    v71[0] = v23;
    swift_bridgeObjectRetain();
    specialized MutableCollection<>.sort(by:)(v71);
    OUTLINED_FUNCTION_21_0();
    v41 = *(_QWORD *)(v71[0] + 16);
    if (v41)
    {
      OUTLINED_FUNCTION_37_3();
      v64 = v42;
      v65 = v43;
      v45 = v44 + v42;
      v47 = *(_QWORD *)(v46 + 72);
      v63 = v44;
      swift_retain();
      v48 = 0;
      v67 = MEMORY[0x1E0DEE9D8];
      do
      {
        v49 = v47;
        v50 = v70;
        OUTLINED_FUNCTION_9_29(v45, v70);
        if (*(_BYTE *)(v50 + *(int *)(v6 + 40)) == 1)
        {
          v39 = __OFADD__(v48++, 1);
          if (v39)
            goto LABEL_50;
        }
        else
        {
          v48 = 0;
        }
        OUTLINED_FUNCTION_9_29(v70, v1);
        v51 = v65;
        *(_BYTE *)(v1 + *(int *)(v6 + 40)) = v48 >= v65;
        v47 = v49;
        if (v51 >= v48)
        {
          OUTLINED_FUNCTION_54_6(v1, v5);
          v52 = 0;
        }
        else
        {
          OUTLINED_FUNCTION_16_16(v1);
          v52 = 1;
        }
        __swift_storeEnumTagSinglePayload(v5, v52, 1, v6);
        OUTLINED_FUNCTION_16_16(v70);
        if (__swift_getEnumTagSinglePayload(v5, 1, v6) == 1)
        {
          outlined destroy of CaptionSectioner.Caption?(v5);
        }
        else
        {
          v53 = v5;
          v54 = v61;
          OUTLINED_FUNCTION_54_6(v53, v61);
          OUTLINED_FUNCTION_54_6(v54, v66);
          v55 = v67;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v55 = OUTLINED_FUNCTION_88_1();
          v56 = *(_QWORD *)(v55 + 16);
          if (v56 >= *(_QWORD *)(v55 + 24) >> 1)
            v55 = OUTLINED_FUNCTION_88_1();
          *(_QWORD *)(v55 + 16) = v56 + 1;
          v67 = v55;
          OUTLINED_FUNCTION_54_6(v66, v55 + v64 + v56 * v47);
          v5 = v62;
          v6 = v68;
          v1 = v69;
        }
        v45 += v47;
        --v41;
      }
      while (v41);
      swift_release_n();
    }
    else
    {
      swift_release();
    }
    OUTLINED_FUNCTION_52_1();
    return;
  }
  OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_12_11();
  v21 = v18 + v20;
  v64 = *(_QWORD *)(v22 + 72);
  swift_bridgeObjectRetain_n();
  v23 = MEMORY[0x1E0DEE9D8];
  while (1)
  {
    OUTLINED_FUNCTION_34_14(v21, v17);
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      v25 = (const void *)(v17 + *(int *)(v24 + 48));
      outlined consume of Participant.CopresenceInfo?(*(_QWORD *)(v17 + *(int *)(v24 + 64)), *(_QWORD *)(v17 + *(int *)(v24 + 64) + 8));
      memcpy(v71, v25, sizeof(v71));
      v26 = OUTLINED_FUNCTION_33();
      OUTLINED_FUNCTION_96_1(*(_QWORD *)(v26 - 8));
      v27 = v71[39];
      v28 = v71[41];
      outlined copy of Participant.CaptionInfo?(v71[39]);
      v29 = outlined destroy of Participant.MediaInfo((uint64_t)v71);
      if (v27)
      {
        v29 = swift_unknownObjectRelease();
        goto LABEL_8;
      }
    }
    else
    {
      OUTLINED_FUNCTION_23_20(v17);
    }
    v28 = MEMORY[0x1E0DEE9D8];
LABEL_8:
    MEMORY[0x1E0C80A78](v29);
    v59 = v21;
    v60 = v67;
    v30 = _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSay15ConversationKit11ParticipantV7CaptionVG_AF0G9SectionerVAIVs5NeverOTg5((void (*)(uint64_t))partial apply for closure #1 in closure #1 in CaptionSectioner.gatherAndSortCaptions(), (uint64_t)v57, v28);
    swift_bridgeObjectRelease();
    v31 = *(_QWORD *)(v30 + 16);
    v32 = *(_QWORD *)(v23 + 16);
    if (__OFADD__(v32, v31))
      break;
    if (!swift_isUniquelyReferenced_nonNull_native() || v32 + v31 > *(_QWORD *)(v23 + 24) >> 1)
      v23 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    v1 = v69;
    if (*(_QWORD *)(v30 + 16))
    {
      v33 = *(_QWORD *)(v23 + 16);
      if ((*(_QWORD *)(v23 + 24) >> 1) - v33 < v31)
        goto LABEL_49;
      v34 = (*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
      v35 = *(_QWORD *)(v63 + 72);
      v36 = v23 + v34 + v35 * v33;
      if (v30 + v34 < v36 + v35 * v31 && v36 < v30 + v34 + v35 * v31)
        goto LABEL_52;
      swift_arrayInitWithCopy();
      if (v31)
      {
        v38 = *(_QWORD *)(v23 + 16);
        v39 = __OFADD__(v38, v31);
        v40 = v38 + v31;
        if (v39)
          goto LABEL_51;
        *(_QWORD *)(v23 + 16) = v40;
      }
    }
    else if (v31)
    {
      goto LABEL_48;
    }
    swift_bridgeObjectRelease();
    v21 += v64;
    if (!--v19)
    {
      outlined release of LinearGradient((uint64_t)v72);
      outlined release of LinearGradient((uint64_t)v72);
      v5 = v62;
      v6 = v68;
      goto LABEL_26;
    }
  }
  __break(1u);
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  LODWORD(v59) = 0;
  v58 = 1092;
  v57[0] = 2;
  _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  swift_release();
  __break(1u);
}

uint64_t closure #1 in CaptionSectioner.updateCaptions()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char v6;

  _s15ConversationKit11ParticipantVWOcTm_0(a1, a2, type metadata accessor for CaptionSectioner.Caption);
  v3 = type metadata accessor for CaptionSectioner.Caption(0);
  result = static Date.< infix(_:_:)();
  if ((result & 1) != 0)
  {
    v5 = *(int *)(v3 + 48);
    v6 = 2;
LABEL_5:
    *(_BYTE *)(a2 + v5) = v6;
    return result;
  }
  result = static Date.< infix(_:_:)();
  v5 = *(int *)(v3 + 48);
  if ((result & 1) != 0)
  {
    v6 = 1;
    goto LABEL_5;
  }
  *(_BYTE *)(a2 + v5) = 0;
  return result;
}

uint64_t partial apply for closure #1 in CaptionSectioner.updateCaptions()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return closure #1 in CaptionSectioner.updateCaptions()(a1, a2);
}

void CaptionSectioner.chunkSections(sortedCaptions:)()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t KeyPath;
  uint64_t (*v28)(uint64_t);
  uint64_t (*v29)(uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t *v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t *v79;
  uint64_t (*v80)(uint64_t);
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t (*v88)();
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;

  OUTLINED_FUNCTION_93();
  v4 = v3;
  v77 = OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_41();
  v76 = v6;
  type metadata accessor for CaptionSectioner.SectionID(0);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_59_3();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_62();
  v75 = v9;
  v70 = OUTLINED_FUNCTION_60_4();
  v71 = *(_QWORD *)(v70 - 8);
  OUTLINED_FUNCTION_10_1();
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_62();
  v74 = v14;
  v85 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (offset: Int, element: CaptionSectioner.Caption));
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_41();
  v73 = v16;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (offset: Int, element: CaptionSectioner.Caption)?);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_58_0();
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v68 - v19;
  v81 = OUTLINED_FUNCTION_46_6();
  v83 = *(_QWORD *)(v81 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v21);
  OUTLINED_FUNCTION_5_27();
  v72 = v22;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v23);
  OUTLINED_FUNCTION_18_0();
  v84 = v24;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v25);
  if (!*(_QWORD *)(v4 + 16))
    goto LABEL_38;
  v79 = (uint64_t *)v20;
  v68 = v1;
  v80 = (uint64_t (*)(uint64_t))((char *)&v68 - v26);
  v69 = v13;
  KeyPath = specialized BidirectionalCollection.suffix(_:)(50, v4);
  v29 = v28;
  swift_bridgeObjectRetain();
  v30 = specialized Array.init<A>(_:)();
  if (!*(_QWORD *)(v30 + 16))
  {
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    v39 = OUTLINED_FUNCTION_30_18();
    goto LABEL_34;
  }
  v31 = v30;
  OUTLINED_FUNCTION_37_3();
  v78 = v32 + v33;
  v29 = v80;
  _s15ConversationKit11ParticipantVWOcTm_0(v32 + v33, (uint64_t)v80, type metadata accessor for CaptionSectioner.Caption);
  v34 = *v0;
  KeyPath = swift_getKeyPath();
  v35 = swift_getKeyPath();
  v36 = swift_getKeyPath();
  v86 = 0;
  v87 = v34;
  v88 = closure #1 in CaptionSectioner.chunkSections(sortedCaptions:);
  v89 = 0;
  v90 = KeyPath;
  v91 = v35;
  v92 = v36;
  v82 = *(_QWORD *)(v31 + 16);
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_79_1();
  v37 = 0;
  v38 = 0;
  v39 = MEMORY[0x1E0DEE9D8];
  while (1)
  {
    v40 = v85;
    v41 = v79;
    if (v38 == v82)
    {
      v42 = 1;
      v38 = v82;
    }
    else
    {
      if (v38 >= *(_QWORD *)(v31 + 16))
      {
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
        goto LABEL_43;
      }
      KeyPath = v38 + 1;
      v43 = v73 + *(int *)(v85 + 48);
      OUTLINED_FUNCTION_9_29(v78 + *(_QWORD *)(v83 + 72) * v38, v43);
      v44 = (uint64_t)v2 + *(int *)(v85 + 48);
      *v2 = v38;
      v45 = v43;
      v40 = v85;
      OUTLINED_FUNCTION_54_6(v45, v44);
      v42 = 0;
      ++v38;
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v2, v42, 1, v40);
    outlined init with take of (offset: Int, element: CaptionSectioner.Caption)?((uint64_t)v2, (uint64_t)v41);
    if (__swift_getEnumTagSinglePayload((uint64_t)v41, 1, v40) == 1)
      break;
    v46 = v2;
    v47 = v39;
    v48 = v41;
    v49 = *v41;
    outlined init with take of Participant((uint64_t)v48 + *(int *)(v40 + 48), v84, type metadata accessor for CaptionSectioner.Caption);
    KeyPath = (uint64_t)v29 + *(int *)(v81 + 20);
    v29 = (uint64_t (*)(uint64_t))(KeyPath + *(int *)(v77 + 20));
    OUTLINED_FUNCTION_33_0();
    _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
    if ((dispatch thunk of static Equatable.== infix(_:_:)() & 1) != 0)
    {
      v29 = v80;
      v2 = v46;
    }
    else
    {
      if (v37 >= *(_QWORD *)(v31 + 16))
        goto LABEL_40;
      v50 = OUTLINED_FUNCTION_84_0();
      v51 = v72;
      v29 = type metadata accessor for CaptionSectioner.Caption;
      _s15ConversationKit11ParticipantVWOcTm_0(v50, v72, type metadata accessor for CaptionSectioner.Caption);
      specialized FindMatchByWalking.callAsFunction(firstRowInNewSection:)(v51, v75);
      outlined destroy of CaptionSectioner.Caption(v51, type metadata accessor for CaptionSectioner.Caption);
      _s15ConversationKit11ParticipantVWOcTm_0(KeyPath, v76, type metadata accessor for Participant);
      KeyPath = v49 - v37;
      if (v49 < v37)
        goto LABEL_41;
      v52 = *(_QWORD *)(v31 + 16);
      if (v52 < v37 || v52 < v49)
        goto LABEL_42;
      type metadata accessor for __ContiguousArrayStorageBase();
      OUTLINED_FUNCTION_79_1();
      swift_unknownObjectRetain_n();
      v54 = swift_dynamicCastClass();
      if (!v54)
      {
        OUTLINED_FUNCTION_25();
        v54 = MEMORY[0x1E0DEE9D8];
      }
      v55 = *(_QWORD *)(v54 + 16);
      swift_release();
      v29 = v80;
      if (v55 == KeyPath)
      {
        v39 = v47;
        if (!swift_dynamicCastClass())
          OUTLINED_FUNCTION_25();
      }
      else
      {
        OUTLINED_FUNCTION_25();
        specialized _copyCollectionToContiguousArray<A>(_:)(v31, v78, v37, (2 * v49) | 1);
        v39 = v47;
      }
      OUTLINED_FUNCTION_25();
      KeyPath = v74;
      outlined init with take of Participant(v75, v74, type metadata accessor for CaptionSectioner.SectionID);
      OUTLINED_FUNCTION_86_2();
      outlined init with take of Participant(v76, v56, type metadata accessor for Participant);
      v2 = v46;
      if ((OUTLINED_FUNCTION_72_3() & 1) == 0)
        v39 = OUTLINED_FUNCTION_30_18();
      v57 = *(_QWORD *)(v39 + 16);
      if (v57 >= *(_QWORD *)(v39 + 24) >> 1)
        v39 = OUTLINED_FUNCTION_30_18();
      *(_QWORD *)(v39 + 16) = v57 + 1;
      OUTLINED_FUNCTION_40_12();
      outlined init with take of Participant(v74, v58 + v59 * v57, type metadata accessor for CaptionSectioner.SpeakerSection);
      v37 = v49;
    }
    OUTLINED_FUNCTION_23_20((uint64_t)v29);
    outlined init with take of Participant(v84, (uint64_t)v29, type metadata accessor for CaptionSectioner.Caption);
  }
  OUTLINED_FUNCTION_25();
  if (v37 == v82)
  {
    OUTLINED_FUNCTION_25();
    goto LABEL_37;
  }
  if (v37 >= *(_QWORD *)(v31 + 16))
    goto LABEL_44;
  v60 = OUTLINED_FUNCTION_84_0();
  v61 = v72;
  OUTLINED_FUNCTION_13_29(v60, v72);
  v62 = v68;
  specialized FindMatchByWalking.callAsFunction(firstRowInNewSection:)(v61, v68);
  OUTLINED_FUNCTION_7_43(v61);
  v63 = (uint64_t)v29 + *(int *)(v81 + 20);
  specialized MutableCollection.subscript.getter(v37, v31);
  OUTLINED_FUNCTION_25();
  specialized Array.init<A>(_:)();
  KeyPath = (uint64_t)v69;
  outlined init with take of Participant(v62, (uint64_t)v69, type metadata accessor for CaptionSectioner.SectionID);
  OUTLINED_FUNCTION_86_2();
  _s15ConversationKit11ParticipantVWOcTm_0(v63, v64, type metadata accessor for Participant);
  if ((OUTLINED_FUNCTION_72_3() & 1) == 0)
    goto LABEL_45;
LABEL_34:
  v65 = *(_QWORD *)(v39 + 16);
  if (v65 >= *(_QWORD *)(v39 + 24) >> 1)
    v39 = OUTLINED_FUNCTION_30_18();
  *(_QWORD *)(v39 + 16) = v65 + 1;
  OUTLINED_FUNCTION_40_12();
  outlined init with take of Participant(KeyPath, v66 + v67 * v65, type metadata accessor for CaptionSectioner.SpeakerSection);
LABEL_37:
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  outlined destroy of CaptionSectioner.Caption((uint64_t)v29, type metadata accessor for CaptionSectioner.Caption);
LABEL_38:
  OUTLINED_FUNCTION_52_1();
}

uint64_t closure #1 in closure #1 in CaptionSectioner.gatherAndSortCaptions()@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t (*v17)(_QWORD);
  int *v18;
  void (*v19)(char *, char *, uint64_t);
  char *v20;
  uint64_t *v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  int *v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t result;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;

  v31 = a3;
  v7 = type metadata accessor for Date();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v29 - v12;
  v14 = type metadata accessor for Participant(0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = *(_QWORD *)a1;
  _s15ConversationKit11ParticipantVWOcTm_0(a2, (uint64_t)v16, v17);
  v18 = (int *)type metadata accessor for Participant.Caption(0);
  v19 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v19(v13, &a1[v18[5]], v7);
  v20 = &a1[v18[6]];
  v32 = v11;
  v19(v11, v20, v7);
  v21 = (uint64_t *)&a1[v18[7]];
  v22 = v21[1];
  v30 = *v21;
  swift_bridgeObjectRetain();
  v23 = CaptionSectioner.isBad(_:)((uint64_t)a1);
  if (a1[v18[8]] == 1)
  {
    v24 = *(_QWORD *)&a1[v18[9]];
    swift_bridgeObjectRetain();
  }
  else
  {
    v24 = MEMORY[0x1E0DEE9D8];
  }
  *(_QWORD *)a4 = v29;
  v25 = (int *)type metadata accessor for CaptionSectioner.Caption(0);
  outlined init with take of Participant((uint64_t)v16, (uint64_t)&a4[v25[5]], type metadata accessor for Participant);
  v26 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v26(&a4[v25[6]], v13, v7);
  result = ((uint64_t (*)(char *, char *, uint64_t))v26)(&a4[v25[7]], v32, v7);
  *(_QWORD *)&a4[v25[8]] = 0;
  v28 = &a4[v25[9]];
  *(_QWORD *)v28 = v30;
  *((_QWORD *)v28 + 1) = v22;
  a4[v25[10]] = v23 & 1;
  *(_QWORD *)&a4[v25[11]] = v24;
  a4[v25[12]] = 0;
  return result;
}

uint64_t CaptionSectioner.isBad(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  BOOL v10;
  float v11;

  v2 = type metadata accessor for Participant.Caption(0);
  if (*(_BYTE *)(a1 + *(int *)(v2 + 32)) != 1)
    return 0;
  v3 = v2;
  result = String.count.getter();
  if (result < 1)
    return 0;
  v5 = *(_QWORD *)(a1 + *(int *)(v3 + 36));
  v6 = *(_QWORD *)(v5 + 16);
  if (v6)
  {
    v7 = 0;
    v8 = (uint64_t *)(v5 + 40);
    while (1)
    {
      v9 = *v8;
      v8 += 2;
      v10 = __OFADD__(v7, v9);
      v7 += v9;
      if (v10)
        break;
      if (!--v6)
      {
        v11 = (float)v7;
        return (float)(v11 / (float)String.count.getter()) > 0.75;
      }
    }
    __break(1u);
  }
  else
  {
    v11 = 0.0;
    return (float)(v11 / (float)String.count.getter()) > 0.75;
  }
  return result;
}

uint64_t FindMatchByWalking.init(currentSections:newID:sectionRow:rowAgeKey:groupedByPivot:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  *a7 = 0;
  a7[1] = result;
  a7[2] = a2;
  a7[3] = a3;
  a7[4] = a4;
  a7[5] = a5;
  a7[6] = a6;
  return result;
}

void specialized FindMatchByWalking.callAsFunction(firstRowInNewSection:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  char *v36;
  uint64_t v37;
  char v38;
  void (*v39)(char *, uint64_t);
  char *v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v3 = v2;
  v50 = a1;
  v45 = a2;
  v4 = type metadata accessor for Participant(0);
  v5 = MEMORY[0x1E0C80A78](v4);
  v51 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v44 - v7;
  v9 = type metadata accessor for Date();
  v53 = *(_QWORD *)(v9 - 8);
  v54 = v9;
  v10 = MEMORY[0x1E0C80A78](v9);
  v47 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v44 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CaptionSectioner.Caption?);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for CaptionSectioner.SpeakerSection(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x1E0C80A78](v17);
  v44 = (uint64_t)&v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v44 - v21;
  v56 = type metadata accessor for CaptionSectioner.Caption(0);
  v52 = *(_QWORD *)(v56 - 8);
  v23 = MEMORY[0x1E0C80A78](v56);
  v25 = (char *)&v44 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = *v2;
  v27 = v2[1];
  v28 = *(_QWORD *)(v27 + 16);
  if (*v2 >= v28)
  {
LABEL_16:
    ((void (*)(uint64_t))v3[2])(v23);
    return;
  }
  v48 = v18;
  v49 = v8;
  v46 = v25;
  while (1)
  {
    if (v26 < 0)
    {
      __break(1u);
LABEL_23:
      __break(1u);
LABEL_24:
      __break(1u);
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    if (v26 >= (unint64_t)v28)
      goto LABEL_23;
    v55 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
    v29 = *(_QWORD *)(v18 + 72);
    _s15ConversationKit11ParticipantVWOcTm_0(v27 + v55 + v29 * v26, (uint64_t)v22, type metadata accessor for CaptionSectioner.SpeakerSection);
    swift_getAtKeyPath();
    outlined destroy of CaptionSectioner.Caption((uint64_t)v22, type metadata accessor for CaptionSectioner.SpeakerSection);
    v30 = *(_QWORD *)(v57 + 16);
    if (v30)
    {
      _s15ConversationKit11ParticipantVWOcTm_0(v57+ ((*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80))+ *(_QWORD *)(v52 + 72) * (v30 - 1), (uint64_t)v16, type metadata accessor for CaptionSectioner.Caption);
      v31 = 0;
    }
    else
    {
      v31 = 1;
    }
    v32 = v56;
    __swift_storeEnumTagSinglePayload((uint64_t)v16, v31, 1, v56);
    swift_bridgeObjectRelease();
    if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v32) == 1)
    {
      v23 = outlined destroy of CaptionSectioner.Caption?((uint64_t)v16);
      v26 = *v3 + 1;
      if (__OFADD__(*v3, 1))
        goto LABEL_24;
      goto LABEL_15;
    }
    outlined init with take of Participant((uint64_t)v16, (uint64_t)v25, type metadata accessor for CaptionSectioner.Caption);
    swift_getAtKeyPath();
    swift_getAtKeyPath();
    v33 = (uint64_t)v51;
    swift_getAtKeyPath();
    static Participant.== infix(_:_:)();
    v35 = v34;
    outlined destroy of CaptionSectioner.Caption(v33, type metadata accessor for Participant);
    if ((v35 & 1) != 0)
    {
      v36 = v47;
      swift_getAtKeyPath();
      _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type Date and conformance Date, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
      v37 = v54;
      v38 = dispatch thunk of static Comparable.>= infix(_:_:)();
      v39 = *(void (**)(char *, uint64_t))(v53 + 8);
      v40 = v36;
      v25 = v46;
      v39(v40, v37);
      if ((v38 & 1) != 0)
        break;
    }
    outlined destroy of CaptionSectioner.Caption((uint64_t)v49, type metadata accessor for Participant);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v13, v54);
    outlined destroy of CaptionSectioner.Caption((uint64_t)v25, type metadata accessor for CaptionSectioner.Caption);
    v26 = *v3 + 1;
    v18 = v48;
    if (__OFADD__(*v3, 1))
      goto LABEL_25;
LABEL_15:
    *v3 = v26;
    v27 = v3[1];
    v28 = *(_QWORD *)(v27 + 16);
    if (v26 >= v28)
      goto LABEL_16;
  }
  v41 = *v3;
  if (*v3 < 0)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v42 = v3[1];
  if (v41 >= *(_QWORD *)(v42 + 16))
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v43 = v44;
  _s15ConversationKit11ParticipantVWOcTm_0(v42 + v55 + v41 * v29, v44, type metadata accessor for CaptionSectioner.SpeakerSection);
  _s15ConversationKit11ParticipantVWOcTm_0(v43, v45, type metadata accessor for CaptionSectioner.SectionID);
  outlined destroy of CaptionSectioner.Caption(v43, type metadata accessor for CaptionSectioner.SpeakerSection);
  outlined destroy of CaptionSectioner.Caption((uint64_t)v49, type metadata accessor for Participant);
  v39(v13, v54);
  outlined destroy of CaptionSectioner.Caption((uint64_t)v25, type metadata accessor for CaptionSectioner.Caption);
  if (!__OFADD__(*v3, 1))
  {
    ++*v3;
    return;
  }
LABEL_28:
  __break(1u);
}

void FindMatchByWalking.callAsFunction(firstRowInNewSection:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[14];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;

  OUTLINED_FUNCTION_93();
  v1 = v0;
  v19[1] = v2;
  v25 = *(_QWORD *)(v0 + 32);
  v19[12] = *(_QWORD *)(v25 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_5_27();
  v19[10] = v4;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_62();
  v24 = v6;
  v20 = *(_QWORD *)(v7 + 40);
  v19[13] = *(_QWORD *)(v20 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_5_27();
  v19[3] = v9;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_62();
  v19[11] = v11;
  v12 = type metadata accessor for Optional();
  v19[8] = *(_QWORD *)(v12 - 8);
  v19[9] = v12;
  MEMORY[0x1E0C80A78](v12);
  v23 = (char *)v19 - v13;
  v22 = *(_QWORD *)(*(_QWORD *)(v1 + 16) - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_5_27();
  v19[0] = v15;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_62();
  v21 = v17;
  MEMORY[0x1E0C80A78](v18);
  OUTLINED_FUNCTION_77_1();
  OUTLINED_FUNCTION_63_7();
}

uint64_t FindMatchByWalking.currentSections.getter()
{
  return swift_bridgeObjectRetain();
}

void FindMatchByWalking.newID.getter()
{
  swift_retain();
  OUTLINED_FUNCTION_0();
}

uint64_t FindMatchByWalking.sectionRow.getter()
{
  return swift_retain();
}

uint64_t FindMatchByWalking.rowAgeKey.getter()
{
  return swift_retain();
}

uint64_t FindMatchByWalking.groupedByPivot.getter()
{
  return swift_retain();
}

void specialized Array._makeUniqueAndReserveCapacityIfNotUnique()()
{
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:));
}

{
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:));
}

{
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:));
}

{
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:));
}

{
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:));
}

{
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:));
}

{
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:));
}

{
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:));
}

{
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:));
}

{
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:));
}

void specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(uint64_t (*a1)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t isUniquelyReferenced_nonNull_native;

  v3 = *v1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v1 = v3;
  if (!(_DWORD)isUniquelyReferenced_nonNull_native)
    *v1 = a1(isUniquelyReferenced_nonNull_native, *(_QWORD *)(v3 + 16) + 1, 1, v3);
  OUTLINED_FUNCTION_18();
}

uint64_t specialized _ArrayBuffer._consumeAndCreateNew()()
{
  OUTLINED_FUNCTION_10_13();
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  OUTLINED_FUNCTION_10_13();
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  OUTLINED_FUNCTION_10_13();
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  OUTLINED_FUNCTION_10_13();
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  OUTLINED_FUNCTION_10_13();
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  OUTLINED_FUNCTION_10_13();
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t outlined assign with copy of Participant(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Participant(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

unint64_t lazy protocol witness table accessor for type CaptionSectioner.Caption.Visibility and conformance CaptionSectioner.Caption.Visibility()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type CaptionSectioner.Caption.Visibility and conformance CaptionSectioner.Caption.Visibility;
  if (!lazy protocol witness table cache variable for type CaptionSectioner.Caption.Visibility and conformance CaptionSectioner.Caption.Visibility)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for CaptionSectioner.Caption.Visibility, &type metadata for CaptionSectioner.Caption.Visibility);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type CaptionSectioner.Caption.Visibility and conformance CaptionSectioner.Caption.Visibility);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type CaptionSectioner.CaptionID and conformance CaptionSectioner.CaptionID()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type CaptionSectioner.CaptionID and conformance CaptionSectioner.CaptionID;
  if (!lazy protocol witness table cache variable for type CaptionSectioner.CaptionID and conformance CaptionSectioner.CaptionID)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for CaptionSectioner.CaptionID, &type metadata for CaptionSectioner.CaptionID);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type CaptionSectioner.CaptionID and conformance CaptionSectioner.CaptionID);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type CaptionSectioner.CaptionID and conformance CaptionSectioner.CaptionID;
  if (!lazy protocol witness table cache variable for type CaptionSectioner.CaptionID and conformance CaptionSectioner.CaptionID)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for CaptionSectioner.CaptionID, &type metadata for CaptionSectioner.CaptionID);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type CaptionSectioner.CaptionID and conformance CaptionSectioner.CaptionID);
  }
  return result;
}

void associated type witness table accessor for Identifiable.ID : Hashable in CaptionSectioner.SpeakerSection()
{
  _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type CaptionSectioner.SectionID and conformance CaptionSectioner.SectionID, type metadata accessor for CaptionSectioner.SectionID, (uint64_t)&protocol conformance descriptor for CaptionSectioner.SectionID);
}

void base witness table accessor for Equatable in CaptionSectioner.SectionID()
{
  _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type CaptionSectioner.SectionID and conformance CaptionSectioner.SectionID, type metadata accessor for CaptionSectioner.SectionID, (uint64_t)&protocol conformance descriptor for CaptionSectioner.SectionID);
}

uint64_t destroy for CaptionSectioner()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for CaptionSectioner(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v3;
  v4 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for CaptionSectioner(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  v4 = a2[6];
  a1[5] = a2[5];
  a1[6] = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for CaptionSectioner(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for CaptionSectioner(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 56))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CaptionSectioner(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for CaptionSectioner()
{
  OUTLINED_FUNCTION_34_0();
}

_QWORD *initializeBufferWithCopyOfBuffer for CaptionSectioner.Caption(_QWORD *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v6;
  _BYTE *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  const void *v22;
  size_t v23;
  __int128 v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  int *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  __int128 v52;
  uint64_t v53;
  _QWORD *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  void (*v70)(char *, char *, uint64_t);
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  _QWORD *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v81;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *(_QWORD *)a2;
    *a1 = *(_QWORD *)a2;
    v12 = (_QWORD *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(_QWORD *)a2;
    v6 = a3[5];
    v7 = (char *)a1 + v6;
    v8 = &a2[v6];
    v9 = type metadata accessor for Participant.State(0);
    v81 = a2;
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        v10 = type metadata accessor for Date();
        (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v7, v8, v10);
        goto LABEL_18;
      case 4u:
        v13 = type metadata accessor for Date();
        (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v7, v8, v13);
        v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        v15 = *(int *)(v14 + 48);
        v16 = &v7[v15];
        v17 = &v8[v15];
        *(_OWORD *)v16 = *(_OWORD *)&v8[v15];
        v18 = *(_QWORD *)&v8[v15 + 16];
        v19 = *(_QWORD *)&v8[v15 + 24];
        *((_QWORD *)v16 + 2) = v18;
        *((_QWORD *)v16 + 3) = v19;
        *((_WORD *)v16 + 16) = *((_WORD *)v17 + 16);
        *((_QWORD *)v16 + 5) = *((_QWORD *)v17 + 5);
        v16[48] = v17[48];
        *(_OWORD *)(v16 + 56) = *(_OWORD *)(v17 + 56);
        *(_OWORD *)(v16 + 72) = *(_OWORD *)(v17 + 72);
        v16[88] = v17[88];
        v16[89] = v17[89];
        v20 = *((_QWORD *)v17 + 15);
        swift_bridgeObjectRetain();
        if (v20)
        {
          if (v20 == 1)
          {
            v21 = v16 + 96;
            v22 = v17 + 96;
            v23 = 209;
            goto LABEL_12;
          }
          v25 = *((_QWORD *)v17 + 16);
          *((_QWORD *)v16 + 15) = v20;
          *((_QWORD *)v16 + 16) = v25;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v20 - 8))((uint64_t)(v16 + 96), (uint64_t)(v17 + 96), v20);
        }
        else
        {
          v24 = *((_OWORD *)v17 + 7);
          *((_OWORD *)v16 + 6) = *((_OWORD *)v17 + 6);
          *((_OWORD *)v16 + 7) = v24;
          *((_QWORD *)v16 + 16) = *((_QWORD *)v17 + 16);
        }
        *((_DWORD *)v16 + 34) = *((_DWORD *)v17 + 34);
        v26 = *((_OWORD *)v17 + 10);
        *((_OWORD *)v16 + 9) = *((_OWORD *)v17 + 9);
        *((_OWORD *)v16 + 10) = v26;
        *((_OWORD *)v16 + 11) = *((_OWORD *)v17 + 11);
        v16[192] = v17[192];
        v21 = v16 + 208;
        v22 = v17 + 208;
        *((_QWORD *)v16 + 25) = *((_QWORD *)v17 + 25);
        v23 = 97;
LABEL_12:
        memcpy(v21, v22, v23);
        v27 = *((_QWORD *)v17 + 39);
        if (v27)
        {
          v28 = *((_QWORD *)v17 + 40);
          v29 = *((_QWORD *)v17 + 41);
          *((_QWORD *)v16 + 39) = v27;
          *((_QWORD *)v16 + 40) = v28;
          *((_QWORD *)v16 + 41) = v29;
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v16 + 312) = *(_OWORD *)(v17 + 312);
          *((_QWORD *)v16 + 41) = *((_QWORD *)v17 + 41);
        }
        v30 = *(int *)(v14 + 64);
        v31 = &v7[v30];
        v32 = &v8[v30];
        v33 = *((_QWORD *)v32 + 1);
        if (v33)
        {
          *(_QWORD *)v31 = *(_QWORD *)v32;
          *((_QWORD *)v31 + 1) = v33;
          v34 = *((_QWORD *)v32 + 3);
          *((_QWORD *)v31 + 2) = *((_QWORD *)v32 + 2);
          *((_QWORD *)v31 + 3) = v34;
          v31[32] = v32[32];
          *(_OWORD *)(v31 + 40) = *(_OWORD *)(v32 + 40);
          *((_QWORD *)v31 + 7) = *((_QWORD *)v32 + 7);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v35 = *((_OWORD *)v32 + 1);
          *(_OWORD *)v31 = *(_OWORD *)v32;
          *((_OWORD *)v31 + 1) = v35;
          v36 = *((_OWORD *)v32 + 3);
          *((_OWORD *)v31 + 2) = *((_OWORD *)v32 + 2);
          *((_OWORD *)v31 + 3) = v36;
        }
LABEL_18:
        swift_storeEnumTagMultiPayload();
LABEL_19:
        v37 = (int *)type metadata accessor for Participant(0);
        v38 = v37[5];
        v39 = &v7[v38];
        v40 = &v8[v38];
        v41 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v39, v40, v41);
        v42 = v37[6];
        v43 = &v7[v42];
        v44 = &v8[v42];
        v43[4] = v44[4];
        *(_DWORD *)v43 = *(_DWORD *)v44;
        v45 = v37[7];
        v46 = &v7[v45];
        v47 = &v8[v45];
        v48 = *(void **)v47;
        if (*(_QWORD *)v47)
        {
          v49 = *((_QWORD *)v47 + 1);
          *(_QWORD *)v46 = v48;
          *((_QWORD *)v46 + 1) = v49;
          v46[16] = v47[16];
          v50 = *((_QWORD *)v47 + 4);
          *((_QWORD *)v46 + 3) = *((_QWORD *)v47 + 3);
          *((_QWORD *)v46 + 4) = v50;
          v51 = v48;
          swift_bridgeObjectRetain();
        }
        else
        {
          v52 = *((_OWORD *)v47 + 1);
          *(_OWORD *)v46 = *(_OWORD *)v47;
          *((_OWORD *)v46 + 1) = v52;
          *((_QWORD *)v46 + 4) = *((_QWORD *)v47 + 4);
        }
        *(_QWORD *)&v7[v37[8]] = *(_QWORD *)&v8[v37[8]];
        v53 = v37[9];
        v54 = &v7[v53];
        v55 = &v8[v53];
        v56 = *((_QWORD *)v55 + 1);
        *v54 = *(_QWORD *)v55;
        v54[1] = v56;
        v7[v37[10]] = v8[v37[10]];
        *(_QWORD *)&v7[v37[11]] = *(_QWORD *)&v8[v37[11]];
        v57 = v37[12];
        v58 = *(void **)&v8[v57];
        *(_QWORD *)&v7[v57] = v58;
        v7[v37[13]] = v8[v37[13]];
        v59 = v37[14];
        v60 = &v7[v59];
        v61 = &v8[v59];
        v62 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v63 = v58;
        if (__swift_getEnumTagSinglePayload((uint64_t)v61, 1, v62))
        {
          v64 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
          memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 16))(v60, v61, v62);
          __swift_storeEnumTagSinglePayload((uint64_t)v60, 0, 1, v62);
        }
        v65 = type metadata accessor for Participant.CountdownInfo(0);
        v66 = *(int *)(v65 + 20);
        v67 = &v60[v66];
        v68 = &v61[v66];
        if (__swift_getEnumTagSinglePayload((uint64_t)&v61[v66], 1, v62))
        {
          v69 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
          memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
          v70 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 16);
        }
        else
        {
          v70 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 16);
          v70(v67, v68, v62);
          __swift_storeEnumTagSinglePayload((uint64_t)v67, 0, 1, v62);
        }
        v60[*(int *)(v65 + 24)] = v61[*(int *)(v65 + 24)];
        v7[v37[15]] = v8[v37[15]];
        *(_QWORD *)&v7[v37[16]] = *(_QWORD *)&v8[v37[16]];
        v71 = a3[6];
        v12 = a1;
        v72 = (char *)a1 + v71;
        v73 = &v81[v71];
        swift_retain();
        v70(v72, v73, v62);
        v70((char *)a1 + a3[7], &v81[a3[7]], v62);
        v74 = a3[9];
        *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)&v81[a3[8]];
        v75 = (_QWORD *)((char *)a1 + v74);
        v76 = &v81[v74];
        v77 = *((_QWORD *)v76 + 1);
        *v75 = *(_QWORD *)v76;
        v75[1] = v77;
        v78 = a3[11];
        *((_BYTE *)a1 + a3[10]) = v81[a3[10]];
        *(_QWORD *)((char *)a1 + v78) = *(_QWORD *)&v81[v78];
        *((_BYTE *)a1 + a3[12]) = v81[a3[12]];
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      default:
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
        goto LABEL_19;
    }
  }
  return v12;
}

uint64_t destroy for CaptionSectioner.Caption(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  id *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = a1 + a2[5];
  type metadata accessor for Participant.State(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 5u:
      v5 = type metadata accessor for Date();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
      break;
    case 4u:
      v15 = type metadata accessor for Date();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v4, v15);
      v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      v17 = v4 + *(int *)(v16 + 48);
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v17 + 120) >= 2uLL)
        __swift_destroy_boxed_opaque_existential_1(v17 + 96);
      if (*(_QWORD *)(v17 + 312))
      {
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
      }
      if (*(_QWORD *)(v4 + *(int *)(v16 + 64) + 8))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      break;
    default:
      break;
  }
  v6 = (int *)type metadata accessor for Participant(0);
  v7 = v4 + v6[5];
  v8 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = (id *)(v4 + v6[7]);
  if (*v9)
  {

    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v10 = v4 + v6[14];
  v11 = type metadata accessor for Date();
  if (!__swift_getEnumTagSinglePayload(v10, 1, v11))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  v12 = v10 + *(int *)(type metadata accessor for Participant.CountdownInfo(0) + 20);
  if (!__swift_getEnumTagSinglePayload(v12, 1, v11))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v12, v11);
  swift_release();
  v13 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8);
  v13(a1 + a2[6], v11);
  v13(a1 + a2[7], v11);
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

char *initializeWithCopy for CaptionSectioner.Caption(char *a1, char *a2, int *a3)
{
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  size_t v20;
  __int128 v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  int *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  __int128 v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  void (*v67)(char *, char *, uint64_t);
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v78;
  char *v79;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = a3[5];
  v6 = &a1[v5];
  v7 = &a2[v5];
  v8 = type metadata accessor for Participant.State(0);
  v78 = a2;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 5u:
      v9 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v6, v7, v9);
      goto LABEL_16;
    case 4u:
      v10 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v6, v7, v10);
      v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      v12 = *(int *)(v11 + 48);
      v13 = &v6[v12];
      v14 = &v7[v12];
      *(_OWORD *)v13 = *(_OWORD *)&v7[v12];
      v15 = *(_QWORD *)&v7[v12 + 16];
      v16 = *(_QWORD *)&v7[v12 + 24];
      *((_QWORD *)v13 + 2) = v15;
      *((_QWORD *)v13 + 3) = v16;
      *((_WORD *)v13 + 16) = *((_WORD *)v14 + 16);
      *((_QWORD *)v13 + 5) = *((_QWORD *)v14 + 5);
      v13[48] = v14[48];
      *(_OWORD *)(v13 + 56) = *(_OWORD *)(v14 + 56);
      *(_OWORD *)(v13 + 72) = *(_OWORD *)(v14 + 72);
      v13[88] = v14[88];
      v13[89] = v14[89];
      v17 = *((_QWORD *)v14 + 15);
      swift_bridgeObjectRetain();
      if (v17)
      {
        if (v17 == 1)
        {
          v18 = v13 + 96;
          v19 = v14 + 96;
          v20 = 209;
          goto LABEL_10;
        }
        v22 = *((_QWORD *)v14 + 16);
        *((_QWORD *)v13 + 15) = v17;
        *((_QWORD *)v13 + 16) = v22;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v17 - 8))((uint64_t)(v13 + 96), (uint64_t)(v14 + 96), v17);
      }
      else
      {
        v21 = *((_OWORD *)v14 + 7);
        *((_OWORD *)v13 + 6) = *((_OWORD *)v14 + 6);
        *((_OWORD *)v13 + 7) = v21;
        *((_QWORD *)v13 + 16) = *((_QWORD *)v14 + 16);
      }
      *((_DWORD *)v13 + 34) = *((_DWORD *)v14 + 34);
      v23 = *((_OWORD *)v14 + 10);
      *((_OWORD *)v13 + 9) = *((_OWORD *)v14 + 9);
      *((_OWORD *)v13 + 10) = v23;
      *((_OWORD *)v13 + 11) = *((_OWORD *)v14 + 11);
      v13[192] = v14[192];
      v18 = v13 + 208;
      v19 = v14 + 208;
      *((_QWORD *)v13 + 25) = *((_QWORD *)v14 + 25);
      v20 = 97;
LABEL_10:
      memcpy(v18, v19, v20);
      v24 = *((_QWORD *)v14 + 39);
      if (v24)
      {
        v25 = *((_QWORD *)v14 + 40);
        v26 = *((_QWORD *)v14 + 41);
        *((_QWORD *)v13 + 39) = v24;
        *((_QWORD *)v13 + 40) = v25;
        *((_QWORD *)v13 + 41) = v26;
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v13 + 312) = *(_OWORD *)(v14 + 312);
        *((_QWORD *)v13 + 41) = *((_QWORD *)v14 + 41);
      }
      v27 = *(int *)(v11 + 64);
      v28 = &v6[v27];
      v29 = &v7[v27];
      v30 = *((_QWORD *)v29 + 1);
      if (v30)
      {
        *(_QWORD *)v28 = *(_QWORD *)v29;
        *((_QWORD *)v28 + 1) = v30;
        v31 = *((_QWORD *)v29 + 3);
        *((_QWORD *)v28 + 2) = *((_QWORD *)v29 + 2);
        *((_QWORD *)v28 + 3) = v31;
        v28[32] = v29[32];
        *(_OWORD *)(v28 + 40) = *(_OWORD *)(v29 + 40);
        *((_QWORD *)v28 + 7) = *((_QWORD *)v29 + 7);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v32 = *((_OWORD *)v29 + 1);
        *(_OWORD *)v28 = *(_OWORD *)v29;
        *((_OWORD *)v28 + 1) = v32;
        v33 = *((_OWORD *)v29 + 3);
        *((_OWORD *)v28 + 2) = *((_OWORD *)v29 + 2);
        *((_OWORD *)v28 + 3) = v33;
      }
LABEL_16:
      swift_storeEnumTagMultiPayload();
LABEL_17:
      v34 = (int *)type metadata accessor for Participant(0);
      v35 = v34[5];
      v36 = &v6[v35];
      v37 = &v7[v35];
      v38 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
      v39 = v34[6];
      v40 = &v6[v39];
      v41 = &v7[v39];
      v40[4] = v41[4];
      *(_DWORD *)v40 = *(_DWORD *)v41;
      v42 = v34[7];
      v43 = &v6[v42];
      v44 = &v7[v42];
      v45 = *(void **)v44;
      v79 = a1;
      if (*(_QWORD *)v44)
      {
        v46 = *((_QWORD *)v44 + 1);
        *(_QWORD *)v43 = v45;
        *((_QWORD *)v43 + 1) = v46;
        v43[16] = v44[16];
        v47 = *((_QWORD *)v44 + 4);
        *((_QWORD *)v43 + 3) = *((_QWORD *)v44 + 3);
        *((_QWORD *)v43 + 4) = v47;
        v48 = v45;
        swift_bridgeObjectRetain();
      }
      else
      {
        v49 = *((_OWORD *)v44 + 1);
        *(_OWORD *)v43 = *(_OWORD *)v44;
        *((_OWORD *)v43 + 1) = v49;
        *((_QWORD *)v43 + 4) = *((_QWORD *)v44 + 4);
      }
      *(_QWORD *)&v6[v34[8]] = *(_QWORD *)&v7[v34[8]];
      v50 = v34[9];
      v51 = &v6[v50];
      v52 = &v7[v50];
      v53 = *((_QWORD *)v52 + 1);
      *(_QWORD *)v51 = *(_QWORD *)v52;
      *((_QWORD *)v51 + 1) = v53;
      v6[v34[10]] = v7[v34[10]];
      *(_QWORD *)&v6[v34[11]] = *(_QWORD *)&v7[v34[11]];
      v54 = v34[12];
      v55 = *(void **)&v7[v54];
      *(_QWORD *)&v6[v54] = v55;
      v6[v34[13]] = v7[v34[13]];
      v56 = v34[14];
      v57 = &v6[v56];
      v58 = &v7[v56];
      v59 = type metadata accessor for Date();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v60 = v55;
      if (__swift_getEnumTagSinglePayload((uint64_t)v58, 1, v59))
      {
        v61 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
        memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(v57, v58, v59);
        __swift_storeEnumTagSinglePayload((uint64_t)v57, 0, 1, v59);
      }
      v62 = type metadata accessor for Participant.CountdownInfo(0);
      v63 = *(int *)(v62 + 20);
      v64 = &v57[v63];
      v65 = &v58[v63];
      if (__swift_getEnumTagSinglePayload((uint64_t)&v58[v63], 1, v59))
      {
        v66 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
        memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
        v67 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 16);
      }
      else
      {
        v67 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 16);
        v67(v64, v65, v59);
        __swift_storeEnumTagSinglePayload((uint64_t)v64, 0, 1, v59);
      }
      v57[*(int *)(v62 + 24)] = v58[*(int *)(v62 + 24)];
      v6[v34[15]] = v7[v34[15]];
      *(_QWORD *)&v6[v34[16]] = *(_QWORD *)&v7[v34[16]];
      v68 = a3[6];
      v69 = &v79[v68];
      v70 = &v78[v68];
      swift_retain();
      v67(v69, v70, v59);
      v67(&v79[a3[7]], &v78[a3[7]], v59);
      v71 = a3[9];
      *(_QWORD *)&v79[a3[8]] = *(_QWORD *)&v78[a3[8]];
      v72 = &v79[v71];
      v73 = &v78[v71];
      v74 = *((_QWORD *)v73 + 1);
      *(_QWORD *)v72 = *(_QWORD *)v73;
      *((_QWORD *)v72 + 1) = v74;
      v75 = a3[11];
      v79[a3[10]] = v78[a3[10]];
      *(_QWORD *)&v79[v75] = *(_QWORD *)&v78[v75];
      v79[a3[12]] = v78[a3[12]];
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return v79;
    default:
      memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
      goto LABEL_17;
  }
}

char *assignWithCopy for CaptionSectioner.Caption(char *a1, char *a2, int *a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  size_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  char *v29;
  char *v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  int *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  void *v45;
  void *v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  void *v59;
  void *v60;
  id v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  int EnumTagSinglePayload;
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  int v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(char *, char *, uint64_t);
  uint64_t v79;
  char *v80;
  char *v81;
  char *v85;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = a3[5];
  v5 = &a1[v4];
  v6 = &a2[v4];
  if (a1 != a2)
  {
    outlined destroy of CaptionSectioner.Caption((uint64_t)&a1[v4], type metadata accessor for Participant.State);
    v7 = type metadata accessor for Participant.State(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        v8 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v5, v6, v8);
        goto LABEL_17;
      case 4u:
        v9 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v5, v6, v9);
        v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        v11 = *(int *)(v10 + 48);
        v12 = &v5[v11];
        v13 = &v6[v11];
        *(_OWORD *)v12 = *(_OWORD *)&v6[v11];
        *((_QWORD *)v12 + 2) = *(_QWORD *)&v6[v11 + 16];
        v14 = *(_QWORD *)&v6[v11 + 24];
        *((_WORD *)v12 + 16) = *((_WORD *)v13 + 16);
        *((_QWORD *)v12 + 3) = v14;
        *((_QWORD *)v12 + 5) = *((_QWORD *)v13 + 5);
        v12[48] = v13[48];
        v15 = *(_OWORD *)(v13 + 72);
        v16 = *(_OWORD *)(v13 + 56);
        v12[88] = v13[88];
        *(_OWORD *)(v12 + 56) = v16;
        *(_OWORD *)(v12 + 72) = v15;
        v12[89] = v13[89];
        v17 = *((_QWORD *)v13 + 15);
        swift_bridgeObjectRetain();
        if (v17)
        {
          if (v17 == 1)
          {
            v18 = v12 + 96;
            v19 = v13 + 96;
            v20 = 209;
            goto LABEL_11;
          }
          *((_QWORD *)v12 + 15) = v17;
          *((_QWORD *)v12 + 16) = *((_QWORD *)v13 + 16);
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v17 - 8))((uint64_t)(v12 + 96), (uint64_t)(v13 + 96), v17);
        }
        else
        {
          v21 = *((_OWORD *)v13 + 6);
          v22 = *((_OWORD *)v13 + 7);
          *((_QWORD *)v12 + 16) = *((_QWORD *)v13 + 16);
          *((_OWORD *)v12 + 6) = v21;
          *((_OWORD *)v12 + 7) = v22;
        }
        *((_DWORD *)v12 + 34) = *((_DWORD *)v13 + 34);
        *((_QWORD *)v12 + 18) = *((_QWORD *)v13 + 18);
        *((_QWORD *)v12 + 19) = *((_QWORD *)v13 + 19);
        v23 = *((_OWORD *)v13 + 10);
        v24 = *((_OWORD *)v13 + 11);
        v12[192] = v13[192];
        *((_OWORD *)v12 + 10) = v23;
        *((_OWORD *)v12 + 11) = v24;
        *((_QWORD *)v12 + 25) = *((_QWORD *)v13 + 25);
        v18 = v12 + 208;
        v19 = v13 + 208;
        v20 = 97;
LABEL_11:
        memcpy(v18, v19, v20);
        v25 = *((_QWORD *)v13 + 39);
        if (v25)
        {
          v26 = *((_QWORD *)v13 + 40);
          *((_QWORD *)v12 + 39) = v25;
          *((_QWORD *)v12 + 40) = v26;
          *((_QWORD *)v12 + 41) = *((_QWORD *)v13 + 41);
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v27 = *(_OWORD *)(v13 + 312);
          *((_QWORD *)v12 + 41) = *((_QWORD *)v13 + 41);
          *(_OWORD *)(v12 + 312) = v27;
        }
        v28 = *(int *)(v10 + 64);
        v29 = &v5[v28];
        v30 = &v6[v28];
        if (*((_QWORD *)v30 + 1))
        {
          *(_QWORD *)v29 = *(_QWORD *)v30;
          *((_QWORD *)v29 + 1) = *((_QWORD *)v30 + 1);
          *((_QWORD *)v29 + 2) = *((_QWORD *)v30 + 2);
          *((_QWORD *)v29 + 3) = *((_QWORD *)v30 + 3);
          v29[32] = v30[32];
          *((_QWORD *)v29 + 5) = *((_QWORD *)v30 + 5);
          *((_QWORD *)v29 + 6) = *((_QWORD *)v30 + 6);
          *((_QWORD *)v29 + 7) = *((_QWORD *)v30 + 7);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v31 = *(_OWORD *)v30;
          v32 = *((_OWORD *)v30 + 1);
          v33 = *((_OWORD *)v30 + 3);
          *((_OWORD *)v29 + 2) = *((_OWORD *)v30 + 2);
          *((_OWORD *)v29 + 3) = v33;
          *(_OWORD *)v29 = v31;
          *((_OWORD *)v29 + 1) = v32;
        }
LABEL_17:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
        break;
    }
  }
  v34 = (int *)type metadata accessor for Participant(0);
  v35 = v34[5];
  v36 = &v5[v35];
  v37 = &v6[v35];
  v38 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 24))(v36, v37, v38);
  v39 = v34[6];
  v40 = &v5[v39];
  v41 = &v6[v39];
  *v40 = *v41;
  v40[1] = v41[1];
  v40[2] = v41[2];
  v40[3] = v41[3];
  v40[4] = v41[4];
  v42 = v34[7];
  v43 = &v5[v42];
  v44 = &v6[v42];
  v45 = *(void **)&v5[v42];
  v46 = *(void **)&v6[v42];
  if (v45)
  {
    if (v46)
    {
      *(_QWORD *)v43 = v46;
      v47 = v46;

      v48 = *((_QWORD *)v44 + 1);
      v43[16] = v44[16];
      *((_QWORD *)v43 + 1) = v48;
      *((_QWORD *)v43 + 3) = *((_QWORD *)v44 + 3);
      *((_QWORD *)v43 + 4) = *((_QWORD *)v44 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      outlined destroy of Participant.RemoteIdentifiers((id *)v43);
      v51 = *((_QWORD *)v44 + 4);
      v52 = *((_OWORD *)v44 + 1);
      *(_OWORD *)v43 = *(_OWORD *)v44;
      *((_OWORD *)v43 + 1) = v52;
      *((_QWORD *)v43 + 4) = v51;
    }
  }
  else if (v46)
  {
    *(_QWORD *)v43 = v46;
    v49 = *((_QWORD *)v44 + 1);
    v43[16] = v44[16];
    *((_QWORD *)v43 + 1) = v49;
    *((_QWORD *)v43 + 3) = *((_QWORD *)v44 + 3);
    *((_QWORD *)v43 + 4) = *((_QWORD *)v44 + 4);
    v50 = v46;
    swift_bridgeObjectRetain();
  }
  else
  {
    v53 = *(_OWORD *)v44;
    v54 = *((_OWORD *)v44 + 1);
    *((_QWORD *)v43 + 4) = *((_QWORD *)v44 + 4);
    *(_OWORD *)v43 = v53;
    *((_OWORD *)v43 + 1) = v54;
  }
  *(_QWORD *)&v5[v34[8]] = *(_QWORD *)&v6[v34[8]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v55 = v34[9];
  v56 = &v5[v55];
  v57 = &v6[v55];
  *(_QWORD *)v56 = *(_QWORD *)v57;
  *((_QWORD *)v56 + 1) = *((_QWORD *)v57 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5[v34[10]] = v6[v34[10]];
  *(_QWORD *)&v5[v34[11]] = *(_QWORD *)&v6[v34[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v58 = v34[12];
  v59 = *(void **)&v5[v58];
  v60 = *(void **)&v6[v58];
  *(_QWORD *)&v5[v58] = v60;
  v61 = v60;

  v5[v34[13]] = v6[v34[13]];
  v62 = v34[14];
  v63 = &v5[v62];
  v64 = &v6[v62];
  v65 = type metadata accessor for Date();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v63, 1, v65);
  v67 = __swift_getEnumTagSinglePayload((uint64_t)v64, 1, v65);
  v85 = a1;
  if (EnumTagSinglePayload)
  {
    if (!v67)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 16))(v63, v64, v65);
      __swift_storeEnumTagSinglePayload((uint64_t)v63, 0, 1, v65);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  v68 = *(_QWORD *)(v65 - 8);
  if (v67)
  {
    (*(void (**)(char *, uint64_t))(v68 + 8))(v63, v65);
LABEL_30:
    v69 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v68 + 24))(v63, v64, v65);
LABEL_31:
  v70 = type metadata accessor for Participant.CountdownInfo(0);
  v71 = *(int *)(v70 + 20);
  v72 = &v63[v71];
  v73 = &v64[v71];
  v74 = __swift_getEnumTagSinglePayload((uint64_t)&v63[v71], 1, v65);
  v75 = __swift_getEnumTagSinglePayload((uint64_t)v73, 1, v65);
  if (!v74)
  {
    v76 = *(_QWORD *)(v65 - 8);
    if (!v75)
    {
      (*(void (**)(char *, char *, uint64_t))(v76 + 24))(v72, v73, v65);
      goto LABEL_37;
    }
    (*(void (**)(char *, uint64_t))(v76 + 8))(v72, v65);
    goto LABEL_36;
  }
  if (v75)
  {
LABEL_36:
    v77 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 16))(v72, v73, v65);
  __swift_storeEnumTagSinglePayload((uint64_t)v72, 0, 1, v65);
LABEL_37:
  v63[*(int *)(v70 + 24)] = v64[*(int *)(v70 + 24)];
  v5[v34[15]] = v6[v34[15]];
  *(_QWORD *)&v5[v34[16]] = *(_QWORD *)&v6[v34[16]];
  swift_retain();
  swift_release();
  v78 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 24);
  v78(&v85[a3[6]], &a2[a3[6]], v65);
  v78(&v85[a3[7]], &a2[a3[7]], v65);
  *(_QWORD *)&v85[a3[8]] = *(_QWORD *)&a2[a3[8]];
  swift_retain();
  swift_release();
  v79 = a3[9];
  v80 = &v85[v79];
  v81 = &a2[v79];
  *(_QWORD *)v80 = *(_QWORD *)v81;
  *((_QWORD *)v80 + 1) = *((_QWORD *)v81 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v85[a3[10]] = a2[a3[10]];
  *(_QWORD *)&v85[a3[11]] = *(_QWORD *)&a2[a3[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v85[a3[12]] = a2[a3[12]];
  return v85;
}

void outlined destroy of CaptionSectioner.Caption(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_97_1(a1, a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  OUTLINED_FUNCTION_0();
}

id *outlined destroy of Participant.RemoteIdentifiers(id *a1)
{
  destroy for ParticipantMediaPriorities(a1);
  return a1;
}

char *initializeWithTake for CaptionSectioner.Caption(char *a1, char *a2, int *a3)
{
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  __int128 v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  uint64_t v39;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = a3[5];
  v4 = &a1[v3];
  v5 = &a2[v3];
  v6 = type metadata accessor for Participant.State(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 5u:
      v14 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v4, v5, v14);
      goto LABEL_5;
    case 4u:
      v7 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v4, v5, v7);
      v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      memcpy(&v4[*(int *)(v8 + 48)], &v5[*(int *)(v8 + 48)], 0x150uLL);
      v9 = *(int *)(v8 + 64);
      v10 = &v4[v9];
      v11 = &v5[v9];
      v12 = *((_OWORD *)v11 + 1);
      *(_OWORD *)v10 = *(_OWORD *)v11;
      *((_OWORD *)v10 + 1) = v12;
      v13 = *((_OWORD *)v11 + 3);
      *((_OWORD *)v10 + 2) = *((_OWORD *)v11 + 2);
      *((_OWORD *)v10 + 3) = v13;
LABEL_5:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v4, v5, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      break;
  }
  v15 = (int *)type metadata accessor for Participant(0);
  v16 = v15[5];
  v17 = &v4[v16];
  v18 = &v5[v16];
  v19 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
  v20 = v15[6];
  v21 = &v4[v20];
  v22 = &v5[v20];
  *(_DWORD *)v21 = *(_DWORD *)v22;
  v21[4] = v22[4];
  v23 = v15[7];
  v24 = &v4[v23];
  v25 = &v5[v23];
  v26 = *((_OWORD *)v25 + 1);
  *(_OWORD *)v24 = *(_OWORD *)v25;
  *((_OWORD *)v24 + 1) = v26;
  *((_QWORD *)v24 + 4) = *((_QWORD *)v25 + 4);
  *(_QWORD *)&v4[v15[8]] = *(_QWORD *)&v5[v15[8]];
  *(_OWORD *)&v4[v15[9]] = *(_OWORD *)&v5[v15[9]];
  v4[v15[10]] = v5[v15[10]];
  *(_QWORD *)&v4[v15[11]] = *(_QWORD *)&v5[v15[11]];
  *(_QWORD *)&v4[v15[12]] = *(_QWORD *)&v5[v15[12]];
  v4[v15[13]] = v5[v15[13]];
  v27 = v15[14];
  v28 = &v4[v27];
  v29 = &v5[v27];
  v30 = type metadata accessor for Date();
  if (__swift_getEnumTagSinglePayload((uint64_t)v29, 1, v30))
  {
    v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
    __swift_storeEnumTagSinglePayload((uint64_t)v28, 0, 1, v30);
  }
  v32 = type metadata accessor for Participant.CountdownInfo(0);
  v33 = *(int *)(v32 + 20);
  v34 = &v28[v33];
  v35 = &v29[v33];
  if (__swift_getEnumTagSinglePayload((uint64_t)&v29[v33], 1, v30))
  {
    v36 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    v37 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32);
  }
  else
  {
    v37 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32);
    v37(v34, v35, v30);
    __swift_storeEnumTagSinglePayload((uint64_t)v34, 0, 1, v30);
  }
  v28[*(int *)(v32 + 24)] = v29[*(int *)(v32 + 24)];
  v4[v15[15]] = v5[v15[15]];
  *(_QWORD *)&v4[v15[16]] = *(_QWORD *)&v5[v15[16]];
  v37(&a1[a3[6]], &a2[a3[6]], v30);
  v37(&a1[a3[7]], &a2[a3[7]], v30);
  v38 = a3[9];
  *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
  *(_OWORD *)&a1[v38] = *(_OWORD *)&a2[v38];
  v39 = a3[11];
  a1[a3[10]] = a2[a3[10]];
  *(_QWORD *)&a1[v39] = *(_QWORD *)&a2[v39];
  a1[a3[12]] = a2[a3[12]];
  return a1;
}

char *assignWithTake for CaptionSectioner.Caption(char *a1, char *a2, int *a3)
{
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  void *v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  int EnumTagSinglePayload;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  int v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, char *, uint64_t);
  uint64_t v53;
  char *v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = a3[5];
  v4 = &a1[v3];
  v5 = &a2[v3];
  if (a1 != a2)
  {
    outlined destroy of CaptionSectioner.Caption((uint64_t)&a1[v3], type metadata accessor for Participant.State);
    v6 = type metadata accessor for Participant.State(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        v14 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v4, v5, v14);
        goto LABEL_5;
      case 4u:
        v7 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v4, v5, v7);
        v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        memcpy(&v4[*(int *)(v8 + 48)], &v5[*(int *)(v8 + 48)], 0x150uLL);
        v9 = *(int *)(v8 + 64);
        v10 = &v4[v9];
        v11 = &v5[v9];
        v12 = *((_OWORD *)v11 + 1);
        *(_OWORD *)v10 = *(_OWORD *)v11;
        *((_OWORD *)v10 + 1) = v12;
        v13 = *((_OWORD *)v11 + 3);
        *((_OWORD *)v10 + 2) = *((_OWORD *)v11 + 2);
        *((_OWORD *)v10 + 3) = v13;
LABEL_5:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v4, v5, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        break;
    }
  }
  v15 = (int *)type metadata accessor for Participant(0);
  v16 = v15[5];
  v17 = &v4[v16];
  v18 = &v5[v16];
  v19 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 40))(v17, v18, v19);
  v20 = v15[6];
  v21 = &v4[v20];
  v22 = &v5[v20];
  *v21 = *v22;
  v21[1] = v22[1];
  v21[2] = v22[2];
  v21[3] = v22[3];
  v21[4] = v22[4];
  v23 = v15[7];
  v24 = &v4[v23];
  v25 = &v5[v23];
  v26 = *(void **)&v4[v23];
  if (v26)
  {
    if (*(_QWORD *)v25)
    {
      *(_QWORD *)v24 = *(_QWORD *)v25;

      *((_QWORD *)v24 + 1) = *((_QWORD *)v25 + 1);
      v24[16] = v25[16];
      v27 = *((_QWORD *)v25 + 4);
      *((_QWORD *)v24 + 3) = *((_QWORD *)v25 + 3);
      *((_QWORD *)v24 + 4) = v27;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    outlined destroy of Participant.RemoteIdentifiers((id *)v24);
  }
  v28 = *((_OWORD *)v25 + 1);
  *(_OWORD *)v24 = *(_OWORD *)v25;
  *((_OWORD *)v24 + 1) = v28;
  *((_QWORD *)v24 + 4) = *((_QWORD *)v25 + 4);
LABEL_11:
  *(_QWORD *)&v4[v15[8]] = *(_QWORD *)&v5[v15[8]];
  swift_bridgeObjectRelease();
  v29 = v15[9];
  v30 = &v4[v29];
  v31 = &v5[v29];
  v33 = *(_QWORD *)v31;
  v32 = *((_QWORD *)v31 + 1);
  *(_QWORD *)v30 = v33;
  *((_QWORD *)v30 + 1) = v32;
  swift_bridgeObjectRelease();
  v4[v15[10]] = v5[v15[10]];
  *(_QWORD *)&v4[v15[11]] = *(_QWORD *)&v5[v15[11]];
  swift_bridgeObjectRelease();
  v34 = v15[12];
  v35 = *(void **)&v4[v34];
  *(_QWORD *)&v4[v34] = *(_QWORD *)&v5[v34];

  v4[v15[13]] = v5[v15[13]];
  v36 = v15[14];
  v37 = &v4[v36];
  v38 = &v5[v36];
  v39 = type metadata accessor for Date();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v37, 1, v39);
  v41 = __swift_getEnumTagSinglePayload((uint64_t)v38, 1, v39);
  if (EnumTagSinglePayload)
  {
    if (!v41)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v37, v38, v39);
      __swift_storeEnumTagSinglePayload((uint64_t)v37, 0, 1, v39);
      goto LABEL_17;
    }
    goto LABEL_16;
  }
  v42 = *(_QWORD *)(v39 - 8);
  if (v41)
  {
    (*(void (**)(char *, uint64_t))(v42 + 8))(v37, v39);
LABEL_16:
    v43 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    goto LABEL_17;
  }
  (*(void (**)(char *, char *, uint64_t))(v42 + 40))(v37, v38, v39);
LABEL_17:
  v44 = type metadata accessor for Participant.CountdownInfo(0);
  v45 = *(int *)(v44 + 20);
  v46 = &v37[v45];
  v47 = &v38[v45];
  v48 = __swift_getEnumTagSinglePayload((uint64_t)&v37[v45], 1, v39);
  v49 = __swift_getEnumTagSinglePayload((uint64_t)v47, 1, v39);
  if (!v48)
  {
    v50 = *(_QWORD *)(v39 - 8);
    if (!v49)
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 40))(v46, v47, v39);
      goto LABEL_23;
    }
    (*(void (**)(char *, uint64_t))(v50 + 8))(v46, v39);
    goto LABEL_22;
  }
  if (v49)
  {
LABEL_22:
    v51 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    goto LABEL_23;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v46, v47, v39);
  __swift_storeEnumTagSinglePayload((uint64_t)v46, 0, 1, v39);
LABEL_23:
  v37[*(int *)(v44 + 24)] = v38[*(int *)(v44 + 24)];
  v4[v15[15]] = v5[v15[15]];
  *(_QWORD *)&v4[v15[16]] = *(_QWORD *)&v5[v15[16]];
  swift_release();
  v52 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 40);
  v52(&a1[a3[6]], &a2[a3[6]], v39);
  v52(&a1[a3[7]], &a2[a3[7]], v39);
  *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
  swift_release();
  v53 = a3[9];
  v54 = &a1[v53];
  v55 = (uint64_t *)&a2[v53];
  v57 = *v55;
  v56 = v55[1];
  *(_QWORD *)v54 = v57;
  *((_QWORD *)v54 + 1) = v56;
  swift_bridgeObjectRelease();
  v58 = a3[11];
  a1[a3[10]] = a2[a3[10]];
  *(_QWORD *)&a1[v58] = *(_QWORD *)&a2[v58];
  swift_bridgeObjectRelease();
  a1[a3[12]] = a2[a3[12]];
  return a1;
}

uint64_t getEnumTagSinglePayload for CaptionSectioner.Caption()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1BD09CCEC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_44_6();
  if (v9)
  {
    v7 = v6;
    v8 = a3[5];
  }
  else
  {
    OUTLINED_FUNCTION_33();
    OUTLINED_FUNCTION_44_6();
    if (!v9)
    {
      OUTLINED_FUNCTION_93_0(*(_QWORD *)(a1 + a3[9] + 8));
      OUTLINED_FUNCTION_18();
      return;
    }
    v7 = v10;
    v8 = a3[6];
  }
  OUTLINED_FUNCTION_1_16(a1 + v8, a2, v7);
}

uint64_t storeEnumTagSinglePayload for CaptionSectioner.Caption()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1BD09CD68(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;

  OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_45_7();
  if (v10)
  {
    v8 = v7;
    v9 = a4[5];
  }
  else
  {
    OUTLINED_FUNCTION_33();
    OUTLINED_FUNCTION_45_7();
    if (!v10)
    {
      *(_QWORD *)(a1 + a4[9] + 8) = (a2 - 1);
      OUTLINED_FUNCTION_18();
      return;
    }
    v8 = v11;
    v9 = a4[6];
  }
  OUTLINED_FUNCTION_0_29(a1 + v9, a2, a2, v8);
}

uint64_t type metadata completion function for CaptionSectioner.Caption()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for Participant(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for Date();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for CaptionSectioner.Caption.Visibility(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BD09CEF8 + 4 * byte_1BD646B39[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BD09CF2C + 4 * byte_1BD646B34[v4]))();
}

uint64_t sub_1BD09CF2C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD09CF34(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD09CF3CLL);
  return result;
}

uint64_t sub_1BD09CF48(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD09CF50);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BD09CF54(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD09CF5C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for CaptionSectioner.Caption.Visibility()
{
  OUTLINED_FUNCTION_34_0();
}

_QWORD *initializeBufferWithCopyOfBuffer for CaptionSectioner.SpeakerSection(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  const void *v24;
  size_t v25;
  __int128 v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  int *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  __int128 v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v69;
  _OWORD *v70;
  _QWORD *v71;
  uint64_t v72;
  _QWORD *v73;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    v15 = (_QWORD *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for UUID();
    v8 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v72 = a3;
    v73 = a2;
    v9 = *(int *)(a3 + 20);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for Participant.State(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        v13 = type metadata accessor for Date();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v10, v11, v13);
        goto LABEL_18;
      case 4u:
        v16 = type metadata accessor for Date();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v10, v11, v16);
        v69 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        v17 = *(int *)(v69 + 48);
        v18 = &v10[v17];
        v19 = &v11[v17];
        *(_OWORD *)v18 = *(_OWORD *)&v11[v17];
        v20 = *(_QWORD *)&v11[v17 + 16];
        v21 = *(_QWORD *)&v11[v17 + 24];
        *((_QWORD *)v18 + 2) = v20;
        *((_QWORD *)v18 + 3) = v21;
        *((_WORD *)v18 + 16) = *((_WORD *)v19 + 16);
        *((_QWORD *)v18 + 5) = *((_QWORD *)v19 + 5);
        v18[48] = v19[48];
        *(_OWORD *)(v18 + 56) = *(_OWORD *)(v19 + 56);
        *(_OWORD *)(v18 + 72) = *(_OWORD *)(v19 + 72);
        v18[88] = v19[88];
        v18[89] = v19[89];
        v70 = v18 + 96;
        v22 = *((_QWORD *)v19 + 15);
        swift_bridgeObjectRetain();
        if (v22)
        {
          if (v22 == 1)
          {
            v23 = v18 + 96;
            v24 = v19 + 96;
            v25 = 209;
            goto LABEL_12;
          }
          v27 = *((_QWORD *)v19 + 16);
          *((_QWORD *)v18 + 15) = v22;
          *((_QWORD *)v18 + 16) = v27;
          (**(void (***)(_OWORD *, uint64_t, uint64_t))(v22 - 8))(v70, (uint64_t)(v19 + 96), v22);
        }
        else
        {
          v26 = *((_OWORD *)v19 + 7);
          *v70 = *((_OWORD *)v19 + 6);
          *((_OWORD *)v18 + 7) = v26;
          *((_QWORD *)v18 + 16) = *((_QWORD *)v19 + 16);
        }
        *((_DWORD *)v18 + 34) = *((_DWORD *)v19 + 34);
        v28 = *((_OWORD *)v19 + 10);
        *((_OWORD *)v18 + 9) = *((_OWORD *)v19 + 9);
        *((_OWORD *)v18 + 10) = v28;
        *((_OWORD *)v18 + 11) = *((_OWORD *)v19 + 11);
        v18[192] = v19[192];
        v23 = v18 + 208;
        v24 = v19 + 208;
        *((_QWORD *)v18 + 25) = *((_QWORD *)v19 + 25);
        v25 = 97;
LABEL_12:
        memcpy(v23, v24, v25);
        v29 = *((_QWORD *)v19 + 39);
        if (v29)
        {
          v30 = *((_QWORD *)v19 + 40);
          v31 = *((_QWORD *)v19 + 41);
          *((_QWORD *)v18 + 39) = v29;
          *((_QWORD *)v18 + 40) = v30;
          *((_QWORD *)v18 + 41) = v31;
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v18 + 312) = *(_OWORD *)(v19 + 312);
          *((_QWORD *)v18 + 41) = *((_QWORD *)v19 + 41);
        }
        v32 = *(int *)(v69 + 64);
        v33 = &v10[v32];
        v34 = &v11[v32];
        v35 = *((_QWORD *)v34 + 1);
        if (v35)
        {
          *(_QWORD *)v33 = *(_QWORD *)v34;
          *((_QWORD *)v33 + 1) = v35;
          v36 = *((_QWORD *)v34 + 3);
          *((_QWORD *)v33 + 2) = *((_QWORD *)v34 + 2);
          *((_QWORD *)v33 + 3) = v36;
          v33[32] = v34[32];
          *(_OWORD *)(v33 + 40) = *(_OWORD *)(v34 + 40);
          *((_QWORD *)v33 + 7) = *((_QWORD *)v34 + 7);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v37 = *((_OWORD *)v34 + 1);
          *(_OWORD *)v33 = *(_OWORD *)v34;
          *((_OWORD *)v33 + 1) = v37;
          v38 = *((_OWORD *)v34 + 3);
          *((_OWORD *)v33 + 2) = *((_OWORD *)v34 + 2);
          *((_OWORD *)v33 + 3) = v38;
        }
LABEL_18:
        swift_storeEnumTagMultiPayload();
LABEL_19:
        v39 = (int *)type metadata accessor for Participant(0);
        v8(&v10[v39[5]], &v11[v39[5]], v7);
        v40 = v39[6];
        v41 = &v10[v40];
        v42 = &v11[v40];
        v41[4] = v42[4];
        *(_DWORD *)v41 = *(_DWORD *)v42;
        v43 = v39[7];
        v44 = &v10[v43];
        v45 = &v11[v43];
        v46 = *(void **)v45;
        v71 = a1;
        if (*(_QWORD *)v45)
        {
          v47 = *((_QWORD *)v45 + 1);
          *(_QWORD *)v44 = v46;
          *((_QWORD *)v44 + 1) = v47;
          v44[16] = v45[16];
          v48 = *((_QWORD *)v45 + 4);
          *((_QWORD *)v44 + 3) = *((_QWORD *)v45 + 3);
          *((_QWORD *)v44 + 4) = v48;
          v49 = v46;
          swift_bridgeObjectRetain();
        }
        else
        {
          v50 = *((_OWORD *)v45 + 1);
          *(_OWORD *)v44 = *(_OWORD *)v45;
          *((_OWORD *)v44 + 1) = v50;
          *((_QWORD *)v44 + 4) = *((_QWORD *)v45 + 4);
        }
        *(_QWORD *)&v10[v39[8]] = *(_QWORD *)&v11[v39[8]];
        v51 = v39[9];
        v52 = &v10[v51];
        v53 = &v11[v51];
        v54 = v53[1];
        *v52 = *v53;
        v52[1] = v54;
        v10[v39[10]] = v11[v39[10]];
        *(_QWORD *)&v10[v39[11]] = *(_QWORD *)&v11[v39[11]];
        v55 = v39[12];
        v56 = *(void **)&v11[v55];
        *(_QWORD *)&v10[v55] = v56;
        v10[v39[13]] = v11[v39[13]];
        v57 = v39[14];
        v58 = &v10[v57];
        v59 = &v11[v57];
        v60 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v61 = v56;
        if (__swift_getEnumTagSinglePayload((uint64_t)v59, 1, v60))
        {
          v62 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
          memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 16))(v58, v59, v60);
          __swift_storeEnumTagSinglePayload((uint64_t)v58, 0, 1, v60);
        }
        v15 = v71;
        v63 = type metadata accessor for Participant.CountdownInfo(0);
        v64 = *(int *)(v63 + 20);
        v65 = &v58[v64];
        v66 = &v59[v64];
        if (__swift_getEnumTagSinglePayload((uint64_t)&v59[v64], 1, v60))
        {
          v67 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
          memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 16))(v65, v66, v60);
          __swift_storeEnumTagSinglePayload((uint64_t)v65, 0, 1, v60);
        }
        v58[*(int *)(v63 + 24)] = v59[*(int *)(v63 + 24)];
        v10[v39[15]] = v11[v39[15]];
        *(_QWORD *)&v10[v39[16]] = *(_QWORD *)&v11[v39[16]];
        *(_QWORD *)((char *)v71 + *(int *)(v72 + 24)) = *(_QWORD *)((char *)v73 + *(int *)(v72 + 24));
        swift_retain();
        swift_bridgeObjectRetain();
        break;
      default:
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
        goto LABEL_19;
    }
  }
  return v15;
}

uint64_t destroy for CaptionSectioner.SpeakerSection(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  int *v8;
  id *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = type metadata accessor for UUID();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v6 = a1 + *(int *)(a2 + 20);
  type metadata accessor for Participant.State(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 5u:
      v7 = type metadata accessor for Date();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
      break;
    case 4u:
      v14 = type metadata accessor for Date();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v6, v14);
      v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      v16 = v6 + *(int *)(v15 + 48);
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v16 + 120) >= 2uLL)
        __swift_destroy_boxed_opaque_existential_1(v16 + 96);
      if (*(_QWORD *)(v16 + 312))
      {
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
      }
      if (*(_QWORD *)(v6 + *(int *)(v15 + 64) + 8))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      break;
    default:
      break;
  }
  v8 = (int *)type metadata accessor for Participant(0);
  v5(v6 + v8[5], v4);
  v9 = (id *)(v6 + v8[7]);
  if (*v9)
  {

    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v10 = v6 + v8[14];
  v11 = type metadata accessor for Date();
  if (!__swift_getEnumTagSinglePayload(v10, 1, v11))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  v12 = v10 + *(int *)(type metadata accessor for Participant.CountdownInfo(0) + 20);
  if (!__swift_getEnumTagSinglePayload(v12, 1, v11))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v12, v11);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CaptionSectioner.SpeakerSection(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _BYTE *v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  const void *v21;
  size_t v22;
  __int128 v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  int *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  __int128 v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  _OWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v6 = type metadata accessor for UUID();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v68 = a3;
  v69 = a2;
  v8 = *(int *)(a3 + 20);
  v9 = (_BYTE *)(a1 + v8);
  v10 = (_BYTE *)(a2 + v8);
  v11 = type metadata accessor for Participant.State(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 5u:
      v12 = type metadata accessor for Date();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v9, v10, v12);
      goto LABEL_16;
    case 4u:
      v13 = type metadata accessor for Date();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v9, v10, v13);
      v67 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      v14 = *(int *)(v67 + 48);
      v15 = &v9[v14];
      v16 = &v10[v14];
      *(_OWORD *)v15 = *(_OWORD *)&v10[v14];
      v17 = *(_QWORD *)&v10[v14 + 16];
      v18 = *(_QWORD *)&v10[v14 + 24];
      *((_QWORD *)v15 + 2) = v17;
      *((_QWORD *)v15 + 3) = v18;
      *((_WORD *)v15 + 16) = *((_WORD *)v16 + 16);
      *((_QWORD *)v15 + 5) = *((_QWORD *)v16 + 5);
      v15[48] = v16[48];
      *(_OWORD *)(v15 + 56) = *(_OWORD *)(v16 + 56);
      *(_OWORD *)(v15 + 72) = *(_OWORD *)(v16 + 72);
      v15[88] = v16[88];
      v15[89] = v16[89];
      v66 = v15 + 96;
      v19 = *((_QWORD *)v16 + 15);
      swift_bridgeObjectRetain();
      if (v19)
      {
        if (v19 == 1)
        {
          v20 = v15 + 96;
          v21 = v16 + 96;
          v22 = 209;
          goto LABEL_10;
        }
        v24 = *((_QWORD *)v16 + 16);
        *((_QWORD *)v15 + 15) = v19;
        *((_QWORD *)v15 + 16) = v24;
        (**(void (***)(_OWORD *, uint64_t, uint64_t))(v19 - 8))(v66, (uint64_t)(v16 + 96), v19);
      }
      else
      {
        v23 = *((_OWORD *)v16 + 7);
        *v66 = *((_OWORD *)v16 + 6);
        *((_OWORD *)v15 + 7) = v23;
        *((_QWORD *)v15 + 16) = *((_QWORD *)v16 + 16);
      }
      *((_DWORD *)v15 + 34) = *((_DWORD *)v16 + 34);
      v25 = *((_OWORD *)v16 + 10);
      *((_OWORD *)v15 + 9) = *((_OWORD *)v16 + 9);
      *((_OWORD *)v15 + 10) = v25;
      *((_OWORD *)v15 + 11) = *((_OWORD *)v16 + 11);
      v15[192] = v16[192];
      v20 = v15 + 208;
      v21 = v16 + 208;
      *((_QWORD *)v15 + 25) = *((_QWORD *)v16 + 25);
      v22 = 97;
LABEL_10:
      memcpy(v20, v21, v22);
      v26 = *((_QWORD *)v16 + 39);
      if (v26)
      {
        v27 = *((_QWORD *)v16 + 40);
        v28 = *((_QWORD *)v16 + 41);
        *((_QWORD *)v15 + 39) = v26;
        *((_QWORD *)v15 + 40) = v27;
        *((_QWORD *)v15 + 41) = v28;
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v15 + 312) = *(_OWORD *)(v16 + 312);
        *((_QWORD *)v15 + 41) = *((_QWORD *)v16 + 41);
      }
      v29 = *(int *)(v67 + 64);
      v30 = &v9[v29];
      v31 = &v10[v29];
      v32 = *((_QWORD *)v31 + 1);
      if (v32)
      {
        *(_QWORD *)v30 = *(_QWORD *)v31;
        *((_QWORD *)v30 + 1) = v32;
        v33 = *((_QWORD *)v31 + 3);
        *((_QWORD *)v30 + 2) = *((_QWORD *)v31 + 2);
        *((_QWORD *)v30 + 3) = v33;
        v30[32] = v31[32];
        *(_OWORD *)(v30 + 40) = *(_OWORD *)(v31 + 40);
        *((_QWORD *)v30 + 7) = *((_QWORD *)v31 + 7);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v34 = *((_OWORD *)v31 + 1);
        *(_OWORD *)v30 = *(_OWORD *)v31;
        *((_OWORD *)v30 + 1) = v34;
        v35 = *((_OWORD *)v31 + 3);
        *((_OWORD *)v30 + 2) = *((_OWORD *)v31 + 2);
        *((_OWORD *)v30 + 3) = v35;
      }
LABEL_16:
      swift_storeEnumTagMultiPayload();
LABEL_17:
      v36 = (int *)type metadata accessor for Participant(0);
      v7((uint64_t)&v9[v36[5]], (uint64_t)&v10[v36[5]], v6);
      v37 = v36[6];
      v38 = &v9[v37];
      v39 = &v10[v37];
      v38[4] = v39[4];
      *(_DWORD *)v38 = *(_DWORD *)v39;
      v40 = v36[7];
      v41 = &v9[v40];
      v42 = &v10[v40];
      v43 = *(void **)v42;
      v70 = a1;
      if (*(_QWORD *)v42)
      {
        v44 = *((_QWORD *)v42 + 1);
        *(_QWORD *)v41 = v43;
        *((_QWORD *)v41 + 1) = v44;
        v41[16] = v42[16];
        v45 = *((_QWORD *)v42 + 4);
        *((_QWORD *)v41 + 3) = *((_QWORD *)v42 + 3);
        *((_QWORD *)v41 + 4) = v45;
        v46 = v43;
        swift_bridgeObjectRetain();
      }
      else
      {
        v47 = *((_OWORD *)v42 + 1);
        *(_OWORD *)v41 = *(_OWORD *)v42;
        *((_OWORD *)v41 + 1) = v47;
        *((_QWORD *)v41 + 4) = *((_QWORD *)v42 + 4);
      }
      *(_QWORD *)&v9[v36[8]] = *(_QWORD *)&v10[v36[8]];
      v48 = v36[9];
      v49 = &v9[v48];
      v50 = &v10[v48];
      v51 = v50[1];
      *v49 = *v50;
      v49[1] = v51;
      v9[v36[10]] = v10[v36[10]];
      *(_QWORD *)&v9[v36[11]] = *(_QWORD *)&v10[v36[11]];
      v52 = v36[12];
      v53 = *(void **)&v10[v52];
      *(_QWORD *)&v9[v52] = v53;
      v9[v36[13]] = v10[v36[13]];
      v54 = v36[14];
      v55 = &v9[v54];
      v56 = &v10[v54];
      v57 = type metadata accessor for Date();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v58 = v53;
      if (__swift_getEnumTagSinglePayload((uint64_t)v56, 1, v57))
      {
        v59 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
        memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(v55, v56, v57);
        __swift_storeEnumTagSinglePayload((uint64_t)v55, 0, 1, v57);
      }
      v60 = type metadata accessor for Participant.CountdownInfo(0);
      v61 = *(int *)(v60 + 20);
      v62 = &v55[v61];
      v63 = &v56[v61];
      if (__swift_getEnumTagSinglePayload((uint64_t)&v56[v61], 1, v57))
      {
        v64 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
        memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(v62, v63, v57);
        __swift_storeEnumTagSinglePayload((uint64_t)v62, 0, 1, v57);
      }
      v55[*(int *)(v60 + 24)] = v56[*(int *)(v60 + 24)];
      v9[v36[15]] = v10[v36[15]];
      *(_QWORD *)&v9[v36[16]] = *(_QWORD *)&v10[v36[16]];
      *(_QWORD *)(v70 + *(int *)(v68 + 24)) = *(_QWORD *)(v69 + *(int *)(v68 + 24));
      swift_retain();
      swift_bridgeObjectRetain();
      return v70;
    default:
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      goto LABEL_17;
  }
}

uint64_t assignWithCopy for CaptionSectioner.SpeakerSection(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  void *v21;
  const void *v22;
  size_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  char *v32;
  char *v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  int *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  void *v44;
  void *v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  void *v58;
  void *v59;
  id v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  int EnumTagSinglePayload;
  int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  int v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;

  v6 = type metadata accessor for UUID();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v79 = a3;
  v80 = a2;
  v8 = *(int *)(a3 + 20);
  v9 = (char *)(a1 + v8);
  v10 = (char *)(a2 + v8);
  v81 = a1;
  if (a1 != a2)
  {
    outlined destroy of CaptionSectioner.Caption(a1 + v8, type metadata accessor for Participant.State);
    v11 = type metadata accessor for Participant.State(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        v12 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v9, v10, v12);
        goto LABEL_17;
      case 4u:
        v13 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v9, v10, v13);
        v78 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        v14 = *(int *)(v78 + 48);
        v15 = &v9[v14];
        v16 = &v10[v14];
        *(_OWORD *)v15 = *(_OWORD *)&v10[v14];
        *((_QWORD *)v15 + 2) = *(_QWORD *)&v10[v14 + 16];
        v17 = *(_QWORD *)&v10[v14 + 24];
        *((_WORD *)v15 + 16) = *((_WORD *)v16 + 16);
        *((_QWORD *)v15 + 3) = v17;
        *((_QWORD *)v15 + 5) = *((_QWORD *)v16 + 5);
        v15[48] = v16[48];
        v18 = *(_OWORD *)(v16 + 72);
        v19 = *(_OWORD *)(v16 + 56);
        v15[88] = v16[88];
        *(_OWORD *)(v15 + 56) = v19;
        *(_OWORD *)(v15 + 72) = v18;
        v15[89] = v16[89];
        v20 = *((_QWORD *)v16 + 15);
        swift_bridgeObjectRetain();
        if (v20)
        {
          if (v20 == 1)
          {
            v21 = v15 + 96;
            v22 = v16 + 96;
            v23 = 209;
            goto LABEL_11;
          }
          *((_QWORD *)v15 + 15) = v20;
          *((_QWORD *)v15 + 16) = *((_QWORD *)v16 + 16);
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v20 - 8))((uint64_t)(v15 + 96), (uint64_t)(v16 + 96), v20);
        }
        else
        {
          v24 = *((_OWORD *)v16 + 6);
          v25 = *((_OWORD *)v16 + 7);
          *((_QWORD *)v15 + 16) = *((_QWORD *)v16 + 16);
          *((_OWORD *)v15 + 6) = v24;
          *((_OWORD *)v15 + 7) = v25;
        }
        *((_DWORD *)v15 + 34) = *((_DWORD *)v16 + 34);
        *((_QWORD *)v15 + 18) = *((_QWORD *)v16 + 18);
        *((_QWORD *)v15 + 19) = *((_QWORD *)v16 + 19);
        v26 = *((_OWORD *)v16 + 10);
        v27 = *((_OWORD *)v16 + 11);
        v15[192] = v16[192];
        *((_OWORD *)v15 + 10) = v26;
        *((_OWORD *)v15 + 11) = v27;
        *((_QWORD *)v15 + 25) = *((_QWORD *)v16 + 25);
        v21 = v15 + 208;
        v22 = v16 + 208;
        v23 = 97;
LABEL_11:
        memcpy(v21, v22, v23);
        v28 = *((_QWORD *)v16 + 39);
        if (v28)
        {
          v29 = *((_QWORD *)v16 + 40);
          *((_QWORD *)v15 + 39) = v28;
          *((_QWORD *)v15 + 40) = v29;
          *((_QWORD *)v15 + 41) = *((_QWORD *)v16 + 41);
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v30 = *(_OWORD *)(v16 + 312);
          *((_QWORD *)v15 + 41) = *((_QWORD *)v16 + 41);
          *(_OWORD *)(v15 + 312) = v30;
        }
        v31 = *(int *)(v78 + 64);
        v32 = &v9[v31];
        v33 = &v10[v31];
        if (*((_QWORD *)v33 + 1))
        {
          *(_QWORD *)v32 = *(_QWORD *)v33;
          *((_QWORD *)v32 + 1) = *((_QWORD *)v33 + 1);
          *((_QWORD *)v32 + 2) = *((_QWORD *)v33 + 2);
          *((_QWORD *)v32 + 3) = *((_QWORD *)v33 + 3);
          v32[32] = v33[32];
          *((_QWORD *)v32 + 5) = *((_QWORD *)v33 + 5);
          *((_QWORD *)v32 + 6) = *((_QWORD *)v33 + 6);
          *((_QWORD *)v32 + 7) = *((_QWORD *)v33 + 7);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v34 = *(_OWORD *)v33;
          v35 = *((_OWORD *)v33 + 1);
          v36 = *((_OWORD *)v33 + 3);
          *((_OWORD *)v32 + 2) = *((_OWORD *)v33 + 2);
          *((_OWORD *)v32 + 3) = v36;
          *(_OWORD *)v32 = v34;
          *((_OWORD *)v32 + 1) = v35;
        }
LABEL_17:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
        break;
    }
  }
  v37 = (int *)type metadata accessor for Participant(0);
  v7((uint64_t)&v9[v37[5]], (uint64_t)&v10[v37[5]], v6);
  v38 = v37[6];
  v39 = &v9[v38];
  v40 = &v10[v38];
  *v39 = *v40;
  v39[1] = v40[1];
  v39[2] = v40[2];
  v39[3] = v40[3];
  v39[4] = v40[4];
  v41 = v37[7];
  v42 = &v9[v41];
  v43 = &v10[v41];
  v44 = *(void **)&v9[v41];
  v45 = *(void **)&v10[v41];
  if (v44)
  {
    if (v45)
    {
      *(_QWORD *)v42 = v45;
      v46 = v45;

      v47 = *((_QWORD *)v43 + 1);
      v42[16] = v43[16];
      *((_QWORD *)v42 + 1) = v47;
      *((_QWORD *)v42 + 3) = *((_QWORD *)v43 + 3);
      *((_QWORD *)v42 + 4) = *((_QWORD *)v43 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      outlined destroy of Participant.RemoteIdentifiers((id *)v42);
      v50 = *((_QWORD *)v43 + 4);
      v51 = *((_OWORD *)v43 + 1);
      *(_OWORD *)v42 = *(_OWORD *)v43;
      *((_OWORD *)v42 + 1) = v51;
      *((_QWORD *)v42 + 4) = v50;
    }
  }
  else if (v45)
  {
    *(_QWORD *)v42 = v45;
    v48 = *((_QWORD *)v43 + 1);
    v42[16] = v43[16];
    *((_QWORD *)v42 + 1) = v48;
    *((_QWORD *)v42 + 3) = *((_QWORD *)v43 + 3);
    *((_QWORD *)v42 + 4) = *((_QWORD *)v43 + 4);
    v49 = v45;
    swift_bridgeObjectRetain();
  }
  else
  {
    v52 = *(_OWORD *)v43;
    v53 = *((_OWORD *)v43 + 1);
    *((_QWORD *)v42 + 4) = *((_QWORD *)v43 + 4);
    *(_OWORD *)v42 = v52;
    *((_OWORD *)v42 + 1) = v53;
  }
  *(_QWORD *)&v9[v37[8]] = *(_QWORD *)&v10[v37[8]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v54 = v37[9];
  v55 = &v9[v54];
  v56 = &v10[v54];
  *(_QWORD *)v55 = *(_QWORD *)v56;
  *((_QWORD *)v55 + 1) = *((_QWORD *)v56 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9[v37[10]] = v10[v37[10]];
  *(_QWORD *)&v9[v37[11]] = *(_QWORD *)&v10[v37[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v57 = v37[12];
  v58 = *(void **)&v9[v57];
  v59 = *(void **)&v10[v57];
  *(_QWORD *)&v9[v57] = v59;
  v60 = v59;

  v9[v37[13]] = v10[v37[13]];
  v61 = v37[14];
  v62 = &v9[v61];
  v63 = &v10[v61];
  v64 = type metadata accessor for Date();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v62, 1, v64);
  v66 = __swift_getEnumTagSinglePayload((uint64_t)v63, 1, v64);
  if (EnumTagSinglePayload)
  {
    if (!v66)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 16))(v62, v63, v64);
      __swift_storeEnumTagSinglePayload((uint64_t)v62, 0, 1, v64);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  v67 = *(_QWORD *)(v64 - 8);
  if (v66)
  {
    (*(void (**)(char *, uint64_t))(v67 + 8))(v62, v64);
LABEL_30:
    v68 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v67 + 24))(v62, v63, v64);
LABEL_31:
  v69 = type metadata accessor for Participant.CountdownInfo(0);
  v70 = *(int *)(v69 + 20);
  v71 = &v62[v70];
  v72 = &v63[v70];
  v73 = __swift_getEnumTagSinglePayload((uint64_t)&v62[v70], 1, v64);
  v74 = __swift_getEnumTagSinglePayload((uint64_t)v72, 1, v64);
  if (!v73)
  {
    v75 = *(_QWORD *)(v64 - 8);
    if (!v74)
    {
      (*(void (**)(char *, char *, uint64_t))(v75 + 24))(v71, v72, v64);
      goto LABEL_37;
    }
    (*(void (**)(char *, uint64_t))(v75 + 8))(v71, v64);
    goto LABEL_36;
  }
  if (v74)
  {
LABEL_36:
    v76 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 16))(v71, v72, v64);
  __swift_storeEnumTagSinglePayload((uint64_t)v71, 0, 1, v64);
LABEL_37:
  v62[*(int *)(v69 + 24)] = v63[*(int *)(v69 + 24)];
  v9[v37[15]] = v10[v37[15]];
  *(_QWORD *)&v9[v37[16]] = *(_QWORD *)&v10[v37[16]];
  swift_retain();
  swift_release();
  *(_QWORD *)(v81 + *(int *)(v79 + 24)) = *(_QWORD *)(v80 + *(int *)(v79 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v81;
}

uint64_t initializeWithTake for CaptionSectioner.SpeakerSection(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  __int128 v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;

  v6 = type metadata accessor for UUID();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v39 = a3;
  v40 = a2;
  v8 = *(int *)(a3 + 20);
  v9 = (char *)(a1 + v8);
  v10 = (char *)(a2 + v8);
  v11 = type metadata accessor for Participant.State(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 5u:
      v19 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v9, v10, v19);
      goto LABEL_5;
    case 4u:
      v12 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v9, v10, v12);
      v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      memcpy(&v9[*(int *)(v13 + 48)], &v10[*(int *)(v13 + 48)], 0x150uLL);
      v14 = *(int *)(v13 + 64);
      v15 = &v9[v14];
      v16 = &v10[v14];
      v17 = *((_OWORD *)v16 + 1);
      *(_OWORD *)v15 = *(_OWORD *)v16;
      *((_OWORD *)v15 + 1) = v17;
      v18 = *((_OWORD *)v16 + 3);
      *((_OWORD *)v15 + 2) = *((_OWORD *)v16 + 2);
      *((_OWORD *)v15 + 3) = v18;
LABEL_5:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      break;
  }
  v20 = (int *)type metadata accessor for Participant(0);
  v7((uint64_t)&v9[v20[5]], (uint64_t)&v10[v20[5]], v6);
  v21 = v20[6];
  v22 = &v9[v21];
  v23 = &v10[v21];
  *(_DWORD *)v22 = *(_DWORD *)v23;
  v22[4] = v23[4];
  v24 = v20[7];
  v25 = &v9[v24];
  v26 = &v10[v24];
  v27 = *((_OWORD *)v26 + 1);
  *(_OWORD *)v25 = *(_OWORD *)v26;
  *((_OWORD *)v25 + 1) = v27;
  *((_QWORD *)v25 + 4) = *((_QWORD *)v26 + 4);
  *(_QWORD *)&v9[v20[8]] = *(_QWORD *)&v10[v20[8]];
  *(_OWORD *)&v9[v20[9]] = *(_OWORD *)&v10[v20[9]];
  v9[v20[10]] = v10[v20[10]];
  *(_QWORD *)&v9[v20[11]] = *(_QWORD *)&v10[v20[11]];
  *(_QWORD *)&v9[v20[12]] = *(_QWORD *)&v10[v20[12]];
  v9[v20[13]] = v10[v20[13]];
  v28 = v20[14];
  v29 = &v9[v28];
  v30 = &v10[v28];
  v31 = type metadata accessor for Date();
  if (__swift_getEnumTagSinglePayload((uint64_t)v30, 1, v31))
  {
    v32 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v29, v30, v31);
    __swift_storeEnumTagSinglePayload((uint64_t)v29, 0, 1, v31);
  }
  v33 = type metadata accessor for Participant.CountdownInfo(0);
  v34 = *(int *)(v33 + 20);
  v35 = &v29[v34];
  v36 = &v30[v34];
  if (__swift_getEnumTagSinglePayload((uint64_t)&v30[v34], 1, v31))
  {
    v37 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v35, v36, v31);
    __swift_storeEnumTagSinglePayload((uint64_t)v35, 0, 1, v31);
  }
  v29[*(int *)(v33 + 24)] = v30[*(int *)(v33 + 24)];
  v9[v20[15]] = v10[v20[15]];
  *(_QWORD *)&v9[v20[16]] = *(_QWORD *)&v10[v20[16]];
  *(_QWORD *)(a1 + *(int *)(v39 + 24)) = *(_QWORD *)(v40 + *(int *)(v39 + 24));
  return a1;
}

uint64_t assignWithTake for CaptionSectioner.SpeakerSection(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  void *v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  int EnumTagSinglePayload;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  int v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v6 = type metadata accessor for UUID();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v54 = a3;
  v55 = a2;
  v8 = *(int *)(a3 + 20);
  v9 = (char *)(a1 + v8);
  v10 = (char *)(a2 + v8);
  v56 = a1;
  if (a1 != a2)
  {
    outlined destroy of CaptionSectioner.Caption(a1 + v8, type metadata accessor for Participant.State);
    v11 = type metadata accessor for Participant.State(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        v19 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v9, v10, v19);
        goto LABEL_5;
      case 4u:
        v12 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v9, v10, v12);
        v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        memcpy(&v9[*(int *)(v13 + 48)], &v10[*(int *)(v13 + 48)], 0x150uLL);
        v14 = *(int *)(v13 + 64);
        v15 = &v9[v14];
        v16 = &v10[v14];
        v17 = *((_OWORD *)v16 + 1);
        *(_OWORD *)v15 = *(_OWORD *)v16;
        *((_OWORD *)v15 + 1) = v17;
        v18 = *((_OWORD *)v16 + 3);
        *((_OWORD *)v15 + 2) = *((_OWORD *)v16 + 2);
        *((_OWORD *)v15 + 3) = v18;
LABEL_5:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
        break;
    }
  }
  v20 = (int *)type metadata accessor for Participant(0);
  v7((uint64_t)&v9[v20[5]], (uint64_t)&v10[v20[5]], v6);
  v21 = v20[6];
  v22 = &v9[v21];
  v23 = &v10[v21];
  *v22 = *v23;
  v22[1] = v23[1];
  v22[2] = v23[2];
  v22[3] = v23[3];
  v22[4] = v23[4];
  v24 = v20[7];
  v25 = &v9[v24];
  v26 = &v10[v24];
  v27 = *(void **)&v9[v24];
  if (v27)
  {
    if (*(_QWORD *)v26)
    {
      *(_QWORD *)v25 = *(_QWORD *)v26;

      *((_QWORD *)v25 + 1) = *((_QWORD *)v26 + 1);
      v25[16] = v26[16];
      v28 = *((_QWORD *)v26 + 4);
      *((_QWORD *)v25 + 3) = *((_QWORD *)v26 + 3);
      *((_QWORD *)v25 + 4) = v28;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    outlined destroy of Participant.RemoteIdentifiers((id *)v25);
  }
  v29 = *((_OWORD *)v26 + 1);
  *(_OWORD *)v25 = *(_OWORD *)v26;
  *((_OWORD *)v25 + 1) = v29;
  *((_QWORD *)v25 + 4) = *((_QWORD *)v26 + 4);
LABEL_11:
  *(_QWORD *)&v9[v20[8]] = *(_QWORD *)&v10[v20[8]];
  swift_bridgeObjectRelease();
  v30 = v20[9];
  v31 = &v9[v30];
  v32 = &v10[v30];
  v34 = *(_QWORD *)v32;
  v33 = *((_QWORD *)v32 + 1);
  *(_QWORD *)v31 = v34;
  *((_QWORD *)v31 + 1) = v33;
  swift_bridgeObjectRelease();
  v9[v20[10]] = v10[v20[10]];
  *(_QWORD *)&v9[v20[11]] = *(_QWORD *)&v10[v20[11]];
  swift_bridgeObjectRelease();
  v35 = v20[12];
  v36 = *(void **)&v9[v35];
  *(_QWORD *)&v9[v35] = *(_QWORD *)&v10[v35];

  v9[v20[13]] = v10[v20[13]];
  v37 = v20[14];
  v38 = &v9[v37];
  v39 = &v10[v37];
  v40 = type metadata accessor for Date();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v38, 1, v40);
  v42 = __swift_getEnumTagSinglePayload((uint64_t)v39, 1, v40);
  if (EnumTagSinglePayload)
  {
    if (!v42)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v38, v39, v40);
      __swift_storeEnumTagSinglePayload((uint64_t)v38, 0, 1, v40);
      goto LABEL_17;
    }
    goto LABEL_16;
  }
  v43 = *(_QWORD *)(v40 - 8);
  if (v42)
  {
    (*(void (**)(char *, uint64_t))(v43 + 8))(v38, v40);
LABEL_16:
    v44 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    goto LABEL_17;
  }
  (*(void (**)(char *, char *, uint64_t))(v43 + 40))(v38, v39, v40);
LABEL_17:
  v45 = type metadata accessor for Participant.CountdownInfo(0);
  v46 = *(int *)(v45 + 20);
  v47 = &v38[v46];
  v48 = &v39[v46];
  v49 = __swift_getEnumTagSinglePayload((uint64_t)&v38[v46], 1, v40);
  v50 = __swift_getEnumTagSinglePayload((uint64_t)v48, 1, v40);
  if (!v49)
  {
    v51 = *(_QWORD *)(v40 - 8);
    if (!v50)
    {
      (*(void (**)(char *, char *, uint64_t))(v51 + 40))(v47, v48, v40);
      goto LABEL_23;
    }
    (*(void (**)(char *, uint64_t))(v51 + 8))(v47, v40);
    goto LABEL_22;
  }
  if (v50)
  {
LABEL_22:
    v52 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    goto LABEL_23;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v47, v48, v40);
  __swift_storeEnumTagSinglePayload((uint64_t)v47, 0, 1, v40);
LABEL_23:
  v38[*(int *)(v45 + 24)] = v39[*(int *)(v45 + 24)];
  v9[v20[15]] = v10[v20[15]];
  *(_QWORD *)&v9[v20[16]] = *(_QWORD *)&v10[v20[16]];
  swift_release();
  *(_QWORD *)(v56 + *(int *)(v54 + 24)) = *(_QWORD *)(v55 + *(int *)(v54 + 24));
  swift_bridgeObjectRelease();
  return v56;
}

uint64_t getEnumTagSinglePayload for CaptionSectioner.SpeakerSection()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1BD09EE40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  type metadata accessor for CaptionSectioner.SectionID(0);
  OUTLINED_FUNCTION_44_6();
  if (v9)
  {
    v7 = v6;
    v8 = a1;
  }
  else
  {
    OUTLINED_FUNCTION_14_2();
    OUTLINED_FUNCTION_44_6();
    if (!v9)
    {
      OUTLINED_FUNCTION_93_0(*(_QWORD *)(a1 + *(int *)(a3 + 24)));
      OUTLINED_FUNCTION_18();
      return;
    }
    v7 = v10;
    v8 = a1 + *(int *)(a3 + 20);
  }
  OUTLINED_FUNCTION_1_16(v8, a2, v7);
}

uint64_t storeEnumTagSinglePayload for CaptionSectioner.SpeakerSection()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1BD09EEBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;

  type metadata accessor for CaptionSectioner.SectionID(0);
  OUTLINED_FUNCTION_45_7();
  if (v10)
  {
    v8 = v7;
    v9 = a1;
  }
  else
  {
    OUTLINED_FUNCTION_14_2();
    OUTLINED_FUNCTION_45_7();
    if (!v10)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
      OUTLINED_FUNCTION_18();
      return;
    }
    v8 = v11;
    v9 = a1 + *(int *)(a4 + 20);
  }
  OUTLINED_FUNCTION_0_29(v9, a2, a2, v8);
}

uint64_t type metadata completion function for CaptionSectioner.SpeakerSection()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for Participant(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

void type metadata accessor for CaptionSectioner.CaptionID()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t initializeBufferWithCopyOfBuffer for CaptionSectioner.SectionID(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UUID();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for CaptionSectioner.SectionID(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for UUID();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for CaptionSectioner.SectionID(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for CaptionSectioner.SectionID(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for CaptionSectioner.SectionID(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for CaptionSectioner.SectionID(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for CaptionSectioner.SectionID()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BD09F15C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_33_0();
  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for CaptionSectioner.SectionID()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BD09F198(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_33_0();
  return __swift_storeEnumTagSinglePayload(a1, a2, a2, v4);
}

uint64_t type metadata completion function for CaptionSectioner.SectionID()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata instantiation function for FindMatchByWalking()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t destroy for FindMatchByWalking()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for FindMatchByWalking(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v3;
  v4 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v4;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for FindMatchByWalking(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  a1[5] = a2[5];
  swift_retain();
  swift_release();
  a1[6] = a2[6];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for FindMatchByWalking(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for FindMatchByWalking(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 56))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FindMatchByWalking(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for FindMatchByWalking()
{
  JUMPOUT(0x1C3B74FFCLL);
}

void specialized _ArrayBuffer._consumeAndCreateNew()()
{
  OUTLINED_FUNCTION_10_13();
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  OUTLINED_FUNCTION_10_13();
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  OUTLINED_FUNCTION_10_13();
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  OUTLINED_FUNCTION_10_13();
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  OUTLINED_FUNCTION_10_13();
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  OUTLINED_FUNCTION_10_13();
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  OUTLINED_FUNCTION_10_13();
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  OUTLINED_FUNCTION_10_13();
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  OUTLINED_FUNCTION_10_13();
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

void specialized _ArrayBuffer._consumeAndCreateNew()(unint64_t a1)
{
  if (a1 >> 62)
  {
    OUTLINED_FUNCTION_17_20();
    OUTLINED_FUNCTION_25_3();
    OUTLINED_FUNCTION_13_3();
  }
  JUMPOUT(0x1C3B73D24);
}

void specialized UnsafeMutableBufferPointer._stableSortImpl(by:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Swift::Int v11;
  Swift::Int v12;
  Swift::Int v13;
  unint64_t v14;
  Swift::Int v15;
  char *v16;
  Swift::Int v17;
  Swift::Int v18;
  Swift::Int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  Swift::Int v28;
  Swift::Int v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  Swift::Int v34;
  uint64_t v35;
  uint64_t v36;
  Swift::Int v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  Swift::Int v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  char *v49;
  char *v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  BOOL v62;
  unint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  BOOL v72;
  uint64_t v73;
  char v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  BOOL v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  Swift::Int v90;
  unint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  Swift::Int v100;
  uint64_t v101;
  Swift::Int v102;
  uint64_t v103;
  Swift::Int v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  Swift::Int v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  _QWORD *v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  Swift::Int v124;
  uint64_t v125;
  uint64_t v126;
  Swift::Int v127;
  char *v128;
  Swift::Int v129;
  uint64_t v130;
  unint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  Swift::Int v135;
  uint64_t v136;
  uint64_t v137;
  _QWORD *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;

  v139 = type metadata accessor for CaptionSectioner.Caption(0);
  v3 = *(_QWORD *)(v139 - 8);
  v4 = MEMORY[0x1E0C80A78](v139);
  v130 = (uint64_t)&v123 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v4);
  v140 = (uint64_t)&v123 - v7;
  v8 = MEMORY[0x1E0C80A78](v6);
  v137 = (uint64_t)&v123 - v9;
  MEMORY[0x1E0C80A78](v8);
  v136 = (uint64_t)&v123 - v10;
  v11 = a1[1];
  v12 = _minimumMergeRunLength(_:)(v11);
  if (v12 >= v11)
  {
    if (v11 < 0)
      goto LABEL_142;
    if (v11)
      specialized MutableCollection<>._insertionSort(within:sortedEnd:by:)(0, v11, 1, a1);
    return;
  }
  v13 = v12;
  v133 = v1;
  v138 = a1;
  v125 = specialized static Array._allocateUninitialized(_:)(v11 / 2);
  v126 = v11;
  v131 = v14;
  v132 = v3;
  if (v11 <= 0)
    goto LABEL_105;
  v124 = v13;
  v15 = 0;
  v16 = (char *)MEMORY[0x1E0DEE9D8];
  v17 = v11;
  while (1)
  {
    v18 = v15;
    v19 = v15 + 1;
    v128 = v16;
    if (v15 + 1 >= v17)
    {
      ++v15;
LABEL_29:
      v39 = v138;
      goto LABEL_30;
    }
    v20 = *v138;
    v21 = *(_QWORD *)(v3 + 72);
    v22 = v136;
    _s15ConversationKit11ParticipantVWOcTm_0(*v138 + v21 * v19, v136, type metadata accessor for CaptionSectioner.Caption);
    v23 = v20 + v21 * v15;
    v24 = v137;
    _s15ConversationKit11ParticipantVWOcTm_0(v23, v137, type metadata accessor for CaptionSectioner.Caption);
    LODWORD(v135) = static Date.< infix(_:_:)();
    outlined destroy of CaptionSectioner.Caption(v24, type metadata accessor for CaptionSectioner.Caption);
    outlined destroy of CaptionSectioner.Caption(v22, type metadata accessor for CaptionSectioner.Caption);
    v15 = v18 + 2;
    v134 = v20;
    v141 = v21;
    if (v18 + 2 < v17)
    {
      v129 = v18;
      v25 = v21 * v19;
      v26 = v20;
      v27 = v21 * v15;
      while (1)
      {
        v28 = v17;
        v29 = v15;
        v30 = v136;
        _s15ConversationKit11ParticipantVWOcTm_0(v26 + v27, v136, type metadata accessor for CaptionSectioner.Caption);
        v31 = v137;
        _s15ConversationKit11ParticipantVWOcTm_0(v26 + v25, v137, type metadata accessor for CaptionSectioner.Caption);
        v32 = static Date.< infix(_:_:)();
        outlined destroy of CaptionSectioner.Caption(v31, type metadata accessor for CaptionSectioner.Caption);
        outlined destroy of CaptionSectioner.Caption(v30, type metadata accessor for CaptionSectioner.Caption);
        if (((v135 ^ v32) & 1) != 0)
          break;
        v15 = v29 + 1;
        v21 = v141;
        v26 += v141;
        v17 = v28;
        if (v15 >= v28)
        {
          v15 = v28;
          v3 = v132;
          v18 = v129;
          goto LABEL_12;
        }
      }
      v3 = v132;
      v15 = v29;
      v18 = v129;
      v17 = v28;
      v21 = v141;
    }
LABEL_12:
    if ((v135 & 1) == 0)
      goto LABEL_29;
    if (v15 < v18)
      goto LABEL_143;
    if (v18 >= v15)
      goto LABEL_29;
    v135 = v17;
    v33 = 0;
    v34 = v18;
    v35 = v21 * (v15 - 1);
    v36 = v15 * v21;
    v37 = v34;
    v129 = v34;
    v38 = v34 * v21;
    v39 = v138;
    do
    {
      if (v37 != v15 + v33 - 1)
      {
        v40 = v134;
        if (!v134)
          goto LABEL_149;
        v41 = v134 + v38;
        v42 = v134 + v35;
        outlined init with take of Participant(v134 + v38, v130, type metadata accessor for CaptionSectioner.Caption);
        if (v38 < v35 || v41 >= v40 + v36)
        {
          swift_arrayInitWithTakeFrontToBack();
          v21 = v141;
        }
        else
        {
          v21 = v141;
          if (v38 != v35)
            swift_arrayInitWithTakeBackToFront();
        }
        outlined init with take of Participant(v130, v42, type metadata accessor for CaptionSectioner.Caption);
        v39 = v138;
      }
      ++v37;
      --v33;
      v35 -= v21;
      v36 -= v21;
      v38 += v21;
    }
    while (v37 < v15 + v33);
    v3 = v132;
    v17 = v135;
    v18 = v129;
LABEL_30:
    if (v15 >= v17)
      goto LABEL_39;
    if (__OFSUB__(v15, v18))
      goto LABEL_141;
    if (v15 - v18 >= v124)
      goto LABEL_39;
    if (__OFADD__(v18, v124))
      goto LABEL_144;
    if (v18 + v124 >= v17)
      v44 = v17;
    else
      v44 = v18 + v124;
    if (v44 < v18)
    {
LABEL_145:
      __break(1u);
      goto LABEL_146;
    }
    if (v15 == v44)
    {
LABEL_39:
      v45 = v133;
    }
    else
    {
      v99 = *(_QWORD *)(v3 + 72);
      v141 = v99 * (v15 - 1);
      v134 = v99;
      v100 = v15 * v99;
      v129 = v18;
      v127 = v44;
      do
      {
        v101 = 0;
        v102 = v18;
        v135 = v15;
        while (1)
        {
          v103 = *v39;
          v104 = v100;
          v105 = v100 + v101 + *v39;
          v106 = v136;
          v107 = v39;
          _s15ConversationKit11ParticipantVWOcTm_0(v105, v136, type metadata accessor for CaptionSectioner.Caption);
          v108 = v137;
          _s15ConversationKit11ParticipantVWOcTm_0(v141 + v101 + v103, v137, type metadata accessor for CaptionSectioner.Caption);
          LOBYTE(v103) = static Date.< infix(_:_:)();
          outlined destroy of CaptionSectioner.Caption(v108, type metadata accessor for CaptionSectioner.Caption);
          outlined destroy of CaptionSectioner.Caption(v106, type metadata accessor for CaptionSectioner.Caption);
          if ((v103 & 1) == 0)
            break;
          v109 = *v107;
          if (!*v107)
            goto LABEL_147;
          v100 = v104;
          v110 = v109 + v141 + v101;
          outlined init with take of Participant(v109 + v104 + v101, v140, type metadata accessor for CaptionSectioner.Caption);
          swift_arrayInitWithTakeFrontToBack();
          outlined init with take of Participant(v140, v110, type metadata accessor for CaptionSectioner.Caption);
          v111 = v135;
          v101 -= v134;
          ++v102;
          v39 = v138;
          if (v135 == v102)
            goto LABEL_97;
        }
        v111 = v135;
        v100 = v104;
        v39 = v107;
LABEL_97:
        v15 = v111 + 1;
        v141 += v134;
        v100 += v134;
        v18 = v129;
      }
      while (v15 != v127);
      v15 = v127;
      v45 = v133;
    }
    if (v15 < v18)
      goto LABEL_140;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
    {
      v16 = v128;
    }
    else
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *((_QWORD *)v128 + 2) + 1, 1, v128);
      v16 = v112;
    }
    v47 = *((_QWORD *)v16 + 2);
    v46 = *((_QWORD *)v16 + 3);
    v48 = v47 + 1;
    if (v47 >= v46 >> 1)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v46 > 1, v47 + 1, 1, v16);
      v16 = v113;
    }
    v133 = v45;
    *((_QWORD *)v16 + 2) = v48;
    v49 = v16 + 32;
    v50 = &v16[16 * v47 + 32];
    *(_QWORD *)v50 = v18;
    *((_QWORD *)v50 + 1) = v15;
    if (v47)
      break;
    v48 = 1;
LABEL_88:
    v17 = v138[1];
    v3 = v132;
    if (v15 >= v17)
      goto LABEL_106;
  }
  while (1)
  {
    v51 = v48 - 1;
    if (v48 >= 4)
    {
      v56 = &v49[16 * v48];
      v57 = *((_QWORD *)v56 - 8);
      v58 = *((_QWORD *)v56 - 7);
      v62 = __OFSUB__(v58, v57);
      v59 = v58 - v57;
      if (v62)
        goto LABEL_125;
      v61 = *((_QWORD *)v56 - 6);
      v60 = *((_QWORD *)v56 - 5);
      v62 = __OFSUB__(v60, v61);
      v54 = v60 - v61;
      v55 = v62;
      if (v62)
        goto LABEL_126;
      v63 = v48 - 2;
      v64 = &v49[16 * v48 - 32];
      v66 = *(_QWORD *)v64;
      v65 = *((_QWORD *)v64 + 1);
      v62 = __OFSUB__(v65, v66);
      v67 = v65 - v66;
      if (v62)
        goto LABEL_127;
      v62 = __OFADD__(v54, v67);
      v68 = v54 + v67;
      if (v62)
        goto LABEL_129;
      if (v68 >= v59)
      {
        v86 = &v49[16 * v51];
        v88 = *(_QWORD *)v86;
        v87 = *((_QWORD *)v86 + 1);
        v62 = __OFSUB__(v87, v88);
        v89 = v87 - v88;
        if (v62)
          goto LABEL_135;
        v79 = v54 < v89;
        goto LABEL_77;
      }
    }
    else
    {
      if (v48 != 3)
      {
        v80 = *((_QWORD *)v16 + 4);
        v81 = *((_QWORD *)v16 + 5);
        v62 = __OFSUB__(v81, v80);
        v73 = v81 - v80;
        v74 = v62;
        goto LABEL_71;
      }
      v53 = *((_QWORD *)v16 + 4);
      v52 = *((_QWORD *)v16 + 5);
      v62 = __OFSUB__(v52, v53);
      v54 = v52 - v53;
      v55 = v62;
    }
    if ((v55 & 1) != 0)
      goto LABEL_128;
    v63 = v48 - 2;
    v69 = &v49[16 * v48 - 32];
    v71 = *(_QWORD *)v69;
    v70 = *((_QWORD *)v69 + 1);
    v72 = __OFSUB__(v70, v71);
    v73 = v70 - v71;
    v74 = v72;
    if (v72)
      goto LABEL_130;
    v75 = &v49[16 * v51];
    v77 = *(_QWORD *)v75;
    v76 = *((_QWORD *)v75 + 1);
    v62 = __OFSUB__(v76, v77);
    v78 = v76 - v77;
    if (v62)
      goto LABEL_132;
    if (__OFADD__(v73, v78))
      goto LABEL_134;
    if (v73 + v78 >= v54)
    {
      v79 = v54 < v78;
LABEL_77:
      if (v79)
        v51 = v63;
      goto LABEL_79;
    }
LABEL_71:
    if ((v74 & 1) != 0)
      goto LABEL_131;
    v82 = &v49[16 * v51];
    v84 = *(_QWORD *)v82;
    v83 = *((_QWORD *)v82 + 1);
    v62 = __OFSUB__(v83, v84);
    v85 = v83 - v84;
    if (v62)
      goto LABEL_133;
    if (v85 < v73)
      goto LABEL_88;
LABEL_79:
    v90 = v15;
    v91 = v51 - 1;
    if (v51 - 1 >= v48)
    {
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
      goto LABEL_136;
    }
    if (!*v138)
      goto LABEL_148;
    v92 = v16;
    v93 = &v49[16 * v91];
    v94 = *(_QWORD *)v93;
    v95 = &v49[16 * v51];
    v96 = *((_QWORD *)v95 + 1);
    v97 = v133;
    specialized _merge<A>(low:mid:high:buffer:by:)(*v138 + *(_QWORD *)(v132 + 72) * *(_QWORD *)v93, *v138 + *(_QWORD *)(v132 + 72) * *(_QWORD *)v95, *v138 + *(_QWORD *)(v132 + 72) * v96, v131);
    v133 = v97;
    if (v97)
      break;
    if (v96 < v94)
      goto LABEL_122;
    if (v51 > *((_QWORD *)v92 + 2))
      goto LABEL_123;
    *(_QWORD *)v93 = v94;
    *(_QWORD *)&v49[16 * v91 + 8] = v96;
    v98 = *((_QWORD *)v92 + 2);
    if (v51 >= v98)
      goto LABEL_124;
    v48 = v98 - 1;
    memmove(&v49[16 * v51], v95 + 16, 16 * (v98 - 1 - v51));
    v16 = v92;
    *((_QWORD *)v92 + 2) = v98 - 1;
    v79 = v98 > 2;
    v15 = v90;
    if (!v79)
      goto LABEL_88;
  }
LABEL_103:
  swift_bridgeObjectRelease();
  if (v126 >= -1)
    goto LABEL_118;
  __break(1u);
LABEL_105:
  v16 = (char *)MEMORY[0x1E0DEE9D8];
  v48 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_106:
  if (v48 >= 2)
  {
    v114 = *v138;
    v115 = v133;
    while (1)
    {
      v116 = v48 - 2;
      if (v48 < 2)
        break;
      if (!v114)
        goto LABEL_150;
      v117 = (uint64_t)v16;
      v118 = *(_QWORD *)&v16[16 * v116 + 32];
      v119 = *(_QWORD *)&v16[16 * v48 + 24];
      specialized _merge<A>(low:mid:high:buffer:by:)(v114 + *(_QWORD *)(v132 + 72) * v118, v114 + *(_QWORD *)(v132 + 72) * *(_QWORD *)&v16[16 * v48 + 16], v114 + *(_QWORD *)(v132 + 72) * v119, v131);
      if (v115)
        goto LABEL_103;
      if (v119 < v118)
        goto LABEL_137;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized _ArrayBuffer._consumeAndCreateNew()(v117);
        v117 = v122;
      }
      if (v116 >= *(_QWORD *)(v117 + 16))
        goto LABEL_138;
      v120 = (_QWORD *)(v117 + 32 + 16 * v116);
      *v120 = v118;
      v120[1] = v119;
      v121 = *(_QWORD *)(v117 + 16);
      if (v48 > v121)
        goto LABEL_139;
      memmove((void *)(v117 + 32 + 16 * (v48 - 1)), (const void *)(v117 + 32 + 16 * v48), 16 * (v121 - v48));
      v16 = (char *)v117;
      *(_QWORD *)(v117 + 16) = v121 - 1;
      v48 = v121 - 1;
      if (v121 <= 2)
        goto LABEL_117;
    }
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
    goto LABEL_145;
  }
LABEL_117:
  swift_bridgeObjectRelease();
  if (v126 >= -1)
  {
LABEL_118:
    *(_QWORD *)(v125 + 16) = 0;
    swift_bridgeObjectRelease();
    return;
  }
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  __break(1u);
}

{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  Swift::Int v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t (*v50)(uint64_t);
  uint64_t v51;
  Swift::Int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t (*v57)(uint64_t);
  uint64_t (*v58)(uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  int EnumTagSinglePayload;
  int v78;
  uint64_t v79;
  void *v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  id v87;
  Class isa;
  char *v89;
  id v90;
  void *v91;
  uint64_t v92;
  uint64_t v93;
  id v94;
  uint64_t v95;
  uint64_t v96;
  int v97;
  uint64_t v98;
  void (*v99)(char *, uint64_t, uint64_t);
  char *v100;
  char *v101;
  void (*v102)(char *, uint64_t);
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  id v112;
  uint64_t v113;
  void *v114;
  id v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  id v121;
  Class v122;
  id v123;
  void *v124;
  uint64_t v125;
  uint64_t v126;
  id v127;
  void *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  id v137;
  uint64_t v138;
  uint64_t v139;
  Swift::Int v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  unint64_t v149;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  int v169;
  int v170;
  uint64_t v171;
  void *v172;
  id v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  char *v178;
  id v179;
  Class v180;
  id v181;
  void *v182;
  uint64_t v183;
  uint64_t v184;
  id v185;
  uint64_t v186;
  _QWORD *v187;
  uint64_t v188;
  void (*v189)(char *, uint64_t, uint64_t);
  char *v190;
  char *v191;
  char v192;
  void (*v193)(char *, uint64_t);
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  id v202;
  void *v203;
  id v204;
  void *v205;
  uint64_t v206;
  void *v207;
  uint64_t v208;
  char *v209;
  id v210;
  Class v211;
  id v212;
  void *v213;
  uint64_t v214;
  uint64_t v215;
  id v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  id v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v231;
  unint64_t v232;
  unint64_t v233;
  uint64_t v234;
  uint64_t *v235;
  uint64_t v236;
  unint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  char v241;
  unint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  BOOL v248;
  unint64_t v249;
  uint64_t *v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t *v255;
  uint64_t v256;
  uint64_t v257;
  BOOL v258;
  uint64_t v259;
  char v260;
  uint64_t *v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  BOOL v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t *v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t *v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  unint64_t v276;
  uint64_t v277;
  uint64_t *v278;
  uint64_t v279;
  _QWORD *v280;
  uint64_t v281;
  uint64_t v282;
  unint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  unint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  _QWORD *v293;
  unint64_t v294;
  uint64_t v295;
  uint64_t v296;
  Swift::Int v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  Swift::Int v301;
  uint64_t v302;
  void *v303;
  uint64_t v304;
  uint64_t v305;
  char *v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  unint64_t v310;
  uint64_t v311;
  uint64_t v312;
  char *v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  char *v317;
  char *v318;
  uint64_t v319;
  _QWORD *v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  char *v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  char *v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  char *v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  id v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;

  v315 = type metadata accessor for PersonNameComponents();
  v314 = *(_QWORD *)(v315 - 8);
  MEMORY[0x1E0C80A78](v315);
  v313 = (char *)&v296 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Date();
  v332 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x1E0C80A78](v4);
  v318 = (char *)&v296 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v317 = (char *)&v296 - v7;
  v327 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Date?, Date?));
  v8 = MEMORY[0x1E0C80A78](v327);
  v331 = (uint64_t)&v296 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v307 = (uint64_t)&v296 - v10;
  v11 = type metadata accessor for Participant.State(0);
  v12 = MEMORY[0x1E0C80A78](v11);
  v325 = (char *)&v296 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v12);
  v324 = (uint64_t)&v296 - v15;
  v16 = MEMORY[0x1E0C80A78](v14);
  v302 = (uint64_t)&v296 - v17;
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v296 - v18;
  v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  v21 = MEMORY[0x1E0C80A78](v20);
  v23 = (char *)&v296 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x1E0C80A78](v21);
  v26 = (char *)&v296 - v25;
  v27 = MEMORY[0x1E0C80A78](v24);
  v305 = (uint64_t)&v296 - v28;
  MEMORY[0x1E0C80A78](v27);
  v309 = (uint64_t)&v296 - v29;
  v328 = type metadata accessor for Participant(0);
  v312 = *(_QWORD *)(v328 - 8);
  v30 = MEMORY[0x1E0C80A78](v328);
  v304 = (uint64_t)&v296 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = MEMORY[0x1E0C80A78](v30);
  v333 = (uint64_t)&v296 - v33;
  v34 = MEMORY[0x1E0C80A78](v32);
  v347 = (uint64_t)&v296 - v35;
  v36 = MEMORY[0x1E0C80A78](v34);
  v341 = (uint64_t)&v296 - v37;
  v38 = MEMORY[0x1E0C80A78](v36);
  v322 = (uint64_t)&v296 - v39;
  v40 = MEMORY[0x1E0C80A78](v38);
  v316 = (uint64_t)&v296 - v41;
  v42 = MEMORY[0x1E0C80A78](v40);
  v311 = (uint64_t)&v296 - v43;
  v44 = MEMORY[0x1E0C80A78](v42);
  v299 = (uint64_t)&v296 - v45;
  MEMORY[0x1E0C80A78](v44);
  v300 = (uint64_t)&v296 - v46;
  v47 = a1[1];
  v301 = _minimumMergeRunLength(_:)(v47);
  if (v301 >= v47)
  {
    if (v47 < 0)
      goto LABEL_205;
    if (v47)
      specialized MutableCollection<>._insertionSort(within:sortedEnd:by:)(0, v47, 1, a1);
    return;
  }
  v319 = v1;
  v296 = specialized static Array._allocateUninitialized(_:)(v47 / 2);
  v310 = v48;
  v297 = v47;
  if (v47 <= 0)
  {
    v51 = MEMORY[0x1E0DEE9D8];
    v233 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_169:
    if (v233 >= 2)
    {
      v286 = *a1;
      do
      {
        v287 = v233 - 2;
        if (v233 < 2)
          goto LABEL_200;
        if (!v286)
          goto LABEL_215;
        v288 = v51;
        v289 = v51 + 32;
        v290 = *(_QWORD *)(v51 + 32 + 16 * v287);
        v291 = *(_QWORD *)(v51 + 32 + 16 * (v233 - 1) + 8);
        v292 = v319;
        specialized _merge<A>(low:mid:high:buffer:by:)(v286 + *(_QWORD *)(v312 + 72) * v290, v286 + *(_QWORD *)(v312 + 72) * *(_QWORD *)(v289 + 16 * (v233 - 1)), v286 + *(_QWORD *)(v312 + 72) * v291, v310);
        v319 = v292;
        if (v292)
          goto LABEL_166;
        if (v291 < v290)
          goto LABEL_201;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          specialized _ArrayBuffer._consumeAndCreateNew()(v288);
          v288 = v295;
        }
        if (v287 >= *(_QWORD *)(v288 + 16))
          goto LABEL_202;
        v293 = (_QWORD *)(v288 + 32 + 16 * v287);
        *v293 = v290;
        v293[1] = v291;
        v294 = *(_QWORD *)(v288 + 16);
        if (v233 > v294)
          goto LABEL_203;
        v51 = v288;
        memmove((void *)(v288 + 32 + 16 * (v233 - 1)), (const void *)(v288 + 32 + 16 * v233), 16 * (v294 - v233));
        *(_QWORD *)(v288 + 16) = v294 - 1;
        v233 = v294 - 1;
      }
      while (v294 > 2);
    }
    swift_bridgeObjectRelease();
    if (v297 >= -1)
    {
      *(_QWORD *)(v296 + 16) = 0;
      swift_bridgeObjectRelease();
      return;
    }
    goto LABEL_211;
  }
  v49 = 0;
  v50 = type metadata accessor for Participant;
  v320 = a1;
  v321 = v4;
  v323 = v11;
  v306 = v19;
  v329 = v23;
  v338 = v26;
  v51 = MEMORY[0x1E0DEE9D8];
  v52 = v47;
  while (1)
  {
    v53 = v49;
    v54 = v49 + 1;
    v308 = v53;
    if (v54 >= v52)
    {
      v141 = v54;
      v140 = v301;
    }
    else
    {
      v339 = v52;
      v55 = *a1;
      v56 = *(_QWORD *)(v312 + 72);
      v336 = v54;
      v57 = v50;
      v58 = v50;
      v59 = v53;
      outlined init with copy of ConversationControlsAction(v55 + v56 * v54, v300, v58);
      v334 = v55;
      v340 = v56;
      v60 = v55 + v56 * v59;
      v61 = v300;
      v62 = v299;
      outlined init with copy of ConversationControlsAction(v60, v299, v57);
      v63 = v319;
      LODWORD(v337) = closure #2 in static ParticipantListViewController.filterAndSort(_:)(v61, v62);
      v319 = v63;
      if (v63)
      {
        outlined destroy of AccountUpdateNotice(v62, type metadata accessor for Participant);
        outlined destroy of AccountUpdateNotice(v61, type metadata accessor for Participant);
LABEL_166:
        swift_bridgeObjectRelease();
        if (v297 < -1)
          goto LABEL_207;
        *(_QWORD *)(v296 + 16) = 0;
        swift_bridgeObjectRelease();
        return;
      }
      outlined destroy of AccountUpdateNotice(v62, v57);
      outlined destroy of AccountUpdateNotice(v61, v57);
      v50 = v57;
      if (v308 + 2 < v339)
      {
        v298 = v51;
        v336 *= v340;
        v64 = v334;
        v330 = v308 + 2;
        v335 = v340 * (v308 + 2);
        v65 = v302;
        while (1)
        {
          v66 = v311;
          outlined init with copy of ConversationControlsAction(v64 + v335, v311, v50);
          outlined init with copy of ConversationControlsAction(v64 + v336, v316, v50);
          outlined init with copy of ConversationControlsAction(v66, (uint64_t)v19, type metadata accessor for Participant.State);
          if (swift_getEnumCaseMultiPayload() == 4)
          {
            v67 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
            v68 = (uint64_t)&v19[*(int *)(v67 + 48)];
            outlined consume of Participant.CopresenceInfo?(*(_QWORD *)&v19[*(int *)(v67 + 64)], *(_QWORD *)&v19[*(int *)(v67 + 64) + 8]);
            v69 = v309;
            (*(void (**)(uint64_t, char *, uint64_t))(v332 + 32))(v309, v19, v4);
            outlined destroy of Participant.MediaInfo(v68);
            v70 = 0;
            v71 = v305;
          }
          else
          {
            outlined destroy of AccountUpdateNotice((uint64_t)v19, type metadata accessor for Participant.State);
            v70 = 1;
            v71 = v305;
            v69 = v309;
          }
          __swift_storeEnumTagSinglePayload(v69, v70, 1, v4);
          outlined init with copy of ConversationControlsAction(v316, v65, type metadata accessor for Participant.State);
          if (swift_getEnumCaseMultiPayload() == 4)
          {
            v72 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
            v73 = v65 + *(int *)(v72 + 48);
            outlined consume of Participant.CopresenceInfo?(*(_QWORD *)(v65 + *(int *)(v72 + 64)), *(_QWORD *)(v65 + *(int *)(v72 + 64) + 8));
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v332 + 32))(v71, v65, v4);
            outlined destroy of Participant.MediaInfo(v73);
            v74 = 0;
          }
          else
          {
            outlined destroy of AccountUpdateNotice(v65, type metadata accessor for Participant.State);
            v74 = 1;
          }
          v50 = type metadata accessor for Participant;
          __swift_storeEnumTagSinglePayload(v71, v74, 1, v4);
          v75 = v307;
          v76 = v307 + *(int *)(v327 + 48);
          outlined init with take of Date?(v309, v307);
          outlined init with take of Date?(v71, v76);
          EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v75, 1, v4);
          v78 = __swift_getEnumTagSinglePayload(v76, 1, v4);
          if (EnumTagSinglePayload == 1)
            break;
          if (v78 == 1)
          {
            (*(void (**)(uint64_t, uint64_t))(v332 + 8))(v307, v4);
            v97 = 1;
          }
          else
          {
            v98 = v332;
            v99 = *(void (**)(char *, uint64_t, uint64_t))(v332 + 32);
            v100 = v317;
            v99(v317, v307, v4);
            v101 = v318;
            v99(v318, v76, v4);
            v97 = static Date.< infix(_:_:)();
            v102 = *(void (**)(char *, uint64_t))(v98 + 8);
            v102(v101, v4);
            v103 = v100;
            v65 = v302;
            v102(v103, v4);
          }
LABEL_39:
          v19 = v306;
          v23 = v329;
          outlined destroy of AccountUpdateNotice(v316, type metadata accessor for Participant);
          outlined destroy of AccountUpdateNotice(v311, type metadata accessor for Participant);
          if (((v337 ^ v97) & 1) != 0)
          {
            v51 = v298;
            v141 = v330;
            goto LABEL_45;
          }
          v64 += v340;
          if (++v330 >= v339)
          {
            v52 = v339;
            v141 = v339;
            v51 = v298;
            goto LABEL_46;
          }
        }
        if (v78 != 1)
        {
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v76, (uint64_t *)&demangling cache variable for type metadata for Date?);
          v97 = 0;
          goto LABEL_39;
        }
        v79 = v328;
        v80 = *(void **)(v311 + *(int *)(v328 + 28));
        if (v80)
        {
          v81 = v80;
          outlined bridged method (pb) of @objc TUHandle.siriDisplayName.getter(v81);
          if (v83)
          {
            v84 = v82;
            v85 = v83;
            if ((objc_msgSend(v81, sel_shouldHideContact) & 1) != 0)
            {
              v326 = v84;
              swift_bridgeObjectRetain();
              v86 = v313;
              PersonNameComponents.init()();
              PersonNameComponents.givenName.setter();
              PersonNameComponents.familyName.setter();
              if (one-time initialization token for initials != -1)
                swift_once();
              swift_beginAccess();
              v87 = (id)static NSPersonNameComponentsFormatter.initials;
              isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
              v89 = v86;
              v90 = objc_msgSend(v87, sel_stringFromPersonNameComponents_, isa);

              v91 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
              v93 = v92;

              (*(void (**)(char *, uint64_t))(v314 + 8))(v89, v315);
              v344 = v91;
              v345 = v93;
              lazy protocol witness table accessor for type String and conformance String();
              StringProtocol.localizedUppercase.getter();

              swift_bridgeObjectRelease();
              v94 = 0;
              v79 = v328;
              v95 = v85;
              v96 = v326;
LABEL_29:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();

              v342 = v96;
              v343 = v95;
              v114 = *(void **)(v316 + *(int *)(v79 + 28));
              v326 = v95;
              if (v114)
              {
                v115 = v114;
                outlined bridged method (pb) of @objc TUHandle.siriDisplayName.getter(v115);
                if (v117)
                {
                  v118 = v116;
                  v119 = v117;
                  if ((objc_msgSend(v115, sel_shouldHideContact) & 1) != 0)
                  {
                    v303 = (void *)v118;
                    swift_bridgeObjectRetain();
                    v120 = v313;
                    PersonNameComponents.init()();
                    PersonNameComponents.givenName.setter();
                    PersonNameComponents.familyName.setter();
                    if (one-time initialization token for initials != -1)
                      swift_once();
                    swift_beginAccess();
                    v121 = (id)static NSPersonNameComponentsFormatter.initials;
                    v122 = PersonNameComponents._bridgeToObjectiveC()().super.isa;
                    v123 = objc_msgSend(v121, sel_stringFromPersonNameComponents_, v122);

                    v124 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
                    v126 = v125;

                    (*(void (**)(char *, uint64_t))(v314 + 8))(v120, v315);
                    v344 = v124;
                    v345 = v126;
                    lazy protocol witness table accessor for type String and conformance String();
                    StringProtocol.localizedUppercase.getter();

                    swift_bridgeObjectRelease();
                    v127 = 0;
                    v50 = type metadata accessor for Participant;
                    v128 = v303;
                    goto LABEL_38;
                  }

                  swift_bridgeObjectRelease();
                }
                else
                {

                }
              }
              v129 = v322;
              outlined init with copy of ConversationControlsAction(v316, v322, type metadata accessor for Participant);
              v50 = type metadata accessor for Participant;
              swift_retain();
              ParticipantContactDetailsCache.contactDetails(for:)(v129, v130, v131, v132, v133, v134, v135, v136, v296, v297, v298, v299, v300, v301, v302, (uint64_t)v303, v304, v305, (uint64_t)v306,
                v307);
              v127 = v344;
              v303 = (void *)v345;
              v119 = v346;
              v137 = v344;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();

              swift_release();
              v138 = v129;
              v128 = v303;
              outlined destroy of AccountUpdateNotice(v138, type metadata accessor for Participant);
LABEL_38:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();

              v344 = v128;
              v345 = v119;
              lazy protocol witness table accessor for type String and conformance String();
              v139 = StringProtocol.localizedCompare<A>(_:)();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v97 = v139 == 1;
              v4 = v321;
              v65 = v302;
              goto LABEL_39;
            }

            swift_bridgeObjectRelease();
          }
          else
          {

          }
        }
        v104 = v322;
        outlined init with copy of ConversationControlsAction(v311, v322, type metadata accessor for Participant);
        swift_retain();
        ParticipantContactDetailsCache.contactDetails(for:)(v104, v105, v106, v107, v108, v109, v110, v111, v296, v297, v298, v299, v300, v301, v302, (uint64_t)v303, v304, v305, (uint64_t)v306,
          v307);
        v94 = v344;
        v326 = v345;
        v95 = v346;
        v112 = v344;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        swift_release();
        v113 = v104;
        v96 = v326;
        outlined destroy of AccountUpdateNotice(v113, type metadata accessor for Participant);
        goto LABEL_29;
      }
      v141 = v308 + 2;
LABEL_45:
      v52 = v339;
LABEL_46:
      v140 = v301;
      v53 = v308;
      if ((v337 & 1) == 0)
        goto LABEL_63;
      if (v141 < v308)
        goto LABEL_210;
      if (v308 < v141)
      {
        v298 = v51;
        v142 = 0;
        v143 = v340 * (v141 - 1);
        v144 = v141 * v340;
        v145 = v308;
        v146 = v308 * v340;
        do
        {
          if (v145 != v141 + v142 - 1)
          {
            v147 = v141;
            v148 = v334;
            if (!v334)
              goto LABEL_214;
            v149 = v334 + v146;
            v337 = v334 + v143;
            outlined init with take of Participant(v334 + v146, v304);
            if (v146 < v143 || v149 >= v148 + v144)
            {
              v151 = v337;
              swift_arrayInitWithTakeFrontToBack();
            }
            else
            {
              v151 = v337;
              if (v146 != v143)
                swift_arrayInitWithTakeBackToFront();
            }
            outlined init with take of Participant(v304, v151);
            v23 = v329;
            v141 = v147;
          }
          ++v145;
          --v142;
          v143 -= v340;
          v144 -= v340;
          v146 += v340;
        }
        while (v145 < v141 + v142);
        a1 = v320;
        v4 = v321;
        v51 = v298;
        v140 = v301;
        v53 = v308;
        v52 = v339;
      }
      else
      {
LABEL_63:
        a1 = v320;
      }
    }
    if (v141 < v52)
    {
      if (__OFSUB__(v141, v53))
        goto LABEL_206;
      if (v141 - v53 < v140)
        break;
    }
LABEL_113:
    if (v141 < v53)
      goto LABEL_204;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v330 = v141;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(_QWORD *)(v51 + 16) + 1, 1, (char *)v51);
      v51 = v284;
    }
    v232 = *(_QWORD *)(v51 + 16);
    v231 = *(_QWORD *)(v51 + 24);
    v233 = v232 + 1;
    if (v232 >= v231 >> 1)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v231 > 1, v232 + 1, 1, (char *)v51);
      v51 = v285;
    }
    *(_QWORD *)(v51 + 16) = v233;
    v234 = v51 + 32;
    v235 = (uint64_t *)(v51 + 32 + 16 * v232);
    v236 = v330;
    *v235 = v308;
    v235[1] = v236;
    if (v232)
    {
      while (1)
      {
        v237 = v233 - 1;
        if (v233 >= 4)
        {
          v242 = v234 + 16 * v233;
          v243 = *(_QWORD *)(v242 - 64);
          v244 = *(_QWORD *)(v242 - 56);
          v248 = __OFSUB__(v244, v243);
          v245 = v244 - v243;
          if (v248)
            goto LABEL_189;
          v247 = *(_QWORD *)(v242 - 48);
          v246 = *(_QWORD *)(v242 - 40);
          v248 = __OFSUB__(v246, v247);
          v240 = v246 - v247;
          v241 = v248;
          if (v248)
            goto LABEL_190;
          v249 = v233 - 2;
          v250 = (uint64_t *)(v234 + 16 * (v233 - 2));
          v252 = *v250;
          v251 = v250[1];
          v248 = __OFSUB__(v251, v252);
          v253 = v251 - v252;
          if (v248)
            goto LABEL_191;
          v248 = __OFADD__(v240, v253);
          v254 = v240 + v253;
          if (v248)
            goto LABEL_193;
          if (v254 >= v245)
          {
            v272 = (uint64_t *)(v234 + 16 * v237);
            v274 = *v272;
            v273 = v272[1];
            v248 = __OFSUB__(v273, v274);
            v275 = v273 - v274;
            if (v248)
              goto LABEL_199;
            v265 = v240 < v275;
            goto LABEL_150;
          }
        }
        else
        {
          if (v233 != 3)
          {
            v266 = *(_QWORD *)(v51 + 32);
            v267 = *(_QWORD *)(v51 + 40);
            v248 = __OFSUB__(v267, v266);
            v259 = v267 - v266;
            v260 = v248;
            goto LABEL_144;
          }
          v239 = *(_QWORD *)(v51 + 32);
          v238 = *(_QWORD *)(v51 + 40);
          v248 = __OFSUB__(v238, v239);
          v240 = v238 - v239;
          v241 = v248;
        }
        if ((v241 & 1) != 0)
          goto LABEL_192;
        v249 = v233 - 2;
        v255 = (uint64_t *)(v234 + 16 * (v233 - 2));
        v257 = *v255;
        v256 = v255[1];
        v258 = __OFSUB__(v256, v257);
        v259 = v256 - v257;
        v260 = v258;
        if (v258)
          goto LABEL_194;
        v261 = (uint64_t *)(v234 + 16 * v237);
        v263 = *v261;
        v262 = v261[1];
        v248 = __OFSUB__(v262, v263);
        v264 = v262 - v263;
        if (v248)
          goto LABEL_196;
        if (__OFADD__(v259, v264))
          goto LABEL_198;
        if (v259 + v264 >= v240)
        {
          v265 = v240 < v264;
LABEL_150:
          if (v265)
            v237 = v249;
          goto LABEL_152;
        }
LABEL_144:
        if ((v260 & 1) != 0)
          goto LABEL_195;
        v268 = (uint64_t *)(v234 + 16 * v237);
        v270 = *v268;
        v269 = v268[1];
        v248 = __OFSUB__(v269, v270);
        v271 = v269 - v270;
        if (v248)
          goto LABEL_197;
        if (v271 < v259)
          goto LABEL_161;
LABEL_152:
        v276 = v237 - 1;
        if (v237 - 1 >= v233)
        {
          __break(1u);
LABEL_186:
          __break(1u);
LABEL_187:
          __break(1u);
LABEL_188:
          __break(1u);
LABEL_189:
          __break(1u);
LABEL_190:
          __break(1u);
LABEL_191:
          __break(1u);
LABEL_192:
          __break(1u);
LABEL_193:
          __break(1u);
LABEL_194:
          __break(1u);
LABEL_195:
          __break(1u);
LABEL_196:
          __break(1u);
LABEL_197:
          __break(1u);
LABEL_198:
          __break(1u);
LABEL_199:
          __break(1u);
LABEL_200:
          __break(1u);
LABEL_201:
          __break(1u);
LABEL_202:
          __break(1u);
LABEL_203:
          __break(1u);
LABEL_204:
          __break(1u);
LABEL_205:
          __break(1u);
LABEL_206:
          __break(1u);
LABEL_207:
          __break(1u);
LABEL_208:
          __break(1u);
          goto LABEL_209;
        }
        if (!*a1)
          goto LABEL_213;
        v277 = v51;
        v278 = (uint64_t *)(v234 + 16 * v276);
        v279 = *v278;
        v280 = (_QWORD *)(v234 + 16 * v237);
        v281 = v280[1];
        v282 = v319;
        specialized _merge<A>(low:mid:high:buffer:by:)(*a1 + *(_QWORD *)(v312 + 72) * *v278, *a1 + *(_QWORD *)(v312 + 72) * *v280, *a1 + *(_QWORD *)(v312 + 72) * v281, v310);
        v319 = v282;
        if (v282)
          goto LABEL_166;
        if (v281 < v279)
          goto LABEL_186;
        if (v237 > *(_QWORD *)(v277 + 16))
          goto LABEL_187;
        *v278 = v279;
        *(_QWORD *)(v234 + 16 * v276 + 8) = v281;
        v283 = *(_QWORD *)(v277 + 16);
        if (v237 >= v283)
          goto LABEL_188;
        v51 = v277;
        v233 = v283 - 1;
        memmove((void *)(v234 + 16 * v237), v280 + 2, 16 * (v283 - 1 - v237));
        *(_QWORD *)(v277 + 16) = v283 - 1;
        v265 = v283 > 2;
        v4 = v321;
        v23 = v329;
        v50 = type metadata accessor for Participant;
        if (!v265)
          goto LABEL_161;
      }
    }
    v233 = 1;
LABEL_161:
    v52 = a1[1];
    v49 = v330;
    v19 = v306;
    if (v330 >= v52)
      goto LABEL_169;
  }
  if (__OFADD__(v53, v140))
    goto LABEL_208;
  if (v53 + v140 >= v52)
    v152 = v52;
  else
    v152 = v53 + v140;
  if (v152 >= v53)
  {
    if (v141 == v152)
      goto LABEL_113;
    v298 = v51;
    v153 = *(_QWORD *)(v312 + 72);
    v340 = v153 * (v141 - 1);
    v326 = v153;
    v339 = v141 * v153;
    v303 = (void *)v152;
    while (1)
    {
      v154 = 0;
      v155 = v308;
      v330 = v141;
      while (1)
      {
        v336 = v155;
        v156 = *a1;
        v335 = v339 + v154;
        v157 = v341;
        outlined init with copy of ConversationControlsAction(v339 + v154 + v156, v341, v50);
        v337 = v154;
        v334 = v340 + v154;
        outlined init with copy of ConversationControlsAction(v340 + v154 + v156, v347, v50);
        v158 = v324;
        outlined init with copy of ConversationControlsAction(v157, v324, type metadata accessor for Participant.State);
        if (swift_getEnumCaseMultiPayload() == 4)
        {
          v159 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
          v160 = v158 + *(int *)(v159 + 48);
          outlined consume of Participant.CopresenceInfo?(*(_QWORD *)(v158 + *(int *)(v159 + 64)), *(_QWORD *)(v158 + *(int *)(v159 + 64) + 8));
          v161 = (uint64_t)v338;
          (*(void (**)(char *, uint64_t, uint64_t))(v332 + 32))(v338, v158, v4);
          outlined destroy of Participant.MediaInfo(v160);
          v162 = 0;
          v163 = (uint64_t)v325;
        }
        else
        {
          outlined destroy of AccountUpdateNotice(v158, type metadata accessor for Participant.State);
          v162 = 1;
          v163 = (uint64_t)v325;
          v161 = (uint64_t)v338;
        }
        __swift_storeEnumTagSinglePayload(v161, v162, 1, v4);
        outlined init with copy of ConversationControlsAction(v347, v163, type metadata accessor for Participant.State);
        if (swift_getEnumCaseMultiPayload() == 4)
        {
          v164 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
          v165 = v163 + *(int *)(v164 + 48);
          outlined consume of Participant.CopresenceInfo?(*(_QWORD *)(v163 + *(int *)(v164 + 64)), *(_QWORD *)(v163 + *(int *)(v164 + 64) + 8));
          (*(void (**)(char *, uint64_t, uint64_t))(v332 + 32))(v23, v163, v4);
          outlined destroy of Participant.MediaInfo(v165);
          v166 = 0;
        }
        else
        {
          outlined destroy of AccountUpdateNotice(v163, type metadata accessor for Participant.State);
          v166 = 1;
        }
        v50 = type metadata accessor for Participant;
        __swift_storeEnumTagSinglePayload((uint64_t)v23, v166, 1, v4);
        v167 = v331;
        v168 = v331 + *(int *)(v327 + 48);
        outlined init with take of Date?((uint64_t)v338, v331);
        outlined init with take of Date?((uint64_t)v23, v168);
        v169 = __swift_getEnumTagSinglePayload(v167, 1, v4);
        v170 = __swift_getEnumTagSinglePayload(v168, 1, v4);
        if (v169 == 1)
          break;
        if (v170 != 1)
        {
          v187 = a1;
          v188 = v332;
          v189 = *(void (**)(char *, uint64_t, uint64_t))(v332 + 32);
          v190 = v317;
          v189(v317, v331, v4);
          v191 = v318;
          v189(v318, v168, v4);
          v192 = static Date.< infix(_:_:)();
          v193 = *(void (**)(char *, uint64_t))(v188 + 8);
          a1 = v187;
          v50 = type metadata accessor for Participant;
          v193(v191, v4);
          v193(v190, v4);
          goto LABEL_105;
        }
        (*(void (**)(uint64_t, uint64_t))(v332 + 8))(v331, v4);
        outlined destroy of AccountUpdateNotice(v347, type metadata accessor for Participant);
        outlined destroy of AccountUpdateNotice(v341, type metadata accessor for Participant);
        v186 = v337;
LABEL_106:
        v227 = *a1;
        if (!*a1)
          goto LABEL_212;
        v228 = v227 + v340 + v186;
        outlined init with take of Participant(v227 + v339 + v186, v333);
        swift_arrayInitWithTakeFrontToBack();
        outlined init with take of Participant(v333, v228);
        v154 = v186 - v326;
        v155 = v336 + 1;
        v229 = v330;
        v23 = v329;
        if (v330 == v336 + 1)
          goto LABEL_111;
      }
      if (v170 == 1)
        break;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v168, (uint64_t *)&demangling cache variable for type metadata for Date?);
      outlined destroy of AccountUpdateNotice(v347, type metadata accessor for Participant);
      outlined destroy of AccountUpdateNotice(v341, type metadata accessor for Participant);
LABEL_110:
      v23 = v329;
      v229 = v330;
LABEL_111:
      v141 = v229 + 1;
      v340 += v326;
      v339 += v326;
      if ((void *)v141 == v303)
      {
        v141 = (uint64_t)v303;
        v51 = v298;
        v53 = v308;
        goto LABEL_113;
      }
    }
    v171 = v328;
    v172 = *(void **)(v341 + *(int *)(v328 + 28));
    if (v172)
    {
      v173 = v172;
      outlined bridged method (pb) of @objc TUHandle.siriDisplayName.getter(v173);
      if (v175)
      {
        v176 = v174;
        v177 = v175;
        if ((objc_msgSend(v173, sel_shouldHideContact) & 1) != 0)
        {
          swift_bridgeObjectRetain();
          v178 = v313;
          PersonNameComponents.init()();
          PersonNameComponents.givenName.setter();
          PersonNameComponents.familyName.setter();
          if (one-time initialization token for initials != -1)
            swift_once();
          swift_beginAccess();
          v179 = (id)static NSPersonNameComponentsFormatter.initials;
          v180 = PersonNameComponents._bridgeToObjectiveC()().super.isa;
          v181 = objc_msgSend(v179, sel_stringFromPersonNameComponents_, v180);

          v182 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
          v184 = v183;

          (*(void (**)(char *, uint64_t))(v314 + 8))(v178, v315);
          v344 = v182;
          v345 = v184;
          lazy protocol witness table accessor for type String and conformance String();
          StringProtocol.localizedUppercase.getter();

          swift_bridgeObjectRelease();
          v185 = 0;
          v171 = v328;
LABEL_95:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          v342 = v176;
          v343 = v177;
          v203 = *(void **)(v347 + *(int *)(v171 + 28));
          if (v203)
          {
            v204 = v203;
            outlined bridged method (pb) of @objc TUHandle.siriDisplayName.getter(v204);
            if (v206)
            {
              v207 = v205;
              v208 = v206;
              if ((objc_msgSend(v204, sel_shouldHideContact) & 1) != 0)
              {
                swift_bridgeObjectRetain();
                v209 = v313;
                PersonNameComponents.init()();
                PersonNameComponents.givenName.setter();
                PersonNameComponents.familyName.setter();
                if (one-time initialization token for initials != -1)
                  swift_once();
                swift_beginAccess();
                v210 = (id)static NSPersonNameComponentsFormatter.initials;
                v211 = PersonNameComponents._bridgeToObjectiveC()().super.isa;
                v212 = objc_msgSend(v210, sel_stringFromPersonNameComponents_, v211);

                v213 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
                v215 = v214;

                (*(void (**)(char *, uint64_t))(v314 + 8))(v209, v315);
                v344 = v213;
                v345 = v215;
                lazy protocol witness table accessor for type String and conformance String();
                StringProtocol.localizedUppercase.getter();

                swift_bridgeObjectRelease();
                v216 = 0;
                v50 = type metadata accessor for Participant;
                goto LABEL_104;
              }

              swift_bridgeObjectRelease();
            }
            else
            {

            }
          }
          v217 = v322;
          outlined init with copy of ConversationControlsAction(v347, v322, type metadata accessor for Participant);
          swift_retain();
          ParticipantContactDetailsCache.contactDetails(for:)(v217, v218, v219, v220, v221, v222, v223, v224, v296, v297, v298, v299, v300, v301, v302, (uint64_t)v303, v304, v305, (uint64_t)v306,
            v307);
          v216 = v344;
          v207 = (void *)v345;
          v208 = v346;
          v225 = v344;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          v50 = type metadata accessor for Participant;
          swift_release();
          outlined destroy of AccountUpdateNotice(v217, type metadata accessor for Participant);
LABEL_104:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          v344 = v207;
          v345 = v208;
          lazy protocol witness table accessor for type String and conformance String();
          v226 = StringProtocol.localizedCompare<A>(_:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v192 = v226 == 1;
          a1 = v320;
          v4 = v321;
LABEL_105:
          outlined destroy of AccountUpdateNotice(v347, type metadata accessor for Participant);
          outlined destroy of AccountUpdateNotice(v341, type metadata accessor for Participant);
          v186 = v337;
          if ((v192 & 1) == 0)
            goto LABEL_110;
          goto LABEL_106;
        }

        swift_bridgeObjectRelease();
      }
      else
      {

      }
    }
    v194 = v322;
    outlined init with copy of ConversationControlsAction(v341, v322, type metadata accessor for Participant);
    swift_retain();
    ParticipantContactDetailsCache.contactDetails(for:)(v194, v195, v196, v197, v198, v199, v200, v201, v296, v297, v298, v299, v300, v301, v302, (uint64_t)v303, v304, v305, (uint64_t)v306,
      v307);
    v185 = v344;
    v176 = v345;
    v177 = v346;
    v202 = v344;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_release();
    outlined destroy of AccountUpdateNotice(v194, type metadata accessor for Participant);
    goto LABEL_95;
  }
LABEL_209:
  __break(1u);
LABEL_210:
  __break(1u);
LABEL_211:
  __break(1u);
LABEL_212:
  __break(1u);
LABEL_213:
  __break(1u);
LABEL_214:
  __break(1u);
LABEL_215:
  __break(1u);
}

void specialized MutableCollection<>._insertionSort(within:sortedEnd:by:)(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v24 = a1;
  v28 = type metadata accessor for CaptionSectioner.Caption(0);
  v7 = MEMORY[0x1E0C80A78](v28);
  v29 = (uint64_t)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v25 = (uint64_t)&v22 - v10;
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v22 - v12;
  v27 = a3;
  v23 = a2;
  if (a3 != a2)
  {
    v14 = *(_QWORD *)(v11 + 72);
    v31 = v14 * (v27 - 1);
    v26 = v14;
    v30 = v14 * v27;
    while (2)
    {
      v15 = 0;
      v16 = v24;
      do
      {
        v17 = *a4;
        _s15ConversationKit11ParticipantVWOcTm_0(v30 + v15 + *a4, (uint64_t)v13, type metadata accessor for CaptionSectioner.Caption);
        v18 = v25;
        _s15ConversationKit11ParticipantVWOcTm_0(v31 + v15 + v17, v25, type metadata accessor for CaptionSectioner.Caption);
        LOBYTE(v17) = static Date.< infix(_:_:)();
        outlined destroy of CaptionSectioner.Caption(v18, type metadata accessor for CaptionSectioner.Caption);
        outlined destroy of CaptionSectioner.Caption((uint64_t)v13, type metadata accessor for CaptionSectioner.Caption);
        if ((v17 & 1) == 0)
          break;
        v19 = *a4;
        if (!*a4)
        {
          __break(1u);
          return;
        }
        v20 = a4;
        v21 = v19 + v31 + v15;
        outlined init with take of Participant(v19 + v30 + v15, v29, type metadata accessor for CaptionSectioner.Caption);
        swift_arrayInitWithTakeFrontToBack();
        outlined init with take of Participant(v29, v21, type metadata accessor for CaptionSectioner.Caption);
        v15 -= v26;
        ++v16;
        a4 = v20;
      }
      while (v27 != v16);
      v31 += v26;
      v30 += v26;
      if (++v27 != v23)
        continue;
      break;
    }
  }
}

{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v24 = a1;
  v27 = type metadata accessor for TranscriptionViewModel.Caption(0);
  v7 = MEMORY[0x1E0C80A78](v27);
  v28 = (uint64_t)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v22 - v10;
  MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v22 - v13;
  v26 = a3;
  v23 = a2;
  if (a3 != a2)
  {
    v15 = *(_QWORD *)(v12 + 72);
    v30 = v15 * (v26 - 1);
    v25 = v15;
    v29 = v15 * v26;
    while (2)
    {
      v16 = 0;
      v17 = v24;
      do
      {
        v18 = *a4;
        outlined init with copy of ConversationControlsAction(v29 + v16 + *a4, (uint64_t)v14, type metadata accessor for TranscriptionViewModel.Caption);
        outlined init with copy of ConversationControlsAction(v30 + v16 + v18, (uint64_t)v11, type metadata accessor for TranscriptionViewModel.Caption);
        LOBYTE(v18) = static Date.< infix(_:_:)();
        outlined destroy of AccountUpdateNotice((uint64_t)v11, type metadata accessor for TranscriptionViewModel.Caption);
        outlined destroy of AccountUpdateNotice((uint64_t)v14, type metadata accessor for TranscriptionViewModel.Caption);
        if ((v18 & 1) == 0)
          break;
        v19 = *a4;
        if (!*a4)
        {
          __break(1u);
          return;
        }
        v20 = a4;
        v21 = v19 + v30 + v16;
        outlined init with take of TranscriptionViewModel.Caption(v19 + v29 + v16, v28);
        swift_arrayInitWithTakeFrontToBack();
        outlined init with take of TranscriptionViewModel.Caption(v28, v21);
        v16 -= v25;
        ++v17;
        a4 = v20;
      }
      while (v26 != v17);
      v30 += v25;
      v29 += v25;
      if (++v26 != v23)
        continue;
      break;
    }
  }
}

{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  unint64_t v24;
  unint64_t v25;
  void *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  id v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v41 = a1;
  v7 = type metadata accessor for Participant(0);
  v8 = MEMORY[0x1E0C80A78](v7);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v39 - v10;
  MEMORY[0x1E0C80A78](v9);
  v15 = (char *)&v39 - v13;
  v45 = a3;
  v40 = a2;
  if (a3 != a2)
  {
    v16 = v14;
    v17 = *(_QWORD *)(v12 + 72);
    v18 = v17 * (v45 - 1);
    v43 = v17;
    v50 = v17 * v45;
    v42 = (char *)&v39 - v13;
    while (2)
    {
      v19 = 0;
      v48 = v41;
      v44 = v18;
      while (1)
      {
        v20 = *a4;
        v47 = v50 + v19;
        _s15ConversationKit11ParticipantVWOcTm_3(v50 + v19 + v20, (uint64_t)v15, type metadata accessor for Participant);
        v46 = v18 + v19;
        _s15ConversationKit11ParticipantVWOcTm_3(v18 + v19 + v20, (uint64_t)v11, type metadata accessor for Participant);
        v21 = *(int *)(v7 + 28);
        v22 = *(void **)&v15[v21];
        if (v22)
        {
          v23 = objc_msgSend(v22, sel_value);
          v49 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          v25 = v24;

          v21 = *(int *)(v7 + 28);
        }
        else
        {
          v49 = 0;
          v25 = 0xE000000000000000;
        }
        v26 = *(void **)&v11[v21];
        if (v26)
        {
          v27 = v11;
          v28 = v16;
          v29 = v7;
          v30 = a4;
          v31 = objc_msgSend(v26, sel_value);
          v32 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          v34 = v33;

          a4 = v30;
          v7 = v29;
          v16 = v28;
          v11 = v27;
          v15 = v42;
        }
        else
        {
          v32 = 0;
          v34 = 0xE000000000000000;
        }
        if (v32 == v49 && v34 == v25)
          break;
        v36 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        outlined destroy of Participant((uint64_t)v11, type metadata accessor for Participant);
        outlined destroy of Participant((uint64_t)v15, type metadata accessor for Participant);
        v18 = v44;
        if ((v36 & 1) != 0)
        {
          v37 = *a4;
          if (!*a4)
          {
            __break(1u);
            return;
          }
          v38 = v37 + v44 + v19;
          _s15ConversationKit11ParticipantVWObTm_1(v37 + v50 + v19, v16, type metadata accessor for Participant);
          swift_arrayInitWithTakeFrontToBack();
          _s15ConversationKit11ParticipantVWObTm_1(v16, v38, type metadata accessor for Participant);
          v19 -= v43;
          if (v45 != ++v48)
            continue;
        }
        goto LABEL_19;
      }
      swift_bridgeObjectRelease_n();
      outlined destroy of Participant((uint64_t)v11, type metadata accessor for Participant);
      outlined destroy of Participant((uint64_t)v15, type metadata accessor for Participant);
      v18 = v44;
LABEL_19:
      v18 += v43;
      v50 += v43;
      if (++v45 != v40)
        continue;
      break;
    }
  }
}

{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int EnumTagSinglePayload;
  int v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  id v52;
  void *v53;
  void *v54;
  void *v55;
  uint64_t v56;
  id v57;
  Class isa;
  id v59;
  void *v60;
  void *v61;
  void *v62;
  uint64_t v63;
  id v64;
  uint64_t v65;
  void (*v66)(uint64_t, char *, uint64_t);
  uint64_t v67;
  uint64_t v68;
  char v69;
  void (*v70)(uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  id v80;
  void *v81;
  id v82;
  void *v83;
  void *v84;
  void *v85;
  void *v86;
  uint64_t v87;
  id v88;
  Class v89;
  id v90;
  void *v91;
  void *v92;
  void *v93;
  id v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  id v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD *v117;
  char *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  void *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  void *v139;
  void *v140;
  id v141;
  void *v142;
  void *v143;
  uint64_t v144;
  uint64_t v145;

  v110 = a1;
  v113 = type metadata accessor for PersonNameComponents();
  v112 = *(_QWORD *)(v113 - 8);
  MEMORY[0x1E0C80A78](v113);
  v111 = (uint64_t)&v107 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Date();
  v126 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x1E0C80A78](v8);
  v115 = (uint64_t)&v107 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v114 = (uint64_t)&v107 - v11;
  v123 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Date?, Date?));
  MEMORY[0x1E0C80A78](v123);
  v13 = (char *)&v107 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = type metadata accessor for Participant.State(0);
  v14 = MEMORY[0x1E0C80A78](v134);
  v16 = (char *)&v107 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v122 = (uint64_t)&v107 - v17;
  v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  v19 = MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v107 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v133 = (uint64_t)&v107 - v22;
  v125 = type metadata accessor for Participant(0);
  v23 = MEMORY[0x1E0C80A78](v125);
  v128 = (uint64_t)&v107 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x1E0C80A78](v23);
  v120 = (uint64_t)&v107 - v26;
  v27 = MEMORY[0x1E0C80A78](v25);
  v145 = (uint64_t)&v107 - v28;
  MEMORY[0x1E0C80A78](v27);
  v138 = (uint64_t)&v107 - v30;
  v109 = a2;
  if (a3 == a2)
    return;
  v31 = *(_QWORD *)(v29 + 72);
  v136 = v31 * (a3 - 1);
  v124 = v31;
  v135 = v31 * a3;
  v116 = v8;
  v119 = v13;
  v118 = v16;
  v137 = v21;
  v117 = a4;
  while (2)
  {
    v32 = 0;
    v132 = v110;
    v127 = a3;
    while (1)
    {
      v33 = a4;
      v34 = *a4;
      v131 = v135 + v32;
      v35 = v138;
      outlined init with copy of ConversationControlsAction(v135 + v32 + v34, v138, type metadata accessor for Participant);
      v130 = v136 + v32;
      outlined init with copy of ConversationControlsAction(v136 + v32 + v34, v145, type metadata accessor for Participant);
      v36 = v122;
      outlined init with copy of ConversationControlsAction(v35, v122, type metadata accessor for Participant.State);
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        v37 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        v38 = v36;
        v39 = v36 + *(int *)(v37 + 48);
        outlined consume of Participant.CopresenceInfo?(*(_QWORD *)(v38 + *(int *)(v37 + 64)), *(_QWORD *)(v38 + *(int *)(v37 + 64) + 8));
        v40 = v133;
        v41 = v38;
        v21 = v137;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v126 + 32))(v133, v41, v8);
        outlined destroy of Participant.MediaInfo(v39);
        v42 = 0;
      }
      else
      {
        outlined destroy of AccountUpdateNotice(v36, type metadata accessor for Participant.State);
        v42 = 1;
        v40 = v133;
      }
      __swift_storeEnumTagSinglePayload(v40, v42, 1, v8);
      outlined init with copy of ConversationControlsAction(v145, (uint64_t)v16, type metadata accessor for Participant.State);
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        v43 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        v44 = (uint64_t)&v16[*(int *)(v43 + 48)];
        outlined consume of Participant.CopresenceInfo?(*(_QWORD *)&v16[*(int *)(v43 + 64)], *(_QWORD *)&v16[*(int *)(v43 + 64) + 8]);
        (*(void (**)(char *, char *, uint64_t))(v126 + 32))(v21, v16, v8);
        outlined destroy of Participant.MediaInfo(v44);
        v45 = 0;
      }
      else
      {
        outlined destroy of AccountUpdateNotice((uint64_t)v16, type metadata accessor for Participant.State);
        v45 = 1;
      }
      a4 = v33;
      __swift_storeEnumTagSinglePayload((uint64_t)v21, v45, 1, v8);
      v46 = (uint64_t)&v13[*(int *)(v123 + 48)];
      outlined init with take of Date?(v133, (uint64_t)v13);
      outlined init with take of Date?((uint64_t)v21, v46);
      EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v8);
      v48 = __swift_getEnumTagSinglePayload(v46, 1, v8);
      v49 = v127;
      if (EnumTagSinglePayload == 1)
        break;
      if (v48 != 1)
      {
        v65 = v126;
        v66 = *(void (**)(uint64_t, char *, uint64_t))(v126 + 32);
        v67 = v114;
        v66(v114, v13, v8);
        v68 = v115;
        v66(v115, (char *)v46, v8);
        v69 = static Date.< infix(_:_:)();
        v70 = *(void (**)(uint64_t, uint64_t))(v65 + 8);
        v70(v68, v8);
        v70(v67, v8);
        goto LABEL_34;
      }
      (*(void (**)(char *, uint64_t))(v126 + 8))(v13, v8);
      outlined destroy of AccountUpdateNotice(v145, type metadata accessor for Participant);
      outlined destroy of AccountUpdateNotice(v138, type metadata accessor for Participant);
LABEL_35:
      v105 = *a4;
      if (!*a4)
      {
        __break(1u);
        return;
      }
      v106 = v105 + v136 + v32;
      outlined init with take of Participant(v105 + v135 + v32, v128);
      swift_arrayInitWithTakeFrontToBack();
      outlined init with take of Participant(v128, v106);
      v32 -= v124;
      ++v132;
      v21 = v137;
      if (v49 == v132)
        goto LABEL_39;
    }
    if (v48 == 1)
    {
      v50 = v125;
      v51 = *(void **)(v138 + *(int *)(v125 + 28));
      if (v51)
      {
        v52 = v51;
        outlined bridged method (pb) of @objc TUHandle.siriDisplayName.getter(v52);
        v129 = v54;
        if (v54)
        {
          v55 = v53;
          if ((objc_msgSend(v52, sel_shouldHideContact) & 1) != 0)
          {
            swift_bridgeObjectRetain();
            v56 = v111;
            PersonNameComponents.init()();
            PersonNameComponents.givenName.setter();
            PersonNameComponents.familyName.setter();
            if (one-time initialization token for initials != -1)
              swift_once();
            swift_beginAccess();
            v57 = (id)static NSPersonNameComponentsFormatter.initials;
            isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
            v59 = objc_msgSend(v57, sel_stringFromPersonNameComponents_, isa);

            v60 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
            v62 = v61;

            (*(void (**)(uint64_t, uint64_t))(v112 + 8))(v56, v113);
            v141 = v60;
            v142 = v62;
            lazy protocol witness table accessor for type String and conformance String();
            StringProtocol.localizedUppercase.getter();
            v121 = v63;

            swift_bridgeObjectRelease();
            v64 = 0;
            v50 = v125;
LABEL_24:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            v139 = v55;
            v140 = v129;
            v81 = *(void **)(v145 + *(int *)(v50 + 28));
            if (v81)
            {
              v82 = v81;
              outlined bridged method (pb) of @objc TUHandle.siriDisplayName.getter(v82);
              if (v84)
              {
                v85 = v83;
                v86 = v84;
                if ((objc_msgSend(v82, sel_shouldHideContact) & 1) != 0)
                {
                  swift_bridgeObjectRetain();
                  v87 = v111;
                  PersonNameComponents.init()();
                  PersonNameComponents.givenName.setter();
                  PersonNameComponents.familyName.setter();
                  if (one-time initialization token for initials != -1)
                    swift_once();
                  swift_beginAccess();
                  v88 = (id)static NSPersonNameComponentsFormatter.initials;
                  v89 = PersonNameComponents._bridgeToObjectiveC()().super.isa;
                  v90 = objc_msgSend(v88, sel_stringFromPersonNameComponents_, v89);

                  v91 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
                  v93 = v92;

                  (*(void (**)(uint64_t, uint64_t))(v112 + 8))(v87, v113);
                  v141 = v91;
                  v142 = v93;
                  lazy protocol witness table accessor for type String and conformance String();
                  StringProtocol.localizedUppercase.getter();

                  swift_bridgeObjectRelease();
                  v94 = 0;
                  goto LABEL_33;
                }

                swift_bridgeObjectRelease();
              }
              else
              {

              }
            }
            v95 = v120;
            outlined init with copy of ConversationControlsAction(v145, v120, type metadata accessor for Participant);
            swift_retain();
            ParticipantContactDetailsCache.contactDetails(for:)(v95, v96, v97, v98, v99, v100, v101, v102, v107, v108, v109, v110, v111, v112, v113, v114, v115, v116, (uint64_t)v117,
              (uint64_t)v118);
            v94 = v141;
            v85 = v142;
            v86 = v143;
            v103 = v141;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            swift_release();
            outlined destroy of AccountUpdateNotice(v95, type metadata accessor for Participant);
LABEL_33:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            v141 = v85;
            v142 = v86;
            lazy protocol witness table accessor for type String and conformance String();
            v104 = StringProtocol.localizedCompare<A>(_:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v69 = v104 == 1;
            a4 = v117;
            v49 = v127;
            v8 = v116;
LABEL_34:
            outlined destroy of AccountUpdateNotice(v145, type metadata accessor for Participant);
            outlined destroy of AccountUpdateNotice(v138, type metadata accessor for Participant);
            v13 = v119;
            v16 = v118;
            v21 = v137;
            if ((v69 & 1) == 0)
              goto LABEL_39;
            goto LABEL_35;
          }

          swift_bridgeObjectRelease();
        }
        else
        {

        }
      }
      v71 = v120;
      outlined init with copy of ConversationControlsAction(v138, v120, type metadata accessor for Participant);
      swift_retain();
      ParticipantContactDetailsCache.contactDetails(for:)(v71, v72, v73, v74, v75, v76, v77, v78, v107, v108, v109, v110, v111, v112, v113, v114, v115, v116, (uint64_t)v117,
        (uint64_t)v118);
      v64 = v141;
      v55 = v142;
      v79 = v143;
      v121 = v144;
      v80 = v141;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v129 = v79;
      swift_bridgeObjectRelease();

      swift_release();
      outlined destroy of AccountUpdateNotice(v71, type metadata accessor for Participant);
      goto LABEL_24;
    }
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v46, (uint64_t *)&demangling cache variable for type metadata for Date?);
    outlined destroy of AccountUpdateNotice(v145, type metadata accessor for Participant);
    outlined destroy of AccountUpdateNotice(v138, type metadata accessor for Participant);
    v21 = v137;
LABEL_39:
    a3 = v49 + 1;
    v136 += v124;
    v135 += v124;
    if (a3 != v109)
      continue;
    break;
  }
}

{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  float v22;
  float v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v29 = a1;
  v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
  MEMORY[0x1E0C80A78](v33);
  v34 = (uint64_t)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v30 = (uint64_t)&v27 - v9;
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v27 - v12;
  v32 = a3;
  v28 = a2;
  if (a3 != a2)
  {
    v14 = *(_QWORD *)(v11 + 72);
    v36 = v14 * (v32 - 1);
    v31 = v14;
    v35 = v14 * v32;
    while (2)
    {
      v15 = 0;
      v16 = v29;
      do
      {
        v17 = *a4;
        outlined init with copy of FeatureEligibility?(v35 + v15 + *a4, (uint64_t)v13, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
        v18 = v36 + v15 + v17;
        v19 = v30;
        outlined init with copy of FeatureEligibility?(v18, v30, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
        v20 = *(int *)(v33 + 36);
        v21 = *(int *)(v33 + 48);
        v22 = *(float *)&v13[v20] * *(float *)&v13[v21];
        v23 = *(float *)(v19 + v20) * *(float *)(v19 + v21);
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v19, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v13, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
        if (v23 >= v22)
          break;
        v24 = *a4;
        if (!*a4)
        {
          __break(1u);
          return;
        }
        v25 = a4;
        v26 = v24 + v36 + v15;
        outlined init with take of MultiwayViewController.ViewContent?(v24 + v35 + v15, v34, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
        swift_arrayInitWithTakeFrontToBack();
        outlined init with take of MultiwayViewController.ViewContent?(v34, v26, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
        v15 -= v31;
        ++v16;
        a4 = v25;
      }
      while (v32 != v16);
      v36 += v31;
      v35 += v31;
      if (++v32 != v28)
        continue;
      break;
    }
  }
}

void specialized _merge<A>(low:mid:high:buffer:by:)(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  int64_t v14;
  int64_t v16;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  char v23;
  unint64_t v24;
  unint64_t v26;
  BOOL v28;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  int64_t v42;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v51 = type metadata accessor for CaptionSectioner.Caption(0);
  v8 = MEMORY[0x1E0C80A78](v51);
  v50 = (uint64_t)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v44 - v11;
  v13 = *(_QWORD *)(v10 + 72);
  if (!v13)
  {
    __break(1u);
LABEL_75:
    __break(1u);
LABEL_76:
    __break(1u);
    goto LABEL_77;
  }
  v14 = a2 - a1;
  if (a2 - a1 == 0x8000000000000000 && v13 == -1)
    goto LABEL_75;
  v16 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v13 == -1)
    goto LABEL_76;
  v18 = v14 / v13;
  v19 = v16 / v13;
  v45 = *(_QWORD *)(v10 + 72);
  if (v14 / v13 >= v16 / v13)
  {
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(a2, v16 / v13, a4);
    v20 = a4 + v19 * v13;
    if (v19 * v13 >= 1 && a1 < a2)
    {
      v47 = a4;
      v48 = -v13;
      v46 = a1;
      do
      {
        v30 = a3;
        v31 = v48;
        a3 += v48;
        v49 = v20 + v48;
        v32 = v20;
        _s15ConversationKit11ParticipantVWOcTm_0(v20 + v48, (uint64_t)v12, type metadata accessor for CaptionSectioner.Caption);
        v33 = a2 + v31;
        v34 = a2 + v31;
        v35 = (uint64_t)v12;
        v36 = v50;
        _s15ConversationKit11ParticipantVWOcTm_0(v34, v50, type metadata accessor for CaptionSectioner.Caption);
        v37 = static Date.< infix(_:_:)();
        v38 = v36;
        v12 = (char *)v35;
        outlined destroy of CaptionSectioner.Caption(v38, type metadata accessor for CaptionSectioner.Caption);
        outlined destroy of CaptionSectioner.Caption(v35, type metadata accessor for CaptionSectioner.Caption);
        if ((v37 & 1) != 0)
        {
          if (v30 < a2 || a3 >= a2)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v30 != a2)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          a2 = v33;
          a4 = v47;
          v20 = v32;
        }
        else
        {
          if (v30 < v32 || a3 >= v32)
          {
            v20 = v49;
            swift_arrayInitWithTakeFrontToBack();
          }
          else
          {
            v20 = v49;
            if (v30 != v32)
              swift_arrayInitWithTakeBackToFront();
          }
          a4 = v47;
        }
      }
      while (v20 > a4 && a2 > v46);
      v13 = v45;
    }
  }
  else
  {
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, v14 / v13, a4);
    v20 = a4 + v18 * v13;
    v49 = a3;
    if (v18 * v13 >= 1 && a2 < a3)
    {
      v22 = v50;
      do
      {
        _s15ConversationKit11ParticipantVWOcTm_0(a2, (uint64_t)v12, type metadata accessor for CaptionSectioner.Caption);
        _s15ConversationKit11ParticipantVWOcTm_0(a4, v22, type metadata accessor for CaptionSectioner.Caption);
        v23 = static Date.< infix(_:_:)();
        outlined destroy of CaptionSectioner.Caption(v22, type metadata accessor for CaptionSectioner.Caption);
        outlined destroy of CaptionSectioner.Caption((uint64_t)v12, type metadata accessor for CaptionSectioner.Caption);
        if ((v23 & 1) != 0)
        {
          v24 = a2 + v13;
          if (a1 < a2 || a1 >= v24)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (a1 != a2)
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        else
        {
          v26 = a4 + v13;
          if (a1 < a4 || a1 >= v26)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (a1 != a4)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v24 = a2;
          a4 = v26;
          v13 = v45;
        }
        a1 += v13;
        v28 = a4 >= v20 || v24 >= v49;
        a2 = v24;
      }
      while (!v28);
    }
    a2 = a1;
  }
  v42 = v20 - a4;
  if (v13 != -1 || v42 != 0x8000000000000000)
  {
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(a4, v42 / v13, a2);
    return;
  }
LABEL_77:
  __break(1u);
}

{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  int64_t v14;
  int64_t v16;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  char v23;
  unint64_t v24;
  unint64_t v26;
  BOOL v28;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  int64_t v42;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v51 = type metadata accessor for TranscriptionViewModel.Caption(0);
  v8 = MEMORY[0x1E0C80A78](v51);
  v50 = (uint64_t)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v44 - v11;
  v13 = *(_QWORD *)(v10 + 72);
  if (!v13)
  {
    __break(1u);
LABEL_75:
    __break(1u);
LABEL_76:
    __break(1u);
    goto LABEL_77;
  }
  v14 = a2 - a1;
  if (a2 - a1 == 0x8000000000000000 && v13 == -1)
    goto LABEL_75;
  v16 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v13 == -1)
    goto LABEL_76;
  v18 = v14 / v13;
  v19 = v16 / v13;
  v45 = *(_QWORD *)(v10 + 72);
  if (v14 / v13 >= v16 / v13)
  {
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(a2, v16 / v13, a4);
    v20 = a4 + v19 * v13;
    if (v19 * v13 >= 1 && a1 < a2)
    {
      v47 = a4;
      v48 = -v13;
      v46 = a1;
      do
      {
        v30 = a3;
        v31 = v48;
        a3 += v48;
        v49 = v20 + v48;
        v32 = v20;
        outlined init with copy of ConversationControlsAction(v20 + v48, (uint64_t)v12, type metadata accessor for TranscriptionViewModel.Caption);
        v33 = a2 + v31;
        v34 = a2 + v31;
        v35 = (uint64_t)v12;
        v36 = v50;
        outlined init with copy of ConversationControlsAction(v34, v50, type metadata accessor for TranscriptionViewModel.Caption);
        v37 = static Date.< infix(_:_:)();
        v38 = v36;
        v12 = (char *)v35;
        outlined destroy of AccountUpdateNotice(v38, type metadata accessor for TranscriptionViewModel.Caption);
        outlined destroy of AccountUpdateNotice(v35, type metadata accessor for TranscriptionViewModel.Caption);
        if ((v37 & 1) != 0)
        {
          if (v30 < a2 || a3 >= a2)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v30 != a2)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          a2 = v33;
          a4 = v47;
          v20 = v32;
        }
        else
        {
          if (v30 < v32 || a3 >= v32)
          {
            v20 = v49;
            swift_arrayInitWithTakeFrontToBack();
          }
          else
          {
            v20 = v49;
            if (v30 != v32)
              swift_arrayInitWithTakeBackToFront();
          }
          a4 = v47;
        }
      }
      while (v20 > a4 && a2 > v46);
      v13 = v45;
    }
  }
  else
  {
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, v14 / v13, a4);
    v20 = a4 + v18 * v13;
    v49 = a3;
    if (v18 * v13 >= 1 && a2 < a3)
    {
      v22 = v50;
      do
      {
        outlined init with copy of ConversationControlsAction(a2, (uint64_t)v12, type metadata accessor for TranscriptionViewModel.Caption);
        outlined init with copy of ConversationControlsAction(a4, v22, type metadata accessor for TranscriptionViewModel.Caption);
        v23 = static Date.< infix(_:_:)();
        outlined destroy of AccountUpdateNotice(v22, type metadata accessor for TranscriptionViewModel.Caption);
        outlined destroy of AccountUpdateNotice((uint64_t)v12, type metadata accessor for TranscriptionViewModel.Caption);
        if ((v23 & 1) != 0)
        {
          v24 = a2 + v13;
          if (a1 < a2 || a1 >= v24)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (a1 != a2)
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        else
        {
          v26 = a4 + v13;
          if (a1 < a4 || a1 >= v26)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (a1 != a4)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v24 = a2;
          a4 = v26;
          v13 = v45;
        }
        a1 += v13;
        v28 = a4 >= v20 || v24 >= v49;
        a2 = v24;
      }
      while (!v28);
    }
    a2 = a1;
  }
  v42 = v20 - a4;
  if (v13 != -1 || v42 != 0x8000000000000000)
  {
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(a4, v42 / v13, a2);
    return;
  }
LABEL_77:
  __break(1u);
}

{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  int64_t v20;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int64_t v27;
  uint64_t (*v29)(uint64_t);
  uint64_t v30;
  uint64_t (*v31)(uint64_t);
  uint64_t v32;
  void *v33;
  id v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  void *v39;
  id v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  char v45;
  unint64_t v46;
  BOOL v47;
  unint64_t v48;
  unint64_t v49;
  BOOL v50;
  BOOL v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  id v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  void *v61;
  id v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  char v67;
  uint64_t v70;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;

  v8 = type metadata accessor for Participant(0);
  v9 = MEMORY[0x1E0C80A78](v8);
  v82 = (uint64_t)&v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v79 = (uint64_t)&v72 - v12;
  v13 = MEMORY[0x1E0C80A78](v11);
  v81 = (unint64_t)&v72 - v14;
  MEMORY[0x1E0C80A78](v13);
  v78 = (unint64_t)&v72 - v15;
  v17 = *(_QWORD *)(v16 + 72);
  if (!v17)
  {
    __break(1u);
LABEL_102:
    __break(1u);
LABEL_103:
    __break(1u);
    goto LABEL_104;
  }
  v18 = a2 - a1;
  if (a2 - a1 == 0x8000000000000000 && v17 == -1)
    goto LABEL_102;
  v20 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v17 == -1)
    goto LABEL_103;
  v22 = v18 / v17;
  v23 = v20 / v17;
  v76 = v8;
  v77 = v17;
  if (v18 / v17 >= v20 / v17)
  {
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(a2, v20 / v17, a4);
    v24 = a4 + v23 * v17;
    if (v23 * v17 < 1 || a1 >= a2)
      goto LABEL_22;
    v52 = -v17;
    v73 = a4;
    v75 = -v17;
    while (1)
    {
      v53 = a3;
      v80 = v24;
      v81 = v24 + v52;
      v54 = v79;
      _s15ConversationKit11ParticipantVWOcTm_3(v24 + v52, v79, type metadata accessor for Participant);
      v78 = a2 + v52;
      _s15ConversationKit11ParticipantVWOcTm_3(a2 + v52, v82, type metadata accessor for Participant);
      v55 = *(int *)(v8 + 28);
      v56 = *(void **)(v54 + v55);
      if (v56)
      {
        v57 = objc_msgSend(v56, sel_value);
        v58 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        v60 = v59;

        v55 = *(int *)(v8 + 28);
      }
      else
      {
        v58 = 0;
        v60 = 0xE000000000000000;
      }
      v61 = *(void **)(v82 + v55);
      if (v61)
      {
        v62 = objc_msgSend(v61, sel_value);
        v63 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        v65 = v64;

      }
      else
      {
        v63 = 0;
        v65 = 0xE000000000000000;
      }
      if (v63 == v58 && v65 == v60)
        v67 = 0;
      else
        v67 = _stringCompareWithSmolCheck(_:_:expecting:)();
      v8 = v76;
      v17 = v77;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v52 = v75;
      a3 = v53 + v75;
      outlined destroy of Participant(v82, type metadata accessor for Participant);
      outlined destroy of Participant(v79, type metadata accessor for Participant);
      if ((v67 & 1) != 0)
      {
        if (v53 < a2 || a3 >= a2)
        {
          a2 = v78;
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v53 == a2)
        {
          a2 = v78;
        }
        else
        {
          a2 = v78;
          swift_arrayInitWithTakeBackToFront();
        }
        a4 = v73;
        v24 = v80;
        goto LABEL_95;
      }
      if (v53 < v80 || a3 >= v80)
      {
        v70 = v81;
        swift_arrayInitWithTakeFrontToBack();
      }
      else
      {
        if (v53 == v80)
        {
          v24 = v81;
          goto LABEL_92;
        }
        v70 = v81;
        swift_arrayInitWithTakeBackToFront();
      }
      v24 = v70;
LABEL_92:
      a4 = v73;
LABEL_95:
      if (v24 <= a4 || a2 <= a1)
        goto LABEL_22;
    }
  }
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, v18 / v17, a4);
  v24 = a4 + v22 * v17;
  if (v22 * v17 >= 1 && a2 < a3)
  {
    v29 = type metadata accessor for Participant;
    v80 = a4 + v22 * v17;
    v74 = a3;
    while (1)
    {
      v30 = v78;
      _s15ConversationKit11ParticipantVWOcTm_3(a2, v78, v29);
      v31 = v29;
      _s15ConversationKit11ParticipantVWOcTm_3(a4, v81, v29);
      v32 = *(int *)(v8 + 28);
      v33 = *(void **)(v30 + v32);
      if (v33)
      {
        v34 = objc_msgSend(v33, sel_value);
        v35 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        v37 = v36;

        v32 = *(int *)(v8 + 28);
      }
      else
      {
        v35 = 0;
        v37 = 0xE000000000000000;
      }
      v38 = a4;
      v39 = *(void **)(v81 + v32);
      if (v39)
      {
        v40 = objc_msgSend(v39, sel_value);
        v41 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        v43 = v42;

      }
      else
      {
        v41 = 0;
        v43 = 0xE000000000000000;
      }
      if (v41 == v35 && v43 == v37)
        break;
      v45 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v29 = v31;
      outlined destroy of Participant(v81, v31);
      outlined destroy of Participant(v78, v31);
      if ((v45 & 1) == 0)
        goto LABEL_45;
      v17 = v77;
      v46 = a2 + v77;
      v47 = a1 < a2 || a1 >= v46;
      a4 = v38;
      v48 = v74;
      if (v47)
      {
        v8 = v76;
        swift_arrayInitWithTakeFrontToBack();
      }
      else
      {
        v8 = v76;
        if (a1 != a2)
          swift_arrayInitWithTakeBackToFront();
      }
LABEL_54:
      v24 = v80;
      a1 += v17;
      v51 = a4 >= v80 || v46 >= v48;
      a2 = v46;
      if (v51)
        goto LABEL_16;
    }
    swift_bridgeObjectRelease_n();
    v29 = v31;
    outlined destroy of Participant(v81, v31);
    outlined destroy of Participant(v78, v31);
LABEL_45:
    v49 = v38;
    v17 = v77;
    a4 = v38 + v77;
    v50 = a1 < v38 || a1 >= a4;
    v48 = v74;
    if (v50)
    {
      v8 = v76;
      swift_arrayInitWithTakeFrontToBack();
    }
    else
    {
      v8 = v76;
      if (a1 != v49)
        swift_arrayInitWithTakeBackToFront();
    }
    v46 = a2;
    goto LABEL_54;
  }
LABEL_16:
  a2 = a1;
LABEL_22:
  v27 = v24 - a4;
  if (v17 != -1 || v27 != 0x8000000000000000)
  {
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(a4, v27 / v17, a2);
    return;
  }
LABEL_104:
  __break(1u);
}

{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  int64_t v23;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v29;
  BOOL v30;
  int64_t v31;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v40;
  unint64_t v41;
  BOOL v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char v49;
  unint64_t v50;
  BOOL v51;
  BOOL v52;
  unint64_t v53;
  unint64_t v54;
  int64_t v55;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int64_t v60;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;

  v5 = v4;
  v69 = type metadata accessor for Participant(0);
  v10 = MEMORY[0x1E0C80A78](v69);
  v11 = MEMORY[0x1E0C80A78](v10);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v62 - v13;
  MEMORY[0x1E0C80A78](v12);
  v18 = (char *)&v62 - v17;
  v20 = *(_QWORD *)(v19 + 72);
  if (!v20)
  {
    __break(1u);
LABEL_89:
    __break(1u);
LABEL_90:
    __break(1u);
    goto LABEL_91;
  }
  v21 = a2 - a1;
  if (a2 - a1 == 0x8000000000000000 && v20 == -1)
    goto LABEL_89;
  v23 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v20 == -1)
    goto LABEL_90;
  v72 = v5;
  v25 = v21 / v20;
  v26 = v23 / v20;
  v71 = v20;
  if (v21 / v20 < v23 / v20)
  {
    v70 = (unint64_t)v14;
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, v21 / v20, a4);
    v27 = a4 + v25 * v20;
    if (v25 * v20 < 1 || a2 >= a3)
    {
      v29 = v20;
LABEL_17:
      a2 = a1;
      goto LABEL_23;
    }
    while (1)
    {
      v33 = v27;
      outlined init with copy of ConversationControlsAppLaunchButtonType(a2, (uint64_t)v18, type metadata accessor for Participant);
      v34 = a4;
      v35 = a4;
      v36 = (uint64_t)v18;
      v37 = v70;
      outlined init with copy of ConversationControlsAppLaunchButtonType(v35, v70, type metadata accessor for Participant);
      v38 = v72;
      closure #1 in Array<A>.sortForInCallControls()(v36);
      v72 = v38;
      if (v38)
      {
        outlined destroy of RemoteControlRequest(v37, type metadata accessor for Participant);
        outlined destroy of RemoteControlRequest(v36, type metadata accessor for Participant);
        v55 = v33 - v34;
        if (v71 != -1 || v55 != 0x8000000000000000)
        {
          v57 = v55 / v71;
          v58 = v34;
          v59 = a1;
          goto LABEL_86;
        }
LABEL_92:
        __break(1u);
LABEL_93:
        __break(1u);
        return;
      }
      v40 = v39;
      outlined destroy of RemoteControlRequest(v37, type metadata accessor for Participant);
      outlined destroy of RemoteControlRequest(v36, type metadata accessor for Participant);
      v18 = (char *)v36;
      if ((v40 & 1) != 0)
      {
        v29 = v71;
        v41 = a2 + v71;
        v42 = a1 < a2 || a1 >= v41;
        a4 = v34;
        if (!v42)
        {
          if (a1 != a2)
          {
            swift_arrayInitWithTakeBackToFront();
LABEL_44:
            v29 = v71;
          }
          a2 = v41;
          goto LABEL_49;
        }
        swift_arrayInitWithTakeFrontToBack();
        goto LABEL_44;
      }
      v29 = v71;
      a4 = v34 + v71;
      if (a1 < v34 || a1 >= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else
      {
        if (a1 == v34)
          goto LABEL_49;
        swift_arrayInitWithTakeBackToFront();
      }
      v29 = v71;
LABEL_49:
      a1 += v29;
      v27 = v33;
      if (a4 >= v33 || a2 >= a3)
        goto LABEL_17;
    }
  }
  v66 = v16;
  v67 = v15;
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a2, v23 / v20, a4);
  v27 = a4 + v26 * v20;
  v30 = v26 * v20 < 1 || a1 >= a2;
  v29 = v20;
  if (v30)
    goto LABEL_23;
  v44 = -v20;
  v45 = v72;
  v63 = a1;
  v64 = -v20;
  v65 = a4;
  while (1)
  {
    v70 = v27;
    v68 = v27 + v44;
    v46 = v66;
    outlined init with copy of ConversationControlsAppLaunchButtonType(v27 + v44, v66, type metadata accessor for Participant);
    v47 = v67;
    outlined init with copy of ConversationControlsAppLaunchButtonType(a2 + v44, v67, type metadata accessor for Participant);
    closure #1 in Array<A>.sortForInCallControls()(v46);
    v72 = v45;
    if (v45)
      break;
    v49 = v48;
    v50 = a3 + v44;
    outlined destroy of RemoteControlRequest(v47, type metadata accessor for Participant);
    outlined destroy of RemoteControlRequest(v46, type metadata accessor for Participant);
    if ((v49 & 1) != 0)
    {
      v51 = a3 < a2 || v50 >= a2;
      v45 = v72;
      if (v51)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a3 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      a2 += v44;
      v27 = v70;
    }
    else
    {
      v52 = a3 < v70 || v50 >= v70;
      v45 = v72;
      if (!v52)
      {
        v44 = v64;
        if (a3 == v70)
        {
          v27 = v68;
        }
        else
        {
          v54 = v68;
          swift_arrayInitWithTakeBackToFront();
          v27 = v54;
        }
        goto LABEL_70;
      }
      v53 = v68;
      swift_arrayInitWithTakeFrontToBack();
      v27 = v53;
    }
    v44 = v64;
LABEL_70:
    v29 = v71;
    if (v27 > v65)
    {
      a3 = v50;
      if (a2 > v63)
        continue;
    }
    a4 = v65;
LABEL_23:
    v31 = v27 - a4;
    if (v29 != -1 || v31 != 0x8000000000000000)
    {
      specialized UnsafeMutablePointer.moveInitialize(from:count:)(a4, v31 / v29, a2);
      return;
    }
LABEL_91:
    __break(1u);
    goto LABEL_92;
  }
  outlined destroy of RemoteControlRequest(v47, type metadata accessor for Participant);
  outlined destroy of RemoteControlRequest(v46, type metadata accessor for Participant);
  v58 = v65;
  v60 = v70 - v65;
  if (v71 == -1 && v60 == 0x8000000000000000)
    goto LABEL_93;
  v57 = v60 / v71;
  v59 = a2;
LABEL_86:
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(v58, v57, v59);
}

{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int64_t v42;
  int64_t v44;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  const void *v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  _BYTE *v60;
  uint64_t v61;
  _BYTE *v62;
  uint64_t v63;
  uint64_t v64;
  const void *v65;
  uint64_t v66;
  char v67;
  char v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  const void *v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  id v77;
  id v78;
  id v79;
  unint64_t v80;
  unint64_t v81;
  BOOL v82;
  BOOL v84;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  int EnumCaseMultiPayload;
  uint64_t v93;
  const void *v94;
  uint64_t v95;
  char v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  char v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t v109;
  const void *v110;
  uint64_t v111;
  unint64_t v112;
  id v113;
  id v114;
  id v115;
  id v116;
  id v117;
  BOOL v118;
  unint64_t v119;
  BOOL v120;
  unint64_t v121;
  unint64_t v122;
  int64_t v124;
  uint64_t v126;
  _QWORD *v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  unint64_t v133;
  char *v134;
  char *v135;
  char *v136;
  unint64_t v137;
  _BYTE *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  unint64_t v142;
  unint64_t v143;
  uint64_t v144;
  char *v145;
  unint64_t v146;
  uint64_t v147;
  _BYTE *v148;
  _QWORD v149[27];
  _BYTE v150[336];
  _QWORD v151[28];
  uint64_t v152;

  v152 = type metadata accessor for Participant.State(0);
  v8 = MEMORY[0x1E0C80A78](v152);
  v128 = (uint64_t)&v126 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v126 - v11;
  v13 = MEMORY[0x1E0C80A78](v10);
  v135 = (char *)&v126 - v14;
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v126 - v16;
  v18 = MEMORY[0x1E0C80A78](v15);
  v129 = (char *)&v126 - v19;
  v20 = MEMORY[0x1E0C80A78](v18);
  v136 = (char *)&v126 - v21;
  v22 = MEMORY[0x1E0C80A78](v20);
  v138 = (char *)&v126 - v23;
  MEMORY[0x1E0C80A78](v22);
  v133 = (unint64_t)&v126 - v24;
  v139 = type metadata accessor for Participant(0);
  v25 = MEMORY[0x1E0C80A78](v139);
  v131 = (uint64_t)&v126 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x1E0C80A78](v25);
  v130 = (uint64_t)&v126 - v28;
  v29 = MEMORY[0x1E0C80A78](v27);
  v148 = (char *)&v126 - v30;
  v31 = MEMORY[0x1E0C80A78](v29);
  v145 = (char *)&v126 - v32;
  v33 = MEMORY[0x1E0C80A78](v31);
  v132 = (char *)&v126 - v34;
  v35 = MEMORY[0x1E0C80A78](v33);
  v36 = MEMORY[0x1E0C80A78](v35);
  v147 = (uint64_t)&v126 - v37;
  MEMORY[0x1E0C80A78](v36);
  v144 = (uint64_t)&v126 - v39;
  v41 = *(_QWORD *)(v40 + 72);
  if (!v41)
  {
    __break(1u);
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
    goto LABEL_131;
  }
  v42 = a2 - a1;
  if (a2 - a1 == 0x8000000000000000 && v41 == -1)
    goto LABEL_129;
  v44 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v41 == -1)
    goto LABEL_130;
  v140 = v38;
  v141 = v41;
  v134 = v17;
  v137 = a3;
  v46 = v42 / v41;
  v47 = v44 / v41;
  if (v42 / v41 < v44 / v41)
  {
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, v42 / v41, a4);
    v48 = a4 + v46 * v41;
    if (v46 * v41 < 1 || a2 >= v137)
    {
LABEL_67:
      a2 = a1;
      goto LABEL_123;
    }
    v145 = (char *)&v151[4];
    v148 = &v150[96];
    v135 = (char *)&v149[4];
    v50 = (uint64_t)v136;
    v51 = v140;
    v142 = v48;
    while (1)
    {
      v52 = v144;
      outlined init with copy of ConversationControlsAppLaunchButtonType(a2, v144, type metadata accessor for Participant);
      outlined init with copy of ConversationControlsAppLaunchButtonType(a4, v147, type metadata accessor for Participant);
      v53 = v52;
      v54 = v133;
      outlined init with copy of ConversationControlsAppLaunchButtonType(v53, v133, type metadata accessor for Participant.State);
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        v55 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        v56 = (const void *)(v54 + *(int *)(v55 + 48));
        outlined consume of Participant.CopresenceInfo?(*(_QWORD *)(v54 + *(int *)(v55 + 64)), *(_QWORD *)(v54 + *(int *)(v55 + 64) + 8));
        memcpy(v150, v56, sizeof(v150));
        v57 = type metadata accessor for Date();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 8))(v54, v57);
        outlined init with copy of Participant.ScreenInfo?((uint64_t)v148, (uint64_t)v151);
        outlined destroy of Participant.MediaInfo((uint64_t)v150);
        if (v151[3] != 1)
        {
          memcpy(v150, v151, 0xD1uLL);
          v58 = v150[40];
          outlined destroy of Participant.ScreenInfo((uint64_t)v150);
          v51 = v140;
          goto LABEL_21;
        }
      }
      else
      {
        outlined destroy of RemoteControlRequest(v54, type metadata accessor for Participant.State);
        memset(v151, 0, 24);
        v151[3] = 1;
        bzero(v145, 0xB1uLL);
      }
      outlined destroy of Participant.ScreenInfo?((uint64_t)v151);
      v58 = 2;
LABEL_21:
      outlined init with copy of ConversationControlsAppLaunchButtonType(v144, v51, type metadata accessor for Participant);
      if (v58 == 2)
      {
        v59 = 0;
        goto LABEL_28;
      }
      v60 = v138;
      outlined init with copy of ConversationControlsAppLaunchButtonType(v51, (uint64_t)v138, type metadata accessor for Participant.State);
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        v61 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        v62 = &v138[*(int *)(v61 + 48)];
        outlined consume of Participant.CopresenceInfo?(*(_QWORD *)&v138[*(int *)(v61 + 64)], *(_QWORD *)&v138[*(int *)(v61 + 64) + 8]);
        memcpy(v150, v62, sizeof(v150));
        v63 = type metadata accessor for Date();
        (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v63 - 8) + 8))(v138, v63);
        outlined init with copy of Participant.ScreenInfo?((uint64_t)v148, (uint64_t)v149);
        outlined destroy of Participant.MediaInfo((uint64_t)v150);
        if (v149[3] != 1)
        {
          memcpy(v151, v149, 0xD1uLL);
          v59 = LOBYTE(v151[5]);
          outlined destroy of Participant.ScreenInfo((uint64_t)v151);
          goto LABEL_28;
        }
      }
      else
      {
        outlined destroy of RemoteControlRequest((uint64_t)v60, type metadata accessor for Participant.State);
        memset(v149, 0, 24);
        v149[3] = 1;
        bzero(v135, 0xB1uLL);
      }
      outlined destroy of Participant.ScreenInfo?((uint64_t)v149);
      v59 = 0;
LABEL_28:
      outlined destroy of RemoteControlRequest(v51, type metadata accessor for Participant);
      outlined init with copy of ConversationControlsAppLaunchButtonType(v147, v50, type metadata accessor for Participant.State);
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        v64 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        v65 = (const void *)(v50 + *(int *)(v64 + 48));
        outlined consume of Participant.CopresenceInfo?(*(_QWORD *)(v50 + *(int *)(v64 + 64)), *(_QWORD *)(v50 + *(int *)(v64 + 64) + 8));
        memcpy(v150, v65, sizeof(v150));
        v66 = type metadata accessor for Date();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 8))(v50, v66);
        outlined init with copy of Participant.ScreenInfo?((uint64_t)v148, (uint64_t)v151);
        outlined destroy of Participant.MediaInfo((uint64_t)v150);
        if (v151[3] != 1)
        {
          memcpy(v150, v151, 0xD1uLL);
          v67 = v150[40];
          outlined destroy of Participant.ScreenInfo((uint64_t)v150);
          v68 = v67;
          goto LABEL_33;
        }
      }
      else
      {
        outlined destroy of RemoteControlRequest(v50, type metadata accessor for Participant.State);
        memset(v151, 0, 24);
        v151[3] = 1;
        bzero(v145, 0xB1uLL);
      }
      outlined destroy of Participant.ScreenInfo?((uint64_t)v151);
      v68 = 2;
LABEL_33:
      v69 = (uint64_t)v132;
      outlined init with copy of ConversationControlsAppLaunchButtonType(v147, (uint64_t)v132, type metadata accessor for Participant);
      v146 = a2;
      v143 = a1;
      if (v68 == 2)
      {
        v70 = a4;
      }
      else
      {
        v71 = (uint64_t)v129;
        outlined init with copy of ConversationControlsAppLaunchButtonType(v69, (uint64_t)v129, type metadata accessor for Participant.State);
        if (swift_getEnumCaseMultiPayload() == 4)
        {
          v72 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
          v73 = (const void *)(v71 + *(int *)(v72 + 48));
          outlined consume of Participant.CopresenceInfo?(*(_QWORD *)(v71 + *(int *)(v72 + 64)), *(_QWORD *)(v71 + *(int *)(v72 + 64) + 8));
          memcpy(v150, v73, sizeof(v150));
          v74 = type metadata accessor for Date();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 8))(v71, v74);
          outlined init with copy of Participant.ScreenInfo?((uint64_t)v148, (uint64_t)v149);
          outlined destroy of Participant.MediaInfo((uint64_t)v150);
          if (v149[3] != 1)
          {
            v70 = a4;
            memcpy(v151, v149, 0xD1uLL);
            v75 = LOBYTE(v151[5]);
            outlined destroy of Participant.ScreenInfo((uint64_t)v151);
            goto LABEL_41;
          }
        }
        else
        {
          outlined destroy of RemoteControlRequest(v71, type metadata accessor for Participant.State);
          memset(v149, 0, 24);
          v149[3] = 1;
          bzero(v135, 0xB1uLL);
        }
        v70 = a4;
        outlined destroy of Participant.ScreenInfo?((uint64_t)v149);
      }
      v75 = 0;
LABEL_41:
      outlined destroy of RemoteControlRequest(v69, type metadata accessor for Participant);
      v76 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithBool_, v75);
      v77 = objc_msgSend(v76, sel_integerValue);

      v78 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithBool_, v59);
      v79 = objc_msgSend(v78, sel_integerValue);

      outlined destroy of RemoteControlRequest(v147, type metadata accessor for Participant);
      outlined destroy of RemoteControlRequest(v144, type metadata accessor for Participant);
      if ((uint64_t)v77 >= (uint64_t)v79)
      {
        v41 = v141;
        a4 = v70 + v141;
        v81 = v143;
        if (v143 >= v70 && v143 < a4)
        {
          v80 = v146;
          v50 = (uint64_t)v136;
          if (v143 != v70)
            swift_arrayInitWithTakeBackToFront();
          v48 = v142;
          goto LABEL_61;
        }
        swift_arrayInitWithTakeFrontToBack();
        v80 = v146;
      }
      else
      {
        v41 = v141;
        v80 = v146 + v141;
        v81 = v143;
        v82 = v143 < v146 || v143 >= v80;
        a4 = v70;
        if (!v82)
        {
          v50 = (uint64_t)v136;
          v51 = v140;
          if (v143 != v146)
            swift_arrayInitWithTakeBackToFront();
          v48 = v142;
          goto LABEL_62;
        }
        swift_arrayInitWithTakeFrontToBack();
      }
      v48 = v142;
      v50 = (uint64_t)v136;
LABEL_61:
      v51 = v140;
LABEL_62:
      a1 = v81 + v41;
      v84 = a4 >= v48 || v80 >= v137;
      a2 = v80;
      if (v84)
        goto LABEL_67;
    }
  }
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a2, v44 / v41, a4);
  v48 = a4 + v47 * v41;
  if (v47 * v41 >= 1 && a1 < a2)
  {
    v147 = -v41;
    v132 = (char *)&v151[4];
    v133 = a4;
    v138 = &v150[96];
    v127 = &v149[4];
    v86 = v137;
    v143 = a1;
    v129 = v12;
    v88 = (uint64_t)v134;
    v87 = v135;
    while (1)
    {
      v144 = v86;
      v142 = v48;
      v89 = v147;
      v137 = v48 + v147;
      v90 = (uint64_t)v145;
      outlined init with copy of ConversationControlsAppLaunchButtonType(v48 + v147, (uint64_t)v145, type metadata accessor for Participant);
      v146 = a2;
      v91 = a2 + v89;
      outlined init with copy of ConversationControlsAppLaunchButtonType(v91, (uint64_t)v148, type metadata accessor for Participant);
      outlined init with copy of ConversationControlsAppLaunchButtonType(v90, v88, type metadata accessor for Participant.State);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v136 = (char *)v91;
      if (EnumCaseMultiPayload == 4)
      {
        v93 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        v94 = (const void *)(v88 + *(int *)(v93 + 48));
        outlined consume of Participant.CopresenceInfo?(*(_QWORD *)(v88 + *(int *)(v93 + 64)), *(_QWORD *)(v88 + *(int *)(v93 + 64) + 8));
        memcpy(v150, v94, sizeof(v150));
        v95 = type metadata accessor for Date();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v95 - 8) + 8))(v88, v95);
        outlined init with copy of Participant.ScreenInfo?((uint64_t)v138, (uint64_t)v151);
        outlined destroy of Participant.MediaInfo((uint64_t)v150);
        if (v151[3] != 1)
        {
          memcpy(v150, v151, 0xD1uLL);
          v96 = v150[40];
          outlined destroy of Participant.ScreenInfo((uint64_t)v150);
          goto LABEL_78;
        }
      }
      else
      {
        outlined destroy of RemoteControlRequest(v88, type metadata accessor for Participant.State);
        memset(v151, 0, 24);
        v151[3] = 1;
        bzero(v132, 0xB1uLL);
      }
      outlined destroy of Participant.ScreenInfo?((uint64_t)v151);
      v96 = 2;
LABEL_78:
      v97 = v130;
      outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v145, v130, type metadata accessor for Participant);
      if (v96 != 2)
      {
        outlined init with copy of ConversationControlsAppLaunchButtonType(v97, (uint64_t)v87, type metadata accessor for Participant.State);
        if (swift_getEnumCaseMultiPayload() == 4)
        {
          v98 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
          v99 = &v87[*(int *)(v98 + 48)];
          outlined consume of Participant.CopresenceInfo?(*(_QWORD *)&v87[*(int *)(v98 + 64)], *(_QWORD *)&v87[*(int *)(v98 + 64) + 8]);
          memcpy(v150, v99, sizeof(v150));
          v100 = type metadata accessor for Date();
          (*(void (**)(char *, uint64_t))(*(_QWORD *)(v100 - 8) + 8))(v87, v100);
          outlined init with copy of Participant.ScreenInfo?((uint64_t)v138, (uint64_t)v149);
          outlined destroy of Participant.MediaInfo((uint64_t)v150);
          if (v149[3] != 1)
          {
            memcpy(v151, v149, 0xD1uLL);
            LODWORD(v140) = LOBYTE(v151[5]);
            outlined destroy of Participant.ScreenInfo((uint64_t)v151);
            goto LABEL_85;
          }
        }
        else
        {
          outlined destroy of RemoteControlRequest((uint64_t)v87, type metadata accessor for Participant.State);
          memset(v149, 0, 24);
          v149[3] = 1;
          bzero(v127, 0xB1uLL);
        }
        outlined destroy of Participant.ScreenInfo?((uint64_t)v149);
      }
      LODWORD(v140) = 0;
LABEL_85:
      outlined destroy of RemoteControlRequest(v97, type metadata accessor for Participant);
      outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v148, (uint64_t)v12, type metadata accessor for Participant.State);
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        v101 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        v102 = &v12[*(int *)(v101 + 48)];
        outlined consume of Participant.CopresenceInfo?(*(_QWORD *)&v12[*(int *)(v101 + 64)], *(_QWORD *)&v12[*(int *)(v101 + 64) + 8]);
        memcpy(v150, v102, sizeof(v150));
        v103 = type metadata accessor for Date();
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v103 - 8) + 8))(v12, v103);
        outlined init with copy of Participant.ScreenInfo?((uint64_t)v138, (uint64_t)v151);
        outlined destroy of Participant.MediaInfo((uint64_t)v150);
        if (v151[3] != 1)
        {
          memcpy(v150, v151, 0xD1uLL);
          v104 = v150[40];
          outlined destroy of Participant.ScreenInfo((uint64_t)v150);
          goto LABEL_90;
        }
      }
      else
      {
        outlined destroy of RemoteControlRequest((uint64_t)v12, type metadata accessor for Participant.State);
        memset(v151, 0, 24);
        v151[3] = 1;
        bzero(v132, 0xB1uLL);
      }
      outlined destroy of Participant.ScreenInfo?((uint64_t)v151);
      v104 = 2;
LABEL_90:
      v105 = v131;
      outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v148, v131, type metadata accessor for Participant);
      if (v104 == 2)
      {
        v106 = 0;
        v107 = v144;
      }
      else
      {
        v108 = v128;
        outlined init with copy of ConversationControlsAppLaunchButtonType(v105, v128, type metadata accessor for Participant.State);
        if (swift_getEnumCaseMultiPayload() != 4)
        {
          outlined destroy of RemoteControlRequest(v108, type metadata accessor for Participant.State);
          memset(v149, 0, 24);
          v149[3] = 1;
          bzero(v127, 0xB1uLL);
          v107 = v144;
LABEL_96:
          outlined destroy of Participant.ScreenInfo?((uint64_t)v149);
          v106 = 0;
          goto LABEL_97;
        }
        v109 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        v110 = (const void *)(v108 + *(int *)(v109 + 48));
        outlined consume of Participant.CopresenceInfo?(*(_QWORD *)(v108 + *(int *)(v109 + 64)), *(_QWORD *)(v108 + *(int *)(v109 + 64) + 8));
        memcpy(v150, v110, sizeof(v150));
        v111 = type metadata accessor for Date();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v111 - 8) + 8))(v108, v111);
        outlined init with copy of Participant.ScreenInfo?((uint64_t)v138, (uint64_t)v149);
        outlined destroy of Participant.MediaInfo((uint64_t)v150);
        v107 = v144;
        if (v149[3] == 1)
          goto LABEL_96;
        memcpy(v151, v149, 0xD1uLL);
        v106 = LOBYTE(v151[5]);
        outlined destroy of Participant.ScreenInfo((uint64_t)v151);
      }
LABEL_97:
      v112 = v107 + v147;
      outlined destroy of RemoteControlRequest(v105, type metadata accessor for Participant);
      v113 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithBool_, v106);
      v114 = objc_msgSend(v113, sel_integerValue);

      v115 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
      v116 = objc_msgSend(v115, sel_initWithBool_, v140);
      v117 = objc_msgSend(v116, sel_integerValue);

      outlined destroy of RemoteControlRequest((uint64_t)v148, type metadata accessor for Participant);
      outlined destroy of RemoteControlRequest((uint64_t)v145, type metadata accessor for Participant);
      if ((uint64_t)v114 >= (uint64_t)v117)
      {
        v41 = v141;
        v120 = v107 < v142 || v112 >= v142;
        v86 = v112;
        v88 = (uint64_t)v134;
        if (v120)
        {
          v121 = v137;
          swift_arrayInitWithTakeFrontToBack();
          v48 = v121;
          v119 = v143;
          v12 = v129;
          v87 = v135;
        }
        else
        {
          v119 = v143;
          v12 = v129;
          v87 = v135;
          if (v107 == v142)
          {
            v48 = v137;
          }
          else
          {
            v122 = v137;
            swift_arrayInitWithTakeBackToFront();
            v48 = v122;
          }
        }
        a2 = v146;
      }
      else
      {
        v118 = v107 < v146 || v112 >= v146;
        v41 = v141;
        v86 = v112;
        v88 = (uint64_t)v134;
        if (v118)
        {
          a2 = (unint64_t)v136;
          swift_arrayInitWithTakeFrontToBack();
          v48 = v142;
          v119 = v143;
          v12 = v129;
          v87 = v135;
        }
        else
        {
          v119 = v143;
          v12 = v129;
          v87 = v135;
          if (v107 == v146)
          {
            a2 = (unint64_t)v136;
          }
          else
          {
            a2 = (unint64_t)v136;
            swift_arrayInitWithTakeBackToFront();
          }
          v48 = v142;
        }
      }
      if (v48 <= v133 || a2 <= v119)
      {
        a4 = v133;
        break;
      }
    }
  }
LABEL_123:
  v124 = v48 - a4;
  if (v41 != -1 || v124 != 0x8000000000000000)
  {
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(a4, v124 / v41, a2);
    return;
  }
LABEL_131:
  __break(1u);
}

{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  double *v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;
  int64_t v40;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v46;
  double v47;
  double v48;
  double *v49;
  double *v50;
  BOOL v51;
  double v52;
  double v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v58;
  BOOL v60;
  uint64_t v61;
  double *v63;
  unint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  double *v68;
  double *v69;
  unint64_t v70;
  double v71;
  uint64_t v72;
  double v73;
  double *v74;
  BOOL v75;
  double v76;
  double v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  int64_t v84;
  _QWORD v86[2];
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  double *v90;
  double *v91;
  double *v92;
  double *v93;
  double *v94;
  unint64_t v95;
  double *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  _BYTE v100[40];
  char v101;
  _BYTE v102[40];
  char v103;
  double *v104;

  v5 = v4;
  v97 = type metadata accessor for HUDActivityManager.BannerUpdate(0);
  MEMORY[0x1E0C80A78](v97);
  MEMORY[0x1E0C80A78](v10);
  MEMORY[0x1E0C80A78](v11);
  v92 = (double *)((char *)v86 - v12);
  MEMORY[0x1E0C80A78](v13);
  v15 = (double *)((char *)v86 - v14);
  MEMORY[0x1E0C80A78](v16);
  v104 = (double *)((char *)v86 - v17);
  MEMORY[0x1E0C80A78](v18);
  v90 = (double *)((char *)v86 - v19);
  MEMORY[0x1E0C80A78](v20);
  MEMORY[0x1E0C80A78]((char *)v86 - v21);
  v91 = (double *)((char *)v86 - v22);
  MEMORY[0x1E0C80A78](v23);
  v96 = (double *)((char *)v86 - v24);
  MEMORY[0x1E0C80A78](v25);
  MEMORY[0x1E0C80A78](v26);
  v28 = (double *)((char *)v86 - v27);
  MEMORY[0x1E0C80A78](v29);
  v35 = (double *)((char *)v86 - v34);
  v37 = *(_QWORD *)(v36 + 72);
  if (!v37)
  {
    __break(1u);
LABEL_101:
    __break(1u);
LABEL_102:
    __break(1u);
    goto LABEL_103;
  }
  v38 = a2 - a1;
  if (a2 - a1 == 0x8000000000000000 && v37 == -1)
    goto LABEL_101;
  v40 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v37 == -1)
    goto LABEL_102;
  v94 = (double *)v31;
  v86[1] = v5;
  v42 = v38 / v37;
  v43 = v40 / v37;
  v99 = v37;
  if (v38 / v37 >= v40 / v37)
  {
    v91 = v15;
    v87 = v33;
    v88 = v32;
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(a2, v40 / v37, a4);
    v61 = v43 * v37;
    v44 = a4 + v43 * v37;
    if (v61 >= 1 && a1 < a2)
    {
      v95 = a4;
      v98 = -v37;
      v63 = v90;
      v93 = v104 + 1;
      v94 = v90 + 1;
      v96 = (double *)v102;
      do
      {
        v64 = a3;
        v65 = v98;
        v66 = v44 + v98;
        outlined init with copy of HUDActivityManager.BannerUpdate(v44 + v98, (uint64_t)v63);
        v67 = a2 + v65;
        outlined init with copy of HUDActivityManager.BannerUpdate(v67, (uint64_t)v104);
        outlined init with copy of ConversationControlsType((uint64_t)v94, (uint64_t)v100);
        outlined init with copy of ConversationControlsType((uint64_t)v93, (uint64_t)v96);
        if (v101)
        {
          v68 = v92;
          if (v103)
          {
            v69 = v63;
            v70 = v44;
            v71 = *v69;
            v72 = (uint64_t)v104;
            v73 = *v104;
            v74 = v91;
            outlined init with copy of HUDActivityManager.BannerUpdate((uint64_t)v69, (uint64_t)v91);
            outlined init with copy of HUDActivityManager.BannerUpdate(v72, (uint64_t)v68);
            if (v71 >= v73)
            {
              v89 = v70;
              v76 = *v74;
              v77 = *v68;
              v78 = v87;
              outlined init with copy of HUDActivityManager.BannerUpdate((uint64_t)v74, v87);
              v79 = (uint64_t)v68;
              v80 = v88;
              outlined init with copy of HUDActivityManager.BannerUpdate(v79, v88);
              v75 = v76 == v77 && Date.compare(_:)() == -1;
              v63 = v90;
              outlined destroy of HUDActivityManager.BannerUpdate(v80);
              outlined destroy of HUDActivityManager.BannerUpdate(v78);
              v44 = v89;
              v68 = v92;
            }
            else
            {
              v75 = 1;
              v44 = v70;
              v63 = v90;
            }
            outlined destroy of HUDActivityManager.BannerUpdate((uint64_t)v68);
            outlined destroy of HUDActivityManager.BannerUpdate((uint64_t)v91);
            outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v100, &demangling cache variable for type metadata for (ConversationControlsType, ConversationControlsType));
          }
          else
          {
            outlined destroy of ConversationControlsType((uint64_t)v96);
            outlined destroy of ConversationControlsType((uint64_t)v100);
            v75 = 1;
          }
        }
        else if (v103)
        {
          outlined destroy of ConversationControlsType((uint64_t)v100);
          outlined destroy of ConversationControlsType((uint64_t)v96);
          v75 = 0;
        }
        else
        {
          v75 = *v63 < *v104;
          outlined destroy of ConversationControlsType((uint64_t)v96);
          outlined destroy of ConversationControlsType((uint64_t)v100);
        }
        a3 = v64 + v98;
        outlined destroy of HUDActivityManager.BannerUpdate((uint64_t)v104);
        outlined destroy of HUDActivityManager.BannerUpdate((uint64_t)v63);
        if (v75)
        {
          if (v64 < a2 || a3 >= a2)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v64 != a2)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          a2 = v67;
        }
        else
        {
          if (v64 < v44 || a3 >= v44)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v64 != v44)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v44 = v66;
        }
      }
      while (v44 > v95 && a2 > a1);
      a4 = v95;
    }
  }
  else
  {
    v92 = (double *)v30;
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, v42, a4);
    v44 = a4 + v42 * v37;
    if (v42 * v37 >= 1 && a2 < a3)
    {
      v46 = (uint64_t)(v35 + 1);
      v98 = (uint64_t)(v28 + 1);
      v104 = (double *)v102;
      v93 = v35 + 1;
      do
      {
        outlined init with copy of HUDActivityManager.BannerUpdate(a2, (uint64_t)v35);
        outlined init with copy of HUDActivityManager.BannerUpdate(a4, (uint64_t)v28);
        outlined init with copy of ConversationControlsType(v46, (uint64_t)v100);
        outlined init with copy of ConversationControlsType(v98, (uint64_t)v104);
        if (v101)
        {
          if (!v103)
          {
            outlined destroy of ConversationControlsType((uint64_t)v104);
            outlined destroy of ConversationControlsType((uint64_t)v100);
            outlined destroy of HUDActivityManager.BannerUpdate((uint64_t)v28);
            outlined destroy of HUDActivityManager.BannerUpdate((uint64_t)v35);
            goto LABEL_30;
          }
          v47 = *v35;
          v48 = *v28;
          v49 = v94;
          outlined init with copy of HUDActivityManager.BannerUpdate((uint64_t)v35, (uint64_t)v94);
          v50 = v96;
          outlined init with copy of HUDActivityManager.BannerUpdate((uint64_t)v28, (uint64_t)v96);
          if (v47 >= v48)
          {
            v95 = a4;
            v52 = *v49;
            v53 = *v50;
            v54 = (uint64_t)v91;
            outlined init with copy of HUDActivityManager.BannerUpdate((uint64_t)v49, (uint64_t)v91);
            v55 = (uint64_t)v92;
            outlined init with copy of HUDActivityManager.BannerUpdate((uint64_t)v50, (uint64_t)v92);
            v51 = v52 == v53 && Date.compare(_:)() == -1;
            outlined destroy of HUDActivityManager.BannerUpdate(v55);
            outlined destroy of HUDActivityManager.BannerUpdate(v54);
            a4 = v95;
          }
          else
          {
            v51 = 1;
          }
          outlined destroy of HUDActivityManager.BannerUpdate((uint64_t)v96);
          outlined destroy of HUDActivityManager.BannerUpdate((uint64_t)v94);
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v100, &demangling cache variable for type metadata for (ConversationControlsType, ConversationControlsType));
          v46 = (uint64_t)v93;
        }
        else
        {
          if (v103)
          {
            outlined destroy of ConversationControlsType((uint64_t)v100);
            outlined destroy of ConversationControlsType((uint64_t)v104);
            outlined destroy of HUDActivityManager.BannerUpdate((uint64_t)v28);
            outlined destroy of HUDActivityManager.BannerUpdate((uint64_t)v35);
LABEL_36:
            v58 = a4;
            a4 += v99;
            if (a1 < v58 || a1 >= a4)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a1 != v58)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v56 = a2;
            goto LABEL_47;
          }
          v51 = *v35 < *v28;
          outlined destroy of ConversationControlsType((uint64_t)v104);
          outlined destroy of ConversationControlsType((uint64_t)v100);
        }
        outlined destroy of HUDActivityManager.BannerUpdate((uint64_t)v28);
        outlined destroy of HUDActivityManager.BannerUpdate((uint64_t)v35);
        if (!v51)
          goto LABEL_36;
LABEL_30:
        v56 = a2 + v99;
        if (a1 < a2 || a1 >= v56)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (a1 != a2)
        {
          swift_arrayInitWithTakeBackToFront();
        }
LABEL_47:
        a1 += v99;
        v60 = a4 >= v44 || v56 >= a3;
        a2 = v56;
      }
      while (!v60);
    }
    a2 = a1;
  }
  v84 = v44 - a4;
  if (v99 != -1 || v84 != 0x8000000000000000)
  {
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(a4, v84 / v99, a2);
    return;
  }
LABEL_103:
  __break(1u);
}

{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  int64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v32;
  uint64_t *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  BOOL v41;
  int64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t *v54;

  v52 = type metadata accessor for Participant.Caption(0);
  v9 = MEMORY[0x1E0C80A78](v52);
  v54 = (uint64_t *)((char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v9);
  v53 = (uint64_t *)((char *)&v44 - v11);
  v13 = *(_QWORD *)(v12 + 72);
  if (!v13)
  {
    __break(1u);
LABEL_78:
    __break(1u);
LABEL_79:
    __break(1u);
    goto LABEL_80;
  }
  v14 = a2 - a1;
  if (a2 - a1 == 0x8000000000000000 && v13 == -1)
    goto LABEL_78;
  v16 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v13 == -1)
    goto LABEL_79;
  v18 = v14 / v13;
  v19 = v16 / v13;
  if (v14 / v13 >= v16 / v13)
  {
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(a2, v16 / v13, a4);
    v21 = a4 + v19 * v13;
    if (v19 * v13 < 1 || a1 >= a2)
      goto LABEL_72;
    v45 = v4;
    v46 = v13;
    v48 = a4;
    v49 = -v13;
    v47 = a1;
    while (1)
    {
      v24 = a3;
      v25 = v49;
      a3 += v49;
      v51 = v21 + v49;
      v26 = v53;
      outlined init with copy of ConversationControlsAppLaunchButtonType(v21 + v49, (uint64_t)v53, type metadata accessor for Participant.Caption);
      v50 = a2 + v25;
      v27 = v54;
      outlined init with copy of ConversationControlsAppLaunchButtonType(a2 + v25, (uint64_t)v54, type metadata accessor for Participant.Caption);
      v28 = *v26;
      v29 = *v27;
      outlined destroy of AccountUpdateNotice((uint64_t)v27, type metadata accessor for Participant.Caption);
      outlined destroy of AccountUpdateNotice((uint64_t)v26, type metadata accessor for Participant.Caption);
      if (v28 >= v29)
      {
        if (v24 >= v21 && a3 < v21)
        {
          v32 = v47;
          a4 = v48;
          if (v24 == v21)
          {
            v21 = v51;
            goto LABEL_43;
          }
          v21 = v51;
LABEL_40:
          swift_arrayInitWithTakeBackToFront();
          goto LABEL_43;
        }
        v21 = v51;
      }
      else
      {
        if (v24 >= a2 && a3 < a2)
        {
          v32 = v47;
          a4 = v48;
          if (v24 == a2)
          {
            a2 = v50;
            goto LABEL_43;
          }
          a2 = v50;
          goto LABEL_40;
        }
        a2 = v50;
      }
      swift_arrayInitWithTakeFrontToBack();
      v32 = v47;
      a4 = v48;
LABEL_43:
      v13 = v46;
      if (v21 <= a4 || a2 <= v32)
        goto LABEL_72;
    }
  }
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, v14 / v13, a4);
  v20 = v18 * v13;
  v21 = a4 + v18 * v13;
  v51 = a3;
  if (v20 < 1 || a2 >= a3)
  {
    a2 = a1;
  }
  else
  {
    v45 = v4;
    v50 = v21;
    v34 = v53;
    v35 = v54;
    do
    {
      outlined init with copy of ConversationControlsAppLaunchButtonType(a2, (uint64_t)v34, type metadata accessor for Participant.Caption);
      outlined init with copy of ConversationControlsAppLaunchButtonType(a4, (uint64_t)v35, type metadata accessor for Participant.Caption);
      v36 = *v34;
      v37 = *v35;
      outlined destroy of AccountUpdateNotice((uint64_t)v35, type metadata accessor for Participant.Caption);
      outlined destroy of AccountUpdateNotice((uint64_t)v34, type metadata accessor for Participant.Caption);
      if (v36 >= v37)
      {
        if (a1 < a4 || a1 >= a4 + v13)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (a1 != a4)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        v38 = a2;
        a4 += v13;
      }
      else
      {
        v38 = a2 + v13;
        if (a1 < a2 || a1 >= v38)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (a1 != a2)
        {
          swift_arrayInitWithTakeBackToFront();
        }
      }
      v21 = v50;
      a1 += v13;
      v41 = a4 >= v50 || v38 >= v51;
      a2 = v38;
    }
    while (!v41);
    a2 = a1;
  }
LABEL_72:
  v42 = v21 - a4;
  if (v13 != -1 || v42 != 0x8000000000000000)
  {
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(a4, v42 / v13, a2);
    return;
  }
LABEL_80:
  __break(1u);
}

{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int64_t v46;
  int64_t v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  BOOL v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int EnumTagSinglePayload;
  void *v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  Class isa;
  uint64_t v86;
  id v87;
  char *v88;
  char *v89;
  char *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void (*v98)(uint64_t, uint64_t, uint64_t);
  uint64_t v99;
  uint64_t v100;
  char v101;
  void (*v102)(uint64_t, uint64_t);
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  void *v114;
  id v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  id v121;
  Class v122;
  id v123;
  char *v124;
  char *v125;
  char *v126;
  char *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  unint64_t v139;
  unint64_t v141;
  BOOL v143;
  uint64_t v144;
  uint64_t v145;
  unint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  int EnumCaseMultiPayload;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  int v162;
  unint64_t v163;
  unint64_t v164;
  uint64_t v165;
  void *v166;
  id v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  id v173;
  Class v174;
  id v175;
  char *v176;
  char *v177;
  char *v178;
  char *v179;
  char v180;
  unint64_t v181;
  uint64_t v182;
  void (*v183)(uint64_t, uint64_t, uint64_t);
  uint64_t v184;
  uint64_t v185;
  void (*v186)(uint64_t, uint64_t);
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  char *v195;
  void *v196;
  id v197;
  uint64_t v198;
  char *v199;
  uint64_t v200;
  char *v201;
  uint64_t v202;
  id v203;
  Class v204;
  id v205;
  char *v206;
  char *v207;
  char *v208;
  char *v209;
  char *v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  char *v219;
  uint64_t v220;
  unint64_t v221;
  BOOL v222;
  unint64_t v223;
  BOOL v224;
  int64_t v226;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  unint64_t v235;
  uint64_t v236;
  uint64_t v237;
  char *v238;
  uint64_t v239;
  char *v240;
  char *v241;
  char *v242;
  unint64_t v243;
  unint64_t v244;
  uint64_t v245;
  uint64_t v246;
  unint64_t v247;
  uint64_t v248;
  uint64_t v249;
  char *v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  char *v260;
  char *v261;
  uint64_t v262;
  uint64_t v263;
  unint64_t v264;

  v243 = a3;
  v264 = a2;
  v231 = type metadata accessor for PersonNameComponents();
  v230 = *(_QWORD *)(v231 - 8);
  MEMORY[0x1E0C80A78](v231);
  v229 = (uint64_t)&v228 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v257 = type metadata accessor for Date();
  v255 = *(_QWORD *)(v257 - 8);
  v7 = MEMORY[0x1E0C80A78](v257);
  v234 = (uint64_t)&v228 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v233 = (uint64_t)&v228 - v9;
  v251 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Date?, Date?));
  v10 = MEMORY[0x1E0C80A78](v251);
  v245 = (uint64_t)&v228 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v246 = (uint64_t)&v228 - v12;
  v13 = type metadata accessor for Participant.State(0);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v228 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v14);
  v239 = (uint64_t)&v228 - v18;
  v19 = MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v228 - v20;
  MEMORY[0x1E0C80A78](v19);
  v238 = (char *)&v228 - v22;
  v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  v24 = MEMORY[0x1E0C80A78](v23);
  v237 = (uint64_t)&v228 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x1E0C80A78](v24);
  v250 = (char *)&v228 - v27;
  v28 = MEMORY[0x1E0C80A78](v26);
  v30 = (char *)&v228 - v29;
  MEMORY[0x1E0C80A78](v28);
  v249 = (uint64_t)&v228 - v31;
  v32 = type metadata accessor for Participant(0);
  v33 = MEMORY[0x1E0C80A78](v32);
  v35 = (char *)&v228 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = MEMORY[0x1E0C80A78](v33);
  v253 = (uint64_t)&v228 - v37;
  v38 = MEMORY[0x1E0C80A78](v36);
  v236 = (uint64_t)&v228 - v39;
  v40 = MEMORY[0x1E0C80A78](v38);
  v232 = (uint64_t)&v228 - v41;
  v42 = MEMORY[0x1E0C80A78](v40);
  v252 = (uint64_t)&v228 - v43;
  v45 = *(_QWORD *)(v44 + 72);
  if (!v45)
  {
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
    goto LABEL_147;
  }
  v46 = v264 - a1;
  if (v264 - a1 == 0x8000000000000000 && v45 == -1)
    goto LABEL_145;
  v48 = v243 - v264;
  if (v243 - v264 == 0x8000000000000000 && v45 == -1)
    goto LABEL_146;
  v241 = v30;
  v240 = v21;
  v254 = v42;
  v256 = v13;
  v50 = v46 / v45;
  v51 = v48 / v45;
  v52 = v45;
  v248 = v45;
  if (v46 / v45 < v48 / v45)
  {
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, v50, a4);
    v244 = a4 + v50 * v52;
    if (v50 * v52 < 1 || v264 >= v243)
    {
      v54 = v52;
LABEL_18:
      v264 = a1;
      v55 = v244;
      goto LABEL_139;
    }
    v58 = (uint64_t)v240;
    v59 = (uint64_t)v241;
    v60 = v232;
    while (1)
    {
      v61 = v257;
      v62 = v252;
      outlined init with copy of ConversationControlsAction(v264, v252, type metadata accessor for Participant);
      outlined init with copy of ConversationControlsAction(a4, v60, type metadata accessor for Participant);
      v63 = v62;
      v64 = (uint64_t)v238;
      outlined init with copy of ConversationControlsAction(v63, (uint64_t)v238, type metadata accessor for Participant.State);
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        v65 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        v66 = v64 + *(int *)(v65 + 48);
        outlined consume of Participant.CopresenceInfo?(*(_QWORD *)(v64 + *(int *)(v65 + 64)), *(_QWORD *)(v64 + *(int *)(v65 + 64) + 8));
        v67 = v249;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v255 + 32))(v249, v64, v61);
        v68 = v66;
        v59 = (uint64_t)v241;
        outlined destroy of Participant.MediaInfo(v68);
        v69 = 0;
      }
      else
      {
        outlined destroy of AccountUpdateNotice(v64, type metadata accessor for Participant.State);
        v69 = 1;
        v67 = v249;
      }
      __swift_storeEnumTagSinglePayload(v67, v69, 1, v61);
      outlined init with copy of ConversationControlsAction(v60, v58, type metadata accessor for Participant.State);
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        v70 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        v71 = v58 + *(int *)(v70 + 48);
        outlined consume of Participant.CopresenceInfo?(*(_QWORD *)(v58 + *(int *)(v70 + 64)), *(_QWORD *)(v58 + *(int *)(v70 + 64) + 8));
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v255 + 32))(v59, v58, v257);
        outlined destroy of Participant.MediaInfo(v71);
        v72 = 0;
      }
      else
      {
        outlined destroy of AccountUpdateNotice(v58, type metadata accessor for Participant.State);
        v72 = 1;
      }
      v73 = v257;
      __swift_storeEnumTagSinglePayload(v59, v72, 1, v257);
      v74 = v246;
      v75 = v246 + *(int *)(v251 + 48);
      outlined init with take of Date?(v249, v246);
      outlined init with take of Date?(v59, v75);
      LODWORD(v74) = __swift_getEnumTagSinglePayload(v74, 1, v73);
      EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v75, 1, v73);
      if ((_DWORD)v74 == 1)
        break;
      if (EnumTagSinglePayload == 1)
      {
        (*(void (**)(uint64_t, uint64_t))(v255 + 8))(v246, v257);
        outlined destroy of AccountUpdateNotice(v60, type metadata accessor for Participant);
        outlined destroy of AccountUpdateNotice(v252, type metadata accessor for Participant);
        goto LABEL_57;
      }
      v95 = a4;
      v96 = v257;
      v97 = v255;
      v98 = *(void (**)(uint64_t, uint64_t, uint64_t))(v255 + 32);
      v99 = v233;
      v98(v233, v246, v257);
      v100 = v234;
      v98(v234, v75, v96);
      v101 = static Date.< infix(_:_:)();
      v102 = *(void (**)(uint64_t, uint64_t))(v97 + 8);
      v103 = v96;
      a4 = v95;
      v60 = v232;
      v102(v100, v103);
      v104 = v99;
      v59 = (uint64_t)v241;
      v102(v104, v103);
LABEL_56:
      outlined destroy of AccountUpdateNotice(v60, type metadata accessor for Participant);
      outlined destroy of AccountUpdateNotice(v252, type metadata accessor for Participant);
      if ((v101 & 1) == 0)
        goto LABEL_63;
LABEL_57:
      v54 = v248;
      v139 = v264 + v248;
      if (a1 >= v264 && a1 < v139)
      {
        v58 = (uint64_t)v240;
        if (a1 != v264)
        {
          swift_arrayInitWithTakeBackToFront();
          v54 = v248;
        }
        goto LABEL_76;
      }
      swift_arrayInitWithTakeFrontToBack();
      v54 = v248;
LABEL_75:
      v58 = (uint64_t)v240;
LABEL_76:
      a1 += v54;
      v143 = a4 >= v244 || v139 >= v243;
      v264 = v139;
      if (v143)
        goto LABEL_18;
    }
    if (EnumTagSinglePayload != 1)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v75, (uint64_t *)&demangling cache variable for type metadata for Date?);
      outlined destroy of AccountUpdateNotice(v60, type metadata accessor for Participant);
      outlined destroy of AccountUpdateNotice(v252, type metadata accessor for Participant);
LABEL_63:
      v54 = v248;
      v141 = a4 + v248;
      if (a1 >= a4 && a1 < v141)
      {
        if (a1 != a4)
        {
          swift_arrayInitWithTakeBackToFront();
LABEL_73:
          v54 = v248;
        }
        v139 = v264;
        a4 = v141;
        goto LABEL_75;
      }
      swift_arrayInitWithTakeFrontToBack();
      goto LABEL_73;
    }
    v77 = *(void **)(v252 + *(int *)(v254 + 28));
    v235 = a4;
    v247 = a1;
    if (v77)
    {
      v78 = v77;
      outlined bridged method (pb) of @objc TUHandle.siriDisplayName.getter(v78);
      if (v80)
      {
        v81 = v79;
        v82 = v80;
        if ((objc_msgSend(v78, sel_shouldHideContact) & 1) != 0)
        {
          v253 = v81;
          swift_bridgeObjectRetain();
          v83 = v229;
          PersonNameComponents.init()();
          PersonNameComponents.givenName.setter();
          PersonNameComponents.familyName.setter();
          if (one-time initialization token for initials != -1)
            swift_once();
          swift_beginAccess();
          v84 = (id)static NSPersonNameComponentsFormatter.initials;
          isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
          v86 = v83;
          v87 = objc_msgSend(v84, sel_stringFromPersonNameComponents_, isa);

          v88 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)();
          v90 = v89;

          (*(void (**)(uint64_t, uint64_t))(v230 + 8))(v86, v231);
          v260 = v88;
          v261 = v90;
          lazy protocol witness table accessor for type String and conformance String();
          StringProtocol.localizedUppercase.getter();
          v250 = (char *)v91;

          swift_bridgeObjectRelease();
          v92 = 0;
          v93 = v253;
          v94 = v254;
LABEL_46:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          v258 = v93;
          v259 = v82;
          v114 = *(void **)(v60 + *(int *)(v94 + 28));
          v253 = v82;
          if (v114)
          {
            v115 = v114;
            outlined bridged method (pb) of @objc TUHandle.siriDisplayName.getter(v115);
            if (v117)
            {
              v118 = v116;
              v119 = v117;
              if ((objc_msgSend(v115, sel_shouldHideContact) & 1) != 0)
              {
                v250 = (char *)v118;
                swift_bridgeObjectRetain();
                v120 = v229;
                PersonNameComponents.init()();
                PersonNameComponents.givenName.setter();
                PersonNameComponents.familyName.setter();
                a1 = v247;
                if (one-time initialization token for initials != -1)
                  swift_once();
                swift_beginAccess();
                v121 = (id)static NSPersonNameComponentsFormatter.initials;
                v122 = PersonNameComponents._bridgeToObjectiveC()().super.isa;
                v123 = objc_msgSend(v121, sel_stringFromPersonNameComponents_, v122);

                v124 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)();
                v126 = v125;

                (*(void (**)(uint64_t, uint64_t))(v230 + 8))(v120, v231);
                v260 = v124;
                v261 = v126;
                lazy protocol witness table accessor for type String and conformance String();
                StringProtocol.localizedUppercase.getter();

                swift_bridgeObjectRelease();
                v127 = 0;
                v128 = v250;
                goto LABEL_55;
              }

              swift_bridgeObjectRelease();
            }
            else
            {

            }
          }
          v129 = v236;
          outlined init with copy of ConversationControlsAction(v60, v236, type metadata accessor for Participant);
          swift_retain();
          ParticipantContactDetailsCache.contactDetails(for:)(v129, v130, v131, v132, v133, v134, v135, v136, v228, v229, v230, v231, v232, v233, v234, v235, v236, v237, (uint64_t)v238,
            v239);
          v127 = v260;
          v128 = v261;
          v119 = (char *)v262;
          v137 = v260;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_release();
          outlined destroy of AccountUpdateNotice(v129, type metadata accessor for Participant);
          a1 = v247;
LABEL_55:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          v260 = v128;
          v261 = v119;
          lazy protocol witness table accessor for type String and conformance String();
          v138 = StringProtocol.localizedCompare<A>(_:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v101 = v138 == 1;
          a4 = v235;
          v59 = (uint64_t)v241;
          goto LABEL_56;
        }

        swift_bridgeObjectRelease();
      }
      else
      {

      }
    }
    v105 = v236;
    outlined init with copy of ConversationControlsAction(v252, v236, type metadata accessor for Participant);
    v94 = v254;
    swift_retain();
    ParticipantContactDetailsCache.contactDetails(for:)(v105, v106, v107, v108, v109, v110, v111, v112, v228, v229, v230, v231, v232, v233, v234, v235, v236, v237, (uint64_t)v238,
      v239);
    v92 = v260;
    v93 = (uint64_t)v261;
    v82 = v262;
    v250 = (char *)v263;
    v113 = v260;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_release();
    outlined destroy of AccountUpdateNotice(v105, type metadata accessor for Participant);
    goto LABEL_46;
  }
  v56 = v264;
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(v264, v48 / v45, a4);
  v57 = v51 * v52 < 1 || a1 >= v56;
  v54 = v52;
  if (v57)
  {
    v55 = a4 + v51 * v52;
    goto LABEL_139;
  }
  v249 = -v52;
  v235 = a4;
  v247 = a1;
  v55 = a4 + v51 * v52;
  v241 = v16;
  v144 = v243;
  v242 = v35;
  do
  {
    v145 = v257;
    v146 = a4;
    v252 = v144;
    v147 = v249;
    v246 = v55 + v249;
    v148 = v253;
    outlined init with copy of ConversationControlsAction(v55 + v249, v253, type metadata accessor for Participant);
    v243 = v264 + v147;
    outlined init with copy of ConversationControlsAction(v264 + v147, (uint64_t)v35, type metadata accessor for Participant);
    v149 = v239;
    outlined init with copy of ConversationControlsAction(v148, v239, type metadata accessor for Participant.State);
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      v150 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      v151 = v149 + *(int *)(v150 + 48);
      outlined consume of Participant.CopresenceInfo?(*(_QWORD *)(v149 + *(int *)(v150 + 64)), *(_QWORD *)(v149 + *(int *)(v150 + 64) + 8));
      v152 = (uint64_t)v250;
      v153 = v145;
      (*(void (**)(char *, uint64_t, uint64_t))(v255 + 32))(v250, v149, v145);
      outlined destroy of Participant.MediaInfo(v151);
      v154 = 0;
    }
    else
    {
      outlined destroy of AccountUpdateNotice(v149, type metadata accessor for Participant.State);
      v154 = 1;
      v152 = (uint64_t)v250;
      v153 = v145;
    }
    __swift_storeEnumTagSinglePayload(v152, v154, 1, v153);
    v35 = v242;
    outlined init with copy of ConversationControlsAction((uint64_t)v242, (uint64_t)v16, type metadata accessor for Participant.State);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v156 = v237;
    if (EnumCaseMultiPayload == 4)
    {
      v157 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      v158 = (uint64_t)&v16[*(int *)(v157 + 48)];
      outlined consume of Participant.CopresenceInfo?(*(_QWORD *)&v16[*(int *)(v157 + 64)], *(_QWORD *)&v16[*(int *)(v157 + 64) + 8]);
      (*(void (**)(uint64_t, char *, uint64_t))(v255 + 32))(v156, v16, v153);
      outlined destroy of Participant.MediaInfo(v158);
      v159 = 0;
    }
    else
    {
      outlined destroy of AccountUpdateNotice((uint64_t)v16, type metadata accessor for Participant.State);
      v159 = 1;
    }
    __swift_storeEnumTagSinglePayload(v156, v159, 1, v153);
    v160 = v245;
    v161 = v245 + *(int *)(v251 + 48);
    outlined init with take of Date?((uint64_t)v250, v245);
    outlined init with take of Date?(v156, v161);
    LODWORD(v160) = __swift_getEnumTagSinglePayload(v160, 1, v153);
    v162 = __swift_getEnumTagSinglePayload(v161, 1, v153);
    a4 = v146;
    if ((_DWORD)v160 != 1)
    {
      v163 = v247;
      if (v162 == 1)
      {
        (*(void (**)(uint64_t, uint64_t))(v255 + 8))(v245, v145);
        v180 = 1;
      }
      else
      {
        v181 = v55;
        v182 = v255;
        v183 = *(void (**)(uint64_t, uint64_t, uint64_t))(v255 + 32);
        v184 = v233;
        v183(v233, v245, v145);
        v185 = v234;
        v183(v234, v161, v145);
        v180 = static Date.< infix(_:_:)();
        v186 = *(void (**)(uint64_t, uint64_t))(v182 + 8);
        v35 = v242;
        v186(v185, v145);
        v186(v184, v145);
        v55 = v181;
      }
      goto LABEL_113;
    }
    v163 = v247;
    v164 = v252;
    if (v162 != 1)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v161, (uint64_t *)&demangling cache variable for type metadata for Date?);
      v180 = 0;
      v16 = v241;
      goto LABEL_114;
    }
    v165 = v254;
    v166 = *(void **)(v253 + *(int *)(v254 + 28));
    v244 = v55;
    if (!v166)
      goto LABEL_102;
    v167 = v166;
    outlined bridged method (pb) of @objc TUHandle.siriDisplayName.getter(v167);
    if (!v169)
    {

LABEL_102:
      v187 = v236;
      outlined init with copy of ConversationControlsAction(v253, v236, type metadata accessor for Participant);
      swift_retain();
      ParticipantContactDetailsCache.contactDetails(for:)(v187, v188, v189, v190, v191, v192, v193, v194, v228, v229, v230, v231, v232, v233, v234, v235, v236, v237, (uint64_t)v238,
        v239);
      v179 = v260;
      v170 = (uint64_t)v261;
      v171 = (char *)v262;
      v195 = v260;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      v165 = v254;
      swift_release();
      outlined destroy of AccountUpdateNotice(v187, type metadata accessor for Participant);
      goto LABEL_103;
    }
    v170 = v168;
    v171 = v169;
    if ((objc_msgSend(v167, sel_shouldHideContact) & 1) == 0)
    {

      swift_bridgeObjectRelease();
      goto LABEL_102;
    }
    swift_bridgeObjectRetain();
    v172 = v229;
    PersonNameComponents.init()();
    PersonNameComponents.givenName.setter();
    PersonNameComponents.familyName.setter();
    if (one-time initialization token for initials != -1)
      swift_once();
    swift_beginAccess();
    v173 = (id)static NSPersonNameComponentsFormatter.initials;
    v174 = PersonNameComponents._bridgeToObjectiveC()().super.isa;
    v175 = objc_msgSend(v173, sel_stringFromPersonNameComponents_, v174);

    v176 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)();
    v178 = v177;

    (*(void (**)(uint64_t, uint64_t))(v230 + 8))(v172, v231);
    v260 = v176;
    v261 = v178;
    lazy protocol witness table accessor for type String and conformance String();
    StringProtocol.localizedUppercase.getter();

    swift_bridgeObjectRelease();
    v179 = 0;
LABEL_103:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v258 = v170;
    v259 = (uint64_t)v171;
    v196 = *(void **)&v35[*(int *)(v165 + 28)];
    v240 = v171;
    if (v196)
    {
      v197 = v196;
      outlined bridged method (pb) of @objc TUHandle.siriDisplayName.getter(v197);
      if (v199)
      {
        v200 = v198;
        v201 = v199;
        if ((objc_msgSend(v197, sel_shouldHideContact) & 1) != 0)
        {
          v238 = (char *)v200;
          swift_bridgeObjectRetain();
          v202 = v229;
          PersonNameComponents.init()();
          PersonNameComponents.givenName.setter();
          PersonNameComponents.familyName.setter();
          a4 = v235;
          v163 = v247;
          if (one-time initialization token for initials != -1)
            swift_once();
          swift_beginAccess();
          v203 = (id)static NSPersonNameComponentsFormatter.initials;
          v204 = PersonNameComponents._bridgeToObjectiveC()().super.isa;
          v205 = objc_msgSend(v203, sel_stringFromPersonNameComponents_, v204);

          v206 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)();
          v208 = v207;

          (*(void (**)(uint64_t, uint64_t))(v230 + 8))(v202, v231);
          v260 = v206;
          v261 = v208;
          lazy protocol witness table accessor for type String and conformance String();
          StringProtocol.localizedUppercase.getter();

          swift_bridgeObjectRelease();
          v209 = 0;
          v210 = v238;
          goto LABEL_112;
        }

        swift_bridgeObjectRelease();
      }
      else
      {

      }
    }
    v211 = v236;
    outlined init with copy of ConversationControlsAction((uint64_t)v35, v236, type metadata accessor for Participant);
    swift_retain();
    ParticipantContactDetailsCache.contactDetails(for:)(v211, v212, v213, v214, v215, v216, v217, v218, v228, v229, v230, v231, v232, v233, v234, v235, v236, v237, (uint64_t)v238,
      v239);
    v209 = v260;
    v210 = v261;
    v201 = (char *)v262;
    v219 = v260;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_release();
    outlined destroy of AccountUpdateNotice(v211, type metadata accessor for Participant);
    a4 = v235;
    v163 = v247;
LABEL_112:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v260 = v210;
    v261 = v201;
    lazy protocol witness table accessor for type String and conformance String();
    v220 = StringProtocol.localizedCompare<A>(_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v180 = v220 == 1;
    v55 = v244;
LABEL_113:
    v16 = v241;
    v164 = v252;
LABEL_114:
    v221 = v164 + v249;
    outlined destroy of AccountUpdateNotice((uint64_t)v35, type metadata accessor for Participant);
    outlined destroy of AccountUpdateNotice(v253, type metadata accessor for Participant);
    if ((v180 & 1) != 0)
    {
      v222 = v164 < v264 || v221 >= v264;
      v144 = v221;
      if (v222)
      {
        v223 = v243;
        swift_arrayInitWithTakeFrontToBack();
LABEL_129:
        v264 = v223;
        continue;
      }
      if (v164 != v264)
      {
        v223 = v243;
        swift_arrayInitWithTakeBackToFront();
        goto LABEL_129;
      }
      v264 = v243;
    }
    else
    {
      v224 = v164 < v55 || v221 >= v55;
      v144 = v221;
      if (v224)
      {
        v55 = v246;
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (v164 == v55)
      {
        v55 = v246;
      }
      else
      {
        v55 = v246;
        swift_arrayInitWithTakeBackToFront();
      }
    }
  }
  while (v55 > a4 && v264 > v163);
  v54 = v248;
LABEL_139:
  v226 = v55 - a4;
  if (v54 != -1 || v226 != 0x8000000000000000)
  {
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(a4, v226 / v54, v264);
    return;
  }
LABEL_147:
  __break(1u);
}

{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  int64_t v17;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v23;
  uint64_t v24;
  void (*v26)(char *);
  char *v27;
  uint64_t v28;
  void (*v29)(char *);
  unint64_t v30;
  unint64_t v31;
  char *v32;
  void (*v33)(char *, uint64_t);
  unint64_t v35;
  unint64_t v37;
  char *v39;
  char *v40;
  unint64_t v41;
  void (*v42)(char *, unint64_t, uint64_t);
  char v43;
  void (*v44)(char *, uint64_t);
  unint64_t v45;
  unint64_t v47;
  BOOL v49;
  int64_t v50;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  void (*v55)(char *);
  uint64_t v56;
  void (*v57)(char *, unint64_t, uint64_t);
  unint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;

  v9 = type metadata accessor for IndexPath();
  v10 = MEMORY[0x1E0C80A78](v9);
  v60 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v59 = (char *)&v52 - v13;
  v61 = v12;
  v14 = *(_QWORD *)(v12 + 72);
  if (!v14)
  {
    __break(1u);
LABEL_80:
    __break(1u);
LABEL_81:
    __break(1u);
    goto LABEL_82;
  }
  v15 = a2 - a1;
  if (a2 - a1 == 0x8000000000000000 && v14 == -1)
    goto LABEL_80;
  v17 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v14 == -1)
    goto LABEL_81;
  v19 = v15 / v14;
  v20 = v17 / v14;
  v62 = *(_QWORD *)(v12 + 72);
  if (v15 / v14 >= v17 / v14)
  {
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(a2, v17 / v14, a4);
    v24 = v20 * v14;
    v23 = a2;
    v21 = a4 + v24;
    if (v24 < 1 || a1 >= a2)
      goto LABEL_74;
    v52 = v4;
    v53 = a1;
    v56 = -v14;
    v26 = *(void (**)(char *))(v61 + 16);
    v54 = a4;
    v55 = v26;
    v27 = v59;
    while (1)
    {
      v29 = v55;
      v28 = v56;
      v30 = a3 + v56;
      v58 = v21 + v56;
      v31 = v21;
      v55(v27);
      v32 = v60;
      v57 = (void (*)(char *, unint64_t, uint64_t))(v23 + v28);
      v29(v60);
      _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type IndexPath and conformance IndexPath, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1658], MEMORY[0x1E0CB1678]);
      LOBYTE(v28) = dispatch thunk of static Comparable.< infix(_:_:)();
      v33 = *(void (**)(char *, uint64_t))(v61 + 8);
      v33(v32, v9);
      v33(v27, v9);
      if ((v28 & 1) != 0)
      {
        if (a3 < v23 || v30 >= v23)
        {
          v23 = (unint64_t)v57;
          swift_arrayInitWithTakeFrontToBack();
          v35 = v53;
          a4 = v54;
          v14 = v62;
LABEL_41:
          a3 = v30;
          goto LABEL_42;
        }
        v35 = v53;
        a4 = v54;
        v14 = v62;
        if (a3 == v23)
        {
          v23 = (unint64_t)v57;
          goto LABEL_41;
        }
        a3 = v30;
        v23 = (unint64_t)v57;
      }
      else
      {
        if (a3 < v31 || v30 >= v31)
        {
          v37 = v58;
          swift_arrayInitWithTakeFrontToBack();
          v21 = v37;
          v35 = v53;
          a4 = v54;
          v14 = v62;
LABEL_44:
          a3 = v30;
          goto LABEL_45;
        }
        v35 = v53;
        a4 = v54;
        v14 = v62;
        if (a3 == v31)
        {
          v21 = v58;
          goto LABEL_44;
        }
        a3 = v30;
        v31 = v58;
      }
      swift_arrayInitWithTakeBackToFront();
LABEL_42:
      v21 = v31;
LABEL_45:
      if (v21 <= a4 || v23 <= v35)
        goto LABEL_74;
    }
  }
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, v15 / v14, a4);
  v21 = a4 + v19 * v14;
  if (v19 * v14 < 1 || a2 >= a3)
  {
    v23 = a1;
  }
  else
  {
    v52 = v4;
    v39 = v60;
    v57 = *(void (**)(char *, unint64_t, uint64_t))(v61 + 16);
    v58 = a3;
    v40 = v59;
    do
    {
      v41 = v21;
      v42 = v57;
      v57(v40, a2, v9);
      v42(v39, a4, v9);
      _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type IndexPath and conformance IndexPath, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1658], MEMORY[0x1E0CB1678]);
      v43 = dispatch thunk of static Comparable.< infix(_:_:)();
      v44 = *(void (**)(char *, uint64_t))(v61 + 8);
      v44(v39, v9);
      v44(v40, v9);
      if ((v43 & 1) != 0)
      {
        v14 = v62;
        v45 = a2 + v62;
        if (a1 < a2 || a1 >= v45)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (a1 != a2)
        {
          swift_arrayInitWithTakeBackToFront();
        }
      }
      else
      {
        v47 = a4 + v62;
        if (a1 < a4 || a1 >= v47)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (a1 != a4)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        v45 = a2;
        a4 = v47;
        v14 = v62;
      }
      v21 = v41;
      a1 += v14;
      v49 = a4 >= v41 || v45 >= v58;
      a2 = v45;
    }
    while (!v49);
    v23 = a1;
  }
LABEL_74:
  v50 = v21 - a4;
  if (v14 != -1 || v50 != 0x8000000000000000)
  {
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(a4, v50 / v14, v23);
    return;
  }
LABEL_82:
  __break(1u);
}

{
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  int64_t v16;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  float v26;
  float v27;
  unint64_t v28;
  unint64_t v30;
  BOOL v32;
  unint64_t v33;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  float v45;
  float v46;
  uint64_t v47;
  unint64_t v50;
  int64_t v52;
  uint64_t v54;
  unint64_t v55;
  char *v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v59 = a3;
  v61 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
  MEMORY[0x1E0C80A78](v61);
  v8 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v54 - v10;
  v13 = *(_QWORD *)(v12 + 72);
  if (!v13)
  {
    __break(1u);
LABEL_75:
    __break(1u);
LABEL_76:
    __break(1u);
    goto LABEL_77;
  }
  v14 = a2 - a1;
  if (a2 - a1 == 0x8000000000000000 && v13 == -1)
    goto LABEL_75;
  v16 = v59 - a2;
  if (v59 - a2 == 0x8000000000000000 && v13 == -1)
    goto LABEL_76;
  v58 = a4;
  v18 = v14 / v13;
  v19 = v16 / v13;
  v60 = v13;
  if (v14 / v13 >= v16 / v13)
  {
    v33 = v58;
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(a2, v16 / v13);
    v21 = v33 + v19 * v13;
    if (v19 * v13 < 1 || a1 >= a2)
    {
      v20 = v33;
      goto LABEL_69;
    }
    v56 = v8;
    v57 = -v13;
    v35 = v59;
    v55 = a1;
    while (1)
    {
      v36 = v35;
      v37 = v57;
      v35 += v57;
      v38 = v21 + v57;
      v39 = v21;
      outlined init with copy of FeatureEligibility?(v21 + v57, (uint64_t)v11, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
      v40 = a2 + v37;
      v41 = (uint64_t)v11;
      v42 = (uint64_t)v56;
      outlined init with copy of FeatureEligibility?(v40, (uint64_t)v56, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
      v43 = *(int *)(v61 + 36);
      v44 = *(int *)(v61 + 48);
      v45 = *(float *)(v41 + v43) * *(float *)(v41 + v44);
      v46 = *(float *)(v42 + v43) * *(float *)(v42 + v44);
      v47 = v42;
      v11 = (char *)v41;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v47, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v41, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
      if (v46 >= v45)
      {
        if (v36 >= v39 && v35 < v39)
        {
          v20 = v58;
          v50 = v55;
          if (v36 != v39)
            swift_arrayInitWithTakeBackToFront();
          v21 = v38;
          v13 = v60;
          goto LABEL_65;
        }
        swift_arrayInitWithTakeFrontToBack();
        v21 = v38;
        v20 = v58;
        v13 = v60;
      }
      else
      {
        if (v36 >= a2 && v35 < a2)
        {
          v50 = v55;
          if (v36 != a2)
            swift_arrayInitWithTakeBackToFront();
          a2 = v40;
          v20 = v58;
          v13 = v60;
          v21 = v39;
          goto LABEL_65;
        }
        swift_arrayInitWithTakeFrontToBack();
        a2 = v40;
        v20 = v58;
        v13 = v60;
        v21 = v39;
      }
      v50 = v55;
LABEL_65:
      if (v21 <= v20 || a2 <= v50)
        goto LABEL_69;
    }
  }
  v20 = v58;
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, v14 / v13);
  v21 = v20 + v18 * v13;
  if (v18 * v13 >= 1 && a2 < v59)
  {
    do
    {
      v23 = v21;
      outlined init with copy of FeatureEligibility?(a2, (uint64_t)v11, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
      outlined init with copy of FeatureEligibility?(v20, (uint64_t)v8, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
      v24 = *(int *)(v61 + 36);
      v25 = *(int *)(v61 + 48);
      v26 = *(float *)&v11[v24] * *(float *)&v11[v25];
      v27 = *(float *)&v8[v24] * *(float *)&v8[v25];
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v8, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v11, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
      if (v27 >= v26)
      {
        v30 = v20 + v13;
        if (a1 < v20 || a1 >= v30)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (a1 != v20)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        v28 = a2;
        v20 = v30;
        v13 = v60;
      }
      else
      {
        v28 = a2 + v13;
        if (a1 < a2 || a1 >= v28)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (a1 != a2)
        {
          swift_arrayInitWithTakeBackToFront();
        }
      }
      v21 = v23;
      a1 += v13;
      v32 = v20 >= v23 || v28 >= v59;
      a2 = v28;
    }
    while (!v32);
  }
LABEL_69:
  v52 = v21 - v20;
  if (v13 != -1 || v52 != 0x8000000000000000)
  {
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(v20, v52 / v13);
    return;
  }
LABEL_77:
  __break(1u);
}

uint64_t outlined consume of Set<TUHandle>.Index._Variant(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1BD0A0548()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t outlined init with take of (offset: Int, element: CaptionSectioner.Caption)?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (offset: Int, element: CaptionSectioner.Caption)?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of CaptionSectioner.Caption?(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CaptionSectioner.Caption?);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t partial apply for closure #1 in closure #1 in CaptionSectioner.gatherAndSortCaptions()@<X0>(char *a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;

  return closure #1 in closure #1 in CaptionSectioner.gatherAndSortCaptions()(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t outlined copy of Participant.CaptionInfo?(uint64_t result)
{
  if (result)
  {
    swift_unknownObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_87_2()
{
  return type metadata accessor for CaptionSectioner.Caption(0);
}

uint64_t OUTLINED_FUNCTION_102_0()
{
  return type metadata accessor for CaptionSectioner.Caption(0);
}

void OUTLINED_FUNCTION_104_0()
{
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t CallScreening.CallStateObserver.logger.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_17_2();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t CallScreening.CallStateObserver.stateMachine.getter()
{
  OUTLINED_FUNCTION_4_29();
  return swift_retain();
}

uint64_t type metadata accessor for CallScreening.CallStateObserver()
{
  uint64_t result;

  result = type metadata singleton initialization cache for CallScreening.CallStateObserver;
  if (!type metadata singleton initialization cache for CallScreening.CallStateObserver)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t CallScreening.CallStateObserver.statusService.getter()
{
  OUTLINED_FUNCTION_4_29();
  return swift_retain();
}

void CallScreening.CallStateObserver.start(onCallStatusUpdate:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;

  v5 = OUTLINED_FUNCTION_4_29();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  static TaskPriority.userInitiated.getter();
  v12 = type metadata accessor for TaskPriority();
  __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v12);
  outlined init with copy of CallScreening.CallStateObserver(v2, (uint64_t)v8);
  type metadata accessor for MainActor();
  swift_retain();
  v13 = static MainActor.shared.getter();
  v14 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v15 = (v7 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  v16 = swift_allocObject();
  v17 = MEMORY[0x1E0DF06E8];
  *(_QWORD *)(v16 + 16) = v13;
  *(_QWORD *)(v16 + 24) = v17;
  outlined init with take of CallScreening.CallStateObserver((uint64_t)v8, v16 + v14);
  v18 = (_QWORD *)(v16 + v15);
  *v18 = a1;
  v18[1] = a2;
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
}

uint64_t closure #1 in CallScreening.CallStateObserver.start(onCallStatusUpdate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6[23] = a5;
  v6[24] = a6;
  v6[22] = a4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncPublisher<PassthroughSubject<AnsweringMachineCallStatus, Never>>);
  v6[25] = v7;
  v6[26] = *(_QWORD *)(v7 - 8);
  v6[27] = swift_task_alloc();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncPublisher<PassthroughSubject<AnsweringMachineCallStatus, Never>>.Iterator);
  v6[28] = v8;
  v6[29] = *(_QWORD *)(v8 - 8);
  v6[30] = swift_task_alloc();
  v9 = type metadata accessor for CallScreening.CallStateObserver();
  v6[31] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v6[32] = v10;
  v6[33] = *(_QWORD *)(v10 + 64);
  v6[34] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  v6[35] = swift_task_alloc();
  v11 = type metadata accessor for Logger();
  v6[36] = v11;
  v6[37] = *(_QWORD *)(v11 - 8);
  v6[38] = swift_task_alloc();
  v6[39] = swift_task_alloc();
  v6[40] = swift_task_alloc();
  v6[41] = type metadata accessor for MainActor();
  v6[42] = static MainActor.shared.getter();
  v6[43] = dispatch thunk of Actor.unownedExecutor.getter();
  v6[44] = v12;
  return swift_task_switch();
}

uint64_t closure #1 in CallScreening.CallStateObserver.start(onCallStatusUpdate:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t, uint64_t);
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  OUTLINED_FUNCTION_17_21();
  v1 = v0[40];
  v2 = v0[36];
  v3 = v0[22];
  v4 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0[37] + 16);
  v0[45] = v4;
  v4(v1, v3, v2);
  v5 = Logger.logObject.getter();
  v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    *(_WORD *)OUTLINED_FUNCTION_105() = 0;
    OUTLINED_FUNCTION_7_5(&dword_1BD004000, v5, v7, "Started listening to call state changes for StateMachine");
    OUTLINED_FUNCTION_60();
  }
  v8 = v0[40];
  v10 = v0[36];
  v9 = v0[37];
  v12 = v0[34];
  v11 = v0[35];
  v25 = v0[32];
  v13 = v0[27];
  v28 = v0[26];
  v26 = v0[31];
  v27 = v0[25];
  v14 = v0[22];

  v15 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  v0[46] = v15;
  v15(v8, v10);
  v16 = type metadata accessor for TaskPriority();
  __swift_storeEnumTagSinglePayload(v11, 1, 1, v16);
  outlined init with copy of CallScreening.CallStateObserver(v14, v12);
  v17 = static MainActor.shared.getter();
  v18 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  v19 = swift_allocObject();
  v20 = MEMORY[0x1E0DF06E8];
  *(_QWORD *)(v19 + 16) = v17;
  *(_QWORD *)(v19 + 24) = v20;
  outlined init with take of CallScreening.CallStateObserver(v12, v19 + v18);
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
  swift_release();
  v0[18] = *(_QWORD *)(*(_QWORD *)(v14 + *(int *)(v26 + 24)) + 16);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PassthroughSubject<AnsweringMachineCallStatus, Never>);
  v22 = lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type PassthroughSubject<AnsweringMachineCallStatus, Never> and conformance PassthroughSubject<A, B>, &demangling cache variable for type metadata for PassthroughSubject<AnsweringMachineCallStatus, Never>, MEMORY[0x1E0C95F48]);
  MEMORY[0x1C3B71234](v21, v22);
  AsyncPublisher.makeAsyncIterator()();
  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v13, v27);
  v0[47] = static MainActor.shared.getter();
  lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type AsyncPublisher<PassthroughSubject<AnsweringMachineCallStatus, Never>>.Iterator and conformance AsyncPublisher<A>.Iterator, &demangling cache variable for type metadata for AsyncPublisher<PassthroughSubject<AnsweringMachineCallStatus, Never>>.Iterator, MEMORY[0x1E0C95E78]);
  v23 = (_QWORD *)swift_task_alloc();
  v0[48] = v23;
  *v23 = v0;
  v23[1] = closure #1 in CallScreening.CallStateObserver.start(onCallStatusUpdate:);
  return OUTLINED_FUNCTION_3_33();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  *(_QWORD *)(*v1 + 392) = v0;
  swift_task_dealloc();
  v3 = *(_QWORD *)(v2 + 376);
  if (v0)
  {
    if (v3)
      goto LABEL_5;
  }
  else if (v3)
  {
LABEL_5:
    swift_getObjectType();
    dispatch thunk of Actor.unownedExecutor.getter();
  }
  return OUTLINED_FUNCTION_0_6();
}

{
  swift_release();
  return OUTLINED_FUNCTION_4_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 80);
  *(_QWORD *)(v0 + 400) = v1;
  *(_QWORD *)(v0 + 408) = v2;
  v3 = *(_QWORD *)(v0 + 88);
  v4 = *(_QWORD *)(v0 + 96);
  *(_QWORD *)(v0 + 416) = v3;
  *(_QWORD *)(v0 + 424) = v4;
  v5 = *(_QWORD *)(v0 + 104);
  v6 = *(_QWORD *)(v0 + 112);
  *(_QWORD *)(v0 + 432) = v5;
  *(_QWORD *)(v0 + 440) = v6;
  v7 = *(_BYTE *)(v0 + 120);
  *(_BYTE *)(v0 + 65) = v7;
  if (v2)
  {
    v8 = *(_QWORD *)(v0 + 248);
    *(_QWORD *)(v0 + 16) = v1;
    *(_QWORD *)(v0 + 24) = v2;
    *(_QWORD *)(v0 + 32) = v3;
    *(_QWORD *)(v0 + 40) = v4;
    *(_BYTE *)(v0 + 48) = v5;
    *(_BYTE *)(v0 + 49) = BYTE1(v5) & 1;
    *(_BYTE *)(v0 + 50) = BYTE2(v5) & 1;
    *(_BYTE *)(v0 + 51) = BYTE3(v5) & 1;
    *(_QWORD *)(v0 + 56) = v6;
    *(_BYTE *)(v0 + 64) = v7 & 1;
    *(_DWORD *)(v0 + 68) = *(_DWORD *)(v8 + 20);
    v9 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 448) = v9;
    v10 = OUTLINED_FUNCTION_19_12(v9, (uint64_t)closure #1 in CallScreening.CallStateObserver.start(onCallStatusUpdate:));
    return CKStateMachine<>.update(with:)(v10);
  }
  else
  {
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 360);
    v13 = *(_QWORD *)(v0 + 312);
    v14 = *(_QWORD *)(v0 + 288);
    v15 = *(_QWORD *)(v0 + 176);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 232) + 8))(*(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 224));
    OUTLINED_FUNCTION_43();
    v12(v13, v15, v14);
    v16 = Logger.logObject.getter();
    v17 = static os_log_type_t.default.getter();
    if (OUTLINED_FUNCTION_23_5(v17))
    {
      *(_WORD *)OUTLINED_FUNCTION_105() = 0;
      OUTLINED_FUNCTION_7_5(&dword_1BD004000, v16, v18, "Stopped listening to call state changes for StateMachine");
      OUTLINED_FUNCTION_60();
    }
    v19 = *(void (**)(uint64_t, uint64_t))(v0 + 368);
    v20 = *(_QWORD *)(v0 + 312);
    v21 = *(_QWORD *)(v0 + 288);

    v19(v20, v21);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v5)(uint64_t);

  v2 = *v1;
  *(_QWORD *)(v2 + 456) = v0;
  swift_task_dealloc();
  if (v0)
  {
    outlined consume of AnsweringMachineCallStatus?(*(_QWORD *)(v2 + 400), *(_QWORD *)(v2 + 408));
    return OUTLINED_FUNCTION_1_3();
  }
  else
  {
    v5 = (uint64_t (*)(uint64_t))(**(int **)(v2 + 184) + *(_QWORD *)(v2 + 184));
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v2 + 464) = v4;
    *v4 = v2;
    v4[1] = closure #1 in CallScreening.CallStateObserver.start(onCallStatusUpdate:);
    return v5(v2 + 16);
  }
}

{
  uint64_t v0;

  *(_QWORD *)(v0 + 152) = *(_QWORD *)(v0 + 392);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
  swift_dynamicCast();
  return swift_willThrowTypedImpl();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v0 + 400);
  v1 = *(_QWORD *)(*(_QWORD *)v0 + 408);
  swift_task_dealloc();
  outlined consume of AnsweringMachineCallStatus?(v2, v1);
  return OUTLINED_FUNCTION_0_6();
}

{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 376) = OUTLINED_FUNCTION_24_16();
  lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type AsyncPublisher<PassthroughSubject<AnsweringMachineCallStatus, Never>>.Iterator and conformance AsyncPublisher<A>.Iterator, &demangling cache variable for type metadata for AsyncPublisher<PassthroughSubject<AnsweringMachineCallStatus, Never>>.Iterator, MEMORY[0x1E0C95E78]);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 384) = v1;
  OUTLINED_FUNCTION_13_30(v1);
  return dispatch thunk of AsyncIteratorProtocol.next()();
}

{
  uint64_t v0;

  *(_QWORD *)(v0 + 472) = *(_QWORD *)(*(_QWORD *)(v0 + 176) + *(int *)(v0 + 68));
  if (one-time initialization token for shared != -1)
    swift_once();
  return OUTLINED_FUNCTION_4_4();
}

{
  _QWORD *v0;
  uint64_t v1;

  v0[16] = specialized CKStateMachine.description.getter();
  v0[17] = v1;
  v0[60] = v1;
  return OUTLINED_FUNCTION_4_4();
}

uint64_t closure #1 in CallScreening.CallStateObserver.start(onCallStatusUpdate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  id v31;
  void *v32;
  os_log_type_t v33;
  unint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v47;

  OUTLINED_FUNCTION_17_21();
  a25 = v27;
  a26 = v28;
  a24 = v26;
  v29 = *(void **)(v26 + 456);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v26 + 360))(*(_QWORD *)(v26 + 304), *(_QWORD *)(v26 + 176), *(_QWORD *)(v26 + 288));
  v30 = v29;
  swift_bridgeObjectRetain();
  v31 = v29;
  v32 = (void *)Logger.logObject.getter();
  v33 = static os_log_type_t.error.getter();
  if (OUTLINED_FUNCTION_4_11(v33))
  {
    v34 = *(_QWORD *)(v26 + 480);
    v35 = *(_QWORD *)(v26 + 128);
    v36 = *(void **)(v26 + 456);
    v37 = OUTLINED_FUNCTION_105();
    v47 = (_QWORD *)OUTLINED_FUNCTION_105();
    a15 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v37 = 136446466;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v26 + 160) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v35, v34, &a15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v37 + 12) = 2112;
    v38 = v36;
    v39 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v26 + 168) = v39;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *v47 = v39;
    OUTLINED_FUNCTION_10_9();
    OUTLINED_FUNCTION_10_9();
    OUTLINED_FUNCTION_14_16(&dword_1BD004000, v40, v41, "Failed to update %{public}s and recieved error: %@");
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }
  v42 = *(void (**)(uint64_t, uint64_t))(v26 + 368);
  v43 = *(_QWORD *)(v26 + 304);
  v44 = *(_QWORD *)(v26 + 288);
  OUTLINED_FUNCTION_30_5();
  swift_bridgeObjectRelease_n();
  OUTLINED_FUNCTION_30_5();
  OUTLINED_FUNCTION_30_5();

  v42(v43, v44);
  *(_QWORD *)(v26 + 376) = OUTLINED_FUNCTION_24_16();
  lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type AsyncPublisher<PassthroughSubject<AnsweringMachineCallStatus, Never>>.Iterator and conformance AsyncPublisher<A>.Iterator, &demangling cache variable for type metadata for AsyncPublisher<PassthroughSubject<AnsweringMachineCallStatus, Never>>.Iterator, MEMORY[0x1E0C95E78]);
  v45 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v26 + 384) = v45;
  OUTLINED_FUNCTION_13_30(v45);
  return OUTLINED_FUNCTION_3_33();
}

uint64_t outlined init with copy of CallScreening.CallStateObserver(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CallScreening.CallStateObserver();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BD0A1440()
{
  uint64_t v0;

  OUTLINED_FUNCTION_4_29();
  OUTLINED_FUNCTION_11_30();
  swift_unknownObjectRelease();
  v0 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_15_27(v0);
  OUTLINED_FUNCTION_18_29();
  OUTLINED_FUNCTION_18_29();
  swift_release();
  return OUTLINED_FUNCTION_6_10();
}

uint64_t outlined init with take of CallScreening.CallStateObserver(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CallScreening.CallStateObserver();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t partial apply for closure #1 in CallScreening.CallStateObserver.start(onCallStatusUpdate:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = *(_QWORD *)(OUTLINED_FUNCTION_4_29() - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v0 + v3;
  v5 = (uint64_t *)(v0 + ((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8));
  v6 = *v5;
  v7 = v5[1];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v8;
  v9 = OUTLINED_FUNCTION_20_27(v8);
  return closure #1 in CallScreening.CallStateObserver.start(onCallStatusUpdate:)(v9, v10, v11, v4, v6, v7);
}

uint64_t closure #1 in closure #1 in CallScreening.CallStateObserver.start(onCallStatusUpdate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[13] = a4;
  v5 = type metadata accessor for Logger();
  v4[14] = v5;
  v4[15] = *(_QWORD *)(v5 - 8);
  v4[16] = swift_task_alloc();
  v4[17] = swift_task_alloc();
  type metadata accessor for MainActor();
  v4[18] = static MainActor.shared.getter();
  v4[19] = dispatch thunk of Actor.unownedExecutor.getter();
  v4[20] = v6;
  return swift_task_switch();
}

uint64_t closure #1 in closure #1 in CallScreening.CallStateObserver.start(onCallStatusUpdate:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t, uint64_t);
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _QWORD *v18;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 104);
  v4 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 120) + 16);
  *(_QWORD *)(v0 + 168) = v4;
  v4(v1, v3, v2);
  v5 = Logger.logObject.getter();
  v6 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_23_5(v6))
  {
    *(_WORD *)OUTLINED_FUNCTION_105() = 0;
    OUTLINED_FUNCTION_7_5(&dword_1BD004000, v5, v7, "Injecting all current calls to Answering Machine");
    OUTLINED_FUNCTION_60();
  }
  v8 = *(_QWORD *)(v0 + 136);
  v9 = *(_QWORD *)(v0 + 112);
  v10 = *(_QWORD *)(v0 + 120);

  v11 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  *(_QWORD *)(v0 + 176) = v11;
  v11(v8, v9);
  v12 = OUTLINED_FUNCTION_4_29();
  v13 = CallStatusService.currentStatusForAllCalls()();
  *(_QWORD *)(v0 + 184) = v13;
  v14 = *(_QWORD *)(v13 + 16);
  *(_QWORD *)(v0 + 192) = v14;
  if (v14)
  {
    *(_DWORD *)(v0 + 68) = *(_DWORD *)(v12 + 20);
    *(_QWORD *)(v0 + 200) = 0;
    v16 = *(_OWORD *)(v13 + 48);
    v15 = *(_OWORD *)(v13 + 64);
    v17 = *(_OWORD *)(v13 + 32);
    *(_BYTE *)(v0 + 64) = *(_BYTE *)(v13 + 80);
    *(_OWORD *)(v0 + 32) = v16;
    *(_OWORD *)(v0 + 48) = v15;
    *(_OWORD *)(v0 + 16) = v17;
    outlined retain of AnsweringMachineCallStatus(v0 + 16);
    v18 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 208) = v18;
    *v18 = v0;
    v18[1] = closure #1 in closure #1 in CallScreening.CallStateObserver.start(onCallStatusUpdate:);
    return CKStateMachine<>.update(with:)(v0 + 16);
  }
  else
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_43();
    OUTLINED_FUNCTION_27_11();
    OUTLINED_FUNCTION_29_0();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 216) = v0;
  swift_task_dealloc();
  outlined release of AnsweringMachineCallStatus(v2 + 16);
  return OUTLINED_FUNCTION_1_3();
}

{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 200) + 1;
  if (v1 == *(_QWORD *)(v0 + 192))
  {
    OUTLINED_FUNCTION_25_21();
    OUTLINED_FUNCTION_43();
    OUTLINED_FUNCTION_27_11();
    OUTLINED_FUNCTION_29_0();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    OUTLINED_FUNCTION_2_44(v1);
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 208) = v3;
    v4 = OUTLINED_FUNCTION_19_12(v3, (uint64_t)closure #1 in closure #1 in CallScreening.CallStateObserver.start(onCallStatusUpdate:));
    return CKStateMachine<>.update(with:)(v4);
  }
}

{
  uint64_t v0;

  *(_QWORD *)(v0 + 224) = *(_QWORD *)(*(_QWORD *)(v0 + 104) + *(int *)(v0 + 68));
  if (one-time initialization token for shared != -1)
    swift_once();
  return OUTLINED_FUNCTION_4_4();
}

{
  _QWORD *v0;
  uint64_t v1;

  v0[9] = specialized CKStateMachine.description.getter();
  v0[10] = v1;
  v0[29] = v1;
  return OUTLINED_FUNCTION_4_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  os_log_type_t v7;
  unint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  OUTLINED_FUNCTION_17_21();
  v26 = v1;
  v27 = v2;
  v25 = v0;
  v3 = *(void **)(v0 + 216);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 168))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112));
  v4 = v3;
  swift_bridgeObjectRetain();
  v5 = v3;
  v6 = (void *)Logger.logObject.getter();
  v7 = static os_log_type_t.error.getter();
  if (OUTLINED_FUNCTION_4_11(v7))
  {
    v8 = *(_QWORD *)(v0 + 232);
    v9 = *(_QWORD *)(v0 + 72);
    v10 = *(void **)(v0 + 216);
    v11 = OUTLINED_FUNCTION_105();
    v23 = (_QWORD *)OUTLINED_FUNCTION_105();
    v24 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v11 = 136446466;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 88) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v9, v8, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v11 + 12) = 2112;
    v12 = v10;
    v13 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 96) = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *v23 = v13;
    OUTLINED_FUNCTION_30_10();
    OUTLINED_FUNCTION_30_10();
    OUTLINED_FUNCTION_14_16(&dword_1BD004000, v14, v15, "Failed to update %{public}s and recieved error: %@");
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }
  v16 = *(void (**)(uint64_t, uint64_t))(v0 + 176);
  v17 = *(_QWORD *)(v0 + 128);
  v18 = *(_QWORD *)(v0 + 112);
  OUTLINED_FUNCTION_10_9();
  swift_bridgeObjectRelease_n();
  OUTLINED_FUNCTION_10_9();
  OUTLINED_FUNCTION_10_9();

  v16(v17, v18);
  v19 = *(_QWORD *)(v0 + 200) + 1;
  if (v19 == *(_QWORD *)(v0 + 192))
  {
    OUTLINED_FUNCTION_25_21();
    OUTLINED_FUNCTION_43();
    OUTLINED_FUNCTION_27_11();
    OUTLINED_FUNCTION_29_0();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    OUTLINED_FUNCTION_2_44(v19);
    v21 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 208) = v21;
    v22 = OUTLINED_FUNCTION_19_12(v21, (uint64_t)closure #1 in closure #1 in CallScreening.CallStateObserver.start(onCallStatusUpdate:));
    return CKStateMachine<>.update(with:)(v22);
  }
}

void CallScreening.CallStateObserver.init(logger:stateMachine:statusService:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;

  v8 = OUTLINED_FUNCTION_17_2();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a4, a1, v8);
  v9 = OUTLINED_FUNCTION_4_29();
  *(_QWORD *)(a4 + *(int *)(v9 + 20)) = a2;
  *(_QWORD *)(a4 + *(int *)(v9 + 24)) = a3;
  OUTLINED_FUNCTION_18();
}

uint64_t *initializeBufferWithCopyOfBuffer for CallScreening.CallStateObserver(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = type metadata accessor for Logger();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v4, a2, v7);
    v8 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)v4 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    *(uint64_t *)((char *)v4 + v8) = *(uint64_t *)((char *)a2 + v8);
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t destroy for CallScreening.CallStateObserver(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Logger();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for CallScreening.CallStateObserver(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for Logger();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for CallScreening.CallStateObserver(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = type metadata accessor for Logger();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for CallScreening.CallStateObserver(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for Logger();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  return a1;
}

uint64_t assignWithTake for CallScreening.CallStateObserver(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = type metadata accessor for Logger();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_release();
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for CallScreening.CallStateObserver()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BD0A1EC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = OUTLINED_FUNCTION_17_2();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for CallScreening.CallStateObserver()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1BD0A1F48(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;

  v8 = OUTLINED_FUNCTION_17_2();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    __swift_storeEnumTagSinglePayload(a1, a2, a2, v8);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
    OUTLINED_FUNCTION_18();
  }
}

uint64_t type metadata completion function for CallScreening.CallStateObserver()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Logger();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BD0A2028()
{
  uint64_t v0;

  OUTLINED_FUNCTION_4_29();
  OUTLINED_FUNCTION_11_30();
  swift_unknownObjectRelease();
  v0 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_15_27(v0);
  OUTLINED_FUNCTION_18_29();
  OUTLINED_FUNCTION_18_29();
  return OUTLINED_FUNCTION_6_10();
}

uint64_t partial apply for closure #1 in closure #1 in CallScreening.CallStateObserver.start(onCallStatusUpdate:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(OUTLINED_FUNCTION_4_29() - 8) + 80);
  v3 = v0 + ((v2 + 32) & ~v2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  v5 = OUTLINED_FUNCTION_20_27(v4);
  return closure #1 in closure #1 in CallScreening.CallStateObserver.start(onCallStatusUpdate:)(v5, v6, v7, v3);
}

uint64_t outlined consume of AnsweringMachineCallStatus?(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

Swift::Void __swiftcall MomentsBackedViewControllerProtocol.setupMomentsViewsIfNecessary()()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  id v5;

  OUTLINED_FUNCTION_6_6();
  v2 = (void *)(*(uint64_t (**)(void))(v1 + 24))();
  if (v2)
  {
    v5 = v2;
    v3 = objc_msgSend(v2, sel_superview);

    if (!v3 && (OUTLINED_FUNCTION_5_28() & 1) != 0)
    {
      objc_msgSend(v5, sel_setUserInteractionEnabled_, 0);
      objc_msgSend(v5, sel_setAutoresizingMask_, 18);
      v4 = (void *)OUTLINED_FUNCTION_4_30(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
      objc_msgSend(v4, sel_addSubview_, v5);

    }
  }
}

Swift::Void __swiftcall MomentsBackedViewControllerProtocol.setupFlashViewsIfNecessary()()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;

  OUTLINED_FUNCTION_6_6();
  v1 = (void *)(*(uint64_t (**)(void))(v0 + 16))();
  v2 = objc_msgSend(v1, sel_superview);

  if (v2 || (OUTLINED_FUNCTION_5_28() & 1) == 0)
    goto LABEL_7;
  v3 = (void *)OUTLINED_FUNCTION_0_41();
  objc_msgSend(v3, sel_setUserInteractionEnabled_, 0);

  v4 = (void *)OUTLINED_FUNCTION_0_41();
  objc_msgSend(v4, sel_setAutoresizingMask_, 18);

  v5 = OUTLINED_FUNCTION_7_44();
  if (v5)
  {
    v6 = (void *)v5;
    v7 = (void *)OUTLINED_FUNCTION_0_41();
    objc_msgSend(v6, sel_addSubview_, v7);

  }
  v8 = OUTLINED_FUNCTION_7_44();
  if (v8)
  {
    v9 = (void *)v8;
    v10 = (void *)OUTLINED_FUNCTION_0_41();
    objc_msgSend(v9, sel_bringSubviewToFront_, v10);

    OUTLINED_FUNCTION_4_21(v10);
  }
  else
  {
LABEL_7:
    OUTLINED_FUNCTION_6_2();
  }
}

Swift::Void __swiftcall MomentsBackedViewControllerProtocol.bringMomentsAndFlashViewsToFrontIfNecessary()()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;

  OUTLINED_FUNCTION_6_6();
  if (((*(uint64_t (**)(void))(v1 + 32))() & 1) != 0
    && (v2 = (void *)OUTLINED_FUNCTION_4_30(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 24))) != 0)
  {
    v12 = v2;
    v3 = objc_msgSend(v2, sel_superview);

    if (v3)
    {
      v4 = (void *)OUTLINED_FUNCTION_0_41();
      v5 = objc_msgSend(v4, sel_superview);

      if (v5)
      {
        v6 = OUTLINED_FUNCTION_4_30(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 40));
        if (v6)
        {
          v7 = (void *)v6;
          v8 = (void *)OUTLINED_FUNCTION_3_34();
          objc_msgSend(v8, sel_insertSubview_belowSubview_, v12, v7);

        }
        else
        {
          v7 = (void *)OUTLINED_FUNCTION_3_34();
          objc_msgSend(v7, sel_bringSubviewToFront_, v12);
        }

        v9 = OUTLINED_FUNCTION_3_34();
        if (v9)
        {
          v10 = (void *)v9;
          v11 = (void *)OUTLINED_FUNCTION_0_41();
          objc_msgSend(v10, sel_bringSubviewToFront_, v11);

        }
      }
    }
    OUTLINED_FUNCTION_4_21(v12);
  }
  else
  {
    OUTLINED_FUNCTION_6_2();
  }
}

Swift::Void __swiftcall MomentsBackedViewControllerProtocol.remoteDidTakePhoto()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  void (*v6)(void (*)(), _QWORD *);

  OUTLINED_FUNCTION_6_6();
  v3 = (_QWORD *)(*(uint64_t (**)(void))(v2 + 16))();
  v4 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v5 = (_QWORD *)swift_allocObject();
  v5[2] = v1;
  v5[3] = v0;
  v5[4] = v4;
  v6 = *(void (**)(void (*)(), _QWORD *))((*MEMORY[0x1E0DEEDD8] & *v3) + 0x50);
  swift_retain();
  v6(partial apply for closure #1 in MomentsBackedViewControllerProtocol.remoteDidTakePhoto(), v5);

  swift_release();
  swift_release();
}

void closure #1 in MomentsBackedViewControllerProtocol.remoteDidTakePhoto()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  void *v11;
  _QWORD *v12;
  _QWORD *v13;

  v5 = a1 + 16;
  swift_beginAccess();
  if (MEMORY[0x1C3B752C0](v5))
  {
    v6 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 56))(a2, a3);
    if (v7)
    {
      v8 = v6;
      v9 = v7;
      v10 = (_QWORD *)(*(uint64_t (**)(uint64_t, uint64_t))(a3 + 24))(a2, a3);
      if (v10)
      {
        v11 = v10;
        v12 = (_QWORD *)MEMORY[0x1E0DEEDD8];
        v13 = (_QWORD *)(*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v10) + 0x68))();

        (*(void (**)(uint64_t, uint64_t, uint64_t))((*v12 & *v13) + 0x98))(2, v8, v9);
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();

      }
      else
      {
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
}

uint64_t sub_1BD0A25E8()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BD0A260C()
{
  swift_release();
  return swift_deallocObject();
}

void partial apply for closure #1 in MomentsBackedViewControllerProtocol.remoteDidTakePhoto()()
{
  uint64_t *v0;

  closure #1 in MomentsBackedViewControllerProtocol.remoteDidTakePhoto()(v0[4], v0[2], v0[3]);
}

uint64_t dispatch thunk of MomentsBackedViewControllerProtocol.underlyingView.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of MomentsBackedViewControllerProtocol.flashView.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of MomentsBackedViewControllerProtocol.insulatingView.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of MomentsBackedViewControllerProtocol.hasInitializedMomentsViews.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of MomentsBackedViewControllerProtocol.localLivePhotoAlertView.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of MomentsBackedViewControllerProtocol.shouldShowActionTypePhotoCapture.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of MomentsBackedViewControllerProtocol.nameForPhotoIndicator.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

BOOL static RecentsHeaderButtonsView.Action.== infix(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void RecentsHeaderButtonsView.Action.hash(into:)(uint64_t a1, char a2)
{
  Hasher._combine(_:)(a2 & 1);
  OUTLINED_FUNCTION_0();
}

Swift::Int RecentsHeaderButtonsView.Action.hashValue.getter(char a1)
{
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1 & 1);
  return Hasher._finalize()();
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance RecentsHeaderButtonsView.Action(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static RecentsHeaderButtonsView.Action.== infix(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance RecentsHeaderButtonsView.Action()
{
  char *v0;

  return RecentsHeaderButtonsView.Action.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance RecentsHeaderButtonsView.Action(uint64_t a1)
{
  char *v1;

  RecentsHeaderButtonsView.Action.hash(into:)(a1, *v1);
}

uint64_t *RecentsHeaderButtonsView.Constants.topMargin.unsafeMutableAddressor()
{
  if (one-time initialization token for topMargin != -1)
    swift_once();
  return &static RecentsHeaderButtonsView.Constants.topMargin;
}

double static RecentsHeaderButtonsView.Constants.topMargin.getter()
{
  return static SystemApertureConstants.sensorRegionHeight.getter(&one-time initialization token for topMargin, (uint64_t)&static RecentsHeaderButtonsView.Constants.topMargin);
}

uint64_t *RecentsHeaderButtonsView.Constants.estimatedHeight.unsafeMutableAddressor()
{
  if (one-time initialization token for estimatedHeight != -1)
    swift_once();
  return &static RecentsHeaderButtonsView.Constants.estimatedHeight;
}

double static RecentsHeaderButtonsView.Constants.estimatedHeight.getter()
{
  return static SystemApertureConstants.sensorRegionHeight.getter(&one-time initialization token for estimatedHeight, (uint64_t)&static RecentsHeaderButtonsView.Constants.estimatedHeight);
}

uint64_t *RecentsHeaderButtonsView.Constants.stackViewSpacing.unsafeMutableAddressor()
{
  if (one-time initialization token for stackViewSpacing != -1)
    swift_once();
  return &static RecentsHeaderButtonsView.Constants.stackViewSpacing;
}

double static RecentsHeaderButtonsView.Constants.stackViewSpacing.getter()
{
  return static SystemApertureConstants.sensorRegionHeight.getter(&one-time initialization token for stackViewSpacing, (uint64_t)&static RecentsHeaderButtonsView.Constants.stackViewSpacing);
}

void one-time initialization function for buttonTextToImagePadding()
{
  static RecentsHeaderButtonsView.Constants.buttonTextToImagePadding = 0x4000000000000000;
}

uint64_t *RecentsHeaderButtonsView.Constants.buttonTextToImagePadding.unsafeMutableAddressor()
{
  if (one-time initialization token for buttonTextToImagePadding != -1)
    swift_once();
  return &static RecentsHeaderButtonsView.Constants.buttonTextToImagePadding;
}

double static RecentsHeaderButtonsView.Constants.buttonTextToImagePadding.getter()
{
  return static SystemApertureConstants.sensorRegionHeight.getter(&one-time initialization token for buttonTextToImagePadding, (uint64_t)&static RecentsHeaderButtonsView.Constants.buttonTextToImagePadding);
}

uint64_t *RecentsHeaderButtonsView.Constants.buttonContentVerticalPadding.unsafeMutableAddressor()
{
  if (one-time initialization token for buttonContentVerticalPadding != -1)
    swift_once();
  return &static RecentsHeaderButtonsView.Constants.buttonContentVerticalPadding;
}

double static RecentsHeaderButtonsView.Constants.buttonContentVerticalPadding.getter()
{
  return static SystemApertureConstants.sensorRegionHeight.getter(&one-time initialization token for buttonContentVerticalPadding, (uint64_t)&static RecentsHeaderButtonsView.Constants.buttonContentVerticalPadding);
}

uint64_t *RecentsHeaderButtonsView.Constants.imageReservation.unsafeMutableAddressor()
{
  if (one-time initialization token for imageReservation != -1)
    swift_once();
  return &static RecentsHeaderButtonsView.Constants.imageReservation;
}

double static RecentsHeaderButtonsView.Constants.imageReservation.getter()
{
  return static SystemApertureConstants.sensorRegionHeight.getter(&one-time initialization token for imageReservation, (uint64_t)&static RecentsHeaderButtonsView.Constants.imageReservation);
}

void one-time initialization function for topButtonPaddingMac()
{
  static RecentsHeaderButtonsView.Constants.topButtonPaddingMac = 0x4014000000000000;
}

uint64_t *RecentsHeaderButtonsView.Constants.topButtonPaddingMac.unsafeMutableAddressor()
{
  if (one-time initialization token for topButtonPaddingMac != -1)
    swift_once();
  return &static RecentsHeaderButtonsView.Constants.topButtonPaddingMac;
}

double static RecentsHeaderButtonsView.Constants.topButtonPaddingMac.getter()
{
  return static SystemApertureConstants.sensorRegionHeight.getter(&one-time initialization token for topButtonPaddingMac, (uint64_t)&static RecentsHeaderButtonsView.Constants.topButtonPaddingMac);
}

void one-time initialization function for bottomButtonPaddingMac()
{
  static RecentsHeaderButtonsView.Constants.bottomButtonPaddingMac = 0x401C000000000000;
}

uint64_t *RecentsHeaderButtonsView.Constants.bottomButtonPaddingMac.unsafeMutableAddressor()
{
  if (one-time initialization token for bottomButtonPaddingMac != -1)
    swift_once();
  return &static RecentsHeaderButtonsView.Constants.bottomButtonPaddingMac;
}

double static RecentsHeaderButtonsView.Constants.bottomButtonPaddingMac.getter()
{
  return static SystemApertureConstants.sensorRegionHeight.getter(&one-time initialization token for bottomButtonPaddingMac, (uint64_t)&static RecentsHeaderButtonsView.Constants.bottomButtonPaddingMac);
}

void one-time initialization function for buttonCornerRadiusMac()
{
  static RecentsHeaderButtonsView.Constants.buttonCornerRadiusMac = 0x4014000000000000;
}

uint64_t *RecentsHeaderButtonsView.Constants.buttonCornerRadiusMac.unsafeMutableAddressor()
{
  if (one-time initialization token for buttonCornerRadiusMac != -1)
    swift_once();
  return &static RecentsHeaderButtonsView.Constants.buttonCornerRadiusMac;
}

double static RecentsHeaderButtonsView.Constants.buttonCornerRadiusMac.getter()
{
  return static SystemApertureConstants.sensorRegionHeight.getter(&one-time initialization token for buttonCornerRadiusMac, (uint64_t)&static RecentsHeaderButtonsView.Constants.buttonCornerRadiusMac);
}

void one-time initialization function for horizontalButtonPaddingMac()
{
  static RecentsHeaderButtonsView.Constants.horizontalButtonPaddingMac = 0x4024000000000000;
}

uint64_t *RecentsHeaderButtonsView.Constants.horizontalButtonPaddingMac.unsafeMutableAddressor()
{
  if (one-time initialization token for horizontalButtonPaddingMac != -1)
    swift_once();
  return &static RecentsHeaderButtonsView.Constants.horizontalButtonPaddingMac;
}

double static RecentsHeaderButtonsView.Constants.horizontalButtonPaddingMac.getter()
{
  return static SystemApertureConstants.sensorRegionHeight.getter(&one-time initialization token for horizontalButtonPaddingMac, (uint64_t)&static RecentsHeaderButtonsView.Constants.horizontalButtonPaddingMac);
}

uint64_t key path setter for RecentsHeaderButtonsView.delegate : RecentsHeaderButtonsView(uint64_t a1, _QWORD **a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))((*MEMORY[0x1E0DEEDD8] & **a2) + 0xA8);
  v5 = swift_unknownObjectRetain();
  return v4(v5, v2, v3);
}

uint64_t RecentsHeaderButtonsView.delegate.getter()
{
  OUTLINED_FUNCTION_1_7();
  return swift_unknownObjectRetain();
}

uint64_t RecentsHeaderButtonsView.delegate.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  OUTLINED_FUNCTION_0_8();
  *v3 = a1;
  v3[1] = a2;
  v3[2] = a3;
  return swift_unknownObjectRelease();
}

void RecentsHeaderButtonsView.delegate.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void key path setter for RecentsHeaderButtonsView.createLinkButton : RecentsHeaderButtonsView(id *a1)
{
  id v1;

  v1 = *a1;
  RecentsHeaderButtonsView.createLinkButton.setter();
}

void RecentsHeaderButtonsView.createLinkButton.setter()
{
  OUTLINED_FUNCTION_0_8();
  OUTLINED_FUNCTION_54_7();
  OUTLINED_FUNCTION_32();
}

void key path setter for RecentsHeaderButtonsView.bottomAnchorConstraint : RecentsHeaderButtonsView(id *a1)
{
  id v1;

  v1 = *a1;
  RecentsHeaderButtonsView.bottomAnchorConstraint.setter();
}

uint64_t key path setter for RecentsHeaderButtonsView.buttonsView : RecentsHeaderButtonsView(id *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x120))(*a1);
}

void RecentsHeaderButtonsView.buttonsView.setter(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit24RecentsHeaderButtonsView____lazy_storage___buttonsView);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit24RecentsHeaderButtonsView____lazy_storage___buttonsView) = a1;

}

void RecentsHeaderButtonsView.buttonsView.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  a1[1] = v1;
  RecentsHeaderButtonsView.buttonsView.getter();
  *a1 = v3;
  OUTLINED_FUNCTION_0();
}

void RecentsHeaderButtonsView.buttonsView.modify(void **a1, char a2)
{
  void *v2;
  id v3;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    v3 = v2;
    RecentsHeaderButtonsView.buttonsView.setter((uint64_t)v3);

  }
  else
  {
    RecentsHeaderButtonsView.buttonsView.setter((uint64_t)v2);
  }
}

uint64_t key path index equality operator for (KeyPath<AttributeScopes.UIKitAttributes, AttributeScopes.UIKitAttributes.ParagraphStyleAttribute>)()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyPath<AttributeScopes.UIKitAttributes, AttributeScopes.UIKitAttributes.ParagraphStyleAttribute>);
  return dispatch thunk of static Equatable.== infix(_:_:)() & 1;
}

uint64_t key path index hash operator for (KeyPath<AttributeScopes.UIKitAttributes, AttributeScopes.UIKitAttributes.ParagraphStyleAttribute>)()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyPath<AttributeScopes.UIKitAttributes, AttributeScopes.UIKitAttributes.ParagraphStyleAttribute>);
  return dispatch thunk of Hashable.hashValue.getter();
}

void key path getter for AttributeDynamicLookup.subscript<A>(dynamicMember:) : AttributeDynamicLookupAttributeScopes.UIKitAttributes.ParagraphStyleAttribute()
{
  lazy protocol witness table accessor for type AttributeScopes.UIKitAttributes.ParagraphStyleAttribute and conformance AttributeScopes.UIKitAttributes.ParagraphStyleAttribute();
  AttributeDynamicLookup.subscript.getter();
  __break(1u);
}

void RecentsHeaderButtonsView.__allocating_init(coder:)(uint64_t a1)
{
  objc_class *v1;

  objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);
  OUTLINED_FUNCTION_49_5();
  OUTLINED_FUNCTION_0();
}

void RecentsHeaderButtonsView.init(coder:)()
{
  char *v0;
  uint64_t v1;
  char *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;

  v2 = &v0[OBJC_IVAR____TtC15ConversationKit24RecentsHeaderButtonsView_delegate];
  *((_QWORD *)v2 + 1) = 0;
  *((_QWORD *)v2 + 2) = 0;
  *(_QWORD *)v2 = 0;
  v3 = &v0[OBJC_IVAR____TtC15ConversationKit24RecentsHeaderButtonsView_headerDelegate];
  *(_QWORD *)v3 = 0;
  *((_QWORD *)v3 + 1) = 0;
  v4 = OBJC_IVAR____TtC15ConversationKit24RecentsHeaderButtonsView_featureFlags;
  *(_QWORD *)&v0[v4] = OUTLINED_FUNCTION_53_3(objc_allocWithZone(MEMORY[0x1E0DBD2F0]));
  v5 = OBJC_IVAR____TtC15ConversationKit24RecentsHeaderButtonsView_newFaceTimeButton;
  v6 = (void *)objc_opt_self();
  *(_QWORD *)&v0[v5] = OUTLINED_FUNCTION_32_14(v6);
  v7 = OBJC_IVAR____TtC15ConversationKit24RecentsHeaderButtonsView_createLinkButton;
  *(_QWORD *)&v0[v7] = objc_msgSend(v6, (SEL)(v1 + 2788), 1);
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit24RecentsHeaderButtonsView_bottomAnchorConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit24RecentsHeaderButtonsView____lazy_storage___buttonsView] = 0;
  v8 = (uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit24RecentsHeaderButtonsView____lazy_storage___newFaceTimeButtonConfiguration];
  OUTLINED_FUNCTION_14_36();
  OUTLINED_FUNCTION_8_2(v8);
  OUTLINED_FUNCTION_8_2((uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit24RecentsHeaderButtonsView____lazy_storage___createLinkButtonConfiguration]);
  v9 = OBJC_IVAR____TtC15ConversationKit24RecentsHeaderButtonsView_buttonTitleParagraphStyle;
  v10 = OUTLINED_FUNCTION_53_3(objc_allocWithZone(MEMORY[0x1E0DC1288]));
  OUTLINED_FUNCTION_40_3(v10, sel_setAlignment_);
  *(_QWORD *)&v0[v9] = v10;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void closure #1 in RecentsHeaderButtonsView.configure()(char a1, uint64_t a2)
{
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;

  v3 = a2 + 16;
  swift_beginAccess();
  v4 = (_QWORD *)MEMORY[0x1C3B752C0](v3);
  if (v4)
  {
    v5 = v4;
    if ((*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v4) + 0xA0))())
    {
      v7 = v6;
      ObjectType = swift_getObjectType();
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 8))(v5, a1 & 1, ObjectType, v7);

      swift_unknownObjectRelease();
    }
    else
    {

    }
  }
}

void RecentsHeaderButtonsView.symbolScaleValue.getter()
{
  void *v0;
  id v1;

  v1 = objc_msgSend(objc_msgSend(v0, sel_traitCollection), sel_preferredContentSizeCategory);
  OUTLINED_FUNCTION_49_5();
  RecentsHeaderButtonsView.symbolScale(for:)();
  OUTLINED_FUNCTION_37_0();
  OUTLINED_FUNCTION_0();
}

uint64_t RecentsHeaderButtonsView.didTapNewCallButton()()
{
  return RecentsHeaderButtonsView.didTapNewCallButton()(0);
}

uint64_t RecentsHeaderButtonsView.didTapNewLinkButton()()
{
  return RecentsHeaderButtonsView.didTapNewCallButton()(1);
}

uint64_t RecentsHeaderButtonsView.didTapNewCallButton()(uint64_t result)
{
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(void (**)(uint64_t))(v1 + OBJC_IVAR____TtC15ConversationKit24RecentsHeaderButtonsView_headerDelegate);
  if (v2)
  {
    v3 = result;
    swift_retain();
    v2(v3);
    return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v2);
  }
  return result;
}

Swift::Void __swiftcall RecentsHeaderButtonsView.traitCollectionDidChange(_:)(UITraitCollection_optional a1)
{
  void *v1;
  Class isa;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  objc_super v12;

  isa = a1.value.super.isa;
  v12.receiver = v1;
  v12.super_class = (Class)type metadata accessor for RecentsHeaderButtonsView();
  v3 = objc_msgSendSuper2(&v12, sel_traitCollectionDidChange_, isa);
  if (isa)
    isa = (Class)OUTLINED_FUNCTION_123((uint64_t)v3, sel_preferredContentSizeCategory);
  v4 = objc_msgSend(v1, sel_traitCollection);
  v5 = objc_msgSend(v4, sel_preferredContentSizeCategory);

  if (!isa)
  {

    goto LABEL_11;
  }
  v6 = OUTLINED_FUNCTION_3_35();
  v8 = v7;
  if (v6 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v8 == v9)
  {

    OUTLINED_FUNCTION_19_1();
    return;
  }
  v11 = OUTLINED_FUNCTION_13();

  OUTLINED_FUNCTION_53();
  swift_bridgeObjectRelease();
  if ((v11 & 1) == 0)
LABEL_11:
    RecentsHeaderButtonsView.updateButtons()();
}

id RecentsHeaderButtonsView.__deallocating_deinit()
{
  return RecentsHeaderButtonsView.__deallocating_deinit(0, type metadata accessor for RecentsHeaderButtonsView);
}

id RecentsHeaderButtonsView.__allocating_init(frame:)()
{
  double v0;
  double v1;
  double v2;
  double v3;
  Class v4;

  OUTLINED_FUNCTION_17_7();
  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, v3, v2, v1, v0);
}

void *RecentsNavigationBarTitleView.init(coder:)(uint64_t a1)
{
  void *v1;
  objc_super v4;

  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for RecentsNavigationBarTitleView();
  objc_msgSendSuper2(&v4, sel_initWithCoder_, a1);
  OUTLINED_FUNCTION_49_5();
  return v1;
}

id RecentsNavigationBarTitleView.__deallocating_deinit(uint64_t a1)
{
  return RecentsHeaderButtonsView.__deallocating_deinit(a1, type metadata accessor for RecentsNavigationBarTitleView);
}

id RecentsHeaderButtonsView.__deallocating_deinit(uint64_t a1, uint64_t (*a2)(void))
{
  void *v2;
  objc_super v4;

  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

uint64_t sub_1BD0A34F0()
{
  uint64_t v0;

  return swift_deallocObject();
}

unint64_t lazy protocol witness table accessor for type RecentsHeaderButtonsView.Action and conformance RecentsHeaderButtonsView.Action()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type RecentsHeaderButtonsView.Action and conformance RecentsHeaderButtonsView.Action;
  if (!lazy protocol witness table cache variable for type RecentsHeaderButtonsView.Action and conformance RecentsHeaderButtonsView.Action)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for RecentsHeaderButtonsView.Action, &type metadata for RecentsHeaderButtonsView.Action);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RecentsHeaderButtonsView.Action and conformance RecentsHeaderButtonsView.Action);
  }
  return result;
}

void sub_1BD0A3554()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0xA0))();
  v0[1] = v2;
  v0[2] = v3;
  OUTLINED_FUNCTION_0();
}

void sub_1BD0A3590()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0xE8))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD0A35C8()
{
  uint64_t *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = OUTLINED_FUNCTION_65_0(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD0A35F8()
{
  uint64_t *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = OUTLINED_FUNCTION_30_19(v1);
  OUTLINED_FUNCTION_0();
}

uint64_t dispatch thunk of RecentsHeaderButtonsViewDelegate.recentsHeaderButtonsView(_:didTapAction:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, _QWORD))(a4 + 8))(a1, a2 & 1);
}

uint64_t ObjC metadata update function for RecentsHeaderButtonsView()
{
  return type metadata accessor for RecentsHeaderButtonsView();
}

uint64_t method lookup function for RecentsHeaderButtonsView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RecentsHeaderButtonsView.delegate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of RecentsHeaderButtonsView.delegate.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of RecentsHeaderButtonsView.delegate.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of RecentsHeaderButtonsView.createLinkButton.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of RecentsHeaderButtonsView.bottomAnchorConstraint.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of RecentsHeaderButtonsView.buttonsView.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x118))();
}

uint64_t dispatch thunk of RecentsHeaderButtonsView.buttonsView.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x120))();
}

uint64_t dispatch thunk of RecentsHeaderButtonsView.buttonsView.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x128))();
}

uint64_t dispatch thunk of RecentsHeaderButtonsView.symbolScaleValue.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x190))();
}

uint64_t storeEnumTagSinglePayload for RecentsHeaderButtonsView.Action(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BD0A3790 + 4 * byte_1BD646FB5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BD0A37C4 + 4 * asc_1BD646FB0[v4]))();
}

uint64_t sub_1BD0A37C4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD0A37CC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD0A37D4);
  return result;
}

uint64_t sub_1BD0A37E0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD0A37E8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BD0A37EC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD0A37F4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RecentsHeaderButtonsView.Action()
{
  return &type metadata for RecentsHeaderButtonsView.Action;
}

ValueMetadata *type metadata accessor for RecentsHeaderButtonsView.Constants()
{
  return &type metadata for RecentsHeaderButtonsView.Constants;
}

uint64_t method lookup function for RecentsNavigationBarTitleView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RecentsNavigationBarTitleView.updateNavigationItemVisible(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x50))();
}

uint64_t sub_1BD0A3858()
{
  return swift_release();
}

uint64_t sub_1BD0A3860(_QWORD *a1, _QWORD *a2)
{
  *a2 = *a1;
  return swift_retain();
}

_QWORD *sub_1BD0A3874(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

void sub_1BD0A3880()
{
  AttributeScopes.UIKitAttributes.paragraphStyle.getter();
  __break(1u);
}

uint64_t sub_1BD0A38AC()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void partial apply for closure #1 in RecentsHeaderButtonsView.configure()(char a1)
{
  uint64_t v1;

  closure #1 in RecentsHeaderButtonsView.configure()(a1 & 1, v1);
}

uint64_t OUTLINED_FUNCTION_39_14(uint64_t a1)
{
  uint64_t v1;

  return outlined init with copy of UIButton.Configuration?(a1, v1);
}

Swift::Void __swiftcall UINotificationFeedbackGenerator.shake()()
{
  void *v0;

  objc_msgSend(v0, sel_notificationOccurred_, 0);
}

void protocol witness for ShakyMaker.shake() in conformance UINotificationFeedbackGenerator()
{
  UINotificationFeedbackGenerator.shake()();
}

unint64_t protocol witness for SoundPlayer.attempt(toPlay:for:) in conformance TUCallSoundPlayer(uint64_t a1, uint64_t a2)
{
  return (unint64_t)@nonobjc TUCallSoundPlayer.attempt(toPlay:for:)(a1, a2) & 1;
}

id @nonobjc TUCallSoundPlayer.attempt(toPlay:for:)(uint64_t a1, uint64_t a2)
{
  void *v2;

  return objc_msgSend(v2, sel_attemptToPlaySoundType_forCall_, a1, a2);
}

void ScreeningSoundAndHapticsManager.__allocating_init(with:ringerStateObserver:feedbackGenerator:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v8 = swift_allocObject();
  __swift_mutable_project_boxed_opaque_existential_1(a1, *(_QWORD *)(a1 + 24));
  OUTLINED_FUNCTION_10_37();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_1_33(v10, v11, v15);
  OUTLINED_FUNCTION_6_29();
  OUTLINED_FUNCTION_10_37();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_0_43(v13, v14, v16);
  OUTLINED_FUNCTION_5_29(v3, v4, a3, v8);
  __swift_destroy_boxed_opaque_existential_1(a2);
  __swift_destroy_boxed_opaque_existential_1(a1);
  OUTLINED_FUNCTION_52_1();
}

void ScreeningSoundAndHapticsManager.init(with:ringerStateObserver:feedbackGenerator:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = v3;
  __swift_mutable_project_boxed_opaque_existential_1(a1, *(_QWORD *)(a1 + 24));
  OUTLINED_FUNCTION_10_37();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_1_33(v11, v12, v16);
  OUTLINED_FUNCTION_6_29();
  OUTLINED_FUNCTION_10_37();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_0_43(v14, v15, v17);
  OUTLINED_FUNCTION_5_29(v4, v5, a3, v6);
  __swift_destroy_boxed_opaque_existential_1(a2);
  __swift_destroy_boxed_opaque_existential_1(a1);
  OUTLINED_FUNCTION_52_1();
}

uint64_t ScreeningSoundAndHapticsManager.registerForUpdates()()
{
  _QWORD *v0;
  _QWORD *v1;
  id v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0;
  v2 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  objc_msgSend(v2, sel_addObserver_selector_name_object_, v1, sel_announcementFinishedNotification_, *MEMORY[0x1E0DBD548], 0);

  v3 = v1 + 12;
  v4 = v1[16];
  OUTLINED_FUNCTION_4_0(v1 + 12);
  OUTLINED_FUNCTION_7_16(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 16));
  v6 = v1[15];
  v5 = v1[16];
  OUTLINED_FUNCTION_4_0(v3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 32))(v6, v5);
}

uint64_t ScreeningSoundAndHapticsManager.deinit()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 128);
  OUTLINED_FUNCTION_4_0((_QWORD *)(v0 + 96));
  OUTLINED_FUNCTION_7_16(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 24));
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v0 + 16, &demangling cache variable for type metadata for ShakyMaker?);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  return v0;
}

uint64_t ScreeningSoundAndHapticsManager.__deallocating_deinit()
{
  ScreeningSoundAndHapticsManager.deinit();
  return swift_deallocClassInstance();
}

void ScreeningSoundAndHapticsManager.announcementFinishedNotification(_:)(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 v19[24];
  uint64_t v20;
  uint64_t v21;
  void *v22;
  _OWORD v23[2];

  v2 = v1;
  if (objc_msgSend(a1, sel_object))
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v23, 0, sizeof(v23));
  }
  _sypSgWObTm_0((uint64_t)v23, (uint64_t)v19, &demangling cache variable for type metadata for Any?);
  if (v20)
  {
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUCall);
    if ((swift_dynamicCast() & 1) == 0)
      return;
    v3 = v22;
    v4 = v1[15];
    v5 = v1[16];
    OUTLINED_FUNCTION_4_0(v1 + 12);
    v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
    if ((objc_msgSend(v3, sel_shouldSuppressRingtone) & 1) != 0 || (v6 & 1) == 0)
    {
      if (one-time initialization token for conversationKit != -1)
        swift_once();
      v10 = type metadata accessor for Logger();
      __swift_project_value_buffer(v10, (uint64_t)&static Logger.conversationKit);
      swift_retain();
      v11 = v3;
      v12 = Logger.logObject.getter();
      v13 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v12, v13))
      {
        v14 = swift_slowAlloc();
        *(_DWORD *)v14 = 67240448;
        v15 = v2[15];
        v16 = v2[16];
        __swift_project_boxed_opaque_existential_1(v2 + 12, v15);
        v19[0] = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8))(v15, v16) & 1;
        *(_DWORD *)v19 = v19[0];
        OUTLINED_FUNCTION_9_30();
        swift_release();
        *(_WORD *)(v14 + 8) = 1026;
        *(_DWORD *)v19 = objc_msgSend(v11, sel_shouldSuppressRingtone);
        OUTLINED_FUNCTION_9_30();

        _os_log_impl(&dword_1BD004000, v12, v13, "Not playing transcription started tone ringer switch: %{BOOL,public}d, suppress: %{BOOL,public}d", (uint8_t *)v14, 0xEu);
        MEMORY[0x1C3B751B8](v14, -1, -1);

      }
      else
      {

        swift_release();
      }
    }
    else
    {
      v7 = v2[10];
      v8 = v2[11];
      OUTLINED_FUNCTION_4_0(v2 + 7);
      (*(void (**)(uint64_t, void *, uint64_t, uint64_t))(v8 + 8))(8, v3, v7, v8);
    }
    outlined init with copy of ShakyMaker?((uint64_t)(v2 + 2), (uint64_t)v19);
    v17 = v20;
    if (v20)
    {
      v18 = v21;
      __swift_project_boxed_opaque_existential_1(v19, v20);
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v18);

      __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
      return;
    }

    v9 = &demangling cache variable for type metadata for ShakyMaker?;
  }
  else
  {
    v9 = &demangling cache variable for type metadata for Any?;
  }
  outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v19, v9);
}

void DeviceRingerStateObserver.ringerSwitchEnabled.didset()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (one-time initialization token for conversationKit != -1)
    swift_once();
  v0 = type metadata accessor for Logger();
  __swift_project_value_buffer(v0, (uint64_t)&static Logger.conversationKit);
  swift_retain_n();
  v1 = Logger.logObject.getter();
  v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    v4 = swift_slowAlloc();
    v7 = v4;
    *(_DWORD *)v3 = 136446210;
    v5 = String.init<A>(reflecting:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v5, v6, &v7);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v1, v2, "Updated ringerSwitchEnabled to %{public}s", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v4, -1, -1);
    MEMORY[0x1C3B751B8](v3, -1, -1);

  }
  else
  {

    swift_release_n();
  }
}

uint64_t DeviceRingerStateObserver.ringerSwitchEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 20);
}

void DeviceRingerStateObserver.registerRingerSwitchStateNotifications()()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t aBlock[6];

  v1 = v0;
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v2 = static OS_dispatch_queue.main.getter();
  v3 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = (uint64_t)partial apply for closure #1 in DeviceRingerStateObserver.registerRingerSwitchStateNotifications();
  aBlock[5] = v3;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)thunk for @escaping @callee_guaranteed (@unowned Int32) -> ();
  aBlock[3] = (uint64_t)&block_descriptor_9;
  v4 = _Block_copy(aBlock);
  swift_release();
  swift_beginAccess();
  LODWORD(v1) = notify_register_dispatch("com.apple.springboard.ringerstate", (int *)(v1 + 16), v2, v4);
  swift_endAccess();
  _Block_release(v4);

  if ((_DWORD)v1)
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    v5 = type metadata accessor for Logger();
    __swift_project_value_buffer(v5, (uint64_t)&static Logger.conversationKit);
    v6 = Logger.logObject.getter();
    v7 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      v9 = swift_slowAlloc();
      aBlock[0] = v9;
      *(_DWORD *)v8 = 136446210;
      v10 = String.init<A>(reflecting:)();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v10, v11, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BD004000, v6, v7, "Failed to observe ringer switch state with status %{public}s", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v9, -1, -1);
      MEMORY[0x1C3B751B8](v8, -1, -1);
    }

  }
}

uint64_t closure #1 in DeviceRingerStateObserver.registerRingerSwitchStateNotifications()()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    DeviceRingerStateObserver.updateRingerSwitchState()();
    return swift_release();
  }
  return result;
}

uint64_t DeviceRingerStateObserver.unregisterRingerSwitchStateNotifications()()
{
  uint64_t v0;

  swift_beginAccess();
  return notify_cancel(*(_DWORD *)(v0 + 16));
}

void DeviceRingerStateObserver.updateRingerSwitchState()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t state64;
  uint64_t v10[5];

  v1 = v0;
  v10[4] = *MEMORY[0x1E0C80C00];
  state64 = 0;
  swift_beginAccess();
  if (notify_get_state(*(_DWORD *)(v0 + 16), &state64))
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    v2 = type metadata accessor for Logger();
    __swift_project_value_buffer(v2, (uint64_t)&static Logger.conversationKit);
    v3 = Logger.logObject.getter();
    v4 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc();
      v6 = swift_slowAlloc();
      v10[0] = v6;
      *(_DWORD *)v5 = 136446210;
      v7 = String.init<A>(reflecting:)();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v7, v8, v10);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BD004000, v3, v4, "Unable to get ringer switch state, result = %{public}s", v5, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v6, -1, -1);
      MEMORY[0x1C3B751B8](v5, -1, -1);
    }

    *(_BYTE *)(v1 + 20) = 0;
  }
  else
  {
    *(_BYTE *)(v0 + 20) = state64 != 0;
  }
  DeviceRingerStateObserver.ringerSwitchEnabled.didset();
}

uint64_t DeviceRingerStateObserver.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t protocol witness for RingerStateObserver.ringerSwitchEnabled.getter in conformance DeviceRingerStateObserver()
{
  return DeviceRingerStateObserver.ringerSwitchEnabled.getter() & 1;
}

void protocol witness for RingerStateObserver.registerRingerSwitchStateNotifications() in conformance DeviceRingerStateObserver()
{
  DeviceRingerStateObserver.registerRingerSwitchStateNotifications()();
}

uint64_t protocol witness for RingerStateObserver.unregisterRingerSwitchStateNotifications() in conformance DeviceRingerStateObserver()
{
  return DeviceRingerStateObserver.unregisterRingerSwitchStateNotifications()();
}

void protocol witness for RingerStateObserver.updateRingerSwitchState() in conformance DeviceRingerStateObserver()
{
  DeviceRingerStateObserver.updateRingerSwitchState()();
}

uint64_t specialized ScreeningSoundAndHapticsManager.init(with:ringerStateObserver:feedbackGenerator:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t *boxed_opaque_existential_1;
  uint64_t *v16;
  id v17;
  _QWORD v19[5];
  uint64_t v20[5];
  uint64_t v21[5];

  v21[3] = a5;
  v21[4] = a7;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v21);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 32))(boxed_opaque_existential_1, a1, a5);
  v20[3] = a6;
  v20[4] = a8;
  v16 = __swift_allocate_boxed_opaque_existential_1(v20);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 32))(v16, a2, a6);
  outlined init with copy of RadarReporting((uint64_t)v21, a4 + 56);
  outlined init with copy of RadarReporting((uint64_t)v20, a4 + 96);
  if (*(_QWORD *)(a3 + 24))
  {
    outlined init with copy of ShakyMaker?(a3, a4 + 16);
  }
  else
  {
    v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3A58]), sel_init);
    v19[3] = _sSo8NSObjectCMaTm_0(0, &lazy cache variable for type metadata for UINotificationFeedbackGenerator);
    v19[4] = &protocol witness table for UINotificationFeedbackGenerator;
    v19[0] = v17;
    _sypSgWObTm_0((uint64_t)v19, a4 + 16, &demangling cache variable for type metadata for ShakyMaker?);
  }
  ScreeningSoundAndHapticsManager.registerForUpdates()();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(a3, &demangling cache variable for type metadata for ShakyMaker?);
  return a4;
}

uint64_t dispatch thunk of SoundPlayer.attempt(toPlay:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of RingerStateObserver.registerRingerSwitchStateNotifications()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of RingerStateObserver.unregisterRingerSwitchStateNotifications()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of RingerStateObserver.updateRingerSwitchState()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t type metadata accessor for ScreeningSoundAndHapticsManager()
{
  return objc_opt_self();
}

uint64_t method lookup function for ScreeningSoundAndHapticsManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ScreeningSoundAndHapticsManager.__allocating_init(with:ringerStateObserver:feedbackGenerator:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t type metadata accessor for DeviceRingerStateObserver()
{
  return objc_opt_self();
}

uint64_t sub_1BD0A4844()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in DeviceRingerStateObserver.registerRingerSwitchStateNotifications()()
{
  return closure #1 in DeviceRingerStateObserver.registerRingerSwitchStateNotifications()();
}

uint64_t outlined init with copy of ShakyMaker?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ShakyMaker?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void _sypSgWObTm_0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  OUTLINED_FUNCTION_0();
}

unint64_t CallControlsMenuViewModel.context.getter()
{
  uint64_t v0;

  swift_getKeyPath();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type CallControlsMenuViewModel and conformance CallControlsMenuViewModel, (void (*)(uint64_t))type metadata accessor for CallControlsMenuViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  return *(unsigned int *)(v0 + 16) | ((unint64_t)*(unsigned __int8 *)(v0 + 20) << 32);
}

unint64_t key path getter for CallControlsMenuViewModel.context : CallControlsMenuViewModel@<X0>(uint64_t a1@<X8>)
{
  unint64_t result;
  uint64_t v3;
  char v4;

  result = CallControlsMenuViewModel.context.getter();
  *(_DWORD *)a1 = result;
  *(_BYTE *)(a1 + 4) = BYTE4(result);
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4 & 1;
  return result;
}

uint64_t key path setter for CallControlsMenuViewModel.context : CallControlsMenuViewModel()
{
  return CallControlsMenuViewModel.context.setter();
}

uint64_t type metadata accessor for CallControlsMenuViewModel()
{
  uint64_t result;

  result = type metadata singleton initialization cache for CallControlsMenuViewModel;
  if (!type metadata singleton initialization cache for CallControlsMenuViewModel)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t CallControlsMenuViewModel.context.setter()
{
  return CallControlsMenuViewModel.context.setter();
}

{
  swift_getKeyPath();
  specialized CallControlsMenuViewModel.withMutation<A, B>(keyPath:_:)();
  return swift_release();
}

uint64_t CallControlsMenuViewModel.access<A>(keyPath:)()
{
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type CallControlsMenuViewModel and conformance CallControlsMenuViewModel, (void (*)(uint64_t))type metadata accessor for CallControlsMenuViewModel);
  return ObservationRegistrar.access<A, B>(_:keyPath:)();
}

uint64_t closure #1 in CallControlsMenuViewModel.context.setter(uint64_t a1, unint64_t a2, uint64_t a3, char a4)
{
  int v6;
  unint64_t v8;
  uint64_t result;

  v6 = a2;
  v8 = HIDWORD(a2);
  result = swift_beginAccess();
  *(_DWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 20) = v8;
  *(_QWORD *)(a1 + 24) = a3;
  *(_BYTE *)(a1 + 32) = a4;
  return result;
}

uint64_t partial apply for closure #1 in CallControlsMenuViewModel.context.setter()
{
  uint64_t v0;

  return closure #1 in CallControlsMenuViewModel.context.setter(*(_QWORD *)(v0 + 16), *(unsigned int *)(v0 + 24) | ((unint64_t)*(unsigned __int8 *)(v0 + 28) << 32), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
}

uint64_t specialized CallControlsMenuViewModel.withMutation<A, B>(keyPath:_:)()
{
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type CallControlsMenuViewModel and conformance CallControlsMenuViewModel, (void (*)(uint64_t))type metadata accessor for CallControlsMenuViewModel);
  return ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
}

uint64_t CallControlsMenuViewModel.withMutation<A, B>(keyPath:_:)()
{
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type CallControlsMenuViewModel and conformance CallControlsMenuViewModel, (void (*)(uint64_t))type metadata accessor for CallControlsMenuViewModel);
  return ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
}

void (*CallControlsMenuViewModel.context.modify(_QWORD *a1))(_QWORD **a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;

  v2 = v1;
  v4 = malloc(0x30uLL);
  *a1 = v4;
  v4[3] = v2;
  swift_getKeyPath();
  v4[4] = OBJC_IVAR____TtC15ConversationKit25CallControlsMenuViewModel___observationRegistrar;
  *v4 = v2;
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type CallControlsMenuViewModel and conformance CallControlsMenuViewModel, (void (*)(uint64_t))type metadata accessor for CallControlsMenuViewModel);
  v4[5] = v5;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  *v4 = v2;
  swift_getKeyPath();
  ObservationRegistrar.willSet<A, B>(_:keyPath:)();
  OUTLINED_FUNCTION_22();
  swift_beginAccess();
  return CallControlsMenuViewModel.context.modify;
}

void CallControlsMenuViewModel.context.modify(_QWORD **a1)
{
  _QWORD *v1;

  v1 = *a1;
  swift_endAccess();
  *v1 = v1[3];
  swift_getKeyPath();
  ObservationRegistrar.didSet<A, B>(_:keyPath:)();
  OUTLINED_FUNCTION_22();
  free(v1);
}

uint64_t CallControlsMenuViewModel.__allocating_init(service:isAppFrontMost:)(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  CallControlsMenuViewModel.init(service:isAppFrontMost:)(a1, a2);
  return v4;
}

uint64_t CallControlsMenuViewModel.init(service:isAppFrontMost:)(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = v2;
  *(_QWORD *)(v2 + 88) = 0;
  ObservationRegistrar.init()();
  outlined init with copy of IDSLookupManager((uint64_t)a1, v2 + 40);
  *(_QWORD *)(v2 + 80) = a2;
  v6 = a1[3];
  v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v6);
  v8 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 16);
  swift_retain();
  LODWORD(v6) = v8(v6, v7);
  v9 = a1[3];
  v10 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v9);
  LOBYTE(v9) = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 32))(v9, v10);
  v11 = a1[3];
  v12 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v11);
  v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 40))(v11, v12);
  OUTLINED_FUNCTION_22();
  *(_DWORD *)(v3 + 96) = v6;
  *(_BYTE *)(v3 + 100) = v9;
  *(_QWORD *)(v3 + 104) = v13;
  *(_BYTE *)(v3 + 112) = 1;
  *(_DWORD *)(v3 + 16) = v6;
  *(_BYTE *)(v3 + 20) = v9;
  *(_QWORD *)(v3 + 24) = v13;
  *(_BYTE *)(v3 + 32) = 1;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v3;
}

Swift::Void __swiftcall CallControlsMenuViewModel.startContextObservation()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_41();
  v14 = v2;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.CombineLatest4<AnyPublisher<TUCallStatus, Never>, AnyPublisher<InCallControlsMode, Never>, AnyPublisher<TUConversationLetMeInRequestState, Never>, AnyPublisher<Bool, Never>>);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_41();
  v12 = v3;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.ReceiveOn<Publishers.CombineLatest4<AnyPublisher<TUCallStatus, Never>, AnyPublisher<InCallControlsMode, Never>, AnyPublisher<TUConversationLetMeInRequestState, Never>, AnyPublisher<Bool, Never>>, NSRunLoop>);
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_41();
  v13 = v4;
  v5 = *(_QWORD *)(v0 + 72);
  OUTLINED_FUNCTION_1_5();
  OUTLINED_FUNCTION_7_16(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 48));
  v6 = *(_QWORD *)(v0 + 72);
  OUTLINED_FUNCTION_1_5();
  OUTLINED_FUNCTION_7_16(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 64));
  v7 = *(_QWORD *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 72);
  OUTLINED_FUNCTION_1_5();
  (*(void (**)(uint64_t, uint64_t))(v8 + 72))(v7, v8);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnyPublisher<TUCallStatus, Never>);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnyPublisher<InCallControlsMode, Never>);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnyPublisher<TUConversationLetMeInRequestState, Never>);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnyPublisher<Bool, Never>);
  OUTLINED_FUNCTION_2_45(&lazy protocol witness table cache variable for type AnyPublisher<TUCallStatus, Never> and conformance AnyPublisher<A, B>, &demangling cache variable for type metadata for AnyPublisher<TUCallStatus, Never>);
  OUTLINED_FUNCTION_2_45(&lazy protocol witness table cache variable for type AnyPublisher<InCallControlsMode, Never> and conformance AnyPublisher<A, B>, &demangling cache variable for type metadata for AnyPublisher<InCallControlsMode, Never>);
  OUTLINED_FUNCTION_2_45(&lazy protocol witness table cache variable for type AnyPublisher<TUConversationLetMeInRequestState, Never> and conformance AnyPublisher<A, B>, &demangling cache variable for type metadata for AnyPublisher<TUConversationLetMeInRequestState, Never>);
  OUTLINED_FUNCTION_2_45(&lazy protocol witness table cache variable for type AnyPublisher<Bool, Never> and conformance AnyPublisher<A, B>, &demangling cache variable for type metadata for AnyPublisher<Bool, Never>);
  Publisher.combineLatest<A, B, C>(_:_:_:)();
  swift_release();
  swift_release();
  swift_release();
  v19 = objc_msgSend((id)objc_opt_self(), sel_mainRunLoop);
  v9 = type metadata accessor for NSRunLoop.SchedulerOptions();
  __swift_storeEnumTagSinglePayload(v14, 1, 1, v9);
  type metadata accessor for NSRunLoop();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Publishers.CombineLatest4<AnyPublisher<TUCallStatus, Never>, AnyPublisher<InCallControlsMode, Never>, AnyPublisher<TUConversationLetMeInRequestState, Never>, AnyPublisher<Bool, Never>> and conformance Publishers.CombineLatest4<A, B, C, D>, &demangling cache variable for type metadata for Publishers.CombineLatest4<AnyPublisher<TUCallStatus, Never>, AnyPublisher<InCallControlsMode, Never>, AnyPublisher<TUConversationLetMeInRequestState, Never>, AnyPublisher<Bool, Never>>);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type NSRunLoop and conformance NSRunLoop, (void (*)(uint64_t))type metadata accessor for NSRunLoop);
  Publisher.receive<A>(on:options:)();
  outlined destroy of NSRunLoop.SchedulerOptions?(v14);

  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v12, v15);
  v10 = swift_allocObject();
  swift_weakInit();
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = partial apply for closure #1 in CallControlsMenuViewModel.startContextObservation();
  *(_QWORD *)(v11 + 24) = v10;
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Publishers.ReceiveOn<Publishers.CombineLatest4<AnyPublisher<TUCallStatus, Never>, AnyPublisher<InCallControlsMode, Never>, AnyPublisher<TUConversationLetMeInRequestState, Never>, AnyPublisher<Bool, Never>>, NSRunLoop> and conformance Publishers.ReceiveOn<A, B>, &demangling cache variable for type metadata for Publishers.ReceiveOn<Publishers.CombineLatest4<AnyPublisher<TUCallStatus, Never>, AnyPublisher<InCallControlsMode, Never>, AnyPublisher<TUConversationLetMeInRequestState, Never>, AnyPublisher<Bool, Never>>, NSRunLoop>);
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v13, v17);
  CallControlsMenuViewModel.contextCancellable.setter();
}

unint64_t type metadata accessor for NSRunLoop()
{
  unint64_t result;

  result = lazy cache variable for type metadata for NSRunLoop;
  if (!lazy cache variable for type metadata for NSRunLoop)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for NSRunLoop);
  }
  return result;
}

uint64_t sub_1BD0A53E8()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t closure #1 in CallControlsMenuViewModel.startContextObservation()(uint64_t a1, char a2)
{
  uint64_t result;
  _QWORD *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v4 = (_QWORD *)result;
    if (one-time initialization token for sidebar != -1)
      swift_once();
    v5 = type metadata accessor for Logger();
    __swift_project_value_buffer(v5, (uint64_t)&static Logger.sidebar);
    v6 = Logger.logObject.getter();
    v7 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = swift_slowAlloc();
      v9 = swift_slowAlloc();
      v22 = v9;
      *(_DWORD *)v8 = 136315906;
      type metadata accessor for TUCallStatus(0);
      v10 = String.init<A>(reflecting:)();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v10, v11, &v22);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v8 + 12) = 2080;
      InCallControlsMode.debugDescription.getter(a2);
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v12, v13, &v22);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v8 + 22) = 2080;
      type metadata accessor for TUConversationLetMeInRequestState(0);
      v14 = String.init<A>(reflecting:)();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v14, v15, &v22);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v8 + 32) = 1024;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl(&dword_1BD004000, v6, v7, "CallControlsMenuViewModel: callStatus: %s controlMode: %s letMeIn: %s isAppFrontMost: %{BOOL}d", (uint8_t *)v8, 0x26u);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v9, -1, -1);
      MEMORY[0x1C3B751B8](v8, -1, -1);
    }

    v16 = v4[8];
    v17 = v4[9];
    __swift_project_boxed_opaque_existential_1(v4 + 5, v16);
    (*(void (**)(uint64_t, uint64_t))(v17 + 16))(v16, v17);
    v18 = v4[8];
    v19 = v4[9];
    __swift_project_boxed_opaque_existential_1(v4 + 5, v18);
    (*(void (**)(uint64_t, uint64_t))(v19 + 32))(v18, v19);
    v20 = v4[8];
    v21 = v4[9];
    __swift_project_boxed_opaque_existential_1(v4 + 5, v20);
    (*(void (**)(uint64_t, uint64_t))(v21 + 40))(v20, v21);
    CallControlsMenuViewModel.context.setter();
    CallControlsMenuViewModel.inCallContext.getter();
    CallControlsMenuViewModel.context.setter();
    return swift_release();
  }
  return result;
}

uint64_t partial apply for closure #1 in CallControlsMenuViewModel.startContextObservation()(uint64_t a1, char a2)
{
  return closure #1 in CallControlsMenuViewModel.startContextObservation()(a1, a2);
}

unint64_t CallControlsMenuViewModel.inCallContext.getter()
{
  uint64_t v0;

  swift_getKeyPath();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type CallControlsMenuViewModel and conformance CallControlsMenuViewModel, (void (*)(uint64_t))type metadata accessor for CallControlsMenuViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(unsigned int *)(v0 + 96) | ((unint64_t)*(unsigned __int8 *)(v0 + 100) << 32);
}

uint64_t thunk for @escaping @callee_guaranteed (@unowned TUCallStatus, @unowned InCallControlsMode, @unowned TUConversationLetMeInRequestState, @unowned Bool) -> ()(unsigned int *a1, uint64_t (*a2)(_QWORD, _QWORD, _QWORD, _QWORD))
{
  return a2(*a1, *((unsigned __int8 *)a1 + 4), *((_QWORD *)a1 + 1), *((unsigned __int8 *)a1 + 16));
}

uint64_t sub_1BD0A580C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@unowned TUCallStatus, @unowned InCallControlsMode, @unowned TUConversationLetMeInRequestState, @unowned Bool) -> ()(unsigned int *a1)
{
  uint64_t v1;

  return thunk for @escaping @callee_guaranteed (@unowned TUCallStatus, @unowned InCallControlsMode, @unowned TUConversationLetMeInRequestState, @unowned Bool) -> ()(a1, *(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v1 + 16));
}

uint64_t CallControlsMenuViewModel.contextCancellable.setter()
{
  swift_getKeyPath();
  specialized CallControlsMenuViewModel.withMutation<A, B>(keyPath:_:)();
  swift_release();
  return swift_release();
}

uint64_t CallControlsMenuViewModel.contextCancellable.getter()
{
  swift_getKeyPath();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type CallControlsMenuViewModel and conformance CallControlsMenuViewModel, (void (*)(uint64_t))type metadata accessor for CallControlsMenuViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return swift_retain();
}

uint64_t key path setter for CallControlsMenuViewModel.contextCancellable : CallControlsMenuViewModel()
{
  swift_retain();
  return CallControlsMenuViewModel.contextCancellable.setter();
}

uint64_t closure #1 in CallControlsMenuViewModel.contextCancellable.setter(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)(a1 + 88) = a2;
  swift_retain();
  return swift_release();
}

unint64_t key path getter for CallControlsMenuViewModel.inCallContext : CallControlsMenuViewModel@<X0>(uint64_t a1@<X8>)
{
  unint64_t result;
  uint64_t v3;
  char v4;

  result = CallControlsMenuViewModel.inCallContext.getter();
  *(_DWORD *)a1 = result;
  *(_BYTE *)(a1 + 4) = BYTE4(result);
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4 & 1;
  return result;
}

uint64_t key path setter for CallControlsMenuViewModel.inCallContext : CallControlsMenuViewModel()
{
  return CallControlsMenuViewModel.context.setter();
}

void CallControlsMenuViewModel.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  swift_release();
  swift_release();
  v1 = v0 + OBJC_IVAR____TtC15ConversationKit25CallControlsMenuViewModel___observationRegistrar;
  v2 = type metadata accessor for ObservationRegistrar();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  OUTLINED_FUNCTION_0();
}

uint64_t CallControlsMenuViewModel.__deallocating_deinit()
{
  CallControlsMenuViewModel.deinit();
  return swift_deallocClassInstance();
}

uint64_t ObjC metadata update function for CallControlsMenuViewModel()
{
  return type metadata accessor for CallControlsMenuViewModel();
}

uint64_t type metadata completion function for CallControlsMenuViewModel()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ObservationRegistrar();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for CallControlsMenuViewModel()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CallControlsMenuViewModel.__allocating_init(service:isAppFrontMost:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t sub_1BD0A5B3C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = CallControlsMenuViewModel.contextCancellable.getter();
  *a1 = result;
  return result;
}

uint64_t partial apply for closure #1 in CallControlsMenuViewModel.contextCancellable.setter()
{
  uint64_t v0;

  return closure #1 in CallControlsMenuViewModel.contextCancellable.setter(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void partial apply for closure #1 in CallControlsMenuViewModel.inCallContext.setter()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v4;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_BYTE *)(v0 + 28);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = *(_BYTE *)(v0 + 40);
  *(_DWORD *)(v1 + 96) = *(_DWORD *)(v0 + 24);
  *(_BYTE *)(v1 + 100) = v2;
  *(_QWORD *)(v1 + 104) = v3;
  *(_BYTE *)(v1 + 112) = v4;
}

Swift::Void __swiftcall CaptionsViewModel.minimize(_:)(Swift::Bool a1)
{
  CaptionsViewModel.minimize(_:)();
}

uint64_t CaptionsViewModel.allowsMinimization.getter()
{
  return CaptionsViewModel.allowsMinimization.getter();
}

{
  uint64_t (*v0)(void);
  char v1;

  OUTLINED_FUNCTION_86_3();
  v1 = v0();
  OUTLINED_FUNCTION_43();
  return v1 & 1;
}

uint64_t CaptionsViewModel.allowsMinimization.setter()
{
  return CaptionsViewModel.minimize(_:)();
}

uint64_t CaptionsViewModel.isGroupCall.getter()
{
  return CaptionsViewModel.allowsMinimization.getter();
}

uint64_t CaptionsViewModel.isGroupCall.setter()
{
  return CaptionsViewModel.minimize(_:)();
}

uint64_t CaptionsViewModel.minimize(_:)()
{
  CaptionsViewModel.source.getter();
  OUTLINED_FUNCTION_87_3();
  return OUTLINED_FUNCTION_2_19();
}

void CaptionsViewModel.callName.getter()
{
  CaptionsViewModel.source.getter();
  CaptionsStateSource.callName.getter();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_18();
}

uint64_t CaptionsViewModel.callName.setter()
{
  CaptionsViewModel.source.getter();
  OUTLINED_FUNCTION_45_12();
  return OUTLINED_FUNCTION_2_19();
}

void CaptionsViewModel.groupImage.getter()
{
  CaptionsViewModel.source.getter();
  CaptionsStateSource.groupImage.getter();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_0();
}

uint64_t CaptionsViewModel.groupImage.setter()
{
  OUTLINED_FUNCTION_86_3();
  OUTLINED_FUNCTION_59_10();
  return swift_release();
}

uint64_t CaptionsViewModel.languageModelDownloadingProgress.getter()
{
  uint64_t v0;
  uint64_t v1;

  CaptionsViewModel.source.getter();
  CaptionsStateSource.languageModelDownloadingProgress.getter();
  v1 = v0;
  OUTLINED_FUNCTION_43();
  return v1;
}

uint64_t CaptionsViewModel.languageModelDownloadingProgress.setter(uint64_t a1, char a2)
{
  char v3;

  v3 = a2 & 1;
  CaptionsViewModel.source.getter();
  CaptionsStateSource.languageModelDownloadingProgress.setter(a1, v3);
  return OUTLINED_FUNCTION_2_19();
}

void CaptionsViewModel.updateCaptions(for:)(uint64_t a1)
{
  uint64_t v1;
  Swift::OpaquePointer v3;
  _QWORD v4[6];
  uint64_t v5;

  OUTLINED_FUNCTION_8_17();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type CaptionsViewModel and conformance CaptionsViewModel, (void (*)(uint64_t))type metadata accessor for CaptionsViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  OUTLINED_FUNCTION_74();
  OUTLINED_FUNCTION_8_17();
  OUTLINED_FUNCTION_18_31();
  OUTLINED_FUNCTION_74();
  OUTLINED_FUNCTION_60_0();
  CaptionSectioner.update(for:)(a1);
  swift_endAccess();
  v4[0] = v1;
  OUTLINED_FUNCTION_8_17();
  ObservationRegistrar.didSet<A, B>(_:keyPath:)();
  OUTLINED_FUNCTION_22();
  CaptionsViewModel.source.getter();
  CaptionsViewModel.sectioner.getter((uint64_t)v4);
  v3._rawValue = (void *)v4[0];
  v5 = v4[3];
  outlined release of LinearGradient((uint64_t)&v5);
  swift_release();
  CaptionsStateSource.updateSections(_:)(v3);
  OUTLINED_FUNCTION_11_0();
  swift_bridgeObjectRelease();
  CaptionsViewModel.updateExpirationTimer()();
  CaptionsViewModel.updateSuppressionTimer()();
}

uint64_t CaptionsViewModel.__allocating_init(participants:callName:groupImage:isGroupCall:allowsMinimization:layoutIdiom:defaults:allowsSuppression:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, int a5, int a6, unsigned __int8 *a7, uint64_t a8, uint64_t a9, unsigned __int8 a10)
{
  uint64_t v17;

  v17 = swift_allocObject();
  CaptionsViewModel.init(participants:callName:groupImage:isGroupCall:allowsMinimization:layoutIdiom:defaults:allowsSuppression:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
  return v17;
}

void CaptionsViewModel.onRequestMinimizeHandler.setter(uint64_t a1, uint64_t a2)
{
  CaptionsViewModel.onRequestMinimizeHandler.setter(a1, a2, (uint64_t)&unk_1BD647488, (uint64_t)partial apply for closure #1 in CaptionsViewModel.onRequestMinimizeHandler.setter, (void (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

void CaptionsViewModel.onRequestDismissControlsHandler.setter(uint64_t a1, uint64_t a2)
{
  CaptionsViewModel.onRequestMinimizeHandler.setter(a1, a2, (uint64_t)&unk_1BD6474B0, (uint64_t)partial apply for closure #1 in CaptionsViewModel.onRequestDismissControlsHandler.setter, (void (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

void CaptionsViewModel.onRequestMinimizeHandler.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v10 = OUTLINED_FUNCTION_79_2();
  v12 = v5;
  v13 = a1;
  v14 = a2;
  OUTLINED_FUNCTION_30_20(v10, a4, (uint64_t)&v11, (uint64_t)&OBJC_IVAR____TtC15ConversationKit17CaptionsViewModel___observationRegistrar, &lazy protocol witness table cache variable for type CaptionsViewModel and conformance CaptionsViewModel, (void (*)(uint64_t))type metadata accessor for CaptionsViewModel);
  a5(a1, a2);
  swift_release();
  OUTLINED_FUNCTION_10_10();
}

Swift::Void __swiftcall CaptionsViewModel.update(with:)(Swift::OpaquePointer with)
{
  uint64_t v1;

  OUTLINED_FUNCTION_86_3();
  v1 = OUTLINED_FUNCTION_124();
  specialized _ArrayProtocol.filter(_:)(v1);
  CaptionsStateSource.participants.setter();
  swift_release();
}

void CaptionsViewModel.source.getter()
{
  swift_getKeyPath();
  OUTLINED_FUNCTION_21_22();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type CaptionsViewModel and conformance CaptionsViewModel, (void (*)(uint64_t))type metadata accessor for CaptionsViewModel);
  OUTLINED_FUNCTION_2_6();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_3_36();
  swift_retain();
  OUTLINED_FUNCTION_9_0();
}

void key path getter for CaptionsViewModel.source : CaptionsViewModel(_QWORD *a1@<X8>)
{
  uint64_t v2;

  CaptionsViewModel.source.getter();
  *a1 = v2;
}

void key path setter for CaptionsViewModel.source : CaptionsViewModel()
{
  swift_retain();
  CaptionsViewModel.source.setter();
}

void CaptionsViewModel.source.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  swift_getKeyPath();
  OUTLINED_FUNCTION_61_4();
  OUTLINED_FUNCTION_28_18(v0, (uint64_t)partial apply for closure #1 in CaptionsViewModel.source.setter, v1, (uint64_t)&OBJC_IVAR____TtC15ConversationKit17CaptionsViewModel___observationRegistrar, &lazy protocol witness table cache variable for type CaptionsViewModel and conformance CaptionsViewModel, (void (*)(uint64_t))type metadata accessor for CaptionsViewModel, (uint64_t)&protocol conformance descriptor for CaptionsViewModel, v2, v3);
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_14_1();
}

uint64_t CaptionsViewModel.access<A>(keyPath:)(uint64_t a1)
{
  return CaptionsViewModel.access<A>(keyPath:)(a1, (uint64_t)&OBJC_IVAR____TtC15ConversationKit17CaptionsViewModel___observationRegistrar, &lazy protocol witness table cache variable for type CaptionsViewModel and conformance CaptionsViewModel, (void (*)(uint64_t))type metadata accessor for CaptionsViewModel);
}

uint64_t closure #1 in CaptionsViewModel.source.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(_QWORD *)(a1 + 16) = a2;
  swift_retain();
  return swift_release();
}

uint64_t CaptionsViewModel.withMutation<A, B>(keyPath:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return CaptionsViewModel.withMutation<A, B>(keyPath:_:)(a1, a2, a3, a4, (uint64_t)&OBJC_IVAR____TtC15ConversationKit17CaptionsViewModel___observationRegistrar, &lazy protocol witness table cache variable for type CaptionsViewModel and conformance CaptionsViewModel, (void (*)(uint64_t))type metadata accessor for CaptionsViewModel);
}

void CaptionsViewModel.source.modify()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;

  v2 = OUTLINED_FUNCTION_5_30();
  OUTLINED_FUNCTION_11_9((uint64_t)v2);
  OUTLINED_FUNCTION_8_17();
  OUTLINED_FUNCTION_10_0(OBJC_IVAR____TtC15ConversationKit17CaptionsViewModel___observationRegistrar);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type CaptionsViewModel and conformance CaptionsViewModel, (void (*)(uint64_t))type metadata accessor for CaptionsViewModel);
  OUTLINED_FUNCTION_0_9(v3);
  OUTLINED_FUNCTION_17_22();
  *v1 = v0;
  OUTLINED_FUNCTION_8_17();
  OUTLINED_FUNCTION_1_34();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_2_9();
  OUTLINED_FUNCTION_91();
}

void CaptionsViewModel.source.modify(_QWORD **a1)
{
  CaptionsViewModel.source.modify(a1);
}

{
  _QWORD *v1;

  v1 = *a1;
  swift_endAccess();
  *v1 = v1[3];
  swift_getKeyPath();
  ObservationRegistrar.didSet<A, B>(_:keyPath:)();
  OUTLINED_FUNCTION_19();
  free(v1);
}

void CaptionsViewModel.sectioner.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = v1;
  swift_getKeyPath();
  OUTLINED_FUNCTION_21_22();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type CaptionsViewModel and conformance CaptionsViewModel, (void (*)(uint64_t))type metadata accessor for CaptionsViewModel);
  OUTLINED_FUNCTION_62_4();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_3_36();
  v4 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 48);
  v5 = *(_QWORD *)(v2 + 56);
  v7 = *(_QWORD *)(v2 + 64);
  v8 = *(_QWORD *)(v2 + 72);
  *(_QWORD *)a1 = v4;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v2 + 32);
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  OUTLINED_FUNCTION_9_0();
}

double key path getter for CaptionsViewModel.sectioner : CaptionsViewModel@<D0>(uint64_t a1@<X8>)
{
  __int128 v2;
  double result;
  _OWORD v4[2];
  __int128 v5;
  uint64_t v6;

  CaptionsViewModel.sectioner.getter((uint64_t)v4);
  v2 = v4[1];
  *(_OWORD *)a1 = v4[0];
  *(_OWORD *)(a1 + 16) = v2;
  result = *(double *)&v5;
  *(_OWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 48) = v6;
  return result;
}

uint64_t key path setter for CaptionsViewModel.sectioner : CaptionsViewModel(uint64_t a1)
{
  __int128 v1;
  _OWORD v3[3];
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_OWORD *)(a1 + 16);
  v3[0] = *(_OWORD *)a1;
  v3[1] = v1;
  v5 = *(_QWORD *)&v3[0];
  v6 = *((_QWORD *)&v1 + 1);
  v3[2] = *(_OWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 48);
  outlined retain of [Participant]((uint64_t)&v5);
  outlined retain of [Participant]((uint64_t)&v6);
  swift_retain();
  return CaptionsViewModel.sectioner.setter((uint64_t *)v3);
}

uint64_t CaptionsViewModel.sectioner.setter(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  swift_getKeyPath();
  OUTLINED_FUNCTION_61_4();
  OUTLINED_FUNCTION_28_18(v2, (uint64_t)partial apply for closure #1 in CaptionsViewModel.sectioner.setter, v3, (uint64_t)&OBJC_IVAR____TtC15ConversationKit17CaptionsViewModel___observationRegistrar, &lazy protocol witness table cache variable for type CaptionsViewModel and conformance CaptionsViewModel, (void (*)(uint64_t))type metadata accessor for CaptionsViewModel, (uint64_t)&protocol conformance descriptor for CaptionsViewModel, v4, v6);
  v8 = *a1;
  outlined release of LinearGradient((uint64_t)&v8);
  v7 = a1[3];
  outlined release of LinearGradient((uint64_t)&v7);
  OUTLINED_FUNCTION_22();
  return OUTLINED_FUNCTION_19();
}

uint64_t closure #1 in CaptionsViewModel.sectioner.setter(uint64_t a1, uint64_t *a2)
{
  uint64_t v5;
  uint64_t v6;

  swift_beginAccess();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 40) = *((_OWORD *)a2 + 1);
  *(_OWORD *)(a1 + 56) = *((_OWORD *)a2 + 2);
  *(_QWORD *)(a1 + 72) = a2[6];
  v6 = *a2;
  v5 = a2[3];
  outlined retain of [Participant]((uint64_t)&v6);
  outlined retain of [Participant]((uint64_t)&v5);
  swift_retain();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void CaptionsViewModel.sectioner.modify()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;

  v2 = OUTLINED_FUNCTION_5_30();
  OUTLINED_FUNCTION_11_9((uint64_t)v2);
  OUTLINED_FUNCTION_8_17();
  OUTLINED_FUNCTION_10_0(OBJC_IVAR____TtC15ConversationKit17CaptionsViewModel___observationRegistrar);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type CaptionsViewModel and conformance CaptionsViewModel, (void (*)(uint64_t))type metadata accessor for CaptionsViewModel);
  OUTLINED_FUNCTION_0_9(v3);
  OUTLINED_FUNCTION_17_22();
  *v1 = v0;
  OUTLINED_FUNCTION_8_17();
  OUTLINED_FUNCTION_1_34();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_2_9();
  OUTLINED_FUNCTION_91();
}

void CaptionsViewModel.sectioner.modify(_QWORD **a1)
{
  CaptionsViewModel.source.modify(a1);
}

void *CaptionsViewModel.expirationTimer.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  swift_getKeyPath();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type CaptionsViewModel and conformance CaptionsViewModel, (void (*)(uint64_t))type metadata accessor for CaptionsViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  v1 = *(void **)(v0 + 80);
  v2 = v1;
  return v1;
}

void key path setter for CaptionsViewModel.expirationTimer : CaptionsViewModel(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  CaptionsViewModel.expirationTimer.setter(v1, (uint64_t)&unk_1BD647970, (uint64_t)partial apply for closure #1 in CaptionsViewModel.expirationTimer.setter);
}

void closure #1 in CaptionsViewModel.expirationTimer.setter(uint64_t a1, void *a2)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 80);
  *(_QWORD *)(a1 + 80) = a2;
  v3 = a2;

}

void *CaptionsViewModel.suppressionTimer.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  swift_getKeyPath();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type CaptionsViewModel and conformance CaptionsViewModel, (void (*)(uint64_t))type metadata accessor for CaptionsViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  v1 = *(void **)(v0 + 88);
  v2 = v1;
  return v1;
}

void key path setter for CaptionsViewModel.suppressionTimer : CaptionsViewModel(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  CaptionsViewModel.expirationTimer.setter(v1, (uint64_t)&unk_1BD647948, (uint64_t)partial apply for closure #1 in CaptionsViewModel.suppressionTimer.setter);
}

void CaptionsViewModel.expirationTimer.setter(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  KeyPath = swift_getKeyPath();
  v8 = v3;
  v9 = a1;
  OUTLINED_FUNCTION_30_20(KeyPath, a3, (uint64_t)&v7, (uint64_t)&OBJC_IVAR____TtC15ConversationKit17CaptionsViewModel___observationRegistrar, &lazy protocol witness table cache variable for type CaptionsViewModel and conformance CaptionsViewModel, (void (*)(uint64_t))type metadata accessor for CaptionsViewModel);
  OUTLINED_FUNCTION_17_22();

  OUTLINED_FUNCTION_10_10();
}

void closure #1 in CaptionsViewModel.suppressionTimer.setter(uint64_t a1, void *a2)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 88);
  *(_QWORD *)(a1 + 88) = a2;
  v3 = a2;

}

void CaptionsViewModel.onRequestMinimizeHandler.getter()
{
  uint64_t v0;

  swift_getKeyPath();
  OUTLINED_FUNCTION_21_22();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type CaptionsViewModel and conformance CaptionsViewModel, (void (*)(uint64_t))type metadata accessor for CaptionsViewModel);
  OUTLINED_FUNCTION_2_6();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_3_36();
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(*(_QWORD *)(v0 + 96));
  OUTLINED_FUNCTION_21_6();
  OUTLINED_FUNCTION_9_0();
}

void key path getter for CaptionsViewModel.onRequestMinimizeHandler : CaptionsViewModel(uint64_t (**a1)()@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  CaptionsViewModel.onRequestMinimizeHandler.getter();
  if (v2)
  {
    v4 = v2;
    v5 = v3;
    v2 = swift_allocObject();
    *(_QWORD *)(v2 + 16) = v4;
    *(_QWORD *)(v2 + 24) = v5;
    v6 = thunk for @escaping @callee_guaranteed (@unowned Bool) -> ()partial apply;
  }
  else
  {
    v6 = 0;
  }
  *a1 = v6;
  a1[1] = (uint64_t (*)())v2;
}

void key path setter for CaptionsViewModel.onRequestMinimizeHandler : CaptionsViewModel(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v1 = *a1;
  v2 = a1[1];
  if (*a1)
  {
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = v1;
    *(_QWORD *)(v3 + 24) = v2;
    v4 = thunk for @escaping @callee_guaranteed (@in_guaranteed Bool) -> (@out ())partial apply;
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v1);
  CaptionsViewModel.onRequestMinimizeHandler.setter((uint64_t)v4, v3);
}

uint64_t closure #1 in CaptionsViewModel.onRequestMinimizeHandler.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  swift_beginAccess();
  v6 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 96) = a2;
  *(_QWORD *)(a1 + 104) = a3;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(a2);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v6);
}

void CaptionsViewModel.onRequestMinimizeHandler.modify()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;

  v2 = OUTLINED_FUNCTION_5_30();
  OUTLINED_FUNCTION_11_9((uint64_t)v2);
  OUTLINED_FUNCTION_8_17();
  OUTLINED_FUNCTION_10_0(OBJC_IVAR____TtC15ConversationKit17CaptionsViewModel___observationRegistrar);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type CaptionsViewModel and conformance CaptionsViewModel, (void (*)(uint64_t))type metadata accessor for CaptionsViewModel);
  OUTLINED_FUNCTION_0_9(v3);
  OUTLINED_FUNCTION_17_22();
  *v1 = v0;
  OUTLINED_FUNCTION_8_17();
  OUTLINED_FUNCTION_1_34();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_2_9();
  OUTLINED_FUNCTION_91();
}

void CaptionsViewModel.onRequestMinimizeHandler.modify(_QWORD **a1)
{
  CaptionsViewModel.source.modify(a1);
}

void CaptionsViewModel.onRequestDismissControlsHandler.getter()
{
  uint64_t v0;

  swift_getKeyPath();
  OUTLINED_FUNCTION_21_22();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type CaptionsViewModel and conformance CaptionsViewModel, (void (*)(uint64_t))type metadata accessor for CaptionsViewModel);
  OUTLINED_FUNCTION_2_6();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_3_36();
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(*(_QWORD *)(v0 + 112));
  OUTLINED_FUNCTION_21_6();
  OUTLINED_FUNCTION_9_0();
}

void key path getter for CaptionsViewModel.onRequestDismissControlsHandler : CaptionsViewModel(uint64_t (**a1)()@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  CaptionsViewModel.onRequestDismissControlsHandler.getter();
  if (v2)
  {
    v4 = v2;
    v5 = v3;
    v2 = swift_allocObject();
    *(_QWORD *)(v2 + 16) = v4;
    *(_QWORD *)(v2 + 24) = v5;
    v6 = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  }
  else
  {
    v6 = 0;
  }
  *a1 = v6;
  a1[1] = (uint64_t (*)())v2;
}

void key path setter for CaptionsViewModel.onRequestDismissControlsHandler : CaptionsViewModel(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v1 = *a1;
  v2 = a1[1];
  if (*a1)
  {
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = v1;
    *(_QWORD *)(v3 + 24) = v2;
    v4 = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v1);
  CaptionsViewModel.onRequestDismissControlsHandler.setter((uint64_t)v4, v3);
}

uint64_t closure #1 in CaptionsViewModel.onRequestDismissControlsHandler.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  swift_beginAccess();
  v6 = *(_QWORD *)(a1 + 112);
  *(_QWORD *)(a1 + 112) = a2;
  *(_QWORD *)(a1 + 120) = a3;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(a2);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v6);
}

void CaptionsViewModel.onRequestDismissControlsHandler.modify()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;

  v2 = OUTLINED_FUNCTION_5_30();
  OUTLINED_FUNCTION_11_9((uint64_t)v2);
  OUTLINED_FUNCTION_8_17();
  OUTLINED_FUNCTION_10_0(OBJC_IVAR____TtC15ConversationKit17CaptionsViewModel___observationRegistrar);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type CaptionsViewModel and conformance CaptionsViewModel, (void (*)(uint64_t))type metadata accessor for CaptionsViewModel);
  OUTLINED_FUNCTION_0_9(v3);
  OUTLINED_FUNCTION_17_22();
  *v1 = v0;
  OUTLINED_FUNCTION_8_17();
  OUTLINED_FUNCTION_1_34();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_2_9();
  OUTLINED_FUNCTION_91();
}

void CaptionsViewModel.onRequestDismissControlsHandler.modify(_QWORD **a1)
{
  CaptionsViewModel.source.modify(a1);
}

void CaptionsStateSource.allowsMinimization.getter()
{
  swift_getKeyPath();
  OUTLINED_FUNCTION_21_22();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type CaptionsStateSource and conformance CaptionsStateSource, (void (*)(uint64_t))type metadata accessor for CaptionsStateSource);
  OUTLINED_FUNCTION_2_6();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_3_36();
  OUTLINED_FUNCTION_9_0();
}

void CaptionsStateSource.allowsMinimization.setter(char a1)
{
  CaptionsStateSource.allowsMinimization.setter(a1, (uint64_t)&unk_1BD647500, (uint64_t)partial apply for closure #1 in CaptionsStateSource.allowsMinimization.setter);
}

void CaptionsViewModel.allowsMinimization.modify(_QWORD *a1)
{
  uint64_t v1;
  char v2;
  char v3;

  OUTLINED_FUNCTION_85_0(a1);
  CaptionsStateSource.allowsMinimization.getter();
  v3 = v2;
  OUTLINED_FUNCTION_43();
  *(_BYTE *)(v1 + 8) = v3 & 1;
  OUTLINED_FUNCTION_18();
}

uint64_t CaptionsViewModel.allowsMinimization.modify()
{
  return CaptionsViewModel.allowsMinimization.modify();
}

{
  CaptionsViewModel.source.getter();
  OUTLINED_FUNCTION_87_3();
  return OUTLINED_FUNCTION_2_19();
}

uint64_t CaptionsViewModel.isMinimized.getter()
{
  return CaptionsViewModel.allowsMinimization.getter();
}

void CaptionsStateSource.isMinimized.getter()
{
  swift_getKeyPath();
  OUTLINED_FUNCTION_21_22();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type CaptionsStateSource and conformance CaptionsStateSource, (void (*)(uint64_t))type metadata accessor for CaptionsStateSource);
  OUTLINED_FUNCTION_2_6();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_3_36();
  OUTLINED_FUNCTION_9_0();
}

void CaptionsStateSource.isGroupCall.getter()
{
  swift_getKeyPath();
  OUTLINED_FUNCTION_21_22();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type CaptionsStateSource and conformance CaptionsStateSource, (void (*)(uint64_t))type metadata accessor for CaptionsStateSource);
  OUTLINED_FUNCTION_2_6();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_3_36();
  OUTLINED_FUNCTION_9_0();
}

void CaptionsStateSource.isGroupCall.setter(char a1)
{
  CaptionsStateSource.allowsMinimization.setter(a1, (uint64_t)&unk_1BD647550, (uint64_t)partial apply for closure #1 in CaptionsStateSource.isGroupCall.setter);
}

void CaptionsStateSource.allowsMinimization.setter(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v7;
  uint64_t v8;
  char v9;

  KeyPath = swift_getKeyPath();
  v8 = v3;
  v9 = a1;
  OUTLINED_FUNCTION_30_20(KeyPath, a3, (uint64_t)&v7, (uint64_t)&OBJC_IVAR____TtC15ConversationKit19CaptionsStateSource___observationRegistrar, &lazy protocol witness table cache variable for type CaptionsStateSource and conformance CaptionsStateSource, (void (*)(uint64_t))type metadata accessor for CaptionsStateSource);
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_14_1();
}

void CaptionsViewModel.isGroupCall.modify(_QWORD *a1)
{
  uint64_t v1;
  char v2;
  char v3;

  OUTLINED_FUNCTION_85_0(a1);
  CaptionsStateSource.isGroupCall.getter();
  v3 = v2;
  OUTLINED_FUNCTION_43();
  *(_BYTE *)(v1 + 8) = v3 & 1;
  OUTLINED_FUNCTION_18();
}

uint64_t CaptionsViewModel.isGroupCall.modify()
{
  return CaptionsViewModel.allowsMinimization.modify();
}

void CaptionsStateSource.callName.getter()
{
  swift_getKeyPath();
  OUTLINED_FUNCTION_21_22();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type CaptionsStateSource and conformance CaptionsStateSource, (void (*)(uint64_t))type metadata accessor for CaptionsStateSource);
  OUTLINED_FUNCTION_2_6();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_3_36();
  OUTLINED_FUNCTION_124();
  OUTLINED_FUNCTION_21_6();
  OUTLINED_FUNCTION_9_0();
}

void CaptionsStateSource.callName.setter()
{
  uint64_t KeyPath;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_28_18(KeyPath, (uint64_t)partial apply for closure #1 in CaptionsStateSource.callName.setter, v1, (uint64_t)&OBJC_IVAR____TtC15ConversationKit19CaptionsStateSource___observationRegistrar, &lazy protocol witness table cache variable for type CaptionsStateSource and conformance CaptionsStateSource, (void (*)(uint64_t))type metadata accessor for CaptionsStateSource, (uint64_t)&protocol conformance descriptor for CaptionsStateSource, v2, v3);
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_14_1();
}

void CaptionsViewModel.callName.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_84_1(a1);
  CaptionsStateSource.callName.getter();
  v3 = v2;
  v5 = v4;
  OUTLINED_FUNCTION_43();
  *v1 = v3;
  v1[1] = v5;
  OUTLINED_FUNCTION_18();
}

uint64_t CaptionsViewModel.callName.modify(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0)
  {
    OUTLINED_FUNCTION_124();
    CaptionsViewModel.source.getter();
    OUTLINED_FUNCTION_45_12();
    OUTLINED_FUNCTION_13_3();
  }
  else
  {
    CaptionsViewModel.source.getter();
    OUTLINED_FUNCTION_45_12();
  }
  return OUTLINED_FUNCTION_2_19();
}

uint64_t key path setter for CaptionsViewModel.groupImage : CaptionsViewModel(id *a1)
{
  id v1;

  v1 = *a1;
  return CaptionsViewModel.groupImage.setter();
}

void CaptionsStateSource.groupImage.getter()
{
  uint64_t v0;
  id v1;

  swift_getKeyPath();
  OUTLINED_FUNCTION_21_22();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type CaptionsStateSource and conformance CaptionsStateSource, (void (*)(uint64_t))type metadata accessor for CaptionsStateSource);
  OUTLINED_FUNCTION_2_6();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_3_36();
  v1 = *(id *)(v0 + 32);
  OUTLINED_FUNCTION_9_0();
}

void CaptionsStateSource.groupImage.setter(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  swift_getKeyPath();
  OUTLINED_FUNCTION_61_4();
  OUTLINED_FUNCTION_28_18(v2, (uint64_t)partial apply for closure #1 in CaptionsStateSource.groupImage.setter, v3, (uint64_t)&OBJC_IVAR____TtC15ConversationKit19CaptionsStateSource___observationRegistrar, &lazy protocol witness table cache variable for type CaptionsStateSource and conformance CaptionsStateSource, (void (*)(uint64_t))type metadata accessor for CaptionsStateSource, (uint64_t)&protocol conformance descriptor for CaptionsStateSource, v4, v5);
  OUTLINED_FUNCTION_22();

  OUTLINED_FUNCTION_14_1();
}

void CaptionsViewModel.groupImage.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  a1[1] = v1;
  CaptionsViewModel.source.getter();
  CaptionsStateSource.groupImage.getter();
  v4 = v3;
  OUTLINED_FUNCTION_43();
  *a1 = v4;
  OUTLINED_FUNCTION_18();
}

uint64_t CaptionsViewModel.groupImage.modify(id *a1, char a2)
{
  id v2;

  if ((a2 & 1) != 0)
  {
    v2 = *a1;
    CaptionsViewModel.source.getter();
    OUTLINED_FUNCTION_59_10();

  }
  else
  {
    CaptionsViewModel.source.getter();
    OUTLINED_FUNCTION_59_10();
  }
  return OUTLINED_FUNCTION_2_19();
}

uint64_t key path getter for CaptionsViewModel.languageModelDownloadingProgress : CaptionsViewModel@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;

  result = CaptionsViewModel.languageModelDownloadingProgress.getter();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t key path setter for CaptionsViewModel.languageModelDownloadingProgress : CaptionsViewModel(uint64_t a1)
{
  return CaptionsViewModel.languageModelDownloadingProgress.setter(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

void CaptionsStateSource.languageModelDownloadingProgress.getter()
{
  swift_getKeyPath();
  OUTLINED_FUNCTION_21_22();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type CaptionsStateSource and conformance CaptionsStateSource, (void (*)(uint64_t))type metadata accessor for CaptionsStateSource);
  OUTLINED_FUNCTION_2_6();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_3_36();
  OUTLINED_FUNCTION_9_0();
}

void CaptionsStateSource.languageModelDownloadingProgress.setter(uint64_t a1, char a2)
{
  CaptionsStateSource.languageModelDownloadingProgress.setter(a1, a2, (uint64_t)&unk_1BD6475C8, (uint64_t)partial apply for closure #1 in CaptionsStateSource.languageModelDownloadingProgress.setter);
}

void CaptionsViewModel.languageModelDownloadingProgress.modify(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;

  OUTLINED_FUNCTION_84_1(a1);
  CaptionsStateSource.languageModelDownloadingProgress.getter();
  v3 = v2;
  v5 = v4;
  OUTLINED_FUNCTION_43();
  *(_QWORD *)v1 = v3;
  *(_BYTE *)(v1 + 8) = v5 & 1;
  OUTLINED_FUNCTION_18();
}

uint64_t CaptionsViewModel.languageModelDownloadingProgress.modify(uint64_t a1)
{
  uint64_t v1;
  char v2;

  v1 = *(_QWORD *)a1;
  v2 = *(_BYTE *)(a1 + 8);
  CaptionsViewModel.source.getter();
  CaptionsStateSource.languageModelDownloadingProgress.setter(v1, v2);
  return OUTLINED_FUNCTION_2_19();
}

void CaptionsViewModel.layoutIdiom.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  swift_getKeyPath();
  OUTLINED_FUNCTION_21_22();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type CaptionsViewModel and conformance CaptionsViewModel, (void (*)(uint64_t))type metadata accessor for CaptionsViewModel);
  OUTLINED_FUNCTION_62_4();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_3_36();
  *a1 = *(_BYTE *)(v1 + 128);
  OUTLINED_FUNCTION_9_0();
}

void key path getter for CaptionsViewModel.layoutIdiom : CaptionsViewModel(_BYTE *a1@<X8>)
{
  char v2;

  CaptionsViewModel.layoutIdiom.getter(&v2);
  *a1 = v2;
}

void key path setter for CaptionsViewModel.layoutIdiom : CaptionsViewModel()
{
  CaptionsViewModel.layoutIdiom.setter();
}

void CaptionsViewModel.layoutIdiom.setter()
{
  uint64_t KeyPath;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_28_18(KeyPath, (uint64_t)partial apply for closure #1 in CaptionsViewModel.layoutIdiom.setter, v1, (uint64_t)&OBJC_IVAR____TtC15ConversationKit17CaptionsViewModel___observationRegistrar, &lazy protocol witness table cache variable for type CaptionsViewModel and conformance CaptionsViewModel, (void (*)(uint64_t))type metadata accessor for CaptionsViewModel, (uint64_t)&protocol conformance descriptor for CaptionsViewModel, v2, v3);
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_14_1();
}

uint64_t closure #1 in CaptionsViewModel.layoutIdiom.setter(uint64_t a1, char a2)
{
  char v3;
  uint64_t result;

  v3 = a2 & 1;
  result = swift_beginAccess();
  *(_BYTE *)(a1 + 128) = v3;
  return result;
}

void CaptionsViewModel.layoutIdiom.modify()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;

  v2 = OUTLINED_FUNCTION_5_30();
  OUTLINED_FUNCTION_11_9((uint64_t)v2);
  OUTLINED_FUNCTION_8_17();
  OUTLINED_FUNCTION_10_0(OBJC_IVAR____TtC15ConversationKit17CaptionsViewModel___observationRegistrar);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type CaptionsViewModel and conformance CaptionsViewModel, (void (*)(uint64_t))type metadata accessor for CaptionsViewModel);
  OUTLINED_FUNCTION_0_9(v3);
  OUTLINED_FUNCTION_17_22();
  *v1 = v0;
  OUTLINED_FUNCTION_8_17();
  OUTLINED_FUNCTION_1_34();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_2_9();
  OUTLINED_FUNCTION_91();
}

void CaptionsViewModel.layoutIdiom.modify(_QWORD **a1)
{
  CaptionsViewModel.source.modify(a1);
}

uint64_t CaptionsViewModel.cancellables.getter()
{
  swift_getKeyPath();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type CaptionsViewModel and conformance CaptionsViewModel, (void (*)(uint64_t))type metadata accessor for CaptionsViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t key path setter for CaptionsViewModel.cancellables : CaptionsViewModel()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  return CaptionsViewModel.cancellables.setter(v0);
}

uint64_t CaptionsViewModel.cancellables.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  KeyPath = swift_getKeyPath();
  v6 = v1;
  v7 = a1;
  specialized CaptionsViewModel.withMutation<A, B>(keyPath:_:)(KeyPath, (uint64_t)partial apply for closure #1 in CaptionsViewModel.cancellables.setter, (uint64_t)&v5, (uint64_t)&OBJC_IVAR____TtC15ConversationKit17CaptionsViewModel___observationRegistrar, &lazy protocol witness table cache variable for type CaptionsViewModel and conformance CaptionsViewModel, (void (*)(uint64_t))type metadata accessor for CaptionsViewModel);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t CaptionsViewModel.init(participants:callName:groupImage:isGroupCall:allowsMinimization:layoutIdiom:defaults:allowsSuppression:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, int a5, int a6, unsigned __int8 *a7, uint64_t a8, uint64_t a9, unsigned __int8 a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t ObjectType;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  Swift::OpaquePointer v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  int v44;
  int v45;
  int v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  char v52[16];
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t (*v60)();
  uint64_t v61;

  v11 = v10;
  v44 = a6;
  v45 = a5;
  v49 = a3;
  v50 = a4;
  v48 = a2;
  v46 = a10;
  v42 = *(_QWORD *)(type metadata accessor for Date() - 8);
  OUTLINED_FUNCTION_10_1();
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x1E0C80A78](v16);
  v21 = (char *)&v42 - v20;
  MEMORY[0x1E0C80A78](v19);
  v23 = (char *)&v42 - v22;
  v47 = *a7;
  *(_OWORD *)(v11 + 80) = 0u;
  *(_OWORD *)(v11 + 96) = 0u;
  *(_OWORD *)(v11 + 112) = 0u;
  *(_QWORD *)(v11 + 136) = MEMORY[0x1E0DEE9D8];
  ObservationRegistrar.init()();
  v51 = a8;
  ObjectType = swift_getObjectType();
  v25 = (*(uint64_t (**)(uint64_t))(a9 + 520))(ObjectType);
  v43 = v25;
  OUTLINED_FUNCTION_75_4(*(uint64_t (**)(uint64_t, uint64_t))(a9 + 528));
  v27 = v26;
  OUTLINED_FUNCTION_75_4(*(uint64_t (**)(uint64_t, uint64_t))(a9 + 536));
  v29 = v28;
  v55 = MEMORY[0x1E0DEE9D8];
  v56 = v27;
  v57 = v28;
  v58 = a1;
  v59 = v25;
  v60 = closure #1 in default argument 4 of CaptionSectioner.init(participants:badCaptionCountThreshold:suppressionAge:maximumAge:currentDate:);
  v61 = 0;
  CaptionSectioner.gatherAndSortCaptions()();
  v31 = v30;
  Date.init()();
  Date.addingTimeInterval(_:)();
  OUTLINED_FUNCTION_67_4((uint64_t)v21);
  Date.init()();
  Date.addingTimeInterval(_:)();
  OUTLINED_FUNCTION_67_4((uint64_t)v18);
  v53 = v21;
  v54 = v23;
  _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSay15ConversationKit16CaptionSectionerV0F0VG_AJs5NeverOTg5((uint64_t)partial apply for closure #1 in CaptionSectioner.updateCaptions(), (uint64_t)v52, v31);
  swift_bridgeObjectRelease();
  CaptionSectioner.chunkSections(sortedCaptions:)();
  v33._rawValue = v32;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_67_4((uint64_t)v21);
  OUTLINED_FUNCTION_67_4((uint64_t)v23);
  type metadata accessor for CaptionsStateSource(0);
  v34 = OUTLINED_FUNCTION_14_0();
  CaptionsStateSource.init()();
  LOBYTE(v25) = v44;
  CaptionsStateSource.isMinimized.setter(v44);
  CaptionsStateSource.isGroupCall.setter(v45);
  CaptionsStateSource.allowsMinimization.setter(v25);
  CaptionsStateSource.updateSections(_:)(v33);
  if ((v46 & 1) != 0)
    v35 = v27;
  else
    v35 = 0;
  CaptionsStateSource.suppressionAge.setter(v35, (v46 & 1) == 0);
  CaptionsStateSource.maximumAge.setter(v29, 0);
  CaptionsStateSource.callName.setter();
  v36 = v50;
  v37 = v50;
  CaptionsStateSource.groupImage.setter(v36);
  *(_QWORD *)(v11 + 16) = v34;
  *(Swift::OpaquePointer *)(v11 + 24) = v33;
  *(_QWORD *)(v11 + 32) = v27;
  *(_QWORD *)(v11 + 40) = v29;
  v38 = v43;
  *(_QWORD *)(v11 + 48) = a1;
  *(_QWORD *)(v11 + 56) = v38;
  *(_QWORD *)(v11 + 64) = closure #1 in default argument 4 of CaptionSectioner.init(participants:badCaptionCountThreshold:suppressionAge:maximumAge:currentDate:);
  *(_QWORD *)(v11 + 72) = 0;
  *(_BYTE *)(v11 + 128) = v47;
  v39 = OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_7_4();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  CaptionsStateSource.onRequestMinimize.setter((uint64_t)partial apply for closure #1 in CaptionsViewModel.init(participants:callName:groupImage:isGroupCall:allowsMinimization:layoutIdiom:defaults:allowsSuppression:), v39);
  swift_release();
  v40 = OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_7_4();
  swift_retain();
  CaptionsStateSource.onRequestDismissControls.setter((uint64_t)partial apply for closure #2 in CaptionsViewModel.init(participants:callName:groupImage:isGroupCall:allowsMinimization:layoutIdiom:defaults:allowsSuppression:), v40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_74();

  swift_unknownObjectRelease();
  return v11;
}

void CaptionsStateSource.__allocating_init()()
{
  swift_allocObject();
  CaptionsStateSource.init()();
  OUTLINED_FUNCTION_0();
}

void CaptionsStateSource.isMinimized.setter(char a1)
{
  CaptionsStateSource.allowsMinimization.setter(a1, (uint64_t)&unk_1BD647528, (uint64_t)partial apply for closure #1 in CaptionsStateSource.isMinimized.setter);
}

uint64_t type metadata accessor for CaptionsViewModel(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for CaptionsViewModel);
}

Swift::Void __swiftcall CaptionsStateSource.updateSections(_:)(Swift::OpaquePointer a1)
{
  CaptionsStateSource.sectionsCurrentValueUpdater.getter();
  CurrentValueSubject.send(_:)();
  OUTLINED_FUNCTION_43();
}

void CaptionsStateSource.suppressionAge.setter(uint64_t a1, char a2)
{
  CaptionsStateSource.languageModelDownloadingProgress.setter(a1, a2, (uint64_t)&unk_1BD647618, (uint64_t)partial apply for closure #1 in CaptionsStateSource.suppressionAge.setter);
}

void CaptionsStateSource.languageModelDownloadingProgress.setter(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v8 = OUTLINED_FUNCTION_79_2();
  v10 = v4;
  v11 = a1;
  v12 = a2 & 1;
  OUTLINED_FUNCTION_30_20(v8, a4, (uint64_t)&v9, (uint64_t)&OBJC_IVAR____TtC15ConversationKit19CaptionsStateSource___observationRegistrar, &lazy protocol witness table cache variable for type CaptionsStateSource and conformance CaptionsStateSource, (void (*)(uint64_t))type metadata accessor for CaptionsStateSource);
  OUTLINED_FUNCTION_17_22();
  OUTLINED_FUNCTION_10_10();
}

void CaptionsStateSource.maximumAge.setter(uint64_t a1, char a2)
{
  CaptionsStateSource.languageModelDownloadingProgress.setter(a1, a2, (uint64_t)&unk_1BD647640, (uint64_t)partial apply for closure #1 in CaptionsStateSource.maximumAge.setter);
}

uint64_t closure #1 in CaptionsViewModel.init(participants:callName:groupImage:isGroupCall:allowsMinimization:layoutIdiom:defaults:allowsSuppression:)(char a1)
{
  uint64_t result;
  char v3;
  char v4;
  void (*v5)(_QWORD);
  uint64_t v6;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    CaptionsViewModel.source.getter();
    CaptionsStateSource.allowsMinimization.getter();
    v4 = v3;
    swift_release();
    if ((v4 & 1) != 0)
    {
      CaptionsViewModel.onRequestMinimizeHandler.getter();
      if (v5)
      {
        v6 = (uint64_t)v5;
        v5(a1 & 1);
        outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v6);
      }
    }
    return swift_release();
  }
  return result;
}

void CaptionsStateSource.onRequestMinimize.setter(uint64_t a1, uint64_t a2)
{
  CaptionsStateSource.onRequestMinimize.setter(a1, a2, (uint64_t)&unk_1BD647668, (uint64_t)partial apply for closure #1 in CaptionsStateSource.onRequestMinimize.setter);
}

uint64_t closure #2 in CaptionsViewModel.init(participants:callName:groupImage:isGroupCall:allowsMinimization:layoutIdiom:defaults:allowsSuppression:)()
{
  uint64_t result;
  void (*v1)(void);
  uint64_t v2;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    CaptionsViewModel.onRequestDismissControlsHandler.getter();
    if (v1)
    {
      v2 = (uint64_t)v1;
      v1();
      outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v2);
    }
    return swift_release();
  }
  return result;
}

void CaptionsStateSource.onRequestDismissControls.setter(uint64_t a1, uint64_t a2)
{
  CaptionsStateSource.onRequestMinimize.setter(a1, a2, (uint64_t)&unk_1BD647690, (uint64_t)partial apply for closure #1 in CaptionsStateSource.onRequestDismissControls.setter);
}

void CaptionsStateSource.onRequestMinimize.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v8 = OUTLINED_FUNCTION_79_2();
  v10 = v4;
  v11 = a1;
  v12 = a2;
  OUTLINED_FUNCTION_30_20(v8, a4, (uint64_t)&v9, (uint64_t)&OBJC_IVAR____TtC15ConversationKit19CaptionsStateSource___observationRegistrar, &lazy protocol witness table cache variable for type CaptionsStateSource and conformance CaptionsStateSource, (void (*)(uint64_t))type metadata accessor for CaptionsStateSource);
  OUTLINED_FUNCTION_17_22();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_10_10();
}

void CaptionsViewModel.__allocating_init(presentationStateProvider:remoteParticipantsStateProvider:allowsMinimization:layoutIdiom:defaults:)(_QWORD *a1, _QWORD *a2, int a3, char *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  void *v30;
  char v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v66;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73[3];
  uint64_t v74;

  v63 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.ReceiveOn<AnyPublisher<Participant, Never>, OS_dispatch_queue>);
  v64 = *(_QWORD *)(v63 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_41();
  v62 = v10;
  v60 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.ReceiveOn<AnyPublisher<[Participant], Never>, OS_dispatch_queue>);
  v61 = *(_QWORD *)(v60 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_41();
  v59 = v12;
  v57 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.ReceiveOn<AnyPublisher<Bool, Never>, OS_dispatch_queue>);
  v58 = *(_QWORD *)(v57 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_41();
  v56 = v14;
  v54 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.ReceiveOn<AnyPublisher<UIImage?, Never>, OS_dispatch_queue>);
  v55 = *(_QWORD *)(v54 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_41();
  v53 = v16;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for OS_dispatch_queue.SchedulerOptions?);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_41();
  v71 = v18;
  v72 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.ReceiveOn<AnyPublisher<CallDisplayInfo, Never>, OS_dispatch_queue>)
                  - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v19);
  OUTLINED_FUNCTION_77();
  v22 = v21 - v20;
  v23 = *a4;
  v70 = (uint64_t)a2;
  v24 = a2[3];
  v25 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v24);
  v66 = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 16))(v24, v25);
  v26 = a1[3];
  v27 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v26);
  v28 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v27 + 72))(v26, v27);
  v30 = v29;
  v32 = v31;
  CallDisplayInfo.displayName.getter((unint64_t)v28, v29, v31);
  v34 = v33;
  v36 = v35;
  outlined consume of CallDisplayInfo(v28, v30, v32);
  v37 = a1[3];
  v38 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v37);
  v39 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v38 + 88))(v37, v38);
  v41 = a1[3];
  v40 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v41);
  v42 = (*(uint64_t (**)(uint64_t, uint64_t))(v40 + 104))(v41, v40);
  LOBYTE(v73[0]) = v23;
  swift_unknownObjectRetain();
  LOBYTE(v28) = static Platform.current.getter() == 2;
  v43 = swift_allocObject();
  CaptionsViewModel.init(participants:callName:groupImage:isGroupCall:allowsMinimization:layoutIdiom:defaults:allowsSuppression:)(v66, v34, v36, v39, (v42 & 1) == 0, a3, (unsigned __int8 *)v73, a5, a6, v28);
  OUTLINED_FUNCTION_44_8();
  v44 = *(uint64_t (**)(uint64_t, uint64_t))(v34 + 80);
  swift_retain();
  v73[0] = v44(v42, v34);
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v74 = OUTLINED_FUNCTION_78_2();
  v69 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  OUTLINED_FUNCTION_77_0(v71, v45, v46, v69);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnyPublisher<CallDisplayInfo, Never>);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type AnyPublisher<CallDisplayInfo, Never> and conformance AnyPublisher<A, B>, &demangling cache variable for type metadata for AnyPublisher<CallDisplayInfo, Never>);
  _sSo9NSRunLoopCAB7Combine9Scheduler10FoundationWlTm_0(&lazy protocol witness table cache variable for type OS_dispatch_queue and conformance OS_dispatch_queue, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  Publisher.receive<A>(on:options:)();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v71, (uint64_t *)&demangling cache variable for type metadata for OS_dispatch_queue.SchedulerOptions?);
  OUTLINED_FUNCTION_53_7();
  OUTLINED_FUNCTION_51();
  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_29_15();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Publishers.ReceiveOn<AnyPublisher<CallDisplayInfo, Never>, OS_dispatch_queue> and conformance Publishers.ReceiveOn<A, B>, &demangling cache variable for type metadata for Publishers.ReceiveOn<AnyPublisher<CallDisplayInfo, Never>, OS_dispatch_queue>);
  v47 = Publisher<>.sink(receiveValue:)();
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_6_9(v22, *(uint64_t (**)(uint64_t, uint64_t))(v72 + 8));
  swift_getKeyPath();
  v48 = v43 + OBJC_IVAR____TtC15ConversationKit17CaptionsViewModel___observationRegistrar;
  v73[0] = v43;
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type CaptionsViewModel and conformance CaptionsViewModel, (void (*)(uint64_t))type metadata accessor for CaptionsViewModel);
  OUTLINED_FUNCTION_24_17();
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_38_11();
  OUTLINED_FUNCTION_18_31();
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_60_0();
  OUTLINED_FUNCTION_57_0();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(lazy protocol witness table cache variable for type [AnyCancellable] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [AnyCancellable]);
  AnyCancellable.store<A>(in:)();
  OUTLINED_FUNCTION_50_9();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_38_11();
  OUTLINED_FUNCTION_16_17();
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_44_8();
  v73[0] = OUTLINED_FUNCTION_36_4(*(uint64_t (**)(uint64_t, uint64_t))(v47 + 96));
  v74 = OUTLINED_FUNCTION_71_6();
  OUTLINED_FUNCTION_54_8();
  OUTLINED_FUNCTION_57_0();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type AnyPublisher<UIImage?, Never> and conformance AnyPublisher<A, B>, &demangling cache variable for type metadata for AnyPublisher<UIImage?, Never>);
  OUTLINED_FUNCTION_46_8();
  OUTLINED_FUNCTION_56_6();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v71, (uint64_t *)&demangling cache variable for type metadata for OS_dispatch_queue.SchedulerOptions?);
  OUTLINED_FUNCTION_53_7();
  OUTLINED_FUNCTION_51();
  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_29_15();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Publishers.ReceiveOn<AnyPublisher<UIImage?, Never>, OS_dispatch_queue> and conformance Publishers.ReceiveOn<A, B>, &demangling cache variable for type metadata for Publishers.ReceiveOn<AnyPublisher<UIImage?, Never>, OS_dispatch_queue>);
  v49 = Publisher<>.sink(receiveValue:)();
  OUTLINED_FUNCTION_19();
  (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v53, v54);
  OUTLINED_FUNCTION_8_17();
  v73[0] = v43;
  OUTLINED_FUNCTION_24_17();
  OUTLINED_FUNCTION_19();
  v73[0] = v43;
  OUTLINED_FUNCTION_8_17();
  OUTLINED_FUNCTION_18_31();
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_60_0();
  OUTLINED_FUNCTION_37_13();
  OUTLINED_FUNCTION_50_9();
  OUTLINED_FUNCTION_11_0();
  v73[0] = v43;
  OUTLINED_FUNCTION_8_17();
  OUTLINED_FUNCTION_16_17();
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_44_8();
  v73[0] = OUTLINED_FUNCTION_36_4(*(uint64_t (**)(uint64_t, uint64_t))(v49 + 112));
  v74 = OUTLINED_FUNCTION_71_6();
  __swift_storeEnumTagSinglePayload(v71, 1, 1, v69);
  OUTLINED_FUNCTION_57_0();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type AnyPublisher<Bool, Never> and conformance AnyPublisher<A, B>, &demangling cache variable for type metadata for AnyPublisher<Bool, Never>);
  OUTLINED_FUNCTION_46_8();
  Publisher.receive<A>(on:options:)();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v71, (uint64_t *)&demangling cache variable for type metadata for OS_dispatch_queue.SchedulerOptions?);
  OUTLINED_FUNCTION_53_7();
  OUTLINED_FUNCTION_51();
  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_29_15();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Publishers.ReceiveOn<AnyPublisher<Bool, Never>, OS_dispatch_queue> and conformance Publishers.ReceiveOn<A, B>, &demangling cache variable for type metadata for Publishers.ReceiveOn<AnyPublisher<Bool, Never>, OS_dispatch_queue>);
  v50 = Publisher<>.sink(receiveValue:)();
  OUTLINED_FUNCTION_19();
  (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v56, v57);
  swift_getKeyPath();
  v73[0] = v43;
  OUTLINED_FUNCTION_24_17();
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_38_11();
  OUTLINED_FUNCTION_72_4();
  *(_QWORD *)(v51 - 256) = v48;
  ObservationRegistrar.willSet<A, B>(_:keyPath:)();
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_60_0();
  OUTLINED_FUNCTION_37_13();
  OUTLINED_FUNCTION_50_9();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_38_11();
  OUTLINED_FUNCTION_16_17();
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_70_4();
  v73[0] = OUTLINED_FUNCTION_36_4(*(uint64_t (**)(uint64_t, uint64_t))(v50 + 8));
  v74 = static OS_dispatch_queue.main.getter();
  __swift_storeEnumTagSinglePayload(v71, 1, 1, v69);
  OUTLINED_FUNCTION_57_0();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type AnyPublisher<[Participant], Never> and conformance AnyPublisher<A, B>, &demangling cache variable for type metadata for AnyPublisher<[Participant], Never>);
  OUTLINED_FUNCTION_46_8();
  Publisher.receive<A>(on:options:)();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v71, (uint64_t *)&demangling cache variable for type metadata for OS_dispatch_queue.SchedulerOptions?);
  OUTLINED_FUNCTION_53_7();
  OUTLINED_FUNCTION_51();
  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_29_15();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Publishers.ReceiveOn<AnyPublisher<[Participant], Never>, OS_dispatch_queue> and conformance Publishers.ReceiveOn<A, B>, &demangling cache variable for type metadata for Publishers.ReceiveOn<AnyPublisher<[Participant], Never>, OS_dispatch_queue>);
  v52 = Publisher<>.sink(receiveValue:)();
  OUTLINED_FUNCTION_19();
  (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v59, v60);
  swift_getKeyPath();
  v73[0] = v43;
  OUTLINED_FUNCTION_72_4();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_39_15();
  ObservationRegistrar.willSet<A, B>(_:keyPath:)();
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_60_0();
  OUTLINED_FUNCTION_37_13();
  OUTLINED_FUNCTION_50_9();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_39_15();
  OUTLINED_FUNCTION_16_17();
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_70_4();
  v73[0] = OUTLINED_FUNCTION_36_4(*(uint64_t (**)(uint64_t, uint64_t))(v52 + 24));
  v74 = OUTLINED_FUNCTION_71_6();
  OUTLINED_FUNCTION_54_8();
  OUTLINED_FUNCTION_57_0();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type AnyPublisher<Participant, Never> and conformance AnyPublisher<A, B>, &demangling cache variable for type metadata for AnyPublisher<Participant, Never>);
  OUTLINED_FUNCTION_46_8();
  OUTLINED_FUNCTION_56_6();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v71, (uint64_t *)&demangling cache variable for type metadata for OS_dispatch_queue.SchedulerOptions?);
  OUTLINED_FUNCTION_53_7();
  OUTLINED_FUNCTION_51();
  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_29_15();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Publishers.ReceiveOn<AnyPublisher<Participant, Never>, OS_dispatch_queue> and conformance Publishers.ReceiveOn<A, B>, &demangling cache variable for type metadata for Publishers.ReceiveOn<AnyPublisher<Participant, Never>, OS_dispatch_queue>);
  Publisher<>.sink(receiveValue:)();
  OUTLINED_FUNCTION_19();
  (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v62, v63);
  swift_getKeyPath();
  v73[0] = v43;
  OUTLINED_FUNCTION_24_17();
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_39_15();
  OUTLINED_FUNCTION_18_31();
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_60_0();
  OUTLINED_FUNCTION_37_13();
  OUTLINED_FUNCTION_50_9();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_39_15();
  OUTLINED_FUNCTION_16_17();
  swift_release();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_19();
  __swift_destroy_boxed_opaque_existential_1(v70);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  OUTLINED_FUNCTION_52_1();
}

uint64_t closure #1 in CaptionsViewModel.init(presentationStateProvider:remoteParticipantsStateProvider:allowsMinimization:layoutIdiom:defaults:)(uint64_t a1)
{
  unint64_t v1;
  void *v2;
  char v3;
  uint64_t result;

  v1 = *(_QWORD *)a1;
  v2 = *(void **)(a1 + 8);
  v3 = *(_BYTE *)(a1 + 16);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    CallDisplayInfo.displayName.getter(v1, v2, v3);
    CaptionsViewModel.source.getter();
    CaptionsStateSource.callName.setter();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t closure #2 in CaptionsViewModel.init(presentationStateProvider:remoteParticipantsStateProvider:allowsMinimization:layoutIdiom:defaults:)(void **a1)
{
  void *v1;
  uint64_t result;
  id v3;

  v1 = *a1;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v3 = v1;
    CaptionsViewModel.source.getter();
    CaptionsStateSource.groupImage.setter(v1);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t closure #3 in CaptionsViewModel.init(presentationStateProvider:remoteParticipantsStateProvider:allowsMinimization:layoutIdiom:defaults:)(char *a1)
{
  char v1;
  uint64_t result;

  v1 = *a1;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    CaptionsViewModel.source.getter();
    CaptionsStateSource.isGroupCall.setter(v1 ^ 1);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t closure #4 in CaptionsViewModel.init(presentationStateProvider:remoteParticipantsStateProvider:allowsMinimization:layoutIdiom:defaults:)()
{
  uint64_t result;
  uint64_t v1;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    CaptionsViewModel.source.getter();
    v1 = swift_bridgeObjectRetain();
    specialized _ArrayProtocol.filter(_:)(v1);
    CaptionsStateSource.participants.setter();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t closure #5 in CaptionsViewModel.init(presentationStateProvider:remoteParticipantsStateProvider:allowsMinimization:layoutIdiom:defaults:)(uint64_t a1)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    CaptionsViewModel.updateCaptions(for:)(a1);
    return swift_release();
  }
  return result;
}

void CaptionsStateSource.participants.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  swift_getKeyPath();
  OUTLINED_FUNCTION_61_4();
  OUTLINED_FUNCTION_28_18(v0, (uint64_t)partial apply for closure #1 in CaptionsStateSource.participants.setter, v1, (uint64_t)&OBJC_IVAR____TtC15ConversationKit19CaptionsStateSource___observationRegistrar, &lazy protocol witness table cache variable for type CaptionsStateSource and conformance CaptionsStateSource, (void (*)(uint64_t))type metadata accessor for CaptionsStateSource, (uint64_t)&protocol conformance descriptor for CaptionsStateSource, v2, v3);
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_14_1();
}

void CaptionsViewModel.updateExpirationTimer()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int EnumTagSinglePayload;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  char v48;
  char v49;
  char *v50;
  double v51;
  double v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  void *v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *i;
  char *v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD aBlock[7];

  v65 = type metadata accessor for Date();
  v64 = *(_QWORD *)(v65 - 8);
  MEMORY[0x1E0C80A78](v65);
  v63 = (char *)&v62 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = &demangling cache variable for type metadata for CaptionSectioner.Caption?;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CaptionSectioner.Caption?);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CaptionSectioner.Caption(0);
  v70 = *(_QWORD *)(v6 - 8);
  v7 = MEMORY[0x1E0C80A78](v6);
  v66 = (uint64_t)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v62 - v9;
  v80 = type metadata accessor for CaptionSectioner.SpeakerSection(0);
  v71 = *(_QWORD *)(v80 - 8);
  MEMORY[0x1E0C80A78](v80);
  v77 = (uint64_t)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CaptionSectioner.SpeakerSection?);
  v13 = MEMORY[0x1E0C80A78](v12);
  v79 = (uint64_t)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v62 - v15;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CaptionSectioner.Caption??);
  v18 = MEMORY[0x1E0C80A78](v17);
  v69 = (uint64_t)&v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x1E0C80A78](v18);
  v76 = (char *)&v62 - v21;
  MEMORY[0x1E0C80A78](v20);
  v68 = (uint64_t *)((char *)&v62 - v22);
  v23 = CaptionsViewModel.expirationTimer.getter();
  objc_msgSend(v23, sel_invalidate);

  v24 = (uint64_t)v5;
  v67 = v0;
  CaptionsViewModel.source.getter();
  v25 = CaptionsStateSource.sections.getter();
  swift_release();
  v78 = *(_QWORD *)(v25 + 16);
  v74 = v25;
  swift_bridgeObjectRetain();
  v26 = 0;
  v72 = v24;
  v73 = v3;
  for (i = v16; ; v16 = i)
  {
    if (v26 == v78)
    {
      v27 = v2;
      v28 = v3;
      v29 = 1;
      v26 = v78;
    }
    else
    {
      if ((v26 & 0x8000000000000000) != 0)
      {
        __break(1u);
LABEL_38:
        __break(1u);
        goto LABEL_39;
      }
      if (v26 >= *(_QWORD *)(v74 + 16))
        goto LABEL_38;
      v27 = v2;
      v28 = v3;
      outlined init with copy of CaptionSectioner.SpeakerSection(v74+ ((*(unsigned __int8 *)(v71 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80))+ *(_QWORD *)(v71 + 72) * v26, (uint64_t)v16, type metadata accessor for CaptionSectioner.SpeakerSection);
      v29 = 0;
      ++v26;
    }
    v30 = 1;
    v31 = v80;
    __swift_storeEnumTagSinglePayload((uint64_t)v16, v29, 1, v80);
    v32 = (uint64_t)v16;
    v33 = v79;
    outlined init with take of CaptionSectioner.SpeakerSection?(v32, v79, &demangling cache variable for type metadata for CaptionSectioner.SpeakerSection?);
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v33, 1, v31);
    v3 = v28;
    v2 = v27;
    v35 = (uint64_t)v76;
    if (EnumTagSinglePayload != 1)
    {
      v36 = v77;
      outlined init with take of CaptionSectioner.SpeakerSection(v79, v77, type metadata accessor for CaptionSectioner.SpeakerSection);
      v37 = *(_QWORD *)(v36 + *(int *)(v80 + 24));
      v38 = *(_QWORD *)(v37 + 16);
      if (v38)
      {
        v39 = v70;
        v40 = v37 + ((*(unsigned __int8 *)(v70 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80));
        swift_bridgeObjectRetain();
        v41 = *(_QWORD *)(v39 + 72);
        while (1)
        {
          outlined init with copy of CaptionSectioner.SpeakerSection(v40, (uint64_t)v10, type metadata accessor for CaptionSectioner.Caption);
          if (v10[*(int *)(v6 + 48)] != 2)
            break;
          outlined destroy of AccountUpdateNotice((uint64_t)v10, type metadata accessor for CaptionSectioner.Caption);
          v40 += v41;
          if (!--v38)
            goto LABEL_14;
        }
        outlined init with take of CaptionSectioner.SpeakerSection((uint64_t)v10, v35, type metadata accessor for CaptionSectioner.Caption);
        v42 = v35;
        v43 = 0;
      }
      else
      {
        swift_bridgeObjectRetain();
LABEL_14:
        v42 = v35;
        v43 = 1;
      }
      __swift_storeEnumTagSinglePayload(v42, v43, 1, v6);
      swift_bridgeObjectRelease();
      outlined destroy of AccountUpdateNotice(v77, type metadata accessor for CaptionSectioner.SpeakerSection);
      v30 = 0;
      v24 = v72;
      v3 = v73;
      v2 = &demangling cache variable for type metadata for CaptionSectioner.Caption?;
    }
    __swift_storeEnumTagSinglePayload(v35, v30, 1, v3);
    if (__swift_getEnumTagSinglePayload(v35, 1, v3) == 1)
    {
      swift_bridgeObjectRelease();
      v44 = 1;
      v2 = v68;
      goto LABEL_22;
    }
    outlined init with take of CaptionSectioner.SpeakerSection?(v35, v24, v2);
    if (__swift_getEnumTagSinglePayload(v24, 1, v6) != 1)
      break;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v24, v2);
  }
  swift_bridgeObjectRelease();
  v2 = v68;
  outlined init with take of CaptionSectioner.SpeakerSection?(v24, (uint64_t)v68, &demangling cache variable for type metadata for CaptionSectioner.Caption?);
  v44 = 0;
LABEL_22:
  __swift_storeEnumTagSinglePayload((uint64_t)v2, v44, 1, v3);
  swift_bridgeObjectRelease();
  v45 = v69;
  outlined init with copy of CaptionSectioner.Caption??((uint64_t)v2, v69);
  if (__swift_getEnumTagSinglePayload(v45, 1, v3) == 1)
  {
    v46 = &demangling cache variable for type metadata for CaptionSectioner.Caption??;
    goto LABEL_26;
  }
  if (__swift_getEnumTagSinglePayload(v45, 1, v6) == 1)
  {
    v46 = &demangling cache variable for type metadata for CaptionSectioner.Caption?;
LABEL_26:
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v45, v46);
    if (one-time initialization token for conversationKit == -1)
    {
LABEL_27:
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();
      goto LABEL_36;
    }
LABEL_39:
    swift_once();
    goto LABEL_27;
  }
  v47 = v66;
  outlined init with take of CaptionSectioner.SpeakerSection(v45, v66, type metadata accessor for CaptionSectioner.Caption);
  CaptionsViewModel.source.getter();
  CaptionsStateSource.maximumAge.getter();
  v49 = v48;
  swift_release();
  if ((v49 & 1) != 0)
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    v61 = v66;
  }
  else
  {
    v50 = v63;
    Date.addingTimeInterval(_:)();
    Date.timeIntervalSinceNow.getter();
    v52 = v51;
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v53 = swift_allocObject();
    *(_OWORD *)(v53 + 16) = xmmword_1BD6441D0;
    *(double *)aBlock = v52;
    v54 = String.init<A>(reflecting:)();
    v56 = v55;
    *(_QWORD *)(v53 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v53 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v53 + 32) = v54;
    *(_QWORD *)(v53 + 40) = v56;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    v57 = (void *)objc_opt_self();
    v58 = swift_allocObject();
    swift_weakInit();
    aBlock[4] = partial apply for closure #3 in CaptionsViewModel.updateExpirationTimer();
    aBlock[5] = v58;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = thunk for @escaping @callee_guaranteed @Sendable (@guaranteed NSTimer) -> ();
    aBlock[3] = &block_descriptor_135;
    v59 = _Block_copy(aBlock);
    swift_release();
    v60 = objc_msgSend(v57, sel_scheduledTimerWithTimeInterval_repeats_block_, 0, v59, v52);
    _Block_release(v59);
    CaptionsViewModel.expirationTimer.setter(v60, (uint64_t)&unk_1BD647970, (uint64_t)partial apply for closure #1 in CaptionsViewModel.expirationTimer.setter);
    (*(void (**)(char *, uint64_t))(v64 + 8))(v50, v65);
    v61 = v47;
  }
  outlined destroy of AccountUpdateNotice(v61, type metadata accessor for CaptionSectioner.Caption);
LABEL_36:
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v2, &demangling cache variable for type metadata for CaptionSectioner.Caption??);
}

void CaptionsViewModel.updateSuppressionTimer()()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD aBlock[6];

  v29 = type metadata accessor for Date();
  v0 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v2 = (char *)&v28 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CaptionSectioner.SpeakerSection?);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CaptionSectioner.Caption?);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CaptionSectioner.Caption(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = CaptionsViewModel.suppressionTimer.getter();
  objc_msgSend(v12, sel_invalidate);

  CaptionsViewModel.source.getter();
  CaptionsStateSource.suppressionAge.getter();
  v14 = v13;
  swift_release();
  if ((v14 & 1) != 0)
  {
    if (one-time initialization token for conversationKit == -1)
    {
LABEL_5:
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();
      return;
    }
LABEL_15:
    swift_once();
    goto LABEL_5;
  }
  CaptionsViewModel.source.getter();
  v15 = CaptionsStateSource.sections.getter();
  swift_release();
  specialized BidirectionalCollection.last.getter(v15, (uint64_t)v5);
  swift_bridgeObjectRelease();
  v16 = type metadata accessor for CaptionSectioner.SpeakerSection(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v5, 1, v16) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v5, &demangling cache variable for type metadata for CaptionSectioner.SpeakerSection?);
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 1, 1, v9);
LABEL_7:
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v8, &demangling cache variable for type metadata for CaptionSectioner.Caption?);
    goto LABEL_8;
  }
  v17 = *(_QWORD *)&v5[*(int *)(v16 + 24)];
  swift_bridgeObjectRetain();
  outlined destroy of AccountUpdateNotice((uint64_t)v5, type metadata accessor for CaptionSectioner.SpeakerSection);
  specialized BidirectionalCollection.last.getter(v17, (uint64_t)v8);
  swift_bridgeObjectRelease();
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9) == 1)
    goto LABEL_7;
  outlined init with take of CaptionSectioner.SpeakerSection((uint64_t)v8, (uint64_t)v11, type metadata accessor for CaptionSectioner.Caption);
  if (v11[*(int *)(v9 + 48)])
  {
    outlined destroy of AccountUpdateNotice((uint64_t)v11, type metadata accessor for CaptionSectioner.Caption);
LABEL_8:
    if (one-time initialization token for conversationKit == -1)
      goto LABEL_5;
    goto LABEL_15;
  }
  Date.addingTimeInterval(_:)();
  Date.timeIntervalSinceNow.getter();
  v19 = v18;
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1BD6441D0;
  *(double *)aBlock = v19;
  v21 = String.init<A>(reflecting:)();
  v23 = v22;
  *(_QWORD *)(v20 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v20 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v20 + 32) = v21;
  *(_QWORD *)(v20 + 40) = v23;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  v24 = (void *)objc_opt_self();
  v25 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = partial apply for closure #1 in CaptionsViewModel.updateSuppressionTimer();
  aBlock[5] = v25;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed @Sendable (@guaranteed NSTimer) -> ();
  aBlock[3] = &block_descriptor_10;
  v26 = _Block_copy(aBlock);
  swift_release();
  v27 = objc_msgSend(v24, sel_scheduledTimerWithTimeInterval_repeats_block_, 0, v26, v19);
  _Block_release(v26);
  CaptionsViewModel.expirationTimer.setter(v27, (uint64_t)&unk_1BD647948, (uint64_t)partial apply for closure #1 in CaptionsViewModel.suppressionTimer.setter);
  (*(void (**)(char *, uint64_t))(v0 + 8))(v2, v29);
  outlined destroy of AccountUpdateNotice((uint64_t)v11, type metadata accessor for CaptionSectioner.Caption);
}

uint64_t partial apply for closure #1 in CaptionsViewModel.onRequestMinimizeHandler.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = OUTLINED_FUNCTION_64_3();
  return closure #1 in CaptionsViewModel.onRequestMinimizeHandler.setter(v0, v1, v2);
}

uint64_t partial apply for closure #1 in CaptionsViewModel.onRequestDismissControlsHandler.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = OUTLINED_FUNCTION_64_3();
  return closure #1 in CaptionsViewModel.onRequestDismissControlsHandler.setter(v0, v1, v2);
}

void sub_1BD0A9980()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_4();
  CaptionsViewModel.source.getter();
  *v0 = v1;
  OUTLINED_FUNCTION_0();
}

uint64_t partial apply for closure #1 in CaptionsViewModel.source.setter()
{
  uint64_t v0;

  return closure #1 in CaptionsViewModel.source.setter(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t partial apply for closure #1 in CaptionsViewModel.sectioner.setter()
{
  uint64_t v0;

  return closure #1 in CaptionsViewModel.sectioner.setter(*(_QWORD *)(v0 + 16), *(uint64_t **)(v0 + 24));
}

uint64_t CaptionsViewModel.updateCaptionsVisibility(animated:)(char a1)
{
  if ((a1 & 1) != 0)
    static Animation.default.getter();
  withAnimation<A>(_:_:)();
  return swift_release();
}

void closure #1 in CaptionsViewModel.updateCaptionsVisibility(animated:)(uint64_t a1)
{
  Swift::OpaquePointer v2;
  uint64_t v3;
  _QWORD v4[6];
  uint64_t v5;

  swift_getKeyPath();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type CaptionsViewModel and conformance CaptionsViewModel, (void (*)(uint64_t))type metadata accessor for CaptionsViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_getKeyPath();
  ObservationRegistrar.willSet<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  CaptionSectioner.updateCaptions()();
  swift_endAccess();
  v4[0] = a1;
  swift_getKeyPath();
  ObservationRegistrar.didSet<A, B>(_:keyPath:)();
  swift_release();
  CaptionsViewModel.source.getter();
  CaptionsViewModel.sectioner.getter((uint64_t)v4);
  v2._rawValue = (void *)v4[0];
  v5 = v4[3];
  outlined release of LinearGradient((uint64_t)&v5);
  swift_release();
  CaptionsStateSource.updateSections(_:)(v2);
  swift_release();
  v3 = swift_bridgeObjectRelease();
  CaptionsViewModel.updateExpirationTimer()(v3);
  CaptionsViewModel.updateSuppressionTimer()();
}

uint64_t CaptionsStateSource.sections.getter()
{
  swift_getKeyPath();
  OUTLINED_FUNCTION_21_22();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type CaptionsStateSource and conformance CaptionsStateSource, (void (*)(uint64_t))type metadata accessor for CaptionsStateSource);
  OUTLINED_FUNCTION_2_6();
  OUTLINED_FUNCTION_11_0();
  return swift_bridgeObjectRetain();
}

void CaptionsStateSource.maximumAge.getter()
{
  swift_getKeyPath();
  OUTLINED_FUNCTION_21_22();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type CaptionsStateSource and conformance CaptionsStateSource, (void (*)(uint64_t))type metadata accessor for CaptionsStateSource);
  OUTLINED_FUNCTION_2_6();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_3_36();
  OUTLINED_FUNCTION_9_0();
}

void CaptionsStateSource.suppressionAge.getter()
{
  swift_getKeyPath();
  OUTLINED_FUNCTION_21_22();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type CaptionsStateSource and conformance CaptionsStateSource, (void (*)(uint64_t))type metadata accessor for CaptionsStateSource);
  OUTLINED_FUNCTION_2_6();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_3_36();
  OUTLINED_FUNCTION_9_0();
}

void closure #3 in CaptionsViewModel.updateExpirationTimer()()
{
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    CaptionsViewModel.updateCaptionsVisibility(animated:)(1);
    OUTLINED_FUNCTION_43();
  }
  OUTLINED_FUNCTION_9_0();
}

uint64_t CaptionsViewModel.deinit()
{
  uint64_t v0;
  uint64_t v1;

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_13_3();

  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(*(_QWORD *)(v0 + 96));
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(*(_QWORD *)(v0 + 112));
  swift_bridgeObjectRelease();
  v1 = OUTLINED_FUNCTION_73_1();
  OUTLINED_FUNCTION_17_1(v1);
  return v0;
}

uint64_t CaptionsViewModel.__deallocating_deinit()
{
  return CaptionsViewModel.__deallocating_deinit((void (*)(void))CaptionsViewModel.deinit);
}

void key path getter for CaptionsStateSource.callName : CaptionsStateSource(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  CaptionsStateSource.callName.getter();
  *a1 = v2;
  a1[1] = v3;
}

uint64_t key path setter for CaptionsStateSource.callName : CaptionsStateSource(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for CaptionsViewModel.callName : CaptionsViewModel(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))CaptionsStateSource.callName.setter);
}

uint64_t key path setter for CaptionsViewModel.callName : CaptionsViewModel(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;

  v7 = *a1;
  v6 = a1[1];
  swift_bridgeObjectRetain();
  return a5(v7, v6);
}

uint64_t CaptionsStateSource.access<A>(keyPath:)(uint64_t a1)
{
  return CaptionsViewModel.access<A>(keyPath:)(a1, (uint64_t)&OBJC_IVAR____TtC15ConversationKit19CaptionsStateSource___observationRegistrar, &lazy protocol witness table cache variable for type CaptionsStateSource and conformance CaptionsStateSource, (void (*)(uint64_t))type metadata accessor for CaptionsStateSource);
}

uint64_t CaptionsViewModel.access<A>(keyPath:)(uint64_t a1, uint64_t a2, _QWORD *a3, void (*a4)(uint64_t))
{
  lazy protocol witness table accessor for type UUID and conformance UUID(a3, a4);
  return ObservationRegistrar.access<A, B>(_:keyPath:)();
}

uint64_t closure #1 in CaptionsStateSource.callName.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  *(_QWORD *)(a1 + 16) = a2;
  *(_QWORD *)(a1 + 24) = a3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t specialized CaptionsViewModel.withMutation<A, B>(keyPath:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, void (*a6)(uint64_t))
{
  lazy protocol witness table accessor for type UUID and conformance UUID(a5, a6);
  return ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
}

uint64_t CaptionsStateSource.withMutation<A, B>(keyPath:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return CaptionsViewModel.withMutation<A, B>(keyPath:_:)(a1, a2, a3, a4, (uint64_t)&OBJC_IVAR____TtC15ConversationKit19CaptionsStateSource___observationRegistrar, &lazy protocol witness table cache variable for type CaptionsStateSource and conformance CaptionsStateSource, (void (*)(uint64_t))type metadata accessor for CaptionsStateSource);
}

uint64_t CaptionsViewModel.withMutation<A, B>(keyPath:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6, void (*a7)(uint64_t))
{
  lazy protocol witness table accessor for type UUID and conformance UUID(a6, a7);
  return ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
}

void CaptionsStateSource.callName.modify()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;

  v2 = OUTLINED_FUNCTION_5_30();
  OUTLINED_FUNCTION_11_9((uint64_t)v2);
  OUTLINED_FUNCTION_8_17();
  OUTLINED_FUNCTION_10_0(OBJC_IVAR____TtC15ConversationKit19CaptionsStateSource___observationRegistrar);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type CaptionsStateSource and conformance CaptionsStateSource, (void (*)(uint64_t))type metadata accessor for CaptionsStateSource);
  OUTLINED_FUNCTION_0_9(v3);
  OUTLINED_FUNCTION_17_22();
  *v1 = v0;
  OUTLINED_FUNCTION_8_17();
  OUTLINED_FUNCTION_1_34();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_2_9();
  OUTLINED_FUNCTION_91();
}

void CaptionsStateSource.callName.modify(_QWORD **a1)
{
  CaptionsViewModel.source.modify(a1);
}

void key path getter for CaptionsStateSource.groupImage : CaptionsStateSource(_QWORD *a1@<X8>)
{
  uint64_t v2;

  CaptionsStateSource.groupImage.getter();
  *a1 = v2;
}

void key path setter for CaptionsStateSource.groupImage : CaptionsStateSource(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  CaptionsStateSource.groupImage.setter(v1);
}

void closure #1 in CaptionsStateSource.groupImage.setter(uint64_t a1, void *a2)
{
  void *v4;
  id v5;

  swift_beginAccess();
  v4 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = a2;
  v5 = a2;

}

void CaptionsStateSource.groupImage.modify()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;

  v2 = OUTLINED_FUNCTION_5_30();
  OUTLINED_FUNCTION_11_9((uint64_t)v2);
  OUTLINED_FUNCTION_8_17();
  OUTLINED_FUNCTION_10_0(OBJC_IVAR____TtC15ConversationKit19CaptionsStateSource___observationRegistrar);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type CaptionsStateSource and conformance CaptionsStateSource, (void (*)(uint64_t))type metadata accessor for CaptionsStateSource);
  OUTLINED_FUNCTION_0_9(v3);
  OUTLINED_FUNCTION_17_22();
  *v1 = v0;
  OUTLINED_FUNCTION_8_17();
  OUTLINED_FUNCTION_1_34();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_2_9();
  OUTLINED_FUNCTION_91();
}

void CaptionsStateSource.groupImage.modify(_QWORD **a1)
{
  CaptionsViewModel.source.modify(a1);
}

void CaptionsStateSource.participants.getter()
{
  swift_getKeyPath();
  OUTLINED_FUNCTION_21_22();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type CaptionsStateSource and conformance CaptionsStateSource, (void (*)(uint64_t))type metadata accessor for CaptionsStateSource);
  OUTLINED_FUNCTION_2_6();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_3_36();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_9_0();
}

void key path getter for CaptionsStateSource.participants : CaptionsStateSource(_QWORD *a1@<X8>)
{
  uint64_t v2;

  CaptionsStateSource.participants.getter();
  *a1 = v2;
}

void key path setter for CaptionsStateSource.participants : CaptionsStateSource()
{
  swift_bridgeObjectRetain();
  CaptionsStateSource.participants.setter();
}

uint64_t closure #1 in CaptionsStateSource.participants.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(_QWORD *)(a1 + 40) = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

void CaptionsStateSource.participants.modify()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;

  v2 = OUTLINED_FUNCTION_5_30();
  OUTLINED_FUNCTION_11_9((uint64_t)v2);
  OUTLINED_FUNCTION_8_17();
  OUTLINED_FUNCTION_10_0(OBJC_IVAR____TtC15ConversationKit19CaptionsStateSource___observationRegistrar);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type CaptionsStateSource and conformance CaptionsStateSource, (void (*)(uint64_t))type metadata accessor for CaptionsStateSource);
  OUTLINED_FUNCTION_0_9(v3);
  OUTLINED_FUNCTION_17_22();
  *v1 = v0;
  OUTLINED_FUNCTION_8_17();
  OUTLINED_FUNCTION_1_34();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_2_9();
  OUTLINED_FUNCTION_91();
}

void CaptionsStateSource.participants.modify(_QWORD **a1)
{
  CaptionsViewModel.source.modify(a1);
}

uint64_t key path getter for CaptionsStateSource.sections : CaptionsStateSource@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = CaptionsStateSource.sections.getter();
  *a1 = result;
  return result;
}

void key path setter for CaptionsStateSource.sections : CaptionsStateSource()
{
  swift_bridgeObjectRetain();
  CaptionsStateSource.sections.setter();
}

void CaptionsStateSource.sections.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  swift_getKeyPath();
  OUTLINED_FUNCTION_61_4();
  OUTLINED_FUNCTION_28_18(v0, (uint64_t)partial apply for closure #1 in CaptionsStateSource.sections.setter, v1, (uint64_t)&OBJC_IVAR____TtC15ConversationKit19CaptionsStateSource___observationRegistrar, &lazy protocol witness table cache variable for type CaptionsStateSource and conformance CaptionsStateSource, (void (*)(uint64_t))type metadata accessor for CaptionsStateSource, (uint64_t)&protocol conformance descriptor for CaptionsStateSource, v2, v3);
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_14_1();
}

uint64_t closure #1 in CaptionsStateSource.sections.setter(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)(a1 + 48) = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

void key path getter for CaptionsStateSource.suppressionAge : CaptionsStateSource(uint64_t a1@<X8>)
{
  uint64_t v2;
  char v3;

  CaptionsStateSource.suppressionAge.getter();
  *(_QWORD *)a1 = v2;
  *(_BYTE *)(a1 + 8) = v3 & 1;
}

void key path setter for CaptionsStateSource.suppressionAge : CaptionsStateSource(uint64_t a1)
{
  CaptionsStateSource.suppressionAge.setter(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t closure #1 in CaptionsStateSource.suppressionAge.setter(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  result = swift_beginAccess();
  *(_QWORD *)(a1 + 56) = a2;
  *(_BYTE *)(a1 + 64) = a3 & 1;
  return result;
}

void CaptionsStateSource.suppressionAge.modify()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;

  v2 = OUTLINED_FUNCTION_5_30();
  OUTLINED_FUNCTION_11_9((uint64_t)v2);
  OUTLINED_FUNCTION_8_17();
  OUTLINED_FUNCTION_10_0(OBJC_IVAR____TtC15ConversationKit19CaptionsStateSource___observationRegistrar);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type CaptionsStateSource and conformance CaptionsStateSource, (void (*)(uint64_t))type metadata accessor for CaptionsStateSource);
  OUTLINED_FUNCTION_0_9(v3);
  OUTLINED_FUNCTION_17_22();
  *v1 = v0;
  OUTLINED_FUNCTION_8_17();
  OUTLINED_FUNCTION_1_34();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_2_9();
  OUTLINED_FUNCTION_91();
}

void CaptionsStateSource.suppressionAge.modify(_QWORD **a1)
{
  CaptionsViewModel.source.modify(a1);
}

void key path getter for CaptionsStateSource.maximumAge : CaptionsStateSource(uint64_t a1@<X8>)
{
  uint64_t v2;
  char v3;

  CaptionsStateSource.maximumAge.getter();
  *(_QWORD *)a1 = v2;
  *(_BYTE *)(a1 + 8) = v3 & 1;
}

void key path setter for CaptionsStateSource.maximumAge : CaptionsStateSource(uint64_t a1)
{
  CaptionsStateSource.maximumAge.setter(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t closure #1 in CaptionsStateSource.maximumAge.setter(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  result = swift_beginAccess();
  *(_QWORD *)(a1 + 72) = a2;
  *(_BYTE *)(a1 + 80) = a3 & 1;
  return result;
}

void CaptionsStateSource.maximumAge.modify()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;

  v2 = OUTLINED_FUNCTION_5_30();
  OUTLINED_FUNCTION_11_9((uint64_t)v2);
  OUTLINED_FUNCTION_8_17();
  OUTLINED_FUNCTION_10_0(OBJC_IVAR____TtC15ConversationKit19CaptionsStateSource___observationRegistrar);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type CaptionsStateSource and conformance CaptionsStateSource, (void (*)(uint64_t))type metadata accessor for CaptionsStateSource);
  OUTLINED_FUNCTION_0_9(v3);
  OUTLINED_FUNCTION_17_22();
  *v1 = v0;
  OUTLINED_FUNCTION_8_17();
  OUTLINED_FUNCTION_1_34();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_2_9();
  OUTLINED_FUNCTION_91();
}

void CaptionsStateSource.maximumAge.modify(_QWORD **a1)
{
  CaptionsViewModel.source.modify(a1);
}

void key path getter for CaptionsStateSource.isMinimized : CaptionsStateSource(_BYTE *a1@<X8>)
{
  char v2;

  CaptionsStateSource.isMinimized.getter();
  *a1 = v2 & 1;
}

void key path setter for CaptionsStateSource.isMinimized : CaptionsStateSource(char *a1)
{
  CaptionsStateSource.isMinimized.setter(*a1);
}

uint64_t closure #1 in CaptionsStateSource.isMinimized.setter(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_beginAccess();
  *(_BYTE *)(a1 + 81) = a2;
  return result;
}

void CaptionsStateSource.isMinimized.modify()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;

  v2 = OUTLINED_FUNCTION_5_30();
  OUTLINED_FUNCTION_11_9((uint64_t)v2);
  OUTLINED_FUNCTION_8_17();
  OUTLINED_FUNCTION_10_0(OBJC_IVAR____TtC15ConversationKit19CaptionsStateSource___observationRegistrar);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type CaptionsStateSource and conformance CaptionsStateSource, (void (*)(uint64_t))type metadata accessor for CaptionsStateSource);
  OUTLINED_FUNCTION_0_9(v3);
  OUTLINED_FUNCTION_17_22();
  *v1 = v0;
  OUTLINED_FUNCTION_8_17();
  OUTLINED_FUNCTION_1_34();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_2_9();
  OUTLINED_FUNCTION_91();
}

void CaptionsStateSource.isMinimized.modify(_QWORD **a1)
{
  CaptionsViewModel.source.modify(a1);
}

void key path getter for CaptionsStateSource.isGroupCall : CaptionsStateSource(_BYTE *a1@<X8>)
{
  char v2;

  CaptionsStateSource.isGroupCall.getter();
  *a1 = v2 & 1;
}

void key path setter for CaptionsStateSource.isGroupCall : CaptionsStateSource(char *a1)
{
  CaptionsStateSource.isGroupCall.setter(*a1);
}

uint64_t closure #1 in CaptionsStateSource.isGroupCall.setter(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_beginAccess();
  *(_BYTE *)(a1 + 82) = a2;
  return result;
}

void CaptionsStateSource.isGroupCall.modify()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;

  v2 = OUTLINED_FUNCTION_5_30();
  OUTLINED_FUNCTION_11_9((uint64_t)v2);
  OUTLINED_FUNCTION_8_17();
  OUTLINED_FUNCTION_10_0(OBJC_IVAR____TtC15ConversationKit19CaptionsStateSource___observationRegistrar);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type CaptionsStateSource and conformance CaptionsStateSource, (void (*)(uint64_t))type metadata accessor for CaptionsStateSource);
  OUTLINED_FUNCTION_0_9(v3);
  OUTLINED_FUNCTION_17_22();
  *v1 = v0;
  OUTLINED_FUNCTION_8_17();
  OUTLINED_FUNCTION_1_34();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_2_9();
  OUTLINED_FUNCTION_91();
}

void CaptionsStateSource.isGroupCall.modify(_QWORD **a1)
{
  CaptionsViewModel.source.modify(a1);
}

void key path getter for CaptionsStateSource.languageModelDownloadingProgress : CaptionsStateSource(uint64_t a1@<X8>)
{
  uint64_t v2;
  char v3;

  CaptionsStateSource.languageModelDownloadingProgress.getter();
  *(_QWORD *)a1 = v2;
  *(_BYTE *)(a1 + 8) = v3 & 1;
}

void key path setter for CaptionsStateSource.languageModelDownloadingProgress : CaptionsStateSource(uint64_t a1)
{
  CaptionsStateSource.languageModelDownloadingProgress.setter(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t closure #1 in CaptionsStateSource.languageModelDownloadingProgress.setter(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  result = swift_beginAccess();
  *(_QWORD *)(a1 + 88) = a2;
  *(_BYTE *)(a1 + 96) = a3 & 1;
  return result;
}

void CaptionsStateSource.languageModelDownloadingProgress.modify()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;

  v2 = OUTLINED_FUNCTION_5_30();
  OUTLINED_FUNCTION_11_9((uint64_t)v2);
  OUTLINED_FUNCTION_8_17();
  OUTLINED_FUNCTION_10_0(OBJC_IVAR____TtC15ConversationKit19CaptionsStateSource___observationRegistrar);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type CaptionsStateSource and conformance CaptionsStateSource, (void (*)(uint64_t))type metadata accessor for CaptionsStateSource);
  OUTLINED_FUNCTION_0_9(v3);
  OUTLINED_FUNCTION_17_22();
  *v1 = v0;
  OUTLINED_FUNCTION_8_17();
  OUTLINED_FUNCTION_1_34();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_2_9();
  OUTLINED_FUNCTION_91();
}

void CaptionsStateSource.languageModelDownloadingProgress.modify(_QWORD **a1)
{
  CaptionsViewModel.source.modify(a1);
}

void key path getter for CaptionsStateSource.allowsMinimization : CaptionsStateSource(_BYTE *a1@<X8>)
{
  char v2;

  CaptionsStateSource.allowsMinimization.getter();
  *a1 = v2 & 1;
}

void sub_1BD0AABF8()
{
  uint64_t v0;

  OUTLINED_FUNCTION_4();
  CaptionsStateSource.allowsMinimization.getter();
  OUTLINED_FUNCTION_68_0(v0);
  OUTLINED_FUNCTION_0();
}

void key path setter for CaptionsStateSource.allowsMinimization : CaptionsStateSource(char *a1)
{
  CaptionsStateSource.allowsMinimization.setter(*a1);
}

void sub_1BD0AAC3C(unsigned __int8 *a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_65_6(a1);
  CaptionsStateSource.allowsMinimization.setter(v1);
  OUTLINED_FUNCTION_0();
}

uint64_t type metadata accessor for CaptionsStateSource(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for CaptionsStateSource);
}

uint64_t closure #1 in CaptionsStateSource.allowsMinimization.setter(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_beginAccess();
  *(_BYTE *)(a1 + 97) = a2;
  return result;
}

uint64_t partial apply for closure #1 in CaptionsStateSource.allowsMinimization.setter()
{
  uint64_t v0;
  char v1;

  v0 = OUTLINED_FUNCTION_76_5();
  return closure #1 in CaptionsStateSource.allowsMinimization.setter(v0, v1);
}

void sub_1BD0AACD4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_4();
  CaptionsStateSource.isMinimized.getter();
  OUTLINED_FUNCTION_68_0(v0);
  OUTLINED_FUNCTION_0();
}

void sub_1BD0AACF4(unsigned __int8 *a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_65_6(a1);
  CaptionsStateSource.isMinimized.setter(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD0AAD10()
{
  uint64_t v0;

  OUTLINED_FUNCTION_4();
  CaptionsStateSource.isGroupCall.getter();
  OUTLINED_FUNCTION_68_0(v0);
  OUTLINED_FUNCTION_0();
}

void sub_1BD0AAD30(unsigned __int8 *a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_65_6(a1);
  CaptionsStateSource.isGroupCall.setter(v1);
  OUTLINED_FUNCTION_0();
}

uint64_t partial apply for closure #1 in CaptionsStateSource.isGroupCall.setter()
{
  uint64_t v0;
  char v1;

  v0 = OUTLINED_FUNCTION_76_5();
  return closure #1 in CaptionsStateSource.isGroupCall.setter(v0, v1);
}

void sub_1BD0AAD64()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_4();
  CaptionsStateSource.callName.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_0();
}

uint64_t partial apply for closure #1 in CaptionsStateSource.callName.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = OUTLINED_FUNCTION_64_3();
  return closure #1 in CaptionsStateSource.callName.setter(v0, v1, v2);
}

void sub_1BD0AADA0()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_4();
  CaptionsStateSource.groupImage.getter();
  *v0 = v1;
  OUTLINED_FUNCTION_0();
}

void partial apply for closure #1 in CaptionsStateSource.groupImage.setter()
{
  uint64_t v0;

  closure #1 in CaptionsStateSource.groupImage.setter(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t partial apply for closure #1 in CaptionsStateSource.languageModelDownloadingProgress.setter()
{
  uint64_t v0;

  return closure #1 in CaptionsStateSource.languageModelDownloadingProgress.setter(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32));
}

uint64_t partial apply for closure #1 in CaptionsViewModel.layoutIdiom.setter()
{
  uint64_t v0;
  char v1;

  v0 = OUTLINED_FUNCTION_76_5();
  return closure #1 in CaptionsViewModel.layoutIdiom.setter(v0, v1);
}

void CaptionsStateSource.allowsMinimization.modify()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;

  v2 = OUTLINED_FUNCTION_5_30();
  OUTLINED_FUNCTION_11_9((uint64_t)v2);
  OUTLINED_FUNCTION_8_17();
  OUTLINED_FUNCTION_10_0(OBJC_IVAR____TtC15ConversationKit19CaptionsStateSource___observationRegistrar);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type CaptionsStateSource and conformance CaptionsStateSource, (void (*)(uint64_t))type metadata accessor for CaptionsStateSource);
  OUTLINED_FUNCTION_0_9(v3);
  OUTLINED_FUNCTION_17_22();
  *v1 = v0;
  OUTLINED_FUNCTION_8_17();
  OUTLINED_FUNCTION_1_34();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_2_9();
  OUTLINED_FUNCTION_91();
}

void CaptionsStateSource.allowsMinimization.modify(_QWORD **a1)
{
  CaptionsViewModel.source.modify(a1);
}

void CaptionsStateSource.onRequestMinimize.getter()
{
  swift_getKeyPath();
  OUTLINED_FUNCTION_21_22();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type CaptionsStateSource and conformance CaptionsStateSource, (void (*)(uint64_t))type metadata accessor for CaptionsStateSource);
  OUTLINED_FUNCTION_2_6();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_3_36();
  OUTLINED_FUNCTION_11_8();
  OUTLINED_FUNCTION_21_6();
  OUTLINED_FUNCTION_9_0();
}

void key path getter for CaptionsStateSource.onRequestMinimize : CaptionsStateSource(_QWORD *a1@<X8>)
{
  key path getter for CaptionsStateSource.onRequestMinimize : CaptionsStateSource((uint64_t (*)(void))CaptionsStateSource.onRequestMinimize.getter, (uint64_t)partial apply for thunk for @escaping @callee_guaranteed (@unowned Bool) -> (), a1);
}

void key path setter for CaptionsStateSource.onRequestMinimize : CaptionsStateSource(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for CaptionsStateSource.onRequestMinimize : CaptionsStateSource(a1, a2, a3, a4, (uint64_t)&unk_1E76192E0, (uint64_t)partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Bool) -> (@out ()), CaptionsStateSource.onRequestMinimize.setter);
}

uint64_t closure #1 in CaptionsStateSource.onRequestMinimize.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  *(_QWORD *)(a1 + 104) = a2;
  *(_QWORD *)(a1 + 112) = a3;
  swift_retain();
  return swift_release();
}

void CaptionsStateSource.onRequestMinimize.modify()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;

  v2 = OUTLINED_FUNCTION_5_30();
  OUTLINED_FUNCTION_11_9((uint64_t)v2);
  OUTLINED_FUNCTION_8_17();
  OUTLINED_FUNCTION_10_0(OBJC_IVAR____TtC15ConversationKit19CaptionsStateSource___observationRegistrar);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type CaptionsStateSource and conformance CaptionsStateSource, (void (*)(uint64_t))type metadata accessor for CaptionsStateSource);
  OUTLINED_FUNCTION_0_9(v3);
  OUTLINED_FUNCTION_17_22();
  *v1 = v0;
  OUTLINED_FUNCTION_8_17();
  OUTLINED_FUNCTION_1_34();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_2_9();
  OUTLINED_FUNCTION_91();
}

void CaptionsStateSource.onRequestMinimize.modify(_QWORD **a1)
{
  CaptionsViewModel.source.modify(a1);
}

void CaptionsStateSource.onRequestDismissControls.getter()
{
  swift_getKeyPath();
  OUTLINED_FUNCTION_21_22();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type CaptionsStateSource and conformance CaptionsStateSource, (void (*)(uint64_t))type metadata accessor for CaptionsStateSource);
  OUTLINED_FUNCTION_2_6();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_3_36();
  OUTLINED_FUNCTION_11_8();
  OUTLINED_FUNCTION_21_6();
  OUTLINED_FUNCTION_9_0();
}

void key path getter for CaptionsStateSource.onRequestDismissControls : CaptionsStateSource(_QWORD *a1@<X8>)
{
  key path getter for CaptionsStateSource.onRequestMinimize : CaptionsStateSource((uint64_t (*)(void))CaptionsStateSource.onRequestDismissControls.getter, (uint64_t)partial apply for thunk for @callee_guaranteed () -> (), a1);
}

void key path getter for CaptionsStateSource.onRequestMinimize : CaptionsStateSource(uint64_t (*a1)(void)@<X3>, uint64_t a2@<X5>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = a1();
  v7 = v6;
  v8 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v8 + 16) = v5;
  *(_QWORD *)(v8 + 24) = v7;
  *a3 = a2;
  a3[1] = v8;
  OUTLINED_FUNCTION_91();
}

void key path setter for CaptionsStateSource.onRequestDismissControls : CaptionsStateSource(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for CaptionsStateSource.onRequestMinimize : CaptionsStateSource(a1, a2, a3, a4, (uint64_t)&unk_1E7619290, (uint64_t)partial apply for thunk for @callee_guaranteed () -> (), CaptionsStateSource.onRequestDismissControls.setter);
}

void key path setter for CaptionsStateSource.onRequestMinimize : CaptionsStateSource(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t, uint64_t))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v9 = *a1;
  v10 = a1[1];
  v11 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v11 + 16) = v9;
  *(_QWORD *)(v11 + 24) = v10;
  swift_retain();
  a7(a6, v11);
  OUTLINED_FUNCTION_91();
}

uint64_t closure #1 in CaptionsStateSource.onRequestDismissControls.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  *(_QWORD *)(a1 + 120) = a2;
  *(_QWORD *)(a1 + 128) = a3;
  swift_retain();
  return swift_release();
}

void CaptionsStateSource.onRequestDismissControls.modify()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;

  v2 = OUTLINED_FUNCTION_5_30();
  OUTLINED_FUNCTION_11_9((uint64_t)v2);
  OUTLINED_FUNCTION_8_17();
  OUTLINED_FUNCTION_10_0(OBJC_IVAR____TtC15ConversationKit19CaptionsStateSource___observationRegistrar);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type CaptionsStateSource and conformance CaptionsStateSource, (void (*)(uint64_t))type metadata accessor for CaptionsStateSource);
  OUTLINED_FUNCTION_0_9(v3);
  OUTLINED_FUNCTION_17_22();
  *v1 = v0;
  OUTLINED_FUNCTION_8_17();
  OUTLINED_FUNCTION_1_34();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_2_9();
  OUTLINED_FUNCTION_91();
}

void CaptionsStateSource.onRequestDismissControls.modify(_QWORD **a1)
{
  CaptionsViewModel.source.modify(a1);
}

uint64_t CaptionsStateSource.cancellables.getter()
{
  swift_getKeyPath();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type CaptionsStateSource and conformance CaptionsStateSource, (void (*)(uint64_t))type metadata accessor for CaptionsStateSource);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t key path setter for CaptionsStateSource.cancellables : CaptionsStateSource()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  return CaptionsStateSource.cancellables.setter(v0);
}

uint64_t CaptionsStateSource.cancellables.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  KeyPath = swift_getKeyPath();
  v6 = v1;
  v7 = a1;
  specialized CaptionsViewModel.withMutation<A, B>(keyPath:_:)(KeyPath, (uint64_t)partial apply for closure #1 in CaptionsStateSource.cancellables.setter, (uint64_t)&v5, (uint64_t)&OBJC_IVAR____TtC15ConversationKit19CaptionsStateSource___observationRegistrar, &lazy protocol witness table cache variable for type CaptionsStateSource and conformance CaptionsStateSource, (void (*)(uint64_t))type metadata accessor for CaptionsStateSource);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t closure #1 in CaptionsViewModel.cancellables.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(_QWORD *)(a1 + 136) = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t CaptionsStateSource.sectionsCurrentValueUpdater.getter()
{
  swift_getKeyPath();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type CaptionsStateSource and conformance CaptionsStateSource, (void (*)(uint64_t))type metadata accessor for CaptionsStateSource);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return swift_retain();
}

uint64_t key path setter for CaptionsStateSource.sectionsCurrentValueUpdater : CaptionsStateSource()
{
  uint64_t v0;

  v0 = swift_retain();
  return CaptionsStateSource.sectionsCurrentValueUpdater.setter(v0);
}

uint64_t CaptionsStateSource.sectionsCurrentValueUpdater.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  KeyPath = swift_getKeyPath();
  v6 = v1;
  v7 = a1;
  specialized CaptionsViewModel.withMutation<A, B>(keyPath:_:)(KeyPath, (uint64_t)partial apply for closure #1 in CaptionsStateSource.sectionsCurrentValueUpdater.setter, (uint64_t)&v5, (uint64_t)&OBJC_IVAR____TtC15ConversationKit19CaptionsStateSource___observationRegistrar, &lazy protocol witness table cache variable for type CaptionsStateSource and conformance CaptionsStateSource, (void (*)(uint64_t))type metadata accessor for CaptionsStateSource);
  swift_release();
  return swift_release();
}

uint64_t closure #1 in CaptionsStateSource.sectionsCurrentValueUpdater.setter(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)(a1 + 144) = a2;
  swift_retain();
  return swift_release();
}

void CaptionsStateSource.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;

  v1 = type metadata accessor for NSRunLoop.SchedulerTimeType.Stride();
  v29 = *(_QWORD *)(v1 - 8);
  v30 = v1;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_41();
  v26 = v3;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for OS_dispatch_queue.SchedulerOptions?);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_77();
  v7 = v6 - v5;
  v24 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.ReceiveOn<CurrentValueSubject<[CaptionSectioner.SpeakerSection], Never>, OS_dispatch_queue>)
                  - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_77();
  v11 = v10 - v9;
  v27 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.RemoveDuplicates<Publishers.ReceiveOn<CurrentValueSubject<[CaptionSectioner.SpeakerSection], Never>, OS_dispatch_queue>>)
                  - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_77();
  v15 = v14 - v13;
  v28 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.Throttle<Publishers.RemoveDuplicates<Publishers.ReceiveOn<CurrentValueSubject<[CaptionSectioner.SpeakerSection], Never>, OS_dispatch_queue>>, NSRunLoop>)
                  - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_41();
  v25 = v17;
  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0;
  v18 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v0 + 32) = 0;
  *(_QWORD *)(v0 + 40) = v18;
  *(_QWORD *)(v0 + 48) = v18;
  *(_QWORD *)(v0 + 56) = 0;
  *(_BYTE *)(v0 + 64) = 1;
  *(_QWORD *)(v0 + 72) = 0;
  *(_BYTE *)(v0 + 80) = 1;
  *(_WORD *)(v0 + 81) = 1;
  *(_QWORD *)(v0 + 88) = 0;
  *(_WORD *)(v0 + 96) = 257;
  *(_QWORD *)(v0 + 104) = TPNumberPadCharacter.rawValue.getter;
  *(_QWORD *)(v0 + 112) = 0;
  *(_QWORD *)(v0 + 120) = TPNumberPadCharacter.rawValue.getter;
  *(_QWORD *)(v0 + 128) = 0;
  *(_QWORD *)(v0 + 136) = v18;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CurrentValueSubject<[CaptionSectioner.SpeakerSection], Never>);
  OUTLINED_FUNCTION_14_0();
  *(_QWORD *)(v0 + 144) = CurrentValueSubject.init(_:)();
  ObservationRegistrar.init()();
  CaptionsStateSource.sectionsCurrentValueUpdater.getter();
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v31 = (void *)OUTLINED_FUNCTION_78_2();
  v19 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  OUTLINED_FUNCTION_77_0(v7, v20, v21, v19);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type CurrentValueSubject<[CaptionSectioner.SpeakerSection], Never> and conformance CurrentValueSubject<A, B>, &demangling cache variable for type metadata for CurrentValueSubject<[CaptionSectioner.SpeakerSection], Never>);
  _sSo9NSRunLoopCAB7Combine9Scheduler10FoundationWlTm_0(&lazy protocol witness table cache variable for type OS_dispatch_queue and conformance OS_dispatch_queue, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  Publisher.receive<A>(on:options:)();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v7, (uint64_t *)&demangling cache variable for type metadata for OS_dispatch_queue.SchedulerOptions?);

  swift_release();
  v22 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v22 + 16) = partial apply for implicit closure #2 in implicit closure #1 in CaptionsStateSource.init();
  *(_QWORD *)(v22 + 24) = v0;
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Publishers.ReceiveOn<CurrentValueSubject<[CaptionSectioner.SpeakerSection], Never>, OS_dispatch_queue> and conformance Publishers.ReceiveOn<A, B>, &demangling cache variable for type metadata for Publishers.ReceiveOn<CurrentValueSubject<[CaptionSectioner.SpeakerSection], Never>, OS_dispatch_queue>);
  OUTLINED_FUNCTION_11_8();
  Publisher.removeDuplicates(by:)();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_6_9(v11, *(uint64_t (**)(uint64_t, uint64_t))(v24 + 8));
  static NSRunLoop.SchedulerTimeType.Stride.seconds(_:)();
  v23 = objc_msgSend((id)objc_opt_self(), sel_mainRunLoop);
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSRunLoop);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Publishers.RemoveDuplicates<Publishers.ReceiveOn<CurrentValueSubject<[CaptionSectioner.SpeakerSection], Never>, OS_dispatch_queue>> and conformance Publishers.RemoveDuplicates<A>, &demangling cache variable for type metadata for Publishers.RemoveDuplicates<Publishers.ReceiveOn<CurrentValueSubject<[CaptionSectioner.SpeakerSection], Never>, OS_dispatch_queue>>);
  _sSo9NSRunLoopCAB7Combine9Scheduler10FoundationWlTm_0(&lazy protocol witness table cache variable for type NSRunLoop and conformance NSRunLoop, (unint64_t *)&lazy cache variable for type metadata for NSRunLoop);
  Publisher.throttle<A>(for:scheduler:latest:)();

  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v26, v30);
  OUTLINED_FUNCTION_6_9(v15, *(uint64_t (**)(uint64_t, uint64_t))(v27 + 8));
  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_7_4();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Publishers.Throttle<Publishers.RemoveDuplicates<Publishers.ReceiveOn<CurrentValueSubject<[CaptionSectioner.SpeakerSection], Never>, OS_dispatch_queue>>, NSRunLoop> and conformance Publishers.Throttle<A, B>, &demangling cache variable for type metadata for Publishers.Throttle<Publishers.RemoveDuplicates<Publishers.ReceiveOn<CurrentValueSubject<[CaptionSectioner.SpeakerSection], Never>, OS_dispatch_queue>>, NSRunLoop>);
  Publisher<>.sink(receiveValue:)();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_6_9(v25, *(uint64_t (**)(uint64_t, uint64_t))(v28 + 8));
  OUTLINED_FUNCTION_81_5();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type CaptionsStateSource and conformance CaptionsStateSource, (void (*)(uint64_t))type metadata accessor for CaptionsStateSource);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_81_5();
  ObservationRegistrar.willSet<A, B>(_:keyPath:)();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_60_0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [AnyCancellable]);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(lazy protocol witness table cache variable for type [AnyCancellable] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [AnyCancellable]);
  AnyCancellable.store<A>(in:)();
  swift_endAccess();
  OUTLINED_FUNCTION_17_22();
  OUTLINED_FUNCTION_81_5();
  ObservationRegistrar.didSet<A, B>(_:keyPath:)();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_52_1();
}

uint64_t sub_1BD0ABB5C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in CaptionsViewModel.init(participants:callName:groupImage:isGroupCall:allowsMinimization:layoutIdiom:defaults:allowsSuppression:)(char a1)
{
  return closure #1 in CaptionsViewModel.init(participants:callName:groupImage:isGroupCall:allowsMinimization:layoutIdiom:defaults:allowsSuppression:)(a1);
}

uint64_t partial apply for closure #2 in CaptionsViewModel.init(participants:callName:groupImage:isGroupCall:allowsMinimization:layoutIdiom:defaults:allowsSuppression:)()
{
  return closure #2 in CaptionsViewModel.init(participants:callName:groupImage:isGroupCall:allowsMinimization:layoutIdiom:defaults:allowsSuppression:)();
}

uint64_t partial apply for closure #1 in CaptionsStateSource.isMinimized.setter()
{
  uint64_t v0;
  char v1;

  v0 = OUTLINED_FUNCTION_76_5();
  return closure #1 in CaptionsStateSource.isMinimized.setter(v0, v1);
}

uint64_t partial apply for closure #1 in CaptionsStateSource.suppressionAge.setter()
{
  uint64_t v0;

  return closure #1 in CaptionsStateSource.suppressionAge.setter(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32));
}

uint64_t partial apply for closure #1 in CaptionsStateSource.maximumAge.setter()
{
  uint64_t v0;

  return closure #1 in CaptionsStateSource.maximumAge.setter(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32));
}

uint64_t partial apply for closure #1 in CaptionsStateSource.onRequestMinimize.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = OUTLINED_FUNCTION_64_3();
  return closure #1 in CaptionsStateSource.onRequestMinimize.setter(v0, v1, v2);
}

uint64_t partial apply for closure #1 in CaptionsStateSource.onRequestDismissControls.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = OUTLINED_FUNCTION_64_3();
  return closure #1 in CaptionsStateSource.onRequestDismissControls.setter(v0, v1, v2);
}

void outlined consume of CallDisplayInfo(void *a1, id a2, char a3)
{
  if (a3 == 2)
  {
LABEL_4:
    swift_bridgeObjectRelease();
    return;
  }
  if (a3 != 1)
  {
    if (a3)
      return;
    goto LABEL_4;
  }

}

void _sSo9NSRunLoopCAB7Combine9Scheduler10FoundationWlTm_0(_QWORD *a1, unint64_t *a2)
{
  if (!*a1)
  {
    _sSo8NSObjectCMaTm_0(255, a2);
    OUTLINED_FUNCTION_52_0();
  }
  OUTLINED_FUNCTION_0();
}

uint64_t partial apply for closure #1 in CaptionsViewModel.init(presentationStateProvider:remoteParticipantsStateProvider:allowsMinimization:layoutIdiom:defaults:)(uint64_t a1)
{
  return closure #1 in CaptionsViewModel.init(presentationStateProvider:remoteParticipantsStateProvider:allowsMinimization:layoutIdiom:defaults:)(a1);
}

void sub_1BD0ABC94()
{
  uint64_t *v0;

  OUTLINED_FUNCTION_4();
  *v0 = CaptionsViewModel.cancellables.getter();
  OUTLINED_FUNCTION_0();
}

uint64_t partial apply for closure #2 in CaptionsViewModel.init(presentationStateProvider:remoteParticipantsStateProvider:allowsMinimization:layoutIdiom:defaults:)(void **a1)
{
  return closure #2 in CaptionsViewModel.init(presentationStateProvider:remoteParticipantsStateProvider:allowsMinimization:layoutIdiom:defaults:)(a1);
}

uint64_t partial apply for closure #3 in CaptionsViewModel.init(presentationStateProvider:remoteParticipantsStateProvider:allowsMinimization:layoutIdiom:defaults:)(char *a1)
{
  return closure #3 in CaptionsViewModel.init(presentationStateProvider:remoteParticipantsStateProvider:allowsMinimization:layoutIdiom:defaults:)(a1);
}

uint64_t partial apply for closure #4 in CaptionsViewModel.init(presentationStateProvider:remoteParticipantsStateProvider:allowsMinimization:layoutIdiom:defaults:)()
{
  return closure #4 in CaptionsViewModel.init(presentationStateProvider:remoteParticipantsStateProvider:allowsMinimization:layoutIdiom:defaults:)();
}

uint64_t partial apply for closure #5 in CaptionsViewModel.init(presentationStateProvider:remoteParticipantsStateProvider:allowsMinimization:layoutIdiom:defaults:)(uint64_t a1)
{
  return closure #5 in CaptionsViewModel.init(presentationStateProvider:remoteParticipantsStateProvider:allowsMinimization:layoutIdiom:defaults:)(a1);
}

void sub_1BD0ABCD8()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_4();
  CaptionsStateSource.participants.getter();
  *v0 = v1;
  OUTLINED_FUNCTION_0();
}

uint64_t partial apply for closure #1 in CaptionsStateSource.participants.setter()
{
  uint64_t v0;

  return closure #1 in CaptionsStateSource.participants.setter(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_1BD0ABD14()
{
  uint64_t *v0;

  OUTLINED_FUNCTION_4();
  *v0 = CaptionsStateSource.sections.getter();
  OUTLINED_FUNCTION_0();
}

uint64_t CaptionsStateSource.duplicateSpeakerSectionComparator(_:_:)(uint64_t a1, uint64_t a2)
{
  char v4;

  if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16))
  {
    swift_retain();
    specialized Sequence.elementsEqual<A>(_:by:)(a2, a1);
  }
  else
  {
    v4 = 0;
  }
  return v4 & 1;
}

uint64_t closure #1 in CaptionsStateSource.init()()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    swift_bridgeObjectRetain();
    CaptionsStateSource.sections.setter();
    return swift_release();
  }
  return result;
}

void CaptionsStateSource.duplicateCaptionsComparator(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;

  v4 = type metadata accessor for CaptionSectioner.Caption(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v33 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (CaptionSectioner.Caption?, CaptionSectioner.Caption?));
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CaptionSectioner.Caption?);
  v15 = MEMORY[0x1E0C80A78](v14);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v33 - v17;
  if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16))
  {
    v39 = *(_QWORD *)(a1 + 16);
    v40 = v16;
    v37 = v13;
    v38 = v11;
    v41 = v4;
    v35 = v8;
    v36 = v5;
    v34 = a1;
    swift_bridgeObjectRetain();
    v33 = a2;
    swift_bridgeObjectRetain();
    v19 = 0;
    v20 = 0;
    while (1)
    {
      v21 = v39;
      if (v20 == v39)
      {
        v22 = 1;
        v23 = v39;
      }
      else
      {
        if (v20 >= v39)
        {
          __break(1u);
LABEL_19:
          __break(1u);
          return;
        }
        outlined init with copy of CaptionSectioner.SpeakerSection(v34+ ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80))+ *(_QWORD *)(v36 + 72) * v20, (uint64_t)v18, type metadata accessor for CaptionSectioner.Caption);
        v22 = 0;
        v23 = v20 + 1;
      }
      v24 = 1;
      v25 = v41;
      __swift_storeEnumTagSinglePayload((uint64_t)v18, v22, 1, v41);
      v26 = v21;
      if (v19 != v21)
      {
        if (v19 >= v21)
          goto LABEL_19;
        outlined init with copy of CaptionSectioner.SpeakerSection(v33+ ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80))+ *(_QWORD *)(v36 + 72) * v19, v40, type metadata accessor for CaptionSectioner.Caption);
        v24 = 0;
        v26 = v19 + 1;
        v25 = v41;
      }
      v19 = v26;
      v42 = v23;
      v27 = v40;
      __swift_storeEnumTagSinglePayload(v40, v24, 1, v25);
      v28 = (uint64_t)v37;
      v29 = (uint64_t)&v37[*(int *)(v38 + 48)];
      outlined init with take of CaptionSectioner.SpeakerSection?((uint64_t)v18, (uint64_t)v37, &demangling cache variable for type metadata for CaptionSectioner.Caption?);
      outlined init with take of CaptionSectioner.SpeakerSection?(v27, v29, &demangling cache variable for type metadata for CaptionSectioner.Caption?);
      if (__swift_getEnumTagSinglePayload(v28, 1, v25) == 1)
        break;
      if (__swift_getEnumTagSinglePayload(v29, 1, v25) == 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        outlined destroy of AccountUpdateNotice(v28, type metadata accessor for CaptionSectioner.Caption);
        return;
      }
      outlined init with take of CaptionSectioner.SpeakerSection(v28, (uint64_t)v10, type metadata accessor for CaptionSectioner.Caption);
      v30 = (uint64_t)v35;
      outlined init with take of CaptionSectioner.SpeakerSection(v29, (uint64_t)v35, type metadata accessor for CaptionSectioner.Caption);
      CaptionSectioner.Caption.isDisplayEquivalent(to:)();
      v32 = v31;
      outlined destroy of AccountUpdateNotice(v30, type metadata accessor for CaptionSectioner.Caption);
      outlined destroy of AccountUpdateNotice((uint64_t)v10, type metadata accessor for CaptionSectioner.Caption);
      v20 = v42;
      if ((v32 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (__swift_getEnumTagSinglePayload(v29, 1, v25) != 1)
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v29, &demangling cache variable for type metadata for CaptionSectioner.Caption?);
  }
}

void specialized Sequence.elementsEqual<A>(_:by:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;

  v4 = type metadata accessor for CaptionSectioner.SpeakerSection(0);
  v33 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x1E0C80A78](v4);
  v32 = (uint64_t)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v31 = (uint64_t)&v27 - v7;
  v34 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (CaptionSectioner.SpeakerSection?, CaptionSectioner.SpeakerSection?));
  MEMORY[0x1E0C80A78](v34);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CaptionSectioner.SpeakerSection?);
  v11 = MEMORY[0x1E0C80A78](v10);
  v36 = (uint64_t)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v27 - v13;
  v15 = *(_QWORD *)(a2 + 16);
  v35 = *(_QWORD *)(a1 + 16);
  v29 = a2;
  swift_bridgeObjectRetain();
  v28 = a1;
  swift_bridgeObjectRetain();
  v16 = 0;
  v17 = 0;
  v30 = v15;
  while (1)
  {
    if (v17 == v15)
    {
      v18 = 1;
      v17 = v15;
      goto LABEL_6;
    }
    if (v17 >= v15)
      break;
    outlined init with copy of CaptionSectioner.SpeakerSection(v29+ ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80))+ *(_QWORD *)(v33 + 72) * v17, (uint64_t)v14, type metadata accessor for CaptionSectioner.SpeakerSection);
    v18 = 0;
    ++v17;
LABEL_6:
    v19 = 1;
    __swift_storeEnumTagSinglePayload((uint64_t)v14, v18, 1, v4);
    v20 = v35;
    if (v16 != v35)
    {
      if (v16 >= v35)
        goto LABEL_18;
      outlined init with copy of CaptionSectioner.SpeakerSection(v28+ ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80))+ *(_QWORD *)(v33 + 72) * v16, v36, type metadata accessor for CaptionSectioner.SpeakerSection);
      v19 = 0;
      v20 = v16 + 1;
    }
    v21 = v36;
    __swift_storeEnumTagSinglePayload(v36, v19, 1, v4);
    v22 = (uint64_t)&v9[*(int *)(v34 + 48)];
    outlined init with take of CaptionSectioner.SpeakerSection?((uint64_t)v14, (uint64_t)v9, &demangling cache variable for type metadata for CaptionSectioner.SpeakerSection?);
    outlined init with take of CaptionSectioner.SpeakerSection?(v21, v22, &demangling cache variable for type metadata for CaptionSectioner.SpeakerSection?);
    if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v4) == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (__swift_getEnumTagSinglePayload(v22, 1, v4) != 1)
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v22, &demangling cache variable for type metadata for CaptionSectioner.SpeakerSection?);
      goto LABEL_15;
    }
    if (__swift_getEnumTagSinglePayload(v22, 1, v4) == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      outlined destroy of AccountUpdateNotice((uint64_t)v9, type metadata accessor for CaptionSectioner.SpeakerSection);
LABEL_15:
      swift_release();
      return;
    }
    v23 = v31;
    v37 = v20;
    outlined init with take of CaptionSectioner.SpeakerSection((uint64_t)v9, v31, type metadata accessor for CaptionSectioner.SpeakerSection);
    v24 = v32;
    outlined init with take of CaptionSectioner.SpeakerSection(v22, v32, type metadata accessor for CaptionSectioner.SpeakerSection);
    CaptionsStateSource.duplicateCaptionsComparator(_:_:)(*(_QWORD *)(v23 + *(int *)(v4 + 24)), *(_QWORD *)(v24 + *(int *)(v4 + 24)));
    v26 = v25;
    outlined destroy of AccountUpdateNotice(v24, type metadata accessor for CaptionSectioner.SpeakerSection);
    outlined destroy of AccountUpdateNotice(v23, type metadata accessor for CaptionSectioner.SpeakerSection);
    v16 = v37;
    v15 = v30;
    if ((v26 & 1) == 0)
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
  }
  __break(1u);
LABEL_18:
  __break(1u);
}

void CaptionsStateSource.deinit()
{
  uint64_t v0;
  uint64_t v1;

  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  v1 = OUTLINED_FUNCTION_73_1();
  OUTLINED_FUNCTION_17_1(v1);
  OUTLINED_FUNCTION_0();
}

uint64_t CaptionsStateSource.__deallocating_deinit()
{
  return CaptionsViewModel.__deallocating_deinit(CaptionsStateSource.deinit);
}

uint64_t CaptionsViewModel.__deallocating_deinit(void (*a1)(void))
{
  a1();
  return swift_deallocClassInstance();
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@guaranteed [CaptionSectioner.SpeakerSection], @guaranteed [CaptionSectioner.SpeakerSection]) -> (@unowned Bool)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v2 + 16))(*a1, *a2) & 1;
}

uint64_t partial apply for closure #1 in CaptionsStateSource.init()()
{
  return closure #1 in CaptionsStateSource.init()();
}

void sub_1BD0AC628()
{
  uint64_t *v0;

  OUTLINED_FUNCTION_4();
  *v0 = CaptionsStateSource.cancellables.getter();
  OUTLINED_FUNCTION_0();
}

void sub_1BD0AC64C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_4();
  v0 = CaptionsViewModel.allowsMinimization.getter();
  OUTLINED_FUNCTION_68_0(v0);
  OUTLINED_FUNCTION_0();
}

void sub_1BD0AC66C(unsigned __int8 *a1)
{
  OUTLINED_FUNCTION_65_6(a1);
  CaptionsViewModel.allowsMinimization.setter();
  OUTLINED_FUNCTION_0();
}

void sub_1BD0AC688()
{
  uint64_t v0;

  OUTLINED_FUNCTION_4();
  v0 = CaptionsViewModel.isGroupCall.getter();
  OUTLINED_FUNCTION_68_0(v0);
  OUTLINED_FUNCTION_0();
}

void sub_1BD0AC6A8(unsigned __int8 *a1)
{
  OUTLINED_FUNCTION_65_6(a1);
  CaptionsViewModel.isGroupCall.setter();
  OUTLINED_FUNCTION_0();
}

void sub_1BD0AC6C4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_4();
  CaptionsViewModel.callName.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_0();
}

uint64_t sub_1BD0AC6E4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for CaptionsViewModel.callName : CaptionsViewModel(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))CaptionsViewModel.callName.setter);
}

void sub_1BD0AC700()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_4();
  CaptionsViewModel.groupImage.getter();
  *v0 = v1;
  OUTLINED_FUNCTION_0();
}

uint64_t ObjC metadata update function for CaptionsViewModel()
{
  return type metadata accessor for CaptionsViewModel(0);
}

uint64_t type metadata completion function for CaptionsViewModel()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ObservationRegistrar();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for CaptionsViewModel()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CaptionsViewModel.__allocating_init(participants:callName:groupImage:isGroupCall:allowsMinimization:layoutIdiom:defaults:allowsSuppression:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t ObjC metadata update function for CaptionsStateSource()
{
  return type metadata accessor for CaptionsStateSource(0);
}

uint64_t type metadata completion function for CaptionsStateSource()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ObservationRegistrar();
  if (v1 <= 0x3F)
    return swift_updateClassMetadata2();
  return result;
}

uint64_t method lookup function for CaptionsStateSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CaptionsStateSource.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 200))();
}

uint64_t partial apply for closure #1 in CaptionsStateSource.sections.setter()
{
  uint64_t v0;

  return closure #1 in CaptionsStateSource.sections.setter(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t partial apply for closure #1 in CaptionsViewModel.cancellables.setter()
{
  uint64_t v0;

  return closure #1 in CaptionsViewModel.cancellables.setter(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1BD0AC920()
{
  swift_release();
  return swift_deallocObject();
}

void partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Bool) -> (@out ())(char a1)
{
  uint64_t v1;

  thunk for @escaping @callee_guaranteed (@in_guaranteed Bool) -> (@out ())(a1, *(void (**)(char *))(v1 + 16));
}

void partial apply for thunk for @escaping @callee_guaranteed (@unowned Bool) -> ()(unsigned __int8 *a1)
{
  uint64_t v1;

  thunk for @escaping @callee_guaranteed (@unowned Bool) -> ()(a1, *(void (**)(_QWORD))(v1 + 16));
}

void sub_1BD0AC954()
{
  uint64_t *v0;

  OUTLINED_FUNCTION_4();
  *v0 = CaptionsStateSource.sectionsCurrentValueUpdater.getter();
  OUTLINED_FUNCTION_0();
}

uint64_t partial apply for closure #1 in CaptionsStateSource.sectionsCurrentValueUpdater.setter()
{
  uint64_t v0;

  return closure #1 in CaptionsStateSource.sectionsCurrentValueUpdater.setter(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t outlined retain of [Participant](uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t partial apply for closure #1 in CaptionsViewModel.updateSuppressionTimer()(uint64_t a1)
{
  uint64_t v1;

  return closure #3 in CaptionsViewModel.updateExpirationTimer()(a1, v1, "Suppress captions timer fired", 29);
}

void sub_1BD0AC9DC()
{
  void **v0;

  OUTLINED_FUNCTION_4();
  *v0 = CaptionsViewModel.suppressionTimer.getter();
  OUTLINED_FUNCTION_0();
}

void partial apply for closure #1 in CaptionsViewModel.suppressionTimer.setter()
{
  uint64_t v0;

  closure #1 in CaptionsViewModel.suppressionTimer.setter(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

void partial apply for closure #1 in CaptionsViewModel.updateCaptionsVisibility(animated:)()
{
  uint64_t v0;

  closure #1 in CaptionsViewModel.updateCaptionsVisibility(animated:)(v0);
}

uint64_t outlined init with copy of CaptionSectioner.Caption??(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CaptionSectioner.Caption??);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void partial apply for closure #3 in CaptionsViewModel.updateExpirationTimer()()
{
  closure #3 in CaptionsViewModel.updateExpirationTimer()();
}

void sub_1BD0ACA9C()
{
  void **v0;

  OUTLINED_FUNCTION_4();
  *v0 = CaptionsViewModel.expirationTimer.getter();
  OUTLINED_FUNCTION_0();
}

void partial apply for closure #1 in CaptionsViewModel.expirationTimer.setter()
{
  uint64_t v0;

  closure #1 in CaptionsViewModel.expirationTimer.setter(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t partial apply for closure #1 in CaptionsStateSource.cancellables.setter()
{
  return partial apply for closure #1 in CaptionsViewModel.cancellables.setter();
}

uint64_t OUTLINED_FUNCTION_39_15()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 120) = v0;
  return swift_getKeyPath();
}

uint64_t OUTLINED_FUNCTION_75_4@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t OUTLINED_FUNCTION_76_5()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

void OUTLINED_FUNCTION_85_0(_QWORD *a1)
{
  uint64_t v1;

  *a1 = v1;
  CaptionsViewModel.source.getter();
}

uint64_t OUTLINED_FUNCTION_87_3()
{
  uint64_t (*v0)(uint64_t);
  uint64_t v1;

  return v0(v1);
}

uint64_t PipZoomControl.currentCameraUID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3 = (_QWORD *)(v2 + OBJC_IVAR____TtC15ConversationKit14PipZoomControl_currentCameraUID);
  *v3 = a1;
  v3[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t PipZoomControl.isZoomControlVisible.getter()
{
  uint64_t v0;
  uint64_t v1;
  id v2;

  v1 = OBJC_IVAR____TtC15ConversationKit14PipZoomControl_zoomControl;
  v2 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC15ConversationKit14PipZoomControl_zoomControl), sel_superview));

  if (v2)
    return objc_msgSend(*(id *)(v0 + v1), sel_isHidden) ^ 1;
  else
    return 0;
}

id PipZoomControl.userDeviceType.getter()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
  v1 = objc_msgSend(v0, sel_userInterfaceIdiom);

  return v1;
}

id PipZoomControl.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

char *PipZoomControl.init()()
{
  char *v0;
  uint64_t v1;
  id v2;
  char *v3;
  char *v4;
  id v5;
  objc_class *v6;
  char *v7;
  void *v8;
  char *v9;
  id v10;
  id v11;
  void *v12;
  _QWORD v14[4];
  objc_super v15;

  v1 = OBJC_IVAR____TtC15ConversationKit14PipZoomControl_pinchGestureRecognizer;
  v2 = objc_allocWithZone(MEMORY[0x1E0DC3AE8]);
  v3 = v0;
  *(_QWORD *)&v0[v1] = objc_msgSend(v2, sel_init);
  *(_DWORD *)&v3[OBJC_IVAR____TtC15ConversationKit14PipZoomControl_minimumZoomFactor] = 1065353216;
  *(_DWORD *)&v3[OBJC_IVAR____TtC15ConversationKit14PipZoomControl_zoomCameraSwitchFactorDefault] = 0x40000000;
  *(_QWORD *)&v3[OBJC_IVAR____TtC15ConversationKit14PipZoomControl_zoomControlOffset] = 0x4044000000000000;
  *(_DWORD *)&v3[OBJC_IVAR____TtC15ConversationKit14PipZoomControl_maximumZoomFactor] = 1090519040;
  *(_DWORD *)&v3[OBJC_IVAR____TtC15ConversationKit14PipZoomControl_maximumZoomFactorScaler] = 1077936128;
  *(_DWORD *)&v3[OBJC_IVAR____TtC15ConversationKit14PipZoomControl_currentZoomFactor] = 0;
  v4 = &v3[OBJC_IVAR____TtC15ConversationKit14PipZoomControl_currentCameraUID];
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0;
  *(_DWORD *)&v3[OBJC_IVAR____TtC15ConversationKit14PipZoomControl_pinchStartZoomFactor] = 1065353216;
  *(_DWORD *)&v3[OBJC_IVAR____TtC15ConversationKit14PipZoomControl_zoomFactorScale] = 1065353216;
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D0D1A8]), sel_initWithLayoutStyle_, 4);
  *(_QWORD *)&v3[OBJC_IVAR____TtC15ConversationKit14PipZoomControl_zoomControl] = v5;

  v6 = (objc_class *)type metadata accessor for PipZoomControl();
  v15.receiver = v3;
  v15.super_class = v6;
  v7 = (char *)objc_msgSendSuper2(&v15, sel_init);
  v8 = *(void **)&v7[OBJC_IVAR____TtC15ConversationKit14PipZoomControl_zoomControl];
  v9 = v7;
  objc_msgSend(v8, sel_setDelegate_, v9);
  v14[3] = v6;
  v14[0] = v9;
  v10 = objc_allocWithZone(MEMORY[0x1E0DC3AE8]);
  v11 = @nonobjc UIPinchGestureRecognizer.init(target:action:)(v14, (uint64_t)sel_handlePinchWithSender_);
  v12 = *(void **)&v9[OBJC_IVAR____TtC15ConversationKit14PipZoomControl_pinchGestureRecognizer];
  *(_QWORD *)&v9[OBJC_IVAR____TtC15ConversationKit14PipZoomControl_pinchGestureRecognizer] = v11;

  return v9;
}

uint64_t type metadata accessor for PipZoomControl()
{
  return objc_opt_self();
}

Swift::Void __swiftcall PipZoomControl.handlePinch(sender:)(UIPinchGestureRecognizer *sender)
{
  _QWORD *v1;
  id v3;

  v3 = -[UIPinchGestureRecognizer state](sender, sel_state);
  -[UIPinchGestureRecognizer scale](sender, sel_scale);
  (*(void (**)(id))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x198))(v3);
}

uint64_t PipZoomControl.handlePinch(state:scale:)(uint64_t result)
{
  uint64_t v1;

  if (result == 2)
    return OUTLINED_FUNCTION_2_46(*MEMORY[0x1E0DEEDD8]);
  if (result == 1)
    *(_DWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit14PipZoomControl_pinchStartZoomFactor) = *(_DWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit14PipZoomControl_currentZoomFactor);
  return result;
}

Swift::Void __swiftcall PipZoomControl.zoomToFactor(zoomFactor:)(Swift::Float zoomFactor)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  double v6;
  id v7;

  if (*(float *)(v1 + OBJC_IVAR____TtC15ConversationKit14PipZoomControl_maximumZoomFactor) < zoomFactor)
    zoomFactor = *(float *)(v1 + OBJC_IVAR____TtC15ConversationKit14PipZoomControl_maximumZoomFactor);
  if (*(float *)(v1 + OBJC_IVAR____TtC15ConversationKit14PipZoomControl_minimumZoomFactor) > zoomFactor)
    zoomFactor = *(float *)(v1 + OBJC_IVAR____TtC15ConversationKit14PipZoomControl_minimumZoomFactor);
  v2 = OBJC_IVAR____TtC15ConversationKit14PipZoomControl_currentZoomFactor;
  *(Swift::Float *)(v1 + OBJC_IVAR____TtC15ConversationKit14PipZoomControl_currentZoomFactor) = zoomFactor;
  v3 = OBJC_IVAR____TtC15ConversationKit14PipZoomControl_zoomControl;
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC15ConversationKit14PipZoomControl_zoomControl), sel_setZoomFactor_, zoomFactor);
  v4 = objc_msgSend(*(id *)(v1 + v3), sel_delegate);
  if (v4)
  {
    v5 = v4;
    if ((objc_msgSend(v4, sel_respondsToSelector_, sel_zoomControl_didChangeZoomFactor_interactionType_) & 1) != 0)
    {
      v6 = *(float *)(v1 + v2);
      v7 = *(id *)(v1 + v3);
      objc_msgSend(v5, sel_zoomControl_didChangeZoomFactor_interactionType_, v7, 1, v6);

    }
    swift_unknownObjectRelease();
  }
}

Swift::Void __swiftcall PipZoomControl.zoomToFactor(zoomFactor:minFactor:maxFactor:)(Swift::Float zoomFactor, Swift::Float minFactor, Swift::Float maxFactor)
{
  OUTLINED_FUNCTION_2_46(*MEMORY[0x1E0DEEDD8]);
}

Swift::Void __swiftcall PipZoomControl.changeZoomFactor(by:direction:)(Swift::Float by, Swift::Int direction)
{
  OUTLINED_FUNCTION_2_46(*MEMORY[0x1E0DEEDD8]);
}

BOOL PipZoomControl.hasLocalCameraUID.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit14PipZoomControl_currentCameraUID + 8) != 0;
}

Swift::Bool __swiftcall PipZoomControl.updateLocalCamera(localCameraUID:)(Swift::String localCameraUID)
{
  char *v1;
  float v2;
  char *v3;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  id v14;
  void *v15;
  uint64_t v16;
  float v17;
  id v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  char v24;
  uint64_t v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  Swift::Bool result;
  uint64_t v34;
  void *v35;
  char *v36;
  id v37;
  char *v38;
  id v39;
  os_log_type_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  id v50;
  unint64_t v51;
  id v52;
  float v53;
  char *v54;
  char *v55;
  id v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  float v62;
  float v63;
  float v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  float v72;
  float v73;
  uint64_t v74;
  void *v75;
  char *v76;
  id v77;
  char *v78;
  id v79;
  os_log_type_t v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  void *v90;
  uint64_t v91;
  void *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t aBlock[6];
  uint64_t v105;

  v3 = v1;
  object = localCameraUID._object;
  countAndFlagsBits = localCameraUID._countAndFlagsBits;
  v6 = type metadata accessor for DispatchWorkItemFlags();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v95 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS();
  v103 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x1E0C80A78](v10);
  v102 = (char *)&v95 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = OUTLINED_FUNCTION_17_8(v11, (unint64_t *)&lazy cache variable for type metadata for AVCaptureDevice);
  OUTLINED_FUNCTION_33_1();
  v14 = @nonobjc AVCaptureDevice.__allocating_init(uniqueID:)();
  if (!v14)
  {
    if (one-time initialization token for default != -1)
      swift_once();
    v25 = OUTLINED_FUNCTION_17_2();
    __swift_project_value_buffer(v25, (uint64_t)&static Log.default);
    OUTLINED_FUNCTION_36_18();
    Logger.logObject.getter();
    v26 = OUTLINED_FUNCTION_12_0();
    if (os_log_type_enabled(v13, v26))
    {
      v27 = (uint8_t *)OUTLINED_FUNCTION_105();
      aBlock[0] = OUTLINED_FUNCTION_4_31();
      *(_DWORD *)v27 = 136315138;
      OUTLINED_FUNCTION_33_1();
      v28 = OUTLINED_FUNCTION_40_13();
      OUTLINED_FUNCTION_53_8(v28);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_49_10();
      OUTLINED_FUNCTION_48(&dword_1BD004000, v13, v26, "PipZoomControl: No camera device found for localCameraUID=%s", v27);
      OUTLINED_FUNCTION_25_22();
      OUTLINED_FUNCTION_60();
    }

    OUTLINED_FUNCTION_19_1();
    OUTLINED_FUNCTION_41_11();
    return 0;
  }
  v15 = v14;
  if (objc_msgSend(v14, sel_position) != (id)1)
  {
    if (one-time initialization token for default != -1)
      swift_once();
    v29 = OUTLINED_FUNCTION_17_2();
    __swift_project_value_buffer(v29, (uint64_t)&static Log.default);
    OUTLINED_FUNCTION_36_18();
    Logger.logObject.getter();
    v30 = OUTLINED_FUNCTION_12_0();
    if (OUTLINED_FUNCTION_4_14(v30))
    {
      v31 = (uint8_t *)OUTLINED_FUNCTION_105();
      aBlock[0] = OUTLINED_FUNCTION_4_31();
      *(_DWORD *)v31 = 136315138;
      OUTLINED_FUNCTION_33_1();
      v32 = OUTLINED_FUNCTION_40_13();
      OUTLINED_FUNCTION_53_8(v32);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_49_10();
      OUTLINED_FUNCTION_48(&dword_1BD004000, v13, (os_log_type_t)v9, "PipZoomControl: Skip none back camera device with localCameraUID=%s", v31);
      OUTLINED_FUNCTION_25_22();
      OUTLINED_FUNCTION_60();
    }

    OUTLINED_FUNCTION_19_1();
    OUTLINED_FUNCTION_41_11();

    return 0;
  }
  OUTLINED_FUNCTION_33_1();
  PipZoomControl.currentCameraUID.setter(countAndFlagsBits, (uint64_t)object);
  v16 = OBJC_IVAR____TtC15ConversationKit14PipZoomControl_currentZoomFactor;
  v17 = *(float *)&v1[OBJC_IVAR____TtC15ConversationKit14PipZoomControl_currentZoomFactor];
  v100 = v7;
  v101 = v6;
  v98 = v10;
  v99 = v9;
  if (v17 != 0.0)
  {
    if (one-time initialization token for default == -1)
    {
LABEL_27:
      v34 = OUTLINED_FUNCTION_17_2();
      v35 = (void *)__swift_project_value_buffer(v34, (uint64_t)&static Log.default);
      v36 = v3;
      v37 = v15;
      v38 = v36;
      v39 = v37;
      Logger.logObject.getter();
      v40 = OUTLINED_FUNCTION_12_0();
      if (OUTLINED_FUNCTION_7_9(v40))
      {
        v41 = OUTLINED_FUNCTION_4_31();
        v97 = v16;
        v42 = v41;
        v95 = OUTLINED_FUNCTION_4_31();
        aBlock[0] = v95;
        *(_DWORD *)v42 = 136315650;
        v105 = (uint64_t)v39;
        v43 = v39;
        v96 = (uint64_t)v3;
        v44 = OUTLINED_FUNCTION_51_10();
        v105 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v44, v45, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        OUTLINED_FUNCTION_133();
        *(_WORD *)(v42 + 12) = 2048;
        OUTLINED_FUNCTION_54_9(*(float *)(v96 + v97));
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        *(_WORD *)(v42 + 22) = 2048;
        OUTLINED_FUNCTION_34_15(OBJC_IVAR____TtC15ConversationKit14PipZoomControl_maximumZoomFactor);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        OUTLINED_FUNCTION_23_22(&dword_1BD004000, v46, v47, "PipZoomControl: Zoom control update camera to %s, currentZoomFactor=%f maximumZoomFactor=%f");
        goto LABEL_51;
      }

      goto LABEL_53;
    }
LABEL_62:
    swift_once();
    goto LABEL_27;
  }
  v18 = objc_msgSend(v15, sel_deviceType);
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (v10 == OUTLINED_FUNCTION_39_16() && v7 == v19)
  {
    OUTLINED_FUNCTION_19_1();
LABEL_30:

    v48 = OUTLINED_FUNCTION_5_31();
    OUTLINED_FUNCTION_17_8((uint64_t)v48, (unint64_t *)&lazy cache variable for type metadata for NSNumber);
    OUTLINED_FUNCTION_20_28();
    OUTLINED_FUNCTION_18_17();
    if ((v7 & 0xC000000000000001) != 0)
      OUTLINED_FUNCTION_27_13();
    OUTLINED_FUNCTION_46_9();
    if (v49)
    {
      OUTLINED_FUNCTION_45_13();
      OUTLINED_FUNCTION_15_28();
      OUTLINED_FUNCTION_13_32();
      OUTLINED_FUNCTION_30_21();
      *(float *)&v3[v16] = v2;
      v50 = OUTLINED_FUNCTION_5_31();
      OUTLINED_FUNCTION_20_28();
      OUTLINED_FUNCTION_18_17();
      if ((v7 & 0xC000000000000001) == 0)
      {
        OUTLINED_FUNCTION_46_9();
        if (v51 <= 1)
        {
          __break(1u);
          goto LABEL_59;
        }
        v52 = *(id *)(v7 + 40);
LABEL_35:
        OUTLINED_FUNCTION_15_28();
        OUTLINED_FUNCTION_13_32();
        OUTLINED_FUNCTION_30_21();
        v53 = v2 * *(float *)&v3[OBJC_IVAR____TtC15ConversationKit14PipZoomControl_maximumZoomFactorScaler];
        v54 = v3;
        v3 = (char *)OBJC_IVAR____TtC15ConversationKit14PipZoomControl_maximumZoomFactor;
        v55 = v54;
        *(float *)&v54[OBJC_IVAR____TtC15ConversationKit14PipZoomControl_maximumZoomFactor] = v53;
        v56 = OUTLINED_FUNCTION_5_31();
        OUTLINED_FUNCTION_20_28();
        OUTLINED_FUNCTION_18_17();
        if ((v7 & 0xC000000000000001) != 0)
          OUTLINED_FUNCTION_27_13();
        OUTLINED_FUNCTION_46_9();
        if (v57)
        {
          OUTLINED_FUNCTION_45_13();
          OUTLINED_FUNCTION_15_28();
          OUTLINED_FUNCTION_13_32();
          OUTLINED_FUNCTION_30_21();
          v58 = OUTLINED_FUNCTION_5_31();
          v59 = OUTLINED_FUNCTION_20_28();

          if ((v59 & 0xC000000000000001) == 0)
          {
            OUTLINED_FUNCTION_55_8();
            if (v60)
            {
              v61 = OUTLINED_FUNCTION_42_11();
              v62 = floorf(v53 / v2);
              OUTLINED_FUNCTION_27();
              OUTLINED_FUNCTION_44_9();
              v64 = v63;

              *(float *)&v3[(_QWORD)v55] = v62 * v64;
              v3 = v55;
              goto LABEL_47;
            }
            __break(1u);
            goto LABEL_62;
          }
LABEL_60:
          OUTLINED_FUNCTION_18_9();
        }
LABEL_59:
        __break(1u);
        goto LABEL_60;
      }
    }
    else
    {
      __break(1u);
    }
    MEMORY[0x1C3B73D18](1, v7);
    goto LABEL_35;
  }
  v21 = OUTLINED_FUNCTION_14_37();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_133();
  if ((v21 & 1) != 0)
    goto LABEL_30;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (v21 == OUTLINED_FUNCTION_39_16() && v7 == v22)
  {

    OUTLINED_FUNCTION_19_1();
  }
  else
  {
    v24 = OUTLINED_FUNCTION_14_37();

    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_133();
    if ((v24 & 1) == 0)
    {
      *(_DWORD *)&v3[v16] = 1065353216;
LABEL_47:
      if (one-time initialization token for default != -1)
        swift_once();
      v74 = OUTLINED_FUNCTION_17_2();
      v75 = (void *)__swift_project_value_buffer(v74, (uint64_t)&static Log.default);
      v76 = v3;
      v77 = v15;
      v78 = v76;
      v79 = v77;
      Logger.logObject.getter();
      v80 = OUTLINED_FUNCTION_12_0();
      if (OUTLINED_FUNCTION_7_9(v80))
      {
        v81 = OUTLINED_FUNCTION_4_31();
        v97 = v16;
        v82 = v81;
        v96 = OUTLINED_FUNCTION_4_31();
        aBlock[0] = v96;
        *(_DWORD *)v82 = 136315650;
        v105 = (uint64_t)v79;
        v83 = v79;
        v84 = OUTLINED_FUNCTION_51_10();
        v105 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v84, v85, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        *(_WORD *)(v82 + 12) = 2048;
        OUTLINED_FUNCTION_54_9(*(float *)&v3[v97]);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        *(_WORD *)(v82 + 22) = 2048;
        OUTLINED_FUNCTION_34_15(OBJC_IVAR____TtC15ConversationKit14PipZoomControl_maximumZoomFactor);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        OUTLINED_FUNCTION_23_22(&dword_1BD004000, v86, v87, "PipZoomControl: Zoom control first time set to camera to %s. Initialize currentZoomFactor=%f, maximumZoomFactor=%f");
LABEL_51:
        OUTLINED_FUNCTION_25_22();
        OUTLINED_FUNCTION_60();
      }

LABEL_53:
      v89 = v102;
      v88 = v103;
      OUTLINED_FUNCTION_17_8(v65, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
      v90 = (void *)static OS_dispatch_queue.main.getter();
      v91 = swift_allocObject();
      swift_unknownObjectWeakInit();
      aBlock[4] = (uint64_t)partial apply for closure #1 in PipZoomControl.updateLocalCamera(localCameraUID:);
      aBlock[5] = v91;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)thunk for @escaping @callee_guaranteed () -> ();
      aBlock[3] = (uint64_t)&block_descriptor_11;
      v92 = _Block_copy(aBlock);
      swift_release();
      static DispatchQoS.unspecified.getter();
      aBlock[0] = MEMORY[0x1E0DEE9D8];
      lazy protocol witness table accessor for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
      lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]();
      v93 = v99;
      v94 = v101;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      MEMORY[0x1C3B7361C](0, v89, v93, v92);
      _Block_release(v92);

      (*(void (**)(char *, uint64_t))(v100 + 8))(v93, v94);
      (*(void (**)(char *, uint64_t))(v88 + 8))(v89, v98);
      return 1;
    }
  }
  v66 = OUTLINED_FUNCTION_5_31();
  OUTLINED_FUNCTION_17_8((uint64_t)v66, (unint64_t *)&lazy cache variable for type metadata for NSNumber);
  OUTLINED_FUNCTION_20_28();
  OUTLINED_FUNCTION_18_17();
  if ((v7 & 0xC000000000000001) != 0)
    OUTLINED_FUNCTION_27_13();
  OUTLINED_FUNCTION_46_9();
  if (!v67)
  {
    __break(1u);
LABEL_65:
    OUTLINED_FUNCTION_18_9();
  }
  OUTLINED_FUNCTION_45_13();
  OUTLINED_FUNCTION_15_28();
  OUTLINED_FUNCTION_13_32();
  OUTLINED_FUNCTION_30_21();
  *(float *)&v3[v16] = v2;
  v68 = OUTLINED_FUNCTION_5_31();
  v69 = OUTLINED_FUNCTION_20_28();

  if ((v69 & 0xC000000000000001) != 0)
    goto LABEL_65;
  OUTLINED_FUNCTION_55_8();
  if (v70)
  {
    v71 = OUTLINED_FUNCTION_42_11();
    OUTLINED_FUNCTION_27();
    OUTLINED_FUNCTION_44_9();
    v73 = v72;

    *(float *)&v3[OBJC_IVAR____TtC15ConversationKit14PipZoomControl_maximumZoomFactor] = v73
                                                                                       * *(float *)&v3[OBJC_IVAR____TtC15ConversationKit14PipZoomControl_maximumZoomFactorScaler];
    goto LABEL_47;
  }
  __break(1u);
  return result;
}

id @nonobjc AVCaptureDevice.__allocating_init(uniqueID:)()
{
  void *v0;
  id v1;

  v0 = (void *)MEMORY[0x1C3B72E00]();
  swift_bridgeObjectRelease();
  v1 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_deviceWithUniqueID_, v0);

  return v1;
}

void closure #1 in PipZoomControl.updateLocalCamera(localCameraUID:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  void *v3;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = (_QWORD *)MEMORY[0x1C3B752C0](v1);
  if (v2)
  {
    v3 = v2;
    (*(void (**)(float))((*MEMORY[0x1E0DEEDD8] & *v2) + 0x1A0))(*(float *)((char *)v2
                                                                                      + OBJC_IVAR____TtC15ConversationKit14PipZoomControl_currentZoomFactor));

  }
}

Swift::Void __swiftcall PipZoomControl.addControl(to:above:)(UIView *to, UIView *above)
{
  _QWORD *v2;
  _QWORD *v3;
  unint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(void);
  double v18;
  double MinX;
  uint64_t Width;
  uint64_t MidX;
  uint64_t v22;
  double v23;
  uint64_t *v24;
  uint64_t v25;
  id v26;
  UIView *v27;
  id v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  char v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  int v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  int v56;
  int v57;
  float v58;
  float v59;
  float v60;
  id v61;
  int v62;
  int v63;
  int v64;
  int v65;
  int v66;
  int v67;
  int v68;
  id v69;
  uint64_t v70;
  id v71;
  int v72;
  int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  int v79;
  int v80;
  id v81;
  id v82;
  int v83;
  int v84;
  int v85;
  int v86;
  int v87;
  int v88;
  int v89;
  int v90;
  int v91;
  id v92;
  id v93;
  int v94;
  int v95;
  int v96;
  int v97;
  int v98;
  int v99;
  int v100;
  int v101;
  id v102;
  id v103;
  float v104;
  float v105;
  uint64_t v106;
  void *v107;
  id v108;
  id v109;
  id v110;
  int v111;
  int v112;
  int v113;
  int v114;
  int v115;
  int v116;
  int v117;
  id v118;
  uint64_t v119;
  NSObject *v120;
  os_log_type_t v121;
  uint8_t *v122;
  int v123;
  int v124;
  int v125;
  int v126;
  int v127;
  int v128;
  int v129;
  int v130;
  id v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  float v136;
  float v137;
  float v138;
  float v139;
  float v140;
  int v141;
  int v142;
  int v143;
  int v144;
  int v145;
  int v146;
  int v147;
  id v148;
  uint64_t v149;
  int v150;
  int v151;
  int v152;
  int v153;
  int v154;
  int v155;
  int v156;
  int v157;
  id v158;
  id v159;
  float v160;
  float v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  double v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  UIView *v278;
  id v279;
  id v280;
  id v281;
  id v282;
  float v283;
  id v284;
  id v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  id v307;
  id v308;
  id v309;
  id v310;
  id v311;
  id v312;
  id v313;
  uint64_t v314;
  CGRect v315;
  CGRect v316;
  CGRect v317;

  v3 = v2;
  v6 = 0xEF64657A696C6169;
  v7 = 0x74696E4920746F4ELL;
  v8 = -[UIView frame](above, sel_frame);
  v10 = v9;
  v12 = v11;
  v14 = v13;
  v16 = v15;
  v17 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v2) + 0x188);
  if (((uint64_t (*)(id))v17)(v8))
    v18 = 0.0;
  else
    v18 = -36.0;
  v315.origin.x = OUTLINED_FUNCTION_22_24();
  MinX = CGRectGetMinX(v315);
  *(double *)&v300 = OUTLINED_FUNCTION_28_19();
  v316.origin.x = OUTLINED_FUNCTION_22_24();
  Width = CGRectGetWidth(v316);
  v317.origin.x = OUTLINED_FUNCTION_22_24();
  MidX = CGRectGetMidX(v317);
  v23 = OUTLINED_FUNCTION_28_19();
  v24 = (_QWORD *)((char *)v2 + OBJC_IVAR____TtC15ConversationKit14PipZoomControl_currentCameraUID);
  if (!*(_QWORD *)((char *)v2 + OBJC_IVAR____TtC15ConversationKit14PipZoomControl_currentCameraUID + 8))
  {
LABEL_25:
    v38 = one-time initialization token for default;
    swift_bridgeObjectRetain();
    if (v38 != -1)
      swift_once();
    v39 = OUTLINED_FUNCTION_17_2();
    __swift_project_value_buffer(v39, (uint64_t)&static Log.default);
    swift_bridgeObjectRetain();
    v40 = Logger.logObject.getter();
    v41 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v40, v41))
    {
      v42 = (uint8_t *)OUTLINED_FUNCTION_105();
      v314 = OUTLINED_FUNCTION_4_31();
      *(_DWORD *)v42 = 136315138;
      swift_bridgeObjectRetain();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v7, v6, &v314);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      OUTLINED_FUNCTION_48(&dword_1BD004000, v40, v41, "PipZoomControl: No camera device found for localCameraUID=%s", v42);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_60();
    }

    OUTLINED_FUNCTION_19_1();
    OUTLINED_FUNCTION_29_16();
    return;
  }
  *(double *)&v293 = v23;
  v286 = *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC15ConversationKit14PipZoomControl_zoomControlOffset);
  v25 = *v24;
  OUTLINED_FUNCTION_17_8(v22, (unint64_t *)&lazy cache variable for type metadata for AVCaptureDevice);
  swift_bridgeObjectRetain();
  v26 = @nonobjc AVCaptureDevice.__allocating_init(uniqueID:)();
  if (!v26)
  {
    if (v24[1])
    {
      v7 = *v24;
      v6 = v24[1];
    }
    goto LABEL_25;
  }
  v278 = to;
  v27 = (UIView *)OBJC_IVAR____TtC15ConversationKit14PipZoomControl_zoomFactorScale;
  *(_DWORD *)((char *)v2 + OBJC_IVAR____TtC15ConversationKit14PipZoomControl_zoomFactorScale) = 1065353216;
  v307 = v26;
  v28 = objc_msgSend(v26, sel_deviceType);
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  v30 = v25 == OUTLINED_FUNCTION_16_18() && v29 == 0xEF64657A696C6169;
  v264 = MidX;
  v271 = *(double *)&Width;
  if (v30)
  {
    OUTLINED_FUNCTION_19_1();
LABEL_31:

    v51 = objc_retainAutoreleasedReturnValue(OUTLINED_FUNCTION_0_44(v43, v44, v45, v46, v47, v48, v49, v50, v162, v169, v176, v183, v190, v197, v204, v211, v219, v227,
              v235,
              *(uint64_t *)&MinX,
              v16,
              v14,
              MidX,
              Width,
              (uint64_t)v278,
              v286,
              v293,
              v300,
              v307));
    v52 = OUTLINED_FUNCTION_17_8((uint64_t)v51, (unint64_t *)&lazy cache variable for type metadata for NSNumber);
    v53 = OUTLINED_FUNCTION_7_45();

    if ((v53 & 0xC000000000000001) != 0)
      OUTLINED_FUNCTION_18_9();
    OUTLINED_FUNCTION_55_8();
    if (v54)
    {
      v55 = (unint64_t)OUTLINED_FUNCTION_42_11();
      OUTLINED_FUNCTION_27();
      OUTLINED_FUNCTION_17_23();
      v57 = v56;

      HIDWORD(v212) = v57;
      *(_DWORD *)((char *)&v27->super.super.isa + (_QWORD)v3) = v57;
      v58 = *(float *)((char *)v3 + OBJC_IVAR____TtC15ConversationKit14PipZoomControl_currentZoomFactor);
      v59 = *(float *)((char *)v3 + OBJC_IVAR____TtC15ConversationKit14PipZoomControl_minimumZoomFactor);
      v60 = *(float *)((char *)v3 + OBJC_IVAR____TtC15ConversationKit14PipZoomControl_maximumZoomFactor);
      v61 = *(id *)((char *)v3 + OBJC_IVAR____TtC15ConversationKit14PipZoomControl_zoomControl);
      v69 = objc_retainAutoreleasedReturnValue(OUTLINED_FUNCTION_0_44((int)v61, v62, v63, v64, v65, v66, v67, v68, v163, v170, v177, v184, v191, v198, v205, v212, v220, v228,
                v236,
                v243,
                v250,
                v257,
                v265,
                v272,
                (uint64_t)v279,
                v287,
                v294,
                v301,
                v308));
      OUTLINED_FUNCTION_7_45();
      OUTLINED_FUNCTION_41_2();
      if ((v55 & 0xC000000000000001) == 0)
      {
        OUTLINED_FUNCTION_38_12();
        if (v70)
        {
          v71 = OUTLINED_FUNCTION_37_14();
          OUTLINED_FUNCTION_30_4();
          OUTLINED_FUNCTION_9_31();
          LODWORD(v280) = v72;

          v81 = objc_retainAutoreleasedReturnValue(OUTLINED_FUNCTION_0_44(v73, v74, v75, v76, v77, v78, v79, v80, v164, v171, v178, v185, v192, v199, v206, v213, v221, v229,
                    v237,
                    v244,
                    v251,
                    v258,
                    v266,
                    v273,
                    (uint64_t)v280,
                    v288,
                    v295,
                    v302,
                    v309));
          OUTLINED_FUNCTION_7_45();
          OUTLINED_FUNCTION_41_2();
          if ((v55 & 0xC000000000000001) == 0)
          {
            if (*(_QWORD *)((v55 & 0xFFFFFFFFFFFFF8) + 0x10))
            {
              v82 = OUTLINED_FUNCTION_37_14();
              OUTLINED_FUNCTION_30_4();
              OUTLINED_FUNCTION_9_31();
              LODWORD(v214) = v83;

              v92 = objc_retainAutoreleasedReturnValue(OUTLINED_FUNCTION_0_44(v84, v85, v86, v87, v88, v89, v90, v91, v165, v172, v179, v186, v193, v200, v207, v214, v222, v230,
                        v238,
                        v245,
                        v252,
                        v259,
                        v267,
                        v274,
                        (uint64_t)v281,
                        v289,
                        v296,
                        v303,
                        v310));
              OUTLINED_FUNCTION_7_45();
              OUTLINED_FUNCTION_41_2();
              if ((v55 & 0xC000000000000001) != 0)
              {
                MEMORY[0x1C3B73D18](1, v55);
LABEL_40:
                OUTLINED_FUNCTION_30_4();
                OUTLINED_FUNCTION_9_31();
                OUTLINED_FUNCTION_50_10();
                v102 = objc_retainAutoreleasedReturnValue(OUTLINED_FUNCTION_0_44(v94, v95, v96, v97, v98, v99, v100, v101, v166, v173, v180, v187, v194, v201, v208, v215, v223, v231,
                           v239,
                           v246,
                           v253,
                           v260,
                           v268,
                           v275,
                           (uint64_t)v282,
                           v290,
                           v297,
                           v304,
                           v311));
                OUTLINED_FUNCTION_7_45();
                OUTLINED_FUNCTION_14_10();
                v224 = v10;
                *(double *)&v232 = v18;
                v240 = v12;
                if ((v52 & 0xC000000000000001) == 0)
                {
                  if (*(_QWORD *)((v52 & 0xFFFFFFFFFFFFF8) + 0x10) > 1uLL)
                  {
                    v103 = *(id *)(v52 + 40);
                    OUTLINED_FUNCTION_133();
                    OUTLINED_FUNCTION_17_23();
                    v105 = v104;

                    objc_msgSend(v61, sel_configureForTripleDeviceWithZoomFactor_minimumZoomFactor_displayMinimumZoomFactor_maximumZoomFactor_displayMaximumZoomFactor_switchOverZoomFactor1_displaySwitchOverZoomFactor1_switchOverZoomFactor2_displaySwitchOverZoomFactor2_, v58, v59, (float)(v59 / *((float *)&v216 + 1)), v60, (float)(v60 / *((float *)&v216 + 1)), v283, (float)(*(float *)&v216 / *((float *)&v216 + 1)), *(float *)&v16, (float)(v105 / *((float *)&v216 + 1)));
LABEL_43:

                    v10 = v224;
                    v18 = *(double *)&v232;
                    v12 = v240;
                    v16 = v254;
                    v14 = v261;
                    MinX = *(double *)&v247;
                    goto LABEL_44;
                  }
                  __break(1u);
LABEL_69:
                  OUTLINED_FUNCTION_19_26();
                }
LABEL_67:
                OUTLINED_FUNCTION_52_10();
              }
              if (*(_QWORD *)((v55 & 0xFFFFFFFFFFFFF8) + 0x10) > 1uLL)
              {
                v93 = *(id *)(v55 + 40);
                goto LABEL_40;
              }
            }
            else
            {
              __break(1u);
            }
            __break(1u);
            goto LABEL_67;
          }
        }
        else
        {
          __break(1u);
        }
        OUTLINED_FUNCTION_19_26();
      }
    }
    else
    {
      __break(1u);
    }
    OUTLINED_FUNCTION_19_26();
  }
  v31 = OUTLINED_FUNCTION_4_13();
  OUTLINED_FUNCTION_133();
  OUTLINED_FUNCTION_30_4();
  if ((v31 & 1) != 0)
    goto LABEL_31;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (v31 == OUTLINED_FUNCTION_16_18() && v32 == 0xEF64657A696C6169)
  {
    OUTLINED_FUNCTION_19_1();
    goto LABEL_46;
  }
  v34 = OUTLINED_FUNCTION_4_13();
  OUTLINED_FUNCTION_133();
  OUTLINED_FUNCTION_30_4();
  if ((v34 & 1) != 0)
  {
LABEL_46:

    v110 = *(id *)((char *)v3 + OBJC_IVAR____TtC15ConversationKit14PipZoomControl_zoomControl);
    v118 = objc_retainAutoreleasedReturnValue(OUTLINED_FUNCTION_0_44((int)v110, v111, v112, v113, v114, v115, v116, v117, v162, v169, v176, v183, v190, v197, v204, v211, v219, v227,
               v235,
               *(uint64_t *)&MinX,
               v16,
               v14,
               MidX,
               Width,
               (uint64_t)v278,
               v286,
               v293,
               v300,
               v307));
    OUTLINED_FUNCTION_17_8((uint64_t)v118, (unint64_t *)&lazy cache variable for type metadata for NSNumber);
    OUTLINED_FUNCTION_7_45();
    OUTLINED_FUNCTION_41_2();
    goto LABEL_69;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (v34 == OUTLINED_FUNCTION_16_18() && v35 == 0xEF64657A696C6169)
  {

    OUTLINED_FUNCTION_19_1();
  }
  else
  {
    v37 = OUTLINED_FUNCTION_4_13();

    OUTLINED_FUNCTION_133();
    OUTLINED_FUNCTION_30_4();
    if ((v37 & 1) == 0)
    {
      objc_msgSend(*(id *)((char *)v3 + OBJC_IVAR____TtC15ConversationKit14PipZoomControl_zoomControl), sel_configureForDualDeviceWithZoomFactor_minimumZoomFactor_displayMinimumZoomFactor_maximumZoomFactor_displayMaximumZoomFactor_dualCameraSwitchOverZoomFactor_displayDualCameraSwitchOverZoomFactor_, *(float *)((char *)v3 + OBJC_IVAR____TtC15ConversationKit14PipZoomControl_currentZoomFactor), *(float *)((char *)v3 + OBJC_IVAR____TtC15ConversationKit14PipZoomControl_minimumZoomFactor), *(float *)((char *)v3 + OBJC_IVAR____TtC15ConversationKit14PipZoomControl_minimumZoomFactor), *(float *)((char *)v3 + OBJC_IVAR____TtC15ConversationKit14PipZoomControl_maximumZoomFactor), *(float *)((char *)v3 + OBJC_IVAR____TtC15ConversationKit14PipZoomControl_maximumZoomFactor), *(float *)((char *)v3 + OBJC_IVAR____TtC15ConversationKit14PipZoomControl_zoomCameraSwitchFactorDefault), *(float *)((char *)v3 + OBJC_IVAR____TtC15ConversationKit14PipZoomControl_zoomCameraSwitchFactorDefault));
      v27 = v278;
LABEL_44:
      v106 = OBJC_IVAR____TtC15ConversationKit14PipZoomControl_zoomControl;
      -[UIView insertSubview:aboveSubview:](v27, sel_insertSubview_aboveSubview_, *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC15ConversationKit14PipZoomControl_zoomControl), above);
      v107 = (void *)objc_opt_self();
      v108 = *(id *)((char *)v3 + v106);
      objc_msgSend(v107, sel_layoutZoomControl_forLayoutStyle_bottomBarAlignmentRect_bottomBarTransparent_shutterButtonAlignmentRect_previewViewAlignmentRect_, v108, 4, v17() == 0, MinX, *(double *)&v300 + v18, v271, 0.0, *(double *)&v264, v18 + *(double *)&v293 + *(double *)&v286, 0.0, v18, v10, v12, v14, v16);

      -[UIView addGestureRecognizer:](v27, sel_addGestureRecognizer_, *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC15ConversationKit14PipZoomControl_pinchGestureRecognizer));
      OUTLINED_FUNCTION_29_16();

      return;
    }
  }
  if (one-time initialization token for default != -1)
    swift_once();
  v119 = OUTLINED_FUNCTION_17_2();
  v120 = __swift_project_value_buffer(v119, (uint64_t)&static Log.default);
  Logger.logObject.getter();
  v121 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_4_14(v121))
  {
    v122 = (uint8_t *)OUTLINED_FUNCTION_105();
    *(_WORD *)v122 = 0;
    _os_log_impl(&dword_1BD004000, v120, (os_log_type_t)0x69u, "PipZoomControl: Customize zoom control UI for builtInDualWideCamera", v122, 2u);
    OUTLINED_FUNCTION_60();
  }

  v131 = objc_retainAutoreleasedReturnValue(OUTLINED_FUNCTION_0_44(v123, v124, v125, v126, v127, v128, v129, v130, v162, v169, v176, v183, v190, v197, v204, v211, v219, v227,
             v235,
             *(uint64_t *)&MinX,
             v16,
             v14,
             MidX,
             Width,
             (uint64_t)v278,
             v286,
             v293,
             v300,
             v307));
  v132 = OUTLINED_FUNCTION_17_8((uint64_t)v131, (unint64_t *)&lazy cache variable for type metadata for NSNumber);
  v133 = OUTLINED_FUNCTION_7_45();

  v233 = *(_QWORD *)&v18;
  v241 = v12;
  if ((v133 & 0xC000000000000001) != 0)
    OUTLINED_FUNCTION_18_9();
  OUTLINED_FUNCTION_55_8();
  if (!v134)
  {
    __break(1u);
LABEL_72:
    OUTLINED_FUNCTION_19_26();
  }
  v135 = (unint64_t)OUTLINED_FUNCTION_42_11();
  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_17_23();
  v137 = v136;

  *(float *)((char *)&v27->super.super.isa + (_QWORD)v3) = v137;
  v138 = *(float *)((char *)v3 + OBJC_IVAR____TtC15ConversationKit14PipZoomControl_currentZoomFactor);
  v139 = *(float *)((char *)v3 + OBJC_IVAR____TtC15ConversationKit14PipZoomControl_minimumZoomFactor);
  v140 = *(float *)((char *)v3 + OBJC_IVAR____TtC15ConversationKit14PipZoomControl_maximumZoomFactor);
  v61 = *(id *)((char *)v3 + OBJC_IVAR____TtC15ConversationKit14PipZoomControl_zoomControl);
  v148 = objc_retainAutoreleasedReturnValue(OUTLINED_FUNCTION_0_44((int)v61, v141, v142, v143, v144, v145, v146, v147, v167, v174, v181, v188, v195, v202, v209, v217, v225, v233,
             v241,
             v248,
             v255,
             v262,
             v269,
             v276,
             (uint64_t)v284,
             v291,
             v298,
             v305,
             v312));
  OUTLINED_FUNCTION_7_45();
  OUTLINED_FUNCTION_41_2();
  if ((v135 & 0xC000000000000001) != 0)
    goto LABEL_72;
  OUTLINED_FUNCTION_38_12();
  if (!v149)
  {
    __break(1u);
LABEL_74:
    OUTLINED_FUNCTION_52_10();
  }
  OUTLINED_FUNCTION_37_14();
  OUTLINED_FUNCTION_30_4();
  OUTLINED_FUNCTION_9_31();
  OUTLINED_FUNCTION_50_10();
  v158 = objc_retainAutoreleasedReturnValue(OUTLINED_FUNCTION_0_44(v150, v151, v152, v153, v154, v155, v156, v157, v168, v175, v182, v189, v196, v203, v210, v218, v226, v234,
             v242,
             v249,
             v256,
             v263,
             v270,
             v277,
             (uint64_t)v285,
             v292,
             v299,
             v306,
             v313));
  OUTLINED_FUNCTION_7_45();
  OUTLINED_FUNCTION_14_10();
  v224 = v10;
  if ((v132 & 0xC000000000000001) != 0)
    goto LABEL_74;
  if (*(_QWORD *)((v132 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v159 = *(id *)(v132 + 32);
    OUTLINED_FUNCTION_133();
    OUTLINED_FUNCTION_17_23();
    v161 = v160;

    objc_msgSend(v61, sel_configureForDualDeviceWithZoomFactor_minimumZoomFactor_displayMinimumZoomFactor_maximumZoomFactor_displayMaximumZoomFactor_dualCameraSwitchOverZoomFactor_displayDualCameraSwitchOverZoomFactor_, v138, v139, (float)(v139 / v137), v140, (float)(v140 / v137), *(float *)&v16, (float)(v161 / v137));
    goto LABEL_43;
  }
  __break(1u);
}

Swift::Void __swiftcall PipZoomControl.removeControl(from:)(UIView *from)
{
  uint64_t v1;

  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC15ConversationKit14PipZoomControl_zoomControl), sel_removeFromSuperview);
  -[UIView removeGestureRecognizer:](from, sel_removeGestureRecognizer_, *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit14PipZoomControl_pinchGestureRecognizer));
}

uint64_t static PipZoomControl.isZoomSupported.getter()
{
  return 1;
}

id PipZoomControl.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PipZoomControl();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void PipZoomControl.zoomControl(_:didChangeZoomFactor:interactionType:)(double a1)
{
  uint64_t v1;
  float v3;
  id v4;
  id v5;

  v3 = a1;
  *(float *)(v1 + OBJC_IVAR____TtC15ConversationKit14PipZoomControl_currentZoomFactor) = v3;
  v4 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v5 = objc_msgSend(v4, sel_videoDeviceController);

  objc_msgSend(v5, sel_setCameraZoomFactor_, a1);
}

id @nonobjc UIPinchGestureRecognizer.init(target:action:)(_QWORD *a1, uint64_t a2)
{
  void *v2;
  uint64_t v4;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  uint64_t v13;

  v4 = a1[3];
  if (v4)
  {
    v6 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    v7 = *(_QWORD *)(v4 - 8);
    MEMORY[0x1E0C80A78](v6);
    v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v7 + 16))(v9);
    v10 = _bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v4);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v10 = 0;
  }
  v11 = objc_msgSend(v2, sel_initWithTarget_action_, v10, a2);
  swift_unknownObjectRelease();
  return v11;
}

unint64_t specialized Array._checkSubscript(_:wasNativeTypeChecked:)(unint64_t result, char a2, uint64_t a3)
{
  if ((a2 & 1) != 0)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(_QWORD *)(a3 + 16) > result)
    {
      return result;
    }
    __break(1u);
  }
  return result;
}

{
  if ((a2 & 1) != 0)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > result)
    {
      return result;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1BD0AEA78()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void partial apply for closure #1 in PipZoomControl.updateLocalCamera(localCameraUID:)()
{
  uint64_t v0;

  closure #1 in PipZoomControl.updateLocalCamera(localCameraUID:)(v0);
}

uint64_t method lookup function for PipZoomControl()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PipZoomControl.isZoomControlVisible.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x180))();
}

uint64_t dispatch thunk of PipZoomControl.userDeviceType.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x188))();
}

uint64_t dispatch thunk of PipZoomControl.handlePinch(sender:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x190))();
}

uint64_t dispatch thunk of PipZoomControl.handlePinch(state:scale:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x198))();
}

uint64_t dispatch thunk of PipZoomControl.zoomToFactor(zoomFactor:)()
{
  return OUTLINED_FUNCTION_2_46(*MEMORY[0x1E0DEEDD8]);
}

uint64_t dispatch thunk of PipZoomControl.zoomToFactor(zoomFactor:minFactor:maxFactor:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1A8))();
}

uint64_t dispatch thunk of PipZoomControl.changeZoomFactor(by:direction:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1B0))();
}

uint64_t dispatch thunk of PipZoomControl.hasLocalCameraUID.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1B8))();
}

uint64_t dispatch thunk of PipZoomControl.updateLocalCamera(localCameraUID:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1C0))();
}

uint64_t dispatch thunk of PipZoomControl.addControl(to:above:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1C8))();
}

uint64_t dispatch thunk of PipZoomControl.removeControl(from:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1D0))();
}

uint64_t OUTLINED_FUNCTION_39_16()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

void VideoStatusProvider.__allocating_init(callCenter:)(void *a1)
{
  uint64_t v2;
  id v3;

  v2 = swift_allocObject();
  v3 = objc_msgSend(a1, sel_videoDeviceController);

  *(_QWORD *)(v2 + 16) = v3;
  OUTLINED_FUNCTION_18();
}

void VideoStatusProvider.init(callCenter:)(void *a1)
{
  uint64_t v1;
  id v3;

  v3 = objc_msgSend(a1, sel_videoDeviceController);

  *(_QWORD *)(v1 + 16) = v3;
  OUTLINED_FUNCTION_18();
}

uint64_t VideoStatusProvider.hasNoVideo.getter()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;

  v1 = *(void **)(v0 + 16);
  if ((objc_msgSend(v1, sel_isPreviewRunning) & 1) != 0)
    return 0;
  v3 = objc_msgSend(v1, sel_currentInputDevice);
  v4 = v3;
  if (v3)
    goto LABEL_6;
  v5 = VideoStatusProvider.activeDevice.getter();
  if (v5)
  {
    v4 = v5;
LABEL_6:
    v6 = one-time initialization token for conversationKit;
    v7 = v3;
    if (v6 != -1)
      swift_once();
    v8 = type metadata accessor for Logger();
    __swift_project_value_buffer(v8, (uint64_t)&static Logger.conversationKit);
    v9 = v4;
    v10 = Logger.logObject.getter();
    v11 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v12 = 67109120;
      OUTLINED_FUNCTION_2_47();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      _os_log_impl(&dword_1BD004000, v10, v11, "VideoStatusProvider camera isSuspended: %{BOOL}d", v12, 8u);
      OUTLINED_FUNCTION_60();
    }

    v2 = OUTLINED_FUNCTION_2_47();
    return (uint64_t)v2;
  }
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  v14 = type metadata accessor for Logger();
  __swift_project_value_buffer(v14, (uint64_t)&static Logger.conversationKit);
  v15 = Logger.logObject.getter();
  v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v17 = 0;
    _os_log_impl(&dword_1BD004000, v15, v16, "VideoStatusProvider has no camera", v17, 2u);
    OUTLINED_FUNCTION_60();
  }

  return 1;
}

uint64_t VideoStatusProvider.videoInfoDidChange.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  id v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  uint64_t v17;
  uint64_t v18;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.MergeMany<NSNotificationCenter.Publisher>);
  v17 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.Map<Publishers.MergeMany<NSNotificationCenter.Publisher>, ()>);
  v18 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for NSNotificationCenter.Publisher();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v17 - v11;
  v13 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  NSNotificationCenter.publisher(for:object:)();
  NSNotificationCenter.publisher(for:object:)();
  lazy protocol witness table accessor for type NSNotificationCenter.Publisher and conformance NSNotificationCenter.Publisher();
  Publisher.merge(with:)();
  lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type Publishers.MergeMany<NSNotificationCenter.Publisher> and conformance Publishers.MergeMany<A>, &demangling cache variable for type metadata for Publishers.MergeMany<NSNotificationCenter.Publisher>, MEMORY[0x1E0C95C80]);
  Publisher.map<A>(_:)();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v2, v0);
  lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type Publishers.Map<Publishers.MergeMany<NSNotificationCenter.Publisher>, ()> and conformance Publishers.Map<A, B>, &demangling cache variable for type metadata for Publishers.Map<Publishers.MergeMany<NSNotificationCenter.Publisher>, ()>, MEMORY[0x1E0C95950]);
  v14 = Publisher.eraseToAnyPublisher()();

  (*(void (**)(char *, uint64_t))(v18 + 8))(v5, v3);
  v15 = *(void (**)(char *, uint64_t))(v7 + 8);
  v15(v10, v6);
  v15(v12, v6);
  return v14;
}

void *VideoStatusProvider.activeDevice.getter()
{
  uint64_t v0;
  id v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;

  v1 = objc_msgSend(*(id *)(v0 + 16), sel_inputDevices);
  type metadata accessor for AVCaptureDevice();
  v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v2 >> 62)
    goto LABEL_15;
  v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; v3 = _CocoaArrayWrapper.endIndex.getter())
  {
    v4 = 4;
    while (1)
    {
      v5 = (v2 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1C3B73D18](v4 - 4, v2) : *(id *)(v2 + 8 * v4);
      v6 = v5;
      v7 = v4 - 3;
      if (__OFADD__(v4 - 4, 1))
        break;
      if (objc_msgSend(v5, sel_isConnected) && (objc_msgSend(v6, sel_isSuspended) & 1) == 0)
      {
        OUTLINED_FUNCTION_3_3();
        return v6;
      }

      ++v4;
      if (v7 == v3)
        goto LABEL_11;
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
  }
LABEL_11:
  OUTLINED_FUNCTION_3_3();
  return 0;
}

uint64_t VideoStatusProvider.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t VideoStatusProvider.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t protocol witness for VideoStatusProviding.hasNoVideo.getter in conformance VideoStatusProvider()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t protocol witness for VideoStatusProviding.videoInfoDidChange.getter in conformance VideoStatusProvider()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of VideoStatusProviding.hasNoVideo.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of VideoStatusProviding.videoInfoDidChange.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t type metadata accessor for VideoStatusProvider()
{
  return objc_opt_self();
}

uint64_t method lookup function for VideoStatusProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of VideoStatusProvider.__allocating_init(callCenter:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of VideoStatusProvider.hasNoVideo.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of VideoStatusProvider.videoInfoDidChange.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

unint64_t type metadata accessor for AVCaptureDevice()
{
  unint64_t result;

  result = lazy cache variable for type metadata for AVCaptureDevice;
  if (!lazy cache variable for type metadata for AVCaptureDevice)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for AVCaptureDevice);
  }
  return result;
}

uint64_t key path setter for ConversationDetailsView.recipe : ConversationDetailsView(uint64_t a1, _QWORD **a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v4 = type metadata accessor for ConversationControlsRecipe();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of ConversationControlsRecipe(a1, (uint64_t)v6);
  return (*(uint64_t (**)(char *))((*MEMORY[0x1E0DEEDD8] & **a2) + 0xB0))(v6);
}

void ConversationDetailsView.recipe.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15ConversationKit23ConversationDetailsView_recipe;
  OUTLINED_FUNCTION_2_0();
  outlined init with copy of ConversationControlsRecipe(v3, a1);
  OUTLINED_FUNCTION_43_1();
}

uint64_t ConversationDetailsView.recipe.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15ConversationKit23ConversationDetailsView_recipe;
  OUTLINED_FUNCTION_2_0();
  outlined assign with copy of ConversationControlsRecipe(a1, v3);
  swift_endAccess();
  ConversationDetailsView.updateStatus()();
  return OUTLINED_FUNCTION_10_12();
}

void ConversationDetailsView.recipe.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_7_6();
  OUTLINED_FUNCTION_0();
}

void ConversationDetailsView.recipe.modify(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    ConversationDetailsView.updateStatus()();
  OUTLINED_FUNCTION_0();
}

double ConversationDetailsView.titleLabelGlyphInset.getter()
{
  uint64_t *v0;
  uint64_t (*v1)(void);
  void *v2;
  double v3;
  double v4;
  double v5;
  double v6;
  void *v7;
  double v8;
  double v9;

  v2 = (void *)OUTLINED_FUNCTION_38_13(*v0);
  objc_msgSend(v2, sel__tightBoundingRectOfFirstLine);
  v4 = v3;
  v6 = v5;

  v7 = (void *)v1();
  objc_msgSend(v7, sel_convertPoint_toCoordinateSpace_, v0, v4, v6);
  v9 = v8;

  return v9;
}

void ConversationDetailsView.conversationDetailsVStack.getter()
{
  CallControlsViewController.menuViewController.getter(&OBJC_IVAR____TtC15ConversationKit23ConversationDetailsView____lazy_storage___conversationDetailsVStack, (uint64_t (*)(uint64_t))closure #1 in ConversationDetailsView.conversationDetailsVStack.getter);
}

void ConversationDetailsView.conversationDetailsVStack.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_4_3(a1, OBJC_IVAR____TtC15ConversationKit23ConversationDetailsView____lazy_storage___conversationDetailsVStack);
}

uint64_t key path setter for ConversationDetailsView.conversationDetailsVStack : ConversationDetailsView(id *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & **a2) + 0xD0))(*a1);
}

void *closure #1 in ConversationDetailsView.conversationDetailsVStack.getter(_QWORD *a1)
{
  uint64_t v2;
  _QWORD *v3;
  UIStackView *v4;
  void *v5;
  void *v6;

  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for UIStackView);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BD6441C0;
  v3 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  *(_QWORD *)(v2 + 32) = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x110))();
  *(_QWORD *)(v2 + 40) = (*(uint64_t (**)(void))((*v3 & *a1) + 0xE0))();
  specialized Array._endMutation()();
  UIStackView.__allocating_init(arrangedSubviews:)(v4, (Swift::OpaquePointer)v2);
  v6 = v5;
  objc_msgSend(v5, sel_setAxis_, 1);
  objc_msgSend(v6, sel_setAlignment_, 1);
  return v6;
}

void ConversationDetailsView.conversationDetailsVStack.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_8_3(a1);
  ConversationDetailsView.conversationDetailsVStack.getter();
  *v1 = v2;
  OUTLINED_FUNCTION_0();
}

void ConversationDetailsView.conversationDetailsVStack.modify(void **a1, char a2)
{
  CallRecordingPillViewController.countdownView.modify(a1, a2, (void (*)(void))ConversationDetailsView.conversationDetailsVStack.setter);
}

uint64_t key path setter for ConversationDetailsView.conversationSubtitleHStack : ConversationDetailsView(id *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & **a2) + 0xE8))(*a1);
}

void ConversationDetailsView.conversationSubtitleHStack.getter()
{
  CallControlsViewController.menuViewController.getter(&OBJC_IVAR____TtC15ConversationKit23ConversationDetailsView____lazy_storage___conversationSubtitleHStack, (uint64_t (*)(uint64_t))closure #1 in ConversationDetailsView.conversationSubtitleHStack.getter);
}

id closure #1 in ConversationDetailsView.conversationSubtitleHStack.getter(_QWORD *a1)
{
  uint64_t v2;
  _QWORD *v3;
  UIStackView *v4;
  void *v5;
  void *v6;
  void (*v7)(void);
  id v8;
  Swift::OpaquePointer arrangedSubviews;
  double v11;

  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for UIStackView);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BD6441C0;
  v3 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  *(_QWORD *)(v2 + 32) = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x128))();
  *(_QWORD *)(v2 + 40) = (*(uint64_t (**)(void))((*v3 & *a1) + 0x140))();
  arrangedSubviews._rawValue = (void *)v2;
  specialized Array._endMutation()();
  UIStackView.__allocating_init(arrangedSubviews:)(v4, (Swift::OpaquePointer)v2);
  v6 = v5;
  objc_msgSend(v5, sel_setAxis_, 0);
  objc_msgSend(v6, sel_setAlignment_, 2);
  objc_msgSend(v6, sel_setDistribution_, 3);
  static Layout.ConversationControls.values.getter((uint64_t)&arrangedSubviews);
  objc_msgSend(v6, sel_setSpacing_, v11);
  v7 = *(void (**)(void))((*v3 & *a1) + 0x178);
  v8 = v6;
  v7();
  objc_msgSend(v8, sel_setAlpha_);

  return v8;
}

void ConversationDetailsView.conversationSubtitleHStack.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_4_3(a1, OBJC_IVAR____TtC15ConversationKit23ConversationDetailsView____lazy_storage___conversationSubtitleHStack);
}

void ConversationDetailsView.conversationSubtitleHStack.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_8_3(a1);
  ConversationDetailsView.conversationSubtitleHStack.getter();
  *v1 = v2;
  OUTLINED_FUNCTION_0();
}

void ConversationDetailsView.conversationSubtitleHStack.modify(void **a1, char a2)
{
  CallRecordingPillViewController.countdownView.modify(a1, a2, (void (*)(void))ConversationDetailsView.conversationSubtitleHStack.setter);
}

uint64_t key path setter for ConversationDetailsView.leadingAccessoryView : ConversationDetailsView(id *a1, _QWORD **a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x100);
  v4 = *a1;
  return v3(v2);
}

void ConversationDetailsView.leadingAccessoryView.getter()
{
  uint64_t v0;
  id *v1;
  id v2;

  v1 = (id *)(v0 + OBJC_IVAR____TtC15ConversationKit23ConversationDetailsView_leadingAccessoryView);
  OUTLINED_FUNCTION_2_0();
  v2 = *v1;
  OUTLINED_FUNCTION_43_1();
}

void ConversationDetailsView.leadingAccessoryView.setter(void *a1)
{
  ConversationDetailsView.leadingAccessoryView.setter(a1, &OBJC_IVAR____TtC15ConversationKit23ConversationDetailsView_leadingAccessoryView);
}

void ConversationDetailsView.leadingAccessoryView.modify()
{
  OUTLINED_FUNCTION_7_6();
  OUTLINED_FUNCTION_0();
}

void ConversationDetailsView.conversationTitleLabel.getter()
{
  CallControlsViewController.menuViewController.getter(&OBJC_IVAR____TtC15ConversationKit23ConversationDetailsView____lazy_storage___conversationTitleLabel, (uint64_t (*)(uint64_t))closure #1 in ConversationDetailsView.conversationTitleLabel.getter);
}

void ConversationDetailsView.conversationTitleLabel.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_4_3(a1, OBJC_IVAR____TtC15ConversationKit23ConversationDetailsView____lazy_storage___conversationTitleLabel);
}

uint64_t key path setter for ConversationDetailsView.conversationTitleLabel : ConversationDetailsView(id *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x118))(*a1);
}

id closure #1 in ConversationDetailsView.conversationTitleLabel.getter()
{
  id v0;
  void *v1;
  void *v2;
  id v3;
  double v4;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  ConversationDetailsView.titleLabelFont.getter();
  v2 = v1;
  objc_msgSend(v0, sel_setFont_, v1);

  objc_msgSend(v0, sel_setAdjustsFontForContentSizeCategory_, 1);
  v3 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
  objc_msgSend(v0, sel_setTextColor_, v3);

  LODWORD(v4) = 1132068864;
  objc_msgSend(v0, sel_setContentCompressionResistancePriority_forAxis_, 0, v4);
  objc_msgSend(v0, sel__setWantsContentAwareTypesettingLanguage_, 1);
  return v0;
}

void ConversationDetailsView.conversationTitleLabel.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_8_3(a1);
  ConversationDetailsView.conversationTitleLabel.getter();
  *v1 = v2;
  OUTLINED_FUNCTION_0();
}

void ConversationDetailsView.conversationTitleLabel.modify(void **a1, char a2)
{
  CallRecordingPillViewController.countdownView.modify(a1, a2, (void (*)(void))ConversationDetailsView.conversationTitleLabel.setter);
}

void ConversationDetailsView.conversationSubtitleLabel.getter()
{
  CallControlsViewController.menuViewController.getter(&OBJC_IVAR____TtC15ConversationKit23ConversationDetailsView____lazy_storage___conversationSubtitleLabel, (uint64_t (*)(uint64_t))closure #1 in ConversationDetailsView.conversationSubtitleLabel.getter);
}

void ConversationDetailsView.conversationSubtitleLabel.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_4_3(a1, OBJC_IVAR____TtC15ConversationKit23ConversationDetailsView____lazy_storage___conversationSubtitleLabel);
}

uint64_t key path setter for ConversationDetailsView.conversationSubtitleLabel : ConversationDetailsView(id *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x130))(*a1);
}

id closure #1 in ConversationDetailsView.conversationSubtitleLabel.getter()
{
  id v0;
  void *v1;
  id v2;
  double v3;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  v1 = (void *)ConversationDetailsView.chevronLabelFont.getter();
  objc_msgSend(v0, sel_setFont_, v1);

  objc_msgSend(v0, sel_setAdjustsFontForContentSizeCategory_, 1);
  v2 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
  objc_msgSend(v0, sel_setTextColor_, v2);

  LODWORD(v3) = 1132068864;
  objc_msgSend(v0, sel_setContentCompressionResistancePriority_forAxis_, 0, v3);
  objc_msgSend(v0, sel__setWantsContentAwareTypesettingLanguage_, 1);
  return v0;
}

void ConversationDetailsView.conversationSubtitleLabel.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_8_3(a1);
  ConversationDetailsView.conversationSubtitleLabel.getter();
  *v1 = v2;
  OUTLINED_FUNCTION_0();
}

void ConversationDetailsView.conversationSubtitleLabel.modify(void **a1, char a2)
{
  CallRecordingPillViewController.countdownView.modify(a1, a2, (void (*)(void))ConversationDetailsView.conversationSubtitleLabel.setter);
}

void ConversationDetailsView.chevronLabel.getter()
{
  CallControlsViewController.menuViewController.getter(&OBJC_IVAR____TtC15ConversationKit23ConversationDetailsView____lazy_storage___chevronLabel, (uint64_t (*)(uint64_t))closure #1 in ConversationDetailsView.chevronLabel.getter);
}

void ConversationDetailsView.chevronLabel.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_4_3(a1, OBJC_IVAR____TtC15ConversationKit23ConversationDetailsView____lazy_storage___chevronLabel);
}

uint64_t key path setter for ConversationDetailsView.chevronLabel : ConversationDetailsView(id *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x148))(*a1);
}

id closure #1 in ConversationDetailsView.chevronLabel.getter(_QWORD *a1)
{
  id v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  double v8;
  void (*v9)(void);
  id v10;
  id v11;
  NSObject *v12;
  uint64_t v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
  v3 = (void *)*MEMORY[0x1E0DC4B10];
  v17 = 0x2E6E6F7276656863;
  v18 = 0xEF64726177726F66;
  v19 = 1;
  v20 = v3;
  LOWORD(v21) = 0;
  v22 = 4;
  LOBYTE(v23) = 0;
  v24 = 0;
  v4 = v3;
  v5 = static UIImage.symbolImage(for:)((uint64_t)&v17);

  swift_bridgeObjectRelease();
  if (v5)
  {
    objc_msgSend(v2, sel_setNumberOfLines_, 1, v17, v18, v19, v20, v21, v22, v23, v24);
    v6 = (void *)ConversationDetailsView.chevronLabelFont.getter(objc_msgSend(v2, sel_setClipsToBounds_, 1));
    objc_msgSend(v2, sel_setFont_, v6);

    objc_msgSend(v2, sel_setAdjustsFontForContentSizeCategory_, 1);
    v7 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
    objc_msgSend(v2, sel_setTextColor_, v7);

    LODWORD(v8) = 1144750080;
    objc_msgSend(v2, sel_setContentCompressionResistancePriority_forAxis_, 0, v8);
    v9 = *(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x170);
    v10 = v2;
    v9();
    objc_msgSend(v10, sel_setAlpha_);

    v11 = objc_msgSend((id)objc_opt_self(), sel_textAttachmentWithImage_, v5);
    v12 = objc_msgSend((id)objc_opt_self(), sel_attributedStringWithAttachment_, v11);

    objc_msgSend(v10, sel_setAttributedText_, v12);
  }
  else
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v13 = type metadata accessor for Logger();
    __swift_project_value_buffer(v13, (uint64_t)&static Logger.conversationControls);
    v12 = Logger.logObject.getter();
    v14 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v12, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v15 = 0;
      _os_log_impl(&dword_1BD004000, v12, v14, "Unable to obtain chevron.forward for chevronLabel", v15, 2u);
      MEMORY[0x1C3B751B8](v15, -1, -1);
    }
  }

  return v2;
}

void ConversationDetailsView.chevronLabel.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_8_3(a1);
  ConversationDetailsView.chevronLabel.getter();
  *v1 = v2;
  OUTLINED_FUNCTION_0();
}

void ConversationDetailsView.chevronLabel.modify(void **a1, char a2)
{
  CallRecordingPillViewController.countdownView.modify(a1, a2, (void (*)(void))ConversationDetailsView.chevronLabel.setter);
}

uint64_t key path setter for ConversationDetailsView.conversationSubtitleBadge : ConversationDetailsView(id *a1, _QWORD **a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x160);
  v4 = *a1;
  return v3(v2);
}

void ConversationDetailsView.conversationSubtitleBadge.getter()
{
  uint64_t v0;
  id *v1;
  id v2;

  v1 = (id *)(v0 + OBJC_IVAR____TtC15ConversationKit23ConversationDetailsView_conversationSubtitleBadge);
  OUTLINED_FUNCTION_2_0();
  v2 = *v1;
  OUTLINED_FUNCTION_43_1();
}

void ConversationDetailsView.conversationSubtitleBadge.setter(void *a1)
{
  ConversationDetailsView.leadingAccessoryView.setter(a1, &OBJC_IVAR____TtC15ConversationKit23ConversationDetailsView_conversationSubtitleBadge);
}

void ConversationDetailsView.leadingAccessoryView.setter(void *a1, _QWORD *a2)
{
  uint64_t v2;
  void **v4;
  void *v5;

  v4 = (void **)(v2 + *a2);
  OUTLINED_FUNCTION_2_0();
  v5 = *v4;
  *v4 = a1;

  OUTLINED_FUNCTION_43_1();
}

void ConversationDetailsView.conversationSubtitleBadge.modify()
{
  OUTLINED_FUNCTION_7_6();
  OUTLINED_FUNCTION_0();
}

double ConversationDetailsView.chevronLabelAlpha.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double result;

  v1 = OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_25_4();
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & v3) + 0xA8))();
  LODWORD(v1) = *(unsigned __int8 *)(v0 + *(int *)(v1 + 48));
  OUTLINED_FUNCTION_23_23();
  result = 0.0;
  if ((_DWORD)v1)
    return 1.0;
  return result;
}

double ConversationDetailsView.subtitleAlpha.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void (*v9)(uint64_t);
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v1 = OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_1_1();
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v3);
  v8 = (char *)&v15 - v7;
  v9 = *(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8);
  v9(v6);
  v10 = *((_QWORD *)v8 + 11);
  swift_bridgeObjectRetain();
  outlined destroy of ConversationControlsRecipe((uint64_t)v8);
  if (v10 >> 62)
  {
    swift_bridgeObjectRetain();
    v11 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v12 = swift_bridgeObjectRelease();
  if (v11)
    return 1.0;
  v9(v12);
  v13 = *(_QWORD *)&v5[*(int *)(v1 + 40)];
  OUTLINED_FUNCTION_23_23();
  if (v13)
    return 1.0;
  else
    return 0.0;
}

uint64_t ConversationDetailsView.durationController.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit23ConversationDetailsView_durationController) = a1;
  return swift_release();
}

id ConversationDetailsView.frame.getter()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)ObjC metadata update function for ConversationDetailsView();
  return objc_msgSendSuper2(&v2, sel_frame);
}

void ConversationDetailsView.frame.setter()
{
  uint64_t v0;
  double v1;
  objc_super *v2;
  SEL v3;
  uint64_t v4;

  OUTLINED_FUNCTION_17_7();
  v4 = ObjC metadata update function for ConversationDetailsView();
  v1 = OUTLINED_FUNCTION_15_0();
  objc_msgSendSuper2(v2, v3, v1, v0, v4);
  ConversationDetailsView.frame.didset();
  OUTLINED_FUNCTION_43_1();
}

void ConversationDetailsView.frame.didset()
{
  _QWORD *v0;
  double v1;
  id v2;

  v2 = (id)(*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x128))();
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v2, sel_setPreferredMaxLayoutWidth_, v1);

}

void ConversationDetailsView.__allocating_init(recipe:presentationStyle:controlsManager:)(uint64_t a1, char a2, void *a3)
{
  objc_class *v3;
  char v6;
  id v7;

  v6 = a2 & 1;
  v7 = objc_allocWithZone(v3);
  ConversationDetailsView.init(recipe:presentationStyle:controlsManager:)(a1, v6, a3);
  OUTLINED_FUNCTION_18();
}

void ConversationDetailsView.init(recipe:presentationStyle:controlsManager:)(uint64_t a1, char a2, void *a3)
{
  _BYTE *v3;
  char v5;
  id v6;
  id v7;
  objc_super v8;

  *(_QWORD *)&v3[OBJC_IVAR____TtC15ConversationKit23ConversationDetailsView____lazy_storage___conversationDetailsVStack] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC15ConversationKit23ConversationDetailsView____lazy_storage___conversationSubtitleHStack] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC15ConversationKit23ConversationDetailsView_leadingAccessoryView] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC15ConversationKit23ConversationDetailsView____lazy_storage___conversationTitleLabel] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC15ConversationKit23ConversationDetailsView____lazy_storage___conversationSubtitleLabel] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC15ConversationKit23ConversationDetailsView____lazy_storage___chevronLabel] = 0;
  v5 = a2 & 1;
  *(_QWORD *)&v3[OBJC_IVAR____TtC15ConversationKit23ConversationDetailsView_conversationSubtitleBadge] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC15ConversationKit23ConversationDetailsView_durationController] = 0;
  outlined init with copy of ConversationControlsRecipe(a1, (uint64_t)&v3[OBJC_IVAR____TtC15ConversationKit23ConversationDetailsView_recipe]);
  v3[OBJC_IVAR____TtC15ConversationKit23ConversationDetailsView_presentationStyle] = v5;
  *(_QWORD *)&v3[OBJC_IVAR____TtC15ConversationKit23ConversationDetailsView_controlsManager] = a3;
  v8.receiver = v3;
  v8.super_class = (Class)ObjC metadata update function for ConversationDetailsView();
  v6 = a3;
  v7 = objc_msgSendSuper2(&v8, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  ConversationDetailsView.configureSubviews()();
  ConversationDetailsView.updateStatus()();

  OUTLINED_FUNCTION_10_12();
  OUTLINED_FUNCTION_43_1();
}

void ConversationDetailsView.__allocating_init(coder:)(uint64_t a1)
{
  objc_class *v1;

  objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);
  OUTLINED_FUNCTION_49_5();
  OUTLINED_FUNCTION_0();
}

void ConversationDetailsView.init(coder:)()
{
  char *v0;

  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit23ConversationDetailsView____lazy_storage___conversationDetailsVStack] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit23ConversationDetailsView____lazy_storage___conversationSubtitleHStack] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit23ConversationDetailsView_leadingAccessoryView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit23ConversationDetailsView____lazy_storage___conversationTitleLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit23ConversationDetailsView____lazy_storage___conversationSubtitleLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit23ConversationDetailsView____lazy_storage___chevronLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit23ConversationDetailsView_conversationSubtitleBadge] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit23ConversationDetailsView_durationController] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

Swift::Void __swiftcall ConversationDetailsView.traitCollectionDidChange(_:)(UITraitCollection_optional a1)
{
  _QWORD *v1;
  Class isa;
  objc_class *v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  objc_super v20;

  isa = a1.value.super.isa;
  v20.receiver = v1;
  v20.super_class = (Class)ObjC metadata update function for ConversationDetailsView();
  objc_msgSendSuper2(&v20, sel_traitCollectionDidChange_, isa);
  if (isa)
  {
    v3 = isa;
    v4 = objc_msgSend(v1, sel_traitCollection);
    v5 = objc_msgSend(v4, sel_preferredContentSizeCategory);

    v6 = -[objc_class preferredContentSizeCategory](v3, sel_preferredContentSizeCategory);
    v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v9 = v8;
    if (v7 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v9 == v10)
    {

      swift_bridgeObjectRelease_n();
    }
    else
    {
      v12 = _stringCompareWithSmolCheck(_:_:expecting:)();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v12 & 1) == 0)
      {
        v13 = (void *)OUTLINED_FUNCTION_37_2(*v1);
        ConversationDetailsView.titleLabelFont.getter();
        v15 = v14;
        OUTLINED_FUNCTION_33_11();

        v16 = (void *)OUTLINED_FUNCTION_36_1(*v1);
        v17 = (void *)ConversationDetailsView.chevronLabelFont.getter(v16);
        OUTLINED_FUNCTION_33_11();

        v18 = (void *)OUTLINED_FUNCTION_40_14(*v1);
        v19 = ConversationDetailsView.chevronLabelFont.getter(v18);
        OUTLINED_FUNCTION_59_2(v19, sel_setFont_);

        v3 = (objc_class *)v19;
      }
    }

  }
}

void ConversationDetailsView.titleLabelFont.getter()
{
  uint64_t v0;
  int v1;
  void *v2;
  id v3;
  id v4;

  v1 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC15ConversationKit23ConversationDetailsView_presentationStyle);
  v2 = (void *)objc_opt_self();
  if (v1 != 1)
  {
    v4 = objc_msgSend(v2, sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4B10]);
    UIFont.withTraits(_:)(0x8002u);
    OUTLINED_FUNCTION_49_5();
    goto LABEL_5;
  }
  v3 = objc_msgSend(v2, sel__preferredFontForTextStyle_weight_, *MEMORY[0x1E0DC4A88], *MEMORY[0x1E0DC1448]);
  if (v3)
  {
    v4 = v3;
LABEL_5:
    UIFont.caseSensitive()();

    OUTLINED_FUNCTION_0();
    return;
  }
  __break(1u);
}

void ConversationDetailsView.subtitleLabelFont.getter()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4B10]);
  UIFont.withTraits(_:)(0x8000u);

  UIFont.caseSensitive()();
  OUTLINED_FUNCTION_49_5();
  OUTLINED_FUNCTION_0();
}

void ConversationDetailsView.updateStatus()()
{
  uint64_t *v0;
  uint64_t (*v1)(void);
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  id *v18;
  _QWORD *v19;
  void *v20;
  void (*v21)(void);
  id v22;
  void *v23;
  id *v24;
  int v25;
  uint64_t v26;
  void (*v27)(void);
  void (*v28)(void);
  unint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  void *v34;
  uint64_t v35;
  void (*v36)(void);
  char *v37;
  void (*v38)(void);
  uint64_t v39;
  void *v40;
  unint64_t v41;
  id v42;
  id v43;
  uint64_t v44;
  void *v45;
  void *v46;
  unint64_t v47;
  void *v48;
  uint64_t v49;
  Swift::String v50;
  uint64_t (*v51)(void);
  void *v52;
  void *v53;
  id v54;
  void *v55;
  void *v56;
  uint64_t (**v57)(uint64_t, id);
  uint64_t v58;
  uint64_t ObjectType;
  int v60;
  uint64_t v61;
  void (*v62)(uint64_t);
  uint64_t v63;
  uint64_t v64;
  void *v65;
  id v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t (*v71)(void);
  void *v72;
  uint64_t v73;
  void (*v74)(void);
  void *v75;
  id v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t (*v83)(uint64_t, id);
  uint64_t v84;
  id v85;
  id v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t (*v89)(uint64_t, id);
  uint64_t v90;
  id v91;
  char *v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void (*v98)(uint64_t);
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t (*v102)(void);
  char *v103;
  void (*v104)(void);
  uint64_t v105;
  _QWORD v106[5];
  char v107;
  Swift::String v108;
  uint64_t v109;
  uint64_t (*v110)(uint64_t, id);
  unsigned __int8 v111;

  v2 = v0;
  v3 = OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_1_1();
  v5 = MEMORY[0x1E0C80A78](v4);
  v101 = (char *)&v100 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v100 - v8;
  v10 = MEMORY[0x1E0C80A78](v7);
  v104 = (void (*)(void))((char *)&v100 - v11);
  v12 = MEMORY[0x1E0C80A78](v10);
  v103 = (char *)&v100 - v13;
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v100 - v15;
  MEMORY[0x1E0C80A78](v14);
  v18 = (id *)((char *)&v100 - v17);
  v19 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v20 = (void *)OUTLINED_FUNCTION_38_13(*v0);
  v21 = *(void (**)(void))((*v19 & *v0) + 0xA8);
  v21();
  v22 = v18[10];
  OUTLINED_FUNCTION_51_11();
  OUTLINED_FUNCTION_48_1(v20, sel_setAttributedText_);

  v102 = v1;
  v23 = (void *)v1();
  v21();
  v105 = v3;
  v24 = v18;
  OUTLINED_FUNCTION_51_11();
  OUTLINED_FUNCTION_48_1(v23, sel_setNumberOfLines_);

  v21();
  outlined init with copy of ConversationControlsType((uint64_t)v16, (uint64_t)&v108);
  v25 = v111;
  OUTLINED_FUNCTION_30_2();
  v26 = outlined destroy of ConversationControlsRecipe((uint64_t)v16);
  v27 = (void (*)(void))(*(uint64_t (**)(uint64_t))((*v19 & *v2) + 0x128))(v26);
  v28 = v27;
  if (v25)
  {
    v104 = v21;
    v21();
    v29 = *((_QWORD *)v9 + 11);
    OUTLINED_FUNCTION_5_0();
    outlined destroy of ConversationControlsRecipe((uint64_t)v9);
    if (v29 >> 62)
    {
      OUTLINED_FUNCTION_8_35();
      v30 = (void *)OUTLINED_FUNCTION_52_5();
      OUTLINED_FUNCTION_27();
    }
    else
    {
      v30 = *(void **)((v29 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v31 = v105;
    v32 = (uint64_t)v24;
    if (v30)
    {
      OUTLINED_FUNCTION_1_35();
      OUTLINED_FUNCTION_18_9();
    }
    OUTLINED_FUNCTION_27();
    objc_msgSend(v28, sel_setAttributedText_, v30);

    v33 = (void *)OUTLINED_FUNCTION_11_31();
    objc_msgSend(v33, sel_setLineBreakMode_, 4);

    v34 = (void *)OUTLINED_FUNCTION_11_31();
    v28 = v104;
    v104();
    v35 = *(uint64_t *)((char *)v24 + *(int *)(v31 + 56));
    OUTLINED_FUNCTION_31_24();
    objc_msgSend(v34, sel_setNumberOfLines_, v35);
    goto LABEL_22;
  }
  v37 = v103;
  v36 = v104;
  v38 = v21;
  v39 = (uint64_t)objc_msgSend(v27, sel_numberOfLines);

  v40 = (void *)OUTLINED_FUNCTION_11_31();
  if (v39 >= 2)
  {
    OUTLINED_FUNCTION_42_12();
    v41 = *((_QWORD *)v37 + 11);
    OUTLINED_FUNCTION_5_0();
    OUTLINED_FUNCTION_51_11();
    if (v41 >> 62)
    {
      OUTLINED_FUNCTION_8_35();
      v49 = OUTLINED_FUNCTION_52_5();
      OUTLINED_FUNCTION_27();
      if (v49)
        goto LABEL_10;
    }
    else if (*(_QWORD *)((v41 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_10:
      OUTLINED_FUNCTION_1_35();
      if (v38)
        OUTLINED_FUNCTION_18_9();
      v42 = OUTLINED_FUNCTION_42_11();
      OUTLINED_FUNCTION_27();
      v43 = objc_msgSend(v42, sel_string);

      v44 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v46 = v45;

LABEL_21:
      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSAttributedString);
      v108._countAndFlagsBits = v44;
      v108._object = v46;
      swift_bridgeObjectRetain();
      v50._countAndFlagsBits = 10;
      v50._object = (void *)0xE100000000000000;
      String.append(_:)(v50);
      swift_bridgeObjectRelease();
      NSMutableAttributedString.__allocating_init(string:)(v108);
    }
    OUTLINED_FUNCTION_27();
    v44 = 0;
    v46 = (void *)0xE000000000000000;
    goto LABEL_21;
  }
  OUTLINED_FUNCTION_42_12();
  v47 = *((_QWORD *)v36 + 11);
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_31_24();
  if (v47 >> 62)
  {
    OUTLINED_FUNCTION_8_35();
    v48 = (void *)OUTLINED_FUNCTION_52_5();
    OUTLINED_FUNCTION_27();
  }
  else
  {
    v48 = *(void **)((v47 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v32 = (uint64_t)v24;
  if (v48)
  {
    OUTLINED_FUNCTION_1_35();
    if (v38)
      OUTLINED_FUNCTION_18_9();
    v48 = OUTLINED_FUNCTION_42_11();
  }
  OUTLINED_FUNCTION_27();
  objc_msgSend(v40, sel_setAttributedText_, v48);

  v34 = (void *)OUTLINED_FUNCTION_11_31();
  objc_msgSend(v34, sel_setLineBreakMode_, 4);
LABEL_22:

  v51 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v2) + 0x128);
  v52 = (void *)OUTLINED_FUNCTION_43_12();
  v53 = (void *)v51();
  v54 = objc_msgSend(v53, sel_numberOfLines);

  objc_msgSend(v52, sel_setMarqueeEnabled_, v54 == (id)1);
  v55 = (void *)OUTLINED_FUNCTION_43_12();
  v56 = (void *)v51();
  v57 = (uint64_t (**)(uint64_t, id))objc_msgSend(v56, sel_numberOfLines);

  objc_msgSend(v55, sel_setMarqueeRunning_, v57 == (uint64_t (**)(uint64_t, id))1);
  v28();
  outlined init with copy of ConversationControlsType(v32, (uint64_t)&v108);
  OUTLINED_FUNCTION_31_24();
  OUTLINED_FUNCTION_15_29(23);
  v107 = 6;
  OUTLINED_FUNCTION_22_25();
  OUTLINED_FUNCTION_19_27();
  OUTLINED_FUNCTION_30_2();
  if ((v2 & 1) == 0
    || (v58 = OBJC_IVAR____TtC15ConversationKit23ConversationDetailsView_controlsManager,
        OUTLINED_FUNCTION_4_32(),
        OUTLINED_FUNCTION_55_9(),
        OUTLINED_FUNCTION_45_4(),
        ObjectType = swift_getObjectType(),
        v60 = v57[23](ObjectType, v57),
        swift_unknownObjectRelease(),
        v60 == 2))
  {
    v61 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC15ConversationKit23ConversationDetailsView_durationController);
    if (v61)
    {
      v62 = *(void (**)(uint64_t))(*(_QWORD *)v61 + 256);
      v63 = swift_retain();
      v62(v63);
      swift_release();
    }
    v64 = ConversationDetailsView.durationController.setter(0);
    v65 = (void *)((uint64_t (*)(uint64_t))v51)(v64);
    v66 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
    OUTLINED_FUNCTION_59_2((uint64_t)v66, sel_setTextColor_);

    goto LABEL_27;
  }
  v76 = *(id *)((char *)v2 + v58);
  v77 = ConversationControlsManager.heldCalls()();

  if (v77 >> 62)
  {
    OUTLINED_FUNCTION_5_0();
    v78 = _CocoaArrayWrapper.endIndex.getter();
    OUTLINED_FUNCTION_27();
  }
  else
  {
    v78 = *(_QWORD *)((v77 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  OUTLINED_FUNCTION_27();
  if (v78 >= 1)
  {
    v105 = type metadata accessor for DurationLabelController();
    OUTLINED_FUNCTION_4_32();
    v79 = OUTLINED_FUNCTION_55_9();
    v81 = v80;

    v82 = swift_getObjectType();
    v109 = v82;
    v110 = *(uint64_t (**)(uint64_t, id))(v81 + 8);
    v83 = v110;
    v108._countAndFlagsBits = v79;
    v84 = v102();
    v85 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
    v28();
    v86 = *(id *)(v32 + 80);
    OUTLINED_FUNCTION_31_24();
    v106[0] = v79;
    swift_unknownObjectRetain();
    v87 = specialized DurationLabelController.__allocating_init(durationProvider:label:textColor:voiceOverUpdateHandler:prefixAttributedString:)(v106, v84, v85, 0, 0, v86, v105, v82, v83);
    goto LABEL_36;
  }
  OUTLINED_FUNCTION_4_32();
  OUTLINED_FUNCTION_55_9();
  OUTLINED_FUNCTION_45_4();
  v88 = swift_getObjectType();
  v109 = v88;
  v89 = v57[1];
  v110 = v89;
  v108._countAndFlagsBits = v78;
  v90 = OUTLINED_FUNCTION_43_12();
  v91 = objc_msgSend((id)objc_opt_self(), sel_systemGreenColor);
  v92 = v101;
  v28();
  v93 = *((_QWORD *)v92 + 11);
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_23_23();
  if (v93 >> 62)
  {
    OUTLINED_FUNCTION_5_0();
    v94 = _CocoaArrayWrapper.endIndex.getter();
    OUTLINED_FUNCTION_27();
    if (v94)
    {
LABEL_34:
      OUTLINED_FUNCTION_1_35();
      OUTLINED_FUNCTION_18_9();
    }
  }
  else
  {
    v94 = *(_QWORD *)((v93 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v94)
      goto LABEL_34;
  }
  OUTLINED_FUNCTION_27();
  v95 = type metadata accessor for DurationLabelController();
  v106[0] = v78;
  swift_unknownObjectRetain();
  v87 = specialized DurationLabelController.__allocating_init(durationProvider:label:textColor:voiceOverUpdateHandler:prefixAttributedString:)(v106, v90, v91, 0, 0, v94, v95, v88, v89);
LABEL_36:
  v96 = v87;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v108);
  ConversationDetailsView.durationController.setter(v96);
  v97 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC15ConversationKit23ConversationDetailsView_durationController);
  if (v97)
  {
    v98 = *(void (**)(uint64_t))(*(_QWORD *)v97 + 248);
    v99 = swift_retain();
    v98(v99);
    swift_release();
  }
LABEL_27:
  OUTLINED_FUNCTION_17_24();
  v68 = (void *)OUTLINED_FUNCTION_48_11(v67);
  OUTLINED_FUNCTION_17_24();
  (*(void (**)(void))(v69 + 368))();
  OUTLINED_FUNCTION_53_9();

  OUTLINED_FUNCTION_17_24();
  v71 = *(uint64_t (**)(void))(v70 + 224);
  v72 = (void *)v71();
  OUTLINED_FUNCTION_17_24();
  v74 = *(void (**)(void))(v73 + 376);
  v74();
  OUTLINED_FUNCTION_53_9();

  v75 = (void *)v71();
  objc_msgSend(v75, sel_setHidden_, ((double (*)(void))v74)() == 0.0);

  OUTLINED_FUNCTION_52_1();
}

uint64_t type metadata accessor for ConversationDetailsView()
{
  uint64_t result;

  result = type metadata singleton initialization cache for ConversationDetailsView;
  if (!type metadata singleton initialization cache for ConversationDetailsView)
    return swift_getSingletonMetadata();
  return result;
}

Swift::Void __swiftcall ConversationDetailsView.updateSubtitleLeadingBadge()()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  _QWORD *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  void (*v11)(void *);
  id v12;
  void *v13;
  uint64_t v14;

  v1 = OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v6 = OUTLINED_FUNCTION_39_1(*v0);
  if (v6)
  {
    v7 = (void *)v6;
    v8 = (void *)OUTLINED_FUNCTION_18_16(*v0);
    objc_msgSend(v8, sel_removeArrangedSubview_, v7);

    objc_msgSend(v7, sel_removeFromSuperview);
  }
  (*(void (**)(void))((*v5 & *v0) + 0xA8))();
  v9 = *(void **)&v4[*(int *)(v1 + 40)];
  if (v9)
  {
    v10 = v9;
    OUTLINED_FUNCTION_10_12();
    v11 = *(void (**)(void *))((*v5 & *v0) + 0x160);
    v12 = v10;
    v11(v9);
    v13 = (void *)OUTLINED_FUNCTION_18_16(*v0);
    objc_msgSend(v13, sel_insertArrangedSubview_atIndex_, v12, 0);

  }
  else
  {
    OUTLINED_FUNCTION_10_12();
  }
}

void ConversationDetailsView.configureSubviews()()
{
  UIView *v0;
  UIView *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  void *v22;
  double v23;
  void *v24;

  v1 = v0;
  OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_25_4();
  v4 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v3) + 0xC8))();
  OUTLINED_FUNCTION_48_1(v1, sel_addSubview_);

  v5 = (void *)OUTLINED_FUNCTION_44_10();
  UIView.addConstraintsToFill(_:insets:)(v1, *MEMORY[0x1E0DC3298]);

  OUTLINED_FUNCTION_10_21();
  (*(void (**)(void))(v6 + 472))();
  if (SBUIIsSystemApertureEnabled())
  {
    OUTLINED_FUNCTION_10_21();
    OUTLINED_FUNCTION_58_11();
    OUTLINED_FUNCTION_49_11();
    OUTLINED_FUNCTION_23_23();
    OUTLINED_FUNCTION_15_29(16);
    OUTLINED_FUNCTION_22_25();
    OUTLINED_FUNCTION_19_27();
    OUTLINED_FUNCTION_30_2();
    if ((v1 & 1) != 0)
    {
      OUTLINED_FUNCTION_10_21();
      v7 = (void *)OUTLINED_FUNCTION_21_9();
      v8 = objc_msgSend(v7, sel_widthAnchor);

      v9 = (void *)OUTLINED_FUNCTION_44_10();
      v10 = OUTLINED_FUNCTION_24_18(v9);

      v12 = OUTLINED_FUNCTION_50_11(v11, sel_constraintEqualToAnchor_);
      OUTLINED_FUNCTION_29_17();

      v13 = (void *)OUTLINED_FUNCTION_21_9();
      OUTLINED_FUNCTION_41_12(v13);

      OUTLINED_FUNCTION_10_21();
      v14 = (void *)OUTLINED_FUNCTION_21_9();
      v15 = OUTLINED_FUNCTION_24_18(v14);

      v16 = (void *)OUTLINED_FUNCTION_44_10();
      v17 = OUTLINED_FUNCTION_24_18(v16);

      v19 = OUTLINED_FUNCTION_50_11(v18, sel_constraintEqualToAnchor_);
      OUTLINED_FUNCTION_29_17();

      v20 = (void *)OUTLINED_FUNCTION_21_9();
      OUTLINED_FUNCTION_41_12(v20);

      OUTLINED_FUNCTION_10_21();
      v22 = (void *)OUTLINED_FUNCTION_48_11(v21);
      LODWORD(v23) = 1148846080;
      objc_msgSend(v22, sel_setContentHuggingPriority_forAxis_, 0, v23);

      v24 = (void *)OUTLINED_FUNCTION_21_9();
      objc_msgSend(v24, sel_setDistribution_, 0);

    }
    else
    {
      OUTLINED_FUNCTION_58_11();
      OUTLINED_FUNCTION_49_11();
      OUTLINED_FUNCTION_23_23();
      OUTLINED_FUNCTION_15_29(15);
      OUTLINED_FUNCTION_22_25();
      OUTLINED_FUNCTION_19_27();
      OUTLINED_FUNCTION_30_2();
    }
  }
  OUTLINED_FUNCTION_52_1();
}

id ConversationDetailsView.__allocating_init(frame:)()
{
  Class v0;
  id v1;
  double v2;
  id v3;
  SEL v4;

  OUTLINED_FUNCTION_17_7();
  v1 = objc_allocWithZone(v0);
  v2 = OUTLINED_FUNCTION_15_0();
  return objc_msgSend(v3, v4, v2);
}

void ConversationDetailsView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id ConversationDetailsView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)ObjC metadata update function for ConversationDetailsView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t protocol witness for SystemApertureControlsStatusView.recipe.getter in conformance ConversationDetailsView()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t protocol witness for SystemApertureControlsStatusView.recipe.setter in conformance ConversationDetailsView()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

void (*protocol witness for SystemApertureControlsStatusView.recipe.modify in conformance ConversationDetailsView(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v3;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v1) + 0xB8))();
  return protocol witness for ControlsView.cnkContentAlpha.modify in conformance SystemApertureOngoingTelephonyControlsView;
}

uint64_t protocol witness for SystemApertureControlsStatusView.titleLabelGlyphInset.getter in conformance ConversationDetailsView()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

void sub_1BD0B1A40(_QWORD **a1)
{
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0xA8))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD0B1A78()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0xC8))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD0B1AB0()
{
  uint64_t *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = OUTLINED_FUNCTION_18_16(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD0B1AE0()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0xF8))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD0B1B18()
{
  uint64_t *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = OUTLINED_FUNCTION_37_2(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD0B1B48()
{
  uint64_t *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = OUTLINED_FUNCTION_36_1(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD0B1B78()
{
  uint64_t *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = OUTLINED_FUNCTION_40_14(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD0B1BA8()
{
  uint64_t *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = OUTLINED_FUNCTION_39_1(v1);
  OUTLINED_FUNCTION_0();
}

uint64_t type metadata completion function for ConversationDetailsView()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ConversationControlsRecipe();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for ConversationDetailsView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ConversationDetailsView.recipe.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of ConversationDetailsView.recipe.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of ConversationDetailsView.recipe.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of ConversationDetailsView.titleLabelGlyphInset.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of ConversationDetailsView.conversationDetailsVStack.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of ConversationDetailsView.conversationDetailsVStack.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of ConversationDetailsView.conversationDetailsVStack.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of ConversationDetailsView.conversationSubtitleHStack.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of ConversationDetailsView.conversationSubtitleHStack.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of ConversationDetailsView.conversationSubtitleHStack.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of ConversationDetailsView.leadingAccessoryView.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of ConversationDetailsView.leadingAccessoryView.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of ConversationDetailsView.leadingAccessoryView.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x108))();
}

uint64_t dispatch thunk of ConversationDetailsView.conversationTitleLabel.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x110))();
}

uint64_t dispatch thunk of ConversationDetailsView.conversationTitleLabel.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x118))();
}

uint64_t dispatch thunk of ConversationDetailsView.conversationTitleLabel.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x120))();
}

uint64_t dispatch thunk of ConversationDetailsView.conversationSubtitleLabel.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x128))();
}

uint64_t dispatch thunk of ConversationDetailsView.conversationSubtitleLabel.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x130))();
}

uint64_t dispatch thunk of ConversationDetailsView.conversationSubtitleLabel.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x138))();
}

uint64_t dispatch thunk of ConversationDetailsView.chevronLabel.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x140))();
}

uint64_t dispatch thunk of ConversationDetailsView.chevronLabel.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x148))();
}

uint64_t dispatch thunk of ConversationDetailsView.chevronLabel.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x150))();
}

uint64_t dispatch thunk of ConversationDetailsView.conversationSubtitleBadge.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x158))();
}

uint64_t dispatch thunk of ConversationDetailsView.conversationSubtitleBadge.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x160))();
}

uint64_t dispatch thunk of ConversationDetailsView.conversationSubtitleBadge.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x168))();
}

uint64_t dispatch thunk of ConversationDetailsView.chevronLabelAlpha.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x170))();
}

uint64_t dispatch thunk of ConversationDetailsView.subtitleAlpha.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x178))();
}

uint64_t dispatch thunk of ConversationDetailsView.__allocating_init(recipe:presentationStyle:controlsManager:)(uint64_t a1, char a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v2 + 432))(a1, a2 & 1);
}

uint64_t dispatch thunk of ConversationDetailsView.updateSubtitleLeadingBadge()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1D8))();
}

BOOL static DeviceInactivityObserver.State.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

void DeviceInactivityObserver.State.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
  Hasher._combine(_:)(a2);
  OUTLINED_FUNCTION_0();
}

Swift::Int DeviceInactivityObserver.State.hashValue.getter(unsigned __int8 a1)
{
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1);
  return Hasher._finalize()();
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance DeviceInactivityObserver.State(char *a1, char *a2)
{
  return static DeviceInactivityObserver.State.== infix(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance DeviceInactivityObserver.State()
{
  unsigned __int8 *v0;

  return DeviceInactivityObserver.State.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance DeviceInactivityObserver.State(uint64_t a1)
{
  unsigned __int8 *v1;

  DeviceInactivityObserver.State.hash(into:)(a1, *v1);
}

uint64_t DeviceInactivityObserver.inactivityTimeout.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t key path getter for DeviceInactivityObserver.state : DeviceInactivityObserver@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 104))();
  *a2 = result;
  return result;
}

uint64_t key path setter for DeviceInactivityObserver.state : DeviceInactivityObserver()
{
  return DeviceInactivityObserver.state.setter();
}

uint64_t DeviceInactivityObserver.state.getter()
{
  unsigned __int8 v1;

  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

void sub_1BD0B20F8(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  *a2 = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 104))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD0B2124()
{
  DeviceInactivityObserver.state.setter();
  OUTLINED_FUNCTION_0();
}

uint64_t DeviceInactivityObserver.state.setter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return static Published.subscript.setter();
}

uint64_t key path setter for DeviceInactivityObserver.$state : DeviceInactivityObserver(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<DeviceInactivityObserver.State>.Publisher);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v5 + 16))(v4, a1);
  return DeviceInactivityObserver.$state.setter((uint64_t)v4);
}

uint64_t DeviceInactivityObserver.$state.getter()
{
  OUTLINED_FUNCTION_5_32();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<DeviceInactivityObserver.State>);
  Published.projectedValue.getter();
  return swift_endAccess();
}

uint64_t DeviceInactivityObserver.$state.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<DeviceInactivityObserver.State>.Publisher);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_16_2();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, a1, v3);
  OUTLINED_FUNCTION_5_32();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<DeviceInactivityObserver.State>);
  Published.projectedValue.setter();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
}

void DeviceInactivityObserver.__allocating_init(inactivityTimeout:)(uint64_t a1)
{
  swift_allocObject();
  DeviceInactivityObserver.init(inactivityTimeout:)(a1);
}

uint64_t sub_1BD0B236C()
{
  uint64_t v0;

  return v0;
}

void DeviceInactivityObserver.init(inactivityTimeout:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<DeviceInactivityObserver.State>);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_16_2();
  v6 = v1 + OBJC_IVAR____TtC15ConversationKit24DeviceInactivityObserver__state;
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v6, v2, v4);
  *(_QWORD *)(v1 + 16) = IOHIDEventSystemClientCreateWithType();
  *(_QWORD *)(v1 + 24) = a1;
  DeviceInactivityObserver.registerForHIDActivity()();
}

uint64_t sub_1BD0B2420()
{
  uint64_t v0;

  return v0;
}

Swift::Void __swiftcall DeviceInactivityObserver.invalidate()()
{
  OUTLINED_FUNCTION_2_48();
}

uint64_t sub_1BD0B2464(void *a1)
{
  IOHIDEventSystemClientUnregisterPropertyChangedCallback();

  return IOHIDEventSystemClientCancel();
}

void DeviceInactivityObserver.handleHIDActivityStateChanged()()
{
  OUTLINED_FUNCTION_2_48();
}

uint64_t sub_1BD0B24D4(__CFString *key, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  __IOHIDEventSystemClient *v22;
  CFTypeRef v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  unsigned int v40;
  uint64_t v41;

  v24 = IOHIDEventSystemClientCopyProperty(v22, key);

  if (v24 && (v41 = (uint64_t)v24, swift_unknownObjectRetain(), (swift_dynamicCast() & 1) != 0))
  {
    if (one-time initialization token for screenSharing != -1)
      swift_once();
    v25 = type metadata accessor for Logger();
    __swift_project_value_buffer(v25, (uint64_t)&static Log.screenSharing);
    v26 = Logger.logObject.getter();
    v27 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)OUTLINED_FUNCTION_105();
      *(_DWORD *)v28 = 67109120;
      OUTLINED_FUNCTION_1_36();
      _os_log_impl(&dword_1BD004000, v26, v27, "HID activity state changed to new value: %u", v28, 8u);
      OUTLINED_FUNCTION_60();
    }

    if (v40 > 2)
    {
      v37 = Logger.logObject.getter();
      v38 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v37, v38))
      {
        v39 = (uint8_t *)OUTLINED_FUNCTION_105();
        *(_DWORD *)v39 = 67109120;
        OUTLINED_FUNCTION_1_36();
        _os_log_impl(&dword_1BD004000, v37, v38, "Unknown HID activity state value: %u", v39, 8u);
        OUTLINED_FUNCTION_60();
      }

    }
    DeviceInactivityObserver.state.setter();
    return swift_unknownObjectRelease();
  }
  else
  {
    if (one-time initialization token for screenSharing != -1)
      swift_once();
    v29 = type metadata accessor for Logger();
    __swift_project_value_buffer(v29, (uint64_t)&static Log.screenSharing);
    swift_unknownObjectRetain_n();
    v30 = Logger.logObject.getter();
    v31 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)OUTLINED_FUNCTION_105();
      v41 = OUTLINED_FUNCTION_105();
      *(_DWORD *)v32 = 136315138;
      if (v24)
      {
        swift_unknownObjectRetain();
        v33 = String.init<A>(reflecting:)();
        v35 = v34;
      }
      else
      {
        v35 = 0xE300000000000000;
        v33 = 7104878;
      }
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v33, v35, &v41);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BD004000, v30, v31, "Unable to get activity state from IOHIDEventSystemClient property: %s", v32, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_60();
    }

    return swift_unknownObjectRelease_n();
  }
}

void DeviceInactivityObserver.registerForHIDActivity()()
{
  Class isa;
  void *v1;

  Dictionary.init(dictionaryLiteral:)();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_114();
  IOHIDEventSystemClientSetMatching();

  type metadata accessor for OS_dispatch_queue();
  v1 = (void *)static OS_dispatch_queue.main.getter();
  OUTLINED_FUNCTION_114();
  IOHIDEventSystemClientScheduleWithDispatchQueue();

  OUTLINED_FUNCTION_2_48();
}

void sub_1BD0B28CC(void *a1)
{
  uint64_t v1;
  void *v3;
  Class isa;
  __IOHIDEventSystemClient *v5;
  CFStringRef v6;

  OUTLINED_FUNCTION_114();
  IOHIDEventSystemClientRegisterPropertyChangedCallback();

  v3 = (void *)MEMORY[0x1C3B72E00](v1 | 4, 0x80000001BD671370);
  isa = UInt._bridgeToObjectiveC()().super.super.isa;
  v5 = (__IOHIDEventSystemClient *)OUTLINED_FUNCTION_114();
  IOHIDEventSystemClientSetProperty(v5, v6, isa);

  DeviceInactivityObserver.handleHIDActivityStateChanged()();
}

void closure #1 in DeviceInactivityObserver.registerForHIDActivity()(uint64_t a1)
{
  swift_getObjectType();
  if (a1)
  {
    swift_unknownObjectRetain();
    swift_retain();
    DeviceInactivityObserver.handleHIDActivityStateChanged()();
  }
  __break(1u);
}

void @objc closure #1 in DeviceInactivityObserver.registerForHIDActivity()(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;

  v4 = a3;
  swift_unknownObjectRetain();
  closure #1 in DeviceInactivityObserver.registerForHIDActivity()(a1);
}

uint64_t sub_1BD0B29E0()
{
  void *v0;

  return swift_unknownObjectRelease();
}

uint64_t DeviceInactivityObserver.deinit()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<DeviceInactivityObserver.State>);
  OUTLINED_FUNCTION_17_1(v1);
  return v0;
}

uint64_t DeviceInactivityObserver.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<DeviceInactivityObserver.State>);
  OUTLINED_FUNCTION_17_1(v1);
  return swift_deallocClassInstance();
}

unint64_t lazy protocol witness table accessor for type DeviceInactivityObserver.State and conformance DeviceInactivityObserver.State()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type DeviceInactivityObserver.State and conformance DeviceInactivityObserver.State;
  if (!lazy protocol witness table cache variable for type DeviceInactivityObserver.State and conformance DeviceInactivityObserver.State)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for DeviceInactivityObserver.State, &type metadata for DeviceInactivityObserver.State);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type DeviceInactivityObserver.State and conformance DeviceInactivityObserver.State);
  }
  return result;
}

void sub_1BD0B2AC4(uint64_t a1)
{
  (*(void (**)(void))(**(_QWORD **)a1 + 128))();
  OUTLINED_FUNCTION_0();
}

uint64_t ObjC metadata update function for DeviceInactivityObserver()
{
  return type metadata accessor for DeviceInactivityObserver();
}

uint64_t type metadata accessor for DeviceInactivityObserver()
{
  uint64_t result;

  result = type metadata singleton initialization cache for DeviceInactivityObserver;
  if (!type metadata singleton initialization cache for DeviceInactivityObserver)
    return swift_getSingletonMetadata();
  return result;
}

void type metadata completion function for DeviceInactivityObserver()
{
  unint64_t v0;

  type metadata accessor for Published<DeviceInactivityObserver.State>();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for DeviceInactivityObserver()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DeviceInactivityObserver.state.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of DeviceInactivityObserver.$state.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of DeviceInactivityObserver.__allocating_init(inactivityTimeout:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of DeviceInactivityObserver.invalidate()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

void type metadata accessor for Published<DeviceInactivityObserver.State>()
{
  unint64_t v0;
  uint64_t v1;

  if (!lazy cache variable for type metadata for Published<DeviceInactivityObserver.State>)
  {
    v0 = type metadata accessor for Published();
    if (!v1)
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for Published<DeviceInactivityObserver.State>);
  }
}

uint64_t storeEnumTagSinglePayload for DeviceInactivityObserver.State(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BD0B2C80 + 4 * byte_1BD647AD5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BD0B2CB4 + 4 * byte_1BD647AD0[v4]))();
}

uint64_t sub_1BD0B2CB4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD0B2CBC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD0B2CC4);
  return result;
}

uint64_t sub_1BD0B2CD0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD0B2CD8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BD0B2CDC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD0B2CE4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DeviceInactivityObserver.State()
{
  return &type metadata for DeviceInactivityObserver.State;
}

void _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSDy20FaceTimeMessageStore0F4TypeOSayAF0F0CGG_AH_AKts5NeverOTg5026_s15ConversationKit27Videof74InboxControllerC14getAllMessages33_7171B8C8E05400027B1F97FF317BCE39LLSay08de10D5Store0D4h29O_SayAF0D0CGtGyYaKFALScgyALs5C41_pGzYaKXEfU_AH_AKtAH3key_AK5valuet_tXEfU_Tf1cn_n(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  int v4;
  unint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int16 v14;
  uint64_t v15;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v15 = MEMORY[0x1E0DEE9D8];
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    v3 = specialized Dictionary.startIndex.getter(a1);
    if ((v3 & 0x8000000000000000) == 0)
    {
      v5 = v3;
      if (v3 < 1 << *(_BYTE *)(a1 + 32))
      {
        v6 = v4;
        v7 = a1 + 64;
        while ((*(_QWORD *)(v7 + 8 * (v5 >> 6)) & (1 << v5)) != 0)
        {
          if (v6 != *(_DWORD *)(a1 + 36))
            goto LABEL_18;
          v13 = v1;
          v14 = *(_WORD *)(*(_QWORD *)(a1 + 48) + 2 * v5);
          v8 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v5);
          v10 = *(_QWORD *)(v15 + 16);
          v9 = *(_QWORD *)(v15 + 24);
          swift_bridgeObjectRetain();
          if (v10 >= v9 >> 1)
            specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          *(_QWORD *)(v15 + 16) = v10 + 1;
          v11 = v15 + 16 * v10;
          *(_WORD *)(v11 + 32) = v14;
          *(_QWORD *)(v11 + 40) = v8;
          if ((uint64_t)v5 >= -(-1 << *(_BYTE *)(a1 + 32)))
            goto LABEL_19;
          v7 = a1 + 64;
          if ((*(_QWORD *)(a1 + 64 + 8 * (v5 >> 6)) & (1 << v5)) == 0)
            goto LABEL_20;
          if (v6 != *(_DWORD *)(a1 + 36))
            goto LABEL_21;
          v12 = _HashTable.occupiedBucket(after:)();
          v1 = v13 - 1;
          if (v13 == 1)
            return;
          v5 = v12;
          if ((v12 & 0x8000000000000000) == 0)
          {
            v6 = *(_DWORD *)(a1 + 36);
            if (v12 < 1 << *(_BYTE *)(a1 + 32))
              continue;
          }
          goto LABEL_22;
        }
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
      }
    }
LABEL_22:
    __break(1u);
  }
}

uint64_t key path setter for VideoMessageInboxController.callItems : VideoMessageInboxController(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))(**(_QWORD **)a2 + 112);
  v3 = swift_retain();
  return v2(v3);
}

uint64_t VideoMessageInboxController.callItems.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 16) = a1;
  return swift_release();
}

uint64_t (*VideoMessageInboxController.callItems.modify())()
{
  swift_beginAccess();
  return CallRecordingPillViewController.cancellable.modify;
}

uint64_t key path getter for VideoMessageInboxController.messageDeletionHandler : VideoMessageInboxController@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v3 = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 128))();
  v5 = v4;
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v3;
  *(_QWORD *)(result + 24) = v5;
  *a2 = partial apply for thunk for @escaping @callee_guaranteed (@guaranteed CNComposeRecipient) -> ();
  a2[1] = result;
  return result;
}

uint64_t key path setter for VideoMessageInboxController.messageDeletionHandler : VideoMessageInboxController(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t (*)(uint64_t), uint64_t);

  v3 = *a1;
  v4 = a1[1];
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v3;
  *(_QWORD *)(v5 + 24) = v4;
  v6 = *(uint64_t (**)(uint64_t (*)(uint64_t), uint64_t))(**(_QWORD **)a2 + 136);
  swift_retain();
  return v6(partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed CNComposeRecipient) -> (@out ()), v5);
}

uint64_t (*VideoMessageInboxController.messageDeletionHandler.getter())(uint64_t a1)
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 24);
  if (v1)
  {
    v2 = *(uint64_t (**)(uint64_t))(v0 + 24);
  }
  else
  {
    v3 = OUTLINED_FUNCTION_15();
    swift_weakInit();
    v4 = *(_QWORD *)(v0 + 24);
    v2 = partial apply for closure #1 in VideoMessageInboxController.messageDeletionHandler.getter;
    *(_QWORD *)(v0 + 24) = partial apply for closure #1 in VideoMessageInboxController.messageDeletionHandler.getter;
    *(_QWORD *)(v0 + 32) = v3;
    OUTLINED_FUNCTION_11_1();
    outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v4);
  }
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v1);
  return v2;
}

uint64_t sub_1BD0B30D0()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t closure #1 in VideoMessageInboxController.messageDeletionHandler.getter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    VideoMessageInboxController.messageStoreController.getter();
    v7 = v6;
    swift_release();
    static TaskPriority.userInitiated.getter();
    v8 = type metadata accessor for TaskPriority();
    __swift_storeEnumTagSinglePayload((uint64_t)v4, 0, 1, v8);
    v9 = (_QWORD *)swift_allocObject();
    v9[2] = 0;
    v9[3] = 0;
    v9[4] = v7;
    v9[5] = a1;
    swift_bridgeObjectRetain();
    _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
    return swift_release();
  }
  return result;
}

uint64_t partial apply for closure #1 in VideoMessageInboxController.messageDeletionHandler.getter(uint64_t a1)
{
  return closure #1 in VideoMessageInboxController.messageDeletionHandler.getter(a1);
}

uint64_t closure #1 in closure #1 in VideoMessageInboxController.messageDeletionHandler.getter()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v1;
  *v1 = v0;
  v1[1] = closure #1 in closure #1 in VideoMessageInboxController.messageDeletionHandler.getter;
  return MessageStoreController.deleteMessages(_:)();
}

{
  OUTLINED_FUNCTION_28_20();
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_4_4();
}

{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;

  if (one-time initialization token for videoMessaging != -1)
    swift_once();
  v1 = OUTLINED_FUNCTION_17_2();
  __swift_project_value_buffer(v1, (uint64_t)&static Logger.videoMessaging);
  v2 = Logger.logObject.getter();
  v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)OUTLINED_FUNCTION_105();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_1BD004000, v2, v3, "Successfully deleted messages", v4, 2u);
    OUTLINED_FUNCTION_60();
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

#error "1BD0B3408: call analysis failed (funcsize=64)"

uint64_t VideoMessageInboxController.messageDeletionHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v2 + 24);
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v3);
}

void (*VideoMessageInboxController.messageDeletionHandler.modify(uint64_t (**a1)(uint64_t a1)))(uint64_t a1, char a2)
{
  uint64_t (*v1)(uint64_t);
  uint64_t (*v3)(uint64_t);

  a1[2] = v1;
  *a1 = VideoMessageInboxController.messageDeletionHandler.getter();
  a1[1] = v3;
  return VideoMessageInboxController.messageDeletionHandler.modify;
}

void VideoMessageInboxController.messageDeletionHandler.modify(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0)
  {
    swift_retain();
    OUTLINED_FUNCTION_78_3();
    swift_release();
  }
  else
  {
    OUTLINED_FUNCTION_78_3();
    OUTLINED_FUNCTION_18();
  }
}

Swift::Void __swiftcall VideoMessageInboxController.deleteVideoMessageCallItems(_:)(Swift::OpaquePointer a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t);
  void *rawValue;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v3 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_77();
  v8 = v7 - v6;
  v9 = OUTLINED_FUNCTION_33_0();
  v27 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_51_0();
  v11 = MEMORY[0x1E0C80A78](v10);
  v26 = (uint64_t)&rawValue - v12;
  v13 = *((_QWORD *)a1._rawValue + 2);
  if (v13)
  {
    v24 = v1;
    type metadata accessor for RecentsCallItem(0);
    OUTLINED_FUNCTION_12_11();
    v15 = (char *)a1._rawValue + v14;
    v17 = *(_QWORD *)(v16 + 72);
    rawValue = a1._rawValue;
    swift_bridgeObjectRetain();
    v18 = MEMORY[0x1E0DEE9D8];
    v25 = v2;
    do
    {
      closure #1 in VideoMessageInboxController.deleteVideoMessageCallItems(_:)((uint64_t)v15, v8);
      if (__swift_getEnumTagSinglePayload(v8, 1, v9) == 1)
      {
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v8, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      }
      else
      {
        v19 = v26;
        OUTLINED_FUNCTION_91_0(v26, v8);
        OUTLINED_FUNCTION_91_0(v2, v19);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v18 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        v20 = *(_QWORD *)(v18 + 16);
        if (v20 >= *(_QWORD *)(v18 + 24) >> 1)
          v18 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        *(_QWORD *)(v18 + 16) = v20 + 1;
        v21 = v18
            + ((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80))
            + *(_QWORD *)(v27 + 72) * v20;
        v2 = v25;
        OUTLINED_FUNCTION_91_0(v21, v25);
      }
      v15 += v17;
      --v13;
    }
    while (v13);
    v11 = swift_bridgeObjectRelease();
    v3 = v24;
  }
  else
  {
    v18 = MEMORY[0x1E0DEE9D8];
  }
  v22 = (void (*)(uint64_t))(*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 128))(v11);
  v22(v18);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_52_1();
}

uint64_t closure #1 in VideoMessageInboxController.deleteVideoMessageCallItems(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  int EnumCaseMultiPayload;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint8_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v51 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RecentsCallItem?);
  MEMORY[0x1E0C80A78](v3);
  v49 = (uint64_t)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = type metadata accessor for RecentsCallItem(0);
  MEMORY[0x1E0C80A78](v48);
  v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for RecentsCallItemType(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for RecentCallRecentItemMetadata(0);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v48 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  v17 = MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v48 - v20;
  v50 = (uint8_t *)a1;
  outlined init with copy of ConversationControlsAppLaunchButtonType(a1, (uint64_t)v9, type metadata accessor for RecentsCallItemType);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if ((EnumCaseMultiPayload - 1) < 2)
  {
    outlined destroy of AccountUpdateNotice((uint64_t)v9, type metadata accessor for RecentsCallItemType);
    v26 = (uint64_t)v6;
LABEL_9:
    v31 = type metadata accessor for UUID();
    __swift_storeEnumTagSinglePayload((uint64_t)v21, 1, 1, v31);
    goto LABEL_12;
  }
  if ((EnumCaseMultiPayload - 3) >= 2)
    v23 = (uint64_t)v13;
  else
    v23 = (uint64_t)v15;
  outlined init with take of StagedCollaboration((uint64_t)v9, v23, type metadata accessor for RecentCallRecentItemMetadata);
  v24 = *(void **)(v23 + *(int *)(v10 + 52));
  v25 = v24;
  outlined destroy of AccountUpdateNotice(v23, type metadata accessor for RecentCallRecentItemMetadata);
  v26 = (uint64_t)v6;
  if (!v24)
    goto LABEL_9;
  v27 = objc_msgSend(v25, sel_messageUUID);

  if (v27)
  {
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    v28 = type metadata accessor for UUID();
    v29 = (uint64_t)v19;
    v30 = 0;
  }
  else
  {
    v28 = type metadata accessor for UUID();
    v29 = (uint64_t)v19;
    v30 = 1;
  }
  __swift_storeEnumTagSinglePayload(v29, v30, 1, v28);
  outlined init with take of UUID?((uint64_t)v19, (uint64_t)v21);
  type metadata accessor for UUID();
  if (__swift_getEnumTagSinglePayload((uint64_t)v21, 1, v28) != 1)
  {
    v47 = v51;
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v51, v21, v28);
    v44 = v47;
    v45 = 0;
    v43 = v28;
    return __swift_storeEnumTagSinglePayload(v44, v45, 1, v43);
  }
LABEL_12:
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v21, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  if (one-time initialization token for videoMessaging != -1)
    swift_once();
  v32 = type metadata accessor for Logger();
  __swift_project_value_buffer(v32, (uint64_t)&static Logger.videoMessaging);
  outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v50, v26, type metadata accessor for RecentsCallItem);
  v33 = Logger.logObject.getter();
  v34 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v33, v34))
  {
    v35 = (uint8_t *)swift_slowAlloc();
    v36 = swift_slowAlloc();
    v53 = v36;
    *(_DWORD *)v35 = 136315138;
    v50 = v35 + 4;
    v37 = v49;
    outlined init with copy of ConversationControlsAppLaunchButtonType(v26, v49, type metadata accessor for RecentsCallItem);
    __swift_storeEnumTagSinglePayload(v37, 0, 1, v48);
    specialized >> prefix<A>(_:)(v37);
    v39 = v38;
    v40 = v26;
    v42 = v41;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v37, (uint64_t *)&demangling cache variable for type metadata for RecentsCallItem?);
    v52 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v39, v42, &v53);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    outlined destroy of AccountUpdateNotice(v40, type metadata accessor for RecentsCallItem);
    _os_log_impl(&dword_1BD004000, v33, v34, "Ignoring request to delete a call item without a video message: %s", v35, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v36, -1, -1);
    MEMORY[0x1C3B751B8](v35, -1, -1);
  }
  else
  {
    outlined destroy of AccountUpdateNotice(v26, type metadata accessor for RecentsCallItem);
  }

  v43 = type metadata accessor for UUID();
  v44 = v51;
  v45 = 1;
  return __swift_storeEnumTagSinglePayload(v44, v45, 1, v43);
}

void VideoMessageInboxController.markCallItemAsRead(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int EnumCaseMultiPayload;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v48 = a2;
  v49 = a3;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_77();
  v46 = v7 - v6;
  type metadata accessor for RecentsCallItemType(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_77();
  v11 = v10 - v9;
  v12 = type metadata accessor for RecentCallRecentItemMetadata(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_51_0();
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v43 - v15;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  v18 = MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v43 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v43 - v21;
  v23 = OUTLINED_FUNCTION_33_0();
  v45 = *(_QWORD *)(v23 - 8);
  v24 = *(_QWORD *)(v45 + 64);
  v25 = MEMORY[0x1E0C80A78](v23);
  v44 = (uint64_t)&v43 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  v50 = (uint64_t)&v43 - v26;
  outlined init with copy of ConversationControlsAppLaunchButtonType(a1, v11, type metadata accessor for RecentsCallItemType);
  OUTLINED_FUNCTION_114();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if ((EnumCaseMultiPayload - 1) < 2)
  {
    outlined destroy of AccountUpdateNotice(v11, type metadata accessor for RecentsCallItemType);
LABEL_9:
    OUTLINED_FUNCTION_86_0((uint64_t)v22, 1);
    goto LABEL_12;
  }
  if ((EnumCaseMultiPayload - 3) >= 2)
    v28 = v3;
  else
    v28 = (uint64_t)v16;
  v29 = OUTLINED_FUNCTION_114();
  outlined init with take of StagedCollaboration(v29, v30, type metadata accessor for RecentCallRecentItemMetadata);
  v31 = *(void **)(v28 + *(int *)(v12 + 52));
  v32 = v31;
  outlined destroy of AccountUpdateNotice(v28, type metadata accessor for RecentCallRecentItemMetadata);
  if (!v31)
    goto LABEL_9;
  v33 = objc_msgSend(v32, sel_messageUUID);

  if (v33)
  {
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    v34 = 0;
  }
  else
  {
    v34 = 1;
  }
  OUTLINED_FUNCTION_86_0((uint64_t)v20, v34);
  outlined init with take of UUID?((uint64_t)v20, (uint64_t)v22);
  if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v23) != 1)
  {
    v35 = v45;
    OUTLINED_FUNCTION_72_5(v50);
    v36 = v46;
    static TaskPriority.userInitiated.getter();
    v37 = type metadata accessor for TaskPriority();
    __swift_storeEnumTagSinglePayload(v36, 0, 1, v37);
    OUTLINED_FUNCTION_85_1(v44, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v35 + 16));
    v38 = (*(unsigned __int8 *)(v35 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
    v39 = (_QWORD *)swift_allocObject();
    v39[2] = 0;
    v39[3] = 0;
    v39[4] = v47;
    OUTLINED_FUNCTION_72_5((uint64_t)v39 + v38);
    v40 = (_QWORD *)((char *)v39 + ((v24 + v38 + 7) & 0xFFFFFFFFFFFFFFF8));
    v41 = v49;
    *v40 = v48;
    v40[1] = v41;
    swift_retain();
    v42 = OUTLINED_FUNCTION_114();
    _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v42);
    _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v50, v23);
    goto LABEL_13;
  }
LABEL_12:
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v22, (uint64_t *)&demangling cache variable for type metadata for UUID?);
LABEL_13:
  OUTLINED_FUNCTION_52_1();
}

uint64_t closure #1 in VideoMessageInboxController.markCallItemAsRead(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;

  v7[7] = a6;
  v7[8] = a7;
  v7[5] = a4;
  v7[6] = a5;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  v7[9] = swift_task_alloc();
  v8 = type metadata accessor for UUID();
  v7[10] = v8;
  v7[11] = *(_QWORD *)(v8 - 8);
  v7[12] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t closure #1 in VideoMessageInboxController.markCallItemAsRead(_:completion:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  void (*v7)(unint64_t, uint64_t, uint64_t);
  _QWORD *v8;

  v1 = v0[10];
  v2 = v0[11];
  v3 = v0[6];
  VideoMessageInboxController.messageStoreController.getter();
  v0[13] = v4;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UUID>);
  v5 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v6 = swift_allocObject();
  v0[14] = v6;
  *(_OWORD *)(v6 + 16) = xmmword_1BD6441D0;
  v7 = *(void (**)(unint64_t, uint64_t, uint64_t))(v2 + 16);
  v0[15] = v7;
  v7(v6 + v5, v3, v1);
  v8 = (_QWORD *)swift_task_alloc();
  v0[16] = v8;
  *v8 = v0;
  v8[1] = closure #1 in VideoMessageInboxController.markCallItemAsRead(_:completion:);
  return MessageStoreController.markMessagesAsRead(messageUUIDs:)();
}

{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 136) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_43();
  }
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_0_6();
}

{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  _BOOL4 v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v19;

  if (one-time initialization token for videoMessaging != -1)
    swift_once();
  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 120);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 48);
  v5 = OUTLINED_FUNCTION_17_2();
  v6 = __swift_project_value_buffer(v5, (uint64_t)&static Logger.videoMessaging);
  v1(v2, v4, v3);
  v7 = Logger.logObject.getter();
  v8 = static os_log_type_t.default.getter();
  v9 = os_log_type_enabled(v7, v8);
  v10 = *(_QWORD *)(v0 + 80);
  if (v9)
  {
    v11 = (uint8_t *)OUTLINED_FUNCTION_105();
    v19 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v11 = 136315138;
    _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
    v12 = dispatch thunk of CustomStringConvertible.description.getter();
    *(_QWORD *)(v0 + 32) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v12, v13, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_66_5();
    _os_log_impl(&dword_1BD004000, v7, v8, "Marked video message as read %s", v11, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_60();
  }
  OUTLINED_FUNCTION_66_5();

  v14 = OUTLINED_FUNCTION_50_12();
  OUTLINED_FUNCTION_47_4(v14);
  v15 = OUTLINED_FUNCTION_71_7();
  v16 = (_QWORD *)OUTLINED_FUNCTION_15();
  v17 = MEMORY[0x1E0DF06E8];
  v16[2] = v15;
  v16[3] = v17;
  v16[4] = v10;
  v16[5] = v6;
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCytSg_Tgm5();
  swift_release();
  OUTLINED_FUNCTION_81_0();
  OUTLINED_FUNCTION_12();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

#error "1BD0B441C: call analysis failed (funcsize=85)"

uint64_t closure #1 in closure #1 in VideoMessageInboxController.markCallItemAsRead(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[3] = a4;
  v5[4] = a5;
  v5[2] = a1;
  type metadata accessor for MainActor();
  v5[5] = static MainActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  return swift_task_switch();
}

uint64_t closure #1 in closure #1 in VideoMessageInboxController.markCallItemAsRead(_:completion:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = swift_release();
  if (v1)
    (*(void (**)(uint64_t))(v0 + 24))(v2);
  **(_BYTE **)(v0 + 16) = v1 == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t closure #1 in VideoMessageInboxController.updateCallItems()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 72) = a4;
  return swift_task_switch();
}

uint64_t closure #1 in VideoMessageInboxController.updateCallItems()()
{
  _QWORD *v0;
  uint64_t Strong;
  _QWORD *v2;
  uint64_t v4;

  OUTLINED_FUNCTION_1();
  Strong = swift_weakLoadStrong();
  v0[10] = Strong;
  if (Strong)
  {
    v2 = (_QWORD *)swift_task_alloc();
    v0[11] = v2;
    *v2 = v0;
    v2[1] = closure #1 in VideoMessageInboxController.updateCallItems();
    return VideoMessageInboxController.getAllMessages()();
  }
  else
  {
    v4 = MEMORY[0x1E0DEE9D8];
    v0[14] = 0;
    v0[15] = v4;
    OUTLINED_FUNCTION_1();
    swift_weakLoadStrong();
    OUTLINED_FUNCTION_64_4();
    swift_release();
    OUTLINED_FUNCTION_48_2();
    v0[16] = OUTLINED_FUNCTION_70();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_56_0();
    OUTLINED_FUNCTION_63_1();
    return OUTLINED_FUNCTION_0_6();
  }
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  OUTLINED_FUNCTION_89_4();
  *v4 = *v3;
  *(_QWORD *)(v2 + 96) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    swift_release();
    *(_QWORD *)(v2 + 104) = v0;
  }
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_1_3();
}

{
  uint64_t v0;

  *(_OWORD *)(v0 + 112) = *(_OWORD *)(v0 + 96);
  OUTLINED_FUNCTION_1();
  swift_weakLoadStrong();
  OUTLINED_FUNCTION_64_4();
  swift_release();
  OUTLINED_FUNCTION_48_2();
  *(_QWORD *)(v0 + 128) = OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_34();
  OUTLINED_FUNCTION_56_0();
  OUTLINED_FUNCTION_63_1();
  return OUTLINED_FUNCTION_0_6();
}

{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 120);
  swift_release();
  specialized closure #1 in closure #1 in VideoMessageInboxController.updateCallItems()(v1, v0 + 64);
  OUTLINED_FUNCTION_13_3();
  swift_weakDestroy();
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_1_3();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

{
  uint64_t v0;

  swift_release();
  return OUTLINED_FUNCTION_16(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t specialized closure #1 in closure #1 in VideoMessageInboxController.updateCallItems()(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int16 *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v44;
  BOOL v45;
  uint64_t v46;
  uint64_t Strong;
  uint64_t result;
  _QWORD v49[3];
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  unint64_t v59;
  id v60;
  unint64_t v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD v69[2];
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;

  v49[1] = a2;
  v50 = type metadata accessor for RecentsCallItem(0);
  v62 = *(_QWORD *)(v50 - 8);
  v3 = MEMORY[0x1E0C80A78](v50);
  v5 = (char *)v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v3);
  v57 = (char *)v49 - v7;
  MEMORY[0x1E0C80A78](v6);
  v56 = (uint64_t)v49 - v8;
  v52 = *(_QWORD *)(a1 + 16);
  if (!v52)
  {
    v10 = MEMORY[0x1E0DEE9D8];
    goto LABEL_46;
  }
  v51 = a1 + 32;
  v49[0] = a1;
  swift_bridgeObjectRetain();
  v9 = 0;
  v10 = MEMORY[0x1E0DEE9D8];
  v55 = v5;
  v11 = (uint64_t)v57;
  do
  {
    v12 = (unsigned __int16 *)(v51 + 16 * v9);
    v63 = *v12;
    v13 = *((_QWORD *)v12 + 1);
    if (v13 >> 62)
    {
      swift_bridgeObjectRetain_n();
      v14 = _CocoaArrayWrapper.endIndex.getter();
    }
    else
    {
      v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
    }
    v54 = v10;
    v53 = v9;
    if (v14)
    {
      if (v14 >= 1)
      {
        v61 = v13 & 0xC000000000000001;
        v60 = (id)objc_opt_self();
        v15 = 0;
        v10 = MEMORY[0x1E0DEE9D8];
        v58 = v14;
        v59 = v13;
        while (1)
        {
          v16 = v61 ? (id)MEMORY[0x1C3B73D18](v15, v13) : *(id *)(v13 + 8 * v15 + 32);
          v17 = v16;
          v18 = dispatch thunk of Message.from.getter();
          v19 = (void *)MEMORY[0x1C3B72E00](v18);
          swift_bridgeObjectRelease();
          v20 = objc_msgSend(v60, sel_normalizedHandleWithDestinationID_, v19);

          v68 = v10;
          if (!v20)
            break;
          if (one-time initialization token for faceTime != -1)
            swift_once();
          swift_retain();
          ParticipantContactDetails.init(from:cache:)(v20, v69);
          v21 = v70;
          if (!v70)
            break;
          v22 = (void *)v69[0];
          v23 = v69[1];
          v66 = v72;
          v67 = v71;
          v64 = v74;
          v65 = v73;
          if (!v69[0])
          {
            swift_bridgeObjectRetain();
            v25 = v21;
            v26 = v23;
            goto LABEL_18;
          }
          swift_bridgeObjectRetain();
          v24 = v22;
          v25 = v21;
          v26 = v23;
LABEL_19:
          RecentsCallItem.init(message:title:contact:messageType:)(v17, v23, v25, v24, v63, v11);
          outlined consume of ParticipantContactDetails?(v22, v26, v21);
          v32 = v56;
          outlined init with take of StagedCollaboration(v11, v56, type metadata accessor for RecentsCallItem);
          v33 = (uint64_t)v55;
          outlined init with take of StagedCollaboration(v32, (uint64_t)v55, type metadata accessor for RecentsCallItem);
          v10 = v68;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v10 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          v34 = v58;
          v13 = v59;
          v35 = *(_QWORD *)(v10 + 16);
          if (v35 >= *(_QWORD *)(v10 + 24) >> 1)
            v10 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          ++v15;
          *(_QWORD *)(v10 + 16) = v35 + 1;
          outlined init with take of StagedCollaboration(v33, v10+ ((*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80))+ *(_QWORD *)(v62 + 72) * v35, type metadata accessor for RecentsCallItem);
          if (v34 == v15)
            goto LABEL_27;
        }
        v23 = dispatch thunk of Message.from.getter();
        v25 = v27;
        v26 = 0;
        v21 = 0;
        v66 = 0;
        v67 = 0;
        v64 = 0;
        v65 = 0;
LABEL_18:
        type metadata accessor for TUHandle();
        v28 = dispatch thunk of Message.from.getter();
        TUHandle.__allocating_init(type:value:)(1, v28, v29);
        v31 = v30;
        v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97360]), sel__initWithHandle_, v30);

        v22 = 0;
        goto LABEL_19;
      }
LABEL_51:
      __break(1u);
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
LABEL_54:
      result = _fatalErrorMessage(_:_:file:line:flags:)();
      __break(1u);
      return result;
    }
    v10 = MEMORY[0x1E0DEE9D8];
LABEL_27:
    swift_bridgeObjectRelease();
    v36 = v54;
    v37 = *(_QWORD *)(v54 + 16);
    v38 = *(_QWORD *)(v10 + 16);
    if (__OFADD__(v38, v37))
    {
      __break(1u);
LABEL_50:
      __break(1u);
      goto LABEL_51;
    }
    swift_bridgeObjectRetain();
    if (!swift_isUniquelyReferenced_nonNull_native() || v38 + v37 > *(_QWORD *)(v10 + 24) >> 1)
      v10 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    if (*(_QWORD *)(v36 + 16))
    {
      v39 = *(_QWORD *)(v10 + 16);
      if ((*(_QWORD *)(v10 + 24) >> 1) - v39 < v37)
        goto LABEL_52;
      v40 = (*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80);
      v41 = *(_QWORD *)(v62 + 72);
      v42 = v10 + v40 + v41 * v39;
      if (v36 + v40 < v42 + v41 * v37 && v42 < v36 + v40 + v41 * v37)
        goto LABEL_54;
      swift_arrayInitWithCopy();
      if (v37)
      {
        v44 = *(_QWORD *)(v10 + 16);
        v45 = __OFADD__(v44, v37);
        v46 = v44 + v37;
        if (v45)
          goto LABEL_53;
        *(_QWORD *)(v10 + 16) = v46;
      }
    }
    else if (v37)
    {
      goto LABEL_50;
    }
    v9 = v53 + 1;
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
  }
  while (v9 != v52);
  swift_bridgeObjectRelease();
LABEL_46:
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (!Strong)
    return swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(_QWORD *)Strong + 104))(Strong);
  swift_release();
  v75 = v10;
  CurrentValueSubject.send(_:)();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t RecentsCallItem.init(_:type:)@<X0>(void *a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  int v26;
  _QWORD v27[2];
  uint64_t v28;

  v6 = dispatch thunk of Message.from.getter();
  v8 = v7;
  v9 = (void *)objc_opt_self();
  v10 = (void *)MEMORY[0x1C3B72E00](v6, v8);
  swift_bridgeObjectRelease();
  v11 = objc_msgSend(v9, sel_normalizedHandleWithDestinationID_, v10);

  v26 = a2;
  if (!v11)
    goto LABEL_7;
  if (one-time initialization token for faceTime != -1)
    swift_once();
  swift_retain();
  ParticipantContactDetails.init(from:cache:)(v11, v27);
  v12 = v28;
  if (!v28)
  {
LABEL_7:
    v13 = dispatch thunk of Message.from.getter();
    v16 = v18;
    v17 = 0;
    v12 = 0;
LABEL_8:
    type metadata accessor for TUHandle();
    dispatch thunk of Message.from.getter();
    OUTLINED_FUNCTION_56_0();
    OUTLINED_FUNCTION_63_1();
    TUHandle.__allocating_init(type:value:)(v19, v20, v21);
    v23 = v22;
    v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97360]), sel__initWithHandle_, v22);

    v14 = 0;
    goto LABEL_9;
  }
  v14 = (void *)v27[0];
  v13 = v27[1];
  if (!v27[0])
  {
    swift_bridgeObjectRetain();
    v16 = v12;
    v17 = v13;
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  v15 = v14;
  v16 = v12;
  v17 = v13;
LABEL_9:
  RecentsCallItem.init(message:title:contact:messageType:)(a1, v13, v16, v15, v26, a3);
  outlined consume of ParticipantContactDetails?(v14, v17, v12);
  v24 = type metadata accessor for RecentsCallItem(0);
  return __swift_storeEnumTagSinglePayload(a3, 0, 1, v24);
}

void TUHandle.__allocating_init(type:value:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6;
  void *v7;

  v6 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v7 = (void *)MEMORY[0x1C3B72E00](a2, a3);
  OUTLINED_FUNCTION_13_3();
  objc_msgSend(v6, sel_initWithType_value_, a1, v7);

  OUTLINED_FUNCTION_18();
}

uint64_t specialized Dictionary.init<A>(grouping:by:)(unint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  id v5;
  id v6;
  uint64_t v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  unint64_t v14;
  char v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;

  v24 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  if (a1 >> 62)
  {
LABEL_23:
    swift_bridgeObjectRetain();
    v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v2)
      goto LABEL_3;
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v2)
    {
LABEL_3:
      v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
      v4 = 4;
      while (1)
      {
        if ((a1 & 0xC000000000000001) != 0)
          v5 = (id)MEMORY[0x1C3B73D18](v4 - 4, a1);
        else
          v5 = *(id *)(a1 + 8 * v4);
        if (__OFADD__(v4 - 4, 1))
        {
          __break(1u);
LABEL_21:
          __break(1u);
LABEL_22:
          __break(1u);
          goto LABEL_23;
        }
        v22 = v4 - 3;
        v6 = v5;
        v7 = dispatch thunk of Message.messageType.getter();
        v9 = specialized __RawDictionaryStorage.find<A>(_:)(v7);
        v10 = v3[2];
        v11 = (v8 & 1) == 0;
        v12 = v10 + v11;
        if (__OFADD__(v10, v11))
          goto LABEL_21;
        v13 = v8;
        if (v3[3] < v12)
        {
          specialized _NativeDictionary._copyOrMoveAndResize(capacity:moveElements:)(v12, 1);
          v3 = v24;
          v14 = specialized __RawDictionaryStorage.find<A>(_:)(v7);
          if ((v13 & 1) != (v15 & 1))
          {
            result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
            __break(1u);
            return result;
          }
          v9 = v14;
        }
        if ((v13 & 1) != 0)
        {
          v16 = (_QWORD *)(v3[7] + 8 * v9);
          MEMORY[0x1C3B7301C]();
          if (*(_QWORD *)((*v16 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v16 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
        }
        else
        {
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
          v17 = swift_allocObject();
          *(_OWORD *)(v17 + 16) = xmmword_1BD6443F0;
          *(_QWORD *)(v17 + 32) = v6;
          v23 = v17;
          specialized Array._endMutation()();
          v3[(v9 >> 6) + 8] |= 1 << v9;
          *(_WORD *)(v3[6] + 2 * v9) = v7;
          *(_QWORD *)(v3[7] + 8 * v9) = v23;
          v18 = v3[2];
          v19 = __OFADD__(v18, 1);
          v20 = v18 + 1;
          if (v19)
            goto LABEL_22;
          v3[2] = v20;
        }
        ++v4;
        if (v22 == v2)
          goto LABEL_25;
      }
    }
  }
  v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_25:
  swift_bridgeObjectRelease();
  return (uint64_t)v3;
}

uint64_t VideoMessageInboxController.deinit()
{
  uint64_t v0;

  swift_release();
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(*(_QWORD *)(v0 + 24));
  swift_release();
  return v0;
}

uint64_t VideoMessageInboxController.__deallocating_deinit()
{
  VideoMessageInboxController.deinit();
  OUTLINED_FUNCTION_41_13();
  return swift_deallocClassInstance();
}

void VideoMessageInboxController.__allocating_init()()
{
  OUTLINED_FUNCTION_15();
  VideoMessageInboxController.init()();
  OUTLINED_FUNCTION_0();
}

uint64_t @objc VideoMessageInboxController.messageStoreDidAddMessages(_:)(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD), void (*a5)(uint64_t))
{
  uint64_t v6;

  a4(0);
  static Array._unconditionallyBridgeFromObjectiveC(_:)();
  v6 = OUTLINED_FUNCTION_11_1();
  a5(v6);
  OUTLINED_FUNCTION_11_0();
  return swift_bridgeObjectRelease();
}

double ParticipantContactDetails.init(fromDestinationID:)@<D0>(uint64_t a1@<X8>)
{
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;
  double result;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;

  v2 = (void *)objc_opt_self();
  v3 = OUTLINED_FUNCTION_114();
  v4 = (void *)MEMORY[0x1C3B72E00](v3);
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(v2, sel_normalizedHandleWithDestinationID_, v4);

  if (!v5)
    goto LABEL_6;
  if (one-time initialization token for faceTime != -1)
    swift_once();
  OUTLINED_FUNCTION_11_1();
  ParticipantContactDetails.init(from:cache:)(v5, &v10);
  v6 = v11;
  if (v11)
  {
    result = *(double *)&v10;
    v8 = v12;
    v9 = v13;
    *(_OWORD *)a1 = v10;
    *(_QWORD *)(a1 + 16) = v6;
    *(_OWORD *)(a1 + 24) = v8;
    *(_OWORD *)(a1 + 40) = v9;
  }
  else
  {
LABEL_6:
    *(_QWORD *)(a1 + 48) = 0;
    result = 0.0;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
  }
  return result;
}

uint64_t ParticipantContactDetails.init(from:cache:)@<X0>(void *a1@<X0>, _QWORD *a2@<X8>)
{
  id v4;
  uint64_t v5;
  unsigned __int8 v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v4 = objc_msgSend(a1, sel_value);
  if (!v4)
  {
    v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v4 = (id)MEMORY[0x1C3B72E00](v5);
    swift_bridgeObjectRelease();
  }
  v6 = objc_msgSend(v4, sel_destinationIdIsTemporary);

  if ((v6 & 1) != 0)
  {

    result = OUTLINED_FUNCTION_11_0();
    v8 = 0;
    v9 = 0;
    v10 = 0;
    v11 = 0;
    *a2 = 0;
    a2[1] = 0;
    a2[2] = 0;
  }
  else
  {
    OUTLINED_FUNCTION_2_14();
    ParticipantContactDetailsCache.contactDetails(for:nickname:)(v12, v13, v14, v15, v16, v17, v18, v19, v21, v23, v24, v25, v27, v29, v31, v33, v35, v36, v37,
      v38);
    v8 = v32;
    v9 = v34;
    v22 = v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    static ParticipantContactDetails.initialsFor(_:)(v26);
    lazy protocol witness table accessor for type String and conformance String();
    v10 = StringProtocol.localizedUppercase.getter();
    v11 = v20;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_21_0();

    swift_release();
    result = swift_bridgeObjectRelease();
    *a2 = v26;
    a2[1] = v28;
    a2[2] = v30;
  }
  a2[3] = v8;
  a2[4] = v9;
  a2[5] = v10;
  a2[6] = v11;
  return result;
}

uint64_t specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *v2;
  *(_QWORD *)(v5 + 16) = a1 + 1;
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_12_11();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 32))(v5 + v6 + *(_QWORD *)(v7 + 72) * a1, a2);
}

uint64_t specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *v3;
  *(_QWORD *)(v4 + 16) = result + 1;
  v5 = v4 + 16 * result;
  *(_QWORD *)(v5 + 32) = a2;
  *(_QWORD *)(v5 + 40) = a3;
  return result;
}

uint64_t outlined init with take of UUID?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BD0B5B10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = OUTLINED_FUNCTION_33_0();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  OUTLINED_FUNCTION_67_1();
  OUTLINED_FUNCTION_76();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  if (*(_QWORD *)(v0 + v4))
    swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in VideoMessageInboxController.markCallItemAsRead(_:completion:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v4 = *(_QWORD *)(OUTLINED_FUNCTION_33_0() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = (uint64_t)v1 + v5;
  v10 = (_QWORD *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  v11 = *v10;
  v12 = v10[1];
  v13 = swift_task_alloc();
  v14 = (_QWORD *)OUTLINED_FUNCTION_61_5(v13);
  *v14 = v2;
  v14[1] = partial apply for closure #1 in SyncedScreeningAlphaGradientView.gradient(for:);
  return closure #1 in VideoMessageInboxController.markCallItemAsRead(_:completion:)(a1, v6, v7, v8, v9, v11, v12);
}

unint64_t type metadata accessor for TUHandle()
{
  unint64_t result;

  result = lazy cache variable for type metadata for TUHandle;
  if (!lazy cache variable for type metadata for TUHandle)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
  }
  return result;
}

void outlined consume of ParticipantContactDetails?(void *a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

  }
}

uint64_t sub_1BD0B5D14@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 104))();
  *a2 = result;
  return result;
}

uint64_t method lookup function for VideoMessageInboxController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of VideoMessageInboxController.callItems.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of VideoMessageInboxController.callItems.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of VideoMessageInboxController.callItems.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of VideoMessageInboxController.messageDeletionHandler.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of VideoMessageInboxController.messageDeletionHandler.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of VideoMessageInboxController.messageDeletionHandler.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of VideoMessageInboxController.resume()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of VideoMessageInboxController.deleteVideoMessageCallItems(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of VideoMessageInboxController.markCallItemAsRead(_:completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of VideoMessageInboxController.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 232))();
}

void specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, a4, &demangling cache variable for type metadata for _ContiguousArrayStorage<LinkSource>, (void (*)(uint64_t, uint64_t, char *))specialized UnsafeMutablePointer.moveInitialize(from:count:));
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, a4, &demangling cache variable for type metadata for _ContiguousArrayStorage<VideoReaction>, (void (*)(uint64_t, uint64_t, char *))specialized UnsafeMutablePointer.moveInitialize(from:count:));
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, a4, &demangling cache variable for type metadata for _ContiguousArrayStorage<InCallControlsCollectionViewController.CollectionViewSection>, (void (*)(uint64_t, uint64_t, char *))specialized UnsafeMutablePointer.moveInitialize(from:count:));
}

void specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, void (*a6)(uint64_t, uint64_t, char *))
{
  char v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  size_t v15;
  char *v16;

  v8 = a1;
  if ((a3 & 1) != 0)
  {
    OUTLINED_FUNCTION_2_24();
    if (v10 != v11)
    {
      OUTLINED_FUNCTION_11_32();
      if (v10)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_3_37();
    }
  }
  else
  {
    v9 = a2;
  }
  v12 = *(_QWORD *)(a4 + 16);
  if (v9 <= v12)
    v13 = *(_QWORD *)(a4 + 16);
  else
    v13 = v9;
  if (v13)
  {
    OUTLINED_FUNCTION_17_25(a1, a2, a3, a4, a5);
    v14 = (char *)OUTLINED_FUNCTION_15();
    v15 = _swift_stdlib_malloc_size(v14);
    *((_QWORD *)v14 + 2) = v12;
    *((_QWORD *)v14 + 3) = 2 * v15 - 64;
  }
  else
  {
    v14 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v16 = v14 + 32;
  if ((v8 & 1) != 0)
  {
    a6(a4 + 32, v12, v16);
    OUTLINED_FUNCTION_1_37();
  }
  else
  {
    specialized _ArrayBuffer._copyContents(subRange:initializing:)(0, v12, v16, a4);
  }
  OUTLINED_FUNCTION_91();
}

uint64_t specialized _ArrayBuffer._copyContents(subRange:initializing:)(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v8 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails)
                   - 8);
    v9 = *(unsigned __int8 *)(v8 + 80);
    v10 = *(_QWORD *)(v8 + 72);
    v11 = a4 + ((v9 + 32) & ~v9) + v10 * a1;
    v12 = v10 * v4;
    v13 = a3 + v12;
    v14 = v11 + v12;
    if (v11 >= v13 || v14 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v13;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 56 * a1 + 32;
    v6 = a3 + 56 * v4;
    if (v5 >= v6 || v5 + 56 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 56 * a1 + 32;
    v6 = a3 + 56 * v4;
    if (v5 >= v6 || v5 + 56 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 72 * a1 + 32;
    v6 = a3 + 72 * v4;
    if (v5 >= v6 || v5 + 72 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

char *specialized _ArrayBuffer._copyContents(subRange:initializing:)(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 32 * a1 + 32);
    v6 = &__dst[32 * v4];
    if (v5 >= v6 || &v5[32 * v4] <= __dst)
    {
      memcpy(__dst, v5, 32 * v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

{
  uint64_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 4 * a1 + 32);
    v6 = &__dst[4 * v4];
    if (v5 >= v6 || &v5[4 * v4] <= __dst)
    {
      memcpy(__dst, v5, 4 * v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

{
  uint64_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 8 * a1 + 32);
    v6 = &__dst[8 * v4];
    if (v5 >= v6 || &v5[8 * v4] <= __dst)
    {
      memcpy(__dst, v5, 8 * v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

{
  uint64_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 16 * a1 + 32);
    v6 = &__dst[16 * v4];
    if (v5 >= v6 || &v5[16 * v4] <= __dst)
    {
      memcpy(__dst, v5, 16 * v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

{
  size_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + a1 + 32);
    v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

{
  size_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if ((v4 & 0x8000000000000000) != 0)
  {
LABEL_9:
    OUTLINED_FUNCTION_0_45();
    OUTLINED_FUNCTION_31_2();
    goto LABEL_11;
  }
  v5 = (char *)(a4 + a1 + 32);
  v6 = &__dst[v4];
  if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
  {
    memcpy(__dst, v5, v4);
    OUTLINED_FUNCTION_13_3();
    return v6;
  }
  OUTLINED_FUNCTION_0_45();
  OUTLINED_FUNCTION_30_1();
LABEL_11:
  result = (char *)OUTLINED_FUNCTION_22_1();
  __break(1u);
  return result;
}

{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 72 * a1 + 32);
    v6 = 9 * v4;
    v7 = &__dst[8 * v6];
    if (v5 >= v7 || &v5[8 * v6] <= __dst)
    {
      memcpy(__dst, v5, 8 * v6);
      swift_bridgeObjectRelease();
      return v7;
    }
  }
  result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t specialized _ArrayBuffer._copyContents(subRange:initializing:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(_QWORD);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    OUTLINED_FUNCTION_0_45();
    OUTLINED_FUNCTION_31_2();
    goto LABEL_11;
  }
  OUTLINED_FUNCTION_69_5();
  v6 = v5;
  v7(0);
  OUTLINED_FUNCTION_12_11();
  v10 = *(_QWORD *)(v9 + 72);
  v11 = v2 + v8 + v10 * v6;
  v12 = v10 * v4;
  v13 = v3 + v12;
  v14 = v11 + v12;
  if (v11 >= v13 || v14 <= v3)
  {
    swift_arrayInitWithCopy();
    OUTLINED_FUNCTION_13_3();
    return v13;
  }
  OUTLINED_FUNCTION_0_45();
  OUTLINED_FUNCTION_30_1();
LABEL_11:
  result = OUTLINED_FUNCTION_22_1();
  __break(1u);
  return result;
}

uint64_t partial apply for closure #1 in VideoMessageInboxController.getAllMessages()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = swift_task_alloc();
  v7 = (_QWORD *)OUTLINED_FUNCTION_61_5(v6);
  *v7 = v3;
  v7[1] = partial apply for closure #2 in CallScreeningEndingState.enteredState();
  return closure #1 in VideoMessageInboxController.getAllMessages()(a1, a2, v2);
}

uint64_t sub_1BD0B7AEC()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t specialized _NativeDictionary._copyOrMoveAndResize(capacity:moveElements:)(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t i;
  int64_t v17;
  _QWORD *v18;
  unint64_t v19;
  int64_t v20;
  __int16 v21;
  uint64_t v22;
  Swift::UInt16 v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  char v35;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<MessageType, [Message]>);
  v35 = a2;
  v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_39;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v33 = v2;
  v34 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  if (!v10)
    goto LABEL_7;
LABEL_6:
  v15 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (i = v15 | (v14 << 6); ; i = __clz(__rbit64(v19)) + (v14 << 6))
  {
    v21 = *(_WORD *)(*(_QWORD *)(v5 + 48) + 2 * i);
    v22 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * i);
    if ((v35 & 1) == 0)
      swift_bridgeObjectRetain();
    Hasher.init(_seed:)();
    v23 = MessageType.rawValue.getter();
    Hasher._combine(_:)(v23);
    result = Hasher._finalize()();
    v24 = -1 << *(_BYTE *)(v7 + 32);
    v25 = result & ~v24;
    v26 = v25 >> 6;
    if (((-1 << v25) & ~*(_QWORD *)(v12 + 8 * (v25 >> 6))) == 0)
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v24) >> 6;
      while (++v26 != v29 || (v28 & 1) == 0)
      {
        v30 = v26 == v29;
        if (v26 == v29)
          v26 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v12 + 8 * v26);
        if (v31 != -1)
        {
          v27 = __clz(__rbit64(~v31)) + (v26 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    v27 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v12 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(_QWORD *)(v12 + ((v27 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v27;
    *(_WORD *)(*(_QWORD *)(v7 + 48) + 2 * v27) = v21;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v27) = v22;
    ++*(_QWORD *)(v7 + 16);
    if (v10)
      goto LABEL_6;
LABEL_7:
    v17 = v14 + 1;
    if (__OFADD__(v14, 1))
      goto LABEL_41;
    if (v17 >= v11)
    {
      swift_release();
      v3 = v33;
      v18 = (_QWORD *)(v5 + 64);
      goto LABEL_34;
    }
    v18 = (_QWORD *)(v5 + 64);
    v19 = *(_QWORD *)(v34 + 8 * v17);
    ++v14;
    if (!v19)
    {
      v14 = v17 + 1;
      if (v17 + 1 >= v11)
        goto LABEL_32;
      v19 = *(_QWORD *)(v34 + 8 * v14);
      if (!v19)
        break;
    }
LABEL_18:
    v10 = (v19 - 1) & v19;
  }
  v20 = v17 + 2;
  if (v20 < v11)
  {
    v19 = *(_QWORD *)(v34 + 8 * v20);
    if (!v19)
    {
      while (1)
      {
        v14 = v20 + 1;
        if (__OFADD__(v20, 1))
          goto LABEL_42;
        if (v14 >= v11)
          goto LABEL_32;
        v19 = *(_QWORD *)(v34 + 8 * v14);
        ++v20;
        if (v19)
          goto LABEL_18;
      }
    }
    v14 = v20;
    goto LABEL_18;
  }
LABEL_32:
  swift_release();
  v3 = v33;
LABEL_34:
  if ((v35 & 1) != 0)
  {
    v32 = 1 << *(_BYTE *)(v5 + 32);
    if (v32 >= 64)
      specialized UnsafeMutablePointer.assign(repeating:count:)(0, (unint64_t)(v32 + 63) >> 6, v18);
    else
      *v18 = -1 << v32;
    *(_QWORD *)(v5 + 16) = 0;
  }
LABEL_39:
  result = swift_release();
  *v3 = v7;
  return result;
}

unint64_t lazy protocol witness table accessor for type [MessageFetchOptions] and conformance [A]()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type [MessageFetchOptions] and conformance [A];
  if (!lazy protocol witness table cache variable for type [MessageFetchOptions] and conformance [A])
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [MessageFetchOptions]);
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type [MessageFetchOptions] and conformance [A]);
  }
  return result;
}

uint64_t sub_1BD0B7E38()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BD0B7E5C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_67_1();
  if (*(_QWORD *)(v0 + 32))
    swift_release();
  OUTLINED_FUNCTION_41_13();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in VideoMessageInboxController.markCallItemAsRead(_:completion:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_61_5(v0);
  v2 = OUTLINED_FUNCTION_37_1(v1);
  return closure #1 in closure #1 in VideoMessageInboxController.markCallItemAsRead(_:completion:)(v2, v3, v4, v5, v6);
}

uint64_t sub_1BD0B7EE0()
{
  OUTLINED_FUNCTION_67_1();
  OUTLINED_FUNCTION_76();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in VideoMessageInboxController.updateCallItems()(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = swift_task_alloc();
  v8 = (_QWORD *)OUTLINED_FUNCTION_61_5(v7);
  *v8 = v2;
  v8[1] = partial apply for closure #1 in VideoMessageInboxController.updateCallItems();
  return closure #1 in VideoMessageInboxController.updateCallItems()(a1, v4, v5, v6);
}

uint64_t sub_1BD0B7F6C()
{
  OUTLINED_FUNCTION_67_1();
  OUTLINED_FUNCTION_76();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_41_13();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in VideoMessageInboxController.messageDeletionHandler.getter()
{
  uint64_t v0;
  _QWORD *v1;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_61_5(v0);
  OUTLINED_FUNCTION_37_1(v1);
  return closure #1 in closure #1 in VideoMessageInboxController.messageDeletionHandler.getter();
}

uint64_t OUTLINED_FUNCTION_85_1@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, v2, v3);
}

void OUTLINED_FUNCTION_89_4()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

void ConversationHUDControlsStatusView.__allocating_init(recipe:controlsManager:menuHostViewController:context:presentationStyle:)(uint64_t a1, void *a2, void *a3, uint64_t a4, char a5, char a6)
{
  objc_class *v6;
  char v12;
  id v13;

  v12 = a6 & 1;
  v13 = objc_allocWithZone(v6);
  ConversationHUDControlsStatusView.init(recipe:controlsManager:menuHostViewController:context:presentationStyle:)(a1, a2, a3, a4, a5, v12);
  OUTLINED_FUNCTION_65_1();
}

BOOL static StatusViewPresentationStyle.== infix(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void StatusViewPresentationStyle.hash(into:)(uint64_t a1, char a2)
{
  Hasher._combine(_:)(a2 & 1);
  OUTLINED_FUNCTION_0();
}

void *static StatusViewPresentationStyle.allCases.getter()
{
  return &outlined read-only object #0 of static StatusViewPresentationStyle.allCases.getter;
}

Swift::Int StatusViewPresentationStyle.hashValue.getter(char a1)
{
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1 & 1);
  return Hasher._finalize()();
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance StatusViewPresentationStyle()
{
  char *v0;

  return StatusViewPresentationStyle.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance StatusViewPresentationStyle(uint64_t a1)
{
  char *v1;

  StatusViewPresentationStyle.hash(into:)(a1, *v1);
}

void protocol witness for static CaseIterable.allCases.getter in conformance StatusViewPresentationStyle(_QWORD *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static StatusViewPresentationStyle.allCases.getter;
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance StatusViewPresentationStyle(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static StatusViewPresentationStyle.== infix(_:_:)(*a1, *a2);
}

uint64_t key path setter for ConversationHUDControlsStatusView.recipe : ConversationHUDControlsStatusView(uint64_t a1, _QWORD **a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v4 = type metadata accessor for ConversationControlsRecipe();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of ConversationControlsRecipe(a1, (uint64_t)v6);
  return (*(uint64_t (**)(char *))((*MEMORY[0x1E0DEEDD8] & **a2) + 0xA0))(v6);
}

void ConversationHUDControlsStatusView.recipe.didset(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  BOOL v41;
  void *v42;
  BOOL v43;
  BOOL v44;
  double v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  void *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t aBlock;
  uint64_t v61;
  void *v62;
  void *v63;
  void *v64;
  uint64_t v65;

  v3 = type metadata accessor for ConversationControlsRecipe();
  v56 = *(_QWORD *)(v3 - 8);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = v5;
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v54 - v7;
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v9 = type metadata accessor for Logger();
  __swift_project_value_buffer(v9, (uint64_t)&static Logger.conversationControls);
  outlined init with copy of ConversationControlsRecipe(a1, (uint64_t)v8);
  v10 = v1;
  v11 = Logger.logObject.getter();
  v12 = static os_log_type_t.default.getter();
  v13 = &OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_isWaitingOnFirstRemoteFrame;
  if (os_log_type_enabled(v11, v12))
  {
    v14 = swift_slowAlloc();
    v55 = v3;
    v15 = v14;
    v16 = swift_slowAlloc();
    aBlock = v16;
    *(_DWORD *)v15 = 136315394;
    ConversationControlsRecipe.debugDescription.getter();
    v59 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v17, v18, &aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    outlined destroy of ConversationControlsRecipe((uint64_t)v8);
    *(_WORD *)(v15 + 12) = 2080;
    v19 = (uint64_t)&v10[OBJC_IVAR____TtC15ConversationKit33ConversationHUDControlsStatusView_recipe];
    swift_beginAccess();
    outlined init with copy of ConversationControlsRecipe(v19, (uint64_t)v6);
    ConversationControlsRecipe.debugDescription.getter();
    v21 = v20;
    v23 = v22;
    outlined destroy of ConversationControlsRecipe((uint64_t)v6);
    v24 = v21;
    v13 = &OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_isWaitingOnFirstRemoteFrame;
    v58 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v24, v23, &aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v11, v12, "oldRecipe:%s\nnewRecipe:%s", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v16, -1, -1);
    v25 = v15;
    v3 = v55;
    MEMORY[0x1C3B751B8](v25, -1, -1);

  }
  else
  {
    outlined destroy of ConversationControlsRecipe((uint64_t)v8);

  }
  v26 = *(_QWORD *)(a1 + 56);
  v27 = *(_QWORD *)(a1 + 72);
  v28 = &v10[v13[14]];
  swift_beginAccess();
  v29 = *((_QWORD *)v28 + 7);
  v30 = v29 == 0;
  if (v29)
  {
    v31 = *((_QWORD *)v28 + 9);
    if (!v26)
      goto LABEL_14;
  }
  else
  {
    v31 = 0;
    if (!v26)
      goto LABEL_14;
  }
  if (v29)
    v32 = v27 == v31;
  else
    v32 = 0;
  v30 = v32;
LABEL_14:
  v33 = *(int *)(v3 + 40);
  v34 = a1 + v33;
  v35 = *(_QWORD *)(a1 + v33);
  v36 = &v28[v33];
  v37 = *(_QWORD *)v36;
  v38 = *(_QWORD *)v36 == 0;
  if (*(_QWORD *)v36)
    v39 = *((_QWORD *)v36 + 2);
  else
    v39 = 0;
  v40 = *(_QWORD *)(v34 + 16);
  swift_endAccess();
  if (v35)
  {
    if (v37)
      v41 = v40 == v39;
    else
      v41 = 0;
    v38 = v41;
  }
  v42 = (void *)objc_opt_self();
  if (one-time initialization token for shared != -1)
    swift_once();
  v43 = !v38;
  v44 = !v30;
  v45 = (*(double (**)(void))(*(_QWORD *)static Defaults.shared + 1016))();
  v46 = swift_allocObject();
  swift_unknownObjectWeakInit();
  outlined init with copy of ConversationControlsRecipe(a1, (uint64_t)v6);
  v47 = (*(unsigned __int8 *)(v56 + 80) + 26) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80);
  v48 = swift_allocObject();
  *(_QWORD *)(v48 + 16) = v46;
  *(_BYTE *)(v48 + 24) = v44;
  *(_BYTE *)(v48 + 25) = v43;
  outlined init with take of ConversationControlsRecipe((uint64_t)v6, v48 + v47);
  v64 = partial apply for closure #1 in ConversationHUDControlsStatusView.recipe.didset;
  v65 = v48;
  v49 = MEMORY[0x1E0C809B0];
  aBlock = MEMORY[0x1E0C809B0];
  v61 = 1107296256;
  v62 = thunk for @escaping @callee_guaranteed () -> ();
  v63 = &block_descriptor_12;
  v50 = _Block_copy(&aBlock);
  swift_release();
  v51 = swift_allocObject();
  *(_BYTE *)(v51 + 16) = v44;
  *(_QWORD *)(v51 + 24) = v10;
  *(_BYTE *)(v51 + 32) = v43;
  v64 = partial apply for closure #2 in ConversationHUDControlsStatusView.recipe.didset;
  v65 = v51;
  aBlock = v49;
  v61 = 1107296256;
  v62 = thunk for @escaping @callee_guaranteed (@unowned Bool) -> ();
  v63 = &block_descriptor_17;
  v52 = _Block_copy(&aBlock);
  v53 = v10;
  swift_release();
  objc_msgSend(v42, sel_animateWithDuration_animations_completion_, v50, v52, v45);
  _Block_release(v52);
  _Block_release(v50);
}

void closure #1 in ConversationHUDControlsStatusView.recipe.didset(uint64_t a1, char a2, char a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  id *v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  void *v20;
  void *v21;
  _QWORD *v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(void);
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  void *v39;
  uint64_t v40;
  unint64_t v41;
  void (*v42)(void);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  void *v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  id v52;
  void *v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v60;
  uint64_t v61;
  _QWORD *v62;
  _QWORD *v63;
  void *v64;
  int v65;
  int v66;
  uint64_t v67;
  _QWORD *v68;
  _QWORD *v69;
  void *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;

  v8 = type metadata accessor for ConversationControlsRecipe();
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v71 - v13;
  MEMORY[0x1E0C80A78](v12);
  v16 = (id *)((char *)&v71 - v15);
  swift_beginAccess();
  v17 = (_QWORD *)MEMORY[0x1C3B752C0](a1 + 16);
  if (!v17)
    return;
  v18 = v17;
  v19 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  if ((a2 & 1) != 0)
  {
    v20 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v17) + 0x110))();
    if (v20)
    {
      v21 = v20;
      objc_msgSend(v20, sel_setAlpha_, 0.0);

    }
  }
  v72 = v11;
  v73 = v8;
  if ((a3 & 1) != 0)
  {
    v22 = (_QWORD *)(*(uint64_t (**)(void))((*v19 & *v18) + 0xF8))();
    v23 = (void *)(*(uint64_t (**)(void))((*v19 & *v22) + 0x158))();

    if (v23)
    {
      objc_msgSend(v23, sel_setAlpha_, 0.0);

    }
  }
  v24 = objc_msgSend(*(id *)(a4 + 80), sel_string);
  v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v27 = v26;

  v28 = *(void (**)(void))((*v19 & *v18) + 0x98);
  v28();
  v29 = v16[10];
  outlined destroy of ConversationControlsRecipe((uint64_t)v16);
  v30 = objc_msgSend(v29, sel_string);

  v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v33 = v32;

  if (v25 == v31 && v27 == v33)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v35 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    v36 = swift_bridgeObjectRelease();
    if ((v35 & 1) == 0)
    {
      v37 = (_QWORD *)MEMORY[0x1E0DEEDD8];
      v38 = (_QWORD *)(*(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v18) + 0xF8))(v36);
      v39 = (void *)(*(uint64_t (**)(void))((*v37 & *v38) + 0x110))();

      objc_msgSend(v39, sel_setAlpha_, 0.0);
    }
  }
  v40 = a4;
  v41 = *(_QWORD *)(a4 + 88);
  v42 = v28;
  if (v41 >> 62)
  {
    swift_bridgeObjectRetain();
    v43 = _CocoaArrayWrapper.endIndex.getter();
  }
  else
  {
    v43 = *(_QWORD *)((v41 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  v45 = (uint64_t)v72;
  v44 = v73;
  if (v43)
  {
    specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v41 & 0xC000000000000001) == 0, v41);
    if ((v41 & 0xC000000000000001) != 0)
      v46 = (id)MEMORY[0x1C3B73D18](0, v41);
    else
      v46 = *(id *)(v41 + 32);
    v47 = v46;
    swift_bridgeObjectRelease();
    v48 = objc_msgSend(v47, sel_string);

    v49 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v43 = v50;

  }
  else
  {
    swift_bridgeObjectRelease();
    v49 = 0;
  }
  v42();
  v51 = *((_QWORD *)v14 + 11);
  swift_bridgeObjectRetain();
  outlined destroy of ConversationControlsRecipe((uint64_t)v14);
  if (!(v51 >> 62))
  {
    if (*(_QWORD *)((v51 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_24;
LABEL_39:
    v58 = swift_bridgeObjectRelease();
    if (!v43)
      goto LABEL_42;
    goto LABEL_40;
  }
  swift_bridgeObjectRetain();
  v61 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v61)
    goto LABEL_39;
LABEL_24:
  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v51 & 0xC000000000000001) == 0, v51);
  if ((v51 & 0xC000000000000001) != 0)
    v52 = (id)MEMORY[0x1C3B73D18](0, v51);
  else
    v52 = *(id *)(v51 + 32);
  v53 = v52;
  swift_bridgeObjectRelease();
  v54 = objc_msgSend(v53, sel_string);

  v55 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v57 = v56;

  if (!v43)
  {
    if (!v57)
      goto LABEL_42;
    goto LABEL_40;
  }
  if (!v57)
  {
LABEL_40:
    v58 = swift_bridgeObjectRelease();
LABEL_41:
    v62 = (_QWORD *)MEMORY[0x1E0DEEDD8];
    v63 = (_QWORD *)(*(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v18) + 0xF8))(v58);
    v64 = (void *)(*(uint64_t (**)(void))((*v62 & *v63) + 0xE0))();

    objc_msgSend(v64, sel_setAlpha_, 0.0);
    goto LABEL_42;
  }
  if (v49 != v55 || v43 != v57)
  {
    v60 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    v58 = swift_bridgeObjectRelease();
    if ((v60 & 1) != 0)
      goto LABEL_42;
    goto LABEL_41;
  }
  swift_bridgeObjectRelease();
  v58 = swift_bridgeObjectRelease();
LABEL_42:
  v65 = *(unsigned __int8 *)(v40 + *(int *)(v44 + 48));
  ((void (*)(uint64_t))v42)(v58);
  v66 = *(unsigned __int8 *)(v45 + *(int *)(v44 + 48));
  v67 = outlined destroy of ConversationControlsRecipe(v45);
  if (v65 != v66)
  {
    v68 = (_QWORD *)MEMORY[0x1E0DEEDD8];
    v69 = (_QWORD *)(*(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v18) + 0xF8))(v67);
    v70 = (void *)(*(uint64_t (**)(void))((*v68 & *v69) + 0x140))();

    objc_msgSend(v70, sel_setAlpha_, 0.0);
  }

}

void closure #2 in ConversationHUDControlsStatusView.recipe.didset(uint64_t a1, char a2, _QWORD *a3, char a4)
{
  _QWORD *v6;
  void *v7;
  void *v8;
  uint64_t (*v9)(void);
  _QWORD *v10;
  _QWORD *v11;
  void *v12;
  void *v13;
  double v14;
  uint64_t v15;
  void *v16;
  _QWORD v17[6];

  v6 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  if ((a2 & 1) != 0)
  {
    ConversationHUDControlsStatusView.updateLeadingAccessoryView()();
    v7 = (void *)(*(uint64_t (**)(void))((*v6 & *a3) + 0x110))();
    if (v7)
    {
      v8 = v7;
      objc_msgSend(v7, sel_setAlpha_, 0.0);

    }
  }
  if ((a4 & 1) != 0)
  {
    v9 = *(uint64_t (**)(void))((*v6 & *a3) + 0xF8);
    v10 = (_QWORD *)v9();
    (*(void (**)(void))((*v6 & *v10) + 0x1D8))();

    v11 = (_QWORD *)v9();
    v12 = (void *)(*(uint64_t (**)(void))((*v6 & *v11) + 0x158))();

    if (v12)
    {
      objc_msgSend(v12, sel_setAlpha_, 0.0);

    }
  }
  v13 = (void *)objc_opt_self();
  if (one-time initialization token for shared != -1)
    swift_once();
  v14 = (*(double (**)(void))(*(_QWORD *)static Defaults.shared + 1016))();
  v15 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v17[4] = partial apply for closure #1 in closure #2 in ConversationHUDControlsStatusView.recipe.didset;
  v17[5] = v15;
  v17[0] = MEMORY[0x1E0C809B0];
  v17[1] = 1107296256;
  v17[2] = thunk for @escaping @callee_guaranteed () -> ();
  v17[3] = &block_descriptor_21_0;
  v16 = _Block_copy(v17);
  swift_release();
  objc_msgSend(v13, sel_animateWithDuration_animations_, v16, v14);
  _Block_release(v16);
}

void ConversationHUDControlsStatusView.updateLeadingAccessoryView()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  uint64_t (*v9)(id);
  id v10;
  uint64_t v11;
  id v12;

  v1 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v2 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x110))();
  if (v2)
  {
    v3 = (void *)v2;
    v4 = (void *)(*(uint64_t (**)(void))((*v1 & *v0) + 0xC8))();
    objc_msgSend(v4, sel_removeArrangedSubview_, v3);

    objc_msgSend(v3, sel_removeFromSuperview);
  }
  v5 = objc_msgSend(v0, sel_traitCollection);
  v6 = objc_msgSend(v5, sel_preferredContentSizeCategory);

  LOBYTE(v5) = UIContentSizeCategory.isAccessibilityCategory.getter();
  if ((v5 & 1) != 0)
  {
    (*(void (**)(_QWORD))((*v1 & *v0) + 0x118))(0);
  }
  else
  {
    v7 = ConversationHUDControlsStatusView.createLeadingAccessoryView()();
    if (v7)
    {
      v8 = v7;
      v9 = *(uint64_t (**)(id))((*v1 & *v0) + 0x118);
      v10 = v7;
      v11 = v9(v8);
      v12 = (id)(*(uint64_t (**)(uint64_t))((*v1 & *v0) + 0xC8))(v11);
      objc_msgSend(v12, sel_insertArrangedSubview_atIndex_, v10, 0);

    }
  }
}

void closure #1 in closure #2 in ConversationHUDControlsStatusView.recipe.didset(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  void *v8;
  void *v9;
  uint64_t (*v10)(void);
  _QWORD *v11;
  _QWORD *v12;
  void *v13;
  _QWORD *v14;
  void *v15;
  uint64_t v16;

  v2 = type metadata accessor for ConversationControlsRecipe();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v5 = (_QWORD *)MEMORY[0x1C3B752C0](a1 + 16);
  if (v5)
  {
    v6 = v5;
    v7 = (_QWORD *)MEMORY[0x1E0DEEDD8];
    v8 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v5) + 0x110))();
    if (v8)
    {
      v9 = v8;
      objc_msgSend(v8, sel_setAlpha_, 1.0);

    }
    v10 = *(uint64_t (**)(void))((*v7 & *v6) + 0xF8);
    v11 = (_QWORD *)v10();
    (*(void (**)(void))((*v7 & *v6) + 0x98))();
    (*(void (**)(char *))((*v7 & *v11) + 0xB0))(v4);

    v12 = (_QWORD *)v10();
    v13 = (void *)(*(uint64_t (**)(void))((*v7 & *v12) + 0x158))();

    if (v13)
    {
      objc_msgSend(v13, sel_setAlpha_, 1.0);

    }
    v14 = (_QWORD *)v10();
    v15 = (void *)(*(uint64_t (**)(void))((*v7 & *v14) + 0x110))();

    objc_msgSend(v15, sel_setAlpha_, 1.0);
  }
}

void ConversationHUDControlsStatusView.recipe.getter()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_25_23();
  OUTLINED_FUNCTION_32();
}

uint64_t ConversationHUDControlsStatusView.recipe.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_4_1();
  v5 = v1 + OBJC_IVAR____TtC15ConversationKit33ConversationHUDControlsStatusView_recipe;
  OUTLINED_FUNCTION_2_0();
  outlined init with copy of ConversationControlsRecipe(v5, v2);
  OUTLINED_FUNCTION_2_0();
  outlined assign with copy of ConversationControlsRecipe(a1, v5);
  swift_endAccess();
  ConversationHUDControlsStatusView.recipe.didset(v2);
  outlined destroy of ConversationControlsRecipe(a1);
  return outlined destroy of ConversationControlsRecipe(v2);
}

void (*ConversationHUDControlsStatusView.recipe.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = *(_QWORD *)(*(_QWORD *)(OUTLINED_FUNCTION_28_1() - 8) + 64);
  v3[4] = malloc(v4);
  v3[5] = malloc(v4);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_25_23();
  return ConversationHUDControlsStatusView.recipe.modify;
}

void ConversationHUDControlsStatusView.recipe.modify(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  void *v4;

  v2 = *(void **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 32);
  v4 = *(void **)(*(_QWORD *)a1 + 40);
  if ((a2 & 1) != 0)
  {
    outlined init with copy of ConversationControlsRecipe((uint64_t)v4, (uint64_t)v3);
    ConversationHUDControlsStatusView.recipe.setter((uint64_t)v3);
    outlined destroy of ConversationControlsRecipe((uint64_t)v4);
  }
  else
  {
    ConversationHUDControlsStatusView.recipe.setter((uint64_t)v4);
  }
  free(v4);
  free(v3);
  free(v2);
}

id ConversationHUDControlsStatusView.controlsManager.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC15ConversationKit33ConversationHUDControlsStatusView_controlsManager);
}

uint64_t ConversationHUDControlsStatusView.context.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC15ConversationKit33ConversationHUDControlsStatusView_context);
}

void ConversationHUDControlsStatusView.conversationStatusHStack.getter()
{
  CallControlsViewController.menuViewController.getter(&OBJC_IVAR____TtC15ConversationKit33ConversationHUDControlsStatusView____lazy_storage___conversationStatusHStack, (uint64_t (*)(uint64_t))closure #1 in ConversationHUDControlsStatusView.conversationStatusHStack.getter);
}

id closure #1 in ConversationHUDControlsStatusView.conversationStatusHStack.getter(_QWORD *a1)
{
  id v2;
  id v3;
  char v4;
  id v5;
  uint64_t v6;
  id v7;
  _QWORD *v8;
  void *v9;
  void *v10;
  void *v11;
  double v13[50];

  v2 = objc_msgSend(a1, sel_traitCollection);
  v3 = objc_msgSend(v2, sel_preferredContentSizeCategory);

  v4 = UIContentSizeCategory.isAccessibilityCategory.getter();
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3CA8]), sel_init);
  objc_msgSend(v5, sel_setAxis_, v4 & 1);
  if ((v4 & 1) != 0)
    v6 = 1;
  else
    v6 = 3;
  objc_msgSend(v5, sel_setAlignment_, v6);
  static Layout.ConversationControls.values.getter((uint64_t)v13);
  v7 = objc_msgSend(v5, sel_setSpacing_, v13[15]);
  v8 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  if ((v4 & 1) == 0)
  {
    v7 = (id)(*(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x110))(v7);
    if (v7)
    {
      v9 = v7;
      objc_msgSend(v5, sel_addArrangedSubview_, v7);

    }
  }
  v10 = (void *)(*(uint64_t (**)(id))((*v8 & *a1) + 0xF8))(v7);
  objc_msgSend(v5, sel_addArrangedSubview_, v10);

  v11 = v5;
  if (((*(uint64_t (**)(void))((*v8 & *a1) + 0x130))() & 1) == 0)
  {
    v11 = (void *)(*(uint64_t (**)(void))((*v8 & *a1) + 0xE0))();
    objc_msgSend(v5, sel_addArrangedSubview_, v11);

  }
  return v5;
}

void ConversationHUDControlsStatusView.conversationStatusHStack.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_4_3(a1, OBJC_IVAR____TtC15ConversationKit33ConversationHUDControlsStatusView____lazy_storage___conversationStatusHStack);
}

void ConversationHUDControlsStatusView.conversationStatusHStack.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  a1[1] = v1;
  ConversationHUDControlsStatusView.conversationStatusHStack.getter();
  *a1 = v3;
  OUTLINED_FUNCTION_0();
}

void ConversationHUDControlsStatusView.conversationStatusHStack.modify(void **a1, char a2)
{
  CallRecordingPillViewController.countdownView.modify(a1, a2, (void (*)(void))ConversationHUDControlsStatusView.conversationStatusHStack.setter);
}

void ConversationHUDControlsStatusView.trailingActionsView.getter()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  char *v7;
  void *v8;
  uint64_t v9;
  char v10;
  id v11;
  void *v12;
  id v13;
  id v14;

  v2 = v0;
  OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_4_1();
  v4 = OBJC_IVAR____TtC15ConversationKit33ConversationHUDControlsStatusView____lazy_storage___trailingActionsView;
  v5 = *(void **)((char *)v0
                + OBJC_IVAR____TtC15ConversationKit33ConversationHUDControlsStatusView____lazy_storage___trailingActionsView);
  if (!v5)
  {
    (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
    v6 = *(void **)((char *)v0 + OBJC_IVAR____TtC15ConversationKit33ConversationHUDControlsStatusView_controlsManager);
    v7 = (char *)v0 + OBJC_IVAR____TtC15ConversationKit33ConversationHUDControlsStatusView_menuHostViewController;
    v8 = (void *)MEMORY[0x1C3B752C0]((char *)v2+ OBJC_IVAR____TtC15ConversationKit33ConversationHUDControlsStatusView_menuHostViewController);
    v9 = *((_QWORD *)v7 + 1);
    v10 = *((_BYTE *)v2 + OBJC_IVAR____TtC15ConversationKit33ConversationHUDControlsStatusView_context);
    objc_allocWithZone((Class)type metadata accessor for ConversationControlsTrailingActionsView());
    v11 = ConversationControlsTrailingActionsView.init(recipe:controlsManager:menuHostViewController:context:)(v1, v6, v8, v9, v10);
    objc_msgSend(v11, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v12 = *(void **)((char *)v2 + v4);
    *(_QWORD *)((char *)v2 + v4) = v11;
    v13 = v11;

    v5 = 0;
  }
  v14 = v5;
  OUTLINED_FUNCTION_65_1();
}

void ConversationHUDControlsStatusView.trailingActionsView.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_4_3(a1, OBJC_IVAR____TtC15ConversationKit33ConversationHUDControlsStatusView____lazy_storage___trailingActionsView);
}

void ConversationHUDControlsStatusView.trailingActionsView.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  a1[1] = v1;
  ConversationHUDControlsStatusView.trailingActionsView.getter();
  *a1 = v3;
  OUTLINED_FUNCTION_0();
}

void ConversationHUDControlsStatusView.trailingActionsView.modify(void **a1, char a2)
{
  CallRecordingPillViewController.countdownView.modify(a1, a2, (void (*)(void))ConversationHUDControlsStatusView.trailingActionsView.setter);
}

void ConversationHUDControlsStatusView.conversationDetailsView.getter()
{
  CallControlsViewController.menuViewController.getter(&OBJC_IVAR____TtC15ConversationKit33ConversationHUDControlsStatusView____lazy_storage___conversationDetailsView, (uint64_t (*)(uint64_t))closure #1 in ConversationHUDControlsStatusView.conversationDetailsView.getter);
}

void ConversationHUDControlsStatusView.conversationDetailsView.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_4_3(a1, OBJC_IVAR____TtC15ConversationKit33ConversationHUDControlsStatusView____lazy_storage___conversationDetailsView);
}

uint64_t key path setter for ConversationHUDControlsStatusView.conversationDetailsView : ConversationHUDControlsStatusView(id *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x100))(*a1);
}

void *closure #1 in ConversationHUDControlsStatusView.conversationDetailsView.getter(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  uint64_t v12;

  v2 = type metadata accessor for ConversationControlsRecipe();
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x98))(v3);
  v6 = *((_BYTE *)a1 + OBJC_IVAR____TtC15ConversationKit33ConversationHUDControlsStatusView_presentationStyle);
  v7 = *(void **)((char *)a1 + OBJC_IVAR____TtC15ConversationKit33ConversationHUDControlsStatusView_controlsManager);
  v8 = objc_allocWithZone((Class)type metadata accessor for ConversationDetailsView());
  ConversationDetailsView.init(recipe:presentationStyle:controlsManager:)((uint64_t)v5, v6, v7);
  v10 = v9;
  objc_msgSend(v9, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  return v10;
}

void ConversationHUDControlsStatusView.conversationDetailsView.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  a1[1] = v1;
  ConversationHUDControlsStatusView.conversationDetailsView.getter();
  *a1 = v3;
  OUTLINED_FUNCTION_0();
}

void ConversationHUDControlsStatusView.conversationDetailsView.modify(void **a1, char a2)
{
  CallRecordingPillViewController.countdownView.modify(a1, a2, (void (*)(void))ConversationHUDControlsStatusView.conversationDetailsView.setter);
}

uint64_t key path setter for ConversationHUDControlsStatusView.leadingAccessoryView : ConversationHUDControlsStatusView(id *a1, _QWORD **a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x118);
  v4 = *a1;
  return v3(v2);
}

void *ConversationHUDControlsStatusView.leadingAccessoryView.getter()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;

  v1 = (void **)(v0 + OBJC_IVAR____TtC15ConversationKit33ConversationHUDControlsStatusView_leadingAccessoryView);
  OUTLINED_FUNCTION_2_0();
  v2 = *v1;
  v3 = v2;
  return v2;
}

void ConversationHUDControlsStatusView.leadingAccessoryView.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;

  v3 = (void **)(v1 + OBJC_IVAR____TtC15ConversationKit33ConversationHUDControlsStatusView_leadingAccessoryView);
  OUTLINED_FUNCTION_2_0();
  v4 = *v3;
  *v3 = a1;

  OUTLINED_FUNCTION_32();
}

void ConversationHUDControlsStatusView.leadingAccessoryView.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

double ConversationHUDControlsStatusView.conversationStatusHStackLeadingPadding.getter()
{
  uint64_t *v0;
  void *v1;
  double result;
  _BYTE v3[104];
  double v4;

  v1 = (void *)OUTLINED_FUNCTION_37_2(*v0);

  result = 0.0;
  if (!v1)
  {
    static Layout.ConversationControls.values.getter((uint64_t)v3);
    return v4;
  }
  return result;
}

uint64_t ConversationHUDControlsStatusView.needsExplicitLayoutForInfoButton.getter()
{
  uint64_t *v0;
  _QWORD *v1;
  _QWORD *v2;

  v1 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v2 = (_QWORD *)OUTLINED_FUNCTION_18_16(*v0);
  LOBYTE(v1) = (*(uint64_t (**)(void))((*v1 & *v2) + 0xD0))();

  return v1 & 1;
}

id ConversationHUDControlsStatusView.init(recipe:controlsManager:menuHostViewController:context:presentationStyle:)(uint64_t a1, void *a2, void *a3, uint64_t a4, char a5, char a6)
{
  _BYTE *v6;
  char v12;
  char *v13;
  id v14;
  id v15;
  objc_super v17;

  v12 = a6 & 1;
  v13 = &v6[OBJC_IVAR____TtC15ConversationKit33ConversationHUDControlsStatusView_menuHostViewController];
  *(_QWORD *)&v6[OBJC_IVAR____TtC15ConversationKit33ConversationHUDControlsStatusView_menuHostViewController + 8] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v6[OBJC_IVAR____TtC15ConversationKit33ConversationHUDControlsStatusView____lazy_storage___conversationStatusHStack] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15ConversationKit33ConversationHUDControlsStatusView____lazy_storage___trailingActionsView] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15ConversationKit33ConversationHUDControlsStatusView____lazy_storage___conversationDetailsView] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15ConversationKit33ConversationHUDControlsStatusView_leadingAccessoryView] = 0;
  outlined init with copy of ConversationControlsRecipe(a1, (uint64_t)&v6[OBJC_IVAR____TtC15ConversationKit33ConversationHUDControlsStatusView_recipe]);
  *(_QWORD *)&v6[OBJC_IVAR____TtC15ConversationKit33ConversationHUDControlsStatusView_controlsManager] = a2;
  v6[OBJC_IVAR____TtC15ConversationKit33ConversationHUDControlsStatusView_context] = a5;
  *((_QWORD *)v13 + 1) = a4;
  swift_unknownObjectWeakAssign();
  v6[OBJC_IVAR____TtC15ConversationKit33ConversationHUDControlsStatusView_presentationStyle] = v12;
  v17.receiver = v6;
  v17.super_class = (Class)ObjC metadata update function for ConversationHUDControlsStatusView();
  v14 = a2;
  v15 = objc_msgSendSuper2(&v17, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v15, sel_setupRootView, v17.receiver, v17.super_class);

  outlined destroy of ConversationControlsRecipe(a1);
  return v15;
}

id ConversationHUDControlsStatusView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void ConversationHUDControlsStatusView.init(coder:)()
{
  char *v0;

  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit33ConversationHUDControlsStatusView_menuHostViewController + 8] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit33ConversationHUDControlsStatusView____lazy_storage___conversationStatusHStack] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit33ConversationHUDControlsStatusView____lazy_storage___trailingActionsView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit33ConversationHUDControlsStatusView____lazy_storage___conversationDetailsView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit33ConversationHUDControlsStatusView_leadingAccessoryView] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

Swift::Void __swiftcall ConversationHUDControlsStatusView.traitCollectionDidChange(_:)(UITraitCollection_optional a1)
{
  _QWORD *v1;
  Class isa;
  objc_class *v3;
  id v4;
  id v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  id v14;
  id v15;
  uint64_t (*v16)(void);
  void *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  objc_super v21;

  isa = a1.value.super.isa;
  v21.receiver = v1;
  v21.super_class = (Class)ObjC metadata update function for ConversationHUDControlsStatusView();
  objc_msgSendSuper2(&v21, sel_traitCollectionDidChange_, isa);
  if (isa)
  {
    v3 = isa;
    v4 = OUTLINED_FUNCTION_22_26();
    v5 = objc_msgSend(v4, sel_preferredContentSizeCategory);

    v7 = OUTLINED_FUNCTION_123(v6, sel_preferredContentSizeCategory);
    v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v10 = v9;
    if (v8 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v10 == v11)
    {

      swift_bridgeObjectRelease_n();
    }
    else
    {
      v13 = _stringCompareWithSmolCheck(_:_:expecting:)();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v13 & 1) == 0)
      {
        v14 = OUTLINED_FUNCTION_22_26();
        v15 = objc_msgSend(v14, sel_preferredContentSizeCategory);

        LOBYTE(v14) = UIContentSizeCategory.isAccessibilityCategory.getter();
        v16 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v1) + 0xC8);
        v17 = (void *)v16();
        objc_msgSend(v17, sel_setAxis_, v14 & 1);

        v18 = (void *)v16();
        v19 = v18;
        if ((v14 & 1) != 0)
          v20 = 1;
        else
          v20 = 3;
        objc_msgSend(v18, sel_setAlignment_, v20);

        ConversationHUDControlsStatusView.updateLeadingAccessoryView()();
      }
    }

  }
}

id ConversationHUDControlsStatusView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

void ConversationHUDControlsStatusView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id ConversationHUDControlsStatusView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)ObjC metadata update function for ConversationHUDControlsStatusView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void ConversationHUDControlsStatusView.setupRootView()()
{
  _QWORD *v0;
  _QWORD *v1;
  id v2;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  _QWORD *v7;

  v1 = v0;
  objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3B18]), sel_initWithDelegate_, v0);
  objc_msgSend(v0, sel_addInteraction_);
  v2 = ConversationHUDControlsStatusView.createLeadingAccessoryView()();
  v3 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v4 = (*(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x118))(v2);
  v5 = (void *)(*(uint64_t (**)(uint64_t))((*v3 & *v0) + 0xC8))(v4);
  objc_msgSend(v1, sel_addSubview_, v5);

  if (((*(uint64_t (**)(void))((*v3 & *v1) + 0x130))() & 1) != 0)
  {
    v6 = (void *)(*(uint64_t (**)(void))((*v3 & *v1) + 0xE0))();
    objc_msgSend(v1, sel_addSubview_, v6);

  }
  v7 = (_QWORD *)(*(uint64_t (**)(void))((*v3 & *v1) + 0xF8))();
  (*(void (**)(void))((*v3 & *v7) + 0x1D8))();

  ConversationHUDControlsStatusView.setupLayoutConstraints()();
}

void sub_1BD0BA114()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  void *v3;

  if (*((_BYTE *)v0 + OBJC_IVAR____TtC15ConversationKit33ConversationHUDControlsStatusView_presentationStyle) == 1)
  {
    v2 = (void *)(*(uint64_t (**)(void))((*v1 & *v0) + 0xE0))();
    objc_msgSend(v2, sel_setHidden_, 1);

  }
}

id ConversationHUDControlsStatusView.createLeadingAccessoryView()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  id *v8;
  void (*v9)(void);
  id v10;
  char v11;
  double v12;
  double *v13;
  uint64_t v14;
  _QWORD *v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  void (*v20)(void);
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  double v24;
  void *v25;
  uint64_t v26;
  id v27;
  id v28;
  id v29;
  id v30;
  Class isa;
  int8x16_t v32;
  id v33;
  id v34;
  _QWORD v36[2];
  void (*v37)(void);
  uint64_t v38;
  int8x16_t v39;
  int8x16_t v40;
  char v41;
  _QWORD v42[6];
  uint64_t v43[19];
  uint64_t v44;
  uint64_t v45;

  v1 = type metadata accessor for ConversationControlsRecipe();
  v2 = MEMORY[0x1E0C80A78](v1);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v36 - v4;
  v6 = MEMORY[0x1E0C80A78](v3);
  v8 = (id *)((char *)v36 - v7);
  v9 = *(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98);
  ((void (*)(uint64_t))v9)(v6);
  if (v8[7])
  {
    v10 = v8[7];
    outlined destroy of ConversationControlsRecipe((uint64_t)v8);
    v11 = *((_BYTE *)v0 + OBJC_IVAR____TtC15ConversationKit33ConversationHUDControlsStatusView_presentationStyle);
    v37 = v9;
    if ((v11 & 1) != 0)
    {
      v12 = static Layout.ConversationControls.values.getter((uint64_t)v43);
      v13 = (double *)&v45;
    }
    else
    {
      v12 = static Layout.ConversationControls.values.getter((uint64_t)v43);
      v13 = (double *)&v44;
    }
    v24 = *v13;
    objc_msgSend(v10, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0, v12);
    v25 = (void *)objc_opt_self();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = xmmword_1BD6441C0;
    v27 = objc_msgSend(v10, sel_heightAnchor);
    v28 = objc_msgSend(v27, sel_constraintEqualToConstant_, v24);

    *(_QWORD *)(v26 + 32) = v28;
    v29 = objc_msgSend(v10, sel_widthAnchor);
    v30 = objc_msgSend(v29, sel_constraintEqualToConstant_, v24);

    *(_QWORD *)(v26 + 40) = v30;
    v42[0] = v26;
    specialized Array._endMutation()();
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    objc_msgSend(v25, sel_activateConstraints_, isa);

    v37();
    outlined init with copy of ConversationControlsType((uint64_t)v5, (uint64_t)v42);
    outlined destroy of ConversationControlsRecipe((uint64_t)v5);
    outlined init with copy of ConversationControlsType((uint64_t)v42, (uint64_t)&v38);
    if (v41 == 6
      && v38 == 13
      && (v32 = vorrq_s8(v39, v40),
          !*(_QWORD *)&vorr_s8(*(int8x8_t *)v32.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v32, v32, 8uLL))))
    {
      outlined destroy of ConversationControlsType((uint64_t)v42);
      v33 = objc_msgSend(v10, sel_layer);
      objc_msgSend(v33, sel_setCornerRadius_, v24 * 0.5);

      v34 = objc_msgSend(v10, sel_layer);
      objc_msgSend(v34, sel_setMasksToBounds_, 1);

    }
    else
    {
      outlined destroy of ConversationControlsType((uint64_t)&v38);
      outlined destroy of ConversationControlsType((uint64_t)v42);
    }
  }
  else
  {
    outlined destroy of ConversationControlsRecipe((uint64_t)v8);
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v14 = type metadata accessor for Logger();
    __swift_project_value_buffer(v14, (uint64_t)&static Logger.conversationControls);
    v15 = v0;
    v16 = Logger.logObject.getter();
    v17 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      v19 = swift_slowAlloc();
      v20 = v9;
      v21 = v19;
      v43[0] = v19;
      *(_DWORD *)v18 = 136315138;
      v36[1] = v18 + 4;
      v20();
      v22 = String.init<A>(describing:)();
      v42[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v22, v23, v43);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BD004000, v16, v17, "Unable to obtain leadingAccessoryView for recipe: %s", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v21, -1, -1);
      MEMORY[0x1C3B751B8](v18, -1, -1);

    }
    else
    {

    }
    return 0;
  }
  return v10;
}

Swift::Void __swiftcall ConversationHUDControlsStatusView.setupLayoutConstraints()()
{
  _QWORD *v0;
  void *v1;
  unint64_t v2;
  uint64_t (*v3)(void);
  void *v4;
  id v5;
  uint64_t v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  id v21;

  v2 = MEMORY[0x1E0DEE9D8];
  v3 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8);
  v4 = (void *)v3();
  objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  v5 = objc_msgSend((id)OUTLINED_FUNCTION_21_9(), sel_topAnchor);
  OUTLINED_FUNCTION_18_14();
  v7 = OUTLINED_FUNCTION_123(v6, sel_topAnchor);
  v8 = OUTLINED_FUNCTION_48_1(v1, sel_constraintEqualToAnchor_);

  v9 = (void *)OUTLINED_FUNCTION_21_9();
  v10 = objc_msgSend(v9, sel_leadingAnchor);

  v12 = OUTLINED_FUNCTION_123(v11, sel_leadingAnchor);
  OUTLINED_FUNCTION_17_24();
  (*(void (**)(void))(v13 + 296))();
  v14 = objc_msgSend(v10, sel_constraintEqualToAnchor_constant_, v12);

  v15 = (void *)v3();
  v16 = objc_msgSend(v15, sel_bottomAnchor);

  v18 = OUTLINED_FUNCTION_123(v17, sel_bottomAnchor);
  v19 = OUTLINED_FUNCTION_48_1(v16, sel_constraintEqualToAnchor_);

  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    v20 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    v20 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (!__OFADD__(v20, 3))
  {
    OUTLINED_FUNCTION_28_5(v20 + 3);
    OUTLINED_FUNCTION_3_12();
    v21 = v8;
    OUTLINED_FUNCTION_5_33();
  }
  __break(1u);
  JUMPOUT(0x1BD0BAB78);
}

UIPointerRegion_optional __swiftcall ConversationHUDControlsStatusView.pointerInteraction(_:regionFor:defaultRegion:)(UIPointerInteraction _, UIPointerRegionRequest regionFor, UIPointerRegion defaultRegion)
{
  id v3;
  Swift::Bool v4;
  void *v5;
  uint64_t v6;
  objc_class *v7;
  UIPointerRegion_optional result;

  v3 = -[objc_class view](_.super.isa, sel_view, defaultRegion.super.isa);
  if (v3)
  {
    v5 = v3;
    OUTLINED_FUNCTION_59((uint64_t)v3, (unint64_t *)&lazy cache variable for type metadata for UIPointerRegion);
    objc_msgSend(v5, sel_bounds);
    v6 = UIPointerRegion.init(rect:identifier:)();

  }
  else
  {
    v6 = 0;
  }
  v7 = (objc_class *)v6;
  result.value.super.isa = v7;
  result.is_nil = v4;
  return result;
}

UIPointerStyle_optional __swiftcall ConversationHUDControlsStatusView.pointerInteraction(_:styleFor:)(UIPointerInteraction _, UIPointerRegion styleFor)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  Swift::Bool v9;
  uint64_t v10;
  Class *v11;
  uint64_t v12;
  id v13;
  void *v14;
  double v15;
  id v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  id v25;
  uint64_t v26;
  UIView *v27;
  Class isa;
  uint64_t v29;
  int *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  objc_class *v37;
  objc_class *v38;
  uint64_t v39;
  UIPreviewParameters v40;
  UIView *v41;
  _QWORD v42[50];
  uint64_t v43;
  UIPointerStyle_optional result;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UIPointerShape?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_4_1();
  v6 = type metadata accessor for UIPointerEffect();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v11 = (Class *)((char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = 0;
  if (*(_BYTE *)(v2 + OBJC_IVAR____TtC15ConversationKit33ConversationHUDControlsStatusView_context) != 2)
  {
    if (((*(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & **(_QWORD **)(v2
                                                                                   + OBJC_IVAR____TtC15ConversationKit33ConversationHUDControlsStatusView_controlsManager))
                                             + 0x320))(v8) & 1) != 0
      || (v13 = -[objc_class view](_.super.isa, sel_view)) == 0)
    {
      v12 = 0;
    }
    else
    {
      v14 = v13;
      static Layout.ConversationControls.values.getter((uint64_t)v42);
      v15 = *(double *)&v42[13];
      static Layout.ConversationControls.values.getter((uint64_t)&v43);
      v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3B78]), sel_init);
      objc_msgSend(v14, sel_bounds);
      v21 = UIEdgeInsetsInsetRect(v17, v18, v19, v20, -v15, -v15);
      v25 = objc_msgSend((id)objc_opt_self(), sel_bezierPathWithRect_, v21, v22, v23, v24);
      objc_msgSend(v16, sel_setVisiblePath_, v25);

      OUTLINED_FUNCTION_59(v26, &lazy cache variable for type metadata for UITargetedPreview);
      v27 = v14;
      v41 = v27;
      v40.super.isa = (Class)v16;
      isa = UITargetedPreview.__allocating_init(view:parameters:)(v27, v40).super.isa;
      OUTLINED_FUNCTION_59((uint64_t)isa, (unint64_t *)&lazy cache variable for type metadata for UIPointerStyle);
      v39 = v29;
      v30 = (int *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (UITargetedPreview, preferredTintMode: UIPointerEffect.TintMode, prefersShadow: Bool, prefersScaledContent: Bool));
      v31 = (char *)v11 + v30[12];
      v32 = v30[16];
      v33 = v30[20];
      *v11 = isa;
      v34 = *MEMORY[0x1E0DC1E48];
      v35 = type metadata accessor for UIPointerEffect.TintMode();
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 104))(v31, v34, v35);
      *((_BYTE *)v11 + v32) = 0;
      *((_BYTE *)v11 + v33) = 0;
      (*(void (**)(Class *, _QWORD, uint64_t))(v7 + 104))(v11, *MEMORY[0x1E0DC1E38], v6);
      v36 = type metadata accessor for UIPointerShape();
      __swift_storeEnumTagSinglePayload(v3, 1, 1, v36);
      v37 = isa;
      v12 = UIPointerStyle.init(effect:shape:)();

    }
  }
  v38 = (objc_class *)v12;
  result.value.super.super.isa = v38;
  result.is_nil = v9;
  return result;
}

UITargetedPreview __swiftcall UITargetedPreview.__allocating_init(view:parameters:)(UIView *view, UIPreviewParameters parameters)
{
  UITargetedPreview result;

  objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithView_parameters_, view, parameters.super.isa);

  OUTLINED_FUNCTION_18();
  return result;
}

uint64_t type metadata accessor for ConversationHUDControlsStatusView()
{
  uint64_t result;

  result = type metadata singleton initialization cache for ConversationHUDControlsStatusView;
  if (!type metadata singleton initialization cache for ConversationHUDControlsStatusView)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t lazy protocol witness table accessor for type StatusViewPresentationStyle and conformance StatusViewPresentationStyle()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type StatusViewPresentationStyle and conformance StatusViewPresentationStyle;
  if (!lazy protocol witness table cache variable for type StatusViewPresentationStyle and conformance StatusViewPresentationStyle)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for StatusViewPresentationStyle, &type metadata for StatusViewPresentationStyle);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StatusViewPresentationStyle and conformance StatusViewPresentationStyle);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type [StatusViewPresentationStyle] and conformance [A]()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type [StatusViewPresentationStyle] and conformance [A];
  if (!lazy protocol witness table cache variable for type [StatusViewPresentationStyle] and conformance [A])
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [StatusViewPresentationStyle]);
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type [StatusViewPresentationStyle] and conformance [A]);
  }
  return result;
}

void sub_1BD0BB190(_QWORD **a1)
{
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x98))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD0BB1C8()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0xC8))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD0BB200()
{
  uint64_t *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = OUTLINED_FUNCTION_18_16(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD0BB230()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0xF8))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD0BB268()
{
  uint64_t *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = OUTLINED_FUNCTION_37_2(v1);
  OUTLINED_FUNCTION_0();
}

uint64_t storeEnumTagSinglePayload for StatusViewPresentationStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BD0BB2E4 + 4 * byte_1BD647C55[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BD0BB318 + 4 * byte_1BD647C50[v4]))();
}

uint64_t sub_1BD0BB318(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD0BB320(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD0BB328);
  return result;
}

uint64_t sub_1BD0BB334(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD0BB33CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BD0BB340(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD0BB348(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StatusViewPresentationStyle()
{
  return &type metadata for StatusViewPresentationStyle;
}

uint64_t type metadata completion function for ConversationHUDControlsStatusView()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ConversationControlsRecipe();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for ConversationHUDControlsStatusView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ConversationHUDControlsStatusView.recipe.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of ConversationHUDControlsStatusView.recipe.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of ConversationHUDControlsStatusView.recipe.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of ConversationHUDControlsStatusView.conversationStatusHStack.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of ConversationHUDControlsStatusView.conversationStatusHStack.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of ConversationHUDControlsStatusView.conversationStatusHStack.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of ConversationHUDControlsStatusView.trailingActionsView.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of ConversationHUDControlsStatusView.trailingActionsView.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of ConversationHUDControlsStatusView.trailingActionsView.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of ConversationHUDControlsStatusView.conversationDetailsView.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of ConversationHUDControlsStatusView.conversationDetailsView.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of ConversationHUDControlsStatusView.conversationDetailsView.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x108))();
}

uint64_t dispatch thunk of ConversationHUDControlsStatusView.leadingAccessoryView.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x110))();
}

uint64_t dispatch thunk of ConversationHUDControlsStatusView.leadingAccessoryView.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x118))();
}

uint64_t dispatch thunk of ConversationHUDControlsStatusView.leadingAccessoryView.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x120))();
}

uint64_t dispatch thunk of ConversationHUDControlsStatusView.conversationStatusHStackLeadingPadding.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x128))();
}

uint64_t dispatch thunk of ConversationHUDControlsStatusView.needsExplicitLayoutForInfoButton.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x130))();
}

uint64_t dispatch thunk of ConversationHUDControlsStatusView.__allocating_init(recipe:controlsManager:menuHostViewController:context:presentationStyle:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(v6 + 312))(a1, a2, a3, a4, a5, a6 & 1);
}

uint64_t sub_1BD0BB600()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BD0BB624()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id *v8;
  uint64_t v9;
  uint64_t v10;
  id *v11;

  v1 = (int *)OUTLINED_FUNCTION_28_1();
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  v3 = (v2 + 26) & ~v2;
  swift_release();
  v4 = v0 + v3;
  switch(*(_BYTE *)(v0 + v3 + 40))
  {
    case 0:
      __swift_destroy_boxed_opaque_existential_1(v0 + v3);
      break;
    case 1:
    case 3:
      swift_bridgeObjectRelease();
      break;
    case 2:

      break;
    case 5:
      swift_unknownObjectRelease();
      break;
    default:
      break;
  }

  v5 = *(void **)(v4 + 56);
  if (v5)
  {

  }
  swift_bridgeObjectRelease();
  v6 = v4 + v1[9];
  v7 = type metadata accessor for AttributedString();
  if (!__swift_getEnumTagSinglePayload(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = (id *)(v4 + v1[10]);
  if (*v8)
  {

  }
  v9 = v4 + v1[15];
  if (*(unsigned __int8 *)(v9 + 40) <= 0xFDu)
    outlined consume of ConversationControlsRecipe.Actions(*(_QWORD *)v9, *(_QWORD *)(v9 + 8), *(_QWORD *)(v9 + 16), *(_QWORD *)(v9 + 24), *(_QWORD *)(v9 + 32));
  v10 = v4 + v1[17];
  if (*(unsigned __int8 *)(v10 + 16) != 255)
    outlined consume of PreCallControlsContext(*(id *)v10);
  v11 = (id *)(v4 + v1[18]);
  if (*v11 != (id)1)
  {

  }
  return swift_deallocObject();
}

uint64_t outlined init with take of ConversationControlsRecipe(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ConversationControlsRecipe();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void partial apply for closure #1 in ConversationHUDControlsStatusView.recipe.didset()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(OUTLINED_FUNCTION_28_1() - 8) + 80);
  closure #1 in ConversationHUDControlsStatusView.recipe.didset(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24), *(_BYTE *)(v0 + 25), v0 + ((v1 + 26) & ~v1));
}

uint64_t sub_1BD0BB848()
{
  uint64_t v0;

  return swift_deallocObject();
}

void partial apply for closure #2 in ConversationHUDControlsStatusView.recipe.didset(uint64_t a1)
{
  uint64_t v1;

  closure #2 in ConversationHUDControlsStatusView.recipe.didset(a1, *(_BYTE *)(v1 + 16), *(_QWORD **)(v1 + 24), *(_BYTE *)(v1 + 32));
}

void partial apply for closure #1 in closure #2 in ConversationHUDControlsStatusView.recipe.didset()
{
  uint64_t v0;

  closure #1 in closure #2 in ConversationHUDControlsStatusView.recipe.didset(v0);
}

id ConversationHUDInCallBackdropView.__allocating_init(frame:)()
{
  Class v0;
  id v1;
  double v2;
  id v3;
  SEL v4;

  OUTLINED_FUNCTION_17_7();
  v1 = objc_allocWithZone(v0);
  v2 = OUTLINED_FUNCTION_15_0();
  return objc_msgSend(v3, v4, v2);
}

id ConversationHUDInCallBackdropView.init(frame:)()
{
  uint64_t v0;
  double v1;
  objc_super *v2;
  SEL v3;
  id v4;
  id v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t ObjectType;

  OUTLINED_FUNCTION_17_7();
  ObjectType = swift_getObjectType();
  v1 = OUTLINED_FUNCTION_15_0();
  v4 = objc_msgSendSuper2(v2, v3, v1, v0, ObjectType);
  v5 = objc_msgSend(v4, sel_layer);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Any>);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1BD645380;
  v7 = ConversationHUDInCallBackdropView.colorMatrixFilter.getter();
  v8 = _sSo8NSObjectCMaTm_0(0, &lazy cache variable for type metadata for CAFilter);
  *(_QWORD *)(v6 + 56) = v8;
  *(_QWORD *)(v6 + 32) = v7;
  v9 = ConversationHUDInCallBackdropView.gaussianBlurFilter.getter();
  *(_QWORD *)(v6 + 88) = v8;
  *(_QWORD *)(v6 + 64) = v9;
  outlined bridged method (mbnn) of @objc CALayer.filters.setter(v6, v5);

  return v4;
}

void *ConversationHUDInCallBackdropView.colorMatrixFilter.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  void *v5;
  _OWORD v7[5];

  _sSo8NSObjectCMaTm_0(0, &lazy cache variable for type metadata for CAFilter);
  v0 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  CAFilter.__allocating_init(type:)(v0, v1);
  v3 = v2;
  v7[0] = xmmword_1BD647DE0;
  v7[1] = xmmword_1BD647DF0;
  v7[2] = xmmword_1BD647E00;
  v7[3] = xmmword_1BD647E10;
  v7[4] = xmmword_1BD647E20;
  v4 = objc_msgSend((id)objc_opt_self(), sel_valueWithCAColorMatrix_, v7);
  v5 = (void *)MEMORY[0x1C3B72E00](0xD000000000000010, 0x80000001BD6717A0);
  objc_msgSend(v3, sel_setValue_forKey_, v4, v5);

  return v3;
}

void *ConversationHUDInCallBackdropView.gaussianBlurFilter.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  Class isa;
  void *v5;
  Class v6;
  void *v7;

  _sSo8NSObjectCMaTm_0(0, &lazy cache variable for type metadata for CAFilter);
  v0 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  CAFilter.__allocating_init(type:)(v0, v1);
  v3 = v2;
  isa = Bool._bridgeToObjectiveC()().super.super.isa;
  v5 = (void *)MEMORY[0x1C3B72E00](0xD000000000000013, 0x80000001BD671780);
  objc_msgSend(v3, sel_setValue_forKey_, isa, v5);

  v6 = CGFloat._bridgeToObjectiveC()().super.super.isa;
  v7 = (void *)MEMORY[0x1C3B72E00](0x6461527475706E69, 0xEB00000000737569);
  objc_msgSend(v3, sel_setValue_forKey_, v6, v7);

  return v3;
}

id ConversationHUDInCallBackdropView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void ConversationHUDInCallBackdropView.init(coder:)()
{
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t static ConversationHUDInCallBackdropView.layerClass.getter()
{
  return _sSo8NSObjectCMaTm_0(0, &lazy cache variable for type metadata for CABackdropLayer);
}

id ConversationHUDInCallBackdropView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void ConversationHUDInCallBackdropView.setCaptureGroup(_:)(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  id v6;

  v4 = (void *)ConversationHUDInCallBackdropView.backdropLayer.getter();
  if (a2)
    v5 = MEMORY[0x1C3B72E00](a1, a2);
  else
    v5 = 0;
  v6 = (id)v5;
  objc_msgSend(v4, sel_setGroupName_);

}

uint64_t ConversationHUDInCallBackdropView.backdropLayer.getter()
{
  void *v0;
  id v1;
  uint64_t result;

  v1 = objc_msgSend(v0, sel_layer);
  objc_opt_self();
  result = swift_dynamicCastObjCClass();
  if (!result)
  {

    result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

void outlined bridged method (mbnn) of @objc CALayer.filters.setter(uint64_t a1, void *a2)
{
  Class isa;

  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(a2, sel_setFilters_, isa);

}

uint64_t type metadata accessor for ConversationHUDInCallBackdropView()
{
  return objc_opt_self();
}

id InCallControlsAddParticipantCell.__allocating_init(frame:)()
{
  Class v0;
  id v1;
  double v2;
  id v3;
  SEL v4;

  OUTLINED_FUNCTION_17_7();
  v1 = objc_allocWithZone(v0);
  v2 = OUTLINED_FUNCTION_15_0();
  return objc_msgSend(v3, v4, v2);
}

char *InCallControlsAddParticipantCell.init(frame:)()
{
  uint64_t v0;
  double v1;
  objc_super *v2;
  SEL v3;
  char *v4;
  _QWORD *v5;
  void (*v6)(_BYTE *);
  _QWORD *v7;
  _BYTE v9[24];
  ValueMetadata *v10;
  _UNKNOWN **v11;
  uint64_t v12;
  uint64_t ObjectType;

  OUTLINED_FUNCTION_17_7();
  v12 = v0;
  ObjectType = swift_getObjectType();
  v1 = OUTLINED_FUNCTION_15_0();
  v4 = (char *)objc_msgSendSuper2(v2, v3, v1);
  v5 = *(_QWORD **)&v4[OBJC_IVAR____TtC15ConversationKit22InCallControlsBaseCell_button];
  v10 = &type metadata for SymbolImageDescribers.DrawerTable;
  v11 = &protocol witness table for SymbolImageDescribers.DrawerTable;
  v9[0] = 1;
  v6 = *(void (**)(_BYTE *))((*MEMORY[0x1E0DEEDD8] & *v5) + 0x1D0);
  v7 = v5;
  v6(v9);

  outlined destroy of SymbolImageDescribing?((uint64_t)v9);
  return v4;
}

id InCallControlsAddParticipantCell.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void InCallControlsAddParticipantCell.init(coder:)()
{
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

id InCallControlsAddParticipantCell.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for InCallControlsAddParticipantCell()
{
  return objc_opt_self();
}

uint64_t specialized NoticeQueueStore.count.getter(uint64_t a1)
{
  return *(_QWORD *)(a1 + 16);
}

void specialized NoticeQueueStore.peek()(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v3 = v1;
  v5 = *v1;
  v6 = MEMORY[0x1E0DEE9D8];
  v7 = OUTLINED_FUNCTION_5_34();
  if (v2)
  {
    v19 = a1;
    v13 = 0;
    v14 = v5 + 32;
    v15 = MEMORY[0x1E0DEE9D8];
    while (v13 < *(_QWORD *)(v5 + 16))
    {
      OUTLINED_FUNCTION_6_30(v7, v8, v9, v10, v11, v12);
      v16 = v22;
      v17 = v23;
      __swift_project_boxed_opaque_existential_1(&v21, v22);
      if ((OUTLINED_FUNCTION_2_50() & 1) != 0)
      {
        v7 = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v21);
      }
      else
      {
        outlined init with take of Notice(&v21, (uint64_t)&v20);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          OUTLINED_FUNCTION_1_38();
        OUTLINED_FUNCTION_8_36();
        if (v18)
        {
          OUTLINED_FUNCTION_4_34();
          v15 = v24;
        }
        *(_QWORD *)(v15 + 16) = v16;
        v7 = OUTLINED_FUNCTION_3_38(v15 + 40 * v17, v19, v20);
      }
      ++v13;
      v14 += 40;
      if (v2 == v13)
      {
        v6 = v24;
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *v3 = v6;
    specialized Collection.first.getter(v6);
    OUTLINED_FUNCTION_0_47();
  }
}

void specialized NoticeQueueStore.pop()(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v3 = v1;
  v5 = *v1;
  v6 = MEMORY[0x1E0DEE9D8];
  v7 = OUTLINED_FUNCTION_5_34();
  if (v2)
  {
    v20 = a1;
    v13 = 0;
    v14 = v5 + 32;
    v15 = MEMORY[0x1E0DEE9D8];
    while (v13 < *(_QWORD *)(v5 + 16))
    {
      OUTLINED_FUNCTION_6_30(v7, v8, v9, v10, v11, v12);
      v16 = v23;
      v17 = v24;
      __swift_project_boxed_opaque_existential_1(&v22, v23);
      if ((OUTLINED_FUNCTION_2_50() & 1) != 0)
      {
        v7 = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v22);
      }
      else
      {
        outlined init with take of Notice(&v22, (uint64_t)&v21);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          OUTLINED_FUNCTION_1_38();
        OUTLINED_FUNCTION_8_36();
        if (v18)
        {
          OUTLINED_FUNCTION_4_34();
          v15 = v25;
        }
        *(_QWORD *)(v15 + 16) = v16;
        v7 = OUTLINED_FUNCTION_3_38(v15 + 40 * v17, v20, v21);
      }
      ++v13;
      v14 += 40;
      if (v2 == v13)
      {
        v6 = v25;
        a1 = v20;
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *v3 = v6;
    specialized Collection.first.getter(v6);
    v19 = v23;
    outlined destroy of Notice?((uint64_t)&v22);
    if (v19)
    {
      specialized RangeReplaceableCollection.removeFirst()(a1);
    }
    else
    {
      *(_QWORD *)(a1 + 32) = 0;
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
    }
    OUTLINED_FUNCTION_0_47();
  }
}

uint64_t specialized NoticeQueueStore.flush()()
{
  _QWORD *v0;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v0 = MEMORY[0x1E0DEE9D8];
  return result;
}

uint64_t SimpleNoticeQueue.push(notice:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE v11[24];
  uint64_t v12;
  uint64_t v13;

  outlined init with copy of IDSLookupManager(a1, (uint64_t)v11);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  v2 = *(_QWORD *)(*v1 + 16);
  specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(v2);
  v3 = v12;
  v4 = v13;
  v5 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v11, v12);
  MEMORY[0x1E0C80A78](v5);
  v7 = &v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(_BYTE *))(v8 + 16))(v7);
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v2, (uint64_t)v7, v1, v3, v4);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
}

uint64_t SimpleNoticeQueue.init()()
{
  return MEMORY[0x1E0DEE9D8];
}

uint64_t protocol witness for NoticeQueue.count.getter in conformance SimpleNoticeQueue()
{
  uint64_t *v0;

  return specialized NoticeQueueStore.count.getter(*v0);
}

void protocol witness for NoticeQueue.peek() in conformance SimpleNoticeQueue(uint64_t a1@<X8>)
{
  specialized NoticeQueueStore.peek()(a1);
}

void protocol witness for NoticeQueue.pop() in conformance SimpleNoticeQueue(uint64_t a1@<X8>)
{
  specialized NoticeQueueStore.pop()(a1);
}

uint64_t CoalescingNoticeQueue.push(notice:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = a1[3];
  v3 = a1[4];
  v4 = __swift_project_boxed_opaque_existential_1(a1, v2);
  return specialized CoalescingNoticeQueue.push(notice:)((uint64_t)v4, v1, v2, v3);
}

uint64_t CoalescingNoticeQueue.init()()
{
  return MEMORY[0x1E0DEE9D8];
}

uint64_t protocol witness for NoticeQueue.push(notice:) in conformance CoalescingNoticeQueue(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = a1[3];
  v3 = a1[4];
  v4 = __swift_project_boxed_opaque_existential_1(a1, v2);
  return specialized CoalescingNoticeQueue.push(notice:)((uint64_t)v4, v1, v2, v3);
}

void protocol witness for NoticeQueue.peek() in conformance CoalescingNoticeQueue(uint64_t a1@<X8>)
{
  specialized NoticeQueueStore.peek()(a1);
}

void protocol witness for NoticeQueue.pop() in conformance CoalescingNoticeQueue(uint64_t a1@<X8>)
{
  specialized NoticeQueueStore.pop()(a1);
}

uint64_t ReplacingNoticeQueue.push(notice:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Notice>);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1BD6441D0;
  outlined init with copy of IDSLookupManager(a1, v3 + 32);
  result = swift_bridgeObjectRelease();
  *v1 = v3;
  return result;
}

uint64_t ReplacingNoticeQueue.init()()
{
  return MEMORY[0x1E0DEE9D8];
}

void protocol witness for NoticeQueue.peek() in conformance ReplacingNoticeQueue(uint64_t a1@<X8>)
{
  specialized NoticeQueueStore.peek()(a1);
}

void protocol witness for NoticeQueue.pop() in conformance ReplacingNoticeQueue(uint64_t a1@<X8>)
{
  specialized NoticeQueueStore.pop()(a1);
}

uint64_t specialized CoalescingNoticeQueue.push(notice:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50[3];
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57[6];

  v4 = a4;
  v5 = a3;
  v57[3] = a3;
  v57[4] = a4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v57);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(boxed_opaque_existential_1, a1, v5);
  v9 = *a2;
  v10 = MEMORY[0x1E0DEE9D8];
  v50[0] = MEMORY[0x1E0DEE9D8];
  v11 = *(_QWORD *)(v9 + 16);
  swift_bridgeObjectRetain();
  if (v11)
  {
    v46 = v5;
    v47 = v4;
    v12 = 0;
    v13 = v9 + 32;
    v4 = 40;
    while (v12 < *(_QWORD *)(v9 + 16))
    {
      outlined init with copy of IDSLookupManager(v13, (uint64_t)&v54);
      v14 = v55;
      v15 = v56;
      __swift_project_boxed_opaque_existential_1(&v54, v55);
      if (((*(uint64_t (**)(uint64_t, uint64_t))(v15 + 40))(v14, v15) & 1) != 0)
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v54);
      }
      else
      {
        outlined init with take of Notice(&v54, (uint64_t)&v51);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        v16 = v50[0];
        v17 = *(_QWORD *)(v50[0] + 16);
        if (v17 >= *(_QWORD *)(v50[0] + 24) >> 1)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          v16 = v50[0];
        }
        *(_QWORD *)(v16 + 16) = v17 + 1;
        outlined init with take of Notice(&v51, v16 + 40 * v17 + 32);
      }
      ++v12;
      v13 += 40;
      if (v11 == v12)
      {
        v10 = v50[0];
        v4 = v47;
        v5 = v46;
        goto LABEL_13;
      }
    }
    __break(1u);
    goto LABEL_25;
  }
LABEL_13:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *a2 = v10;
  specialized BidirectionalCollection.last.getter(v10, (uint64_t)&v51);
  if (!v52)
  {
    outlined destroy of Notice?((uint64_t)&v51);
LABEL_20:
    outlined init with copy of IDSLookupManager((uint64_t)v57, (uint64_t)&v54);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    v31 = *(_QWORD *)(*a2 + 16);
    specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(v31);
    v32 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v54, v55);
    MEMORY[0x1E0C80A78](v32);
    v34 = (char *)&v45 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v35 + 16))(v34);
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v31, (uint64_t)v34, a2, v5, v4);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v54);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v57);
  }
  outlined init with take of Notice(&v51, (uint64_t)&v54);
  v18 = v55;
  v19 = v56;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v54, v55);
  if (((*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v19 + 208))(v57, v18, v19) & 1) == 0)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v54);
    goto LABEL_20;
  }
  v12 = v5;
  if (one-time initialization token for conversationControls != -1)
LABEL_25:
    swift_once();
  v20 = type metadata accessor for Logger();
  __swift_project_value_buffer(v20, (uint64_t)&static Logger.conversationControls);
  outlined init with copy of IDSLookupManager((uint64_t)v57, (uint64_t)&v51);
  v21 = Logger.logObject.getter();
  v22 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = swift_slowAlloc();
    v24 = swift_slowAlloc();
    v50[0] = v24;
    *(_DWORD *)v23 = 136315394;
    __swift_project_boxed_opaque_existential_1(&v51, v52);
    v25 = (*(uint64_t (**)(unint64_t, uint64_t))(v4 + 120))(v12, v4);
    v49 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v25, v26, v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v51);
    *(_WORD *)(v23 + 12) = 2080;
    swift_beginAccess();
    v27 = v55;
    v28 = v56;
    __swift_project_boxed_opaque_existential_1(&v54, v55);
    v29 = (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 120))(v27, v28);
    v48 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v29, v30, v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v21, v22, "Coalesced notice:%s into existingNotice:%s", (uint8_t *)v23, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v24, -1, -1);
    MEMORY[0x1C3B751B8](v23, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v51);
  }

  specialized RangeReplaceableCollection<>.removeLast()();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v51);
  swift_beginAccess();
  outlined init with copy of IDSLookupManager((uint64_t)&v54, (uint64_t)&v51);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  v36 = *(_QWORD *)(*a2 + 16);
  specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(v36);
  v37 = v52;
  v38 = v53;
  v39 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v51, v52);
  MEMORY[0x1E0C80A78](v39);
  v41 = (char *)&v45 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v42 + 16))(v41);
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v36, (uint64_t)v41, a2, v37, v38);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v51);
  v43 = *a2;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v54);
  *a2 = v43;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v57);
}

uint64_t specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t *boxed_opaque_existential_1;
  uint64_t v10;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;

  v14 = a4;
  v15 = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v13);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(boxed_opaque_existential_1, a2, a4);
  v10 = *a3;
  *(_QWORD *)(v10 + 16) = a1 + 1;
  return OUTLINED_FUNCTION_3_38(v10 + 40 * a1, v12, v13);
}

uint64_t dispatch thunk of NoticeQueue.count.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of NoticeQueue.push(notice:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of NoticeQueue.peek()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of NoticeQueue.pop()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of NoticeQueue.flush()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

void type metadata accessor for SimpleNoticeQueue()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for CoalescingNoticeQueue()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for ReplacingNoticeQueue()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t outlined destroy of Notice?(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Notice?);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t AudioVisualizationView.audioVisualizationLayer.getter()
{
  void *v0;
  id v1;
  uint64_t result;

  v1 = objc_msgSend(v0, sel_layer);
  type metadata accessor for AudioVisualizationLayer();
  result = swift_dynamicCastClass();
  if (!result)
  {

    result = OUTLINED_FUNCTION_0_48();
    __break(1u);
  }
  return result;
}

id AudioVisualizationView.__allocating_init(colorStyle:)()
{
  unsigned __int8 *v0;

  OUTLINED_FUNCTION_16_1();
  return AudioVisualizationView.init(colorStyle:)(v0);
}

id AudioVisualizationView.init(colorStyle:)(unsigned __int8 *a1)
{
  _BYTE *v1;
  int v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  objc_super v10;

  v2 = *a1;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit22AudioVisualizationView_gradient] = MEMORY[0x1E0DEE9D8];
  v1[OBJC_IVAR____TtC15ConversationKit22AudioVisualizationView_colorStyle] = v2;
  v10.receiver = v1;
  v10.super_class = (Class)type metadata accessor for AudioVisualizationView();
  v3 = objc_msgSendSuper2(&v10, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v4 = v3;
  if (v2 == 1)
  {
    v5 = v3;
    v6 = (void *)AudioVisualizationView.audioVisualizationLayer.getter();
    if (one-time initialization token for overlayContent != -1)
      swift_once();
    v7 = (void *)static Colors.ParticipantViews.overlayContent;
    v8 = (id)static Colors.ParticipantViews.overlayContent;
    AudioVisualizationLayer.color.setter(v7);

  }
  return v4;
}

uint64_t type metadata accessor for AudioVisualizationView()
{
  return objc_opt_self();
}

id AudioVisualizationView.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void AudioVisualizationView.init()()
{
  OUTLINED_FUNCTION_4_35(OBJC_IVAR____TtC15ConversationKit22AudioVisualizationView_gradient);
  OUTLINED_FUNCTION_0_48();
  __break(1u);
}

id AudioVisualizationView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

void AudioVisualizationView.init(frame:)()
{
  OUTLINED_FUNCTION_4_35(OBJC_IVAR____TtC15ConversationKit22AudioVisualizationView_gradient);
  OUTLINED_FUNCTION_0_48();
  __break(1u);
}

id AudioVisualizationView.__allocating_init(coder:)()
{
  void *v0;
  id v1;

  v1 = objc_msgSend(OUTLINED_FUNCTION_16_1(), sel_initWithCoder_, v0);

  return v1;
}

void AudioVisualizationView.init(coder:)()
{
  OUTLINED_FUNCTION_4_35(OBJC_IVAR____TtC15ConversationKit22AudioVisualizationView_gradient);
  OUTLINED_FUNCTION_0_48();
  __break(1u);
}

float AudioVisualizationView.scale.getter()
{
  char *v0;
  float *v1;
  float v2;

  v0 = (char *)AudioVisualizationView.audioVisualizationLayer.getter();
  v1 = (float *)&v0[OBJC_IVAR____TtC15ConversationKit23AudioVisualizationLayer_scale];
  OUTLINED_FUNCTION_2_0();
  v2 = *v1;

  return v2;
}

void AudioVisualizationView.scale.setter(float a1)
{
  char *v2;
  float *v3;

  v2 = (char *)AudioVisualizationView.audioVisualizationLayer.getter();
  v3 = (float *)&v2[OBJC_IVAR____TtC15ConversationKit23AudioVisualizationLayer_scale];
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;

}

void (*AudioVisualizationView.scale.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(float *)(a1 + 8) = AudioVisualizationView.scale.getter();
  return AudioVisualizationView.scale.modify;
}

void AudioVisualizationView.scale.modify(uint64_t a1)
{
  AudioVisualizationView.scale.setter(*(float *)(a1 + 8));
  OUTLINED_FUNCTION_0();
}

uint64_t key path setter for AudioVisualizationView.gradient : AudioVisualizationView(uint64_t a1, _QWORD **a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x90);
  v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

void AudioVisualizationView.gradient.didset()
{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  void *v3;
  void *v4;
  id v5;

  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC15ConversationKit22AudioVisualizationView_colorStyle) & 1) == 0)
  {
    v1 = (void *)AudioVisualizationView.audioVisualizationLayer.getter();
    swift_beginAccess();
    v2 = swift_bridgeObjectRetain();
    specialized Array<A>.interpolatedColor(percent:)(v2, 0.25);
    v4 = v3;
    swift_bridgeObjectRelease();
    v5 = UIColor.screenBlendedColor.getter();

    AudioVisualizationLayer.color.setter(v5);
  }
}

void specialized Array<A>.interpolatedColor(percent:)(unint64_t a1, double a2)
{
  unint64_t v4;
  unint64_t v5;
  id v6;
  void *v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  id v18;
  void *v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  uint64_t v27;
  id v28;
  double v29;

  v4 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v27 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v27)
      goto LABEL_15;
  }
  else if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_15;
  }
  v5 = a1 & 0xC000000000000001;
  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (a1 & 0xC000000000000001) == 0, a1);
  if ((a1 & 0xC000000000000001) != 0)
    v6 = (id)MEMORY[0x1C3B73D18](0, a1);
  else
    v6 = *(id *)(a1 + 32);
  v7 = v6;
  v8 = UIColor.hslaComponents.getter();
  v10 = v9;
  v12 = v11;
  v14 = v13;

  if (v4)
  {
    swift_bridgeObjectRetain();
    v15 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v15)
      goto LABEL_9;
LABEL_15:
    v28 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
    return;
  }
  v15 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v15)
    goto LABEL_15;
LABEL_9:
  v16 = __OFSUB__(v15, 1);
  v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    specialized Array._checkSubscript(_:wasNativeTypeChecked:)(v17, v5 == 0, a1);
    v29 = v14;
    if (v5)
      v18 = (id)MEMORY[0x1C3B73D18](v17, a1);
    else
      v18 = *(id *)(a1 + 8 * v17 + 32);
    v19 = v18;
    v20 = UIColor.hslaComponents.getter();
    v22 = v21;
    v24 = v23;
    v26 = v25;

    objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithHue_saturation_brightness_alpha_, (1.0 - a2) * v8 + v20 * a2, (1.0 - a2) * v10 + v22 * a2, (1.0 - a2) * v12 + v24 * a2, (1.0 - a2) * v29 + v26 * a2);
  }
}

uint64_t AudioVisualizationView.gradient.getter()
{
  OUTLINED_FUNCTION_2_0();
  return swift_bridgeObjectRetain();
}

void AudioVisualizationView.gradient.setter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit22AudioVisualizationView_gradient);
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  swift_bridgeObjectRelease();
  AudioVisualizationView.gradient.didset();
}

void (*AudioVisualizationView.gradient.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_2_0();
  return AudioVisualizationView.gradient.modify;
}

void AudioVisualizationView.gradient.modify(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    AudioVisualizationView.gradient.didset();
  OUTLINED_FUNCTION_0();
}

Swift::Void __swiftcall AudioVisualizationView.startAnimation()()
{
  AudioVisualizationView.startAnimation()(AudioVisualizationLayer.startAnimation());
}

Swift::Void __swiftcall AudioVisualizationView.stopAnimation()()
{
  AudioVisualizationView.startAnimation()(AudioVisualizationLayer.stopAnimation());
}

void AudioVisualizationView.startAnimation()(void (*a1)(void))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  char v6;
  void *v7;
  uint64_t v8;

  v2 = type metadata accessor for DispatchPredicate();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (uint64_t *)((char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for OS_dispatch_queue();
  *v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DEF740], v2);
  v6 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) != 0)
  {
    v7 = (void *)AudioVisualizationView.audioVisualizationLayer.getter();
    a1();

  }
  else
  {
    __break(1u);
  }
}

uint64_t static AudioVisualizationView.layerClass.getter()
{
  return type metadata accessor for AudioVisualizationLayer();
}

id AudioVisualizationView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AudioVisualizationView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1BD0BD5E4(_QWORD **a1@<X0>, float *a2@<X8>)
{
  *a2 = (*(float (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x70))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD0BD620(float *a1, _QWORD **a2)
{
  (*(void (**)(float))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x78))(*a1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD0BD658(_QWORD **a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x88))();
  OUTLINED_FUNCTION_0();
}

uint64_t method lookup function for AudioVisualizationView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AudioVisualizationView.__allocating_init(colorStyle:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of AudioVisualizationView.scale.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of AudioVisualizationView.scale.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of AudioVisualizationView.scale.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of AudioVisualizationView.gradient.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of AudioVisualizationView.gradient.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of AudioVisualizationView.gradient.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of AudioVisualizationView.startAnimation()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of AudioVisualizationView.stopAnimation()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

void CallRecordingButtonViewModel.__allocating_init(_:_:)(uint64_t a1, uint64_t a2, int a3)
{
  swift_allocObject();
  CallRecordingButtonViewModel.init(_:_:)(a1, a2, a3);
  OUTLINED_FUNCTION_18();
}

Swift::Void __swiftcall CallRecordingButtonViewModel.startRecordingButtonTapped()()
{
  CallRecordingButtonViewModel.educationScreenShown.getter();
}

void sub_1BD0BD800(char a1)
{
  uint64_t v1;

  if ((a1 & 1) == 0)
  {
    OUTLINED_FUNCTION_2_0();
    OUTLINED_FUNCTION_26();
  }
  *(_BYTE *)(v1 + 48) = 1;
  CallRecordingButtonViewModel.updateButtonState(enabled:hidden:)(0, 0);
  CallRecordingButtonViewModel.startRecordingCountdown()();
  OUTLINED_FUNCTION_9_0();
}

void CallRecordingButtonViewModel.recordingAvailability.setter(int a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_2_0();
  *(_DWORD *)(v1 + 52) = a1;
  CallRecordingButtonViewModel.recordingAvailability.didset();
}

Swift::Void __swiftcall CallRecordingButtonViewModel.updateCallUUID(_:)(Swift::String a1)
{
  Swift::String *v1;

  v1[2] = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
}

void CallRecordingButtonViewModel.educationScreenShown.setter()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  OUTLINED_FUNCTION_15_30();
}

void sub_1BD0BD908(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  char v16;
  void *v17;

  objc_msgSend(v17, sel_setBool_forKey_, v16 & 1, a1);

}

Swift::Void __swiftcall CallRecordingButtonViewModel.startRecordingCountdown()()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  v1 = v0;
  if (one-time initialization token for startCallRecordingCountdownNotification != -1)
  {
    swift_once();
    v0 = v1;
  }
  objc_msgSend(v0, sel_postNotificationName_object_, static NSNotificationName.startCallRecordingCountdownNotification, 0);

}

void CallRecordingButtonViewModel.delegate.getter()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_26();
}

void CallRecordingButtonViewModel.delegate.setter(void *a1, uint64_t a2)
{
  uint64_t v2;

  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v2 + 24) = a2;
  swift_unknownObjectWeakAssign();

  OUTLINED_FUNCTION_9_0();
}

void CallRecordingButtonViewModel.delegate.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  OUTLINED_FUNCTION_60_0();
  OUTLINED_FUNCTION_26();
}

void (*sub_1BD0BDA88(uint64_t a1))(id **a1, char a2)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = v3;
  return CallRecordingButtonViewModel.delegate.modify;
}

void CallRecordingButtonViewModel.delegate.modify(id **a1, char a2)
{
  id *v3;
  id v4;

  v3 = *a1;
  v4 = (*a1)[3];
  *((_QWORD *)(*a1)[5] + 3) = (*a1)[4];
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {

    swift_endAccess();
  }
  else
  {
    swift_endAccess();

  }
  free(v3);
}

BOOL CallRecordingButtonViewModel.isCallEligibleToBeEnabled.getter()
{
  uint64_t v0;
  id v1;
  id v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;

  v1 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v2 = objc_msgSend(v1, sel_currentCalls);

  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUCall);
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v3 >> 62))
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_retain();
    swift_bridgeObjectRetain();
    if (v4)
      goto LABEL_3;
LABEL_14:
    swift_release();
    swift_bridgeObjectRelease_n();
    return 0;
  }
LABEL_25:
  swift_retain();
  swift_bridgeObjectRetain();
  v4 = _CocoaArrayWrapper.endIndex.getter();
  if (!v4)
    goto LABEL_14;
LABEL_3:
  v5 = 4;
  while (1)
  {
    if ((v3 & 0xC000000000000001) != 0)
      v6 = (id)MEMORY[0x1C3B73D18](v5 - 4, v3);
    else
      v6 = *(id *)(v3 + 8 * v5);
    v7 = v6;
    v8 = v5 - 3;
    if (__OFADD__(v5 - 4, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    v9 = objc_msgSend(v6, sel_callUUID);
    v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v12 = v11;

    if (v10 == *(_QWORD *)(v0 + 32) && v12 == *(_QWORD *)(v0 + 40))
    {
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
    v14 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v14 & 1) != 0)
      break;

    ++v5;
    if (v8 == v4)
      goto LABEL_14;
  }
  swift_release();
LABEL_17:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  if (*(_DWORD *)(v0 + 52) == 3)
  {
    v15 = objc_msgSend(v7, sel_recordingSession);
    if (v15)
    {
      v16 = v15;
      objc_msgSend(v15, sel_recordingState);

      return 0;
    }
    v17 = objc_msgSend(v7, sel_remoteParticipantHandles);
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
    lazy protocol witness table accessor for type TUHandle and conformance NSObject();
    v18 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    v19 = specialized Set.count.getter(v18);
    swift_bridgeObjectRelease();
    if (v19 == 1)
    {
      v20 = objc_msgSend(v7, sel_status);

      return v20 == 1;
    }
  }

  return 0;
}

uint64_t CallRecordingButtonViewModel.recordingAvailability.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_2_0();
  return *(unsigned int *)(v0 + 52);
}

uint64_t key path getter for CallRecordingButtonViewModel.recordingAvailability : CallRecordingButtonViewModel@<X0>(uint64_t *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_DWORD *)(v3 + 52);
  return result;
}

void CallRecordingButtonViewModel.recordingAvailability.didset()
{
  uint64_t v0;
  id v1;
  id v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  BOOL v14;
  id v15;

  v1 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v2 = objc_msgSend(v1, sel_currentCalls);

  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUCall);
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v3 >> 62))
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_retain();
    swift_bridgeObjectRetain();
    if (v4)
      goto LABEL_3;
LABEL_14:
    OUTLINED_FUNCTION_43();
    swift_bridgeObjectRelease_n();
    CallRecordingButtonViewModel.updateButtonState(enabled:hidden:)(0, 1);
    return;
  }
LABEL_22:
  swift_retain();
  swift_bridgeObjectRetain();
  v4 = _CocoaArrayWrapper.endIndex.getter();
  if (!v4)
    goto LABEL_14;
LABEL_3:
  v5 = 4;
  while (1)
  {
    if ((v3 & 0xC000000000000001) != 0)
      v6 = (id)MEMORY[0x1C3B73D18](v5 - 4, v3);
    else
      v6 = *(id *)(v3 + 8 * v5);
    v7 = v5 - 3;
    if (__OFADD__(v5 - 4, 1))
    {
      __break(1u);
      goto LABEL_22;
    }
    v15 = v6;
    v8 = objc_msgSend(v6, sel_callUUID);
    v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v11 = v10;

    if (v9 == *(_QWORD *)(v0 + 32) && v11 == *(_QWORD *)(v0 + 40))
    {
      OUTLINED_FUNCTION_43();
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
    v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v13 & 1) != 0)
      break;

    ++v5;
    if (v7 == v4)
      goto LABEL_14;
  }
  OUTLINED_FUNCTION_43();
LABEL_17:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v14 = (*(_BYTE *)(v0 + 48) & 1) == 0 && CallRecordingButtonViewModel.isCallEligibleToBeEnabled.getter();
  CallRecordingButtonViewModel.updateButtonState(enabled:hidden:)(v14, objc_msgSend(v15, sel_recordingAvailability) == 1);

}

void CallRecordingButtonViewModel.updateButtonState(enabled:hidden:)(char a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t ObjectType;
  _BYTE v9[2];

  swift_beginAccess();
  v5 = MEMORY[0x1C3B752C0](v2 + 16);
  if (v5)
  {
    v6 = (void *)v5;
    v7 = *(_QWORD *)(v2 + 24);
    ObjectType = swift_getObjectType();
    v9[0] = a1 & 1;
    v9[1] = a2 & 1;
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16))(v9, ObjectType, v7);

  }
}

void CallRecordingButtonViewModel.recordingAvailability.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_60_0();
  OUTLINED_FUNCTION_0();
}

void CallRecordingButtonViewModel.recordingAvailability.modify(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    CallRecordingButtonViewModel.recordingAvailability.didset();
  OUTLINED_FUNCTION_0();
}

void CallRecordingButtonViewModel.educationScreenShown.getter()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  OUTLINED_FUNCTION_15_30();
}

uint64_t sub_1BD0BE1D4(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, int a10, __int16 a11, char a12, char a13, __int128 a14, __int128 a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  void *v25;
  id v27;
  uint64_t result;
  unsigned __int8 v29;
  _BYTE v30[32];
  _QWORD v31[10];

  v27 = objc_msgSend(v25, sel_objectForKey_, a1);

  if (v27)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v30, 0, sizeof(v30));
  }
  outlined init with take of Any?((uint64_t)v30, (uint64_t)v31);
  if (v31[3])
  {
    result = swift_dynamicCast();
    if ((_DWORD)result)
      return v29;
  }
  else
  {
    outlined destroy of Any?((uint64_t)v31);
    return 0;
  }
  return result;
}

void CallRecordingButtonViewModel.educationScreenShown.modify(_QWORD *a1)
{
  uint64_t v1;

  *a1 = v1;
  CallRecordingButtonViewModel.educationScreenShown.getter();
}

void sub_1BD0BE2A0(char a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 8) = a1 & 1;
  OUTLINED_FUNCTION_0();
}

void CallRecordingButtonViewModel.educationScreenShown.modify()
{
  CallRecordingButtonViewModel.educationScreenShown.setter();
}

void sub_1BD0BE2D4()
{
  OUTLINED_FUNCTION_0();
}

void CallRecordingButtonViewModel.init(_:_:)(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(_BYTE *)(v3 + 48) = 0;
  *(_QWORD *)(v3 + 56) = 0xD000000000000030;
  *(_QWORD *)(v3 + 64) = 0x80000001BD671940;
  *(_QWORD *)(v3 + 72) = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)(v3 + 32) = a1;
  *(_QWORD *)(v3 + 40) = a2;
  *(_DWORD *)(v3 + 52) = a3;
  CallRecordingButtonViewModel.observeNotification()();
  OUTLINED_FUNCTION_18();
}

Swift::Void __swiftcall CallRecordingButtonViewModel.observeNotification()()
{
  uint64_t v0;
  id v1;
  id v2;
  id v3;
  id v4;

  v0 = type metadata accessor for NSNotificationCenter.Publisher();
  MEMORY[0x1E0C80A78](v0);
  v1 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  OUTLINED_FUNCTION_8_37();

  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_5_35();
  lazy protocol witness table accessor for type NSNotificationCenter.Publisher and conformance NSNotificationCenter.Publisher();
  OUTLINED_FUNCTION_3_39();
  swift_release();
  OUTLINED_FUNCTION_4_36();
  OUTLINED_FUNCTION_0_49();
  OUTLINED_FUNCTION_11_33();
  OUTLINED_FUNCTION_13_33();
  OUTLINED_FUNCTION_43();
  v2 = OUTLINED_FUNCTION_10_39();
  OUTLINED_FUNCTION_8_37();

  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_5_35();
  OUTLINED_FUNCTION_3_39();
  OUTLINED_FUNCTION_16_20();
  OUTLINED_FUNCTION_4_36();
  OUTLINED_FUNCTION_0_49();
  OUTLINED_FUNCTION_11_33();
  OUTLINED_FUNCTION_13_33();
  OUTLINED_FUNCTION_43();
  v3 = OUTLINED_FUNCTION_10_39();
  if (one-time initialization token for startCallRecordingStateFailedNotification != -1)
    swift_once();
  OUTLINED_FUNCTION_8_37();

  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_5_35();
  OUTLINED_FUNCTION_3_39();
  OUTLINED_FUNCTION_16_20();
  OUTLINED_FUNCTION_4_36();
  OUTLINED_FUNCTION_0_49();
  OUTLINED_FUNCTION_11_33();
  OUTLINED_FUNCTION_13_33();
  OUTLINED_FUNCTION_43();
  v4 = OUTLINED_FUNCTION_10_39();
  if (one-time initialization token for startCallRecordingStateCancelledNotification != -1)
    swift_once();
  OUTLINED_FUNCTION_8_37();

  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_5_35();
  OUTLINED_FUNCTION_3_39();
  swift_release();
  OUTLINED_FUNCTION_4_36();
  OUTLINED_FUNCTION_0_49();
  OUTLINED_FUNCTION_11_33();
  OUTLINED_FUNCTION_13_33();
  OUTLINED_FUNCTION_43();
}

void closure #1 in CallRecordingButtonViewModel.observeNotification()()
{
  uint64_t Strong;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  char v12;
  id v13;
  _BYTE v14[24];
  uint64_t v15;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v1 = Strong;
    Notification.object.getter();
    if (!v15)
    {
      swift_release();
      outlined destroy of Any?((uint64_t)v14);
      return;
    }
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUCall);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_release();
      return;
    }
    v2 = objc_msgSend(v13, sel_callUUID);
    v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v5 = v4;

    if (v3 == *(_QWORD *)(v1 + 32) && v5 == *(_QWORD *)(v1 + 40))
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v7 & 1) == 0)
        goto LABEL_21;
    }
    v8 = objc_msgSend(v13, sel_recordingSession);
    if (v8)
    {
      v9 = v8;
      objc_msgSend(v8, sel_recordingState);

      *(_BYTE *)(v1 + 48) = 0;
    }
    if (objc_msgSend(v13, sel_recordingAvailability) == 3
      && (objc_msgSend(v13, sel_isRecording) & 1) == 0)
    {
      v10 = objc_msgSend(v13, sel_recordingSession);
      if (!v10)
      {
        v12 = 1;
        goto LABEL_20;
      }
      v11 = v10;
      objc_msgSend(v10, sel_recordingState);

    }
    v12 = 0;
LABEL_20:
    CallRecordingButtonViewModel.updateButtonState(enabled:hidden:)(v12, objc_msgSend(v13, sel_recordingAvailability) == 1);
LABEL_21:
    swift_release();

  }
}

void closure #2 in CallRecordingButtonViewModel.observeNotification()()
{
  uint64_t Strong;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;
  unsigned int v8;
  id v9;
  _BYTE v10[24];
  uint64_t v11;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v1 = Strong;
    Notification.object.getter();
    if (!v11)
    {
      swift_release();
      outlined destroy of Any?((uint64_t)v10);
      return;
    }
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUCall);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_release();
      return;
    }
    v2 = objc_msgSend(v9, sel_callUUID);
    v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v5 = v4;

    if (v3 == *(_QWORD *)(v1 + 32) && v5 == *(_QWORD *)(v1 + 40))
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v7 & 1) == 0)
        goto LABEL_14;
    }
    v8 = objc_msgSend(v9, sel_recordingAvailability);
    swift_beginAccess();
    *(_DWORD *)(v1 + 52) = v8;
    CallRecordingButtonViewModel.recordingAvailability.didset();
LABEL_14:
    swift_release();

  }
}

uint64_t closure #3 in CallRecordingButtonViewModel.observeNotification()()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = result;
    if (one-time initialization token for recordingSession != -1)
      swift_once();
    v2 = type metadata accessor for Logger();
    __swift_project_value_buffer(v2, (uint64_t)&static Logger.recordingSession);
    v3 = Logger.logObject.getter();
    v4 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v5 = 0;
      _os_log_impl(&dword_1BD004000, v3, v4, "Start call recording failed. Resetting recording button state.", v5, 2u);
      MEMORY[0x1C3B751B8](v5, -1, -1);
    }

    *(_BYTE *)(v1 + 48) = 0;
    CallRecordingButtonViewModel.updateButtonState(enabled:hidden:)(1, 0);
    return swift_release();
  }
  return result;
}

uint64_t closure #4 in CallRecordingButtonViewModel.observeNotification()()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  BOOL v6;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = result;
    if (one-time initialization token for recordingSession != -1)
      swift_once();
    v2 = type metadata accessor for Logger();
    __swift_project_value_buffer(v2, (uint64_t)&static Logger.recordingSession);
    v3 = Logger.logObject.getter();
    v4 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v5 = 0;
      _os_log_impl(&dword_1BD004000, v3, v4, "Start call recording cancelled. Resetting recording button state.", v5, 2u);
      MEMORY[0x1C3B751B8](v5, -1, -1);
    }

    *(_BYTE *)(v1 + 48) = 0;
    v6 = CallRecordingButtonViewModel.isCallEligibleToBeEnabled.getter();
    swift_beginAccess();
    CallRecordingButtonViewModel.updateButtonState(enabled:hidden:)(v6, *(_DWORD *)(v1 + 52) == 1);
    return swift_release();
  }
  return result;
}

uint64_t CallRecordingButtonViewModel.deinit()
{
  uint64_t v0;

  outlined destroy of weak ConversationControlsCountdownJoinButtonDelegate?(v0 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t CallRecordingButtonViewModel.__deallocating_deinit()
{
  CallRecordingButtonViewModel.deinit();
  return swift_deallocClassInstance();
}

uint64_t outlined init with take of Any?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Any?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BD0BEC24()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

void partial apply for closure #1 in CallRecordingButtonViewModel.observeNotification()()
{
  closure #1 in CallRecordingButtonViewModel.observeNotification()();
}

void partial apply for closure #2 in CallRecordingButtonViewModel.observeNotification()()
{
  closure #2 in CallRecordingButtonViewModel.observeNotification()();
}

uint64_t partial apply for closure #3 in CallRecordingButtonViewModel.observeNotification()()
{
  return closure #3 in CallRecordingButtonViewModel.observeNotification()();
}

uint64_t partial apply for closure #4 in CallRecordingButtonViewModel.observeNotification()()
{
  return closure #4 in CallRecordingButtonViewModel.observeNotification()();
}

void sub_1BD0BEC74(int *a1)
{
  CallRecordingButtonViewModel.recordingAvailability.setter(*a1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD0BEC94()
{
  CallRecordingButtonViewModel.educationScreenShown.getter();
}

void sub_1BD0BECAC(char a1)
{
  _BYTE *v1;

  *v1 = a1 & 1;
  OUTLINED_FUNCTION_0();
}

void sub_1BD0BECBC()
{
  CallRecordingButtonViewModel.educationScreenShown.setter();
}

void sub_1BD0BECD4()
{
  OUTLINED_FUNCTION_0();
}

uint64_t type metadata accessor for CallRecordingButtonViewModel()
{
  return objc_opt_self();
}

uint64_t method lookup function for CallRecordingButtonViewModel()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CallRecordingButtonViewModel.__allocating_init(_:_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

unint64_t lazy protocol witness table accessor for type TUHandle and conformance NSObject()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type TUHandle and conformance NSObject;
  if (!lazy protocol witness table cache variable for type TUHandle and conformance NSObject)
  {
    type metadata accessor for NSObject(255, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type TUHandle and conformance NSObject);
  }
  return result;
}

uint64_t specialized RawRepresentable<>.hash(into:)()
{
  return OUTLINED_FUNCTION_72_6();
}

{
  OUTLINED_FUNCTION_12_12();
  return OUTLINED_FUNCTION_32_2();
}

{
  return OUTLINED_FUNCTION_8_38();
}

{
  OUTLINED_FUNCTION_12_12();
  return OUTLINED_FUNCTION_32_2();
}

{
  return OUTLINED_FUNCTION_8_38();
}

{
  OUTLINED_FUNCTION_12_12();
  return OUTLINED_FUNCTION_32_2();
}

{
  OUTLINED_FUNCTION_12_12();
  return OUTLINED_FUNCTION_32_2();
}

{
  return String.hash(into:)();
}

{
  OUTLINED_FUNCTION_12_12();
  return OUTLINED_FUNCTION_32_2();
}

{
  return OUTLINED_FUNCTION_8_38();
}

{
  return String.hash(into:)();
}

{
  return OUTLINED_FUNCTION_72_6();
}

{
  OUTLINED_FUNCTION_12_12();
  return OUTLINED_FUNCTION_32_2();
}

{
  return OUTLINED_FUNCTION_8_38();
}

{
  return OUTLINED_FUNCTION_8_38();
}

{
  OUTLINED_FUNCTION_12_12();
  return OUTLINED_FUNCTION_32_2();
}

void specialized RawRepresentable<>.hash(into:)(int a1, Swift::UInt32 a2)
{
  Hasher._combine(_:)(a2);
  OUTLINED_FUNCTION_0();
}

void specialized RawRepresentable<>.hash(into:)(int a1, Swift::UInt a2)
{
  OUTLINED_FUNCTION_7_46(a1, a2);
  OUTLINED_FUNCTION_0();
}

uint64_t specialized RawRepresentable<>.hash(into:)(uint64_t a1, uint64_t a2)
{
  return specialized RawRepresentable<>.hash(into:)(a1, a2, (void (*)(uint64_t))InCallControlsCollectionViewController.CollectionViewSection.rawValue.getter);
}

{
  return specialized RawRepresentable<>.hash(into:)(a1, a2, (void (*)(uint64_t))ImageNames.Staging.rawValue.getter);
}

{
  return specialized RawRepresentable<>.hash(into:)(a1, a2, (void (*)(uint64_t))ImageNames.ParticipantView.rawValue.getter);
}

void specialized RawRepresentable<>.hash(into:)(uint64_t a1, char a2)
{
  Hasher._combine(_:)(a2 & 1);
  OUTLINED_FUNCTION_0();
}

{
  __asm { BR              X10 }
}

{
  Hasher._combine(_:)((a2 & 1) - 3);
  OUTLINED_FUNCTION_0();
}

{
  __asm { BR              X10 }
}

{
  __asm { BR              X10 }
}

{
  Hasher._combine(_:)(qword_1BD6490E8[a2]);
  OUTLINED_FUNCTION_0();
}

uint64_t sub_1BD0BEF24()
{
  OUTLINED_FUNCTION_12_12();
  return OUTLINED_FUNCTION_32_2();
}

void specialized RawRepresentable<>.hash(into:)(double a1)
{
  Swift::UInt64 v1;

  if ((*(_QWORD *)&a1 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v1 = *(_QWORD *)&a1;
  else
    v1 = 0;
  Hasher._combine(_:)(v1);
  OUTLINED_FUNCTION_0();
}

void specialized RawRepresentable<>.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
  Hasher._combine(_:)(a2);
  OUTLINED_FUNCTION_0();
}

uint64_t specialized RawRepresentable<>.hash(into:)(uint64_t a1, char a2)
{
  id v2;

  v2 = VideoReaction.rawValue.getter(a2);
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1BD0BF378()
{
  OUTLINED_FUNCTION_106();
  OUTLINED_FUNCTION_12_12();
  return OUTLINED_FUNCTION_32_2();
}

void specialized RawRepresentable<>.hash(into:)()
{
  OUTLINED_FUNCTION_80_2();
  __asm { BR              X10 }
}

uint64_t sub_1BD0BF404()
{
  OUTLINED_FUNCTION_101_4();
  OUTLINED_FUNCTION_12_12();
  return OUTLINED_FUNCTION_32_2();
}

uint64_t specialized RawRepresentable<>.hash(into:)(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  a3(a2);
  String.hash(into:)();
  return OUTLINED_FUNCTION_32_2();
}

uint64_t sub_1BD0BF558()
{
  OUTLINED_FUNCTION_106();
  OUTLINED_FUNCTION_12_12();
  return OUTLINED_FUNCTION_32_2();
}

uint64_t RemoteControlRequest.date.getter@<X0>(uint64_t a1@<X8>)
{
  return RemoteControlRequest.date.getter(type metadata accessor for RemoteControlRequest, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0870], a1);
}

uint64_t type metadata accessor for RemoteControlRequest(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for RemoteControlRequest);
}

void RemoteControlRequest.hash(into:)()
{
  OUTLINED_FUNCTION_33_0();
  _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  OUTLINED_FUNCTION_89_5();
  type metadata accessor for RemoteControlRequest(0);
  OUTLINED_FUNCTION_33();
  _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type Date and conformance Date, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  OUTLINED_FUNCTION_89_5();
  OUTLINED_FUNCTION_18();
}

uint64_t static RemoteControlRequest.== infix(_:_:)()
{
  uint64_t v0;

  if ((OUTLINED_FUNCTION_69_2() & 1) == 0)
    return 0;
  v0 = type metadata accessor for RemoteControlRequest(0);
  OUTLINED_FUNCTION_92_0(v0);
  return static Date.== infix(_:_:)();
}

void RemoteControlRequest.CodingKeys.hash(into:)(uint64_t a1, char a2)
{
  Hasher._combine(_:)(a2 & 1);
}

uint64_t RemoteControlRequest.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 1684632949 && a2 == 0xE400000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1702125924 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t RemoteControlRequest.CodingKeys.init(intValue:)()
{
  return 2;
}

Swift::Int RemoteControlRequest.CodingKeys.hashValue.getter(char a1)
{
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1 & 1);
  return Hasher._finalize()();
}

uint64_t RemoteControlRequest.CodingKeys.stringValue.getter(char a1)
{
  if ((a1 & 1) != 0)
    return 1702125924;
  else
    return 1684632949;
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance RemoteControlRequest.CodingKeys()
{
  char *v0;

  return RemoteControlRequest.CodingKeys.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance RemoteControlRequest.CodingKeys(uint64_t a1)
{
  char *v1;

  RemoteControlRequest.CodingKeys.hash(into:)(a1, *v1);
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance RemoteControlRequest.CodingKeys()
{
  char *v0;

  return RemoteControlRequest.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance RemoteControlRequest.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = RemoteControlRequest.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CodingKey.intValue.getter in conformance RemoteControlRequest.CodingKeys()
{
  return protocol witness for ParticipantVideoProvider.token.getter in conformance TUVideoDeviceController();
}

uint64_t protocol witness for CodingKey.init(intValue:) in conformance RemoteControlRequest.CodingKeys@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = RemoteControlRequest.CodingKeys.init(intValue:)();
  *a1 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance RemoteControlRequest.CodingKeys()
{
  lazy protocol witness table accessor for type RemoteControlRequest.CodingKeys and conformance RemoteControlRequest.CodingKeys();
  return CodingKey.description.getter();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance RemoteControlRequest.CodingKeys()
{
  lazy protocol witness table accessor for type RemoteControlRequest.CodingKeys and conformance RemoteControlRequest.CodingKeys();
  return CodingKey.debugDescription.getter();
}

void RemoteControlRequest.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  _BYTE v5[16];

  OUTLINED_FUNCTION_84_2();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<RemoteControlRequest.CodingKeys>);
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x1E0C80A78](v2);
  v4 = &v5[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  OUTLINED_FUNCTION_49_12();
  lazy protocol witness table accessor for type RemoteControlRequest.CodingKeys and conformance RemoteControlRequest.CodingKeys();
  OUTLINED_FUNCTION_29_18();
  v5[15] = 0;
  OUTLINED_FUNCTION_33_0();
  _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09B8]);
  OUTLINED_FUNCTION_13_34();
  if (!v0)
  {
    type metadata accessor for RemoteControlRequest(0);
    v5[14] = 1;
    OUTLINED_FUNCTION_33();
    _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type Date and conformance Date, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
    OUTLINED_FUNCTION_100_1();
    OUTLINED_FUNCTION_13_34();
  }
  OUTLINED_FUNCTION_39_0((uint64_t)v4, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_58_12();
}

unint64_t lazy protocol witness table accessor for type RemoteControlRequest.CodingKeys and conformance RemoteControlRequest.CodingKeys()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type RemoteControlRequest.CodingKeys and conformance RemoteControlRequest.CodingKeys;
  if (!lazy protocol witness table cache variable for type RemoteControlRequest.CodingKeys and conformance RemoteControlRequest.CodingKeys)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for RemoteControlRequest.CodingKeys, &unk_1E761A1A8);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RemoteControlRequest.CodingKeys and conformance RemoteControlRequest.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type RemoteControlRequest.CodingKeys and conformance RemoteControlRequest.CodingKeys;
  if (!lazy protocol witness table cache variable for type RemoteControlRequest.CodingKeys and conformance RemoteControlRequest.CodingKeys)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for RemoteControlRequest.CodingKeys, &unk_1E761A1A8);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RemoteControlRequest.CodingKeys and conformance RemoteControlRequest.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type RemoteControlRequest.CodingKeys and conformance RemoteControlRequest.CodingKeys;
  if (!lazy protocol witness table cache variable for type RemoteControlRequest.CodingKeys and conformance RemoteControlRequest.CodingKeys)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for RemoteControlRequest.CodingKeys, &unk_1E761A1A8);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RemoteControlRequest.CodingKeys and conformance RemoteControlRequest.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type RemoteControlRequest.CodingKeys and conformance RemoteControlRequest.CodingKeys;
  if (!lazy protocol witness table cache variable for type RemoteControlRequest.CodingKeys and conformance RemoteControlRequest.CodingKeys)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for RemoteControlRequest.CodingKeys, &unk_1E761A1A8);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RemoteControlRequest.CodingKeys and conformance RemoteControlRequest.CodingKeys);
  }
  return result;
}

void RemoteControlRequest.hashValue.getter()
{
  OUTLINED_FUNCTION_5_1();
  OUTLINED_FUNCTION_33_0();
  _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  OUTLINED_FUNCTION_90();
  type metadata accessor for RemoteControlRequest(0);
  OUTLINED_FUNCTION_33();
  _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type Date and conformance Date, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  OUTLINED_FUNCTION_90();
  OUTLINED_FUNCTION_4_6();
  OUTLINED_FUNCTION_2();
}

void RemoteControlRequest.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  OUTLINED_FUNCTION_35_9();
  v29 = v0;
  v4 = v3;
  v22 = v5;
  v24 = OUTLINED_FUNCTION_33();
  v21 = *(_QWORD *)(v24 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v6);
  v23 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = OUTLINED_FUNCTION_33_0();
  v8 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  OUTLINED_FUNCTION_41();
  v25 = v9;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<RemoteControlRequest.CodingKeys>);
  v10 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v11 = OUTLINED_FUNCTION_63_3();
  v12 = type metadata accessor for RemoteControlRequest(v11);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_81();
  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  lazy protocol witness table accessor for type RemoteControlRequest.CodingKeys and conformance RemoteControlRequest.CodingKeys();
  v27 = v1;
  v14 = v29;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v14)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
  }
  else
  {
    v15 = v10;
    v16 = v2;
    v17 = (uint64_t)v4;
    v18 = v23;
    v19 = v24;
    _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09E0]);
    OUTLINED_FUNCTION_43_14();
    v29 = v8;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v16, v25, v26);
    _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type Date and conformance Date, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
    OUTLINED_FUNCTION_43_14();
    OUTLINED_FUNCTION_38_14(*(uint64_t (**)(_QWORD, _QWORD))(v15 + 8));
    (*(void (**)(uint64_t, char *, uint64_t))(v21 + 32))(v16 + *(int *)(v12 + 20), v18, v19);
    OUTLINED_FUNCTION_95_1(v16, v22);
    __swift_destroy_boxed_opaque_existential_1(v17);
    OUTLINED_FUNCTION_99_0(v16);
  }
  OUTLINED_FUNCTION_1_29();
}

uint64_t RemoteControlRequest.init(uuid:date:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_23_25(v4);
  v5 = a2 + *(int *)(type metadata accessor for RemoteControlRequest(0) + 20);
  v6 = OUTLINED_FUNCTION_33();
  return OUTLINED_FUNCTION_53_5(v5, a1, v6, *(uint64_t (**)(void))(*(_QWORD *)(v6 - 8) + 32));
}

void protocol witness for Decodable.init(from:) in conformance RemoteControlRequest()
{
  RemoteControlRequest.init(from:)();
}

void protocol witness for Encodable.encode(to:) in conformance RemoteControlRequest()
{
  RemoteControlRequest.encode(to:)();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance RemoteControlRequest()
{
  Hasher.init(_seed:)();
  type metadata accessor for UUID();
  _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  dispatch thunk of Hashable.hash(into:)();
  type metadata accessor for Date();
  _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type Date and conformance Date, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  dispatch thunk of Hashable.hash(into:)();
  return Hasher._finalize()();
}

uint64_t RemoteControlResponse.requestUUID.getter@<X0>(uint64_t a1@<X8>)
{
  return RemoteControlRequest.date.getter(type metadata accessor for RemoteControlResponse, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0998], a1);
}

uint64_t RemoteControlRequest.date.getter@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;

  v6 = v3 + *(int *)(a1(0) + 20);
  v7 = a2(0);
  return OUTLINED_FUNCTION_53_5(a3, v6, v7, *(uint64_t (**)(void))(*(_QWORD *)(v7 - 8) + 16));
}

uint64_t type metadata accessor for RemoteControlResponse(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for RemoteControlResponse);
}

uint64_t RemoteControlResponse.date.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_32_16();
  OUTLINED_FUNCTION_33();
  v0 = OUTLINED_FUNCTION_70_2();
  return OUTLINED_FUNCTION_31_0(v0, v1, v2, v3);
}

uint64_t RemoteControlResponse.allowControl.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(OUTLINED_FUNCTION_32_16() + 28));
}

void RemoteControlResponse.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_33_0();
  _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  OUTLINED_FUNCTION_40_15();
  v1 = OUTLINED_FUNCTION_32_16();
  OUTLINED_FUNCTION_40_15();
  OUTLINED_FUNCTION_33();
  _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type Date and conformance Date, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  OUTLINED_FUNCTION_27_15();
  Hasher._combine(_:)(*(_BYTE *)(v0 + *(int *)(v1 + 28)));
  OUTLINED_FUNCTION_91();
}

void static RemoteControlResponse.== infix(_:_:)()
{
  uint64_t v0;

  if ((OUTLINED_FUNCTION_69_2() & 1) != 0)
  {
    v0 = OUTLINED_FUNCTION_32_16();
    OUTLINED_FUNCTION_92_0(v0);
    if ((static UUID.== infix(_:_:)() & 1) != 0)
      static Date.== infix(_:_:)();
  }
  OUTLINED_FUNCTION_18();
}

uint64_t RemoteControlResponse.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v9;

  v2 = a1 == 1684632949 && a2 == 0xE400000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x5574736575716572 && a2 == 0xEB00000000444955;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 1702125924 && a2 == 0xE400000000000000;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x6E6F43776F6C6C61 && a2 == 0xEC0000006C6F7274)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if ((v9 & 1) != 0)
          return 3;
        else
          return 4;
      }
    }
  }
}

uint64_t RemoteControlResponse.CodingKeys.init(intValue:)()
{
  return 4;
}

uint64_t RemoteControlResponse.CodingKeys.stringValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BD0C02B4 + 4 * byte_1BD64805C[a1]))(1684632949, 0xE400000000000000);
}

uint64_t sub_1BD0C02B4()
{
  return 0x5574736575716572;
}

uint64_t sub_1BD0C02D4()
{
  return 1702125924;
}

uint64_t sub_1BD0C02E0()
{
  return 0x6E6F43776F6C6C61;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance RemoteControlResponse.CodingKeys()
{
  unsigned __int8 *v0;

  return RemoteControlResponse.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance RemoteControlResponse.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = RemoteControlResponse.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CodingKey.init(intValue:) in conformance RemoteControlResponse.CodingKeys@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = RemoteControlResponse.CodingKeys.init(intValue:)();
  *a1 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance RemoteControlResponse.CodingKeys()
{
  lazy protocol witness table accessor for type RemoteControlResponse.CodingKeys and conformance RemoteControlResponse.CodingKeys();
  return CodingKey.description.getter();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance RemoteControlResponse.CodingKeys()
{
  lazy protocol witness table accessor for type RemoteControlResponse.CodingKeys and conformance RemoteControlResponse.CodingKeys();
  return CodingKey.debugDescription.getter();
}

void RemoteControlResponse.encode(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, char a11, char a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;

  OUTLINED_FUNCTION_35_9();
  a23 = v25;
  a24 = v26;
  OUTLINED_FUNCTION_84_2();
  v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<RemoteControlResponse.CodingKeys>);
  v28 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v30 = (char *)&a9 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_49_12();
  lazy protocol witness table accessor for type RemoteControlResponse.CodingKeys and conformance RemoteControlResponse.CodingKeys();
  OUTLINED_FUNCTION_29_18();
  a14 = 0;
  OUTLINED_FUNCTION_33_0();
  _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09B8]);
  OUTLINED_FUNCTION_13_34();
  if (!v24)
  {
    OUTLINED_FUNCTION_32_16();
    a13 = 1;
    OUTLINED_FUNCTION_13_34();
    a12 = 2;
    OUTLINED_FUNCTION_33();
    _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type Date and conformance Date, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
    OUTLINED_FUNCTION_13_34();
    a11 = 3;
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  OUTLINED_FUNCTION_39_0((uint64_t)v30, *(uint64_t (**)(uint64_t, uint64_t))(v28 + 8));
  OUTLINED_FUNCTION_1_29();
}

unint64_t lazy protocol witness table accessor for type RemoteControlResponse.CodingKeys and conformance RemoteControlResponse.CodingKeys()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type RemoteControlResponse.CodingKeys and conformance RemoteControlResponse.CodingKeys;
  if (!lazy protocol witness table cache variable for type RemoteControlResponse.CodingKeys and conformance RemoteControlResponse.CodingKeys)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for RemoteControlResponse.CodingKeys, &unk_1E761A118);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RemoteControlResponse.CodingKeys and conformance RemoteControlResponse.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type RemoteControlResponse.CodingKeys and conformance RemoteControlResponse.CodingKeys;
  if (!lazy protocol witness table cache variable for type RemoteControlResponse.CodingKeys and conformance RemoteControlResponse.CodingKeys)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for RemoteControlResponse.CodingKeys, &unk_1E761A118);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RemoteControlResponse.CodingKeys and conformance RemoteControlResponse.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type RemoteControlResponse.CodingKeys and conformance RemoteControlResponse.CodingKeys;
  if (!lazy protocol witness table cache variable for type RemoteControlResponse.CodingKeys and conformance RemoteControlResponse.CodingKeys)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for RemoteControlResponse.CodingKeys, &unk_1E761A118);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RemoteControlResponse.CodingKeys and conformance RemoteControlResponse.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type RemoteControlResponse.CodingKeys and conformance RemoteControlResponse.CodingKeys;
  if (!lazy protocol witness table cache variable for type RemoteControlResponse.CodingKeys and conformance RemoteControlResponse.CodingKeys)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for RemoteControlResponse.CodingKeys, &unk_1E761A118);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RemoteControlResponse.CodingKeys and conformance RemoteControlResponse.CodingKeys);
  }
  return result;
}

Swift::Int RemoteControlResponse.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_5_1();
  OUTLINED_FUNCTION_33_0();
  _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  OUTLINED_FUNCTION_79_3();
  v1 = OUTLINED_FUNCTION_32_16();
  OUTLINED_FUNCTION_79_3();
  OUTLINED_FUNCTION_33();
  _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type Date and conformance Date, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  OUTLINED_FUNCTION_91_1();
  Hasher._combine(_:)(*(_BYTE *)(v0 + *(int *)(v1 + 28)));
  return OUTLINED_FUNCTION_4_6();
}

void RemoteControlResponse.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, char *, uint64_t);
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;

  OUTLINED_FUNCTION_35_9();
  v34 = (_QWORD *)v1;
  v4 = v3;
  v26 = v5;
  v6 = OUTLINED_FUNCTION_33();
  v27 = *(_QWORD *)(v6 - 8);
  v28 = v6;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_62_5(v8, v24);
  v9 = OUTLINED_FUNCTION_33_0();
  v10 = *(_QWORD *)(v9 - 8);
  v29 = v9;
  v30 = v10;
  OUTLINED_FUNCTION_10_1();
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v31 = (char *)&v24 - v15;
  v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<RemoteControlResponse.CodingKeys>);
  v16 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  OUTLINED_FUNCTION_30_6();
  v17 = OUTLINED_FUNCTION_32_16();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v18);
  OUTLINED_FUNCTION_81();
  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  lazy protocol witness table accessor for type RemoteControlResponse.CodingKeys and conformance RemoteControlResponse.CodingKeys();
  v32 = v0;
  v19 = (uint64_t)v34;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v19)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
  }
  else
  {
    v25 = v16;
    v20 = v30;
    v34 = v4;
    _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09E0]);
    v21 = v29;
    OUTLINED_FUNCTION_78_4();
    v22 = *(void (**)(uint64_t, char *, uint64_t))(v20 + 32);
    v22(v2, v31, v21);
    OUTLINED_FUNCTION_78_4();
    v22(v2 + *(int *)(v17 + 20), v14, v21);
    _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type Date and conformance Date, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    v31 = (char *)v17;
    OUTLINED_FUNCTION_112_2(v2 + *(int *)(v17 + 24), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v27 + 32));
    v23 = KeyedDecodingContainer.decode(_:forKey:)();
    OUTLINED_FUNCTION_30_22(v25);
    *(_BYTE *)(v2 + *((int *)v31 + 7)) = v23 & 1;
    OUTLINED_FUNCTION_95_1(v2, v26);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
    OUTLINED_FUNCTION_99_0(v2);
  }
  OUTLINED_FUNCTION_1_29();
}

uint64_t RemoteControlResponse.init(uuid:requestUUID:date:allowControl:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W3>, uint64_t a4@<X8>)
{
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t result;

  v8 = OUTLINED_FUNCTION_33_0();
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32);
  v9(a4, a1, v8);
  v10 = OUTLINED_FUNCTION_32_16();
  v9(a4 + *(int *)(v10 + 20), a2, v8);
  v11 = OUTLINED_FUNCTION_33();
  result = OUTLINED_FUNCTION_23_25(v11);
  *(_BYTE *)(a4 + *(int *)(v10 + 28)) = a3;
  return result;
}

void protocol witness for Decodable.init(from:) in conformance RemoteControlResponse()
{
  RemoteControlResponse.init(from:)();
}

#error "1BD0C0A1C: call analysis failed (funcsize=5)"

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance RemoteControlResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  Hasher.init(_seed:)();
  type metadata accessor for UUID();
  _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  dispatch thunk of Hashable.hash(into:)();
  dispatch thunk of Hashable.hash(into:)();
  type metadata accessor for Date();
  _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type Date and conformance Date, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  dispatch thunk of Hashable.hash(into:)();
  Hasher._combine(_:)(*(_BYTE *)(v2 + *(int *)(a2 + 28)));
  return Hasher._finalize()();
}

uint64_t RemoteControlSuspensionReason.init(from:)@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  char v6;
  _QWORD v8[4];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  OUTLINED_FUNCTION_111_2();
  dispatch thunk of Decoder.singleValueContainer()();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v8, v8[3]);
    OUTLINED_FUNCTION_111_2();
    v5 = dispatch thunk of SingleValueDecodingContainer.decode(_:)();
    if (v5 == 2)
      v6 = 2;
    else
      v6 = v5 == 1;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
    *a2 = v6;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t protocol witness for Decodable.init(from:) in conformance RemoteControlSuspensionReason@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  return RemoteControlSuspensionReason.init(from:)(a1, a2);
}

uint64_t protocol witness for Encodable.encode(to:) in conformance RemoteControlSuspensionReason()
{
  lazy protocol witness table accessor for type RemoteControlSuspensionReason and conformance RemoteControlSuspensionReason();
  return RawRepresentable<>.encode(to:)();
}

uint64_t RemoteControlRequest.uuid.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_33_0();
  v0 = OUTLINED_FUNCTION_70_2();
  return OUTLINED_FUNCTION_31_0(v0, v1, v2, v3);
}

uint64_t RemoteControlSuspendRequest.date.getter@<X0>(uint64_t a1@<X8>)
{
  return RemoteControlRequest.date.getter(type metadata accessor for RemoteControlSuspendRequest, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0870], a1);
}

uint64_t type metadata accessor for RemoteControlSuspendRequest(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for RemoteControlSuspendRequest);
}

void RemoteControlSuspendRequest.reason.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_55_10() + 24));
  OUTLINED_FUNCTION_0();
}

void RemoteControlSuspendRequest.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_33_0();
  _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  OUTLINED_FUNCTION_41_14();
  v1 = OUTLINED_FUNCTION_55_10();
  OUTLINED_FUNCTION_33();
  _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type Date and conformance Date, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  dispatch thunk of Hashable.hash(into:)();
  Hasher._combine(_:)(*(unsigned __int8 *)(v0 + *(int *)(v1 + 24)));
  OUTLINED_FUNCTION_91();
}

void static RemoteControlSuspendRequest.== infix(_:_:)()
{
  uint64_t v0;

  if ((OUTLINED_FUNCTION_69_2() & 1) != 0)
  {
    v0 = type metadata accessor for RemoteControlSuspendRequest(0);
    OUTLINED_FUNCTION_92_0(v0);
    static Date.== infix(_:_:)();
  }
  OUTLINED_FUNCTION_18();
}

uint64_t RemoteControlSuspendRequest.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 1684632949 && a2 == 0xE400000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 1702125924 && a2 == 0xE400000000000000;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x6E6F73616572 && a2 == 0xE600000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t RemoteControlSuspendRequest.CodingKeys.init(intValue:)()
{
  return 3;
}

uint64_t RemoteControlSuspendRequest.CodingKeys.stringValue.getter(char a1)
{
  if (!a1)
    return 1684632949;
  if (a1 == 1)
    return 1702125924;
  return 0x6E6F73616572;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance RemoteControlSuspendRequest.CodingKeys()
{
  char *v0;

  return RemoteControlSuspendRequest.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance RemoteControlSuspendRequest.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = RemoteControlSuspendRequest.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CodingKey.init(intValue:) in conformance RemoteControlSuspendRequest.CodingKeys@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = RemoteControlSuspendRequest.CodingKeys.init(intValue:)();
  *a1 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance RemoteControlSuspendRequest.CodingKeys()
{
  lazy protocol witness table accessor for type RemoteControlSuspendRequest.CodingKeys and conformance RemoteControlSuspendRequest.CodingKeys();
  return CodingKey.description.getter();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance RemoteControlSuspendRequest.CodingKeys()
{
  lazy protocol witness table accessor for type RemoteControlSuspendRequest.CodingKeys and conformance RemoteControlSuspendRequest.CodingKeys();
  return CodingKey.debugDescription.getter();
}

void RemoteControlSuspendRequest.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  _BYTE v7[16];

  OUTLINED_FUNCTION_84_2();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<RemoteControlSuspendRequest.CodingKeys>);
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x1E0C80A78](v3);
  v5 = &v7[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  OUTLINED_FUNCTION_49_12();
  lazy protocol witness table accessor for type RemoteControlSuspendRequest.CodingKeys and conformance RemoteControlSuspendRequest.CodingKeys();
  OUTLINED_FUNCTION_29_18();
  v7[15] = 0;
  OUTLINED_FUNCTION_33_0();
  _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09B8]);
  OUTLINED_FUNCTION_13_34();
  if (!v0)
  {
    v6 = OUTLINED_FUNCTION_55_10();
    v7[14] = 1;
    OUTLINED_FUNCTION_33();
    _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type Date and conformance Date, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
    OUTLINED_FUNCTION_100_1();
    OUTLINED_FUNCTION_13_34();
    v7[13] = *(_BYTE *)(v1 + *(int *)(v6 + 24));
    v7[12] = 2;
    lazy protocol witness table accessor for type RemoteControlSuspensionReason and conformance RemoteControlSuspensionReason();
    OUTLINED_FUNCTION_13_34();
  }
  OUTLINED_FUNCTION_39_0((uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_58_12();
}

Swift::Int RemoteControlSuspendRequest.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_5_1();
  OUTLINED_FUNCTION_33_0();
  _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  OUTLINED_FUNCTION_91_1();
  v1 = type metadata accessor for RemoteControlSuspendRequest(0);
  OUTLINED_FUNCTION_33();
  _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type Date and conformance Date, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  OUTLINED_FUNCTION_41_14();
  Hasher._combine(_:)(*(unsigned __int8 *)(v0 + *(int *)(v1 + 24)));
  return OUTLINED_FUNCTION_4_6();
}

void RemoteControlSuspendRequest.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, char a11, char a12)
{
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  OUTLINED_FUNCTION_35_9();
  v15 = v14;
  v23 = v16;
  v24 = *(_QWORD *)(OUTLINED_FUNCTION_33() - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_41();
  v25 = OUTLINED_FUNCTION_33_0();
  v18 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  OUTLINED_FUNCTION_60_6(v19, v22);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<RemoteControlSuspendRequest.CodingKeys>);
  MEMORY[0x1E0C80A78](v27);
  OUTLINED_FUNCTION_83_4();
  v20 = OUTLINED_FUNCTION_55_10();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v21);
  OUTLINED_FUNCTION_0_7();
  __swift_project_boxed_opaque_existential_1(v15, v15[3]);
  lazy protocol witness table accessor for type RemoteControlSuspendRequest.CodingKeys and conformance RemoteControlSuspendRequest.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v12)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  }
  else
  {
    _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09E0]);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))(v13, v26, v25);
    _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type Date and conformance Date, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    OUTLINED_FUNCTION_112_2(v13 + *(int *)(v20 + 20), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 32));
    lazy protocol witness table accessor for type RemoteControlSuspensionReason and conformance RemoteControlSuspensionReason();
    OUTLINED_FUNCTION_43_14();
    OUTLINED_FUNCTION_42_13();
    *(_BYTE *)(v13 + *(int *)(v20 + 24)) = a12;
    OUTLINED_FUNCTION_95_1(v13, v23);
    __swift_destroy_boxed_opaque_existential_1(0);
    OUTLINED_FUNCTION_99_0(v13);
  }
  OUTLINED_FUNCTION_1_29();
}

void RemoteControlSuspendRequest.init(uuid:date:reason:)(uint64_t a1@<X1>, char *a2@<X2>, uint64_t a3@<X8>)
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *a2;
  v6 = OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_23_25(v6);
  v7 = OUTLINED_FUNCTION_55_10();
  v8 = a3 + *(int *)(v7 + 20);
  v9 = OUTLINED_FUNCTION_33();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8, a1, v9);
  *(_BYTE *)(a3 + *(int *)(v7 + 24)) = v5;
  OUTLINED_FUNCTION_91();
}

void protocol witness for Decodable.init(from:) in conformance RemoteControlSuspendRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  _BYTE vars8[6];

  RemoteControlSuspendRequest.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, *(int *)vars8, vars8[4], vars8[5]);
}

void protocol witness for Encodable.encode(to:) in conformance RemoteControlSuspendRequest()
{
  RemoteControlSuspendRequest.encode(to:)();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance RemoteControlSuspendRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  Hasher.init(_seed:)();
  type metadata accessor for UUID();
  _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  dispatch thunk of Hashable.hash(into:)();
  type metadata accessor for Date();
  _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type Date and conformance Date, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  dispatch thunk of Hashable.hash(into:)();
  Hasher._combine(_:)(*(unsigned __int8 *)(v2 + *(int *)(a2 + 24)));
  return Hasher._finalize()();
}

void RemoteControlMessage.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD);
  char *v8;

  OUTLINED_FUNCTION_55_10();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_0_7();
  OUTLINED_FUNCTION_32_16();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v3);
  v4 = OUTLINED_FUNCTION_63_3();
  type metadata accessor for RemoteControlRequest(v4);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v5);
  type metadata accessor for RemoteControlMessage(0);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_83_4();
  outlined init with copy of ConversationControlsAppLaunchButtonType(v0, v1, v7);
  v8 = (char *)sub_1BD0C16E4 + 4 * byte_1BD648060[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_1BD0C16E4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_26_15();
  OUTLINED_FUNCTION_57(0);
  OUTLINED_FUNCTION_33_0();
  _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  dispatch thunk of Hashable.hash(into:)();
  OUTLINED_FUNCTION_33();
  _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type Date and conformance Date, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  OUTLINED_FUNCTION_27_15();
  outlined destroy of RemoteControlRequest(v0, type metadata accessor for RemoteControlRequest);
}

void sub_1BD0C1910()
{
  OUTLINED_FUNCTION_57(6uLL);
  JUMPOUT(0x1BD0C18F0);
}

void static RemoteControlMessage.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27[10];
  uint64_t v28;
  uint64_t v29;

  v28 = a1;
  v29 = a2;
  v27[2] = OUTLINED_FUNCTION_55_10();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_60_6(v4, v27[0]);
  v27[3] = OUTLINED_FUNCTION_32_16();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v5);
  v27[5] = (uint64_t)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = OUTLINED_FUNCTION_56_7();
  v27[9] = type metadata accessor for RemoteControlRequest(v7);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_5_27();
  v27[4] = v9;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v10);
  v27[7] = (uint64_t)v27 - v11;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v12);
  v27[6] = (uint64_t)v27 - v13;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v14);
  v27[1] = (uint64_t)v27 - v15;
  v16 = OUTLINED_FUNCTION_56_7();
  type metadata accessor for RemoteControlMessage(v16);
  OUTLINED_FUNCTION_10_1();
  v18 = MEMORY[0x1E0C80A78](v17);
  MEMORY[0x1E0C80A78](v18);
  OUTLINED_FUNCTION_112();
  v20 = MEMORY[0x1E0C80A78](v19);
  MEMORY[0x1E0C80A78](v20);
  OUTLINED_FUNCTION_108_0();
  MEMORY[0x1E0C80A78](v21);
  OUTLINED_FUNCTION_104_1();
  MEMORY[0x1E0C80A78](v22);
  OUTLINED_FUNCTION_85_2();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (RemoteControlMessage, RemoteControlMessage));
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v23);
  OUTLINED_FUNCTION_30_6();
  v25 = v2 + *(int *)(v24 + 48);
  outlined init with copy of ConversationControlsAppLaunchButtonType(v28, v2, type metadata accessor for RemoteControlMessage);
  outlined init with copy of ConversationControlsAppLaunchButtonType(v29, v25, type metadata accessor for RemoteControlMessage);
  v26 = (char *)sub_1BD0C1B1C + 4 * byte_1BD648067[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BD0C1B1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  outlined init with copy of ConversationControlsAppLaunchButtonType(v0, v2, type metadata accessor for RemoteControlMessage);
  if (OUTLINED_FUNCTION_16_21())
  {
    outlined destroy of RemoteControlRequest(v2, type metadata accessor for RemoteControlRequest);
    outlined destroy of (RemoteControlMessage, RemoteControlMessage)(v0);
  }
  else
  {
    OUTLINED_FUNCTION_74_1(v1, v3, type metadata accessor for RemoteControlRequest);
    if ((OUTLINED_FUNCTION_73_3() & 1) != 0)
    {
      OUTLINED_FUNCTION_110_1();
      if ((OUTLINED_FUNCTION_66_6() & 1) != 0)
      {
        OUTLINED_FUNCTION_6_31();
        OUTLINED_FUNCTION_14_21(v2);
        outlined destroy of RemoteControlRequest(v0, type metadata accessor for RemoteControlMessage);
        return 1;
      }
    }
    OUTLINED_FUNCTION_6_31();
    OUTLINED_FUNCTION_14_21(v2);
    outlined destroy of RemoteControlRequest(v0, type metadata accessor for RemoteControlMessage);
  }
  return 0;
}

void RemoteControlMessage.CodingKeys.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
  Hasher._combine(_:)(a2);
}

uint64_t RemoteControlMessage.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  char v11;

  v2 = a1 == 0x74736575716572 && a2 == 0xE700000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x65736E6F70736572 && a2 == 0xE800000000000000;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x65526C65636E6163 && a2 == 0xED00007473657571;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x72746E6F43646E65 && a2 == 0xEA00000000006C6FLL;
        if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x43646E6570737573 && a2 == 0xEE006C6F72746E6FLL;
          if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            v10 = a1 == 0x6F43656D75736572 && a2 == 0xED00006C6F72746ELL;
            if (v10 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else if (a1 == 0xD000000000000015 && a2 == 0x80000001BD671A50)
            {
              swift_bridgeObjectRelease();
              return 6;
            }
            else
            {
              v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
              swift_bridgeObjectRelease();
              if ((v11 & 1) != 0)
                return 6;
              else
                return 7;
            }
          }
        }
      }
    }
  }
}

uint64_t RemoteControlMessage.CodingKeys.init(intValue:)()
{
  return 7;
}

uint64_t RemoteControlMessage.CodingKeys.stringValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BD0C22E4 + 4 * byte_1BD64806E[a1]))(0x74736575716572, 0xE700000000000000);
}

uint64_t sub_1BD0C22E4()
{
  return 0x65736E6F70736572;
}

uint64_t sub_1BD0C22FC()
{
  return 0x65526C65636E6163;
}

uint64_t sub_1BD0C2320()
{
  return 0x72746E6F43646E65;
}

uint64_t sub_1BD0C233C()
{
  return 0x43646E6570737573;
}

uint64_t sub_1BD0C2360()
{
  return 0x6F43656D75736572;
}

unint64_t sub_1BD0C2384()
{
  return 0xD000000000000015;
}

void RemoteControlMessage.EndControlCodingKeys.hash(into:)()
{
  Hasher._combine(_:)(0);
}

uint64_t RemoteControlMessage.EndControlCodingKeys.stringValue.getter()
{
  return 12383;
}

uint64_t RemoteControlMessage.PlaybackServerMessageCodingKeys.init(stringValue:)()
{
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t RemoteControlMessage.CancelRequestCodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

void RemoteControlMessage.CancelRequestCodingKeys.hashValue.getter()
{
  OUTLINED_FUNCTION_5_1();
  OUTLINED_FUNCTION_94_0();
  OUTLINED_FUNCTION_4_6();
  OUTLINED_FUNCTION_2();
}

void protocol witness for Hashable.hashValue.getter in conformance RemoteControlMessage.CancelRequestCodingKeys()
{
  RemoteControlMessage.CancelRequestCodingKeys.hashValue.getter();
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance RemoteControlMessage.CancelRequestCodingKeys()
{
  lazy protocol witness table accessor for type RemoteControlMessage.CancelRequestCodingKeys and conformance RemoteControlMessage.CancelRequestCodingKeys();
  return CodingKey.description.getter();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance RemoteControlMessage.CancelRequestCodingKeys()
{
  lazy protocol witness table accessor for type RemoteControlMessage.CancelRequestCodingKeys and conformance RemoteControlMessage.CancelRequestCodingKeys();
  return CodingKey.debugDescription.getter();
}

void protocol witness for Hashable.hashValue.getter in conformance RemoteControlMessage.CodingKeys()
{
  unsigned __int8 *v0;

  ConversationControlsContext.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance RemoteControlMessage.CodingKeys(uint64_t a1)
{
  unsigned __int8 *v1;

  RemoteControlMessage.CodingKeys.hash(into:)(a1, *v1);
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance RemoteControlMessage.CodingKeys()
{
  unsigned __int8 *v0;

  return RemoteControlMessage.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance RemoteControlMessage.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = RemoteControlMessage.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CodingKey.init(intValue:) in conformance RemoteControlMessage.CodingKeys@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = RemoteControlMessage.CodingKeys.init(intValue:)();
  *a1 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance RemoteControlMessage.CodingKeys()
{
  lazy protocol witness table accessor for type RemoteControlMessage.CodingKeys and conformance RemoteControlMessage.CodingKeys();
  return CodingKey.description.getter();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance RemoteControlMessage.CodingKeys()
{
  lazy protocol witness table accessor for type RemoteControlMessage.CodingKeys and conformance RemoteControlMessage.CodingKeys();
  return CodingKey.debugDescription.getter();
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance RemoteControlMessage.EndControlCodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = RemoteControlMessage.CancelRequestCodingKeys.init(stringValue:)(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance RemoteControlMessage.EndControlCodingKeys()
{
  lazy protocol witness table accessor for type RemoteControlMessage.EndControlCodingKeys and conformance RemoteControlMessage.EndControlCodingKeys();
  return CodingKey.description.getter();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance RemoteControlMessage.EndControlCodingKeys()
{
  lazy protocol witness table accessor for type RemoteControlMessage.EndControlCodingKeys and conformance RemoteControlMessage.EndControlCodingKeys();
  return CodingKey.debugDescription.getter();
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance RemoteControlMessage.PlaybackServerMessageCodingKeys@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = RemoteControlMessage.PlaybackServerMessageCodingKeys.init(stringValue:)();
  *a1 = result & 1;
  return result;
}

uint64_t protocol witness for CodingKey.intValue.getter in conformance RemoteControlMessage.PlaybackServerMessageCodingKeys()
{
  return protocol witness for ParticipantVideoProvider.token.getter in conformance TUVideoDeviceController();
}

uint64_t protocol witness for CodingKey.init(intValue:) in conformance RemoteControlMessage.PlaybackServerMessageCodingKeys@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = OUTLINED_FUNCTION_6_4();
  *a1 = result & 1;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance RemoteControlMessage.PlaybackServerMessageCodingKeys()
{
  lazy protocol witness table accessor for type RemoteControlMessage.PlaybackServerMessageCodingKeys and conformance RemoteControlMessage.PlaybackServerMessageCodingKeys();
  return CodingKey.description.getter();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance RemoteControlMessage.PlaybackServerMessageCodingKeys()
{
  lazy protocol witness table accessor for type RemoteControlMessage.PlaybackServerMessageCodingKeys and conformance RemoteControlMessage.PlaybackServerMessageCodingKeys();
  return CodingKey.debugDescription.getter();
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance RemoteControlMessage.RequestCodingKeys()
{
  lazy protocol witness table accessor for type RemoteControlMessage.RequestCodingKeys and conformance RemoteControlMessage.RequestCodingKeys();
  return CodingKey.description.getter();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance RemoteControlMessage.RequestCodingKeys()
{
  lazy protocol witness table accessor for type RemoteControlMessage.RequestCodingKeys and conformance RemoteControlMessage.RequestCodingKeys();
  return CodingKey.debugDescription.getter();
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance RemoteControlMessage.ResponseCodingKeys()
{
  lazy protocol witness table accessor for type RemoteControlMessage.ResponseCodingKeys and conformance RemoteControlMessage.ResponseCodingKeys();
  return CodingKey.description.getter();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance RemoteControlMessage.ResponseCodingKeys()
{
  lazy protocol witness table accessor for type RemoteControlMessage.ResponseCodingKeys and conformance RemoteControlMessage.ResponseCodingKeys();
  return CodingKey.debugDescription.getter();
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance RemoteControlMessage.ResumeControlCodingKeys()
{
  lazy protocol witness table accessor for type RemoteControlMessage.ResumeControlCodingKeys and conformance RemoteControlMessage.ResumeControlCodingKeys();
  return CodingKey.description.getter();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance RemoteControlMessage.ResumeControlCodingKeys()
{
  lazy protocol witness table accessor for type RemoteControlMessage.ResumeControlCodingKeys and conformance RemoteControlMessage.ResumeControlCodingKeys();
  return CodingKey.debugDescription.getter();
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance RemoteControlMessage.CancelRequestCodingKeys()
{
  Hasher.init(_seed:)();
  OUTLINED_FUNCTION_94_0();
  OUTLINED_FUNCTION_4_6();
  OUTLINED_FUNCTION_2();
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance RemoteControlMessage.SuspendControlCodingKeys()
{
  lazy protocol witness table accessor for type RemoteControlMessage.SuspendControlCodingKeys and conformance RemoteControlMessage.SuspendControlCodingKeys();
  return CodingKey.description.getter();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance RemoteControlMessage.SuspendControlCodingKeys()
{
  lazy protocol witness table accessor for type RemoteControlMessage.SuspendControlCodingKeys and conformance RemoteControlMessage.SuspendControlCodingKeys();
  return CodingKey.debugDescription.getter();
}

void RemoteControlMessage.encode(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59[9];
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;

  OUTLINED_FUNCTION_35_9();
  a19 = v20;
  a20 = v21;
  v23 = v22;
  v74 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<RemoteControlMessage.PlaybackServerMessageCodingKeys>);
  v72 = *(_QWORD *)(v74 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v24);
  OUTLINED_FUNCTION_41();
  v70 = v25;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<RemoteControlMessage.ResumeControlCodingKeys>);
  v75 = *(_QWORD *)(v26 - 8);
  v76 = v26;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v27);
  OUTLINED_FUNCTION_61_6(v28, v59[0]);
  v73 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<RemoteControlMessage.SuspendControlCodingKeys>);
  v71 = *(_QWORD *)(v73 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v29);
  OUTLINED_FUNCTION_41();
  v69 = v30;
  v31 = OUTLINED_FUNCTION_56_7();
  v66 = type metadata accessor for RemoteControlSuspendRequest(v31);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v32);
  OUTLINED_FUNCTION_41();
  v68 = v33;
  v67 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<RemoteControlMessage.EndControlCodingKeys>);
  v65 = *(_QWORD *)(v67 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v34);
  OUTLINED_FUNCTION_41();
  v64 = v35;
  v63 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<RemoteControlMessage.CancelRequestCodingKeys>);
  v62 = *(_QWORD *)(v63 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v36);
  OUTLINED_FUNCTION_41();
  v61 = v37;
  v60 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<RemoteControlMessage.ResponseCodingKeys>);
  v59[8] = *(_QWORD *)(v60 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v38);
  OUTLINED_FUNCTION_41();
  v59[7] = v39;
  v40 = OUTLINED_FUNCTION_56_7();
  v41 = type metadata accessor for RemoteControlResponse(v40);
  OUTLINED_FUNCTION_96_2(v41, (uint64_t)&a12);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v42);
  OUTLINED_FUNCTION_41();
  v59[6] = v43;
  v44 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<RemoteControlMessage.RequestCodingKeys>);
  OUTLINED_FUNCTION_96_2(v44, (uint64_t)&a11);
  v59[3] = v45;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v46);
  OUTLINED_FUNCTION_41();
  v59[1] = v47;
  v48 = OUTLINED_FUNCTION_56_7();
  v77 = type metadata accessor for RemoteControlRequest(v48);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v49);
  OUTLINED_FUNCTION_5_27();
  v59[2] = v50;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v51);
  OUTLINED_FUNCTION_104_1();
  MEMORY[0x1E0C80A78](v52);
  OUTLINED_FUNCTION_112();
  MEMORY[0x1E0C80A78](v53);
  OUTLINED_FUNCTION_85_2();
  type metadata accessor for RemoteControlMessage(0);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v54);
  v56 = (char *)v59 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<RemoteControlMessage.CodingKeys>);
  v78 = *(_QWORD *)(v79 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v57);
  OUTLINED_FUNCTION_30_6();
  __swift_project_boxed_opaque_existential_1(v23, v23[3]);
  lazy protocol witness table accessor for type RemoteControlMessage.CodingKeys and conformance RemoteControlMessage.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  outlined init with copy of ConversationControlsAppLaunchButtonType(v80, (uint64_t)v56, type metadata accessor for RemoteControlMessage);
  v58 = (char *)sub_1BD0C2B6C + 4 * byte_1BD648075[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_1BD0C2B6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  outlined init with take of StagedCollaboration(v0, v1, type metadata accessor for RemoteControlRequest);
  *(_BYTE *)(v2 - 71) = 0;
  lazy protocol witness table accessor for type RemoteControlMessage.RequestCodingKeys and conformance RemoteControlMessage.RequestCodingKeys();
  v3 = *(_QWORD *)(v2 - 120);
  v4 = *(_QWORD *)(v2 - 112);
  KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
  _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type RemoteControlRequest and conformance RemoteControlRequest, type metadata accessor for RemoteControlRequest, (uint64_t)&protocol conformance descriptor for RemoteControlRequest);
  OUTLINED_FUNCTION_48_12();
  OUTLINED_FUNCTION_75_5(v2 - 72);
  outlined destroy of RemoteControlRequest(v1, type metadata accessor for RemoteControlRequest);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 128) + 8))(v3, v4);
  OUTLINED_FUNCTION_1_29();
}

void sub_1BD0C2F40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_106_0();
  v1 = *(_QWORD *)(v0 - 200);
  v2 = *(_QWORD *)(v0 - 120);
  KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 - 184) + 8))(v1, *(_QWORD *)(v0 - 168));
  OUTLINED_FUNCTION_39_0(v2, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 128) + 8));
  JUMPOUT(0x1BD0C2F30);
}

void RemoteControlMessage.hashValue.getter()
{
  OUTLINED_FUNCTION_5_1();
  RemoteControlMessage.hash(into:)();
  OUTLINED_FUNCTION_4_6();
  OUTLINED_FUNCTION_2();
}

void RemoteControlMessage.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t *v81;
  uint64_t v82[11];
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  char *v103;

  OUTLINED_FUNCTION_35_9();
  a19 = v24;
  a20 = v25;
  v103 = v20;
  v27 = v26;
  v97 = v28;
  v89 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<RemoteControlMessage.PlaybackServerMessageCodingKeys>);
  v87 = *(_QWORD *)(v89 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v29);
  OUTLINED_FUNCTION_61_6(v30, v82[0]);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<RemoteControlMessage.ResumeControlCodingKeys>);
  v32 = *(_QWORD *)(v31 - 8);
  v91 = v31;
  v92 = v32;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v33);
  OUTLINED_FUNCTION_41();
  v99 = v34;
  v90 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<RemoteControlMessage.SuspendControlCodingKeys>);
  v88 = *(_QWORD *)(v90 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v35);
  OUTLINED_FUNCTION_62_5(v36, v82[0]);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<RemoteControlMessage.EndControlCodingKeys>);
  v85 = *(_QWORD *)(v37 - 8);
  v86 = v37;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v38);
  OUTLINED_FUNCTION_41();
  v96 = v39;
  v40 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<RemoteControlMessage.CancelRequestCodingKeys>);
  OUTLINED_FUNCTION_96_2(v40, (uint64_t)&a18);
  v84 = v41;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v42);
  OUTLINED_FUNCTION_41();
  v95 = v43;
  v83 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<RemoteControlMessage.ResponseCodingKeys>);
  v82[10] = *(_QWORD *)(v83 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v44);
  OUTLINED_FUNCTION_41();
  v94 = v45;
  v46 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<RemoteControlMessage.RequestCodingKeys>);
  OUTLINED_FUNCTION_96_2(v46, (uint64_t)&a14);
  v82[8] = v47;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v48);
  OUTLINED_FUNCTION_41();
  v93 = v49;
  v101 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<RemoteControlMessage.CodingKeys>);
  v98 = *(_QWORD *)(v101 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v50);
  v52 = (char *)v82 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = type metadata accessor for RemoteControlMessage(0);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v53);
  OUTLINED_FUNCTION_5_27();
  v82[7] = v54;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v55);
  v82[6] = (uint64_t)v82 - v56;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v57);
  OUTLINED_FUNCTION_112();
  v59 = MEMORY[0x1E0C80A78](v58);
  v61 = (char *)v82 - v60;
  v62 = MEMORY[0x1E0C80A78](v59);
  v64 = (char *)v82 - v63;
  MEMORY[0x1E0C80A78](v62);
  OUTLINED_FUNCTION_108_0();
  MEMORY[0x1E0C80A78](v65);
  OUTLINED_FUNCTION_85_2();
  v66 = v27[3];
  v102 = v27;
  __swift_project_boxed_opaque_existential_1(v27, v66);
  lazy protocol witness table accessor for type RemoteControlMessage.CodingKeys and conformance RemoteControlMessage.CodingKeys();
  v67 = v103;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v67)
  {
    v82[1] = v22;
    v82[3] = (uint64_t)v64;
    v82[2] = (uint64_t)v61;
    v82[4] = v21;
    v68 = v100;
    v82[5] = v23;
    v103 = v52;
    v69 = KeyedDecodingContainer.allKeys.getter();
    v70 = *(_QWORD *)(v69 + 16);
    if (v70)
    {
      v82[0] = 0;
      v71 = *(unsigned __int8 *)(v69 + 32);
      specialized ArraySlice.subscript.getter(1, v70, v69, v69 + 32, 0, (2 * v70) | 1);
      v73 = v72;
      v75 = v74;
      swift_bridgeObjectRelease();
      if (v73 == v75 >> 1)
        __asm { BR              X9 }
    }
    v76 = v101;
    v77 = v103;
    v78 = v98;
    v79 = type metadata accessor for DecodingError();
    swift_allocError();
    v81 = v80;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (@thick Any.Type, DecodingError.Context));
    *v81 = v68;
    KeyedDecodingContainer.codingPath.getter();
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v79 - 8) + 104))(v81, *MEMORY[0x1E0DEC450], v79);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v78 + 8))(v77, v76);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v102);
  OUTLINED_FUNCTION_1_29();
}

void sub_1BD0C3454()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_97_2();
  v2 = *(_QWORD *)(v1 - 112);
  v3 = *(_QWORD *)(v1 - 96);
  OUTLINED_FUNCTION_15_31();
  OUTLINED_FUNCTION_98_0();
  if (v0)
  {
    OUTLINED_FUNCTION_25_24();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 136) + 8))(v3, v2);
    JUMPOUT(0x1BD0C343CLL);
  }
  OUTLINED_FUNCTION_32_16();
  _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type RemoteControlResponse and conformance RemoteControlResponse, type metadata accessor for RemoteControlResponse, (uint64_t)&protocol conformance descriptor for RemoteControlResponse);
  OUTLINED_FUNCTION_70_5();
  OUTLINED_FUNCTION_11_34(*(_QWORD *)(v1 - 288));
  OUTLINED_FUNCTION_25_24();
  (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v1 - 136) + 8))(*(_QWORD *)(v1 - 96), v2);
  v4 = *(_QWORD *)(v1 - 344);
  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_28_21(v4, v5, type metadata accessor for RemoteControlMessage);
  JUMPOUT(0x1BD0C3A2CLL);
}

void sub_1BD0C3670()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_106_0();
  v2 = *(_QWORD *)(v1 - 160);
  v3 = *(_QWORD *)(v1 - 96);
  OUTLINED_FUNCTION_15_31();
  if (v0)
  {
    OUTLINED_FUNCTION_25_24();
    OUTLINED_FUNCTION_39_0(v3, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 136) + 8));
    JUMPOUT(0x1BD0C343CLL);
  }
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 240) + 8))(v2, *(_QWORD *)(v1 - 224));
  OUTLINED_FUNCTION_25_24();
  OUTLINED_FUNCTION_39_0(v3, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 136) + 8));
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x1BD0C3A2CLL);
}

#error "1BD0C3A4C: call analysis failed (funcsize=5)"

#error "1BD0C3A60: call analysis failed (funcsize=5)"

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance RemoteControlMessage()
{
  Hasher.init(_seed:)();
  RemoteControlMessage.hash(into:)();
  return Hasher._finalize()();
}

unint64_t lazy protocol witness table accessor for type RemoteControlSuspendRequest.CodingKeys and conformance RemoteControlSuspendRequest.CodingKeys()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type RemoteControlSuspendRequest.CodingKeys and conformance RemoteControlSuspendRequest.CodingKeys;
  if (!lazy protocol witness table cache variable for type RemoteControlSuspendRequest.CodingKeys and conformance RemoteControlSuspendRequest.CodingKeys)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for RemoteControlSuspendRequest.CodingKeys, &unk_1E761A088);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RemoteControlSuspendRequest.CodingKeys and conformance RemoteControlSuspendRequest.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type RemoteControlSuspendRequest.CodingKeys and conformance RemoteControlSuspendRequest.CodingKeys;
  if (!lazy protocol witness table cache variable for type RemoteControlSuspendRequest.CodingKeys and conformance RemoteControlSuspendRequest.CodingKeys)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for RemoteControlSuspendRequest.CodingKeys, &unk_1E761A088);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RemoteControlSuspendRequest.CodingKeys and conformance RemoteControlSuspendRequest.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type RemoteControlSuspendRequest.CodingKeys and conformance RemoteControlSuspendRequest.CodingKeys;
  if (!lazy protocol witness table cache variable for type RemoteControlSuspendRequest.CodingKeys and conformance RemoteControlSuspendRequest.CodingKeys)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for RemoteControlSuspendRequest.CodingKeys, &unk_1E761A088);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RemoteControlSuspendRequest.CodingKeys and conformance RemoteControlSuspendRequest.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type RemoteControlSuspendRequest.CodingKeys and conformance RemoteControlSuspendRequest.CodingKeys;
  if (!lazy protocol witness table cache variable for type RemoteControlSuspendRequest.CodingKeys and conformance RemoteControlSuspendRequest.CodingKeys)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for RemoteControlSuspendRequest.CodingKeys, &unk_1E761A088);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RemoteControlSuspendRequest.CodingKeys and conformance RemoteControlSuspendRequest.CodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type RemoteControlSuspensionReason and conformance RemoteControlSuspensionReason()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type RemoteControlSuspensionReason and conformance RemoteControlSuspensionReason;
  if (!lazy protocol witness table cache variable for type RemoteControlSuspensionReason and conformance RemoteControlSuspensionReason)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for RemoteControlSuspensionReason, &type metadata for RemoteControlSuspensionReason);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RemoteControlSuspensionReason and conformance RemoteControlSuspensionReason);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type RemoteControlSuspensionReason and conformance RemoteControlSuspensionReason;
  if (!lazy protocol witness table cache variable for type RemoteControlSuspensionReason and conformance RemoteControlSuspensionReason)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for RemoteControlSuspensionReason, &type metadata for RemoteControlSuspensionReason);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RemoteControlSuspensionReason and conformance RemoteControlSuspensionReason);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type RemoteControlSuspensionReason and conformance RemoteControlSuspensionReason;
  if (!lazy protocol witness table cache variable for type RemoteControlSuspensionReason and conformance RemoteControlSuspensionReason)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for RemoteControlSuspensionReason, &type metadata for RemoteControlSuspensionReason);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RemoteControlSuspensionReason and conformance RemoteControlSuspensionReason);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type RemoteControlSuspensionReason and conformance RemoteControlSuspensionReason;
  if (!lazy protocol witness table cache variable for type RemoteControlSuspensionReason and conformance RemoteControlSuspensionReason)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for RemoteControlSuspensionReason, &type metadata for RemoteControlSuspensionReason);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RemoteControlSuspensionReason and conformance RemoteControlSuspensionReason);
  }
  return result;
}

uint64_t type metadata accessor for RemoteControlMessage(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for RemoteControlMessage);
}

uint64_t outlined destroy of (RemoteControlMessage, RemoteControlMessage)(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (RemoteControlMessage, RemoteControlMessage));
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t lazy protocol witness table accessor for type RemoteControlMessage.CodingKeys and conformance RemoteControlMessage.CodingKeys()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type RemoteControlMessage.CodingKeys and conformance RemoteControlMessage.CodingKeys;
  if (!lazy protocol witness table cache variable for type RemoteControlMessage.CodingKeys and conformance RemoteControlMessage.CodingKeys)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for RemoteControlMessage.CodingKeys, &unk_1E7619C78);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RemoteControlMessage.CodingKeys and conformance RemoteControlMessage.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type RemoteControlMessage.CodingKeys and conformance RemoteControlMessage.CodingKeys;
  if (!lazy protocol witness table cache variable for type RemoteControlMessage.CodingKeys and conformance RemoteControlMessage.CodingKeys)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for RemoteControlMessage.CodingKeys, &unk_1E7619C78);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RemoteControlMessage.CodingKeys and conformance RemoteControlMessage.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type RemoteControlMessage.CodingKeys and conformance RemoteControlMessage.CodingKeys;
  if (!lazy protocol witness table cache variable for type RemoteControlMessage.CodingKeys and conformance RemoteControlMessage.CodingKeys)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for RemoteControlMessage.CodingKeys, &unk_1E7619C78);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RemoteControlMessage.CodingKeys and conformance RemoteControlMessage.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type RemoteControlMessage.CodingKeys and conformance RemoteControlMessage.CodingKeys;
  if (!lazy protocol witness table cache variable for type RemoteControlMessage.CodingKeys and conformance RemoteControlMessage.CodingKeys)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for RemoteControlMessage.CodingKeys, &unk_1E7619C78);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RemoteControlMessage.CodingKeys and conformance RemoteControlMessage.CodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type RemoteControlMessage.PlaybackServerMessageCodingKeys and conformance RemoteControlMessage.PlaybackServerMessageCodingKeys()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type RemoteControlMessage.PlaybackServerMessageCodingKeys and conformance RemoteControlMessage.PlaybackServerMessageCodingKeys;
  if (!lazy protocol witness table cache variable for type RemoteControlMessage.PlaybackServerMessageCodingKeys and conformance RemoteControlMessage.PlaybackServerMessageCodingKeys)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for RemoteControlMessage.PlaybackServerMessageCodingKeys, &unk_1E7619FF8);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RemoteControlMessage.PlaybackServerMessageCodingKeys and conformance RemoteControlMessage.PlaybackServerMessageCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type RemoteControlMessage.PlaybackServerMessageCodingKeys and conformance RemoteControlMessage.PlaybackServerMessageCodingKeys;
  if (!lazy protocol witness table cache variable for type RemoteControlMessage.PlaybackServerMessageCodingKeys and conformance RemoteControlMessage.PlaybackServerMessageCodingKeys)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for RemoteControlMessage.PlaybackServerMessageCodingKeys, &unk_1E7619FF8);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RemoteControlMessage.PlaybackServerMessageCodingKeys and conformance RemoteControlMessage.PlaybackServerMessageCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type RemoteControlMessage.PlaybackServerMessageCodingKeys and conformance RemoteControlMessage.PlaybackServerMessageCodingKeys;
  if (!lazy protocol witness table cache variable for type RemoteControlMessage.PlaybackServerMessageCodingKeys and conformance RemoteControlMessage.PlaybackServerMessageCodingKeys)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for RemoteControlMessage.PlaybackServerMessageCodingKeys, &unk_1E7619FF8);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RemoteControlMessage.PlaybackServerMessageCodingKeys and conformance RemoteControlMessage.PlaybackServerMessageCodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type RemoteControlMessage.ResumeControlCodingKeys and conformance RemoteControlMessage.ResumeControlCodingKeys()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type RemoteControlMessage.ResumeControlCodingKeys and conformance RemoteControlMessage.ResumeControlCodingKeys;
  if (!lazy protocol witness table cache variable for type RemoteControlMessage.ResumeControlCodingKeys and conformance RemoteControlMessage.ResumeControlCodingKeys)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for RemoteControlMessage.ResumeControlCodingKeys, &unk_1E7619FD8);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RemoteControlMessage.ResumeControlCodingKeys and conformance RemoteControlMessage.ResumeControlCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type RemoteControlMessage.ResumeControlCodingKeys and conformance RemoteControlMessage.ResumeControlCodingKeys;
  if (!lazy protocol witness table cache variable for type RemoteControlMessage.ResumeControlCodingKeys and conformance RemoteControlMessage.ResumeControlCodingKeys)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for RemoteControlMessage.ResumeControlCodingKeys, &unk_1E7619FD8);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RemoteControlMessage.ResumeControlCodingKeys and conformance RemoteControlMessage.ResumeControlCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type RemoteControlMessage.ResumeControlCodingKeys and conformance RemoteControlMessage.ResumeControlCodingKeys;
  if (!lazy protocol witness table cache variable for type RemoteControlMessage.ResumeControlCodingKeys and conformance RemoteControlMessage.ResumeControlCodingKeys)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for RemoteControlMessage.ResumeControlCodingKeys, &unk_1E7619FD8);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RemoteControlMessage.ResumeControlCodingKeys and conformance RemoteControlMessage.ResumeControlCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type RemoteControlMessage.ResumeControlCodingKeys and conformance RemoteControlMessage.ResumeControlCodingKeys;
  if (!lazy protocol witness table cache variable for type RemoteControlMessage.ResumeControlCodingKeys and conformance RemoteControlMessage.ResumeControlCodingKeys)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for RemoteControlMessage.ResumeControlCodingKeys, &unk_1E7619FD8);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RemoteControlMessage.ResumeControlCodingKeys and conformance RemoteControlMessage.ResumeControlCodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type RemoteControlMessage.SuspendControlCodingKeys and conformance RemoteControlMessage.SuspendControlCodingKeys()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type RemoteControlMessage.SuspendControlCodingKeys and conformance RemoteControlMessage.SuspendControlCodingKeys;
  if (!lazy protocol witness table cache variable for type RemoteControlMessage.SuspendControlCodingKeys and conformance RemoteControlMessage.SuspendControlCodingKeys)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for RemoteControlMessage.SuspendControlCodingKeys, &unk_1E7619F48);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RemoteControlMessage.SuspendControlCodingKeys and conformance RemoteControlMessage.SuspendControlCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type RemoteControlMessage.SuspendControlCodingKeys and conformance RemoteControlMessage.SuspendControlCodingKeys;
  if (!lazy protocol witness table cache variable for type RemoteControlMessage.SuspendControlCodingKeys and conformance RemoteControlMessage.SuspendControlCodingKeys)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for RemoteControlMessage.SuspendControlCodingKeys, &unk_1E7619F48);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RemoteControlMessage.SuspendControlCodingKeys and conformance RemoteControlMessage.SuspendControlCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type RemoteControlMessage.SuspendControlCodingKeys and conformance RemoteControlMessage.SuspendControlCodingKeys;
  if (!lazy protocol witness table cache variable for type RemoteControlMessage.SuspendControlCodingKeys and conformance RemoteControlMessage.SuspendControlCodingKeys)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for RemoteControlMessage.SuspendControlCodingKeys, &unk_1E7619F48);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RemoteControlMessage.SuspendControlCodingKeys and conformance RemoteControlMessage.SuspendControlCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type RemoteControlMessage.SuspendControlCodingKeys and conformance RemoteControlMessage.SuspendControlCodingKeys;
  if (!lazy protocol witness table cache variable for type RemoteControlMessage.SuspendControlCodingKeys and conformance RemoteControlMessage.SuspendControlCodingKeys)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for RemoteControlMessage.SuspendControlCodingKeys, &unk_1E7619F48);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RemoteControlMessage.SuspendControlCodingKeys and conformance RemoteControlMessage.SuspendControlCodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type RemoteControlMessage.EndControlCodingKeys and conformance RemoteControlMessage.EndControlCodingKeys()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type RemoteControlMessage.EndControlCodingKeys and conformance RemoteControlMessage.EndControlCodingKeys;
  if (!lazy protocol witness table cache variable for type RemoteControlMessage.EndControlCodingKeys and conformance RemoteControlMessage.EndControlCodingKeys)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for RemoteControlMessage.EndControlCodingKeys, &unk_1E7619EB8);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RemoteControlMessage.EndControlCodingKeys and conformance RemoteControlMessage.EndControlCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type RemoteControlMessage.EndControlCodingKeys and conformance RemoteControlMessage.EndControlCodingKeys;
  if (!lazy protocol witness table cache variable for type RemoteControlMessage.EndControlCodingKeys and conformance RemoteControlMessage.EndControlCodingKeys)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for RemoteControlMessage.EndControlCodingKeys, &unk_1E7619EB8);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RemoteControlMessage.EndControlCodingKeys and conformance RemoteControlMessage.EndControlCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type RemoteControlMessage.EndControlCodingKeys and conformance RemoteControlMessage.EndControlCodingKeys;
  if (!lazy protocol witness table cache variable for type RemoteControlMessage.EndControlCodingKeys and conformance RemoteControlMessage.EndControlCodingKeys)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for RemoteControlMessage.EndControlCodingKeys, &unk_1E7619EB8);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RemoteControlMessage.EndControlCodingKeys and conformance RemoteControlMessage.EndControlCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type RemoteControlMessage.EndControlCodingKeys and conformance RemoteControlMessage.EndControlCodingKeys;
  if (!lazy protocol witness table cache variable for type RemoteControlMessage.EndControlCodingKeys and conformance RemoteControlMessage.EndControlCodingKeys)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for RemoteControlMessage.EndControlCodingKeys, &unk_1E7619EB8);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RemoteControlMessage.EndControlCodingKeys and conformance RemoteControlMessage.EndControlCodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type RemoteControlMessage.CancelRequestCodingKeys and conformance RemoteControlMessage.CancelRequestCodingKeys()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type RemoteControlMessage.CancelRequestCodingKeys and conformance RemoteControlMessage.CancelRequestCodingKeys;
  if (!lazy protocol witness table cache variable for type RemoteControlMessage.CancelRequestCodingKeys and conformance RemoteControlMessage.CancelRequestCodingKeys)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for RemoteControlMessage.CancelRequestCodingKeys, &unk_1E7619E28);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RemoteControlMessage.CancelRequestCodingKeys and conformance RemoteControlMessage.CancelRequestCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type RemoteControlMessage.CancelRequestCodingKeys and conformance RemoteControlMessage.CancelRequestCodingKeys;
  if (!lazy protocol witness table cache variable for type RemoteControlMessage.CancelRequestCodingKeys and conformance RemoteControlMessage.CancelRequestCodingKeys)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for RemoteControlMessage.CancelRequestCodingKeys, &unk_1E7619E28);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RemoteControlMessage.CancelRequestCodingKeys and conformance RemoteControlMessage.CancelRequestCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type RemoteControlMessage.CancelRequestCodingKeys and conformance RemoteControlMessage.CancelRequestCodingKeys;
  if (!lazy protocol witness table cache variable for type RemoteControlMessage.CancelRequestCodingKeys and conformance RemoteControlMessage.CancelRequestCodingKeys)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for RemoteControlMessage.CancelRequestCodingKeys, &unk_1E7619E28);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RemoteControlMessage.CancelRequestCodingKeys and conformance RemoteControlMessage.CancelRequestCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type RemoteControlMessage.CancelRequestCodingKeys and conformance RemoteControlMessage.CancelRequestCodingKeys;
  if (!lazy protocol witness table cache variable for type RemoteControlMessage.CancelRequestCodingKeys and conformance RemoteControlMessage.CancelRequestCodingKeys)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for RemoteControlMessage.CancelRequestCodingKeys, &unk_1E7619E28);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RemoteControlMessage.CancelRequestCodingKeys and conformance RemoteControlMessage.CancelRequestCodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type RemoteControlMessage.ResponseCodingKeys and conformance RemoteControlMessage.ResponseCodingKeys()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type RemoteControlMessage.ResponseCodingKeys and conformance RemoteControlMessage.ResponseCodingKeys;
  if (!lazy protocol witness table cache variable for type RemoteControlMessage.ResponseCodingKeys and conformance RemoteControlMessage.ResponseCodingKeys)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for RemoteControlMessage.ResponseCodingKeys, &unk_1E7619D98);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RemoteControlMessage.ResponseCodingKeys and conformance RemoteControlMessage.ResponseCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type RemoteControlMessage.ResponseCodingKeys and conformance RemoteControlMessage.ResponseCodingKeys;
  if (!lazy protocol witness table cache variable for type RemoteControlMessage.ResponseCodingKeys and conformance RemoteControlMessage.ResponseCodingKeys)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for RemoteControlMessage.ResponseCodingKeys, &unk_1E7619D98);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RemoteControlMessage.ResponseCodingKeys and conformance RemoteControlMessage.ResponseCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type RemoteControlMessage.ResponseCodingKeys and conformance RemoteControlMessage.ResponseCodingKeys;
  if (!lazy protocol witness table cache variable for type RemoteControlMessage.ResponseCodingKeys and conformance RemoteControlMessage.ResponseCodingKeys)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for RemoteControlMessage.ResponseCodingKeys, &unk_1E7619D98);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RemoteControlMessage.ResponseCodingKeys and conformance RemoteControlMessage.ResponseCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type RemoteControlMessage.ResponseCodingKeys and conformance RemoteControlMessage.ResponseCodingKeys;
  if (!lazy protocol witness table cache variable for type RemoteControlMessage.ResponseCodingKeys and conformance RemoteControlMessage.ResponseCodingKeys)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for RemoteControlMessage.ResponseCodingKeys, &unk_1E7619D98);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RemoteControlMessage.ResponseCodingKeys and conformance RemoteControlMessage.ResponseCodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type RemoteControlMessage.RequestCodingKeys and conformance RemoteControlMessage.RequestCodingKeys()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type RemoteControlMessage.RequestCodingKeys and conformance RemoteControlMessage.RequestCodingKeys;
  if (!lazy protocol witness table cache variable for type RemoteControlMessage.RequestCodingKeys and conformance RemoteControlMessage.RequestCodingKeys)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for RemoteControlMessage.RequestCodingKeys, &unk_1E7619D08);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RemoteControlMessage.RequestCodingKeys and conformance RemoteControlMessage.RequestCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type RemoteControlMessage.RequestCodingKeys and conformance RemoteControlMessage.RequestCodingKeys;
  if (!lazy protocol witness table cache variable for type RemoteControlMessage.RequestCodingKeys and conformance RemoteControlMessage.RequestCodingKeys)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for RemoteControlMessage.RequestCodingKeys, &unk_1E7619D08);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RemoteControlMessage.RequestCodingKeys and conformance RemoteControlMessage.RequestCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type RemoteControlMessage.RequestCodingKeys and conformance RemoteControlMessage.RequestCodingKeys;
  if (!lazy protocol witness table cache variable for type RemoteControlMessage.RequestCodingKeys and conformance RemoteControlMessage.RequestCodingKeys)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for RemoteControlMessage.RequestCodingKeys, &unk_1E7619D08);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RemoteControlMessage.RequestCodingKeys and conformance RemoteControlMessage.RequestCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type RemoteControlMessage.RequestCodingKeys and conformance RemoteControlMessage.RequestCodingKeys;
  if (!lazy protocol witness table cache variable for type RemoteControlMessage.RequestCodingKeys and conformance RemoteControlMessage.RequestCodingKeys)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for RemoteControlMessage.RequestCodingKeys, &unk_1E7619D08);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RemoteControlMessage.RequestCodingKeys and conformance RemoteControlMessage.RequestCodingKeys);
  }
  return result;
}

uint64_t specialized ArraySlice.subscript.getter(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  if (result < a5)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if ((uint64_t)(a6 >> 1) < result || (uint64_t)(a6 >> 1) < a2)
    goto LABEL_10;
  if (a2 < a5)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if ((a2 & 0x8000000000000000) == 0)
    return swift_unknownObjectRetain();
LABEL_12:
  __break(1u);
  return result;
}

void base witness table accessor for Equatable in RemoteControlRequest()
{
  _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type RemoteControlRequest and conformance RemoteControlRequest, type metadata accessor for RemoteControlRequest, (uint64_t)&protocol conformance descriptor for RemoteControlRequest);
}

void base witness table accessor for Equatable in RemoteControlResponse()
{
  _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type RemoteControlResponse and conformance RemoteControlResponse, type metadata accessor for RemoteControlResponse, (uint64_t)&protocol conformance descriptor for RemoteControlResponse);
}

void base witness table accessor for Equatable in RemoteControlSuspendRequest()
{
  _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type RemoteControlSuspendRequest and conformance RemoteControlSuspendRequest, type metadata accessor for RemoteControlSuspendRequest, (uint64_t)&protocol conformance descriptor for RemoteControlSuspendRequest);
}

void base witness table accessor for Equatable in RemoteControlMessage()
{
  _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type RemoteControlMessage and conformance RemoteControlMessage, type metadata accessor for RemoteControlMessage, (uint64_t)&protocol conformance descriptor for RemoteControlMessage);
}

uint64_t *initializeBufferWithCopyOfBuffer for RemoteControlRequest(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for UUID();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t initializeWithCopy for RemoteControlRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t assignWithCopy for RemoteControlRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for RemoteControlRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for RemoteControlRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for RemoteControlRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BD0C4168(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_44_6();
  if (v5)
  {
    v7 = v4;
    v6 = a1;
  }
  else
  {
    OUTLINED_FUNCTION_33();
    v6 = OUTLINED_FUNCTION_103_0();
  }
  return OUTLINED_FUNCTION_1_16(v6, a2, v7);
}

uint64_t storeEnumTagSinglePayload for RemoteControlRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BD0C41C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_45_7();
  if (v5)
  {
    v7 = v4;
    v6 = a1;
  }
  else
  {
    OUTLINED_FUNCTION_33();
    v6 = OUTLINED_FUNCTION_103_0();
  }
  return OUTLINED_FUNCTION_0_29(v6, a2, a2, v7);
}

uint64_t type metadata completion function for RemoteControlRequest()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for Date();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for RemoteControlResponse(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(_QWORD *, _QWORD *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for UUID();
    v8 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((_QWORD *)((char *)a1 + a3[5]), (_QWORD *)((char *)a2 + a3[5]), v7);
    v9 = a3[6];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  }
  return a1;
}

uint64_t destroy for RemoteControlResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;

  v4 = type metadata accessor for UUID();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + *(int *)(a2 + 20), v4);
  v6 = a1 + *(int *)(a2 + 24);
  v7 = type metadata accessor for Date();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
}

uint64_t initializeWithCopy for RemoteControlResponse(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = type metadata accessor for UUID();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[6];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  return a1;
}

uint64_t assignWithCopy for RemoteControlResponse(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = type metadata accessor for UUID();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[6];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v9, v10, v11);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  return a1;
}

uint64_t initializeWithTake for RemoteControlResponse(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = type metadata accessor for UUID();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[6];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  return a1;
}

uint64_t assignWithTake for RemoteControlResponse(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = type metadata accessor for UUID();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[6];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  return a1;
}

uint64_t getEnumTagSinglePayload for RemoteControlResponse()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1BD0C4690(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_44_6();
  if (v9)
  {
    v7 = v6;
    v8 = a1;
  }
  else
  {
    OUTLINED_FUNCTION_33();
    OUTLINED_FUNCTION_44_6();
    if (!v9)
    {
      OUTLINED_FUNCTION_18();
      return;
    }
    v7 = v10;
    v8 = a1 + *(int *)(a3 + 24);
  }
  OUTLINED_FUNCTION_1_16(v8, a2, v7);
}

uint64_t storeEnumTagSinglePayload for RemoteControlResponse()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1BD0C4724(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;

  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_45_7();
  if (v10)
  {
    v8 = v7;
    v9 = a1;
  }
  else
  {
    OUTLINED_FUNCTION_33();
    OUTLINED_FUNCTION_45_7();
    if (!v10)
    {
      *(_BYTE *)(a1 + *(int *)(a4 + 28)) = a2 + 1;
      OUTLINED_FUNCTION_18();
      return;
    }
    v8 = v11;
    v9 = a1 + *(int *)(a4 + 24);
  }
  OUTLINED_FUNCTION_0_29(v9, a2, a2, v8);
}

uint64_t type metadata completion function for RemoteControlResponse()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for Date();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for RemoteControlSuspendRequest(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for UUID();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  }
  return a1;
}

uint64_t destroy for RemoteControlRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = OUTLINED_FUNCTION_33_0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = OUTLINED_FUNCTION_33();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t initializeWithCopy for RemoteControlSuspendRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t assignWithCopy for RemoteControlSuspendRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t initializeWithTake for RemoteControlSuspendRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t assignWithTake for RemoteControlSuspendRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t getEnumTagSinglePayload for RemoteControlSuspendRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1BD0C4B80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_44_6();
  if (v7)
  {
    v5 = v4;
    v6 = a1;
  }
  else
  {
    OUTLINED_FUNCTION_33();
    OUTLINED_FUNCTION_44_6();
    if (!v7)
    {
      OUTLINED_FUNCTION_18();
      return;
    }
    v6 = OUTLINED_FUNCTION_103_0();
  }
  OUTLINED_FUNCTION_1_16(v6, a2, v5);
}

uint64_t storeEnumTagSinglePayload for RemoteControlSuspendRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1BD0C4BFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_45_7();
  if (v10)
  {
    v8 = v7;
    v9 = a1;
  }
  else
  {
    OUTLINED_FUNCTION_33();
    OUTLINED_FUNCTION_45_7();
    if (!v10)
    {
      *(_BYTE *)(a1 + *(int *)(a4 + 24)) = a2 + 2;
      OUTLINED_FUNCTION_18();
      return;
    }
    v9 = OUTLINED_FUNCTION_103_0();
  }
  OUTLINED_FUNCTION_0_29(v9, a2, a2, v8);
}

uint64_t type metadata completion function for RemoteControlSuspendRequest()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for Date();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for RemoteControlMessage(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(_QWORD *, _QWORD *, uint64_t);
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v7 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v7 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 2u:
      case 3u:
      case 5u:
        v21 = type metadata accessor for UUID();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(a1, a2, v21);
        v22 = *(int *)(type metadata accessor for RemoteControlRequest(0) + 20);
        v23 = (char *)a1 + v22;
        v24 = (char *)a2 + v22;
        v25 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
        goto LABEL_8;
      case 1u:
        v8 = type metadata accessor for UUID();
        v9 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
        v9(a1, a2, v8);
        v10 = (int *)type metadata accessor for RemoteControlResponse(0);
        v9((_QWORD *)((char *)a1 + v10[5]), (_QWORD *)((char *)a2 + v10[5]), v8);
        v11 = v10[6];
        v12 = (char *)a1 + v11;
        v13 = (char *)a2 + v11;
        v14 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
        *((_BYTE *)a1 + v10[7]) = *((_BYTE *)a2 + v10[7]);
        goto LABEL_8;
      case 4u:
        v15 = type metadata accessor for UUID();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a1, a2, v15);
        v16 = type metadata accessor for RemoteControlSuspendRequest(0);
        v17 = *(int *)(v16 + 20);
        v18 = (char *)a1 + v17;
        v19 = (char *)a2 + v17;
        v20 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
        *((_BYTE *)a1 + *(int *)(v16 + 24)) = *((_BYTE *)a2 + *(int *)(v16 + 24));
LABEL_8:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

uint64_t destroy for RemoteControlMessage(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 2:
    case 3:
    case 5:
      v3 = type metadata accessor for UUID();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
      v4 = type metadata accessor for RemoteControlRequest(0);
      goto LABEL_5;
    case 1:
      v5 = type metadata accessor for UUID();
      v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
      v6(a1, v5);
      v7 = type metadata accessor for RemoteControlResponse(0);
      v6(a1 + *(int *)(v7 + 20), v5);
      v8 = *(int *)(v7 + 24);
      goto LABEL_6;
    case 4:
      v9 = type metadata accessor for UUID();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(a1, v9);
      v4 = type metadata accessor for RemoteControlSuspendRequest(0);
LABEL_5:
      v8 = *(int *)(v4 + 20);
LABEL_6:
      v10 = a1 + v8;
      v11 = type metadata accessor for Date();
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
      break;
    default:
      return result;
  }
  return result;
}

_BYTE *initializeWithCopy for RemoteControlMessage(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(_BYTE *, _BYTE *, uint64_t);
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 2u:
    case 3u:
    case 5u:
      v19 = type metadata accessor for UUID();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(a1, a2, v19);
      v20 = *(int *)(type metadata accessor for RemoteControlRequest(0) + 20);
      v21 = &a1[v20];
      v22 = &a2[v20];
      v23 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
      goto LABEL_6;
    case 1u:
      v6 = type metadata accessor for UUID();
      v7 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
      v7(a1, a2, v6);
      v8 = (int *)type metadata accessor for RemoteControlResponse(0);
      v7(&a1[v8[5]], &a2[v8[5]], v6);
      v9 = v8[6];
      v10 = &a1[v9];
      v11 = &a2[v9];
      v12 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
      a1[v8[7]] = a2[v8[7]];
      goto LABEL_6;
    case 4u:
      v13 = type metadata accessor for UUID();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
      v14 = type metadata accessor for RemoteControlSuspendRequest(0);
      v15 = *(int *)(v14 + 20);
      v16 = &a1[v15];
      v17 = &a2[v15];
      v18 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
      a1[*(int *)(v14 + 24)] = a2[*(int *)(v14 + 24)];
LABEL_6:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_BYTE *assignWithCopy for RemoteControlMessage(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(_BYTE *, _BYTE *, uint64_t);
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;

  if (a1 != a2)
  {
    outlined destroy of RemoteControlRequest((uint64_t)a1, type metadata accessor for RemoteControlMessage);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 2u:
      case 3u:
      case 5u:
        v19 = type metadata accessor for UUID();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(a1, a2, v19);
        v20 = *(int *)(type metadata accessor for RemoteControlRequest(0) + 20);
        v21 = &a1[v20];
        v22 = &a2[v20];
        v23 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
        goto LABEL_6;
      case 1u:
        v6 = type metadata accessor for UUID();
        v7 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
        v7(a1, a2, v6);
        v8 = (int *)type metadata accessor for RemoteControlResponse(0);
        v7(&a1[v8[5]], &a2[v8[5]], v6);
        v9 = v8[6];
        v10 = &a1[v9];
        v11 = &a2[v9];
        v12 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
        a1[v8[7]] = a2[v8[7]];
        goto LABEL_6;
      case 4u:
        v13 = type metadata accessor for UUID();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
        v14 = type metadata accessor for RemoteControlSuspendRequest(0);
        v15 = *(int *)(v14 + 20);
        v16 = &a1[v15];
        v17 = &a2[v15];
        v18 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
        a1[*(int *)(v14 + 24)] = a2[*(int *)(v14 + 24)];
LABEL_6:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

_BYTE *initializeWithTake for RemoteControlMessage(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(_BYTE *, _BYTE *, uint64_t);
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 2u:
    case 3u:
    case 5u:
      v19 = type metadata accessor for UUID();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(a1, a2, v19);
      v20 = *(int *)(type metadata accessor for RemoteControlRequest(0) + 20);
      v21 = &a1[v20];
      v22 = &a2[v20];
      v23 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
      goto LABEL_6;
    case 1u:
      v6 = type metadata accessor for UUID();
      v7 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
      v7(a1, a2, v6);
      v8 = (int *)type metadata accessor for RemoteControlResponse(0);
      v7(&a1[v8[5]], &a2[v8[5]], v6);
      v9 = v8[6];
      v10 = &a1[v9];
      v11 = &a2[v9];
      v12 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
      a1[v8[7]] = a2[v8[7]];
      goto LABEL_6;
    case 4u:
      v13 = type metadata accessor for UUID();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a1, a2, v13);
      v14 = type metadata accessor for RemoteControlSuspendRequest(0);
      v15 = *(int *)(v14 + 20);
      v16 = &a1[v15];
      v17 = &a2[v15];
      v18 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
      a1[*(int *)(v14 + 24)] = a2[*(int *)(v14 + 24)];
LABEL_6:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_BYTE *assignWithTake for RemoteControlMessage(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(_BYTE *, _BYTE *, uint64_t);
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;

  if (a1 != a2)
  {
    outlined destroy of RemoteControlRequest((uint64_t)a1, type metadata accessor for RemoteControlMessage);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 2u:
      case 3u:
      case 5u:
        v19 = type metadata accessor for UUID();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(a1, a2, v19);
        v20 = *(int *)(type metadata accessor for RemoteControlRequest(0) + 20);
        v21 = &a1[v20];
        v22 = &a2[v20];
        v23 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
        goto LABEL_6;
      case 1u:
        v6 = type metadata accessor for UUID();
        v7 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
        v7(a1, a2, v6);
        v8 = (int *)type metadata accessor for RemoteControlResponse(0);
        v7(&a1[v8[5]], &a2[v8[5]], v6);
        v9 = v8[6];
        v10 = &a1[v9];
        v11 = &a2[v9];
        v12 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
        a1[v8[7]] = a2[v8[7]];
        goto LABEL_6;
      case 4u:
        v13 = type metadata accessor for UUID();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a1, a2, v13);
        v14 = type metadata accessor for RemoteControlSuspendRequest(0);
        v15 = *(int *)(v14 + 20);
        v16 = &a1[v15];
        v17 = &a2[v15];
        v18 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
        a1[*(int *)(v14 + 24)] = a2[*(int *)(v14 + 24)];
LABEL_6:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t type metadata completion function for RemoteControlMessage()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = type metadata accessor for RemoteControlRequest(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for RemoteControlResponse(319);
    if (v2 <= 0x3F)
    {
      result = type metadata accessor for RemoteControlSuspendRequest(319);
      if (v3 <= 0x3F)
      {
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for RemoteControlMessage.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFA)
  {
    if (a2 + 6 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 6) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 7;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v5 = v6 - 7;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for RemoteControlMessage.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1BD0C5F20 + 4 * byte_1BD6480AC[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1BD0C5F54 + 4 * byte_1BD6480A7[v4]))();
}

uint64_t sub_1BD0C5F54(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD0C5F5C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD0C5F64);
  return result;
}

uint64_t sub_1BD0C5F70(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD0C5F78);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1BD0C5F7C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD0C5F84(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void *type metadata accessor for RemoteControlMessage.CodingKeys()
{
  return &unk_1E7619C78;
}

void *type metadata accessor for RemoteControlMessage.RequestCodingKeys()
{
  return &unk_1E7619D08;
}

void *type metadata accessor for RemoteControlMessage.ResponseCodingKeys()
{
  return &unk_1E7619D98;
}

void *type metadata accessor for RemoteControlMessage.CancelRequestCodingKeys()
{
  return &unk_1E7619E28;
}

void *type metadata accessor for RemoteControlMessage.EndControlCodingKeys()
{
  return &unk_1E7619EB8;
}

void *type metadata accessor for RemoteControlMessage.SuspendControlCodingKeys()
{
  return &unk_1E7619F48;
}

uint64_t storeEnumTagSinglePayload for RemoteControlMessage.RequestCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BD0C6038 + 4 * byte_1BD6480B1[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BD0C6058 + 4 * byte_1BD6480B6[v4]))();
}

_BYTE *sub_1BD0C6038(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BD0C6058(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BD0C6060(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BD0C6068(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BD0C6070(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BD0C6078(_DWORD *result)
{
  *result = 0;
  return result;
}

void *type metadata accessor for RemoteControlMessage.ResumeControlCodingKeys()
{
  return &unk_1E7619FD8;
}

void *type metadata accessor for RemoteControlMessage.PlaybackServerMessageCodingKeys()
{
  return &unk_1E7619FF8;
}

uint64_t storeEnumTagSinglePayload for RemoteControlSuspendRequest.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BD0C60F0 + 4 * byte_1BD6480C0[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BD0C6124 + 4 * byte_1BD6480BB[v4]))();
}

uint64_t sub_1BD0C6124(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD0C612C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD0C6134);
  return result;
}

uint64_t sub_1BD0C6140(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD0C6148);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BD0C614C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD0C6154(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void *type metadata accessor for RemoteControlSuspendRequest.CodingKeys()
{
  return &unk_1E761A088;
}

uint64_t storeEnumTagSinglePayload for RemoteControlResponse.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BD0C61BC + 4 * byte_1BD6480CA[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BD0C61F0 + 4 * byte_1BD6480C5[v4]))();
}

uint64_t sub_1BD0C61F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD0C61F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD0C6200);
  return result;
}

uint64_t sub_1BD0C620C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD0C6214);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BD0C6218(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD0C6220(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void *type metadata accessor for RemoteControlResponse.CodingKeys()
{
  return &unk_1E761A118;
}

uint64_t storeEnumTagSinglePayload for RemoteControlRequest.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BD0C6288 + 4 * byte_1BD6480D4[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BD0C62BC + 4 * byte_1BD6480CF[v4]))();
}

uint64_t sub_1BD0C62BC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD0C62C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD0C62CCLL);
  return result;
}

uint64_t sub_1BD0C62D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD0C62E0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BD0C62E4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD0C62EC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void *type metadata accessor for RemoteControlRequest.CodingKeys()
{
  return &unk_1E761A1A8;
}

uint64_t OUTLINED_FUNCTION_75_5@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 256) + 8))(v2, v1);
}

uint64_t OUTLINED_FUNCTION_89_5()
{
  return dispatch thunk of Hashable.hash(into:)();
}

uint64_t OUTLINED_FUNCTION_93_1()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_103_0()
{
  uint64_t v0;
  uint64_t v1;

  return v0 + *(int *)(v1 + 20);
}

unint64_t OUTLINED_FUNCTION_106_0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 6;
  return lazy protocol witness table accessor for type RemoteControlMessage.PlaybackServerMessageCodingKeys and conformance RemoteControlMessage.PlaybackServerMessageCodingKeys();
}

unint64_t OUTLINED_FUNCTION_109_4()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 67) = 4;
  return lazy protocol witness table accessor for type RemoteControlMessage.SuspendControlCodingKeys and conformance RemoteControlMessage.SuspendControlCodingKeys();
}

uint64_t OUTLINED_FUNCTION_111_2()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_112_2@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, v3, v2);
}

uint64_t TUConversationState.debugDescription.getter(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;

  result = 0x64656E696F6A2ELL;
  switch(a1)
  {
    case 0:
      v3 = 0x69746961772ELL;
      goto LABEL_4;
    case 1:
      result = 0x697261706572702ELL;
      break;
    case 2:
      result = 0x676E696E696F6A2ELL;
      break;
    case 3:
      return result;
    case 4:
      v3 = 0x697661656C2ELL;
LABEL_4:
      result = v3 & 0xFFFFFFFFFFFFLL | 0x676E000000000000;
      break;
    default:
      _StringGuts.grow(_:)(57);
      v4._object = (void *)0x80000001BD671AA0;
      v4._countAndFlagsBits = 0xD000000000000037;
      String.append(_:)(v4);
      v5._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v5);
      swift_bridgeObjectRelease();
      result = _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
      break;
  }
  return result;
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance TUConversationState()
{
  uint64_t *v0;

  return TUConversationState.debugDescription.getter(*v0);
}

uint64_t PeoplePickerViewController.contextMenuConfiguration(for:recipient:)()
{
  return 0;
}

uint64_t PreCallConfirmationService.__allocating_init(callCenter:)(uint64_t a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  return result;
}

uint64_t PreCallConfirmationService.init(callCenter:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return v1;
}

void PreCallConfirmationService.dial(with:)(uint64_t a1)
{
  uint64_t v1;

}

id PreCallConfirmationService.dial(with:)(uint64_t a1)
{
  uint64_t v1;

  return objc_msgSend(*(id *)(v1 + 16), sel_joinConversationWithRequest_, a1);
}

uint64_t PreCallConfirmationService.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t PreCallConfirmationService.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

void protocol witness for PreCallConfirmationServicing.dial(with:) in conformance PreCallConfirmationService(uint64_t a1)
{
  PreCallConfirmationService.dial(with:)(a1);
}

id protocol witness for PreCallConfirmationServicing.dial(with:) in conformance PreCallConfirmationService(uint64_t a1)
{
  return PreCallConfirmationService.dial(with:)(a1);
}

uint64_t dispatch thunk of PreCallConfirmationServicing.dial(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t type metadata accessor for PreCallConfirmationService()
{
  return objc_opt_self();
}

uint64_t method lookup function for PreCallConfirmationService()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PreCallConfirmationService.__allocating_init(callCenter:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t ClarityUIDialerView.isPresented.getter()
{
  uint64_t v0;
  uint64_t v2;

  OUTLINED_FUNCTION_0_50();
  v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<Bool>);
  MEMORY[0x1C3B72860](&v2, v0);
  return v2;
}

uint64_t ClarityUIDialerView.isPresented.setter()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<Bool>);
  return Binding.wrappedValue.setter();
}

void (*ClarityUIDialerView.isPresented.modify(_QWORD *a1))(uint64_t a1)
{
  uint64_t *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = *v1;
  v5 = v1[1];
  v3[4] = *v1;
  v3[5] = v5;
  v6 = *((_BYTE *)v1 + 16);
  *((_BYTE *)v3 + 19) = v6;
  v3[3] = v4;
  *v3 = v4;
  v3[1] = v5;
  *((_BYTE *)v3 + 16) = v6;
  outlined retain of AnyLocation<String>?((uint64_t)(v3 + 3));
  swift_retain();
  v3[6] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<Bool>);
  MEMORY[0x1C3B72860]();
  return ClarityUIDialerView.isPresented.modify;
}

void ClarityUIDialerView.isPresented.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  char v5;

  v1 = *(_QWORD **)a1;
  v2 = *(_QWORD *)a1 + 24;
  v3 = *(_BYTE *)(*(_QWORD *)a1 + 18);
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 40);
  v5 = *(_BYTE *)(*(_QWORD *)a1 + 19);
  *v1 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v1[1] = v4;
  *((_BYTE *)v1 + 16) = v5;
  *((_BYTE *)v1 + 17) = v3;
  Binding.wrappedValue.setter();
  outlined release of Transaction(v2);
  swift_release();
  free(v1);
}

uint64_t outlined release of Transaction(uint64_t a1)
{
  swift_release();
  return a1;
}

uint64_t ClarityUIDialerView.$isPresented.getter()
{
  uint64_t v1;

  OUTLINED_FUNCTION_0_50();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<Bool>);
  Binding.projectedValue.getter();
  return v1;
}

uint64_t ClarityUIDialerView.body.getter()
{
  __int128 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  _OWORD *v10;
  __int128 v11;
  _QWORD v13[24];
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  _BYTE v19[152];
  _BYTE v20[168];
  _BYTE v21[200];

  v1 = type metadata accessor for AccessibilityActionKind();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  static ClarityUIMetrics.standardSpacing.getter();
  v6 = v5;
  v7 = static HorizontalAlignment.center.getter();
  closure #1 in ClarityUIDialerView.body.getter(v0, (uint64_t)v19);
  v20[160] = 0;
  memcpy(&v20[7], v19, 0x92uLL);
  v8 = static Edge.Set.bottom.getter();
  v9 = static SafeAreaRegions.all.getter();
  v13[0] = v7;
  v13[1] = v6;
  LOBYTE(v13[2]) = 0;
  memcpy((char *)&v13[2] + 1, v20, 0x99uLL);
  v13[22] = v9;
  LOBYTE(v13[23]) = v8;
  static AccessibilityActionKind.escape.getter();
  v18 = *(_QWORD *)v0;
  v14 = *(__int128 *)((char *)v0 + 24);
  v15 = *((_QWORD *)v0 + 5);
  v17 = v14;
  outlined init with take of AnyLocation<String>?((uint64_t)&v15, (uint64_t)&v16);
  v10 = (_OWORD *)swift_allocObject();
  v11 = v0[1];
  v10[1] = *v0;
  v10[2] = v11;
  v10[3] = v0[2];
  outlined retain of AnyLocation<String>?((uint64_t)&v18);
  swift_retain();
  outlined retain of String((uint64_t)&v17);
  outlined retain of AnyLocation<String>?((uint64_t)&v16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(ModifiedContent<ModifiedContent<EnteredNumbersView, _PaddingLayout>, _OpacityEffect>, _ConditionalContent<ClarityUIDialerKeypadView, Spacer>)>>, _SafeAreaRegionsIgnoringLayout>);
  lazy protocol witness table accessor for type ModifiedContent<VStack<TupleView<(ModifiedContent<ModifiedContent<EnteredNumbersView, _PaddingLayout>, _OpacityEffect>, _ConditionalContent<ClarityUIDialerKeypadView, Spacer>)>>, _SafeAreaRegionsIgnoringLayout> and conformance <> ModifiedContent<A, B>();
  View.accessibilityAction(_:_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  memcpy(v21, v13, 0xB9uLL);
  return outlined release of ModifiedContent<VStack<TupleView<(ModifiedContent<ModifiedContent<EnteredNumbersView, _PaddingLayout>, _OpacityEffect>, _ConditionalContent<ClarityUIDialerKeypadView, Spacer>)>>, _SafeAreaRegionsIgnoringLayout>((uint64_t)v21);
}

uint64_t closure #1 in ClarityUIDialerView.body.getter@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  double v30;
  char v31;
  uint64_t v32;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE v39[57];
  char v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unsigned __int8 v47;
  char v48;

  *(_OWORD *)v39 = *(__int128 *)((char *)a1 + 24);
  *(_QWORD *)&v39[16] = *((_QWORD *)a1 + 5);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<String>);
  State.projectedValue.getter();
  v4 = v42;
  v37 = *((_QWORD *)&v41 + 1);
  v38 = v41;
  v36 = v43;
  v35 = static Edge.Set.horizontal.getter();
  static ClarityUIMetrics.componentHorizontalPadding.getter();
  EdgeInsets.init(_all:)();
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v41 = *a1;
  LOBYTE(v42) = *((_BYTE *)a1 + 16);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<Bool>);
  MEMORY[0x1C3B72860](v39);
  v14 = v39[0];
  v41 = *a1;
  LOBYTE(v42) = *((_BYTE *)a1 + 16);
  MEMORY[0x1C3B72860](v39, v13);
  if (v39[0] == 1)
  {
    v34 = v4;
    *(_OWORD *)v39 = *(__int128 *)((char *)a1 + 24);
    *(_QWORD *)&v39[16] = *((_QWORD *)a1 + 5);
    State.projectedValue.getter();
    v15 = v41;
    v16 = v42;
    v17 = v43;
    *(_OWORD *)v39 = *a1;
    v39[16] = *((_BYTE *)a1 + 16);
    Binding.projectedValue.getter();
    v18 = v41;
    v19 = v42;
    if (one-time initialization token for shared != -1)
      swift_once();
    *(_QWORD *)v39 = static ClarityUIPreferences.shared;
    *(_OWORD *)&v39[8] = v15;
    *(_QWORD *)&v39[24] = v16;
    *(_QWORD *)&v39[32] = v17;
    *(_OWORD *)&v39[40] = v18;
    v39[56] = v19;
    v40 = 0;
    lazy protocol witness table accessor for type ClarityUIDialerKeypadView and conformance ClarityUIDialerKeypadView();
    swift_retain();
    _ConditionalContent<>.init(storage:)();
    v21 = *((_QWORD *)&v41 + 1);
    v20 = v41;
    v23 = v42;
    v22 = v43;
    v24 = v44;
    v25 = v45;
    v26 = v46;
    v27 = v47;
    v28 = v48;
    v29 = v34;
  }
  else
  {
    *(_OWORD *)v39 = xmmword_1BD6491B0;
    memset(&v39[16], 0, 41);
    v40 = 1;
    lazy protocol witness table accessor for type ClarityUIDialerKeypadView and conformance ClarityUIDialerKeypadView();
    _ConditionalContent<>.init(storage:)();
    v21 = *((_QWORD *)&v41 + 1);
    v20 = v41;
    v23 = v42;
    v22 = v43;
    v24 = v44;
    v25 = v45;
    v26 = v46;
    v27 = v47;
    v28 = v48;
    v29 = v4;
  }
  LOBYTE(v41) = 0;
  v30 = 0.0;
  v39[0] = v28;
  if (v14)
    v30 = 1.0;
  *(_QWORD *)a2 = v38;
  *(_QWORD *)(a2 + 8) = v37;
  *(_QWORD *)(a2 + 16) = v29;
  *(_QWORD *)(a2 + 24) = v36;
  v31 = v28;
  *(_BYTE *)(a2 + 32) = v35;
  *(_QWORD *)(a2 + 40) = v6;
  *(_QWORD *)(a2 + 48) = v8;
  *(_QWORD *)(a2 + 56) = v10;
  *(_QWORD *)(a2 + 64) = v12;
  *(_BYTE *)(a2 + 72) = 0;
  *(double *)(a2 + 80) = v30;
  *(_QWORD *)(a2 + 88) = v20;
  *(_QWORD *)(a2 + 96) = v21;
  *(_QWORD *)(a2 + 104) = v23;
  *(_QWORD *)(a2 + 112) = v22;
  *(_QWORD *)(a2 + 120) = v24;
  *(_QWORD *)(a2 + 128) = v25;
  *(_QWORD *)(a2 + 136) = v26;
  *(_BYTE *)(a2 + 144) = v27;
  *(_BYTE *)(a2 + 145) = v28;
  v32 = v20;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  outlined copy of _ConditionalContent<ClarityUIDialerKeypadView, Spacer>.Storage(v32, v21, v23, v22, v24, v25, v26, v27, v31);
  outlined consume of _ConditionalContent<ClarityUIDialerKeypadView, Spacer>.Storage(v32, v21, v23, v22, v24, v25, v26, v27, v31);
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

uint64_t closure #2 in ClarityUIDialerView.body.getter()
{
  static Animation.default.getter();
  withAnimation<A>(_:_:)();
  return swift_release();
}

uint64_t outlined init with take of AnyLocation<String>?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnyLocation<String>?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BD0C767C()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in ClarityUIDialerView.body.getter()
{
  return closure #2 in ClarityUIDialerView.body.getter();
}

uint64_t outlined retain of AnyLocation<String>?(uint64_t a1)
{
  swift_retain();
  return a1;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<VStack<TupleView<(ModifiedContent<ModifiedContent<EnteredNumbersView, _PaddingLayout>, _OpacityEffect>, _ConditionalContent<ClarityUIDialerKeypadView, Spacer>)>>, _SafeAreaRegionsIgnoringLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<VStack<TupleView<(ModifiedContent<ModifiedContent<EnteredNumbersView, _PaddingLayout>, _OpacityEffect>, _ConditionalContent<ClarityUIDialerKeypadView, Spacer>)>>, _SafeAreaRegionsIgnoringLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<VStack<TupleView<(ModifiedContent<ModifiedContent<EnteredNumbersView, _PaddingLayout>, _OpacityEffect>, _ConditionalContent<ClarityUIDialerKeypadView, Spacer>)>>, _SafeAreaRegionsIgnoringLayout> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(ModifiedContent<ModifiedContent<EnteredNumbersView, _PaddingLayout>, _OpacityEffect>, _ConditionalContent<ClarityUIDialerKeypadView, Spacer>)>>, _SafeAreaRegionsIgnoringLayout>);
    v2[0] = lazy protocol witness table accessor for type VStack<TupleView<(ModifiedContent<ModifiedContent<EnteredNumbersView, _PaddingLayout>, _OpacityEffect>, _ConditionalContent<ClarityUIDialerKeypadView, Spacer>)>> and conformance VStack<A>();
    v2[1] = MEMORY[0x1E0CDCF90];
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<VStack<TupleView<(ModifiedContent<ModifiedContent<EnteredNumbersView, _PaddingLayout>, _OpacityEffect>, _ConditionalContent<ClarityUIDialerKeypadView, Spacer>)>>, _SafeAreaRegionsIgnoringLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type VStack<TupleView<(ModifiedContent<ModifiedContent<EnteredNumbersView, _PaddingLayout>, _OpacityEffect>, _ConditionalContent<ClarityUIDialerKeypadView, Spacer>)>> and conformance VStack<A>()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type VStack<TupleView<(ModifiedContent<ModifiedContent<EnteredNumbersView, _PaddingLayout>, _OpacityEffect>, _ConditionalContent<ClarityUIDialerKeypadView, Spacer>)>> and conformance VStack<A>;
  if (!lazy protocol witness table cache variable for type VStack<TupleView<(ModifiedContent<ModifiedContent<EnteredNumbersView, _PaddingLayout>, _OpacityEffect>, _ConditionalContent<ClarityUIDialerKeypadView, Spacer>)>> and conformance VStack<A>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<ModifiedContent<EnteredNumbersView, _PaddingLayout>, _OpacityEffect>, _ConditionalContent<ClarityUIDialerKeypadView, Spacer>)>>);
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDFCC0], v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type VStack<TupleView<(ModifiedContent<ModifiedContent<EnteredNumbersView, _PaddingLayout>, _OpacityEffect>, _ConditionalContent<ClarityUIDialerKeypadView, Spacer>)>> and conformance VStack<A>);
  }
  return result;
}

uint64_t outlined release of ModifiedContent<VStack<TupleView<(ModifiedContent<ModifiedContent<EnteredNumbersView, _PaddingLayout>, _OpacityEffect>, _ConditionalContent<ClarityUIDialerKeypadView, Spacer>)>>, _SafeAreaRegionsIgnoringLayout>(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  v2 = *(_QWORD *)(a1 + 128);
  v10 = *(_QWORD *)(a1 + 120);
  v11 = *(_QWORD *)(a1 + 112);
  v3 = *(_QWORD *)(a1 + 136);
  v4 = *(_QWORD *)(a1 + 144);
  v5 = *(_QWORD *)(a1 + 152);
  v6 = *(_QWORD *)(a1 + 160);
  v7 = *(_BYTE *)(a1 + 169);
  v8 = *(unsigned __int8 *)(a1 + 168);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  outlined consume of _ConditionalContent<ClarityUIDialerKeypadView, Spacer>.Storage(v11, v10, v2, v3, v4, v5, v6, v8, v7);
  return a1;
}

uint64_t outlined consume of _ConditionalContent<ClarityUIDialerKeypadView, Spacer>.Storage(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  uint64_t result;

  if ((a9 & 1) == 0)
  {
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t closure #1 in closure #2 in ClarityUIDialerView.body.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<Bool>);
  return Binding.wrappedValue.setter();
}

__n128 ClarityUIDialerView.init(isPresented:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  __n128 result;
  __n128 v9;
  uint64_t v10;

  State.init(wrappedValue:)();
  result = v9;
  *(_QWORD *)a4 = a1;
  *(_QWORD *)(a4 + 8) = a2;
  *(_BYTE *)(a4 + 16) = a3;
  *(__n128 *)(a4 + 24) = v9;
  *(_QWORD *)(a4 + 40) = v10;
  return result;
}

uint64_t associated type witness table accessor for View.Body : View in ClarityUIDialerView()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t protocol witness for View.body.getter in conformance ClarityUIDialerView()
{
  return ClarityUIDialerView.body.getter();
}

uint64_t sub_1BD0C79C8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = ClarityUIDialerView.isPresented.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1BD0C79F4()
{
  return ClarityUIDialerView.isPresented.setter();
}

uint64_t destroy for ClarityUIDialerView()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for ClarityUIDialerView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ClarityUIDialerView(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for ClarityUIDialerView(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ClarityUIDialerView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 48))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ClarityUIDialerView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ClarityUIDialerView()
{
  return &type metadata for ClarityUIDialerView;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<ModifiedContent<EnteredNumbersView, _PaddingLayout>, _OpacityEffect>, _ConditionalContent<ClarityUIDialerKeypadView, Spacer>)>>, _SafeAreaRegionsIgnoringLayout>, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<ModifiedContent<EnteredNumbersView, _PaddingLayout>, _OpacityEffect>, _ConditionalContent<ClarityUIDialerKeypadView, Spacer>)>>, _SafeAreaRegionsIgnoringLayout>, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<ModifiedContent<EnteredNumbersView, _PaddingLayout>, _OpacityEffect>, _ConditionalContent<ClarityUIDialerKeypadView, Spacer>)>>, _SafeAreaRegionsIgnoringLayout>, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<ModifiedContent<EnteredNumbersView, _PaddingLayout>, _OpacityEffect>, _ConditionalContent<ClarityUIDialerKeypadView, Spacer>)>>, _SafeAreaRegionsIgnoringLayout>, AccessibilityAttachmentModifier>);
    v2[0] = lazy protocol witness table accessor for type ModifiedContent<VStack<TupleView<(ModifiedContent<ModifiedContent<EnteredNumbersView, _PaddingLayout>, _OpacityEffect>, _ConditionalContent<ClarityUIDialerKeypadView, Spacer>)>>, _SafeAreaRegionsIgnoringLayout> and conformance <> ModifiedContent<A, B>();
    v2[1] = lazy protocol witness table accessor for type AccessibilityAttachmentModifier and conformance AccessibilityAttachmentModifier();
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<ModifiedContent<EnteredNumbersView, _PaddingLayout>, _OpacityEffect>, _ConditionalContent<ClarityUIDialerKeypadView, Spacer>)>>, _SafeAreaRegionsIgnoringLayout>, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type AccessibilityAttachmentModifier and conformance AccessibilityAttachmentModifier()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type AccessibilityAttachmentModifier and conformance AccessibilityAttachmentModifier;
  if (!lazy protocol witness table cache variable for type AccessibilityAttachmentModifier and conformance AccessibilityAttachmentModifier)
  {
    v1 = type metadata accessor for AccessibilityAttachmentModifier();
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDCFB8], v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AccessibilityAttachmentModifier and conformance AccessibilityAttachmentModifier);
  }
  return result;
}

uint64_t partial apply for closure #1 in closure #2 in ClarityUIDialerView.body.getter()
{
  return closure #1 in closure #2 in ClarityUIDialerView.body.getter();
}

unint64_t lazy protocol witness table accessor for type ClarityUIDialerKeypadView and conformance ClarityUIDialerKeypadView()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ClarityUIDialerKeypadView and conformance ClarityUIDialerKeypadView;
  if (!lazy protocol witness table cache variable for type ClarityUIDialerKeypadView and conformance ClarityUIDialerKeypadView)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ClarityUIDialerKeypadView, &type metadata for ClarityUIDialerKeypadView);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ClarityUIDialerKeypadView and conformance ClarityUIDialerKeypadView);
  }
  return result;
}

uint64_t outlined copy of _ConditionalContent<ClarityUIDialerKeypadView, Spacer>.Storage(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  uint64_t result;

  if ((a9 & 1) == 0)
  {
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t specialized Sequence.forEach(_:)(unint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  void *v11;

  if (a1 >> 62)
    goto LABEL_11;
  v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v6; v6 = _CocoaArrayWrapper.endIndex.getter())
  {
    v7 = 4;
    while (1)
    {
      v8 = (a1 & 0xC000000000000001) != 0
         ? (_QWORD *)MEMORY[0x1C3B73D18](v7 - 4, a1)
         : *(id *)(a1 + 8 * v7);
      v9 = v8;
      v10 = v7 - 3;
      if (__OFADD__(v7 - 4, 1))
        break;
      v11 = (void *)CABasicAnimation.animationCopy()();
      (*(void (**)(void *, uint64_t, uint64_t))((*MEMORY[0x1E0DEEDD8] & *v9) + 0x60))(v11, a3, a4);

      ++v7;
      if (v10 == v6)
        goto LABEL_9;
    }
    __break(1u);
LABEL_11:
    swift_bridgeObjectRetain();
  }
LABEL_9:

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

{
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  Swift::String v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;

  if (a1 >> 62)
    goto LABEL_14;
  v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v6; v6 = _CocoaArrayWrapper.endIndex.getter())
  {
    v7 = 4;
    while (1)
    {
      v8 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1C3B73D18](v7 - 4, a1) : *(id *)(a1 + 8 * v7);
      v9 = v8;
      v10 = v7 - 3;
      if (__OFADD__(v7 - 4, 1))
        break;
      swift_bridgeObjectRetain();
      v11._countAndFlagsBits = 45;
      v11._object = (void *)0xE100000000000000;
      String.append(_:)(v11);
      outlined bridged method (pb) of @objc CAPropertyAnimation.keyPath.getter(v9);
      if (v12)
      {
        v13 = String.init<A>(reflecting:)();
        v15 = v14;
      }
      else
      {
        v15 = 0xE300000000000000;
        v13 = 7104878;
      }
      v16 = v15;
      String.append(_:)(*(Swift::String *)&v13);
      swift_bridgeObjectRelease();
      outlined bridged method (mnbnn) of @objc CALayer.add(_:forKey:)((uint64_t)v9, a3, a4, a2);

      ++v7;
      if (v10 == v6)
        goto LABEL_15;
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
  }
LABEL_15:

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void CAFilter.__allocating_init(type:)(uint64_t a1, uint64_t a2)
{
  id v4;
  void *v5;
  uint64_t v6;

  v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v5 = (void *)MEMORY[0x1C3B72E00](a1, a2);
  v6 = swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_59_2(v6, sel_initWithType_);

  OUTLINED_FUNCTION_18();
}

void AudioVisualizationLayer.color.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  id v5;

  v3 = (void **)(v1 + OBJC_IVAR____TtC15ConversationKit23AudioVisualizationLayer_color);
  OUTLINED_FUNCTION_2_0();
  v4 = *v3;
  *v3 = a1;
  v5 = a1;

  AudioVisualizationLayer.color.didset();
}

Swift::Void __swiftcall AudioVisualizationLayer.startAnimation()()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = OBJC_IVAR____TtC15ConversationKit23AudioVisualizationLayer_isAnimating;
  if ((v0[OBJC_IVAR____TtC15ConversationKit23AudioVisualizationLayer_isAnimating] & 1) != 0)
  {
    OUTLINED_FUNCTION_0();
  }
  else
  {
    if (one-time initialization token for shared != -1)
      swift_once();
    specialized PlatformDisplayLink.add(observer:)((uint64_t)v0, static PlatformDisplayLink.shared);
    v0[v1] = 1;
    objc_msgSend(v0, sel_setMasksToBounds_, 0);
  }
}

Swift::Void __swiftcall AudioVisualizationLayer.stopAnimation()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = OBJC_IVAR____TtC15ConversationKit23AudioVisualizationLayer_isAnimating;
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC15ConversationKit23AudioVisualizationLayer_isAnimating) == 1)
  {
    if (one-time initialization token for shared != -1)
      swift_once();
    specialized PlatformDisplayLink.remove(observer:)(v0, static PlatformDisplayLink.shared);
    *(_BYTE *)(v0 + v1) = 0;
  }
  OUTLINED_FUNCTION_0();
}

float AudioVisualizationLayer.scale.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit23AudioVisualizationLayer_scale;
  OUTLINED_FUNCTION_2_0();
  return *(float *)v1;
}

uint64_t AudioVisualizationLayer.scale.setter(float a1)
{
  uint64_t v1;
  float *v3;
  uint64_t result;

  v3 = (float *)(v1 + OBJC_IVAR____TtC15ConversationKit23AudioVisualizationLayer_scale);
  result = OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  return result;
}

void AudioVisualizationLayer.scale.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void *AudioVisualizationLayer.color.getter()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;

  v1 = (void **)(v0 + OBJC_IVAR____TtC15ConversationKit23AudioVisualizationLayer_color);
  OUTLINED_FUNCTION_2_0();
  v2 = *v1;
  v3 = v2;
  return v2;
}

id key path getter for AudioVisualizationLayer.color : AudioVisualizationLayer@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  void **v3;
  void *v4;

  v3 = (void **)(*a1 + OBJC_IVAR____TtC15ConversationKit23AudioVisualizationLayer_color);
  swift_beginAccess();
  v4 = *v3;
  *a2 = *v3;
  return v4;
}

void key path setter for AudioVisualizationLayer.color : AudioVisualizationLayer(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  AudioVisualizationLayer.color.setter(v1);
}

uint64_t AudioVisualizationLayer.color.didset()
{
  char **v0;
  unint64_t v1;
  uint64_t v2;
  char **i;
  id *v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  id v9;
  char **v10;
  char **v12;

  v1 = *(unint64_t *)((char *)v0 + OBJC_IVAR____TtC15ConversationKit23AudioVisualizationLayer_rings);
  if (v1 >> 62)
    goto LABEL_14;
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  for (i = v0; v2; v2 = _CocoaArrayWrapper.endIndex.getter())
  {
    v12 = v0;
    v4 = (id *)((char *)v0 + OBJC_IVAR____TtC15ConversationKit23AudioVisualizationLayer_color);
    swift_beginAccess();
    v5 = 4;
    v0 = &selRef_associatedAppBundleIdentifier;
    while (1)
    {
      v6 = (v1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1C3B73D18](v5 - 4, v1) : *(id *)(v1 + 8 * v5);
      v7 = v6;
      v8 = v5 - 3;
      if (__OFADD__(v5 - 4, 1))
        break;
      if (*v4)
        v9 = objc_msgSend(*v4, sel_CGColor, v12);
      else
        v9 = 0;
      objc_msgSend(v7, sel_setBorderColor_, v9, v12);

      ++v5;
      if (v8 == v2)
      {

        goto LABEL_16;
      }
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain_n();
    v10 = v0;
  }

LABEL_16:
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void AudioVisualizationLayer.color.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void AudioVisualizationLayer.color.modify(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    AudioVisualizationLayer.color.didset();
  OUTLINED_FUNCTION_0();
}

id AudioVisualizationLayer.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void AudioVisualizationLayer.init()()
{
  _BYTE *v0;
  objc_class *v1;
  unint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  float v8;
  id v9;
  uint64_t v10;
  objc_class *v11;
  uint64_t v12;
  objc_class *v13;
  Swift::Int v14;
  Swift::Int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  void **v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  void *v30;
  objc_class *v31;
  unint64_t v32;
  objc_class *v33;
  uint64_t v34;
  uint64_t v35;
  objc_super v36;
  uint64_t v37;

  v1 = (objc_class *)OUTLINED_FUNCTION_15_6();
  v0[OBJC_IVAR____TtC15ConversationKit23AudioVisualizationLayer_isAnimating] = 0;
  *(_DWORD *)&v0[OBJC_IVAR____TtC15ConversationKit23AudioVisualizationLayer_scale] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit23AudioVisualizationLayer_color] = 0;
  v2 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Float?);
  v3 = static Array._allocateBufferUninitialized(minimumCapacity:)();
  *(_QWORD *)(v3 + 16) = 24;
  *(_DWORD *)(v3 + 32) = 0;
  *(_BYTE *)(v3 + 36) = 1;
  *(_DWORD *)(v3 + 40) = 0;
  *(_BYTE *)(v3 + 44) = 1;
  *(_DWORD *)(v3 + 48) = 0;
  *(_BYTE *)(v3 + 52) = 1;
  *(_DWORD *)(v3 + 56) = 0;
  *(_BYTE *)(v3 + 60) = 1;
  *(_DWORD *)(v3 + 64) = 0;
  *(_BYTE *)(v3 + 68) = 1;
  *(_DWORD *)(v3 + 72) = 0;
  *(_BYTE *)(v3 + 76) = 1;
  *(_DWORD *)(v3 + 80) = 0;
  *(_BYTE *)(v3 + 84) = 1;
  *(_DWORD *)(v3 + 88) = 0;
  *(_BYTE *)(v3 + 92) = 1;
  *(_DWORD *)(v3 + 96) = 0;
  *(_BYTE *)(v3 + 100) = 1;
  *(_DWORD *)(v3 + 104) = 0;
  *(_BYTE *)(v3 + 108) = 1;
  *(_DWORD *)(v3 + 112) = 0;
  *(_BYTE *)(v3 + 116) = 1;
  *(_DWORD *)(v3 + 120) = 0;
  *(_BYTE *)(v3 + 124) = 1;
  *(_DWORD *)(v3 + 128) = 0;
  *(_BYTE *)(v3 + 132) = 1;
  *(_DWORD *)(v3 + 136) = 0;
  *(_BYTE *)(v3 + 140) = 1;
  *(_DWORD *)(v3 + 144) = 0;
  *(_BYTE *)(v3 + 148) = 1;
  *(_DWORD *)(v3 + 152) = 0;
  *(_BYTE *)(v3 + 156) = 1;
  *(_DWORD *)(v3 + 160) = 0;
  *(_BYTE *)(v3 + 164) = 1;
  *(_DWORD *)(v3 + 168) = 0;
  *(_BYTE *)(v3 + 172) = 1;
  *(_DWORD *)(v3 + 176) = 0;
  *(_BYTE *)(v3 + 180) = 1;
  *(_DWORD *)(v3 + 184) = 0;
  *(_BYTE *)(v3 + 188) = 1;
  *(_DWORD *)(v3 + 192) = 0;
  *(_BYTE *)(v3 + 196) = 1;
  *(_DWORD *)(v3 + 200) = 0;
  *(_BYTE *)(v3 + 204) = 1;
  *(_DWORD *)(v3 + 208) = 0;
  *(_BYTE *)(v3 + 212) = 1;
  *(_DWORD *)(v3 + 216) = 0;
  *(_BYTE *)(v3 + 220) = 1;
  v4 = (char *)(v2 + OBJC_IVAR____TtC15ConversationKit23AudioVisualizationLayer_scaleBuffer);
  *(_QWORD *)v4 = v3;
  *(_OWORD *)(v4 + 8) = xmmword_1BD649240;
  v37 = MEMORY[0x1E0DEE9D8];
  v5 = 5;
  specialized ContiguousArray.reserveCapacity(_:)();
  v6 = 0;
  v7 = 0;
  do
  {
    if (v7)
      goto LABEL_29;
    v8 = powf(0.75, (float)v6);
    v9 = objc_allocWithZone((Class)type metadata accessor for AudioVisualizationRingLayer());
    AudioVisualizationRingLayer.init(opacityMultiple:)(v8);
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
    specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized ContiguousArray._endMutation()();
    v10 = 0;
    v7 = v6 == 4;
    if (v6 != 4)
    {
      v10 = v6 + 1;
      if (__OFADD__(v6, 1))
      {
        __break(1u);
        goto LABEL_23;
      }
    }
    v6 = v10;
    --v5;
  }
  while (v5);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC15ConversationKit23AudioVisualizationLayer_rings) = v37;

  v36.receiver = (id)v2;
  v36.super_class = v1;
  v11 = (objc_class *)objc_msgSendSuper2(&v36, sel_init);
  v1 = v11;
  v2 = *(_QWORD *)((char *)v11 + OBJC_IVAR____TtC15ConversationKit23AudioVisualizationLayer_rings);
  v5 = v2 >> 62;
  if (v2 >> 62)
  {
LABEL_23:
    v33 = v1;
    OUTLINED_FUNCTION_25_2();
    v12 = OUTLINED_FUNCTION_25_3();
    OUTLINED_FUNCTION_53();
    if (v12 < 1)
      goto LABEL_30;
    OUTLINED_FUNCTION_25_2();
    v34 = OUTLINED_FUNCTION_25_3();
    OUTLINED_FUNCTION_53();
    if (v34 < 1)
      goto LABEL_31;
    OUTLINED_FUNCTION_25_2();
    v35 = OUTLINED_FUNCTION_25_3();
    OUTLINED_FUNCTION_53();
    if (v35 >= v12)
      goto LABEL_9;
    __break(1u);
    goto LABEL_27;
  }
  v12 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v12)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v13 = v11;
LABEL_9:
  if ((v2 & 0xC000000000000001) != 0 && v12 != 1)
  {
    v14 = 1;
    do
    {
      v15 = v14 + 1;
      _ArrayBuffer._typeCheckSlowPath(_:)(v14);
      v14 = v15;
    }
    while (v12 != v15);
  }
  if (v5)
  {
    OUTLINED_FUNCTION_25_2();
    _CocoaArrayWrapper.subscript.getter();
    v16 = v18;
    v17 = v19;
    v21 = v20;
    OUTLINED_FUNCTION_53();
    v12 = v21 >> 1;
  }
  else
  {
    v16 = (v2 & 0xFFFFFFFFFFFFFF8) + 32;
    OUTLINED_FUNCTION_25_2();
    v17 = 1;
  }
  if (v12 == v17)
  {
LABEL_21:
    OUTLINED_FUNCTION_113();
    v31 = v1;
    v32 = swift_bridgeObjectRetain();
    specialized Sequence.forEach(_:)(v32, v31);

    swift_bridgeObjectRelease();
    return;
  }
  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for CAFilter);
  v22 = v12 - v17;
  if (v12 > v17)
  {
    swift_unknownObjectRetain();
    v23 = (void **)(v16 + 8 * v17);
    do
    {
      v24 = *v23++;
      v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v27 = v26;
      v28 = v24;
      CAFilter.__allocating_init(type:)(v25, v27);
      v30 = v29;
      objc_msgSend(v28, sel_setCompositingFilter_, v29);

      --v22;
    }
    while (v22);
    OUTLINED_FUNCTION_113();
    goto LABEL_21;
  }
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
}

void AudioVisualizationLayer.__allocating_init(layer:)()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_16_1();
  __swift_project_boxed_opaque_existential_1(v0, v0[3]);
  v1 = _bridgeAnythingToObjectiveC<A>(_:)();
  OUTLINED_FUNCTION_59_2(v1, sel_initWithLayer_);
  OUTLINED_FUNCTION_113();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v0);
  OUTLINED_FUNCTION_18();
}

uint64_t AudioVisualizationLayer.init(layer:)(uint64_t a1)
{
  _BYTE *v1;
  objc_class *v3;
  char *v4;
  char *v5;
  char *v6;
  char *v7;
  __int128 v8;
  __objc2_class **p_superclass;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  __objc2_class *v15;
  id v16;
  uint64_t result;
  objc_class *v18;
  objc_super v19;
  __objc2_class *v20;
  char *v21;
  _QWORD v22[4];

  v3 = (objc_class *)OUTLINED_FUNCTION_15_6();
  v1[OBJC_IVAR____TtC15ConversationKit23AudioVisualizationLayer_isAnimating] = 0;
  *(_DWORD *)&v1[OBJC_IVAR____TtC15ConversationKit23AudioVisualizationLayer_scale] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit23AudioVisualizationLayer_color] = 0;
  outlined init with copy of Any(a1, (uint64_t)v22);
  v4 = v1;
  if (!swift_dynamicCast())
    goto LABEL_15;
  v5 = v21;
  v6 = &v21[OBJC_IVAR____TtC15ConversationKit23AudioVisualizationLayer_scaleBuffer];
  OUTLINED_FUNCTION_2_0();
  v7 = &v4[OBJC_IVAR____TtC15ConversationKit23AudioVisualizationLayer_scaleBuffer];
  v8 = *(_OWORD *)(v6 + 8);
  *(_QWORD *)v7 = *(_QWORD *)v6;
  *(_OWORD *)(v7 + 8) = v8;
  p_superclass = &OBJC_METACLASS____TtC15ConversationKit23ConversationDetailsView.superclass;
  v10 = *(_QWORD *)&v5[OBJC_IVAR____TtC15ConversationKit23AudioVisualizationLayer_rings];
  if (v10 >> 62)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11 = OUTLINED_FUNCTION_25_3();
    if (v11)
      goto LABEL_4;
LABEL_12:
    swift_bridgeObjectRelease();
    v15 = (__objc2_class *)MEMORY[0x1E0DEE9D8];
LABEL_13:
    *(__objc2_class **)((char *)&p_superclass[385]->isa + (_QWORD)v4) = v15;

    v19.receiver = v4;
    v19.super_class = v3;
    v16 = objc_msgSendSuper2(&v19, sel_initWithLayer_, v5);
    objc_msgSend(v16, sel_setAllowsGroupBlending_, 0);

    __swift_destroy_boxed_opaque_existential_1(a1);
    return (uint64_t)v16;
  }
  v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v11)
    goto LABEL_12;
LABEL_4:
  v20 = (__objc2_class *)MEMORY[0x1E0DEE9D8];
  specialized ContiguousArray.reserveCapacity(_:)();
  if ((v11 & 0x8000000000000000) == 0)
  {
    v18 = v3;
    v12 = type metadata accessor for AudioVisualizationRingLayer();
    v13 = 0;
    do
    {
      if ((v10 & 0xC000000000000001) != 0)
        v14 = (id)MEMORY[0x1C3B73D18](v13, v10);
      else
        v14 = *(id *)(v10 + 8 * v13 + 32);
      ++v13;
      v22[3] = v12;
      v22[0] = v14;
      AudioVisualizationRingLayer.__allocating_init(layer:)();
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
    }
    while (v11 != v13);
    v15 = v20;
    swift_bridgeObjectRelease();
    v3 = v18;
    p_superclass = (__objc2_class **)(&OBJC_METACLASS____TtC15ConversationKit23ConversationDetailsView + 8);
    goto LABEL_13;
  }
  __break(1u);
LABEL_15:
  result = OUTLINED_FUNCTION_5_36();
  __break(1u);
  return result;
}

id AudioVisualizationLayer.__allocating_init(coder:)()
{
  void *v0;
  id v1;

  v1 = objc_msgSend(OUTLINED_FUNCTION_16_1(), sel_initWithCoder_, v0);

  return v1;
}

void AudioVisualizationLayer.init(coder:)()
{
  _BYTE *v0;

  v0[OBJC_IVAR____TtC15ConversationKit23AudioVisualizationLayer_isAnimating] = 0;
  *(_DWORD *)&v0[OBJC_IVAR____TtC15ConversationKit23AudioVisualizationLayer_scale] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit23AudioVisualizationLayer_color] = 0;

  OUTLINED_FUNCTION_5_36();
  __break(1u);
}

id AudioVisualizationLayer.__deallocating_deinit()
{
  void *v0;
  objc_class *v1;
  objc_super v3;

  v1 = (objc_class *)OUTLINED_FUNCTION_15_6();
  AudioVisualizationLayer.stopAnimation()();
  v3.receiver = v0;
  v3.super_class = v1;
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

id AudioVisualizationLayer.bounds.getter()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)OUTLINED_FUNCTION_15_6();
  return objc_msgSendSuper2(&v2, sel_bounds);
}

void AudioVisualizationLayer.bounds.setter(double a1, double a2, double a3, double a4)
{
  void *v4;
  id v9;
  objc_super v10;

  v10.receiver = v4;
  v10.super_class = (Class)OUTLINED_FUNCTION_15_6();
  objc_msgSendSuper2(&v10, sel_setBounds_, a1, a2, a3, a4);
  v9 = v4;
  specialized CALayer.withoutActions(_:)((uint64_t)v9, v9);
}

void (*AudioVisualizationLayer.bounds.modify(objc_super **a1))(double **a1, char a2)
{
  void *v1;
  objc_super *v3;
  uint64_t v4;
  void *v5;
  objc_class *v6;
  void *v7;
  objc_class *v8;

  v3 = (objc_super *)malloc(0x60uLL);
  *a1 = v3;
  v3[5].receiver = v1;
  v4 = OUTLINED_FUNCTION_15_6();
  v3[5].super_class = (Class)v4;
  v3[2].receiver = v1;
  v3[2].super_class = (Class)v4;
  objc_msgSendSuper2(v3 + 2, sel_bounds);
  v3->receiver = v5;
  v3->super_class = v6;
  v3[1].receiver = v7;
  v3[1].super_class = v8;
  return AudioVisualizationLayer.bounds.modify;
}

void AudioVisualizationLayer.bounds.modify(double **a1, char a2)
{
  double *v2;
  double v3;
  double v4;
  double v5;
  double v6;
  objc_class *v7;
  void *v8;
  objc_super *v9;
  id v10;

  v2 = *a1;
  v3 = **a1;
  v4 = (*a1)[1];
  v5 = (*a1)[2];
  v6 = (*a1)[3];
  v8 = (void *)*((_QWORD *)*a1 + 10);
  v7 = (objc_class *)*((_QWORD *)*a1 + 11);
  v9 = (objc_super *)*a1;
  if ((a2 & 1) != 0)
  {
    v9[3].receiver = v8;
    v9[3].super_class = v7;
    objc_msgSendSuper2(v9 + 3, sel_setBounds_, v3, v4, v5, v6);
  }
  else
  {
    v9[4].receiver = v8;
    v9[4].super_class = v7;
    objc_msgSendSuper2(v9 + 4, sel_setBounds_, v3, v4, v5, v6);
    v10 = v8;
    specialized CALayer.withoutActions(_:)((uint64_t)v10, v10);
  }
  free(v2);
}

Swift::Void __swiftcall AudioVisualizationLayer.add(_:forKey:)(CAAnimation _, Swift::String_optional forKey)
{
  void *v2;
  void *v3;
  void *attr;
  Class isa;
  objc_class *v6;
  uint64_t v7;
  void *v8;
  objc_class *v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  objc_class *v14;
  unint64_t v15;
  objc_super v16;

  v3 = *(void **)&_._flags;
  attr = _._attr;
  isa = _.super.isa;
  v6 = (objc_class *)OUTLINED_FUNCTION_15_6();
  objc_opt_self();
  v7 = swift_dynamicCastObjCClass();
  if (!v7)
  {
LABEL_9:
    if (v3)
      OUTLINED_FUNCTION_13_35();
    goto LABEL_15;
  }
  v8 = (void *)v7;
  v9 = isa;
  v10 = outlined bridged method (ob) of @objc CAPropertyAnimation.keyPath.getter(v8);
  if (!v11)
  {
LABEL_8:

    goto LABEL_9;
  }
  if (v10 == 0x732E73646E756F62 && v11 == 0xEB00000000657A69)
  {
    OUTLINED_FUNCTION_25();
  }
  else
  {
    v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
    OUTLINED_FUNCTION_25();
    if ((v13 & 1) == 0)
      goto LABEL_8;
  }
  if (v3)
  {
    v14 = v9;
    OUTLINED_FUNCTION_25_2();
    v15 = swift_bridgeObjectRetain();
    specialized Sequence.forEach(_:)(v15, v8, (uint64_t)attr, (uint64_t)v3);
    OUTLINED_FUNCTION_25();

    OUTLINED_FUNCTION_13_35();
  }

LABEL_15:
  v16.receiver = v2;
  v16.super_class = v6;
  objc_msgSendSuper2(&v16, sel_addAnimation_forKey_, isa, v3);

}

Swift::Void __swiftcall AudioVisualizationLayer.displayLinkCallback(framesPerSecond:)(Swift::Int framesPerSecond)
{
  char *v1;
  unint64_t v2;
  id v4;
  float *v5;
  float v6;
  char *v7;
  char v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  id v12;
  void *v13;
  Swift::Int v14;
  uint64_t v15;
  BOOL v16;
  Swift::Int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  float v23;
  float v24;
  float v25;
  CGFloat v26;
  float v27;
  id v28;
  double v29;
  CATransform3D v30;

  v2 = (unint64_t)v1;
  v4 = objc_msgSend(v1, sel_superlayer);

  if (v4)
  {
    v5 = (float *)&v1[OBJC_IVAR____TtC15ConversationKit23AudioVisualizationLayer_scale];
    OUTLINED_FUNCTION_2_0();
    v6 = *v5;
    v7 = &v1[OBJC_IVAR____TtC15ConversationKit23AudioVisualizationLayer_scaleBuffer];
    OUTLINED_FUNCTION_2_0();
    specialized CircularBuffer.push(_:)(v6);
    swift_endAccess();
    if (one-time initialization token for shared != -1)
      goto LABEL_38;
    while (1)
    {
      v8 = (*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 576))();
      v2 = *(_QWORD *)(v2 + OBJC_IVAR____TtC15ConversationKit23AudioVisualizationLayer_rings);
      if (v2 >> 62)
      {
        swift_bridgeObjectRetain();
        v9 = _CocoaArrayWrapper.endIndex.getter();
        if (!v9)
        {
LABEL_31:
          swift_bridgeObjectRelease();
          return;
        }
      }
      else
      {
        v9 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v9)
          goto LABEL_31;
      }
      v10 = round((double)framesPerSecond * -0.025);
      if ((~*(_QWORD *)&v10 & 0x7FF0000000000000) == 0)
        break;
      if (v10 <= -9.22337204e18)
        goto LABEL_42;
      if (v10 >= 9.22337204e18)
        goto LABEL_43;
      if (v9 < 1)
        goto LABEL_44;
      framesPerSecond = 0;
      v11 = (uint64_t)v10;
      while (1)
      {
        v12 = (v2 & 0xC000000000000001) != 0
            ? (id)MEMORY[0x1C3B73D18](framesPerSecond, v2)
            : *(id *)(v2 + 8 * framesPerSecond + 32);
        v13 = v12;
        v14 = framesPerSecond * v11;
        if ((unsigned __int128)(framesPerSecond * (__int128)v11) >> 64 != (framesPerSecond * v11) >> 63)
          break;
        v15 = *((_QWORD *)v7 + 1);
        v16 = __OFADD__(v15, v14);
        v17 = v15 + v14;
        if (v16)
          goto LABEL_34;
        v18 = *((_QWORD *)v7 + 2);
        v16 = __OFADD__(v17, v18);
        v19 = v17 + v18;
        if (v16)
          goto LABEL_35;
        if (!v18)
          goto LABEL_36;
        if (v18 == -1 && v19 == 0x8000000000000000)
          goto LABEL_37;
        v21 = v19 % v18;
        if (v21 >= 1 && (unint64_t)v21 < *(_QWORD *)(*(_QWORD *)v7 + 16))
        {
          v22 = *(_QWORD *)v7 + 8 * v21;
          if ((*(_BYTE *)(v22 + 36) & 1) == 0)
          {
            v23 = *(float *)(v22 + 32);
            if ((v8 & 1) != 0)
            {
              v24 = 1.0;
              v25 = 0.0;
              if (v23 <= 0.5)
                v24 = powf(v23 + v23, 3.0);
              v23 = 0.35;
            }
            else
            {
              v25 = 0.35;
              v24 = *(float *)(v22 + 32);
            }
            v26 = (float)((float)(v23 * 0.64) + 0.98);
            v27 = v25 + (float)((float)(1.0 - v25) * v24);
            v28 = v13;
            CATransform3DMakeScale(&v30, v26, v26, 1.0);
            objc_msgSend(v28, sel_setTransform_, &v30);

            *(float *)&v29 = v27;
            objc_msgSend(v28, sel_setOpacity_, v29);
          }
        }
        ++framesPerSecond;

        if (v9 == framesPerSecond)
          goto LABEL_31;
      }
      __break(1u);
LABEL_34:
      __break(1u);
LABEL_35:
      __break(1u);
LABEL_36:
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      swift_once();
    }
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
  }
}

void specialized CircularBuffer.push(_:)(float a1)
{
  uint64_t *v1;
  unint64_t v2;
  float v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = v1[1];
  v5 = __OFADD__(v4, 1);
  v6 = v4 + 1;
  if (v5)
  {
    __break(1u);
    goto LABEL_12;
  }
  v7 = v1[2];
  if (!v7)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v6 == 0x8000000000000000 && v7 == -1)
    goto LABEL_16;
  v3 = a1;
  v2 = v6 % v7;
  v1[1] = v6 % v7;
  v9 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
  {
    if ((v2 & 0x8000000000000000) == 0)
      goto LABEL_9;
    goto LABEL_14;
  }
LABEL_13:
  specialized _ArrayBuffer._consumeAndCreateNew()();
  v9 = v11;
  if ((v2 & 0x8000000000000000) == 0)
  {
LABEL_9:
    if (v2 < *(_QWORD *)(v9 + 16))
    {
      v10 = v9 + 8 * v2;
      *(float *)(v10 + 32) = v3;
      *(_BYTE *)(v10 + 36) = 0;
      *v1 = v9;
      return;
    }
    goto LABEL_15;
  }
LABEL_14:
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
}

uint64_t outlined bridged method (ob) of @objc CAPropertyAnimation.keyPath.getter(void *a1)
{
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(a1, sel_keyPath);

  if (!v2)
    return 0;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

void specialized PlatformDisplayLink.remove(observer:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  char v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v32;
  uint64_t v33;
  _BYTE v34[24];
  __int128 v35;
  _BYTE v36[16];

  v4 = type metadata accessor for DispatchPredicate();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (uint64_t *)&v34[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v7 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DEF740], v4);
  v8 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) == 0)
  {
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  v9 = (uint64_t *)(a2 + 32);
  swift_beginAccess();
  v10 = *(_QWORD *)(a2 + 32);
  v11 = *(_QWORD *)(v10 + 16);
  if (v11)
  {
    v12 = v10 + 32;
    swift_bridgeObjectRetain_n();
    while (1)
    {
      outlined init with copy of WeakPlatformDisplayLinkObserver(v12, (uint64_t)v36);
      v13 = MEMORY[0x1C3B752C0](v36);
      if (v13)
      {
        v14 = v13;
        swift_unknownObjectRelease();
        if (v14 == a1)
          break;
      }
      outlined destroy of WeakPlatformDisplayLinkObserver((uint64_t)v36);
      v12 += 16;
      if (!--v11)
      {
        swift_bridgeObjectRelease();
        goto LABEL_9;
      }
    }
    swift_bridgeObjectRelease();
    outlined init with take of WeakPlatformDisplayLinkObserver((uint64_t)v36, (uint64_t)&v35);
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_9:
    v35 = xmmword_1BD6491B0;
  }
  swift_bridgeObjectRelease();
  v15 = v35;
  v16 = outlined destroy of WeakPlatformDisplayLinkObserver?((uint64_t)&v35);
  if (v15 != __PAIR128__(1, 0))
  {
    MEMORY[0x1E0C80A78](v16);
    *(&v33 - 2) = a1;
    *(&v33 - 1) = (uint64_t)&protocol witness table for AudioVisualizationLayer;
    swift_beginAccess();
    specialized MutableCollection._halfStablePartition(isSuffixElement:)(partial apply for closure #2 in PlatformDisplayLink.remove(observer:));
    if (*(_QWORD *)(*v9 + 16) >= v17)
    {
      specialized Array.replaceSubrange<A>(_:with:)();
      v18 = *v9;
      v19 = *(_QWORD *)(*v9 + 16);
      if (v19)
      {
        swift_bridgeObjectRetain();
        v20 = 0;
        v21 = 48;
        while (1)
        {
          outlined init with copy of WeakPlatformDisplayLinkObserver(v18 + v21 - 16, (uint64_t)v36);
          v22 = MEMORY[0x1C3B752C0](v36);
          swift_unknownObjectRelease();
          outlined destroy of WeakPlatformDisplayLinkObserver((uint64_t)v36);
          if (!v22)
            break;
          ++v20;
          v21 += 16;
          if (v19 == v20)
          {
            swift_bridgeObjectRelease();
            v23 = *(_QWORD *)(*v9 + 16);
            v20 = v19;
            goto LABEL_21;
          }
        }
        swift_bridgeObjectRelease();
        v23 = v20 + 1;
        if (__OFADD__(v20, 1))
          goto LABEL_51;
        v24 = *v9;
        v25 = *(_QWORD *)(*v9 + 16);
        if (v23 != v25)
        {
          v26 = v20 + 1;
          while (v26 < v25)
          {
            outlined init with copy of WeakPlatformDisplayLinkObserver(v24 + v21, (uint64_t)v36);
            v27 = MEMORY[0x1C3B752C0](v36);
            swift_unknownObjectRelease();
            outlined destroy of WeakPlatformDisplayLinkObserver((uint64_t)v36);
            if (v27)
            {
              if (v26 != v20)
              {
                if ((v20 & 0x8000000000000000) != 0)
                  goto LABEL_44;
                v28 = *v9;
                v29 = *(_QWORD *)(*v9 + 16);
                if (v20 >= v29)
                  goto LABEL_45;
                outlined init with copy of WeakPlatformDisplayLinkObserver(v28 + 16 * v20 + 32, (uint64_t)v36);
                if (v26 >= v29)
                  goto LABEL_46;
                outlined init with copy of WeakPlatformDisplayLinkObserver(v28 + v21, (uint64_t)v34);
                isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                *v9 = v28;
                if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                {
                  specialized _ArrayBuffer._consumeAndCreateNew()();
                  v28 = v32;
                  *v9 = v32;
                }
                if (v20 >= *(_QWORD *)(v28 + 16))
                  goto LABEL_47;
                outlined assign with take of WeakPlatformDisplayLinkObserver((uint64_t)v34, v28 + 16 * v20 + 32);
                if (v26 >= *(_QWORD *)(*v9 + 16))
                  goto LABEL_48;
                outlined assign with take of WeakPlatformDisplayLinkObserver((uint64_t)v36, *v9 + v21);
              }
              if (__OFADD__(v20++, 1))
                goto LABEL_42;
            }
            v23 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_41;
            v24 = *v9;
            v25 = *(_QWORD *)(*v9 + 16);
            ++v26;
            v21 += 16;
            if (v23 == v25)
              goto LABEL_21;
          }
          __break(1u);
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          goto LABEL_43;
        }
LABEL_21:
        if (v23 < (uint64_t)v20)
          goto LABEL_50;
      }
      specialized Array.replaceSubrange<A>(_:with:)();
      swift_endAccess();
      PlatformDisplayLink.cancelIfNecessary()();
      return;
    }
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
  }
}

